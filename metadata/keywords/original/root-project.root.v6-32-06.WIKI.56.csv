id,quality_attribute,keyword,matched_word,match_idx,sentence,source,filename,author,repo,version,wiki,url
https://root.cern/doc/master/classTFriendElement.html:7575,Integrability,message,message,7575,"ssue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class shou",MatchSource.WIKI,doc/master/classTFriendElement.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFriendElement.html
https://root.cern/doc/master/classTFriendElement.html:10574,Integrability,message,message,10574,"is method must be overridden if a class wants to paint itself. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t",MatchSource.WIKI,doc/master/classTFriendElement.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFriendElement.html
https://root.cern/doc/master/classTFriendElement.html:10947,Integrability,message,message,10947," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  G",MatchSource.WIKI,doc/master/classTFriendElement.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFriendElement.html
https://root.cern/doc/master/classTFriendElement.html:500,Modifiability,variab,variable,500,". ROOT: TFriendElement Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; Friends |; List of all members ; TFriendElement Class ReferenceTree Library. ; A TFriendElement TF describes a TTree object TF in a file. ; When a TFriendElement TF is added to the list of friends of an existing TTree T, any variable from TF can be referenced in a query to T.; To add a TFriendElement to an existing TTree T, do: T.AddFriend(""friendTreename"",""friendTreeFile"");; See TTree::AddFriend for more information. ; Definition at line 33 of file TFriendElement.h. Public Types; enum  EStatusBits { kFromChain = (1ULL << ( 9 )); , kUpdated = (1ULL << ( 10 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TFriendElement ();  Default constructor for a friend element. ;  ;  TFriendElement (TTree *tree, const char *treename, const char *filename);  Create a friend element. ;  ;  TFriendElement (TTree *tree, const char *treename, TFile *file);  Create a friend element. ;  ;  TFriendElement (TTree *tree, TTree *friendtree, const char *alias);  Create a friend element. ;  ;  ~TFriendElement () override;  Destructor. Disconnect from the owning tree if needed. ;  ; virtual TTree * Connect (); ",MatchSource.WIKI,doc/master/classTFriendElement.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFriendElement.html
https://root.cern/doc/master/classTFriendElement.html:862,Modifiability,inherit,inherited,862,". ROOT: TFriendElement Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; Friends |; List of all members ; TFriendElement Class ReferenceTree Library. ; A TFriendElement TF describes a TTree object TF in a file. ; When a TFriendElement TF is added to the list of friends of an existing TTree T, any variable from TF can be referenced in a query to T.; To add a TFriendElement to an existing TTree T, do: T.AddFriend(""friendTreename"",""friendTreeFile"");; See TTree::AddFriend for more information. ; Definition at line 33 of file TFriendElement.h. Public Types; enum  EStatusBits { kFromChain = (1ULL << ( 9 )); , kUpdated = (1ULL << ( 10 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TFriendElement ();  Default constructor for a friend element. ;  ;  TFriendElement (TTree *tree, const char *treename, const char *filename);  Create a friend element. ;  ;  TFriendElement (TTree *tree, const char *treename, TFile *file);  Create a friend element. ;  ;  TFriendElement (TTree *tree, TTree *friendtree, const char *alias);  Create a friend element. ;  ;  ~TFriendElement () override;  Destructor. Disconnect from the owning tree if needed. ;  ; virtual TTree * Connect (); ",MatchSource.WIKI,doc/master/classTFriendElement.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFriendElement.html
https://root.cern/doc/master/classTFriendElement.html:2841,Modifiability,inherit,inherited,2841,"friend element. ;  ;  ~TFriendElement () override;  Destructor. Disconnect from the owning tree if needed. ;  ; virtual TTree * Connect ();  Connect file and return TTree. ;  ; virtual TTree * DisConnect ();  DisConnect file and TTree. ;  ; virtual TFile * GetFile ();  Return pointer to TFile containing this friend TTree. ;  ; virtual TTree * GetParentTree () const;  ; virtual TTree * GetTree ();  Return pointer to friend TTree. ;  ; virtual const char * GetTreeName () const;  Get the actual TTree name of the friend. ;  ; TClass * IsA () const override;  ; bool IsUpdated () const;  ; void ls (Option_t *option="""") const override;  List this friend element. ;  ; void MarkUpdated ();  ; void RecursiveRemove (TObject *obj) override;  Forget deleted elements. ;  ; void Reset ();  ; void ResetUpdated ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;",MatchSource.WIKI,doc/master/classTFriendElement.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFriendElement.html
https://root.cern/doc/master/classTFriendElement.html:4581,Modifiability,inherit,inherited,4581,"ide;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw",MatchSource.WIKI,doc/master/classTFriendElement.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFriendElement.html
https://root.cern/doc/master/classTFriendElement.html:5674,Modifiability,inherit,inheritance,5674,"  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTFriendElement.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFriendElement.html
https://root.cern/doc/master/classTFriendElement.html:7673,Modifiability,inherit,inherits,7673,"e) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is",MatchSource.WIKI,doc/master/classTFriendElement.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFriendElement.html
https://root.cern/doc/master/classTFriendElement.html:7790,Modifiability,inherit,inherits,7790,"t be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base ",MatchSource.WIKI,doc/master/classTFriendElement.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFriendElement.html
https://root.cern/doc/master/classTFriendElement.html:11448,Modifiability,inherit,inherited,11448,"stem error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TFriendElement (const TFriendElement &)=delete;  ; TFriendElement & operator= (const TFriendElement &)=delete;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TFile * fFile;  ! pointer to the file contai",MatchSource.WIKI,doc/master/classTFriendElement.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFriendElement.html
https://root.cern/doc/master/classTFriendElement.html:11658,Modifiability,inherit,inherited,11658,"stem error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TFriendElement (const TFriendElement &)=delete;  ; TFriendElement & operator= (const TFriendElement &)=delete;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TFile * fFile;  ! pointer to the file contai",MatchSource.WIKI,doc/master/classTFriendElement.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFriendElement.html
https://root.cern/doc/master/classTFriendElement.html:12315,Modifiability,inherit,inherited,12315,"r * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TFriendElement (const TFriendElement &)=delete;  ; TFriendElement & operator= (const TFriendElement &)=delete;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TFile * fFile;  ! pointer to the file containing the friend TTree ;  ; bool fOwnFile;  true if file is managed by this class ;  ; TTree * fParentTree;  ! pointer to the parent TTree ;  ; TTree * fTree;  ! pointer to the TTree described by this element ;  ; TString fTreeName;  name of the friend TTree ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Friends; void TFriendElement__SetTree (TTree *tree, TList *frlist);  Set the fTree member for all friend elements. ;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TFriendElement.h>. Inheritance diagram for TFriendElement:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [le",MatchSource.WIKI,doc/master/classTFriendElement.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFriendElement.html
https://root.cern/doc/master/classTFriendElement.html:12849,Modifiability,inherit,inherited,12849,"s ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TFriendElement (const TFriendElement &)=delete;  ; TFriendElement & operator= (const TFriendElement &)=delete;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TFile * fFile;  ! pointer to the file containing the friend TTree ;  ; bool fOwnFile;  true if file is managed by this class ;  ; TTree * fParentTree;  ! pointer to the parent TTree ;  ; TTree * fTree;  ! pointer to the TTree described by this element ;  ; TString fTreeName;  name of the friend TTree ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Friends; void TFriendElement__SetTree (TTree *tree, TList *frlist);  Set the fTree member for all friend elements. ;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TFriendElement.h>. Inheritance diagram for TFriendElement:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EStatusBits. enum TFriendElement::EStatusBits. EnumeratorkFromChain ; kUpdated . Definition at line 48 of file TFriendElement.h. Constructor & Destructor Documentation. ◆ TFriendElement() [1/5]. TFriendElement::TFriendElement ; (; const TFriendElement & ; ). protecteddelete . ◆ TFriendElement() [2/5]. TFriendElement::TFriendElement ; (; ). Default cons",MatchSource.WIKI,doc/master/classTFriendElement.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFriendElement.html
https://root.cern/doc/master/classTFriendElement.html:13076,Modifiability,inherit,inherited,13076,"urn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TFriendElement (const TFriendElement &)=delete;  ; TFriendElement & operator= (const TFriendElement &)=delete;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TFile * fFile;  ! pointer to the file containing the friend TTree ;  ; bool fOwnFile;  true if file is managed by this class ;  ; TTree * fParentTree;  ! pointer to the parent TTree ;  ; TTree * fTree;  ! pointer to the TTree described by this element ;  ; TString fTreeName;  name of the friend TTree ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Friends; void TFriendElement__SetTree (TTree *tree, TList *frlist);  Set the fTree member for all friend elements. ;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TFriendElement.h>. Inheritance diagram for TFriendElement:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EStatusBits. enum TFriendElement::EStatusBits. EnumeratorkFromChain ; kUpdated . Definition at line 48 of file TFriendElement.h. Constructor & Destructor Documentation. ◆ TFriendElement() [1/5]. TFriendElement::TFriendElement ; (; const TFriendElement & ; ). protecteddelete . ◆ TFriendElement() [2/5]. TFriendElement::TFriendElement ; (; ). Default constructor for a friend element. ; Definition at line 38 of file TFriendElement.cxx. ◆ TFriendElement() [3/5]. TFriendElement::TFriendElement ; (; TTree * ; tree, . const char * ; treename, . const char * ; filename . ). Create a friend element. ; If treename is of the form ""a=b"", an alias called ""a"" is created for treename = ""b"" by default the alias name is the name of the tree. ; De",MatchSource.WIKI,doc/master/classTFriendElement.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFriendElement.html
https://root.cern/doc/master/classTFriendElement.html:3709,Security,hash,hash,3709," override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;",MatchSource.WIKI,doc/master/classTFriendElement.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFriendElement.html
https://root.cern/doc/master/classTFTP.html:5834,Availability,error,error,5834,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTFTP.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFTP.html
https://root.cern/doc/master/classTFTP.html:5923,Availability,error,error,5923,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTFTP.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFTP.html
https://root.cern/doc/master/classTFTP.html:6078,Availability,error,error,6078,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTFTP.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFTP.html
https://root.cern/doc/master/classTFTP.html:6375,Availability,error,error,6375,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTFTP.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFTP.html
https://root.cern/doc/master/classTFTP.html:10710,Availability,error,error,10710,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_",MatchSource.WIKI,doc/master/classTFTP.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFTP.html
https://root.cern/doc/master/classTFTP.html:12343,Availability,error,error,12343,"ize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TFTP ();  ;  TFTP (const TFTP &)=delete;  ; void Init (const char *url, Int_t parallel, Int_t wsize);  Set up the actual connection. ;  ; void operator= (const TFTP &)=delete;  ; void PrintError (const char *where, Int_t err) const;  Print error string depending on error code. ;  ; Int_t Recv (Int_t &status, EMessageTypes &kind) const;  Return status from rootd server and message kind. ;  ; void SetMode (Int_t mode);  . Private Attributes; Int_t fBlockSize;  ; Long64_t fBytesRead;  ; Long64_t fBytesWrite;  connection to rootd ;  ; TString fCurrentFile;  ; Bool_t fDir;  ; TString fHost;  ; Int_t fLastBlock;  ; Int_t fMode;  ; Int_t fParallel;  ; Int_t fPort;  ; Int_t fProtocol;  ; Long64_t fRestartAt;  ; TSocket * fSocket;  ; TString fUser;  ; Int_t fWindowSize;  . Static Private Attributes; static Long64_t fgBytesRead = 0;  ; static Long64_t fgBytesWrite = 0;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #",MatchSource.WIKI,doc/master/classTFTP.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFTP.html
https://root.cern/doc/master/classTFTP.html:12369,Availability,error,error,12369,"ize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TFTP ();  ;  TFTP (const TFTP &)=delete;  ; void Init (const char *url, Int_t parallel, Int_t wsize);  Set up the actual connection. ;  ; void operator= (const TFTP &)=delete;  ; void PrintError (const char *where, Int_t err) const;  Print error string depending on error code. ;  ; Int_t Recv (Int_t &status, EMessageTypes &kind) const;  Return status from rootd server and message kind. ;  ; void SetMode (Int_t mode);  . Private Attributes; Int_t fBlockSize;  ; Long64_t fBytesRead;  ; Long64_t fBytesWrite;  connection to rootd ;  ; TString fCurrentFile;  ; Bool_t fDir;  ; TString fHost;  ; Int_t fLastBlock;  ; Int_t fMode;  ; Int_t fParallel;  ; Int_t fPort;  ; Int_t fProtocol;  ; Long64_t fRestartAt;  ; TSocket * fSocket;  ; TString fUser;  ; Int_t fWindowSize;  . Static Private Attributes; static Long64_t fgBytesRead = 0;  ; static Long64_t fgBytesWrite = 0;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #",MatchSource.WIKI,doc/master/classTFTP.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFTP.html
https://root.cern/doc/master/classTFTP.html:15637,Availability,echo,echoed,15637,"* ; path, . EAccessMode ; mode = kFileExists, . Bool_t ; print = kFALSE . ). Returns kFALSE if one can access a file using the specified access mode. ; Mode is the same as for the Unix access(2) function. Attention, bizarre convention of return value!! ; Definition at line 1111 of file TFTP.cxx. ◆ Ascii(). void TFTP::Ascii ; (; ). inline . Definition at line 107 of file TFTP.h. ◆ ascii(). void TFTP::ascii ; (; ). inline . Definition at line 123 of file TFTP.h. ◆ bin(). void TFTP::bin ; (; ). inline . Definition at line 122 of file TFTP.h. ◆ Binary(). void TFTP::Binary ; (; ). inline . Definition at line 106 of file TFTP.h. ◆ bye(). void TFTP::bye ; (; ). inline . Definition at line 121 of file TFTP.h. ◆ cd(). void TFTP::cd ; (; const char * ; dir); const. inline . Definition at line 113 of file TFTP.h. ◆ ChangeDirectory(). Int_t TFTP::ChangeDirectory ; (; const char * ; dir); const. Change the remote directory. ; If the remote directory contains a .message file and it is < 1024 characters then the contents is echoed back. Returns 0 in case of success and -1 in case of failure. ; Definition at line 628 of file TFTP.cxx. ◆ ChangePermission(). Int_t TFTP::ChangePermission ; (; const char * ; file, . Int_t ; mode . ); const. Change permissions of a remote file. ; Anonymous users may not chnage permissions. Returns 0 in case of success and -1 in case of failure. ; Definition at line 853 of file TFTP.cxx. ◆ chmod(). void TFTP::chmod ; (; const char * ; file, . Int_t ; mode . ); const. inline . Definition at line 120 of file TFTP.h. ◆ Class(). static TClass * TFTP::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TFTP::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TFTP::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 125 of file TFTP.h. ◆ Close(). Int_t TFTP::Close ; (; ). Close ftp connection. ; Returns 0 in case of succes",MatchSource.WIKI,doc/master/classTFTP.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFTP.html
https://root.cern/doc/master/classTFTP.html:15697,Availability,failure,failure,15697,"kFALSE . ). Returns kFALSE if one can access a file using the specified access mode. ; Mode is the same as for the Unix access(2) function. Attention, bizarre convention of return value!! ; Definition at line 1111 of file TFTP.cxx. ◆ Ascii(). void TFTP::Ascii ; (; ). inline . Definition at line 107 of file TFTP.h. ◆ ascii(). void TFTP::ascii ; (; ). inline . Definition at line 123 of file TFTP.h. ◆ bin(). void TFTP::bin ; (; ). inline . Definition at line 122 of file TFTP.h. ◆ Binary(). void TFTP::Binary ; (; ). inline . Definition at line 106 of file TFTP.h. ◆ bye(). void TFTP::bye ; (; ). inline . Definition at line 121 of file TFTP.h. ◆ cd(). void TFTP::cd ; (; const char * ; dir); const. inline . Definition at line 113 of file TFTP.h. ◆ ChangeDirectory(). Int_t TFTP::ChangeDirectory ; (; const char * ; dir); const. Change the remote directory. ; If the remote directory contains a .message file and it is < 1024 characters then the contents is echoed back. Returns 0 in case of success and -1 in case of failure. ; Definition at line 628 of file TFTP.cxx. ◆ ChangePermission(). Int_t TFTP::ChangePermission ; (; const char * ; file, . Int_t ; mode . ); const. Change permissions of a remote file. ; Anonymous users may not chnage permissions. Returns 0 in case of success and -1 in case of failure. ; Definition at line 853 of file TFTP.cxx. ◆ chmod(). void TFTP::chmod ; (; const char * ; file, . Int_t ; mode . ); const. inline . Definition at line 120 of file TFTP.h. ◆ Class(). static TClass * TFTP::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TFTP::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TFTP::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 125 of file TFTP.h. ◆ Close(). Int_t TFTP::Close ; (; ). Close ftp connection. ; Returns 0 in case of success and -1 in case of failure. ; Definition at line 884 of file TFT",MatchSource.WIKI,doc/master/classTFTP.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFTP.html
https://root.cern/doc/master/classTFTP.html:15983,Availability,failure,failure,15983,"n at line 107 of file TFTP.h. ◆ ascii(). void TFTP::ascii ; (; ). inline . Definition at line 123 of file TFTP.h. ◆ bin(). void TFTP::bin ; (; ). inline . Definition at line 122 of file TFTP.h. ◆ Binary(). void TFTP::Binary ; (; ). inline . Definition at line 106 of file TFTP.h. ◆ bye(). void TFTP::bye ; (; ). inline . Definition at line 121 of file TFTP.h. ◆ cd(). void TFTP::cd ; (; const char * ; dir); const. inline . Definition at line 113 of file TFTP.h. ◆ ChangeDirectory(). Int_t TFTP::ChangeDirectory ; (; const char * ; dir); const. Change the remote directory. ; If the remote directory contains a .message file and it is < 1024 characters then the contents is echoed back. Returns 0 in case of success and -1 in case of failure. ; Definition at line 628 of file TFTP.cxx. ◆ ChangePermission(). Int_t TFTP::ChangePermission ; (; const char * ; file, . Int_t ; mode . ); const. Change permissions of a remote file. ; Anonymous users may not chnage permissions. Returns 0 in case of success and -1 in case of failure. ; Definition at line 853 of file TFTP.cxx. ◆ chmod(). void TFTP::chmod ; (; const char * ; file, . Int_t ; mode . ); const. inline . Definition at line 120 of file TFTP.h. ◆ Class(). static TClass * TFTP::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TFTP::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TFTP::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 125 of file TFTP.h. ◆ Close(). Int_t TFTP::Close ; (; ). Close ftp connection. ; Returns 0 in case of success and -1 in case of failure. ; Definition at line 884 of file TFTP.cxx. ◆ DeclFileName(). static const char * TFTP::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 125 of file TFTP.h. ◆ DeleteDirectory(). Int_t TFTP::DeleteDirectory ; (; const char * ; dir); const. Delete a remote dir",MatchSource.WIKI,doc/master/classTFTP.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFTP.html
https://root.cern/doc/master/classTFTP.html:16632,Availability,failure,failure,16632,"ters then the contents is echoed back. Returns 0 in case of success and -1 in case of failure. ; Definition at line 628 of file TFTP.cxx. ◆ ChangePermission(). Int_t TFTP::ChangePermission ; (; const char * ; file, . Int_t ; mode . ); const. Change permissions of a remote file. ; Anonymous users may not chnage permissions. Returns 0 in case of success and -1 in case of failure. ; Definition at line 853 of file TFTP.cxx. ◆ chmod(). void TFTP::chmod ; (; const char * ; file, . Int_t ; mode . ); const. inline . Definition at line 120 of file TFTP.h. ◆ Class(). static TClass * TFTP::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TFTP::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TFTP::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 125 of file TFTP.h. ◆ Close(). Int_t TFTP::Close ; (; ). Close ftp connection. ; Returns 0 in case of success and -1 in case of failure. ; Definition at line 884 of file TFTP.cxx. ◆ DeclFileName(). static const char * TFTP::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 125 of file TFTP.h. ◆ DeleteDirectory(). Int_t TFTP::DeleteDirectory ; (; const char * ; dir); const. Delete a remote directory. ; Anonymous users may not delete directories. Returns 0 in case of success and -1 in case of failure. ; Definition at line 702 of file TFTP.cxx. ◆ DeleteFile(). Int_t TFTP::DeleteFile ; (; const char * ; file); const. Delete a remote file. ; Anonymous users may not delete files. Returns 0 in case of success and -1 in case of failure. ; Definition at line 821 of file TFTP.cxx. ◆ FreeDirectory(). void TFTP::FreeDirectory ; (; Bool_t ; print = kFALSE). Free a remotely open directory via rootd. ; Definition at line 956 of file TFTP.cxx. ◆ get(). void TFTP::get ; (; const char * ; file, . const char * ; localName = nullptr . ). inline . ",MatchSource.WIKI,doc/master/classTFTP.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFTP.html
https://root.cern/doc/master/classTFTP.html:17064,Availability,failure,failure,17064,". void TFTP::chmod ; (; const char * ; file, . Int_t ; mode . ); const. inline . Definition at line 120 of file TFTP.h. ◆ Class(). static TClass * TFTP::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TFTP::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TFTP::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 125 of file TFTP.h. ◆ Close(). Int_t TFTP::Close ; (; ). Close ftp connection. ; Returns 0 in case of success and -1 in case of failure. ; Definition at line 884 of file TFTP.cxx. ◆ DeclFileName(). static const char * TFTP::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 125 of file TFTP.h. ◆ DeleteDirectory(). Int_t TFTP::DeleteDirectory ; (; const char * ; dir); const. Delete a remote directory. ; Anonymous users may not delete directories. Returns 0 in case of success and -1 in case of failure. ; Definition at line 702 of file TFTP.cxx. ◆ DeleteFile(). Int_t TFTP::DeleteFile ; (; const char * ; file); const. Delete a remote file. ; Anonymous users may not delete files. Returns 0 in case of success and -1 in case of failure. ; Definition at line 821 of file TFTP.cxx. ◆ FreeDirectory(). void TFTP::FreeDirectory ; (; Bool_t ; print = kFALSE). Free a remotely open directory via rootd. ; Definition at line 956 of file TFTP.cxx. ◆ get(). void TFTP::get ; (; const char * ; file, . const char * ; localName = nullptr . ). inline . Definition at line 112 of file TFTP.h. ◆ GetBlockSize(). Int_t TFTP::GetBlockSize ; (; ); const. inline . Definition at line 80 of file TFTP.h. ◆ GetDirEntry(). const char * TFTP::GetDirEntry ; (; Bool_t ; print = kFALSE). Get directory entry via rootd. ; Returns 0 in case no more entries or in case of error. ; Definition at line 988 of file TFTP.cxx. ◆ GetFile(). Long64_t TFTP::GetFile ; (; const char * ; file, . const char * ; ",MatchSource.WIKI,doc/master/classTFTP.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFTP.html
https://root.cern/doc/master/classTFTP.html:17298,Availability,failure,failure,17298,"ic const char * TFTP::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TFTP::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 125 of file TFTP.h. ◆ Close(). Int_t TFTP::Close ; (; ). Close ftp connection. ; Returns 0 in case of success and -1 in case of failure. ; Definition at line 884 of file TFTP.cxx. ◆ DeclFileName(). static const char * TFTP::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 125 of file TFTP.h. ◆ DeleteDirectory(). Int_t TFTP::DeleteDirectory ; (; const char * ; dir); const. Delete a remote directory. ; Anonymous users may not delete directories. Returns 0 in case of success and -1 in case of failure. ; Definition at line 702 of file TFTP.cxx. ◆ DeleteFile(). Int_t TFTP::DeleteFile ; (; const char * ; file); const. Delete a remote file. ; Anonymous users may not delete files. Returns 0 in case of success and -1 in case of failure. ; Definition at line 821 of file TFTP.cxx. ◆ FreeDirectory(). void TFTP::FreeDirectory ; (; Bool_t ; print = kFALSE). Free a remotely open directory via rootd. ; Definition at line 956 of file TFTP.cxx. ◆ get(). void TFTP::get ; (; const char * ; file, . const char * ; localName = nullptr . ). inline . Definition at line 112 of file TFTP.h. ◆ GetBlockSize(). Int_t TFTP::GetBlockSize ; (; ); const. inline . Definition at line 80 of file TFTP.h. ◆ GetDirEntry(). const char * TFTP::GetDirEntry ; (; Bool_t ; print = kFALSE). Get directory entry via rootd. ; Returns 0 in case no more entries or in case of error. ; Definition at line 988 of file TFTP.cxx. ◆ GetFile(). Long64_t TFTP::GetFile ; (; const char * ; file, . const char * ; localName = nullptr . ). Transfer file from remote host. ; Returns number of bytes received or < 0 in case of error. Error -1 connection is still open, error -2 connection has been closed. In case of failure fRestartAt is set to the n",MatchSource.WIKI,doc/master/classTFTP.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFTP.html
https://root.cern/doc/master/classTFTP.html:17915,Availability,error,error,17915,"P::DeleteDirectory ; (; const char * ; dir); const. Delete a remote directory. ; Anonymous users may not delete directories. Returns 0 in case of success and -1 in case of failure. ; Definition at line 702 of file TFTP.cxx. ◆ DeleteFile(). Int_t TFTP::DeleteFile ; (; const char * ; file); const. Delete a remote file. ; Anonymous users may not delete files. Returns 0 in case of success and -1 in case of failure. ; Definition at line 821 of file TFTP.cxx. ◆ FreeDirectory(). void TFTP::FreeDirectory ; (; Bool_t ; print = kFALSE). Free a remotely open directory via rootd. ; Definition at line 956 of file TFTP.cxx. ◆ get(). void TFTP::get ; (; const char * ; file, . const char * ; localName = nullptr . ). inline . Definition at line 112 of file TFTP.h. ◆ GetBlockSize(). Int_t TFTP::GetBlockSize ; (; ); const. inline . Definition at line 80 of file TFTP.h. ◆ GetDirEntry(). const char * TFTP::GetDirEntry ; (; Bool_t ; print = kFALSE). Get directory entry via rootd. ; Returns 0 in case no more entries or in case of error. ; Definition at line 988 of file TFTP.cxx. ◆ GetFile(). Long64_t TFTP::GetFile ; (; const char * ; file, . const char * ; localName = nullptr . ). Transfer file from remote host. ; Returns number of bytes received or < 0 in case of error. Error -1 connection is still open, error -2 connection has been closed. In case of failure fRestartAt is set to the number of bytes correclty transfered. Calling GetFile() immediately afterwards will restart at fRestartAt. If this is not desired call SetRestartAt(0) before calling GetFile(). If rootd reports that the file is locked, and you are sure this is not the case (e.g. due to a crash), you can force unlock it by prepending the file name with a '-'. ; Definition at line 406 of file TFTP.cxx. ◆ GetMode(). Int_t TFTP::GetMode ; (; ); const. inline . Definition at line 83 of file TFTP.h. ◆ GetPathInfo(). Int_t TFTP::GetPathInfo ; (; const char * ; path, . FileStat_t & ; buf, . Bool_t ; print = kFALSE . ). Get info about",MatchSource.WIKI,doc/master/classTFTP.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFTP.html
https://root.cern/doc/master/classTFTP.html:18154,Availability,error,error,18154,". Int_t TFTP::DeleteFile ; (; const char * ; file); const. Delete a remote file. ; Anonymous users may not delete files. Returns 0 in case of success and -1 in case of failure. ; Definition at line 821 of file TFTP.cxx. ◆ FreeDirectory(). void TFTP::FreeDirectory ; (; Bool_t ; print = kFALSE). Free a remotely open directory via rootd. ; Definition at line 956 of file TFTP.cxx. ◆ get(). void TFTP::get ; (; const char * ; file, . const char * ; localName = nullptr . ). inline . Definition at line 112 of file TFTP.h. ◆ GetBlockSize(). Int_t TFTP::GetBlockSize ; (; ); const. inline . Definition at line 80 of file TFTP.h. ◆ GetDirEntry(). const char * TFTP::GetDirEntry ; (; Bool_t ; print = kFALSE). Get directory entry via rootd. ; Returns 0 in case no more entries or in case of error. ; Definition at line 988 of file TFTP.cxx. ◆ GetFile(). Long64_t TFTP::GetFile ; (; const char * ; file, . const char * ; localName = nullptr . ). Transfer file from remote host. ; Returns number of bytes received or < 0 in case of error. Error -1 connection is still open, error -2 connection has been closed. In case of failure fRestartAt is set to the number of bytes correclty transfered. Calling GetFile() immediately afterwards will restart at fRestartAt. If this is not desired call SetRestartAt(0) before calling GetFile(). If rootd reports that the file is locked, and you are sure this is not the case (e.g. due to a crash), you can force unlock it by prepending the file name with a '-'. ; Definition at line 406 of file TFTP.cxx. ◆ GetMode(). Int_t TFTP::GetMode ; (; ); const. inline . Definition at line 83 of file TFTP.h. ◆ GetPathInfo(). Int_t TFTP::GetPathInfo ; (; const char * ; path, . FileStat_t & ; buf, . Bool_t ; print = kFALSE . ). Get info about a file. ; Info is returned in the form of a FileStat_t structure (see TSystem.h). The function returns 0 in case of success and 1 if the file could not be stat'ed. ; Definition at line 1029 of file TFTP.cxx. ◆ GetRestartAt(). Long64_t T",MatchSource.WIKI,doc/master/classTFTP.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFTP.html
https://root.cern/doc/master/classTFTP.html:18196,Availability,error,error,18196,"a remote file. ; Anonymous users may not delete files. Returns 0 in case of success and -1 in case of failure. ; Definition at line 821 of file TFTP.cxx. ◆ FreeDirectory(). void TFTP::FreeDirectory ; (; Bool_t ; print = kFALSE). Free a remotely open directory via rootd. ; Definition at line 956 of file TFTP.cxx. ◆ get(). void TFTP::get ; (; const char * ; file, . const char * ; localName = nullptr . ). inline . Definition at line 112 of file TFTP.h. ◆ GetBlockSize(). Int_t TFTP::GetBlockSize ; (; ); const. inline . Definition at line 80 of file TFTP.h. ◆ GetDirEntry(). const char * TFTP::GetDirEntry ; (; Bool_t ; print = kFALSE). Get directory entry via rootd. ; Returns 0 in case no more entries or in case of error. ; Definition at line 988 of file TFTP.cxx. ◆ GetFile(). Long64_t TFTP::GetFile ; (; const char * ; file, . const char * ; localName = nullptr . ). Transfer file from remote host. ; Returns number of bytes received or < 0 in case of error. Error -1 connection is still open, error -2 connection has been closed. In case of failure fRestartAt is set to the number of bytes correclty transfered. Calling GetFile() immediately afterwards will restart at fRestartAt. If this is not desired call SetRestartAt(0) before calling GetFile(). If rootd reports that the file is locked, and you are sure this is not the case (e.g. due to a crash), you can force unlock it by prepending the file name with a '-'. ; Definition at line 406 of file TFTP.cxx. ◆ GetMode(). Int_t TFTP::GetMode ; (; ); const. inline . Definition at line 83 of file TFTP.h. ◆ GetPathInfo(). Int_t TFTP::GetPathInfo ; (; const char * ; path, . FileStat_t & ; buf, . Bool_t ; print = kFALSE . ). Get info about a file. ; Info is returned in the form of a FileStat_t structure (see TSystem.h). The function returns 0 in case of success and 1 if the file could not be stat'ed. ; Definition at line 1029 of file TFTP.cxx. ◆ GetRestartAt(). Long64_t TFTP::GetRestartAt ; (; ); const. inline . Definition at line 82 of",MatchSource.WIKI,doc/master/classTFTP.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFTP.html
https://root.cern/doc/master/classTFTP.html:18244,Availability,failure,failure,18244,"uccess and -1 in case of failure. ; Definition at line 821 of file TFTP.cxx. ◆ FreeDirectory(). void TFTP::FreeDirectory ; (; Bool_t ; print = kFALSE). Free a remotely open directory via rootd. ; Definition at line 956 of file TFTP.cxx. ◆ get(). void TFTP::get ; (; const char * ; file, . const char * ; localName = nullptr . ). inline . Definition at line 112 of file TFTP.h. ◆ GetBlockSize(). Int_t TFTP::GetBlockSize ; (; ); const. inline . Definition at line 80 of file TFTP.h. ◆ GetDirEntry(). const char * TFTP::GetDirEntry ; (; Bool_t ; print = kFALSE). Get directory entry via rootd. ; Returns 0 in case no more entries or in case of error. ; Definition at line 988 of file TFTP.cxx. ◆ GetFile(). Long64_t TFTP::GetFile ; (; const char * ; file, . const char * ; localName = nullptr . ). Transfer file from remote host. ; Returns number of bytes received or < 0 in case of error. Error -1 connection is still open, error -2 connection has been closed. In case of failure fRestartAt is set to the number of bytes correclty transfered. Calling GetFile() immediately afterwards will restart at fRestartAt. If this is not desired call SetRestartAt(0) before calling GetFile(). If rootd reports that the file is locked, and you are sure this is not the case (e.g. due to a crash), you can force unlock it by prepending the file name with a '-'. ; Definition at line 406 of file TFTP.cxx. ◆ GetMode(). Int_t TFTP::GetMode ; (; ); const. inline . Definition at line 83 of file TFTP.h. ◆ GetPathInfo(). Int_t TFTP::GetPathInfo ; (; const char * ; path, . FileStat_t & ; buf, . Bool_t ; print = kFALSE . ). Get info about a file. ; Info is returned in the form of a FileStat_t structure (see TSystem.h). The function returns 0 in case of success and 1 if the file could not be stat'ed. ; Definition at line 1029 of file TFTP.cxx. ◆ GetRestartAt(). Long64_t TFTP::GetRestartAt ; (; ); const. inline . Definition at line 82 of file TFTP.h. ◆ GetSocket(). TSocket * TFTP::GetSocket ; (; ); const. inline ",MatchSource.WIKI,doc/master/classTFTP.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFTP.html
https://root.cern/doc/master/classTFTP.html:19979,Availability,failure,failure,19979,"(see TSystem.h). The function returns 0 in case of success and 1 if the file could not be stat'ed. ; Definition at line 1029 of file TFTP.cxx. ◆ GetRestartAt(). Long64_t TFTP::GetRestartAt ; (; ); const. inline . Definition at line 82 of file TFTP.h. ◆ GetSocket(). TSocket * TFTP::GetSocket ; (; ); const. inline . Definition at line 108 of file TFTP.h. ◆ Init(). void TFTP::Init ; (; const char * ; url, . Int_t ; parallel, . Int_t ; wsize . ). private . Set up the actual connection. ; Definition at line 95 of file TFTP.cxx. ◆ IsA(). TClass * TFTP::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 125 of file TFTP.h. ◆ IsOpen(). Bool_t TFTP::IsOpen ; (; ); const. inline . Definition at line 85 of file TFTP.h. ◆ ListDirectory(). Int_t TFTP::ListDirectory ; (; Option_t * ; cmd = """"); const. List remote directory. ; With cmd you specify the options and directory to be listed to ls. Returns 0 in case of success and -1 in case of failure. ; Definition at line 734 of file TFTP.cxx. ◆ ls(). void TFTP::ls ; (; Option_t * ; option = """"); const. inlineoverridevirtual . The ls function lists the contents of a class on stdout. ; Ls output is typically much less verbose then Dump(). ; Reimplemented from TObject.; Definition at line 116 of file TFTP.h. ◆ MakeDirectory(). Int_t TFTP::MakeDirectory ; (; const char * ; dir, . Bool_t ; print = kFALSE . ); const. Make a remote directory. ; Anonymous users may not create directories. Returns 0 in case of success and -1 in case of failure. ; Definition at line 667 of file TFTP.cxx. ◆ mkdir(). void TFTP::mkdir ; (; const char * ; dir); const. inline . Definition at line 114 of file TFTP.h. ◆ mv(). void TFTP::mv ; (; const char * ; file1, . const char * ; file2 . ); const. inline . Definition at line 118 of file TFTP.h. ◆ OpenDirectory(). Bool_t TFTP::OpenDirectory ; (; const char * ; dir, . Bool_t ; print = kFALSE . ). Open a directory via rootd. ; Returns k",MatchSource.WIKI,doc/master/classTFTP.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFTP.html
https://root.cern/doc/master/classTFTP.html:20525,Availability,failure,failure,20525," TFTP::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 125 of file TFTP.h. ◆ IsOpen(). Bool_t TFTP::IsOpen ; (; ); const. inline . Definition at line 85 of file TFTP.h. ◆ ListDirectory(). Int_t TFTP::ListDirectory ; (; Option_t * ; cmd = """"); const. List remote directory. ; With cmd you specify the options and directory to be listed to ls. Returns 0 in case of success and -1 in case of failure. ; Definition at line 734 of file TFTP.cxx. ◆ ls(). void TFTP::ls ; (; Option_t * ; option = """"); const. inlineoverridevirtual . The ls function lists the contents of a class on stdout. ; Ls output is typically much less verbose then Dump(). ; Reimplemented from TObject.; Definition at line 116 of file TFTP.h. ◆ MakeDirectory(). Int_t TFTP::MakeDirectory ; (; const char * ; dir, . Bool_t ; print = kFALSE . ); const. Make a remote directory. ; Anonymous users may not create directories. Returns 0 in case of success and -1 in case of failure. ; Definition at line 667 of file TFTP.cxx. ◆ mkdir(). void TFTP::mkdir ; (; const char * ; dir); const. inline . Definition at line 114 of file TFTP.h. ◆ mv(). void TFTP::mv ; (; const char * ; file1, . const char * ; file2 . ); const. inline . Definition at line 118 of file TFTP.h. ◆ OpenDirectory(). Bool_t TFTP::OpenDirectory ; (; const char * ; dir, . Bool_t ; print = kFALSE . ). Open a directory via rootd. ; Returns kTRUE in case of success. Returns kFALSE in case of error. ; Definition at line 914 of file TFTP.cxx. ◆ operator=(). void TFTP::operator= ; (; const TFTP & ; ). privatedelete . ◆ Print(). void TFTP::Print ; (; Option_t * ; opt = """"); const. overridevirtual . Print some info about the FTP connection. ; Reimplemented from TObject.; Definition at line 157 of file TFTP.cxx. ◆ PrintDirectory(). Int_t TFTP::PrintDirectory ; (; ); const. Print path of remote working directory. ; Returns 0 in case of succes and -1 in cse of failure. ; Definition at ",MatchSource.WIKI,doc/master/classTFTP.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFTP.html
https://root.cern/doc/master/classTFTP.html:21010,Availability,error,error,21010,"n at line 734 of file TFTP.cxx. ◆ ls(). void TFTP::ls ; (; Option_t * ; option = """"); const. inlineoverridevirtual . The ls function lists the contents of a class on stdout. ; Ls output is typically much less verbose then Dump(). ; Reimplemented from TObject.; Definition at line 116 of file TFTP.h. ◆ MakeDirectory(). Int_t TFTP::MakeDirectory ; (; const char * ; dir, . Bool_t ; print = kFALSE . ); const. Make a remote directory. ; Anonymous users may not create directories. Returns 0 in case of success and -1 in case of failure. ; Definition at line 667 of file TFTP.cxx. ◆ mkdir(). void TFTP::mkdir ; (; const char * ; dir); const. inline . Definition at line 114 of file TFTP.h. ◆ mv(). void TFTP::mv ; (; const char * ; file1, . const char * ; file2 . ); const. inline . Definition at line 118 of file TFTP.h. ◆ OpenDirectory(). Bool_t TFTP::OpenDirectory ; (; const char * ; dir, . Bool_t ; print = kFALSE . ). Open a directory via rootd. ; Returns kTRUE in case of success. Returns kFALSE in case of error. ; Definition at line 914 of file TFTP.cxx. ◆ operator=(). void TFTP::operator= ; (; const TFTP & ; ). privatedelete . ◆ Print(). void TFTP::Print ; (; Option_t * ; opt = """"); const. overridevirtual . Print some info about the FTP connection. ; Reimplemented from TObject.; Definition at line 157 of file TFTP.cxx. ◆ PrintDirectory(). Int_t TFTP::PrintDirectory ; (; ); const. Print path of remote working directory. ; Returns 0 in case of succes and -1 in cse of failure. ; Definition at line 764 of file TFTP.cxx. ◆ PrintError(). void TFTP::PrintError ; (; const char * ; where, . Int_t ; err . ); const. private . Print error string depending on error code. ; Definition at line 182 of file TFTP.cxx. ◆ put(). void TFTP::put ; (; const char * ; file, . const char * ; remoteName = nullptr . ). inline . Definition at line 111 of file TFTP.h. ◆ PutFile(). Long64_t TFTP::PutFile ; (; const char * ; file, . const char * ; remoteName = nullptr . ). Transfer file to remote host. ; Re",MatchSource.WIKI,doc/master/classTFTP.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFTP.html
https://root.cern/doc/master/classTFTP.html:21480,Availability,failure,failure,21480,"eate directories. Returns 0 in case of success and -1 in case of failure. ; Definition at line 667 of file TFTP.cxx. ◆ mkdir(). void TFTP::mkdir ; (; const char * ; dir); const. inline . Definition at line 114 of file TFTP.h. ◆ mv(). void TFTP::mv ; (; const char * ; file1, . const char * ; file2 . ); const. inline . Definition at line 118 of file TFTP.h. ◆ OpenDirectory(). Bool_t TFTP::OpenDirectory ; (; const char * ; dir, . Bool_t ; print = kFALSE . ). Open a directory via rootd. ; Returns kTRUE in case of success. Returns kFALSE in case of error. ; Definition at line 914 of file TFTP.cxx. ◆ operator=(). void TFTP::operator= ; (; const TFTP & ; ). privatedelete . ◆ Print(). void TFTP::Print ; (; Option_t * ; opt = """"); const. overridevirtual . Print some info about the FTP connection. ; Reimplemented from TObject.; Definition at line 157 of file TFTP.cxx. ◆ PrintDirectory(). Int_t TFTP::PrintDirectory ; (; ); const. Print path of remote working directory. ; Returns 0 in case of succes and -1 in cse of failure. ; Definition at line 764 of file TFTP.cxx. ◆ PrintError(). void TFTP::PrintError ; (; const char * ; where, . Int_t ; err . ); const. private . Print error string depending on error code. ; Definition at line 182 of file TFTP.cxx. ◆ put(). void TFTP::put ; (; const char * ; file, . const char * ; remoteName = nullptr . ). inline . Definition at line 111 of file TFTP.h. ◆ PutFile(). Long64_t TFTP::PutFile ; (; const char * ; file, . const char * ; remoteName = nullptr . ). Transfer file to remote host. ; Returns number of bytes sent or < 0 in case of error. Error -1 connection is still open, error -2 connection has been closed. In case of failure fRestartAt is set to the number of bytes correclty transfered. Calling PutFile() immediately afterwards will restart at fRestartAt. If this is not desired call SetRestartAt(0) before calling PutFile(). If rootd reports that the file is locked, and you are sure this is not the case (e.g. due to a crash), you can forc",MatchSource.WIKI,doc/master/classTFTP.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFTP.html
https://root.cern/doc/master/classTFTP.html:21639,Availability,error,error,21639,"ion at line 114 of file TFTP.h. ◆ mv(). void TFTP::mv ; (; const char * ; file1, . const char * ; file2 . ); const. inline . Definition at line 118 of file TFTP.h. ◆ OpenDirectory(). Bool_t TFTP::OpenDirectory ; (; const char * ; dir, . Bool_t ; print = kFALSE . ). Open a directory via rootd. ; Returns kTRUE in case of success. Returns kFALSE in case of error. ; Definition at line 914 of file TFTP.cxx. ◆ operator=(). void TFTP::operator= ; (; const TFTP & ; ). privatedelete . ◆ Print(). void TFTP::Print ; (; Option_t * ; opt = """"); const. overridevirtual . Print some info about the FTP connection. ; Reimplemented from TObject.; Definition at line 157 of file TFTP.cxx. ◆ PrintDirectory(). Int_t TFTP::PrintDirectory ; (; ); const. Print path of remote working directory. ; Returns 0 in case of succes and -1 in cse of failure. ; Definition at line 764 of file TFTP.cxx. ◆ PrintError(). void TFTP::PrintError ; (; const char * ; where, . Int_t ; err . ); const. private . Print error string depending on error code. ; Definition at line 182 of file TFTP.cxx. ◆ put(). void TFTP::put ; (; const char * ; file, . const char * ; remoteName = nullptr . ). inline . Definition at line 111 of file TFTP.h. ◆ PutFile(). Long64_t TFTP::PutFile ; (; const char * ; file, . const char * ; remoteName = nullptr . ). Transfer file to remote host. ; Returns number of bytes sent or < 0 in case of error. Error -1 connection is still open, error -2 connection has been closed. In case of failure fRestartAt is set to the number of bytes correclty transfered. Calling PutFile() immediately afterwards will restart at fRestartAt. If this is not desired call SetRestartAt(0) before calling PutFile(). If rootd reports that the file is locked, and you are sure this is not the case (e.g. due to a crash), you can force unlock it by prepending the remoteName with a '-'. ; Definition at line 233 of file TFTP.cxx. ◆ pwd(). void TFTP::pwd ; (; ); const. inline . Definition at line 117 of file TFTP.h. ◆ Recv(). I",MatchSource.WIKI,doc/master/classTFTP.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFTP.html
https://root.cern/doc/master/classTFTP.html:21665,Availability,error,error,21665,"ion at line 114 of file TFTP.h. ◆ mv(). void TFTP::mv ; (; const char * ; file1, . const char * ; file2 . ); const. inline . Definition at line 118 of file TFTP.h. ◆ OpenDirectory(). Bool_t TFTP::OpenDirectory ; (; const char * ; dir, . Bool_t ; print = kFALSE . ). Open a directory via rootd. ; Returns kTRUE in case of success. Returns kFALSE in case of error. ; Definition at line 914 of file TFTP.cxx. ◆ operator=(). void TFTP::operator= ; (; const TFTP & ; ). privatedelete . ◆ Print(). void TFTP::Print ; (; Option_t * ; opt = """"); const. overridevirtual . Print some info about the FTP connection. ; Reimplemented from TObject.; Definition at line 157 of file TFTP.cxx. ◆ PrintDirectory(). Int_t TFTP::PrintDirectory ; (; ); const. Print path of remote working directory. ; Returns 0 in case of succes and -1 in cse of failure. ; Definition at line 764 of file TFTP.cxx. ◆ PrintError(). void TFTP::PrintError ; (; const char * ; where, . Int_t ; err . ); const. private . Print error string depending on error code. ; Definition at line 182 of file TFTP.cxx. ◆ put(). void TFTP::put ; (; const char * ; file, . const char * ; remoteName = nullptr . ). inline . Definition at line 111 of file TFTP.h. ◆ PutFile(). Long64_t TFTP::PutFile ; (; const char * ; file, . const char * ; remoteName = nullptr . ). Transfer file to remote host. ; Returns number of bytes sent or < 0 in case of error. Error -1 connection is still open, error -2 connection has been closed. In case of failure fRestartAt is set to the number of bytes correclty transfered. Calling PutFile() immediately afterwards will restart at fRestartAt. If this is not desired call SetRestartAt(0) before calling PutFile(). If rootd reports that the file is locked, and you are sure this is not the case (e.g. due to a crash), you can force unlock it by prepending the remoteName with a '-'. ; Definition at line 233 of file TFTP.cxx. ◆ pwd(). void TFTP::pwd ; (; ); const. inline . Definition at line 117 of file TFTP.h. ◆ Recv(). I",MatchSource.WIKI,doc/master/classTFTP.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFTP.html
https://root.cern/doc/master/classTFTP.html:22045,Availability,error,error,22045,"nition at line 914 of file TFTP.cxx. ◆ operator=(). void TFTP::operator= ; (; const TFTP & ; ). privatedelete . ◆ Print(). void TFTP::Print ; (; Option_t * ; opt = """"); const. overridevirtual . Print some info about the FTP connection. ; Reimplemented from TObject.; Definition at line 157 of file TFTP.cxx. ◆ PrintDirectory(). Int_t TFTP::PrintDirectory ; (; ); const. Print path of remote working directory. ; Returns 0 in case of succes and -1 in cse of failure. ; Definition at line 764 of file TFTP.cxx. ◆ PrintError(). void TFTP::PrintError ; (; const char * ; where, . Int_t ; err . ); const. private . Print error string depending on error code. ; Definition at line 182 of file TFTP.cxx. ◆ put(). void TFTP::put ; (; const char * ; file, . const char * ; remoteName = nullptr . ). inline . Definition at line 111 of file TFTP.h. ◆ PutFile(). Long64_t TFTP::PutFile ; (; const char * ; file, . const char * ; remoteName = nullptr . ). Transfer file to remote host. ; Returns number of bytes sent or < 0 in case of error. Error -1 connection is still open, error -2 connection has been closed. In case of failure fRestartAt is set to the number of bytes correclty transfered. Calling PutFile() immediately afterwards will restart at fRestartAt. If this is not desired call SetRestartAt(0) before calling PutFile(). If rootd reports that the file is locked, and you are sure this is not the case (e.g. due to a crash), you can force unlock it by prepending the remoteName with a '-'. ; Definition at line 233 of file TFTP.cxx. ◆ pwd(). void TFTP::pwd ; (; ); const. inline . Definition at line 117 of file TFTP.h. ◆ Recv(). Int_t TFTP::Recv ; (; Int_t & ; status, . EMessageTypes & ; kind . ); const. private . Return status from rootd server and message kind. ; Returns -1 in case of error otherwise 8 (sizeof 2 words, status and kind). ; Definition at line 191 of file TFTP.cxx. ◆ RenameFile(). Int_t TFTP::RenameFile ; (; const char * ; file1, . const char * ; file2 . ); const. Rename a rem",MatchSource.WIKI,doc/master/classTFTP.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFTP.html
https://root.cern/doc/master/classTFTP.html:22087,Availability,error,error,22087,"perator= ; (; const TFTP & ; ). privatedelete . ◆ Print(). void TFTP::Print ; (; Option_t * ; opt = """"); const. overridevirtual . Print some info about the FTP connection. ; Reimplemented from TObject.; Definition at line 157 of file TFTP.cxx. ◆ PrintDirectory(). Int_t TFTP::PrintDirectory ; (; ); const. Print path of remote working directory. ; Returns 0 in case of succes and -1 in cse of failure. ; Definition at line 764 of file TFTP.cxx. ◆ PrintError(). void TFTP::PrintError ; (; const char * ; where, . Int_t ; err . ); const. private . Print error string depending on error code. ; Definition at line 182 of file TFTP.cxx. ◆ put(). void TFTP::put ; (; const char * ; file, . const char * ; remoteName = nullptr . ). inline . Definition at line 111 of file TFTP.h. ◆ PutFile(). Long64_t TFTP::PutFile ; (; const char * ; file, . const char * ; remoteName = nullptr . ). Transfer file to remote host. ; Returns number of bytes sent or < 0 in case of error. Error -1 connection is still open, error -2 connection has been closed. In case of failure fRestartAt is set to the number of bytes correclty transfered. Calling PutFile() immediately afterwards will restart at fRestartAt. If this is not desired call SetRestartAt(0) before calling PutFile(). If rootd reports that the file is locked, and you are sure this is not the case (e.g. due to a crash), you can force unlock it by prepending the remoteName with a '-'. ; Definition at line 233 of file TFTP.cxx. ◆ pwd(). void TFTP::pwd ; (; ); const. inline . Definition at line 117 of file TFTP.h. ◆ Recv(). Int_t TFTP::Recv ; (; Int_t & ; status, . EMessageTypes & ; kind . ); const. private . Return status from rootd server and message kind. ; Returns -1 in case of error otherwise 8 (sizeof 2 words, status and kind). ; Definition at line 191 of file TFTP.cxx. ◆ RenameFile(). Int_t TFTP::RenameFile ; (; const char * ; file1, . const char * ; file2 . ); const. Rename a remote file. ; Anonymous users may not rename files. Returns 0 in c",MatchSource.WIKI,doc/master/classTFTP.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFTP.html
https://root.cern/doc/master/classTFTP.html:22135,Availability,failure,failure,22135," (; Option_t * ; opt = """"); const. overridevirtual . Print some info about the FTP connection. ; Reimplemented from TObject.; Definition at line 157 of file TFTP.cxx. ◆ PrintDirectory(). Int_t TFTP::PrintDirectory ; (; ); const. Print path of remote working directory. ; Returns 0 in case of succes and -1 in cse of failure. ; Definition at line 764 of file TFTP.cxx. ◆ PrintError(). void TFTP::PrintError ; (; const char * ; where, . Int_t ; err . ); const. private . Print error string depending on error code. ; Definition at line 182 of file TFTP.cxx. ◆ put(). void TFTP::put ; (; const char * ; file, . const char * ; remoteName = nullptr . ). inline . Definition at line 111 of file TFTP.h. ◆ PutFile(). Long64_t TFTP::PutFile ; (; const char * ; file, . const char * ; remoteName = nullptr . ). Transfer file to remote host. ; Returns number of bytes sent or < 0 in case of error. Error -1 connection is still open, error -2 connection has been closed. In case of failure fRestartAt is set to the number of bytes correclty transfered. Calling PutFile() immediately afterwards will restart at fRestartAt. If this is not desired call SetRestartAt(0) before calling PutFile(). If rootd reports that the file is locked, and you are sure this is not the case (e.g. due to a crash), you can force unlock it by prepending the remoteName with a '-'. ; Definition at line 233 of file TFTP.cxx. ◆ pwd(). void TFTP::pwd ; (; ); const. inline . Definition at line 117 of file TFTP.h. ◆ Recv(). Int_t TFTP::Recv ; (; Int_t & ; status, . EMessageTypes & ; kind . ); const. private . Return status from rootd server and message kind. ; Returns -1 in case of error otherwise 8 (sizeof 2 words, status and kind). ; Definition at line 191 of file TFTP.cxx. ◆ RenameFile(). Int_t TFTP::RenameFile ; (; const char * ; file1, . const char * ; file2 . ); const. Rename a remote file. ; Anonymous users may not rename files. Returns 0 in case of success and -1 in case of failure. ; Definition at line 790 of file TF",MatchSource.WIKI,doc/master/classTFTP.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFTP.html
https://root.cern/doc/master/classTFTP.html:22814,Availability,error,error,22814,"ition at line 111 of file TFTP.h. ◆ PutFile(). Long64_t TFTP::PutFile ; (; const char * ; file, . const char * ; remoteName = nullptr . ). Transfer file to remote host. ; Returns number of bytes sent or < 0 in case of error. Error -1 connection is still open, error -2 connection has been closed. In case of failure fRestartAt is set to the number of bytes correclty transfered. Calling PutFile() immediately afterwards will restart at fRestartAt. If this is not desired call SetRestartAt(0) before calling PutFile(). If rootd reports that the file is locked, and you are sure this is not the case (e.g. due to a crash), you can force unlock it by prepending the remoteName with a '-'. ; Definition at line 233 of file TFTP.cxx. ◆ pwd(). void TFTP::pwd ; (; ); const. inline . Definition at line 117 of file TFTP.h. ◆ Recv(). Int_t TFTP::Recv ; (; Int_t & ; status, . EMessageTypes & ; kind . ); const. private . Return status from rootd server and message kind. ; Returns -1 in case of error otherwise 8 (sizeof 2 words, status and kind). ; Definition at line 191 of file TFTP.cxx. ◆ RenameFile(). Int_t TFTP::RenameFile ; (; const char * ; file1, . const char * ; file2 . ); const. Rename a remote file. ; Anonymous users may not rename files. Returns 0 in case of success and -1 in case of failure. ; Definition at line 790 of file TFTP.cxx. ◆ rm(). void TFTP::rm ; (; const char * ; file); const. inline . Definition at line 119 of file TFTP.h. ◆ rmdir(). void TFTP::rmdir ; (; const char * ; dir); const. inline . Definition at line 115 of file TFTP.h. ◆ SetBlockSize(). void TFTP::SetBlockSize ; (; Int_t ; blockSize). Make sure the block size is a power of two, with a minimum of 32768. ; Definition at line 207 of file TFTP.cxx. ◆ SetMode(). void TFTP::SetMode ; (; Int_t ; mode). inlineprivate . Definition at line 62 of file TFTP.h. ◆ SetRestartAt(). void TFTP::SetRestartAt ; (; Long64_t ; at). inline . Definition at line 81 of file TFTP.h. ◆ Streamer(). void TFTP::Streamer ; (; TBuffer &",MatchSource.WIKI,doc/master/classTFTP.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFTP.html
https://root.cern/doc/master/classTFTP.html:23120,Availability,failure,failure,23120,"ection has been closed. In case of failure fRestartAt is set to the number of bytes correclty transfered. Calling PutFile() immediately afterwards will restart at fRestartAt. If this is not desired call SetRestartAt(0) before calling PutFile(). If rootd reports that the file is locked, and you are sure this is not the case (e.g. due to a crash), you can force unlock it by prepending the remoteName with a '-'. ; Definition at line 233 of file TFTP.cxx. ◆ pwd(). void TFTP::pwd ; (; ); const. inline . Definition at line 117 of file TFTP.h. ◆ Recv(). Int_t TFTP::Recv ; (; Int_t & ; status, . EMessageTypes & ; kind . ); const. private . Return status from rootd server and message kind. ; Returns -1 in case of error otherwise 8 (sizeof 2 words, status and kind). ; Definition at line 191 of file TFTP.cxx. ◆ RenameFile(). Int_t TFTP::RenameFile ; (; const char * ; file1, . const char * ; file2 . ); const. Rename a remote file. ; Anonymous users may not rename files. Returns 0 in case of success and -1 in case of failure. ; Definition at line 790 of file TFTP.cxx. ◆ rm(). void TFTP::rm ; (; const char * ; file); const. inline . Definition at line 119 of file TFTP.h. ◆ rmdir(). void TFTP::rmdir ; (; const char * ; dir); const. inline . Definition at line 115 of file TFTP.h. ◆ SetBlockSize(). void TFTP::SetBlockSize ; (; Int_t ; blockSize). Make sure the block size is a power of two, with a minimum of 32768. ; Definition at line 207 of file TFTP.cxx. ◆ SetMode(). void TFTP::SetMode ; (; Int_t ; mode). inlineprivate . Definition at line 62 of file TFTP.h. ◆ SetRestartAt(). void TFTP::SetRestartAt ; (; Long64_t ; at). inline . Definition at line 81 of file TFTP.h. ◆ Streamer(). void TFTP::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject. ◆ StreamerNVirtual(). void TFTP::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 125 of file TFTP.h. Member Data Documentation. ◆ fBloc",MatchSource.WIKI,doc/master/classTFTP.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFTP.html
https://root.cern/doc/master/classTFTP.html:3826,Energy Efficiency,power,power,3826,"irectory (Option_t *cmd="""") const;  List remote directory. ;  ; void ls (Option_t *cmd="""") const override;  The ls function lists the contents of a class on stdout. ;  ; Int_t MakeDirectory (const char *dir, Bool_t print=kFALSE) const;  Make a remote directory. ;  ; void mkdir (const char *dir) const;  ; void mv (const char *file1, const char *file2) const;  ; Bool_t OpenDirectory (const char *name, Bool_t print=kFALSE);  Open a directory via rootd. ;  ; void Print (Option_t *opt="""") const override;  Print some info about the FTP connection. ;  ; Int_t PrintDirectory () const;  Print path of remote working directory. ;  ; void put (const char *file, const char *remoteName=nullptr);  ; Long64_t PutFile (const char *file, const char *remoteName=nullptr);  Transfer file to remote host. ;  ; void pwd () const;  ; Int_t RenameFile (const char *file1, const char *file2) const;  Rename a remote file. ;  ; void rm (const char *file) const;  ; void rmdir (const char *dir) const;  ; void SetBlockSize (Int_t blockSize);  Make sure the block size is a power of two, with a minimum of 32768. ;  ; void SetRestartAt (Long64_t at);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const ",MatchSource.WIKI,doc/master/classTFTP.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFTP.html
https://root.cern/doc/master/classTFTP.html:23482,Energy Efficiency,power,power,23482," the remoteName with a '-'. ; Definition at line 233 of file TFTP.cxx. ◆ pwd(). void TFTP::pwd ; (; ); const. inline . Definition at line 117 of file TFTP.h. ◆ Recv(). Int_t TFTP::Recv ; (; Int_t & ; status, . EMessageTypes & ; kind . ); const. private . Return status from rootd server and message kind. ; Returns -1 in case of error otherwise 8 (sizeof 2 words, status and kind). ; Definition at line 191 of file TFTP.cxx. ◆ RenameFile(). Int_t TFTP::RenameFile ; (; const char * ; file1, . const char * ; file2 . ); const. Rename a remote file. ; Anonymous users may not rename files. Returns 0 in case of success and -1 in case of failure. ; Definition at line 790 of file TFTP.cxx. ◆ rm(). void TFTP::rm ; (; const char * ; file); const. inline . Definition at line 119 of file TFTP.h. ◆ rmdir(). void TFTP::rmdir ; (; const char * ; dir); const. inline . Definition at line 115 of file TFTP.h. ◆ SetBlockSize(). void TFTP::SetBlockSize ; (; Int_t ; blockSize). Make sure the block size is a power of two, with a minimum of 32768. ; Definition at line 207 of file TFTP.cxx. ◆ SetMode(). void TFTP::SetMode ; (; Int_t ; mode). inlineprivate . Definition at line 62 of file TFTP.h. ◆ SetRestartAt(). void TFTP::SetRestartAt ; (; Long64_t ; at). inline . Definition at line 81 of file TFTP.h. ◆ Streamer(). void TFTP::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject. ◆ StreamerNVirtual(). void TFTP::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 125 of file TFTP.h. Member Data Documentation. ◆ fBlockSize. Int_t TFTP::fBlockSize. private . Definition at line 44 of file TFTP.h. ◆ fBytesRead. Long64_t TFTP::fBytesRead. private . Definition at line 50 of file TFTP.h. ◆ fBytesWrite. Long64_t TFTP::fBytesWrite. private . connection to rootd ; Definition at line 49 of file TFTP.h. ◆ fCurrentFile. TString TFTP::fCurrentFile. private . Definition at line 47 of file TFTP.h. ◆ fDir. Bool_",MatchSource.WIKI,doc/master/classTFTP.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFTP.html
https://root.cern/doc/master/classTFTP.html:1362,Integrability,message,message,1362,"TP.h. Public Types; enum  { kDfltBlockSize = 0x80000; , kDfltWindowSize = 65535; , kBinary = 0; , kAscii = 1; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TFTP (const char *url, Int_t parallel=1, Int_t wsize=kDfltWindowSize, TSocket *sock=nullptr);  Open connection to host specified by the url using par parallel sockets. ;  ; virtual ~TFTP ();  TFTP dtor. Send close message and close socket. ;  ; Bool_t AccessPathName (const char *path, EAccessMode mode=kFileExists, Bool_t print=kFALSE);  Returns kFALSE if one can access a file using the specified access mode. ;  ; void Ascii ();  ; void ascii ();  ; void bin ();  ; void Binary ();  ; void bye ();  ; void cd (const char *dir) const;  ; Int_t ChangeDirectory (const char *dir) const;  Change the remote directory. ;  ; Int_t ChangePermission (const char *file, Int_t mode) const;  Change permissions of a remote file. ;  ; void chmod (const char *file, Int_t mode) const;  ; Int_t Close ();  Close ftp connection. ;  ; Int_t DeleteDirectory (const char *dir) const;  Delete a remote directory. ;  ; Int_t DeleteFile (const char *file) const;  Delete a remote file. ;  ; void FreeDirectory (Bool_t print=kFALSE);  Free a remotely open directory via rootd. ;  ; void get (const char *file, const char *localName=nullptr);  ; Int_t GetBlockSize () const;  ; const char * GetDirEntry (Bool_t print=kFALSE);  Get directory ",MatchSource.WIKI,doc/master/classTFTP.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFTP.html
https://root.cern/doc/master/classTFTP.html:5840,Integrability,message,message,5840,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTFTP.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFTP.html
https://root.cern/doc/master/classTFTP.html:6381,Integrability,message,message,6381,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTFTP.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFTP.html
https://root.cern/doc/master/classTFTP.html:7583,Integrability,message,message,7583,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle again",MatchSource.WIKI,doc/master/classTFTP.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFTP.html
https://root.cern/doc/master/classTFTP.html:10716,Integrability,message,message,10716,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_",MatchSource.WIKI,doc/master/classTFTP.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFTP.html
https://root.cern/doc/master/classTFTP.html:11089,Integrability,message,message,11089," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Priva",MatchSource.WIKI,doc/master/classTFTP.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFTP.html
https://root.cern/doc/master/classTFTP.html:12356,Integrability,depend,depending,12356,"ize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TFTP ();  ;  TFTP (const TFTP &)=delete;  ; void Init (const char *url, Int_t parallel, Int_t wsize);  Set up the actual connection. ;  ; void operator= (const TFTP &)=delete;  ; void PrintError (const char *where, Int_t err) const;  Print error string depending on error code. ;  ; Int_t Recv (Int_t &status, EMessageTypes &kind) const;  Return status from rootd server and message kind. ;  ; void SetMode (Int_t mode);  . Private Attributes; Int_t fBlockSize;  ; Long64_t fBytesRead;  ; Long64_t fBytesWrite;  connection to rootd ;  ; TString fCurrentFile;  ; Bool_t fDir;  ; TString fHost;  ; Int_t fLastBlock;  ; Int_t fMode;  ; Int_t fParallel;  ; Int_t fPort;  ; Int_t fProtocol;  ; Long64_t fRestartAt;  ; TSocket * fSocket;  ; TString fUser;  ; Int_t fWindowSize;  . Static Private Attributes; static Long64_t fgBytesRead = 0;  ; static Long64_t fgBytesWrite = 0;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #",MatchSource.WIKI,doc/master/classTFTP.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFTP.html
https://root.cern/doc/master/classTFTP.html:12478,Integrability,message,message,12478,"tic const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TFTP ();  ;  TFTP (const TFTP &)=delete;  ; void Init (const char *url, Int_t parallel, Int_t wsize);  Set up the actual connection. ;  ; void operator= (const TFTP &)=delete;  ; void PrintError (const char *where, Int_t err) const;  Print error string depending on error code. ;  ; Int_t Recv (Int_t &status, EMessageTypes &kind) const;  Return status from rootd server and message kind. ;  ; void SetMode (Int_t mode);  . Private Attributes; Int_t fBlockSize;  ; Long64_t fBytesRead;  ; Long64_t fBytesWrite;  connection to rootd ;  ; TString fCurrentFile;  ; Bool_t fDir;  ; TString fHost;  ; Int_t fLastBlock;  ; Int_t fMode;  ; Int_t fParallel;  ; Int_t fPort;  ; Int_t fProtocol;  ; Long64_t fRestartAt;  ; TSocket * fSocket;  ; TString fUser;  ; Int_t fWindowSize;  . Static Private Attributes; static Long64_t fgBytesRead = 0;  ; static Long64_t fgBytesWrite = 0;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TFTP.h>. Inheritance diagram for TFTP:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera ins",MatchSource.WIKI,doc/master/classTFTP.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFTP.html
https://root.cern/doc/master/classTFTP.html:14448,Integrability,message,message,14448,"ember Enumeration Documentation. ◆ anonymous enum. anonymous enum. EnumeratorkDfltBlockSize ; kDfltWindowSize ; kBinary ; kAscii . Definition at line 68 of file TFTP.h. Constructor & Destructor Documentation. ◆ TFTP() [1/3]. TFTP::TFTP ; (; ). inlineprivate . Definition at line 53 of file TFTP.h. ◆ TFTP() [2/3]. TFTP::TFTP ; (; const TFTP & ; ). privatedelete . ◆ TFTP() [3/3]. TFTP::TFTP ; (; const char * ; url, . Int_t ; par = 1, . Int_t ; wsize = kDfltWindowSize, . TSocket * ; sock = nullptr . ). Open connection to host specified by the url using par parallel sockets. ; The url has the form: [root[s,k]://]host[:port]. If port is not specified the default rootd port (1094) will be used. Using wsize one can specify the tcp window size. Normally this is not needed when using parallel sockets. An existing connection (TSocket *sock) can also be used to establish the FTP session. ; Definition at line 74 of file TFTP.cxx. ◆ ~TFTP(). TFTP::~TFTP ; (; ). virtual . TFTP dtor. Send close message and close socket. ; Definition at line 149 of file TFTP.cxx. Member Function Documentation. ◆ AccessPathName(). Bool_t TFTP::AccessPathName ; (; const char * ; path, . EAccessMode ; mode = kFileExists, . Bool_t ; print = kFALSE . ). Returns kFALSE if one can access a file using the specified access mode. ; Mode is the same as for the Unix access(2) function. Attention, bizarre convention of return value!! ; Definition at line 1111 of file TFTP.cxx. ◆ Ascii(). void TFTP::Ascii ; (; ). inline . Definition at line 107 of file TFTP.h. ◆ ascii(). void TFTP::ascii ; (; ). inline . Definition at line 123 of file TFTP.h. ◆ bin(). void TFTP::bin ; (; ). inline . Definition at line 122 of file TFTP.h. ◆ Binary(). void TFTP::Binary ; (; ). inline . Definition at line 106 of file TFTP.h. ◆ bye(). void TFTP::bye ; (; ). inline . Definition at line 121 of file TFTP.h. ◆ cd(). void TFTP::cd ; (; const char * ; dir); const. inline . Definition at line 113 of file TFTP.h. ◆ ChangeDirectory(). Int_t TF",MatchSource.WIKI,doc/master/classTFTP.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFTP.html
https://root.cern/doc/master/classTFTP.html:15575,Integrability,message,message,15575,"* ; path, . EAccessMode ; mode = kFileExists, . Bool_t ; print = kFALSE . ). Returns kFALSE if one can access a file using the specified access mode. ; Mode is the same as for the Unix access(2) function. Attention, bizarre convention of return value!! ; Definition at line 1111 of file TFTP.cxx. ◆ Ascii(). void TFTP::Ascii ; (; ). inline . Definition at line 107 of file TFTP.h. ◆ ascii(). void TFTP::ascii ; (; ). inline . Definition at line 123 of file TFTP.h. ◆ bin(). void TFTP::bin ; (; ). inline . Definition at line 122 of file TFTP.h. ◆ Binary(). void TFTP::Binary ; (; ). inline . Definition at line 106 of file TFTP.h. ◆ bye(). void TFTP::bye ; (; ). inline . Definition at line 121 of file TFTP.h. ◆ cd(). void TFTP::cd ; (; const char * ; dir); const. inline . Definition at line 113 of file TFTP.h. ◆ ChangeDirectory(). Int_t TFTP::ChangeDirectory ; (; const char * ; dir); const. Change the remote directory. ; If the remote directory contains a .message file and it is < 1024 characters then the contents is echoed back. Returns 0 in case of success and -1 in case of failure. ; Definition at line 628 of file TFTP.cxx. ◆ ChangePermission(). Int_t TFTP::ChangePermission ; (; const char * ; file, . Int_t ; mode . ); const. Change permissions of a remote file. ; Anonymous users may not chnage permissions. Returns 0 in case of success and -1 in case of failure. ; Definition at line 853 of file TFTP.cxx. ◆ chmod(). void TFTP::chmod ; (; const char * ; file, . Int_t ; mode . ); const. inline . Definition at line 120 of file TFTP.h. ◆ Class(). static TClass * TFTP::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TFTP::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TFTP::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 125 of file TFTP.h. ◆ Close(). Int_t TFTP::Close ; (; ). Close ftp connection. ; Returns 0 in case of succes",MatchSource.WIKI,doc/master/classTFTP.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFTP.html
https://root.cern/doc/master/classTFTP.html:21652,Integrability,depend,depending,21652,"ion at line 114 of file TFTP.h. ◆ mv(). void TFTP::mv ; (; const char * ; file1, . const char * ; file2 . ); const. inline . Definition at line 118 of file TFTP.h. ◆ OpenDirectory(). Bool_t TFTP::OpenDirectory ; (; const char * ; dir, . Bool_t ; print = kFALSE . ). Open a directory via rootd. ; Returns kTRUE in case of success. Returns kFALSE in case of error. ; Definition at line 914 of file TFTP.cxx. ◆ operator=(). void TFTP::operator= ; (; const TFTP & ; ). privatedelete . ◆ Print(). void TFTP::Print ; (; Option_t * ; opt = """"); const. overridevirtual . Print some info about the FTP connection. ; Reimplemented from TObject.; Definition at line 157 of file TFTP.cxx. ◆ PrintDirectory(). Int_t TFTP::PrintDirectory ; (; ); const. Print path of remote working directory. ; Returns 0 in case of succes and -1 in cse of failure. ; Definition at line 764 of file TFTP.cxx. ◆ PrintError(). void TFTP::PrintError ; (; const char * ; where, . Int_t ; err . ); const. private . Print error string depending on error code. ; Definition at line 182 of file TFTP.cxx. ◆ put(). void TFTP::put ; (; const char * ; file, . const char * ; remoteName = nullptr . ). inline . Definition at line 111 of file TFTP.h. ◆ PutFile(). Long64_t TFTP::PutFile ; (; const char * ; file, . const char * ; remoteName = nullptr . ). Transfer file to remote host. ; Returns number of bytes sent or < 0 in case of error. Error -1 connection is still open, error -2 connection has been closed. In case of failure fRestartAt is set to the number of bytes correclty transfered. Calling PutFile() immediately afterwards will restart at fRestartAt. If this is not desired call SetRestartAt(0) before calling PutFile(). If rootd reports that the file is locked, and you are sure this is not the case (e.g. due to a crash), you can force unlock it by prepending the remoteName with a '-'. ; Definition at line 233 of file TFTP.cxx. ◆ pwd(). void TFTP::pwd ; (; ); const. inline . Definition at line 117 of file TFTP.h. ◆ Recv(). I",MatchSource.WIKI,doc/master/classTFTP.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFTP.html
https://root.cern/doc/master/classTFTP.html:22776,Integrability,message,message,22776,"file, . const char * ; remoteName = nullptr . ). inline . Definition at line 111 of file TFTP.h. ◆ PutFile(). Long64_t TFTP::PutFile ; (; const char * ; file, . const char * ; remoteName = nullptr . ). Transfer file to remote host. ; Returns number of bytes sent or < 0 in case of error. Error -1 connection is still open, error -2 connection has been closed. In case of failure fRestartAt is set to the number of bytes correclty transfered. Calling PutFile() immediately afterwards will restart at fRestartAt. If this is not desired call SetRestartAt(0) before calling PutFile(). If rootd reports that the file is locked, and you are sure this is not the case (e.g. due to a crash), you can force unlock it by prepending the remoteName with a '-'. ; Definition at line 233 of file TFTP.cxx. ◆ pwd(). void TFTP::pwd ; (; ); const. inline . Definition at line 117 of file TFTP.h. ◆ Recv(). Int_t TFTP::Recv ; (; Int_t & ; status, . EMessageTypes & ; kind . ); const. private . Return status from rootd server and message kind. ; Returns -1 in case of error otherwise 8 (sizeof 2 words, status and kind). ; Definition at line 191 of file TFTP.cxx. ◆ RenameFile(). Int_t TFTP::RenameFile ; (; const char * ; file1, . const char * ; file2 . ); const. Rename a remote file. ; Anonymous users may not rename files. Returns 0 in case of success and -1 in case of failure. ; Definition at line 790 of file TFTP.cxx. ◆ rm(). void TFTP::rm ; (; const char * ; file); const. inline . Definition at line 119 of file TFTP.h. ◆ rmdir(). void TFTP::rmdir ; (; const char * ; dir); const. inline . Definition at line 115 of file TFTP.h. ◆ SetBlockSize(). void TFTP::SetBlockSize ; (; Int_t ; blockSize). Make sure the block size is a power of two, with a minimum of 32768. ; Definition at line 207 of file TFTP.cxx. ◆ SetMode(). void TFTP::SetMode ; (; Int_t ; mode). inlineprivate . Definition at line 62 of file TFTP.h. ◆ SetRestartAt(). void TFTP::SetRestartAt ; (; Long64_t ; at). inline . Definition at line 81 ",MatchSource.WIKI,doc/master/classTFTP.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFTP.html
https://root.cern/doc/master/classTFTP.html:498,Modifiability,inherit,inherited,498,". ROOT: TFTP Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; Static Private Attributes |; List of all members ; TFTP Class Reference. . Definition at line 34 of file TFTP.h. Public Types; enum  { kDfltBlockSize = 0x80000; , kDfltWindowSize = 65535; , kBinary = 0; , kAscii = 1; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TFTP (const char *url, Int_t parallel=1, Int_t wsize=kDfltWindowSize, TSocket *sock=nullptr);  Open connection to host specified by the url using par parallel sockets. ;  ; virtual ~TFTP ();  TFTP dtor. Send close message and close socket. ;  ; Bool_t AccessPathName (const char *path, EAccessMode mode=kFileExists, Bool_t print=kFALSE);  Returns kFALSE if one can access a file using the specified access mode. ;  ; void Ascii ();  ; void ascii ();  ; void bin ();  ; void Binary ();  ; void bye ();  ; void cd (const char *dir) const;  ; Int_t ChangeDirectory (const char *dir) const;  Change the remote directory. ;  ; Int_t ChangePermission (const char *file, Int_t mode) const;  Change permissions of a remote file. ;  ; void chmod (const char *file, Int_t mode) const;  ; Int_t Close ();  Close ftp connection. ;  ; Int_t DeleteDirectory (const ch",MatchSource.WIKI,doc/master/classTFTP.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFTP.html
https://root.cern/doc/master/classTFTP.html:4073,Modifiability,inherit,inherited,4073," char *dir) const;  ; void mv (const char *file1, const char *file2) const;  ; Bool_t OpenDirectory (const char *name, Bool_t print=kFALSE);  Open a directory via rootd. ;  ; void Print (Option_t *opt="""") const override;  Print some info about the FTP connection. ;  ; Int_t PrintDirectory () const;  Print path of remote working directory. ;  ; void put (const char *file, const char *remoteName=nullptr);  ; Long64_t PutFile (const char *file, const char *remoteName=nullptr);  Transfer file to remote host. ;  ; void pwd () const;  ; Int_t RenameFile (const char *file1, const char *file2) const;  Rename a remote file. ;  ; void rm (const char *file) const;  ; void rmdir (const char *dir) const;  ; void SetBlockSize (Int_t blockSize);  Make sure the block size is a power of two, with a minimum of 32768. ;  ; void SetRestartAt (Long64_t at);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,doc/master/classTFTP.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFTP.html
https://root.cern/doc/master/classTFTP.html:5470,Modifiability,inherit,inheritance,5470,"pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTFTP.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFTP.html
https://root.cern/doc/master/classTFTP.html:7681,Modifiability,inherit,inherits,7681,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality th",MatchSource.WIKI,doc/master/classTFTP.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFTP.html
https://root.cern/doc/master/classTFTP.html:7798,Modifiability,inherit,inherits,7798,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden t",MatchSource.WIKI,doc/master/classTFTP.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFTP.html
https://root.cern/doc/master/classTFTP.html:11590,Modifiability,inherit,inherited,11590,"reamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TFTP ();  ;  TFTP (const TFTP &)=delete;  ; void Init (const char *url, Int_t parallel, Int_t wsize);  Set up the actual connection. ;  ; void operator= (const TFTP &)=delete;  ; void PrintError (const char *where, Int_t err) const;  Print error string depending on error code. ;  ; Int_t Recv (Int_t &status, EMessageTypes &kind) const;  Return status from rootd server and message kind. ;  ; void SetMode (Int_t mode);  . Private Attributes; Int_t fBlockSize;  ; Long64_t fBytesRead;  ; Long64_t ",MatchSource.WIKI,doc/master/classTFTP.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFTP.html
https://root.cern/doc/master/classTFTP.html:13025,Modifiability,inherit,inherited,13025," TFTP &)=delete;  ; void Init (const char *url, Int_t parallel, Int_t wsize);  Set up the actual connection. ;  ; void operator= (const TFTP &)=delete;  ; void PrintError (const char *where, Int_t err) const;  Print error string depending on error code. ;  ; Int_t Recv (Int_t &status, EMessageTypes &kind) const;  Return status from rootd server and message kind. ;  ; void SetMode (Int_t mode);  . Private Attributes; Int_t fBlockSize;  ; Long64_t fBytesRead;  ; Long64_t fBytesWrite;  connection to rootd ;  ; TString fCurrentFile;  ; Bool_t fDir;  ; TString fHost;  ; Int_t fLastBlock;  ; Int_t fMode;  ; Int_t fParallel;  ; Int_t fPort;  ; Int_t fProtocol;  ; Long64_t fRestartAt;  ; TSocket * fSocket;  ; TString fUser;  ; Int_t fWindowSize;  . Static Private Attributes; static Long64_t fgBytesRead = 0;  ; static Long64_t fgBytesWrite = 0;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TFTP.h>. Inheritance diagram for TFTP:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ anonymous enum. anonymous enum. EnumeratorkDfltBlockSize ; kDfltWindowSize ; kBinary ; kAscii . Definition at line 68 of file TFTP.h. Constructor & Destructor Documentation. ◆ TFTP() [1/3]. TFTP::TFTP ; (; ). inlineprivate . Definition at line 53 of file TFTP.h. ◆ TFTP() [2/3]. TFTP::TFTP ; (; const TFTP & ; ). privatedelete . ◆ TFTP() [3/3]. TFTP::TFTP ; (; const char * ; url, . Int_t ; par = 1, . Int_t ; wsize = kDfltWindowSize, . TSocket * ; sock = nullptr . ). Open connection to host specified by the url using par parallel sockets. ; The url has the form: [root[s,k]://]host[:port]. If port is not specified the default rootd por",MatchSource.WIKI,doc/master/classTFTP.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFTP.html
https://root.cern/doc/master/classTFTP.html:13124,Modifiability,inherit,inherited,13124," TFTP &)=delete;  ; void Init (const char *url, Int_t parallel, Int_t wsize);  Set up the actual connection. ;  ; void operator= (const TFTP &)=delete;  ; void PrintError (const char *where, Int_t err) const;  Print error string depending on error code. ;  ; Int_t Recv (Int_t &status, EMessageTypes &kind) const;  Return status from rootd server and message kind. ;  ; void SetMode (Int_t mode);  . Private Attributes; Int_t fBlockSize;  ; Long64_t fBytesRead;  ; Long64_t fBytesWrite;  connection to rootd ;  ; TString fCurrentFile;  ; Bool_t fDir;  ; TString fHost;  ; Int_t fLastBlock;  ; Int_t fMode;  ; Int_t fParallel;  ; Int_t fPort;  ; Int_t fProtocol;  ; Long64_t fRestartAt;  ; TSocket * fSocket;  ; TString fUser;  ; Int_t fWindowSize;  . Static Private Attributes; static Long64_t fgBytesRead = 0;  ; static Long64_t fgBytesWrite = 0;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TFTP.h>. Inheritance diagram for TFTP:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ anonymous enum. anonymous enum. EnumeratorkDfltBlockSize ; kDfltWindowSize ; kBinary ; kAscii . Definition at line 68 of file TFTP.h. Constructor & Destructor Documentation. ◆ TFTP() [1/3]. TFTP::TFTP ; (; ). inlineprivate . Definition at line 53 of file TFTP.h. ◆ TFTP() [2/3]. TFTP::TFTP ; (; const TFTP & ; ). privatedelete . ◆ TFTP() [3/3]. TFTP::TFTP ; (; const char * ; url, . Int_t ; par = 1, . Int_t ; wsize = kDfltWindowSize, . TSocket * ; sock = nullptr . ). Open connection to host specified by the url using par parallel sockets. ; The url has the form: [root[s,k]://]host[:port]. If port is not specified the default rootd por",MatchSource.WIKI,doc/master/classTFTP.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFTP.html
https://root.cern/doc/master/classTFTP.html:1513,Security,access,access,1513,"= 1; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TFTP (const char *url, Int_t parallel=1, Int_t wsize=kDfltWindowSize, TSocket *sock=nullptr);  Open connection to host specified by the url using par parallel sockets. ;  ; virtual ~TFTP ();  TFTP dtor. Send close message and close socket. ;  ; Bool_t AccessPathName (const char *path, EAccessMode mode=kFileExists, Bool_t print=kFALSE);  Returns kFALSE if one can access a file using the specified access mode. ;  ; void Ascii ();  ; void ascii ();  ; void bin ();  ; void Binary ();  ; void bye ();  ; void cd (const char *dir) const;  ; Int_t ChangeDirectory (const char *dir) const;  Change the remote directory. ;  ; Int_t ChangePermission (const char *file, Int_t mode) const;  Change permissions of a remote file. ;  ; void chmod (const char *file, Int_t mode) const;  ; Int_t Close ();  Close ftp connection. ;  ; Int_t DeleteDirectory (const char *dir) const;  Delete a remote directory. ;  ; Int_t DeleteFile (const char *file) const;  Delete a remote file. ;  ; void FreeDirectory (Bool_t print=kFALSE);  Free a remotely open directory via rootd. ;  ; void get (const char *file, const char *localName=nullptr);  ; Int_t GetBlockSize () const;  ; const char * GetDirEntry (Bool_t print=kFALSE);  Get directory entry via rootd. ;  ; Long64_t GetFile (const char *file, const char *localName=nullptr);  Transfer file",MatchSource.WIKI,doc/master/classTFTP.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFTP.html
https://root.cern/doc/master/classTFTP.html:1547,Security,access,access,1547,"= 1; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TFTP (const char *url, Int_t parallel=1, Int_t wsize=kDfltWindowSize, TSocket *sock=nullptr);  Open connection to host specified by the url using par parallel sockets. ;  ; virtual ~TFTP ();  TFTP dtor. Send close message and close socket. ;  ; Bool_t AccessPathName (const char *path, EAccessMode mode=kFileExists, Bool_t print=kFALSE);  Returns kFALSE if one can access a file using the specified access mode. ;  ; void Ascii ();  ; void ascii ();  ; void bin ();  ; void Binary ();  ; void bye ();  ; void cd (const char *dir) const;  ; Int_t ChangeDirectory (const char *dir) const;  Change the remote directory. ;  ; Int_t ChangePermission (const char *file, Int_t mode) const;  Change permissions of a remote file. ;  ; void chmod (const char *file, Int_t mode) const;  ; Int_t Close ();  Close ftp connection. ;  ; Int_t DeleteDirectory (const char *dir) const;  Delete a remote directory. ;  ; Int_t DeleteFile (const char *file) const;  Delete a remote file. ;  ; void FreeDirectory (Bool_t print=kFALSE);  Free a remotely open directory via rootd. ;  ; void get (const char *file, const char *localName=nullptr);  ; Int_t GetBlockSize () const;  ; const char * GetDirEntry (Bool_t print=kFALSE);  Get directory entry via rootd. ;  ; Long64_t GetFile (const char *file, const char *localName=nullptr);  Transfer file",MatchSource.WIKI,doc/master/classTFTP.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFTP.html
https://root.cern/doc/master/classTFTP.html:7312,Security,hash,hash,7312," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t",MatchSource.WIKI,doc/master/classTFTP.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFTP.html
https://root.cern/doc/master/classTFTP.html:14715,Security,access,access,14715," at line 53 of file TFTP.h. ◆ TFTP() [2/3]. TFTP::TFTP ; (; const TFTP & ; ). privatedelete . ◆ TFTP() [3/3]. TFTP::TFTP ; (; const char * ; url, . Int_t ; par = 1, . Int_t ; wsize = kDfltWindowSize, . TSocket * ; sock = nullptr . ). Open connection to host specified by the url using par parallel sockets. ; The url has the form: [root[s,k]://]host[:port]. If port is not specified the default rootd port (1094) will be used. Using wsize one can specify the tcp window size. Normally this is not needed when using parallel sockets. An existing connection (TSocket *sock) can also be used to establish the FTP session. ; Definition at line 74 of file TFTP.cxx. ◆ ~TFTP(). TFTP::~TFTP ; (; ). virtual . TFTP dtor. Send close message and close socket. ; Definition at line 149 of file TFTP.cxx. Member Function Documentation. ◆ AccessPathName(). Bool_t TFTP::AccessPathName ; (; const char * ; path, . EAccessMode ; mode = kFileExists, . Bool_t ; print = kFALSE . ). Returns kFALSE if one can access a file using the specified access mode. ; Mode is the same as for the Unix access(2) function. Attention, bizarre convention of return value!! ; Definition at line 1111 of file TFTP.cxx. ◆ Ascii(). void TFTP::Ascii ; (; ). inline . Definition at line 107 of file TFTP.h. ◆ ascii(). void TFTP::ascii ; (; ). inline . Definition at line 123 of file TFTP.h. ◆ bin(). void TFTP::bin ; (; ). inline . Definition at line 122 of file TFTP.h. ◆ Binary(). void TFTP::Binary ; (; ). inline . Definition at line 106 of file TFTP.h. ◆ bye(). void TFTP::bye ; (; ). inline . Definition at line 121 of file TFTP.h. ◆ cd(). void TFTP::cd ; (; const char * ; dir); const. inline . Definition at line 113 of file TFTP.h. ◆ ChangeDirectory(). Int_t TFTP::ChangeDirectory ; (; const char * ; dir); const. Change the remote directory. ; If the remote directory contains a .message file and it is < 1024 characters then the contents is echoed back. Returns 0 in case of success and -1 in case of failure. ; Definition at lin",MatchSource.WIKI,doc/master/classTFTP.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFTP.html
https://root.cern/doc/master/classTFTP.html:14749,Security,access,access,14749," at line 53 of file TFTP.h. ◆ TFTP() [2/3]. TFTP::TFTP ; (; const TFTP & ; ). privatedelete . ◆ TFTP() [3/3]. TFTP::TFTP ; (; const char * ; url, . Int_t ; par = 1, . Int_t ; wsize = kDfltWindowSize, . TSocket * ; sock = nullptr . ). Open connection to host specified by the url using par parallel sockets. ; The url has the form: [root[s,k]://]host[:port]. If port is not specified the default rootd port (1094) will be used. Using wsize one can specify the tcp window size. Normally this is not needed when using parallel sockets. An existing connection (TSocket *sock) can also be used to establish the FTP session. ; Definition at line 74 of file TFTP.cxx. ◆ ~TFTP(). TFTP::~TFTP ; (; ). virtual . TFTP dtor. Send close message and close socket. ; Definition at line 149 of file TFTP.cxx. Member Function Documentation. ◆ AccessPathName(). Bool_t TFTP::AccessPathName ; (; const char * ; path, . EAccessMode ; mode = kFileExists, . Bool_t ; print = kFALSE . ). Returns kFALSE if one can access a file using the specified access mode. ; Mode is the same as for the Unix access(2) function. Attention, bizarre convention of return value!! ; Definition at line 1111 of file TFTP.cxx. ◆ Ascii(). void TFTP::Ascii ; (; ). inline . Definition at line 107 of file TFTP.h. ◆ ascii(). void TFTP::ascii ; (; ). inline . Definition at line 123 of file TFTP.h. ◆ bin(). void TFTP::bin ; (; ). inline . Definition at line 122 of file TFTP.h. ◆ Binary(). void TFTP::Binary ; (; ). inline . Definition at line 106 of file TFTP.h. ◆ bye(). void TFTP::bye ; (; ). inline . Definition at line 121 of file TFTP.h. ◆ cd(). void TFTP::cd ; (; const char * ; dir); const. inline . Definition at line 113 of file TFTP.h. ◆ ChangeDirectory(). Int_t TFTP::ChangeDirectory ; (; const char * ; dir); const. Change the remote directory. ; If the remote directory contains a .message file and it is < 1024 characters then the contents is echoed back. Returns 0 in case of success and -1 in case of failure. ; Definition at lin",MatchSource.WIKI,doc/master/classTFTP.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFTP.html
https://root.cern/doc/master/classTFTP.html:14797,Security,access,access,14797,"t TFTP & ; ). privatedelete . ◆ TFTP() [3/3]. TFTP::TFTP ; (; const char * ; url, . Int_t ; par = 1, . Int_t ; wsize = kDfltWindowSize, . TSocket * ; sock = nullptr . ). Open connection to host specified by the url using par parallel sockets. ; The url has the form: [root[s,k]://]host[:port]. If port is not specified the default rootd port (1094) will be used. Using wsize one can specify the tcp window size. Normally this is not needed when using parallel sockets. An existing connection (TSocket *sock) can also be used to establish the FTP session. ; Definition at line 74 of file TFTP.cxx. ◆ ~TFTP(). TFTP::~TFTP ; (; ). virtual . TFTP dtor. Send close message and close socket. ; Definition at line 149 of file TFTP.cxx. Member Function Documentation. ◆ AccessPathName(). Bool_t TFTP::AccessPathName ; (; const char * ; path, . EAccessMode ; mode = kFileExists, . Bool_t ; print = kFALSE . ). Returns kFALSE if one can access a file using the specified access mode. ; Mode is the same as for the Unix access(2) function. Attention, bizarre convention of return value!! ; Definition at line 1111 of file TFTP.cxx. ◆ Ascii(). void TFTP::Ascii ; (; ). inline . Definition at line 107 of file TFTP.h. ◆ ascii(). void TFTP::ascii ; (; ). inline . Definition at line 123 of file TFTP.h. ◆ bin(). void TFTP::bin ; (; ). inline . Definition at line 122 of file TFTP.h. ◆ Binary(). void TFTP::Binary ; (; ). inline . Definition at line 106 of file TFTP.h. ◆ bye(). void TFTP::bye ; (; ). inline . Definition at line 121 of file TFTP.h. ◆ cd(). void TFTP::cd ; (; const char * ; dir); const. inline . Definition at line 113 of file TFTP.h. ◆ ChangeDirectory(). Int_t TFTP::ChangeDirectory ; (; const char * ; dir); const. Change the remote directory. ; If the remote directory contains a .message file and it is < 1024 characters then the contents is echoed back. Returns 0 in case of success and -1 in case of failure. ; Definition at line 628 of file TFTP.cxx. ◆ ChangePermission(). Int_t TFTP::Change",MatchSource.WIKI,doc/master/classTFTP.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFTP.html
https://root.cern/doc/master/classTFumili-members.html:1613,Availability,error,error,1613,"amedvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; Copy(TObject &named) const overrideTNamedvirtual; DeclFileName()TFumiliinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DeleteArrays()TFumili; Derivatives(Double_t *, Double_t *)TFumili; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Eval(Int_t &npar, Double_t *grad, Double_t &fval, Double_t *par, Int_t flag)TFumili; EvalTFN(Double_t *, Double_t *)TFumili; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteCommand(const char *command, Double_t *args, Int_t nargs) overrideTFumilivirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py)TObjectvirtual; ExecuteSetCommand(Int_t)TFumili; fATFumiliprivate; fAKAPPATFumiliprivate; fAMNTFumiliprivate; fAMXTFumiliprivate; fANamesTFumiliprivate; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; fCacheTVirtualFitterprotected; fCacheSizeTVirtualFitterprotected; fCmParTFumiliprivate; FCNFunc_t typedefTVirtualFitter; fCwordTFumiliprivate; fDATFumiliprivate; fDEBUGTFumiliprivate; fDFTFumiliprivate; fENDFLGTFumiliprivate; fEPSTFumiliprivate; fEXDATFumiliprivate; fFCNTVirtualFitterprotected; fgDtorOnlyTObjectprivatestatic; fgObjectStatTObjectprivatestatic; fGrTFumiliprivate; fGRADTFumiliprivate; fGTTFumiliprivate; FillBuffer(char *&buffer)TNamedvirtual; fINDFLGTFumiliprivate; FindObject(const char *name) constTObjectvirtual; FindObject(const TObject *obj) constTObjectvirtual; FitChisquare(Int_t &npar, Doub",MatchSource.WIKI,doc/master/classTFumili-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumili-members.html
https://root.cern/doc/master/classTFumili-members.html:1694,Availability,error,error,1694,"amedvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; Copy(TObject &named) const overrideTNamedvirtual; DeclFileName()TFumiliinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DeleteArrays()TFumili; Derivatives(Double_t *, Double_t *)TFumili; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Eval(Int_t &npar, Double_t *grad, Double_t &fval, Double_t *par, Int_t flag)TFumili; EvalTFN(Double_t *, Double_t *)TFumili; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteCommand(const char *command, Double_t *args, Int_t nargs) overrideTFumilivirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py)TObjectvirtual; ExecuteSetCommand(Int_t)TFumili; fATFumiliprivate; fAKAPPATFumiliprivate; fAMNTFumiliprivate; fAMXTFumiliprivate; fANamesTFumiliprivate; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; fCacheTVirtualFitterprotected; fCacheSizeTVirtualFitterprotected; fCmParTFumiliprivate; FCNFunc_t typedefTVirtualFitter; fCwordTFumiliprivate; fDATFumiliprivate; fDEBUGTFumiliprivate; fDFTFumiliprivate; fENDFLGTFumiliprivate; fEPSTFumiliprivate; fEXDATFumiliprivate; fFCNTVirtualFitterprotected; fgDtorOnlyTObjectprivatestatic; fgObjectStatTObjectprivatestatic; fGrTFumiliprivate; fGRADTFumiliprivate; fGTTFumiliprivate; FillBuffer(char *&buffer)TNamedvirtual; fINDFLGTFumiliprivate; FindObject(const char *name) constTObjectvirtual; FindObject(const TObject *obj) constTObjectvirtual; FitChisquare(Int_t &npar, Doub",MatchSource.WIKI,doc/master/classTFumili-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumili-members.html
https://root.cern/doc/master/classTFumili-members.html:187,Modifiability,inherit,inherited,187,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TFumili Member List. This is the complete list of members for TFumili, including all inherited members. AbstractMethod(const char *method) constTObject; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b)TObjectvirtual; BuildArrays()TFumili; CheckedHash()TObjectinline; Chisquare(Int_t npar, Double_t *params) const overrideTFumilivirtual; Class()TFumilistatic; Class_Name()TFumilistatic; Class_Version()TFumiliinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *opt="""") overrideTFumilivirtual; Clone(const char *newname="""") const overrideTNamedvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; Copy(TObject &named) const overrideTNamedvirtual; DeclFileName()TFumiliinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DeleteArrays()TFumili; Derivatives(Double_t *, Double_t *)TFumili; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Eval(Int_t &npar, Double_t *grad, Double_t &fval, Double_t *par, Int_t flag)TFumili; EvalTFN(Double_t *, Double_t *)TFumili; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteCommand(const char *command, Double_t *args, Int_t nargs) overrideTFumilivirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py)TObjectvirtual; ExecuteSetCommand(Int_t)TFumili; fATFumiliprivate; fAKAPPATFumiliprivate; fAMNTFumiliprivate; fAMXTFumiliprivate; fANamesTFumil",MatchSource.WIKI,doc/master/classTFumili-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumili-members.html
https://root.cern/doc/master/classTFumili.html:997,Availability,error,errors,997,". ROOT: TFumili Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; TFumili Class Reference. . FUMILI minimization package; FUMILI is based on ideas, proposed by I.N. Silin [See NIM A440, 2000 (p431)]. It was converted from FORTRAN to C by Sergey Yaschenko s.yas.nosp@m.chen.nosp@m.ko@fz.nosp@m.-jue.nosp@m.lich..nosp@m.de; FUMILI is used to minimize Chi-square function or to search maximum of likelihood function.; Experimentally measured values \(F_i\) are fitted with theoretical functions \(f_i({\vec x}_i,\vec\theta\,\,)\), where \({\vec x}_i\) are coordinates, and \(\vec\theta\) – vector of parameters.; For better convergence Chi-square function has to be the following form. \[; {\chi^2\over2}={1\over2}\sum^n_{i=1}\left(f_i(\vec; x_i,\vec\theta\,\,)-F_i\over\sigma_i\right)^2 \tag{1}; \]. where \(\sigma_i\) are errors of measured function.; The minimum condition is. \[; {\partial\chi^2\over\partial\theta_i}=\sum^n_{j=1}{1\over\sigma^2_j}\cdot; {\partial f_j\over\partial\theta_i}\left[f_j(\vec; x_j,\vec\theta\,\,)-F_j\right]=0,\qquad i=1\ldots m\tag{2}; \]. where m is the quantity of parameters.; Expanding left part of (2) over parameter increments and retaining only linear terms one gets. \[; \left(\partial\chi^2\over\theta_i\right)_{\vec\theta={\vec\theta}^0}; +\sum_k\left(\partial^2\chi^2\over\partial\theta_i\partial\theta_k\right)_{; \vec\theta={\vec\theta}^0}\cdot(\theta_k-\theta_k^0); = 0\tag{3}; \]. Here \({\vec\theta}_0\) is some initial value of parameters. In general case:. \[; {\partial^2\chi^2\over\partial\theta_i\partial\theta_k}=; \sum^n_{j=1}{1\over\sigma^2_j}{\partial f_j\over\theta_i}; {\partial f_j\over\theta_k} +; \sum^n_{j=1}{(f_j - F_j)\over\sigma^2_j}\cdot; {\partial^2f_j\over\partial\theta_i\partial\theta_k}\tag{4}; \]. In FUMILI algorithm for second derivatives of Chi-squar",MatchSource.WIKI,doc/master/classTFumili.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumili.html
https://root.cern/doc/master/classTFumili.html:2220,Availability,down,down,2220,"}\left[f_j(\vec; x_j,\vec\theta\,\,)-F_j\right]=0,\qquad i=1\ldots m\tag{2}; \]. where m is the quantity of parameters.; Expanding left part of (2) over parameter increments and retaining only linear terms one gets. \[; \left(\partial\chi^2\over\theta_i\right)_{\vec\theta={\vec\theta}^0}; +\sum_k\left(\partial^2\chi^2\over\partial\theta_i\partial\theta_k\right)_{; \vec\theta={\vec\theta}^0}\cdot(\theta_k-\theta_k^0); = 0\tag{3}; \]. Here \({\vec\theta}_0\) is some initial value of parameters. In general case:. \[; {\partial^2\chi^2\over\partial\theta_i\partial\theta_k}=; \sum^n_{j=1}{1\over\sigma^2_j}{\partial f_j\over\theta_i}; {\partial f_j\over\theta_k} +; \sum^n_{j=1}{(f_j - F_j)\over\sigma^2_j}\cdot; {\partial^2f_j\over\partial\theta_i\partial\theta_k}\tag{4}; \]. In FUMILI algorithm for second derivatives of Chi-square approximate expression is used when last term in (4) is discarded. It is often done, not always wittingly, and sometimes causes troubles, for example, if user wants to limit parameters with positive values by writing down \(\theta_i^2\) instead of \(\theta_i\). FUMILI will fail if one tries minimize \(\chi^2 = g^2(\vec\theta)\) where g is arbitrary function.; Approximate value is: ; \[{\partial^2\chi^2\over\partial\theta_i\partial\theta_k}\approx; Z_{ik}=; \sum^n_{j=1}{1\over\sigma^2_j}{\partial f_j\over\theta_i}; {\partial f_j\over\theta_k}\tag{5}; \]. Then the equations for parameter increments are ; \[\left(\partial\chi^2\over\partial\theta_i\right)_{\vec\theta={\vec\theta}^0}; +\sum_k Z_{ik}\cdot(\theta_k-\theta^0_k) = 0,; \qquad i=1\ldots m\tag{6}; \]. Remarkable feature of algorithm is the technique for step restriction. For an initial value of parameter \({\vec\theta}^0\) a parallelepiped \(P_0\) is built with the center at \({\vec\theta}^0\) and axes parallel to coordinate axes \(\theta_i\). The lengths of parallelepiped sides along i-th axis is \(2b_i\), where \(b_i\) is such a value that the functions \(f_j(\vec\theta)\) are quasi-linea",MatchSource.WIKI,doc/master/classTFumili.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumili.html
https://root.cern/doc/master/classTFumili.html:3950,Availability,error,errors,3950,"of parameter \({\vec\theta}^0\) a parallelepiped \(P_0\) is built with the center at \({\vec\theta}^0\) and axes parallel to coordinate axes \(\theta_i\). The lengths of parallelepiped sides along i-th axis is \(2b_i\), where \(b_i\) is such a value that the functions \(f_j(\vec\theta)\) are quasi-linear all over the parallelepiped.; FUMILI takes into account simple linear inequalities in the form: ; \[; \theta_i^{\rm min}\le\theta_i\le\theta^{\rm max}_i\tag{7}; \]. They form parallelepiped \(P\) ( \(P_0\) may be deformed by \(P\)). Very similar step formulae are used in FUMILI for negative logarithm of the likelihood function with the same idea - linearization of function argument. ; Definition at line 11 of file TFumili.h. Public Member Functions;  TFumili (Int_t maxpar=25);  ;  ~TFumili () override;  TFumili destructor. ;  ; void BuildArrays ();  Allocates memory for internal arrays. ;  ; Double_t Chisquare (Int_t npar, Double_t *params) const override;  return a chisquare equivalent ;  ; void Clear (Option_t *opt="""") override;  Resets all parameter names, values and errors to zero. ;  ; void DeleteArrays ();  Deallocates memory. Called from destructor TFumili::~TFumili. ;  ; void Derivatives (Double_t *, Double_t *);  Calculates partial derivatives of theoretical function. ;  ; Int_t Eval (Int_t &npar, Double_t *grad, Double_t &fval, Double_t *par, Int_t flag);  Evaluate the minimisation function. ;  ; Double_t EvalTFN (Double_t *, Double_t *);  Evaluate theoretical function. ;  ; Int_t ExecuteCommand (const char *command, Double_t *args, Int_t nargs) override;  Execute MINUIT commands. ;  ; Int_t ExecuteSetCommand (Int_t);  Called from TFumili::ExecuteCommand in case of ""SET xxx"" and ""SHOW xxx"". ;  ; virtual void FitChisquare (Int_t &npar, Double_t *gin, Double_t &f, Double_t *u, Int_t flag);  Minimization function for H1s using a Chisquare method. ;  ; virtual void FitChisquareI (Int_t &npar, Double_t *gin, Double_t &f, Double_t *u, Int_t flag);  Minimization f",MatchSource.WIKI,doc/master/classTFumili.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumili.html
https://root.cern/doc/master/classTFumili.html:5651,Availability,error,errors,5651,"al void FitChisquare (Int_t &npar, Double_t *gin, Double_t &f, Double_t *u, Int_t flag);  Minimization function for H1s using a Chisquare method. ;  ; virtual void FitChisquareI (Int_t &npar, Double_t *gin, Double_t &f, Double_t *u, Int_t flag);  Minimization function for H1s using a Chisquare method. ;  ; virtual void FitLikelihood (Int_t &npar, Double_t *gin, Double_t &f, Double_t *u, Int_t flag);  Minimization function for H1s using a Likelihood method. ;  ; virtual void FitLikelihoodI (Int_t &npar, Double_t *gin, Double_t &f, Double_t *u, Int_t flag);  Minimization function for H1s using a Likelihood method. ;  ; void FixParameter (Int_t ipar) override;  Fixes parameter number ipar. ;  ; Double_t * GetCovarianceMatrix () const override;  Return a pointer to the covariance matrix. ;  ; Double_t GetCovarianceMatrixElement (Int_t i, Int_t j) const override;  Return element i,j from the covariance matrix. ;  ; Int_t GetErrors (Int_t ipar, Double_t &eplus, Double_t &eminus, Double_t &eparab, Double_t &globcc) const override;  Return errors after MINOs not implemented. ;  ; Int_t GetNumberFreeParameters () const override;  Return the number of free parameters. ;  ; Int_t GetNumberTotalParameters () const override;  Return the total number of parameters (free + fixed) ;  ; Double_t GetParameter (Int_t ipar) const override;  Return current value of parameter ipar. ;  ; Int_t GetParameter (Int_t ipar, char *name, Double_t &value, Double_t &verr, Double_t &vlow, Double_t &vhigh) const override;  Get various ipar parameter attributes: ;  ; Double_t GetParError (Int_t ipar) const override;  Return error of parameter ipar. ;  ; const char * GetParName (Int_t ipar) const override;  Return name of parameter ipar. ;  ; Double_t * GetPL0 () const;  ; Int_t GetStats (Double_t &amin, Double_t &edm, Double_t &errdef, Int_t &nvpar, Int_t &nparx) const override;  Return global fit parameters. ;  ; Double_t GetSumLog (Int_t) override;  Return Sum(log(i) i=0,n used by log-likelihood fit",MatchSource.WIKI,doc/master/classTFumili.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumili.html
https://root.cern/doc/master/classTFumili.html:6220,Availability,error,error,6220,"ble_t *gin, Double_t &f, Double_t *u, Int_t flag);  Minimization function for H1s using a Likelihood method. ;  ; void FixParameter (Int_t ipar) override;  Fixes parameter number ipar. ;  ; Double_t * GetCovarianceMatrix () const override;  Return a pointer to the covariance matrix. ;  ; Double_t GetCovarianceMatrixElement (Int_t i, Int_t j) const override;  Return element i,j from the covariance matrix. ;  ; Int_t GetErrors (Int_t ipar, Double_t &eplus, Double_t &eminus, Double_t &eparab, Double_t &globcc) const override;  Return errors after MINOs not implemented. ;  ; Int_t GetNumberFreeParameters () const override;  Return the number of free parameters. ;  ; Int_t GetNumberTotalParameters () const override;  Return the total number of parameters (free + fixed) ;  ; Double_t GetParameter (Int_t ipar) const override;  Return current value of parameter ipar. ;  ; Int_t GetParameter (Int_t ipar, char *name, Double_t &value, Double_t &verr, Double_t &vlow, Double_t &vhigh) const override;  Get various ipar parameter attributes: ;  ; Double_t GetParError (Int_t ipar) const override;  Return error of parameter ipar. ;  ; const char * GetParName (Int_t ipar) const override;  Return name of parameter ipar. ;  ; Double_t * GetPL0 () const;  ; Int_t GetStats (Double_t &amin, Double_t &edm, Double_t &errdef, Int_t &nvpar, Int_t &nparx) const override;  Return global fit parameters. ;  ; Double_t GetSumLog (Int_t) override;  Return Sum(log(i) i=0,n used by log-likelihood fits. ;  ; Double_t * GetZ () const;  ; void InvertZ (Int_t);  Inverts packed diagonal matrix Z by square-root method. ;  ; TClass * IsA () const override;  ; Bool_t IsFixed (Int_t ipar) const override;  Return kTRUE if parameter ipar is fixed, kFALSE otherwise) ;  ; Int_t Minimize ();  Main minimization procedure. ;  ; void PrintResults (Int_t k, Double_t p) const override;  Prints fit results. ;  ; void ReleaseParameter (Int_t ipar) override;  Releases parameter number ipar. ;  ; void SetData (Double_t *, I",MatchSource.WIKI,doc/master/classTFumili.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumili.html
https://root.cern/doc/master/classTFumili.html:7482,Availability,error,error,7482,"_t * GetPL0 () const;  ; Int_t GetStats (Double_t &amin, Double_t &edm, Double_t &errdef, Int_t &nvpar, Int_t &nparx) const override;  Return global fit parameters. ;  ; Double_t GetSumLog (Int_t) override;  Return Sum(log(i) i=0,n used by log-likelihood fits. ;  ; Double_t * GetZ () const;  ; void InvertZ (Int_t);  Inverts packed diagonal matrix Z by square-root method. ;  ; TClass * IsA () const override;  ; Bool_t IsFixed (Int_t ipar) const override;  Return kTRUE if parameter ipar is fixed, kFALSE otherwise) ;  ; Int_t Minimize ();  Main minimization procedure. ;  ; void PrintResults (Int_t k, Double_t p) const override;  Prints fit results. ;  ; void ReleaseParameter (Int_t ipar) override;  Releases parameter number ipar. ;  ; void SetData (Double_t *, Int_t, Int_t);  Sets pointer to data array provided by user. ;  ; void SetFitMethod (const char *name) override;  ret fit method (chisquare or log-likelihood) ;  ; Int_t SetParameter (Int_t ipar, const char *parname, Double_t value, Double_t verr, Double_t vlow, Double_t vhigh) override;  Sets for parameter number ipar initial parameter value, name parname, initial error verr and limits vlow and vhigh. ;  ; void SetParNumber (Int_t ParNum);  ; Int_t SGZ ();  Evaluates objective function ( chi-square ), gradients and Z-matrix using data provided by user via TFumili::SetData. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TVirtualFitter;  TVirtualFitter ();  Default constructor. ;  ;  ~TVirtualFitter () override;  Cleanup virtual fitter. ;  ; virtual void GetConfidenceIntervals (Int_t n, Int_t ndim, const Double_t *x, Double_t *ci, Double_t cl=0.95);  return confidence intervals in array x of dimension ndim implemented in TFitter and TLinearFitter ;  ; virtual void GetConfidenceIntervals (TObject *obj, Double_t cl=0.95);  return confidence intervals in TObject obj implemented in",MatchSource.WIKI,doc/master/classTFumili.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumili.html
https://root.cern/doc/master/classTFumili.html:12815,Availability,error,error,12815,"ject. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTFumili.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumili.html
https://root.cern/doc/master/classTFumili.html:12904,Availability,error,error,12904,"ecord whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual ",MatchSource.WIKI,doc/master/classTFumili.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumili.html
https://root.cern/doc/master/classTFumili.html:13059,Availability,error,error,13059,"Name () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute ",MatchSource.WIKI,doc/master/classTFumili.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumili.html
https://root.cern/doc/master/classTFumili.html:13356,Availability,error,error,13356,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTFumili.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumili.html
https://root.cern/doc/master/classTFumili.html:17440,Availability,error,error,17440,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TVirtualFitter; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr V",MatchSource.WIKI,doc/master/classTFumili.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumili.html
https://root.cern/doc/master/classTFumili.html:19857,Availability,toler,tolerance,19857,"t_t GetMaxIterations ();  static: Return the maximum number of iterations actually max number of function calls ;  ; static Double_t GetPrecision ();  static: Return the fit relative precision ;  ; static void SetDefaultFitter (const char *name="""");  static: set name of default fitter ;  ; static void SetErrorDef (Double_t errdef=1);  static: Set the Error Definition (default=1) For Minuit this is the value passed with the ""SET ERR"" command (see https://cern-tex.web.cern.ch/cern-tex/minuit/node18.html) ;  ; static void SetFitter (TVirtualFitter *fitter, Int_t maxpar=25);  Static function to set an alternative fitter. ;  ; static void SetMaxIterations (Int_t niter=5000);  static: Set the maximum number of function calls for the minimization algorithm For example for MIGRAD this is the maxcalls value passed as first argument (see https://cern-tex.web.cern.ch/cern-tex/minuit/node18.html ) ;  ; static void SetPrecision (Double_t prec=1e-6);  static: Set the tolerance used in the minimization algorithm For example for MIGRAD this is tolerance value passed as second argument (see https://cern-tex.web.cern.ch/cern-tex/minuit/node18.html ) ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; Double_t * fA;  [fMaxParam] Fit parameter array ;  ; Double_t fAKAPPA;  ; Double_t * fAMN;  [fMax",MatchSource.WIKI,doc/master/classTFumili.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumili.html
https://root.cern/doc/master/classTFumili.html:19933,Availability,toler,tolerance,19933,"t_t GetMaxIterations ();  static: Return the maximum number of iterations actually max number of function calls ;  ; static Double_t GetPrecision ();  static: Return the fit relative precision ;  ; static void SetDefaultFitter (const char *name="""");  static: set name of default fitter ;  ; static void SetErrorDef (Double_t errdef=1);  static: Set the Error Definition (default=1) For Minuit this is the value passed with the ""SET ERR"" command (see https://cern-tex.web.cern.ch/cern-tex/minuit/node18.html) ;  ; static void SetFitter (TVirtualFitter *fitter, Int_t maxpar=25);  Static function to set an alternative fitter. ;  ; static void SetMaxIterations (Int_t niter=5000);  static: Set the maximum number of function calls for the minimization algorithm For example for MIGRAD this is the maxcalls value passed as first argument (see https://cern-tex.web.cern.ch/cern-tex/minuit/node18.html ) ;  ; static void SetPrecision (Double_t prec=1e-6);  static: Set the tolerance used in the minimization algorithm For example for MIGRAD this is tolerance value passed as second argument (see https://cern-tex.web.cern.ch/cern-tex/minuit/node18.html ) ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; Double_t * fA;  [fMaxParam] Fit parameter array ;  ; Double_t fAKAPPA;  ; Double_t * fAMN;  [fMax",MatchSource.WIKI,doc/master/classTFumili.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumili.html
https://root.cern/doc/master/classTFumili.html:22381,Availability,error,errors,22381,"* fDF;  [fMaxParam] First derivatives of theoretical function ;  ; Int_t fENDFLG;  End flag of fit. ;  ; Double_t fEPS;  fEPS - required precision of parameters. If fEPS<0 then ;  ; Double_t * fEXDA;  [fNED12] experimental data poInt_ter ;  ; Double_t * fGr;  [fMaxParam] Gradients of objective function ;  ; Bool_t fGRAD;  user calculated gradients ;  ; Double_t fGT;  Expected function change in next iteration. ;  ; Int_t fINDFLG [5];  internal flags; ;  ; Int_t fLastFixed;  Last fixed parameter number. ;  ; Bool_t fLogLike;  LogLikelihood flag. ;  ; Int_t fMaxParam;  ; Int_t fNED1;  Number of experimental vectors X=(x1,x2,...xK) ;  ; Int_t fNED12;  fNED1+fNED2 ;  ; Int_t fNED2;  K - Length of vector X plus 2 (for chi2) ;  ; Int_t fNfcn;  Number of FCN calls;. ;  ; Int_t fNlimMul;  fNlimMul - after fNlimMul successful iterations permits four-fold increasing of fPL ;  ; Int_t fNlog;  ; Int_t fNmaxIter;  fNmaxIter - maximum number of iterations ;  ; Int_t fNpar;  fNpar - number of parameters ;  ; Int_t fNstepDec;  fNstepDec - maximum number of step decreasing counter ;  ; Bool_t fNumericDerivatives;  ; Double_t * fParamError;  [fMaxParam] Parameter errors ;  ; Double_t * fPL;  [fMaxParam] Limits for parameters step. If <0, then parameter is fixed ;  ; Double_t * fPL0;  [fMaxParam] Step initial bounds ;  ; Double_t * fR;  [fMaxParam] Correlation factors ;  ; Double_t fRP;  Precision of fit ( machine zero on CDC 6000) quite old yeh? ;  ; Double_t fS;  fS - objective function value (return) ;  ; Double_t * fSumLog;  [fNlog] ;  ; Bool_t fWARN;  warnings ;  ; Double_t * fZ;  [fMaxParam2] Inverse fZ0 matrix - covariance matrix ;  ; Double_t * fZ0;  [fMaxParam2] Matrix of approximate second derivatives of objective function This matrix is diagonal and always contain only variable parameter's derivatives ;  . Additional Inherited Members;  Public Types inherited from TVirtualFitter; typedef void(* FCNFunc_t) (Int_t &npar, Double_t *gin, Double_t &f, Double_t *u, Int_t flag);  ;",MatchSource.WIKI,doc/master/classTFumili.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumili.html
https://root.cern/doc/master/classTFumili.html:26678,Availability,error,errors,26678,"mili(). TFumili::~TFumili ; (; ). override . TFumili destructor. ; Definition at line 217 of file TFumili.cxx. Member Function Documentation. ◆ BuildArrays(). void TFumili::BuildArrays ; (; ). Allocates memory for internal arrays. ; Called by TFumili::TFumili ; Definition at line 182 of file TFumili.cxx. ◆ Chisquare(). Double_t TFumili::Chisquare ; (; Int_t ; npar, . Double_t * ; params . ); const. overridevirtual . return a chisquare equivalent ; Implements TVirtualFitter.; Definition at line 227 of file TFumili.cxx. ◆ Class(). static TClass * TFumili::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TFumili::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TFumili::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 114 of file TFumili.h. ◆ Clear(). void TFumili::Clear ; (; Option_t * ; opt = """"). overridevirtual . Resets all parameter names, values and errors to zero. ; Argument opt is ignored; NB: this procedure doesn't reset parameter limits ; Implements TVirtualFitter.; Definition at line 242 of file TFumili.cxx. ◆ DeclFileName(). static const char * TFumili::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 114 of file TFumili.h. ◆ DeleteArrays(). void TFumili::DeleteArrays ; (; ). Deallocates memory. Called from destructor TFumili::~TFumili. ; Definition at line 261 of file TFumili.cxx. ◆ Derivatives(). void TFumili::Derivatives ; (; Double_t * ; df, . Double_t * ; fX . ). Calculates partial derivatives of theoretical function. ; Input:; fX - vector of data point. Output:; DF - array of derivatives. ARITHM.F: Converted from CERNLIB ; Definition at line 291 of file TFumili.cxx. ◆ Eval(). Int_t TFumili::Eval ; (; Int_t & ; npar, . Double_t * ; grad, . Double_t & ; fval, . Double_t * ; par, . Int_t ; flag . ). Evaluate the minimisation function. ; Input par",MatchSource.WIKI,doc/master/classTFumili.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumili.html
https://root.cern/doc/master/classTFumili.html:29166,Availability,error,errors,29166,"mili::Derivatives, set theoretical function by means of TFumili::SetUserFunc, but first - pass number of parameters by TFumili::SetParNumber; Later values are determined by Fumili as it searches for the minimum or performs whatever analysis is requested by the user.; The default function calls the function specified in SetFCN ; Definition at line 350 of file TFumili.cxx. ◆ EvalTFN(). Double_t TFumili::EvalTFN ; (; Double_t * ; , . Double_t * ; X . ). Evaluate theoretical function. . df: array of partial derivatives; X: vector of theoretical function argument . Definition at line 362 of file TFumili.cxx. ◆ ExecuteCommand(). Int_t TFumili::ExecuteCommand ; (; const char * ; command, . Double_t * ; args, . Int_t ; nargs . ). overridevirtual . Execute MINUIT commands. ; MINImize, SIMplex, MIGrad and FUMili all will call TFumili::Minimize method.; For full command list see MINUIT. Reference Manual. CERN Program Library Long Writeup D506.; Improvement and errors calculation are not yet implemented as well as Monte-Carlo seeking and minimization. Contour commands are also unsupported. command : command string; args : array of arguments; nargs : number of arguments . Implements TVirtualFitter.; Definition at line 391 of file TFumili.cxx. ◆ ExecuteSetCommand(). Int_t TFumili::ExecuteSetCommand ; (; Int_t ; nargs). Called from TFumili::ExecuteCommand in case of ""SET xxx"" and ""SHOW xxx"". ; Definition at line 558 of file TFumili.cxx. ◆ FitChisquare(). void TFumili::FitChisquare ; (; Int_t & ; npar, . Double_t * ; gin, . Double_t & ; f, . Double_t * ; u, . Int_t ; flag . ). virtual . Minimization function for H1s using a Chisquare method. ; Default method (function evaluated at center of bin) for each point the cache contains the following info; 1D : bc,e,xc (bin content, error, x of center of bin); 2D : bc,e,xc,yc; 3D : bc,e,xc,yc,zc . Definition at line 1738 of file TFumili.cxx. ◆ FitChisquareI(). void TFumili::FitChisquareI ; (; Int_t & ; npar, . Double_t * ; gin, . Double_t &",MatchSource.WIKI,doc/master/classTFumili.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumili.html
https://root.cern/doc/master/classTFumili.html:29992,Availability,error,error,29992,"ute MINUIT commands. ; MINImize, SIMplex, MIGrad and FUMili all will call TFumili::Minimize method.; For full command list see MINUIT. Reference Manual. CERN Program Library Long Writeup D506.; Improvement and errors calculation are not yet implemented as well as Monte-Carlo seeking and minimization. Contour commands are also unsupported. command : command string; args : array of arguments; nargs : number of arguments . Implements TVirtualFitter.; Definition at line 391 of file TFumili.cxx. ◆ ExecuteSetCommand(). Int_t TFumili::ExecuteSetCommand ; (; Int_t ; nargs). Called from TFumili::ExecuteCommand in case of ""SET xxx"" and ""SHOW xxx"". ; Definition at line 558 of file TFumili.cxx. ◆ FitChisquare(). void TFumili::FitChisquare ; (; Int_t & ; npar, . Double_t * ; gin, . Double_t & ; f, . Double_t * ; u, . Int_t ; flag . ). virtual . Minimization function for H1s using a Chisquare method. ; Default method (function evaluated at center of bin) for each point the cache contains the following info; 1D : bc,e,xc (bin content, error, x of center of bin); 2D : bc,e,xc,yc; 3D : bc,e,xc,yc,zc . Definition at line 1738 of file TFumili.cxx. ◆ FitChisquareI(). void TFumili::FitChisquareI ; (; Int_t & ; npar, . Double_t * ; gin, . Double_t & ; f, . Double_t * ; u, . Int_t ; flag . ). virtual . Minimization function for H1s using a Chisquare method. ; The ""I""ntegral method is used for each point the cache contains the following info; 1D : bc,e,xc,xw (bin content, error, x of center of bin, x bin width of bin); 2D : bc,e,xc,xw,yc,yw; 3D : bc,e,xc,xw,yc,yw,zc,zw . Definition at line 1809 of file TFumili.cxx. ◆ FitLikelihood(). void TFumili::FitLikelihood ; (; Int_t & ; npar, . Double_t * ; gin, . Double_t & ; f, . Double_t * ; u, . Int_t ; flag . ). virtual . Minimization function for H1s using a Likelihood method. ; Basically, it forms the likelihood by determining the Poisson probability that given a number of entries in a particular bin, the fit would predict it's value. This is ",MatchSource.WIKI,doc/master/classTFumili.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumili.html
https://root.cern/doc/master/classTFumili.html:30429,Availability,error,error,30429,"t line 391 of file TFumili.cxx. ◆ ExecuteSetCommand(). Int_t TFumili::ExecuteSetCommand ; (; Int_t ; nargs). Called from TFumili::ExecuteCommand in case of ""SET xxx"" and ""SHOW xxx"". ; Definition at line 558 of file TFumili.cxx. ◆ FitChisquare(). void TFumili::FitChisquare ; (; Int_t & ; npar, . Double_t * ; gin, . Double_t & ; f, . Double_t * ; u, . Int_t ; flag . ). virtual . Minimization function for H1s using a Chisquare method. ; Default method (function evaluated at center of bin) for each point the cache contains the following info; 1D : bc,e,xc (bin content, error, x of center of bin); 2D : bc,e,xc,yc; 3D : bc,e,xc,yc,zc . Definition at line 1738 of file TFumili.cxx. ◆ FitChisquareI(). void TFumili::FitChisquareI ; (; Int_t & ; npar, . Double_t * ; gin, . Double_t & ; f, . Double_t * ; u, . Int_t ; flag . ). virtual . Minimization function for H1s using a Chisquare method. ; The ""I""ntegral method is used for each point the cache contains the following info; 1D : bc,e,xc,xw (bin content, error, x of center of bin, x bin width of bin); 2D : bc,e,xc,xw,yc,yw; 3D : bc,e,xc,xw,yc,yw,zc,zw . Definition at line 1809 of file TFumili.cxx. ◆ FitLikelihood(). void TFumili::FitLikelihood ; (; Int_t & ; npar, . Double_t * ; gin, . Double_t & ; f, . Double_t * ; u, . Int_t ; flag . ). virtual . Minimization function for H1s using a Likelihood method. ; Basically, it forms the likelihood by determining the Poisson probability that given a number of entries in a particular bin, the fit would predict it's value. This is then done for each bin, and the sum of the logs is taken as the likelihood.; Default method (function evaluated at center of bin) for each point the cache contains the following info; 1D : bc,e,xc (bin content, error, x of center of bin); 2D : bc,e,xc,yc; 3D : bc,e,xc,yc,zc . Definition at line 1884 of file TFumili.cxx. ◆ FitLikelihoodI(). void TFumili::FitLikelihoodI ; (; Int_t & ; npar, . Double_t * ; gin, . Double_t & ; f, . Double_t * ; u, . Int_t ; flag . ",MatchSource.WIKI,doc/master/classTFumili.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumili.html
https://root.cern/doc/master/classTFumili.html:31167,Availability,error,error,31167,"ili::FitChisquareI ; (; Int_t & ; npar, . Double_t * ; gin, . Double_t & ; f, . Double_t * ; u, . Int_t ; flag . ). virtual . Minimization function for H1s using a Chisquare method. ; The ""I""ntegral method is used for each point the cache contains the following info; 1D : bc,e,xc,xw (bin content, error, x of center of bin, x bin width of bin); 2D : bc,e,xc,xw,yc,yw; 3D : bc,e,xc,xw,yc,yw,zc,zw . Definition at line 1809 of file TFumili.cxx. ◆ FitLikelihood(). void TFumili::FitLikelihood ; (; Int_t & ; npar, . Double_t * ; gin, . Double_t & ; f, . Double_t * ; u, . Int_t ; flag . ). virtual . Minimization function for H1s using a Likelihood method. ; Basically, it forms the likelihood by determining the Poisson probability that given a number of entries in a particular bin, the fit would predict it's value. This is then done for each bin, and the sum of the logs is taken as the likelihood.; Default method (function evaluated at center of bin) for each point the cache contains the following info; 1D : bc,e,xc (bin content, error, x of center of bin); 2D : bc,e,xc,yc; 3D : bc,e,xc,yc,zc . Definition at line 1884 of file TFumili.cxx. ◆ FitLikelihoodI(). void TFumili::FitLikelihoodI ; (; Int_t & ; npar, . Double_t * ; gin, . Double_t & ; f, . Double_t * ; u, . Int_t ; flag . ). virtual . Minimization function for H1s using a Likelihood method. ; Basically, it forms the likelihood by determining the Poisson probability that given a number of entries in a particular bin, the fit would predict it's value. This is then done for each bin, and the sum of the logs is taken as the likelihood.; The ""I""ntegral method is used for each point the cache contains the following info; 1D : bc,e,xc,xw (bin content, error, x of center of bin, x bin width of bin); 2D : bc,e,xc,xw,yc,yw; 3D : bc,e,xc,xw,yc,yw,zc,zw . Definition at line 1972 of file TFumili.cxx. ◆ FixParameter(). void TFumili::FixParameter ; (; Int_t ; ipar). overridevirtual . Fixes parameter number ipar. ; Implements TVirtualF",MatchSource.WIKI,doc/master/classTFumili.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumili.html
https://root.cern/doc/master/classTFumili.html:31852,Availability,error,error,31852,"isson probability that given a number of entries in a particular bin, the fit would predict it's value. This is then done for each bin, and the sum of the logs is taken as the likelihood.; Default method (function evaluated at center of bin) for each point the cache contains the following info; 1D : bc,e,xc (bin content, error, x of center of bin); 2D : bc,e,xc,yc; 3D : bc,e,xc,yc,zc . Definition at line 1884 of file TFumili.cxx. ◆ FitLikelihoodI(). void TFumili::FitLikelihoodI ; (; Int_t & ; npar, . Double_t * ; gin, . Double_t & ; f, . Double_t * ; u, . Int_t ; flag . ). virtual . Minimization function for H1s using a Likelihood method. ; Basically, it forms the likelihood by determining the Poisson probability that given a number of entries in a particular bin, the fit would predict it's value. This is then done for each bin, and the sum of the logs is taken as the likelihood.; The ""I""ntegral method is used for each point the cache contains the following info; 1D : bc,e,xc,xw (bin content, error, x of center of bin, x bin width of bin); 2D : bc,e,xc,xw,yc,yw; 3D : bc,e,xc,xw,yc,yw,zc,zw . Definition at line 1972 of file TFumili.cxx. ◆ FixParameter(). void TFumili::FixParameter ; (; Int_t ; ipar). overridevirtual . Fixes parameter number ipar. ; Implements TVirtualFitter.; Definition at line 774 of file TFumili.cxx. ◆ GetCovarianceMatrix(). Double_t * TFumili::GetCovarianceMatrix ; (; ); const. overridevirtual . Return a pointer to the covariance matrix. ; Implements TVirtualFitter.; Definition at line 784 of file TFumili.cxx. ◆ GetCovarianceMatrixElement(). Double_t TFumili::GetCovarianceMatrixElement ; (; Int_t ; i, . Int_t ; j . ); const. overridevirtual . Return element i,j from the covariance matrix. ; Implements TVirtualFitter.; Definition at line 793 of file TFumili.cxx. ◆ GetErrors(). Int_t TFumili::GetErrors ; (; Int_t ; ipar, . Double_t & ; eplus, . Double_t & ; eminus, . Double_t & ; eparab, . Double_t & ; globcc . ); const. overridevirtual . Return err",MatchSource.WIKI,doc/master/classTFumili.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumili.html
https://root.cern/doc/master/classTFumili.html:32841,Availability,error,errors,32841,"ror, x of center of bin, x bin width of bin); 2D : bc,e,xc,xw,yc,yw; 3D : bc,e,xc,xw,yc,yw,zc,zw . Definition at line 1972 of file TFumili.cxx. ◆ FixParameter(). void TFumili::FixParameter ; (; Int_t ; ipar). overridevirtual . Fixes parameter number ipar. ; Implements TVirtualFitter.; Definition at line 774 of file TFumili.cxx. ◆ GetCovarianceMatrix(). Double_t * TFumili::GetCovarianceMatrix ; (; ); const. overridevirtual . Return a pointer to the covariance matrix. ; Implements TVirtualFitter.; Definition at line 784 of file TFumili.cxx. ◆ GetCovarianceMatrixElement(). Double_t TFumili::GetCovarianceMatrixElement ; (; Int_t ; i, . Int_t ; j . ); const. overridevirtual . Return element i,j from the covariance matrix. ; Implements TVirtualFitter.; Definition at line 793 of file TFumili.cxx. ◆ GetErrors(). Int_t TFumili::GetErrors ; (; Int_t ; ipar, . Double_t & ; eplus, . Double_t & ; eminus, . Double_t & ; eparab, . Double_t & ; globcc . ); const. overridevirtual . Return errors after MINOs not implemented. ; Implements TVirtualFitter.; Definition at line 882 of file TFumili.cxx. ◆ GetNumberFreeParameters(). Int_t TFumili::GetNumberFreeParameters ; (; ); const. overridevirtual . Return the number of free parameters. ; Implements TVirtualFitter.; Definition at line 814 of file TFumili.cxx. ◆ GetNumberTotalParameters(). Int_t TFumili::GetNumberTotalParameters ; (; ); const. overridevirtual . Return the total number of parameters (free + fixed) ; Implements TVirtualFitter.; Definition at line 806 of file TFumili.cxx. ◆ GetParameter() [1/2]. Double_t TFumili::GetParameter ; (; Int_t ; ipar); const. overridevirtual . Return current value of parameter ipar. ; Implements TVirtualFitter.; Definition at line 835 of file TFumili.cxx. ◆ GetParameter() [2/2]. Int_t TFumili::GetParameter ; (; Int_t ; ipar, . char * ; cname, . Double_t & ; value, . Double_t & ; verr, . Double_t & ; vlow, . Double_t & ; vhigh . ); const. overridevirtual . Get various ipar parameter attributes: . cn",MatchSource.WIKI,doc/master/classTFumili.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumili.html
https://root.cern/doc/master/classTFumili.html:33916,Availability,error,error,33916," Definition at line 882 of file TFumili.cxx. ◆ GetNumberFreeParameters(). Int_t TFumili::GetNumberFreeParameters ; (; ); const. overridevirtual . Return the number of free parameters. ; Implements TVirtualFitter.; Definition at line 814 of file TFumili.cxx. ◆ GetNumberTotalParameters(). Int_t TFumili::GetNumberTotalParameters ; (; ); const. overridevirtual . Return the total number of parameters (free + fixed) ; Implements TVirtualFitter.; Definition at line 806 of file TFumili.cxx. ◆ GetParameter() [1/2]. Double_t TFumili::GetParameter ; (; Int_t ; ipar); const. overridevirtual . Return current value of parameter ipar. ; Implements TVirtualFitter.; Definition at line 835 of file TFumili.cxx. ◆ GetParameter() [2/2]. Int_t TFumili::GetParameter ; (; Int_t ; ipar, . char * ; cname, . Double_t & ; value, . Double_t & ; verr, . Double_t & ; vlow, . Double_t & ; vhigh . ); const. overridevirtual . Get various ipar parameter attributes: . cname: parameter name; value: parameter value; verr: parameter error; vlow: lower limit; vhigh: upper limit. WARNING! parname must be suitably dimensioned in the calling function. ; Implements TVirtualFitter.; Definition at line 852 of file TFumili.cxx. ◆ GetParError(). Double_t TFumili::GetParError ; (; Int_t ; ipar); const. overridevirtual . Return error of parameter ipar. ; Implements TVirtualFitter.; Definition at line 826 of file TFumili.cxx. ◆ GetParName(). const char * TFumili::GetParName ; (; Int_t ; ipar); const. overridevirtual . Return name of parameter ipar. ; Implements TVirtualFitter.; Definition at line 872 of file TFumili.cxx. ◆ GetPL0(). Double_t * TFumili::GetPL0 ; (; ); const. inline . Definition at line 95 of file TFumili.h. ◆ GetStats(). Int_t TFumili::GetStats ; (; Double_t & ; amin, . Double_t & ; edm, . Double_t & ; errdef, . Int_t & ; nvpar, . Int_t & ; nparx . ); const. overridevirtual . Return global fit parameters. . amin : chisquare; edm : estimated distance to minimum; errdef; nvpar : number of variable param",MatchSource.WIKI,doc/master/classTFumili.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumili.html
https://root.cern/doc/master/classTFumili.html:34206,Availability,error,error,34206,"mberTotalParameters ; (; ); const. overridevirtual . Return the total number of parameters (free + fixed) ; Implements TVirtualFitter.; Definition at line 806 of file TFumili.cxx. ◆ GetParameter() [1/2]. Double_t TFumili::GetParameter ; (; Int_t ; ipar); const. overridevirtual . Return current value of parameter ipar. ; Implements TVirtualFitter.; Definition at line 835 of file TFumili.cxx. ◆ GetParameter() [2/2]. Int_t TFumili::GetParameter ; (; Int_t ; ipar, . char * ; cname, . Double_t & ; value, . Double_t & ; verr, . Double_t & ; vlow, . Double_t & ; vhigh . ); const. overridevirtual . Get various ipar parameter attributes: . cname: parameter name; value: parameter value; verr: parameter error; vlow: lower limit; vhigh: upper limit. WARNING! parname must be suitably dimensioned in the calling function. ; Implements TVirtualFitter.; Definition at line 852 of file TFumili.cxx. ◆ GetParError(). Double_t TFumili::GetParError ; (; Int_t ; ipar); const. overridevirtual . Return error of parameter ipar. ; Implements TVirtualFitter.; Definition at line 826 of file TFumili.cxx. ◆ GetParName(). const char * TFumili::GetParName ; (; Int_t ; ipar); const. overridevirtual . Return name of parameter ipar. ; Implements TVirtualFitter.; Definition at line 872 of file TFumili.cxx. ◆ GetPL0(). Double_t * TFumili::GetPL0 ; (; ); const. inline . Definition at line 95 of file TFumili.h. ◆ GetStats(). Int_t TFumili::GetStats ; (; Double_t & ; amin, . Double_t & ; edm, . Double_t & ; errdef, . Int_t & ; nvpar, . Int_t & ; nparx . ); const. overridevirtual . Return global fit parameters. . amin : chisquare; edm : estimated distance to minimum; errdef; nvpar : number of variable parameters; nparx : total number of parameters . Implements TVirtualFitter.; Definition at line 904 of file TFumili.cxx. ◆ GetSumLog(). Double_t TFumili::GetSumLog ; (; Int_t ; n). overridevirtual . Return Sum(log(i) i=0,n used by log-likelihood fits. ; Implements TVirtualFitter.; Definition at line 921 of file",MatchSource.WIKI,doc/master/classTFumili.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumili.html
https://root.cern/doc/master/classTFumili.html:36474,Availability,error,error,36474,"ents corresponding to fix parameters are removed. n: number of variable parameters . Definition at line 945 of file TFumili.cxx. ◆ IsA(). TClass * TFumili::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 114 of file TFumili.h. ◆ IsFixed(). Bool_t TFumili::IsFixed ; (; Int_t ; ipar); const. overridevirtual . Return kTRUE if parameter ipar is fixed, kFALSE otherwise) ; Implements TVirtualFitter.; Definition at line 1060 of file TFumili.cxx. ◆ Minimize(). Int_t TFumili::Minimize ; (; ). Main minimization procedure. ; This function is called after setting theoretical function by means of TFumili::SetUserFunc and initializing parameters. Optionally one can set FCN function (see TFumili::SetFCN and TFumili::Eval) If FCN is undefined then user has to provide data arrays by calling TFumili::SetData procedure.; TFumili::Minimize return following values:; 0 - fit is converged; -2 - function is not decreasing (or bad derivatives); -3 - error estimations are infinite; -4 - maximum number of iterations is exceeded . Definition at line 1085 of file TFumili.cxx. ◆ PrintResults(). void TFumili::PrintResults ; (; Int_t ; ikode, . Double_t ; p . ); const. overridevirtual . Prints fit results. ; ikode is the type of printing parameters p is function value. ikode = 1 - print values, errors and limits; ikode = 2 - print values, errors and steps; ikode = 3 - print values, errors, steps and derivatives; ikode = 4 - print only values and errors . Implements TVirtualFitter.; Definition at line 1483 of file TFumili.cxx. ◆ ReleaseParameter(). void TFumili::ReleaseParameter ; (; Int_t ; ipar). overridevirtual . Releases parameter number ipar. ; Implements TVirtualFitter.; Definition at line 1586 of file TFumili.cxx. ◆ SetData(). void TFumili::SetData ; (; Double_t * ; exdata, . Int_t ; numpoints, . Int_t ; vecsize . ). Sets pointer to data array provided by user. ; Necessary if SetFCN is not called. numpoints:",MatchSource.WIKI,doc/master/classTFumili.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumili.html
https://root.cern/doc/master/classTFumili.html:36819,Availability,error,errors,36819,"FALSE otherwise) ; Implements TVirtualFitter.; Definition at line 1060 of file TFumili.cxx. ◆ Minimize(). Int_t TFumili::Minimize ; (; ). Main minimization procedure. ; This function is called after setting theoretical function by means of TFumili::SetUserFunc and initializing parameters. Optionally one can set FCN function (see TFumili::SetFCN and TFumili::Eval) If FCN is undefined then user has to provide data arrays by calling TFumili::SetData procedure.; TFumili::Minimize return following values:; 0 - fit is converged; -2 - function is not decreasing (or bad derivatives); -3 - error estimations are infinite; -4 - maximum number of iterations is exceeded . Definition at line 1085 of file TFumili.cxx. ◆ PrintResults(). void TFumili::PrintResults ; (; Int_t ; ikode, . Double_t ; p . ); const. overridevirtual . Prints fit results. ; ikode is the type of printing parameters p is function value. ikode = 1 - print values, errors and limits; ikode = 2 - print values, errors and steps; ikode = 3 - print values, errors, steps and derivatives; ikode = 4 - print only values and errors . Implements TVirtualFitter.; Definition at line 1483 of file TFumili.cxx. ◆ ReleaseParameter(). void TFumili::ReleaseParameter ; (; Int_t ; ipar). overridevirtual . Releases parameter number ipar. ; Implements TVirtualFitter.; Definition at line 1586 of file TFumili.cxx. ◆ SetData(). void TFumili::SetData ; (; Double_t * ; exdata, . Int_t ; numpoints, . Int_t ; vecsize . ). Sets pointer to data array provided by user. ; Necessary if SetFCN is not called. numpoints: number of experimental points; vecsize: size of data point vector + 2 (for N-dimensional fit vecsize=N+2); exdata: data array with following format; exdata[0] = ExpValue_0 - experimental data value number 0; exdata[1] = ExpSigma_0 - error of value number 0; exdata[2] = X_0[0]; exdata[3] = X_0[1]; exdata[vecsize-1] = X_0[vecsize-3]; exdata[vecsize] = ExpValue_1; exdata[vecsize+1] = ExpSigma_1; exdata[vecsize+2] = X_1[0]; exdata[vecsi",MatchSource.WIKI,doc/master/classTFumili.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumili.html
https://root.cern/doc/master/classTFumili.html:36864,Availability,error,errors,36864,"FALSE otherwise) ; Implements TVirtualFitter.; Definition at line 1060 of file TFumili.cxx. ◆ Minimize(). Int_t TFumili::Minimize ; (; ). Main minimization procedure. ; This function is called after setting theoretical function by means of TFumili::SetUserFunc and initializing parameters. Optionally one can set FCN function (see TFumili::SetFCN and TFumili::Eval) If FCN is undefined then user has to provide data arrays by calling TFumili::SetData procedure.; TFumili::Minimize return following values:; 0 - fit is converged; -2 - function is not decreasing (or bad derivatives); -3 - error estimations are infinite; -4 - maximum number of iterations is exceeded . Definition at line 1085 of file TFumili.cxx. ◆ PrintResults(). void TFumili::PrintResults ; (; Int_t ; ikode, . Double_t ; p . ); const. overridevirtual . Prints fit results. ; ikode is the type of printing parameters p is function value. ikode = 1 - print values, errors and limits; ikode = 2 - print values, errors and steps; ikode = 3 - print values, errors, steps and derivatives; ikode = 4 - print only values and errors . Implements TVirtualFitter.; Definition at line 1483 of file TFumili.cxx. ◆ ReleaseParameter(). void TFumili::ReleaseParameter ; (; Int_t ; ipar). overridevirtual . Releases parameter number ipar. ; Implements TVirtualFitter.; Definition at line 1586 of file TFumili.cxx. ◆ SetData(). void TFumili::SetData ; (; Double_t * ; exdata, . Int_t ; numpoints, . Int_t ; vecsize . ). Sets pointer to data array provided by user. ; Necessary if SetFCN is not called. numpoints: number of experimental points; vecsize: size of data point vector + 2 (for N-dimensional fit vecsize=N+2); exdata: data array with following format; exdata[0] = ExpValue_0 - experimental data value number 0; exdata[1] = ExpSigma_0 - error of value number 0; exdata[2] = X_0[0]; exdata[3] = X_0[1]; exdata[vecsize-1] = X_0[vecsize-3]; exdata[vecsize] = ExpValue_1; exdata[vecsize+1] = ExpSigma_1; exdata[vecsize+2] = X_1[0]; exdata[vecsi",MatchSource.WIKI,doc/master/classTFumili.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumili.html
https://root.cern/doc/master/classTFumili.html:36908,Availability,error,errors,36908,"FALSE otherwise) ; Implements TVirtualFitter.; Definition at line 1060 of file TFumili.cxx. ◆ Minimize(). Int_t TFumili::Minimize ; (; ). Main minimization procedure. ; This function is called after setting theoretical function by means of TFumili::SetUserFunc and initializing parameters. Optionally one can set FCN function (see TFumili::SetFCN and TFumili::Eval) If FCN is undefined then user has to provide data arrays by calling TFumili::SetData procedure.; TFumili::Minimize return following values:; 0 - fit is converged; -2 - function is not decreasing (or bad derivatives); -3 - error estimations are infinite; -4 - maximum number of iterations is exceeded . Definition at line 1085 of file TFumili.cxx. ◆ PrintResults(). void TFumili::PrintResults ; (; Int_t ; ikode, . Double_t ; p . ); const. overridevirtual . Prints fit results. ; ikode is the type of printing parameters p is function value. ikode = 1 - print values, errors and limits; ikode = 2 - print values, errors and steps; ikode = 3 - print values, errors, steps and derivatives; ikode = 4 - print only values and errors . Implements TVirtualFitter.; Definition at line 1483 of file TFumili.cxx. ◆ ReleaseParameter(). void TFumili::ReleaseParameter ; (; Int_t ; ipar). overridevirtual . Releases parameter number ipar. ; Implements TVirtualFitter.; Definition at line 1586 of file TFumili.cxx. ◆ SetData(). void TFumili::SetData ; (; Double_t * ; exdata, . Int_t ; numpoints, . Int_t ; vecsize . ). Sets pointer to data array provided by user. ; Necessary if SetFCN is not called. numpoints: number of experimental points; vecsize: size of data point vector + 2 (for N-dimensional fit vecsize=N+2); exdata: data array with following format; exdata[0] = ExpValue_0 - experimental data value number 0; exdata[1] = ExpSigma_0 - error of value number 0; exdata[2] = X_0[0]; exdata[3] = X_0[1]; exdata[vecsize-1] = X_0[vecsize-3]; exdata[vecsize] = ExpValue_1; exdata[vecsize+1] = ExpSigma_1; exdata[vecsize+2] = X_1[0]; exdata[vecsi",MatchSource.WIKI,doc/master/classTFumili.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumili.html
https://root.cern/doc/master/classTFumili.html:36973,Availability,error,errors,36973,"FALSE otherwise) ; Implements TVirtualFitter.; Definition at line 1060 of file TFumili.cxx. ◆ Minimize(). Int_t TFumili::Minimize ; (; ). Main minimization procedure. ; This function is called after setting theoretical function by means of TFumili::SetUserFunc and initializing parameters. Optionally one can set FCN function (see TFumili::SetFCN and TFumili::Eval) If FCN is undefined then user has to provide data arrays by calling TFumili::SetData procedure.; TFumili::Minimize return following values:; 0 - fit is converged; -2 - function is not decreasing (or bad derivatives); -3 - error estimations are infinite; -4 - maximum number of iterations is exceeded . Definition at line 1085 of file TFumili.cxx. ◆ PrintResults(). void TFumili::PrintResults ; (; Int_t ; ikode, . Double_t ; p . ); const. overridevirtual . Prints fit results. ; ikode is the type of printing parameters p is function value. ikode = 1 - print values, errors and limits; ikode = 2 - print values, errors and steps; ikode = 3 - print values, errors, steps and derivatives; ikode = 4 - print only values and errors . Implements TVirtualFitter.; Definition at line 1483 of file TFumili.cxx. ◆ ReleaseParameter(). void TFumili::ReleaseParameter ; (; Int_t ; ipar). overridevirtual . Releases parameter number ipar. ; Implements TVirtualFitter.; Definition at line 1586 of file TFumili.cxx. ◆ SetData(). void TFumili::SetData ; (; Double_t * ; exdata, . Int_t ; numpoints, . Int_t ; vecsize . ). Sets pointer to data array provided by user. ; Necessary if SetFCN is not called. numpoints: number of experimental points; vecsize: size of data point vector + 2 (for N-dimensional fit vecsize=N+2); exdata: data array with following format; exdata[0] = ExpValue_0 - experimental data value number 0; exdata[1] = ExpSigma_0 - error of value number 0; exdata[2] = X_0[0]; exdata[3] = X_0[1]; exdata[vecsize-1] = X_0[vecsize-3]; exdata[vecsize] = ExpValue_1; exdata[vecsize+1] = ExpSigma_1; exdata[vecsize+2] = X_1[0]; exdata[vecsi",MatchSource.WIKI,doc/master/classTFumili.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumili.html
https://root.cern/doc/master/classTFumili.html:37684,Availability,error,error,37684,"s fit results. ; ikode is the type of printing parameters p is function value. ikode = 1 - print values, errors and limits; ikode = 2 - print values, errors and steps; ikode = 3 - print values, errors, steps and derivatives; ikode = 4 - print only values and errors . Implements TVirtualFitter.; Definition at line 1483 of file TFumili.cxx. ◆ ReleaseParameter(). void TFumili::ReleaseParameter ; (; Int_t ; ipar). overridevirtual . Releases parameter number ipar. ; Implements TVirtualFitter.; Definition at line 1586 of file TFumili.cxx. ◆ SetData(). void TFumili::SetData ; (; Double_t * ; exdata, . Int_t ; numpoints, . Int_t ; vecsize . ). Sets pointer to data array provided by user. ; Necessary if SetFCN is not called. numpoints: number of experimental points; vecsize: size of data point vector + 2 (for N-dimensional fit vecsize=N+2); exdata: data array with following format; exdata[0] = ExpValue_0 - experimental data value number 0; exdata[1] = ExpSigma_0 - error of value number 0; exdata[2] = X_0[0]; exdata[3] = X_0[1]; exdata[vecsize-1] = X_0[vecsize-3]; exdata[vecsize] = ExpValue_1; exdata[vecsize+1] = ExpSigma_1; exdata[vecsize+2] = X_1[0]; exdata[vecsize*(numpoints-1)] = ExpValue_(numpoints-1); exdata[vecsize*numpoints-1] = X_(numpoints-1)[vecsize-3] . Definition at line 1616 of file TFumili.cxx. ◆ SetFitMethod(). void TFumili::SetFitMethod ; (; const char * ; name). overridevirtual . ret fit method (chisquare or log-likelihood) ; Implements TVirtualFitter.; Definition at line 1628 of file TFumili.cxx. ◆ SetParameter(). Int_t TFumili::SetParameter ; (; Int_t ; ipar, . const char * ; parname, . Double_t ; value, . Double_t ; verr, . Double_t ; vlow, . Double_t ; vhigh . ). overridevirtual . Sets for parameter number ipar initial parameter value, name parname, initial error verr and limits vlow and vhigh. . If vlow = vhigh but not equal to zero, parameter will be fixed.; If vlow = vhigh = 0, parameter is released and its limits are discarded . Implements TVirtualFi",MatchSource.WIKI,doc/master/classTFumili.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumili.html
https://root.cern/doc/master/classTFumili.html:38514,Availability,error,error,38514,"ze of data point vector + 2 (for N-dimensional fit vecsize=N+2); exdata: data array with following format; exdata[0] = ExpValue_0 - experimental data value number 0; exdata[1] = ExpSigma_0 - error of value number 0; exdata[2] = X_0[0]; exdata[3] = X_0[1]; exdata[vecsize-1] = X_0[vecsize-3]; exdata[vecsize] = ExpValue_1; exdata[vecsize+1] = ExpSigma_1; exdata[vecsize+2] = X_1[0]; exdata[vecsize*(numpoints-1)] = ExpValue_(numpoints-1); exdata[vecsize*numpoints-1] = X_(numpoints-1)[vecsize-3] . Definition at line 1616 of file TFumili.cxx. ◆ SetFitMethod(). void TFumili::SetFitMethod ; (; const char * ; name). overridevirtual . ret fit method (chisquare or log-likelihood) ; Implements TVirtualFitter.; Definition at line 1628 of file TFumili.cxx. ◆ SetParameter(). Int_t TFumili::SetParameter ; (; Int_t ; ipar, . const char * ; parname, . Double_t ; value, . Double_t ; verr, . Double_t ; vlow, . Double_t ; vhigh . ). overridevirtual . Sets for parameter number ipar initial parameter value, name parname, initial error verr and limits vlow and vhigh. . If vlow = vhigh but not equal to zero, parameter will be fixed.; If vlow = vhigh = 0, parameter is released and its limits are discarded . Implements TVirtualFitter.; Definition at line 1641 of file TFumili.cxx. ◆ SetParNumber(). void TFumili::SetParNumber ; (; Int_t ; ParNum). Definition at line 168 of file TFumili.cxx. ◆ SGZ(). Int_t TFumili::SGZ ; (; ). Evaluates objective function ( chi-square ), gradients and Z-matrix using data provided by user via TFumili::SetData. ; Definition at line 1670 of file TFumili.cxx. ◆ Streamer(). void TFumili::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject. ◆ StreamerNVirtual(). void TFumili::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 114 of file TFumili.h. Member Data Documentation. ◆ fA. Double_t* TFumili::fA. private . [fMaxParam] Fit parameter array ; Definition at line 4",MatchSource.WIKI,doc/master/classTFumili.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumili.html
https://root.cern/doc/master/classTFumili.html:43000,Availability,error,errors,43000," ; Definition at line 17 of file TFumili.h. ◆ fNfcn. Int_t TFumili::fNfcn. private . Number of FCN calls;. ; Definition at line 15 of file TFumili.h. ◆ fNlimMul. Int_t TFumili::fNlimMul. private . fNlimMul - after fNlimMul successful iterations permits four-fold increasing of fPL ; Definition at line 21 of file TFumili.h. ◆ fNlog. Int_t TFumili::fNlog. private . Definition at line 14 of file TFumili.h. ◆ fNmaxIter. Int_t TFumili::fNmaxIter. private . fNmaxIter - maximum number of iterations ; Definition at line 22 of file TFumili.h. ◆ fNpar. Int_t TFumili::fNpar. private . fNpar - number of parameters ; Definition at line 19 of file TFumili.h. ◆ fNstepDec. Int_t TFumili::fNstepDec. private . fNstepDec - maximum number of step decreasing counter ; Definition at line 20 of file TFumili.h. ◆ fNumericDerivatives. Bool_t TFumili::fNumericDerivatives. private . Definition at line 32 of file TFumili.h. ◆ fParamError. Double_t* TFumili::fParamError. private . [fMaxParam] Parameter errors ; Definition at line 39 of file TFumili.h. ◆ fPL. Double_t* TFumili::fPL. private . [fMaxParam] Limits for parameters step. If <0, then parameter is fixed ; Definition at line 46 of file TFumili.h. ◆ fPL0. Double_t* TFumili::fPL0. private . [fMaxParam] Step initial bounds ; Definition at line 45 of file TFumili.h. ◆ fR. Double_t* TFumili::fR. private . [fMaxParam] Correlation factors ; Definition at line 52 of file TFumili.h. ◆ fRP. Double_t TFumili::fRP. private . Precision of fit ( machine zero on CDC 6000) quite old yeh? ; Definition at line 59 of file TFumili.h. ◆ fS. Double_t TFumili::fS. private . fS - objective function value (return) ; Definition at line 57 of file TFumili.h. ◆ fSumLog. Double_t* TFumili::fSumLog. private . [fNlog] ; Definition at line 40 of file TFumili.h. ◆ fWARN. Bool_t TFumili::fWARN. private . warnings ; Definition at line 29 of file TFumili.h. ◆ fZ. Double_t* TFumili::fZ. private . [fMaxParam2] Inverse fZ0 matrix - covariance matrix ; Definition at line 37 of ",MatchSource.WIKI,doc/master/classTFumili.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumili.html
https://root.cern/doc/master/classTFumili.html:38653,Deployability,release,released,38653,"r 0; exdata[1] = ExpSigma_0 - error of value number 0; exdata[2] = X_0[0]; exdata[3] = X_0[1]; exdata[vecsize-1] = X_0[vecsize-3]; exdata[vecsize] = ExpValue_1; exdata[vecsize+1] = ExpSigma_1; exdata[vecsize+2] = X_1[0]; exdata[vecsize*(numpoints-1)] = ExpValue_(numpoints-1); exdata[vecsize*numpoints-1] = X_(numpoints-1)[vecsize-3] . Definition at line 1616 of file TFumili.cxx. ◆ SetFitMethod(). void TFumili::SetFitMethod ; (; const char * ; name). overridevirtual . ret fit method (chisquare or log-likelihood) ; Implements TVirtualFitter.; Definition at line 1628 of file TFumili.cxx. ◆ SetParameter(). Int_t TFumili::SetParameter ; (; Int_t ; ipar, . const char * ; parname, . Double_t ; value, . Double_t ; verr, . Double_t ; vlow, . Double_t ; vhigh . ). overridevirtual . Sets for parameter number ipar initial parameter value, name parname, initial error verr and limits vlow and vhigh. . If vlow = vhigh but not equal to zero, parameter will be fixed.; If vlow = vhigh = 0, parameter is released and its limits are discarded . Implements TVirtualFitter.; Definition at line 1641 of file TFumili.cxx. ◆ SetParNumber(). void TFumili::SetParNumber ; (; Int_t ; ParNum). Definition at line 168 of file TFumili.cxx. ◆ SGZ(). Int_t TFumili::SGZ ; (; ). Evaluates objective function ( chi-square ), gradients and Z-matrix using data provided by user via TFumili::SetData. ; Definition at line 1670 of file TFumili.cxx. ◆ Streamer(). void TFumili::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject. ◆ StreamerNVirtual(). void TFumili::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 114 of file TFumili.h. Member Data Documentation. ◆ fA. Double_t* TFumili::fA. private . [fMaxParam] Fit parameter array ; Definition at line 44 of file TFumili.h. ◆ fAKAPPA. Double_t TFumili::fAKAPPA. private . Definition at line 60 of file TFumili.h. ◆ fAMN. Double_t* TFumili::fAMN. private . [fMaxPara",MatchSource.WIKI,doc/master/classTFumili.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumili.html
https://root.cern/doc/master/classTFumili.html:12821,Integrability,message,message,12821,"ject. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTFumili.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumili.html
https://root.cern/doc/master/classTFumili.html:13362,Integrability,message,message,13362,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTFumili.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumili.html
https://root.cern/doc/master/classTFumili.html:14352,Integrability,message,message,14352,"ssue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class shou",MatchSource.WIKI,doc/master/classTFumili.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumili.html
https://root.cern/doc/master/classTFumili.html:17446,Integrability,message,message,17446,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TVirtualFitter; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr V",MatchSource.WIKI,doc/master/classTFumili.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumili.html
https://root.cern/doc/master/classTFumili.html:17819,Integrability,message,message,17819," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TVirtualFitter; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TVirtualFitter * Fitter (TObject *obj, Int_t maxpar=25);  Static function returning a pointer to the current fitter. ;  ; static const char * GetDefaultFitter ();  static: return the name of the default fitter ;  ; static Double_t GetErrorDef ();  static: Return the Error Definition ;  ; static TV",MatchSource.WIKI,doc/master/classTFumili.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumili.html
https://root.cern/doc/master/classTFumili.html:7867,Modifiability,inherit,inherited,7867,"herwise) ;  ; Int_t Minimize ();  Main minimization procedure. ;  ; void PrintResults (Int_t k, Double_t p) const override;  Prints fit results. ;  ; void ReleaseParameter (Int_t ipar) override;  Releases parameter number ipar. ;  ; void SetData (Double_t *, Int_t, Int_t);  Sets pointer to data array provided by user. ;  ; void SetFitMethod (const char *name) override;  ret fit method (chisquare or log-likelihood) ;  ; Int_t SetParameter (Int_t ipar, const char *parname, Double_t value, Double_t verr, Double_t vlow, Double_t vhigh) override;  Sets for parameter number ipar initial parameter value, name parname, initial error verr and limits vlow and vhigh. ;  ; void SetParNumber (Int_t ParNum);  ; Int_t SGZ ();  Evaluates objective function ( chi-square ), gradients and Z-matrix using data provided by user via TFumili::SetData. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TVirtualFitter;  TVirtualFitter ();  Default constructor. ;  ;  ~TVirtualFitter () override;  Cleanup virtual fitter. ;  ; virtual void GetConfidenceIntervals (Int_t n, Int_t ndim, const Double_t *x, Double_t *ci, Double_t cl=0.95);  return confidence intervals in array x of dimension ndim implemented in TFitter and TLinearFitter ;  ; virtual void GetConfidenceIntervals (TObject *obj, Double_t cl=0.95);  return confidence intervals in TObject obj implemented in TFitter and TLinearFitter ;  ; virtual FCNFunc_t GetFCN ();  ; virtual Foption_t GetFitOption () const;  ; TMethodCall * GetMethodCall () const;  ; virtual TObject * GetObjectFit () const;  ; virtual TObject * GetUserFunc () const;  ; virtual Int_t GetXfirst () const;  ; virtual Int_t GetXlast () const;  ; virtual Int_t GetYfirst () const;  ; virtual Int_t GetYlast () const;  ; virtual Int_t GetZfirst () const;  ; virtual Int_t GetZlast () const;  ; TClass * IsA () const override;  ; virtual Double_t *",MatchSource.WIKI,doc/master/classTFumili.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumili.html
https://root.cern/doc/master/classTFumili.html:9821,Modifiability,inherit,inherited,9821,"ual Double_t * SetCache (Int_t npoints, Int_t psize);  Initialize the cache array npoints is the number of points to be stored (or already stored) in the cache psize is the number of elements per point. ;  ; virtual void SetFCN (void(*fcn)(Int_t &, Double_t *, Double_t &f, Double_t *, Int_t));  To set the address of the minimization objective function called by the native compiler (see function below when called by CINT) ;  ; virtual void SetFitOption (Foption_t option);  ; virtual void SetObjectFit (TObject *obj);  ; virtual void SetUserFunc (TObject *userfunc);  ; virtual void SetXfirst (Int_t first);  ; virtual void SetXlast (Int_t last);  ; virtual void SetYfirst (Int_t first);  ; virtual void SetYlast (Int_t last);  ; virtual void SetZfirst (Int_t first);  ; virtual void SetZlast (Int_t last);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Optio",MatchSource.WIKI,doc/master/classTFumili.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumili.html
https://root.cern/doc/master/classTFumili.html:11358,Modifiability,inherit,inherited,11358,"ual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw",MatchSource.WIKI,doc/master/classTFumili.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumili.html
https://root.cern/doc/master/classTFumili.html:12451,Modifiability,inherit,inheritance,12451,"  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTFumili.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumili.html
https://root.cern/doc/master/classTFumili.html:14450,Modifiability,inherit,inherits,14450,"e) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is",MatchSource.WIKI,doc/master/classTFumili.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumili.html
https://root.cern/doc/master/classTFumili.html:14567,Modifiability,inherit,inherits,14567,"t be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base ",MatchSource.WIKI,doc/master/classTFumili.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumili.html
https://root.cern/doc/master/classTFumili.html:18320,Modifiability,inherit,inherited,18320," SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TVirtualFitter; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TVirtualFitter * Fitter (TObject *obj, Int_t maxpar=25);  Static function returning a pointer to the current fitter. ;  ; static const char * GetDefaultFitter ();  static: return the name of the default fitter ;  ; static Double_t GetErrorDef ();  static: Return the Error Definition ;  ; static TVirtualFitter * GetFitter ();  static: return the current Fitter ;  ; static Int_t GetMaxIterations ();  static: Return the maximum number of iterations actually max number of function calls ;  ; static Double_t GetPrecision ();  static: Return the fit relative precision ;  ; static void SetDefaultFitter (const char *name="""");  static: set name of default fitter ;  ; static void SetErrorDef (Double_t errdef=1);  static: Set the Error Definition (default=1) For Minuit this is the value passed with the ""SET ERR"" command (see https://cern-tex.web.cern.",MatchSource.WIKI,doc/master/classTFumili.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumili.html
https://root.cern/doc/master/classTFumili.html:20076,Modifiability,inherit,inherited,20076,"it this is the value passed with the ""SET ERR"" command (see https://cern-tex.web.cern.ch/cern-tex/minuit/node18.html) ;  ; static void SetFitter (TVirtualFitter *fitter, Int_t maxpar=25);  Static function to set an alternative fitter. ;  ; static void SetMaxIterations (Int_t niter=5000);  static: Set the maximum number of function calls for the minimization algorithm For example for MIGRAD this is the maxcalls value passed as first argument (see https://cern-tex.web.cern.ch/cern-tex/minuit/node18.html ) ;  ; static void SetPrecision (Double_t prec=1e-6);  static: Set the tolerance used in the minimization algorithm For example for MIGRAD this is tolerance value passed as second argument (see https://cern-tex.web.cern.ch/cern-tex/minuit/node18.html ) ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; Double_t * fA;  [fMaxParam] Fit parameter array ;  ; Double_t fAKAPPA;  ; Double_t * fAMN;  [fMaxParam] Minimum param value ;  ; Double_t * fAMX;  [fMaxParam] Maximum param value ;  ; TString * fANames;  [fMaxParam] Parameter names ;  ; Double_t * fCmPar;  [fMaxParam] parameters of commands ;  ; TString fCword;  Command string. ;  ; Double_t * fDA;  [fMaxParam] Parameter step ;  ; Bool_t fDEBUG;  debug info ;  ; Double_t * fDF;  [fMaxParam] First derivatives of theoretical function ;",MatchSource.WIKI,doc/master/classTFumili.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumili.html
https://root.cern/doc/master/classTFumili.html:20286,Modifiability,inherit,inherited,20286,"it this is the value passed with the ""SET ERR"" command (see https://cern-tex.web.cern.ch/cern-tex/minuit/node18.html) ;  ; static void SetFitter (TVirtualFitter *fitter, Int_t maxpar=25);  Static function to set an alternative fitter. ;  ; static void SetMaxIterations (Int_t niter=5000);  static: Set the maximum number of function calls for the minimization algorithm For example for MIGRAD this is the maxcalls value passed as first argument (see https://cern-tex.web.cern.ch/cern-tex/minuit/node18.html ) ;  ; static void SetPrecision (Double_t prec=1e-6);  static: Set the tolerance used in the minimization algorithm For example for MIGRAD this is tolerance value passed as second argument (see https://cern-tex.web.cern.ch/cern-tex/minuit/node18.html ) ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; Double_t * fA;  [fMaxParam] Fit parameter array ;  ; Double_t fAKAPPA;  ; Double_t * fAMN;  [fMaxParam] Minimum param value ;  ; Double_t * fAMX;  [fMaxParam] Maximum param value ;  ; TString * fANames;  [fMaxParam] Parameter names ;  ; Double_t * fCmPar;  [fMaxParam] parameters of commands ;  ; TString fCword;  Command string. ;  ; Double_t * fDA;  [fMaxParam] Parameter step ;  ; Bool_t fDEBUG;  debug info ;  ; Double_t * fDF;  [fMaxParam] First derivatives of theoretical function ;",MatchSource.WIKI,doc/master/classTFumili.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumili.html
https://root.cern/doc/master/classTFumili.html:23009,Modifiability,variab,variable,23009," LogLikelihood flag. ;  ; Int_t fMaxParam;  ; Int_t fNED1;  Number of experimental vectors X=(x1,x2,...xK) ;  ; Int_t fNED12;  fNED1+fNED2 ;  ; Int_t fNED2;  K - Length of vector X plus 2 (for chi2) ;  ; Int_t fNfcn;  Number of FCN calls;. ;  ; Int_t fNlimMul;  fNlimMul - after fNlimMul successful iterations permits four-fold increasing of fPL ;  ; Int_t fNlog;  ; Int_t fNmaxIter;  fNmaxIter - maximum number of iterations ;  ; Int_t fNpar;  fNpar - number of parameters ;  ; Int_t fNstepDec;  fNstepDec - maximum number of step decreasing counter ;  ; Bool_t fNumericDerivatives;  ; Double_t * fParamError;  [fMaxParam] Parameter errors ;  ; Double_t * fPL;  [fMaxParam] Limits for parameters step. If <0, then parameter is fixed ;  ; Double_t * fPL0;  [fMaxParam] Step initial bounds ;  ; Double_t * fR;  [fMaxParam] Correlation factors ;  ; Double_t fRP;  Precision of fit ( machine zero on CDC 6000) quite old yeh? ;  ; Double_t fS;  fS - objective function value (return) ;  ; Double_t * fSumLog;  [fNlog] ;  ; Bool_t fWARN;  warnings ;  ; Double_t * fZ;  [fMaxParam2] Inverse fZ0 matrix - covariance matrix ;  ; Double_t * fZ0;  [fMaxParam2] Matrix of approximate second derivatives of objective function This matrix is diagonal and always contain only variable parameter's derivatives ;  . Additional Inherited Members;  Public Types inherited from TVirtualFitter; typedef void(* FCNFunc_t) (Int_t &npar, Double_t *gin, Double_t &f, Double_t *u, Int_t flag);  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   k",MatchSource.WIKI,doc/master/classTFumili.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumili.html
https://root.cern/doc/master/classTFumili.html:23091,Modifiability,inherit,inherited,23091,"; Int_t fNstepDec;  fNstepDec - maximum number of step decreasing counter ;  ; Bool_t fNumericDerivatives;  ; Double_t * fParamError;  [fMaxParam] Parameter errors ;  ; Double_t * fPL;  [fMaxParam] Limits for parameters step. If <0, then parameter is fixed ;  ; Double_t * fPL0;  [fMaxParam] Step initial bounds ;  ; Double_t * fR;  [fMaxParam] Correlation factors ;  ; Double_t fRP;  Precision of fit ( machine zero on CDC 6000) quite old yeh? ;  ; Double_t fS;  fS - objective function value (return) ;  ; Double_t * fSumLog;  [fNlog] ;  ; Bool_t fWARN;  warnings ;  ; Double_t * fZ;  [fMaxParam2] Inverse fZ0 matrix - covariance matrix ;  ; Double_t * fZ0;  [fMaxParam2] Matrix of approximate second derivatives of objective function This matrix is diagonal and always contain only variable parameter's derivatives ;  . Additional Inherited Members;  Public Types inherited from TVirtualFitter; typedef void(* FCNFunc_t) (Int_t &npar, Double_t *gin, Double_t &f, Double_t *u, Int_t flag);  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TVirtualFitter;  TVirtualFitter (const TVirtualFitter &tvf);  copy constructor ;  ; TVirtualFitter & operator= (const TVirtualFitter &tvf);  assignment operator ;  ;  Protected Member Functions inherited from TObject; virtual void DoErro",MatchSource.WIKI,doc/master/classTFumili.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumili.html
https://root.cern/doc/master/classTFumili.html:23233,Modifiability,inherit,inherited,23233,"; Int_t fNstepDec;  fNstepDec - maximum number of step decreasing counter ;  ; Bool_t fNumericDerivatives;  ; Double_t * fParamError;  [fMaxParam] Parameter errors ;  ; Double_t * fPL;  [fMaxParam] Limits for parameters step. If <0, then parameter is fixed ;  ; Double_t * fPL0;  [fMaxParam] Step initial bounds ;  ; Double_t * fR;  [fMaxParam] Correlation factors ;  ; Double_t fRP;  Precision of fit ( machine zero on CDC 6000) quite old yeh? ;  ; Double_t fS;  fS - objective function value (return) ;  ; Double_t * fSumLog;  [fNlog] ;  ; Bool_t fWARN;  warnings ;  ; Double_t * fZ;  [fMaxParam2] Inverse fZ0 matrix - covariance matrix ;  ; Double_t * fZ0;  [fMaxParam2] Matrix of approximate second derivatives of objective function This matrix is diagonal and always contain only variable parameter's derivatives ;  . Additional Inherited Members;  Public Types inherited from TVirtualFitter; typedef void(* FCNFunc_t) (Int_t &npar, Double_t *gin, Double_t &f, Double_t *u, Int_t flag);  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TVirtualFitter;  TVirtualFitter (const TVirtualFitter &tvf);  copy constructor ;  ; TVirtualFitter & operator= (const TVirtualFitter &tvf);  assignment operator ;  ;  Protected Member Functions inherited from TObject; virtual void DoErro",MatchSource.WIKI,doc/master/classTFumili.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumili.html
https://root.cern/doc/master/classTFumili.html:23874,Modifiability,inherit,inherited,23874,"herited from TVirtualFitter; typedef void(* FCNFunc_t) (Int_t &npar, Double_t *gin, Double_t &f, Double_t *u, Int_t flag);  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TVirtualFitter;  TVirtualFitter (const TVirtualFitter &tvf);  copy constructor ;  ; TVirtualFitter & operator= (const TVirtualFitter &tvf);  assignment operator ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TVirtualFitter; Double_t * fCache;  [fCacheSize] Array of points data (fNpoints*fPointSize < fCacheSize words) ;  ; Int_t fCacheSize;  Size of the fCache array. ;  ; void(* fFCN )(Int_t &npar, Double_t *gin, Double_t &f, Double_t *u, Int_t flag);  ; TMethodCall * fMethodCall;  Pointer to MethodCall in case of interpreted function. ;  ; Int_t fNpoints;  Number of points to fit. ;  ; TObject * fObjectFit;  Pointer to object being fitted. ;  ; Foption_t fOption;  Struct with the fit options. ;  ; Int_t fPointSize;  Number of words per point in the cache. ;  ; TObject * fUserFunc;  Pointer to user theoretical function (a TF1*) ;  ; Int_t fXfirst;  First bin on X axis. ;  ; Int_t fXlast;",MatchSource.WIKI,doc/master/classTFumili.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumili.html
https://root.cern/doc/master/classTFumili.html:23973,Modifiability,inherit,inherited,23973,"herited from TVirtualFitter; typedef void(* FCNFunc_t) (Int_t &npar, Double_t *gin, Double_t &f, Double_t *u, Int_t flag);  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TVirtualFitter;  TVirtualFitter (const TVirtualFitter &tvf);  copy constructor ;  ; TVirtualFitter & operator= (const TVirtualFitter &tvf);  assignment operator ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TVirtualFitter; Double_t * fCache;  [fCacheSize] Array of points data (fNpoints*fPointSize < fCacheSize words) ;  ; Int_t fCacheSize;  Size of the fCache array. ;  ; void(* fFCN )(Int_t &npar, Double_t *gin, Double_t &f, Double_t *u, Int_t flag);  ; TMethodCall * fMethodCall;  Pointer to MethodCall in case of interpreted function. ;  ; Int_t fNpoints;  Number of points to fit. ;  ; TObject * fObjectFit;  Pointer to object being fitted. ;  ; Foption_t fOption;  Struct with the fit options. ;  ; Int_t fPointSize;  Number of words per point in the cache. ;  ; TObject * fUserFunc;  Pointer to user theoretical function (a TF1*) ;  ; Int_t fXfirst;  First bin on X axis. ;  ; Int_t fXlast;",MatchSource.WIKI,doc/master/classTFumili.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumili.html
https://root.cern/doc/master/classTFumili.html:24182,Modifiability,inherit,inherited,24182,"herited from TVirtualFitter; typedef void(* FCNFunc_t) (Int_t &npar, Double_t *gin, Double_t &f, Double_t *u, Int_t flag);  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TVirtualFitter;  TVirtualFitter (const TVirtualFitter &tvf);  copy constructor ;  ; TVirtualFitter & operator= (const TVirtualFitter &tvf);  assignment operator ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TVirtualFitter; Double_t * fCache;  [fCacheSize] Array of points data (fNpoints*fPointSize < fCacheSize words) ;  ; Int_t fCacheSize;  Size of the fCache array. ;  ; void(* fFCN )(Int_t &npar, Double_t *gin, Double_t &f, Double_t *u, Int_t flag);  ; TMethodCall * fMethodCall;  Pointer to MethodCall in case of interpreted function. ;  ; Int_t fNpoints;  Number of points to fit. ;  ; TObject * fObjectFit;  Pointer to object being fitted. ;  ; Foption_t fOption;  Struct with the fit options. ;  ; Int_t fPointSize;  Number of words per point in the cache. ;  ; TObject * fUserFunc;  Pointer to user theoretical function (a TF1*) ;  ; Int_t fXfirst;  First bin on X axis. ;  ; Int_t fXlast;",MatchSource.WIKI,doc/master/classTFumili.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumili.html
https://root.cern/doc/master/classTFumili.html:24387,Modifiability,inherit,inherited,24387," kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TVirtualFitter;  TVirtualFitter (const TVirtualFitter &tvf);  copy constructor ;  ; TVirtualFitter & operator= (const TVirtualFitter &tvf);  assignment operator ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TVirtualFitter; Double_t * fCache;  [fCacheSize] Array of points data (fNpoints*fPointSize < fCacheSize words) ;  ; Int_t fCacheSize;  Size of the fCache array. ;  ; void(* fFCN )(Int_t &npar, Double_t *gin, Double_t &f, Double_t *u, Int_t flag);  ; TMethodCall * fMethodCall;  Pointer to MethodCall in case of interpreted function. ;  ; Int_t fNpoints;  Number of points to fit. ;  ; TObject * fObjectFit;  Pointer to object being fitted. ;  ; Foption_t fOption;  Struct with the fit options. ;  ; Int_t fPointSize;  Number of words per point in the cache. ;  ; TObject * fUserFunc;  Pointer to user theoretical function (a TF1*) ;  ; Int_t fXfirst;  First bin on X axis. ;  ; Int_t fXlast;  Last bin on X axis. ;  ; Int_t fYfirst;  First bin on Y axis. ;  ; Int_t fYlast;  Last bin on Y axis. ;  ; Int_t fZfirst;  First bin on Z axis. ;  ; Int_t fZlast;  Last bin on Z axis. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TFumili.h>. Inheritance diagram for TFumili:. This browser is not able to",MatchSource.WIKI,doc/master/classTFumili.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumili.html
https://root.cern/doc/master/classTFumili.html:25306,Modifiability,inherit,inherited,25306,"er (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TVirtualFitter; Double_t * fCache;  [fCacheSize] Array of points data (fNpoints*fPointSize < fCacheSize words) ;  ; Int_t fCacheSize;  Size of the fCache array. ;  ; void(* fFCN )(Int_t &npar, Double_t *gin, Double_t &f, Double_t *u, Int_t flag);  ; TMethodCall * fMethodCall;  Pointer to MethodCall in case of interpreted function. ;  ; Int_t fNpoints;  Number of points to fit. ;  ; TObject * fObjectFit;  Pointer to object being fitted. ;  ; Foption_t fOption;  Struct with the fit options. ;  ; Int_t fPointSize;  Number of words per point in the cache. ;  ; TObject * fUserFunc;  Pointer to user theoretical function (a TF1*) ;  ; Int_t fXfirst;  First bin on X axis. ;  ; Int_t fXlast;  Last bin on X axis. ;  ; Int_t fYfirst;  First bin on Y axis. ;  ; Int_t fYlast;  Last bin on Y axis. ;  ; Int_t fZfirst;  First bin on Z axis. ;  ; Int_t fZlast;  Last bin on Z axis. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TFumili.h>. Inheritance diagram for TFumili:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TFumili(). TFumili::TFumili ; (; Int_t ; maxpar = 25). Definition at line 129 of file TFumili.cxx. ◆ ~TFumili(). TFumili::~TFumili ; (; ). override . TFumili destructor. ; Definition at line 217 of file TFumili.cxx. Member Function Documentation. ◆ BuildArrays(). void TFumili::BuildArrays ; (; ). Allocates memory for internal arrays. ; Called by TFumili::TFumili ; Definition at line 182 of file TFumili.cxx. ◆ Chisquare(). Double_t TFumili::Chisquare ; (; Int_t ; npar, . Double_t * ; params . ); const. overridevirtual . return a chisquare equivalent ; Implements TVirtualFitter.; Definition at line 227 of file TFumili.cxx. ◆ Class(). static TClass * TFumili::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * ",MatchSource.WIKI,doc/master/classTFumili.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumili.html
https://root.cern/doc/master/classTFumili.html:27702,Modifiability,variab,variable,27702," reset parameter limits ; Implements TVirtualFitter.; Definition at line 242 of file TFumili.cxx. ◆ DeclFileName(). static const char * TFumili::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 114 of file TFumili.h. ◆ DeleteArrays(). void TFumili::DeleteArrays ; (; ). Deallocates memory. Called from destructor TFumili::~TFumili. ; Definition at line 261 of file TFumili.cxx. ◆ Derivatives(). void TFumili::Derivatives ; (; Double_t * ; df, . Double_t * ; fX . ). Calculates partial derivatives of theoretical function. ; Input:; fX - vector of data point. Output:; DF - array of derivatives. ARITHM.F: Converted from CERNLIB ; Definition at line 291 of file TFumili.cxx. ◆ Eval(). Int_t TFumili::Eval ; (; Int_t & ; npar, . Double_t * ; grad, . Double_t & ; fval, . Double_t * ; par, . Int_t ; flag . ). Evaluate the minimisation function. ; Input parameters:; npar: number of currently variable parameters; par: array of (constant and variable) parameters; flag: Indicates what is to be calculated; grad: array of gradients. Output parameters:; fval: The calculated function value.; grad: The vector of first derivatives. The meaning of the parameters par is of course defined by the user, who uses the values of those parameters to calculate their function value. The starting values must be specified by the user.; Inside FCN user has to define Z-matrix by means TFumili::GetZ and TFumili::Derivatives, set theoretical function by means of TFumili::SetUserFunc, but first - pass number of parameters by TFumili::SetParNumber; Later values are determined by Fumili as it searches for the minimum or performs whatever analysis is requested by the user.; The default function calls the function specified in SetFCN ; Definition at line 350 of file TFumili.cxx. ◆ EvalTFN(). Double_t TFumili::EvalTFN ; (; Double_t * ; , . Double_t * ; X . ). Evaluate theoretical function. . df: array of partial derivatives; X: vector of theoretica",MatchSource.WIKI,doc/master/classTFumili.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumili.html
https://root.cern/doc/master/classTFumili.html:27751,Modifiability,variab,variable,27751," reset parameter limits ; Implements TVirtualFitter.; Definition at line 242 of file TFumili.cxx. ◆ DeclFileName(). static const char * TFumili::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 114 of file TFumili.h. ◆ DeleteArrays(). void TFumili::DeleteArrays ; (; ). Deallocates memory. Called from destructor TFumili::~TFumili. ; Definition at line 261 of file TFumili.cxx. ◆ Derivatives(). void TFumili::Derivatives ; (; Double_t * ; df, . Double_t * ; fX . ). Calculates partial derivatives of theoretical function. ; Input:; fX - vector of data point. Output:; DF - array of derivatives. ARITHM.F: Converted from CERNLIB ; Definition at line 291 of file TFumili.cxx. ◆ Eval(). Int_t TFumili::Eval ; (; Int_t & ; npar, . Double_t * ; grad, . Double_t & ; fval, . Double_t * ; par, . Int_t ; flag . ). Evaluate the minimisation function. ; Input parameters:; npar: number of currently variable parameters; par: array of (constant and variable) parameters; flag: Indicates what is to be calculated; grad: array of gradients. Output parameters:; fval: The calculated function value.; grad: The vector of first derivatives. The meaning of the parameters par is of course defined by the user, who uses the values of those parameters to calculate their function value. The starting values must be specified by the user.; Inside FCN user has to define Z-matrix by means TFumili::GetZ and TFumili::Derivatives, set theoretical function by means of TFumili::SetUserFunc, but first - pass number of parameters by TFumili::SetParNumber; Later values are determined by Fumili as it searches for the minimum or performs whatever analysis is requested by the user.; The default function calls the function specified in SetFCN ; Definition at line 350 of file TFumili.cxx. ◆ EvalTFN(). Double_t TFumili::EvalTFN ; (; Double_t * ; , . Double_t * ; X . ). Evaluate theoretical function. . df: array of partial derivatives; X: vector of theoretica",MatchSource.WIKI,doc/master/classTFumili.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumili.html
https://root.cern/doc/master/classTFumili.html:34893,Modifiability,variab,variable,34893,"e: parameter value; verr: parameter error; vlow: lower limit; vhigh: upper limit. WARNING! parname must be suitably dimensioned in the calling function. ; Implements TVirtualFitter.; Definition at line 852 of file TFumili.cxx. ◆ GetParError(). Double_t TFumili::GetParError ; (; Int_t ; ipar); const. overridevirtual . Return error of parameter ipar. ; Implements TVirtualFitter.; Definition at line 826 of file TFumili.cxx. ◆ GetParName(). const char * TFumili::GetParName ; (; Int_t ; ipar); const. overridevirtual . Return name of parameter ipar. ; Implements TVirtualFitter.; Definition at line 872 of file TFumili.cxx. ◆ GetPL0(). Double_t * TFumili::GetPL0 ; (; ); const. inline . Definition at line 95 of file TFumili.h. ◆ GetStats(). Int_t TFumili::GetStats ; (; Double_t & ; amin, . Double_t & ; edm, . Double_t & ; errdef, . Int_t & ; nvpar, . Int_t & ; nparx . ); const. overridevirtual . Return global fit parameters. . amin : chisquare; edm : estimated distance to minimum; errdef; nvpar : number of variable parameters; nparx : total number of parameters . Implements TVirtualFitter.; Definition at line 904 of file TFumili.cxx. ◆ GetSumLog(). Double_t TFumili::GetSumLog ; (; Int_t ; n). overridevirtual . Return Sum(log(i) i=0,n used by log-likelihood fits. ; Implements TVirtualFitter.; Definition at line 921 of file TFumili.cxx. ◆ GetZ(). Double_t * TFumili::GetZ ; (; ); const. inline . Definition at line 102 of file TFumili.h. ◆ InvertZ(). void TFumili::InvertZ ; (; Int_t ; n). Inverts packed diagonal matrix Z by square-root method. ; Matrix elements corresponding to fix parameters are removed. n: number of variable parameters . Definition at line 945 of file TFumili.cxx. ◆ IsA(). TClass * TFumili::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 114 of file TFumili.h. ◆ IsFixed(). Bool_t TFumili::IsFixed ; (; Int_t ; ipar); const. overridevirtual . Return kTRUE if parameter ipar is fix",MatchSource.WIKI,doc/master/classTFumili.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumili.html
https://root.cern/doc/master/classTFumili.html:35513,Modifiability,variab,variable,35513,"Double_t * TFumili::GetPL0 ; (; ); const. inline . Definition at line 95 of file TFumili.h. ◆ GetStats(). Int_t TFumili::GetStats ; (; Double_t & ; amin, . Double_t & ; edm, . Double_t & ; errdef, . Int_t & ; nvpar, . Int_t & ; nparx . ); const. overridevirtual . Return global fit parameters. . amin : chisquare; edm : estimated distance to minimum; errdef; nvpar : number of variable parameters; nparx : total number of parameters . Implements TVirtualFitter.; Definition at line 904 of file TFumili.cxx. ◆ GetSumLog(). Double_t TFumili::GetSumLog ; (; Int_t ; n). overridevirtual . Return Sum(log(i) i=0,n used by log-likelihood fits. ; Implements TVirtualFitter.; Definition at line 921 of file TFumili.cxx. ◆ GetZ(). Double_t * TFumili::GetZ ; (; ); const. inline . Definition at line 102 of file TFumili.h. ◆ InvertZ(). void TFumili::InvertZ ; (; Int_t ; n). Inverts packed diagonal matrix Z by square-root method. ; Matrix elements corresponding to fix parameters are removed. n: number of variable parameters . Definition at line 945 of file TFumili.cxx. ◆ IsA(). TClass * TFumili::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 114 of file TFumili.h. ◆ IsFixed(). Bool_t TFumili::IsFixed ; (; Int_t ; ipar); const. overridevirtual . Return kTRUE if parameter ipar is fixed, kFALSE otherwise) ; Implements TVirtualFitter.; Definition at line 1060 of file TFumili.cxx. ◆ Minimize(). Int_t TFumili::Minimize ; (; ). Main minimization procedure. ; This function is called after setting theoretical function by means of TFumili::SetUserFunc and initializing parameters. Optionally one can set FCN function (see TFumili::SetFCN and TFumili::Eval) If FCN is undefined then user has to provide data arrays by calling TFumili::SetData procedure.; TFumili::Minimize return following values:; 0 - fit is converged; -2 - function is not decreasing (or bad derivatives); -3 - error estimations are infinite; -4 - maximu",MatchSource.WIKI,doc/master/classTFumili.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumili.html
https://root.cern/doc/master/classTFumili.html:44193,Modifiability,variab,variable,44193,"i.h. ◆ fNpar. Int_t TFumili::fNpar. private . fNpar - number of parameters ; Definition at line 19 of file TFumili.h. ◆ fNstepDec. Int_t TFumili::fNstepDec. private . fNstepDec - maximum number of step decreasing counter ; Definition at line 20 of file TFumili.h. ◆ fNumericDerivatives. Bool_t TFumili::fNumericDerivatives. private . Definition at line 32 of file TFumili.h. ◆ fParamError. Double_t* TFumili::fParamError. private . [fMaxParam] Parameter errors ; Definition at line 39 of file TFumili.h. ◆ fPL. Double_t* TFumili::fPL. private . [fMaxParam] Limits for parameters step. If <0, then parameter is fixed ; Definition at line 46 of file TFumili.h. ◆ fPL0. Double_t* TFumili::fPL0. private . [fMaxParam] Step initial bounds ; Definition at line 45 of file TFumili.h. ◆ fR. Double_t* TFumili::fR. private . [fMaxParam] Correlation factors ; Definition at line 52 of file TFumili.h. ◆ fRP. Double_t TFumili::fRP. private . Precision of fit ( machine zero on CDC 6000) quite old yeh? ; Definition at line 59 of file TFumili.h. ◆ fS. Double_t TFumili::fS. private . fS - objective function value (return) ; Definition at line 57 of file TFumili.h. ◆ fSumLog. Double_t* TFumili::fSumLog. private . [fNlog] ; Definition at line 40 of file TFumili.h. ◆ fWARN. Bool_t TFumili::fWARN. private . warnings ; Definition at line 29 of file TFumili.h. ◆ fZ. Double_t* TFumili::fZ. private . [fMaxParam2] Inverse fZ0 matrix - covariance matrix ; Definition at line 37 of file TFumili.h. ◆ fZ0. Double_t* TFumili::fZ0. private . [fMaxParam2] Matrix of approximate second derivatives of objective function This matrix is diagonal and always contain only variable parameter's derivatives ; Definition at line 34 of file TFumili.h. Libraries for TFumili:. [legend]; The documentation for this class was generated from the following files:; math/fumili/inc/TFumili.h; math/fumili/src/TFumili.cxx. TFumili. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:42:54 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/classTFumili.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumili.html
https://root.cern/doc/master/classTFumili.html:8911,Performance,cache,cache,8911,"d by user via TFumili::SetData. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TVirtualFitter;  TVirtualFitter ();  Default constructor. ;  ;  ~TVirtualFitter () override;  Cleanup virtual fitter. ;  ; virtual void GetConfidenceIntervals (Int_t n, Int_t ndim, const Double_t *x, Double_t *ci, Double_t cl=0.95);  return confidence intervals in array x of dimension ndim implemented in TFitter and TLinearFitter ;  ; virtual void GetConfidenceIntervals (TObject *obj, Double_t cl=0.95);  return confidence intervals in TObject obj implemented in TFitter and TLinearFitter ;  ; virtual FCNFunc_t GetFCN ();  ; virtual Foption_t GetFitOption () const;  ; TMethodCall * GetMethodCall () const;  ; virtual TObject * GetObjectFit () const;  ; virtual TObject * GetUserFunc () const;  ; virtual Int_t GetXfirst () const;  ; virtual Int_t GetXlast () const;  ; virtual Int_t GetYfirst () const;  ; virtual Int_t GetYlast () const;  ; virtual Int_t GetZfirst () const;  ; virtual Int_t GetZlast () const;  ; TClass * IsA () const override;  ; virtual Double_t * SetCache (Int_t npoints, Int_t psize);  Initialize the cache array npoints is the number of points to be stored (or already stored) in the cache psize is the number of elements per point. ;  ; virtual void SetFCN (void(*fcn)(Int_t &, Double_t *, Double_t &f, Double_t *, Int_t));  To set the address of the minimization objective function called by the native compiler (see function below when called by CINT) ;  ; virtual void SetFitOption (Foption_t option);  ; virtual void SetObjectFit (TObject *obj);  ; virtual void SetUserFunc (TObject *userfunc);  ; virtual void SetXfirst (Int_t first);  ; virtual void SetXlast (Int_t last);  ; virtual void SetYfirst (Int_t first);  ; virtual void SetYlast (Int_t last);  ; virtual void SetZfirst (Int_t first);  ; virtual void SetZlast (Int_t last);  ; void Strea",MatchSource.WIKI,doc/master/classTFumili.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumili.html
https://root.cern/doc/master/classTFumili.html:8995,Performance,cache,cache,8995,"d by user via TFumili::SetData. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TVirtualFitter;  TVirtualFitter ();  Default constructor. ;  ;  ~TVirtualFitter () override;  Cleanup virtual fitter. ;  ; virtual void GetConfidenceIntervals (Int_t n, Int_t ndim, const Double_t *x, Double_t *ci, Double_t cl=0.95);  return confidence intervals in array x of dimension ndim implemented in TFitter and TLinearFitter ;  ; virtual void GetConfidenceIntervals (TObject *obj, Double_t cl=0.95);  return confidence intervals in TObject obj implemented in TFitter and TLinearFitter ;  ; virtual FCNFunc_t GetFCN ();  ; virtual Foption_t GetFitOption () const;  ; TMethodCall * GetMethodCall () const;  ; virtual TObject * GetObjectFit () const;  ; virtual TObject * GetUserFunc () const;  ; virtual Int_t GetXfirst () const;  ; virtual Int_t GetXlast () const;  ; virtual Int_t GetYfirst () const;  ; virtual Int_t GetYlast () const;  ; virtual Int_t GetZfirst () const;  ; virtual Int_t GetZlast () const;  ; TClass * IsA () const override;  ; virtual Double_t * SetCache (Int_t npoints, Int_t psize);  Initialize the cache array npoints is the number of points to be stored (or already stored) in the cache psize is the number of elements per point. ;  ; virtual void SetFCN (void(*fcn)(Int_t &, Double_t *, Double_t &f, Double_t *, Int_t));  To set the address of the minimization objective function called by the native compiler (see function below when called by CINT) ;  ; virtual void SetFitOption (Foption_t option);  ; virtual void SetObjectFit (TObject *obj);  ; virtual void SetUserFunc (TObject *userfunc);  ; virtual void SetXfirst (Int_t first);  ; virtual void SetXlast (Int_t last);  ; virtual void SetYfirst (Int_t first);  ; virtual void SetYlast (Int_t last);  ; virtual void SetZfirst (Int_t first);  ; virtual void SetZlast (Int_t last);  ; void Strea",MatchSource.WIKI,doc/master/classTFumili.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumili.html
https://root.cern/doc/master/classTFumili.html:24953,Performance,cache,cache,24953," << ( 3 )); };  ;  Protected Member Functions inherited from TVirtualFitter;  TVirtualFitter (const TVirtualFitter &tvf);  copy constructor ;  ; TVirtualFitter & operator= (const TVirtualFitter &tvf);  assignment operator ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TVirtualFitter; Double_t * fCache;  [fCacheSize] Array of points data (fNpoints*fPointSize < fCacheSize words) ;  ; Int_t fCacheSize;  Size of the fCache array. ;  ; void(* fFCN )(Int_t &npar, Double_t *gin, Double_t &f, Double_t *u, Int_t flag);  ; TMethodCall * fMethodCall;  Pointer to MethodCall in case of interpreted function. ;  ; Int_t fNpoints;  Number of points to fit. ;  ; TObject * fObjectFit;  Pointer to object being fitted. ;  ; Foption_t fOption;  Struct with the fit options. ;  ; Int_t fPointSize;  Number of words per point in the cache. ;  ; TObject * fUserFunc;  Pointer to user theoretical function (a TF1*) ;  ; Int_t fXfirst;  First bin on X axis. ;  ; Int_t fXlast;  Last bin on X axis. ;  ; Int_t fYfirst;  First bin on Y axis. ;  ; Int_t fYlast;  Last bin on Y axis. ;  ; Int_t fZfirst;  First bin on Z axis. ;  ; Int_t fZlast;  Last bin on Z axis. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TFumili.h>. Inheritance diagram for TFumili:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TFumili(). TFumili::TFumili ; (; Int_t ; maxpar = 25). Definition at line 129 of file TFumili.cxx. ◆ ~TFumili(). TFumili::~TFumili ; (; ). override . TFumili destructor. ; Definition at line 217 of file TFumili.cxx. Member Function Documentation. ◆ BuildArrays(). void TFumili::BuildArrays ; (; ). Allocates memory for internal arrays. ; Called by TFumili::TFumili ; ",MatchSource.WIKI,doc/master/classTFumili.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumili.html
https://root.cern/doc/master/classTFumili.html:28416,Performance,perform,performs,28416,"rivatives of theoretical function. ; Input:; fX - vector of data point. Output:; DF - array of derivatives. ARITHM.F: Converted from CERNLIB ; Definition at line 291 of file TFumili.cxx. ◆ Eval(). Int_t TFumili::Eval ; (; Int_t & ; npar, . Double_t * ; grad, . Double_t & ; fval, . Double_t * ; par, . Int_t ; flag . ). Evaluate the minimisation function. ; Input parameters:; npar: number of currently variable parameters; par: array of (constant and variable) parameters; flag: Indicates what is to be calculated; grad: array of gradients. Output parameters:; fval: The calculated function value.; grad: The vector of first derivatives. The meaning of the parameters par is of course defined by the user, who uses the values of those parameters to calculate their function value. The starting values must be specified by the user.; Inside FCN user has to define Z-matrix by means TFumili::GetZ and TFumili::Derivatives, set theoretical function by means of TFumili::SetUserFunc, but first - pass number of parameters by TFumili::SetParNumber; Later values are determined by Fumili as it searches for the minimum or performs whatever analysis is requested by the user.; The default function calls the function specified in SetFCN ; Definition at line 350 of file TFumili.cxx. ◆ EvalTFN(). Double_t TFumili::EvalTFN ; (; Double_t * ; , . Double_t * ; X . ). Evaluate theoretical function. . df: array of partial derivatives; X: vector of theoretical function argument . Definition at line 362 of file TFumili.cxx. ◆ ExecuteCommand(). Int_t TFumili::ExecuteCommand ; (; const char * ; command, . Double_t * ; args, . Int_t ; nargs . ). overridevirtual . Execute MINUIT commands. ; MINImize, SIMplex, MIGrad and FUMili all will call TFumili::Minimize method.; For full command list see MINUIT. Reference Manual. CERN Program Library Long Writeup D506.; Improvement and errors calculation are not yet implemented as well as Monte-Carlo seeking and minimization. Contour commands are also unsupported. com",MatchSource.WIKI,doc/master/classTFumili.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumili.html
https://root.cern/doc/master/classTFumili.html:29930,Performance,cache,cache,29930,"ute MINUIT commands. ; MINImize, SIMplex, MIGrad and FUMili all will call TFumili::Minimize method.; For full command list see MINUIT. Reference Manual. CERN Program Library Long Writeup D506.; Improvement and errors calculation are not yet implemented as well as Monte-Carlo seeking and minimization. Contour commands are also unsupported. command : command string; args : array of arguments; nargs : number of arguments . Implements TVirtualFitter.; Definition at line 391 of file TFumili.cxx. ◆ ExecuteSetCommand(). Int_t TFumili::ExecuteSetCommand ; (; Int_t ; nargs). Called from TFumili::ExecuteCommand in case of ""SET xxx"" and ""SHOW xxx"". ; Definition at line 558 of file TFumili.cxx. ◆ FitChisquare(). void TFumili::FitChisquare ; (; Int_t & ; npar, . Double_t * ; gin, . Double_t & ; f, . Double_t * ; u, . Int_t ; flag . ). virtual . Minimization function for H1s using a Chisquare method. ; Default method (function evaluated at center of bin) for each point the cache contains the following info; 1D : bc,e,xc (bin content, error, x of center of bin); 2D : bc,e,xc,yc; 3D : bc,e,xc,yc,zc . Definition at line 1738 of file TFumili.cxx. ◆ FitChisquareI(). void TFumili::FitChisquareI ; (; Int_t & ; npar, . Double_t * ; gin, . Double_t & ; f, . Double_t * ; u, . Int_t ; flag . ). virtual . Minimization function for H1s using a Chisquare method. ; The ""I""ntegral method is used for each point the cache contains the following info; 1D : bc,e,xc,xw (bin content, error, x of center of bin, x bin width of bin); 2D : bc,e,xc,xw,yc,yw; 3D : bc,e,xc,xw,yc,yw,zc,zw . Definition at line 1809 of file TFumili.cxx. ◆ FitLikelihood(). void TFumili::FitLikelihood ; (; Int_t & ; npar, . Double_t * ; gin, . Double_t & ; f, . Double_t * ; u, . Int_t ; flag . ). virtual . Minimization function for H1s using a Likelihood method. ; Basically, it forms the likelihood by determining the Poisson probability that given a number of entries in a particular bin, the fit would predict it's value. This is ",MatchSource.WIKI,doc/master/classTFumili.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumili.html
https://root.cern/doc/master/classTFumili.html:30364,Performance,cache,cache,30364,"t line 391 of file TFumili.cxx. ◆ ExecuteSetCommand(). Int_t TFumili::ExecuteSetCommand ; (; Int_t ; nargs). Called from TFumili::ExecuteCommand in case of ""SET xxx"" and ""SHOW xxx"". ; Definition at line 558 of file TFumili.cxx. ◆ FitChisquare(). void TFumili::FitChisquare ; (; Int_t & ; npar, . Double_t * ; gin, . Double_t & ; f, . Double_t * ; u, . Int_t ; flag . ). virtual . Minimization function for H1s using a Chisquare method. ; Default method (function evaluated at center of bin) for each point the cache contains the following info; 1D : bc,e,xc (bin content, error, x of center of bin); 2D : bc,e,xc,yc; 3D : bc,e,xc,yc,zc . Definition at line 1738 of file TFumili.cxx. ◆ FitChisquareI(). void TFumili::FitChisquareI ; (; Int_t & ; npar, . Double_t * ; gin, . Double_t & ; f, . Double_t * ; u, . Int_t ; flag . ). virtual . Minimization function for H1s using a Chisquare method. ; The ""I""ntegral method is used for each point the cache contains the following info; 1D : bc,e,xc,xw (bin content, error, x of center of bin, x bin width of bin); 2D : bc,e,xc,xw,yc,yw; 3D : bc,e,xc,xw,yc,yw,zc,zw . Definition at line 1809 of file TFumili.cxx. ◆ FitLikelihood(). void TFumili::FitLikelihood ; (; Int_t & ; npar, . Double_t * ; gin, . Double_t & ; f, . Double_t * ; u, . Int_t ; flag . ). virtual . Minimization function for H1s using a Likelihood method. ; Basically, it forms the likelihood by determining the Poisson probability that given a number of entries in a particular bin, the fit would predict it's value. This is then done for each bin, and the sum of the logs is taken as the likelihood.; Default method (function evaluated at center of bin) for each point the cache contains the following info; 1D : bc,e,xc (bin content, error, x of center of bin); 2D : bc,e,xc,yc; 3D : bc,e,xc,yc,zc . Definition at line 1884 of file TFumili.cxx. ◆ FitLikelihoodI(). void TFumili::FitLikelihoodI ; (; Int_t & ; npar, . Double_t * ; gin, . Double_t & ; f, . Double_t * ; u, . Int_t ; flag . ",MatchSource.WIKI,doc/master/classTFumili.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumili.html
https://root.cern/doc/master/classTFumili.html:31105,Performance,cache,cache,31105,"ili::FitChisquareI ; (; Int_t & ; npar, . Double_t * ; gin, . Double_t & ; f, . Double_t * ; u, . Int_t ; flag . ). virtual . Minimization function for H1s using a Chisquare method. ; The ""I""ntegral method is used for each point the cache contains the following info; 1D : bc,e,xc,xw (bin content, error, x of center of bin, x bin width of bin); 2D : bc,e,xc,xw,yc,yw; 3D : bc,e,xc,xw,yc,yw,zc,zw . Definition at line 1809 of file TFumili.cxx. ◆ FitLikelihood(). void TFumili::FitLikelihood ; (; Int_t & ; npar, . Double_t * ; gin, . Double_t & ; f, . Double_t * ; u, . Int_t ; flag . ). virtual . Minimization function for H1s using a Likelihood method. ; Basically, it forms the likelihood by determining the Poisson probability that given a number of entries in a particular bin, the fit would predict it's value. This is then done for each bin, and the sum of the logs is taken as the likelihood.; Default method (function evaluated at center of bin) for each point the cache contains the following info; 1D : bc,e,xc (bin content, error, x of center of bin); 2D : bc,e,xc,yc; 3D : bc,e,xc,yc,zc . Definition at line 1884 of file TFumili.cxx. ◆ FitLikelihoodI(). void TFumili::FitLikelihoodI ; (; Int_t & ; npar, . Double_t * ; gin, . Double_t & ; f, . Double_t * ; u, . Int_t ; flag . ). virtual . Minimization function for H1s using a Likelihood method. ; Basically, it forms the likelihood by determining the Poisson probability that given a number of entries in a particular bin, the fit would predict it's value. This is then done for each bin, and the sum of the logs is taken as the likelihood.; The ""I""ntegral method is used for each point the cache contains the following info; 1D : bc,e,xc,xw (bin content, error, x of center of bin, x bin width of bin); 2D : bc,e,xc,xw,yc,yw; 3D : bc,e,xc,xw,yc,yw,zc,zw . Definition at line 1972 of file TFumili.cxx. ◆ FixParameter(). void TFumili::FixParameter ; (; Int_t ; ipar). overridevirtual . Fixes parameter number ipar. ; Implements TVirtualF",MatchSource.WIKI,doc/master/classTFumili.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumili.html
https://root.cern/doc/master/classTFumili.html:31787,Performance,cache,cache,31787,"isson probability that given a number of entries in a particular bin, the fit would predict it's value. This is then done for each bin, and the sum of the logs is taken as the likelihood.; Default method (function evaluated at center of bin) for each point the cache contains the following info; 1D : bc,e,xc (bin content, error, x of center of bin); 2D : bc,e,xc,yc; 3D : bc,e,xc,yc,zc . Definition at line 1884 of file TFumili.cxx. ◆ FitLikelihoodI(). void TFumili::FitLikelihoodI ; (; Int_t & ; npar, . Double_t * ; gin, . Double_t & ; f, . Double_t * ; u, . Int_t ; flag . ). virtual . Minimization function for H1s using a Likelihood method. ; Basically, it forms the likelihood by determining the Poisson probability that given a number of entries in a particular bin, the fit would predict it's value. This is then done for each bin, and the sum of the logs is taken as the likelihood.; The ""I""ntegral method is used for each point the cache contains the following info; 1D : bc,e,xc,xw (bin content, error, x of center of bin, x bin width of bin); 2D : bc,e,xc,xw,yc,yw; 3D : bc,e,xc,xw,yc,yw,zc,zw . Definition at line 1972 of file TFumili.cxx. ◆ FixParameter(). void TFumili::FixParameter ; (; Int_t ; ipar). overridevirtual . Fixes parameter number ipar. ; Implements TVirtualFitter.; Definition at line 774 of file TFumili.cxx. ◆ GetCovarianceMatrix(). Double_t * TFumili::GetCovarianceMatrix ; (; ); const. overridevirtual . Return a pointer to the covariance matrix. ; Implements TVirtualFitter.; Definition at line 784 of file TFumili.cxx. ◆ GetCovarianceMatrixElement(). Double_t TFumili::GetCovarianceMatrixElement ; (; Int_t ; i, . Int_t ; j . ); const. overridevirtual . Return element i,j from the covariance matrix. ; Implements TVirtualFitter.; Definition at line 793 of file TFumili.cxx. ◆ GetErrors(). Int_t TFumili::GetErrors ; (; Int_t ; ipar, . Double_t & ; eplus, . Double_t & ; eminus, . Double_t & ; eparab, . Double_t & ; globcc . ); const. overridevirtual . Return err",MatchSource.WIKI,doc/master/classTFumili.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumili.html
https://root.cern/doc/master/classTFumili.html:30928,Safety,predict,predict,30928,"method (function evaluated at center of bin) for each point the cache contains the following info; 1D : bc,e,xc (bin content, error, x of center of bin); 2D : bc,e,xc,yc; 3D : bc,e,xc,yc,zc . Definition at line 1738 of file TFumili.cxx. ◆ FitChisquareI(). void TFumili::FitChisquareI ; (; Int_t & ; npar, . Double_t * ; gin, . Double_t & ; f, . Double_t * ; u, . Int_t ; flag . ). virtual . Minimization function for H1s using a Chisquare method. ; The ""I""ntegral method is used for each point the cache contains the following info; 1D : bc,e,xc,xw (bin content, error, x of center of bin, x bin width of bin); 2D : bc,e,xc,xw,yc,yw; 3D : bc,e,xc,xw,yc,yw,zc,zw . Definition at line 1809 of file TFumili.cxx. ◆ FitLikelihood(). void TFumili::FitLikelihood ; (; Int_t & ; npar, . Double_t * ; gin, . Double_t & ; f, . Double_t * ; u, . Int_t ; flag . ). virtual . Minimization function for H1s using a Likelihood method. ; Basically, it forms the likelihood by determining the Poisson probability that given a number of entries in a particular bin, the fit would predict it's value. This is then done for each bin, and the sum of the logs is taken as the likelihood.; Default method (function evaluated at center of bin) for each point the cache contains the following info; 1D : bc,e,xc (bin content, error, x of center of bin); 2D : bc,e,xc,yc; 3D : bc,e,xc,yc,zc . Definition at line 1884 of file TFumili.cxx. ◆ FitLikelihoodI(). void TFumili::FitLikelihoodI ; (; Int_t & ; npar, . Double_t * ; gin, . Double_t & ; f, . Double_t * ; u, . Int_t ; flag . ). virtual . Minimization function for H1s using a Likelihood method. ; Basically, it forms the likelihood by determining the Poisson probability that given a number of entries in a particular bin, the fit would predict it's value. This is then done for each bin, and the sum of the logs is taken as the likelihood.; The ""I""ntegral method is used for each point the cache contains the following info; 1D : bc,e,xc,xw (bin content, error, x of ce",MatchSource.WIKI,doc/master/classTFumili.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumili.html
https://root.cern/doc/master/classTFumili.html:31633,Safety,predict,predict,31633,"xx. ◆ FitLikelihood(). void TFumili::FitLikelihood ; (; Int_t & ; npar, . Double_t * ; gin, . Double_t & ; f, . Double_t * ; u, . Int_t ; flag . ). virtual . Minimization function for H1s using a Likelihood method. ; Basically, it forms the likelihood by determining the Poisson probability that given a number of entries in a particular bin, the fit would predict it's value. This is then done for each bin, and the sum of the logs is taken as the likelihood.; Default method (function evaluated at center of bin) for each point the cache contains the following info; 1D : bc,e,xc (bin content, error, x of center of bin); 2D : bc,e,xc,yc; 3D : bc,e,xc,yc,zc . Definition at line 1884 of file TFumili.cxx. ◆ FitLikelihoodI(). void TFumili::FitLikelihoodI ; (; Int_t & ; npar, . Double_t * ; gin, . Double_t & ; f, . Double_t * ; u, . Int_t ; flag . ). virtual . Minimization function for H1s using a Likelihood method. ; Basically, it forms the likelihood by determining the Poisson probability that given a number of entries in a particular bin, the fit would predict it's value. This is then done for each bin, and the sum of the logs is taken as the likelihood.; The ""I""ntegral method is used for each point the cache contains the following info; 1D : bc,e,xc,xw (bin content, error, x of center of bin, x bin width of bin); 2D : bc,e,xc,xw,yc,yw; 3D : bc,e,xc,xw,yc,yw,zc,zw . Definition at line 1972 of file TFumili.cxx. ◆ FixParameter(). void TFumili::FixParameter ; (; Int_t ; ipar). overridevirtual . Fixes parameter number ipar. ; Implements TVirtualFitter.; Definition at line 774 of file TFumili.cxx. ◆ GetCovarianceMatrix(). Double_t * TFumili::GetCovarianceMatrix ; (; ); const. overridevirtual . Return a pointer to the covariance matrix. ; Implements TVirtualFitter.; Definition at line 784 of file TFumili.cxx. ◆ GetCovarianceMatrixElement(). Double_t TFumili::GetCovarianceMatrixElement ; (; Int_t ; i, . Int_t ; j . ); const. overridevirtual . Return element i,j from the covarianc",MatchSource.WIKI,doc/master/classTFumili.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumili.html
https://root.cern/doc/master/classTFumili.html:10598,Security,hash,hash,10598,"etZfirst (Int_t first);  ; virtual void SetZlast (Int_t last);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this met",MatchSource.WIKI,doc/master/classTFumili.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumili.html
https://root.cern/doc/master/classTFumili.html:3461,Testability,log,logarithm,3461,"1\over\sigma^2_j}{\partial f_j\over\theta_i}; {\partial f_j\over\theta_k}\tag{5}; \]. Then the equations for parameter increments are ; \[\left(\partial\chi^2\over\partial\theta_i\right)_{\vec\theta={\vec\theta}^0}; +\sum_k Z_{ik}\cdot(\theta_k-\theta^0_k) = 0,; \qquad i=1\ldots m\tag{6}; \]. Remarkable feature of algorithm is the technique for step restriction. For an initial value of parameter \({\vec\theta}^0\) a parallelepiped \(P_0\) is built with the center at \({\vec\theta}^0\) and axes parallel to coordinate axes \(\theta_i\). The lengths of parallelepiped sides along i-th axis is \(2b_i\), where \(b_i\) is such a value that the functions \(f_j(\vec\theta)\) are quasi-linear all over the parallelepiped.; FUMILI takes into account simple linear inequalities in the form: ; \[; \theta_i^{\rm min}\le\theta_i\le\theta^{\rm max}_i\tag{7}; \]. They form parallelepiped \(P\) ( \(P_0\) may be deformed by \(P\)). Very similar step formulae are used in FUMILI for negative logarithm of the likelihood function with the same idea - linearization of function argument. ; Definition at line 11 of file TFumili.h. Public Member Functions;  TFumili (Int_t maxpar=25);  ;  ~TFumili () override;  TFumili destructor. ;  ; void BuildArrays ();  Allocates memory for internal arrays. ;  ; Double_t Chisquare (Int_t npar, Double_t *params) const override;  return a chisquare equivalent ;  ; void Clear (Option_t *opt="""") override;  Resets all parameter names, values and errors to zero. ;  ; void DeleteArrays ();  Deallocates memory. Called from destructor TFumili::~TFumili. ;  ; void Derivatives (Double_t *, Double_t *);  Calculates partial derivatives of theoretical function. ;  ; Int_t Eval (Int_t &npar, Double_t *grad, Double_t &fval, Double_t *par, Int_t flag);  Evaluate the minimisation function. ;  ; Double_t EvalTFN (Double_t *, Double_t *);  Evaluate theoretical function. ;  ; Int_t ExecuteCommand (const char *command, Double_t *args, Int_t nargs) override;  Execute MINUIT command",MatchSource.WIKI,doc/master/classTFumili.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumili.html
https://root.cern/doc/master/classTFumili.html:6565,Testability,log,log,6565,"uble_t &eplus, Double_t &eminus, Double_t &eparab, Double_t &globcc) const override;  Return errors after MINOs not implemented. ;  ; Int_t GetNumberFreeParameters () const override;  Return the number of free parameters. ;  ; Int_t GetNumberTotalParameters () const override;  Return the total number of parameters (free + fixed) ;  ; Double_t GetParameter (Int_t ipar) const override;  Return current value of parameter ipar. ;  ; Int_t GetParameter (Int_t ipar, char *name, Double_t &value, Double_t &verr, Double_t &vlow, Double_t &vhigh) const override;  Get various ipar parameter attributes: ;  ; Double_t GetParError (Int_t ipar) const override;  Return error of parameter ipar. ;  ; const char * GetParName (Int_t ipar) const override;  Return name of parameter ipar. ;  ; Double_t * GetPL0 () const;  ; Int_t GetStats (Double_t &amin, Double_t &edm, Double_t &errdef, Int_t &nvpar, Int_t &nparx) const override;  Return global fit parameters. ;  ; Double_t GetSumLog (Int_t) override;  Return Sum(log(i) i=0,n used by log-likelihood fits. ;  ; Double_t * GetZ () const;  ; void InvertZ (Int_t);  Inverts packed diagonal matrix Z by square-root method. ;  ; TClass * IsA () const override;  ; Bool_t IsFixed (Int_t ipar) const override;  Return kTRUE if parameter ipar is fixed, kFALSE otherwise) ;  ; Int_t Minimize ();  Main minimization procedure. ;  ; void PrintResults (Int_t k, Double_t p) const override;  Prints fit results. ;  ; void ReleaseParameter (Int_t ipar) override;  Releases parameter number ipar. ;  ; void SetData (Double_t *, Int_t, Int_t);  Sets pointer to data array provided by user. ;  ; void SetFitMethod (const char *name) override;  ret fit method (chisquare or log-likelihood) ;  ; Int_t SetParameter (Int_t ipar, const char *parname, Double_t value, Double_t verr, Double_t vlow, Double_t vhigh) override;  Sets for parameter number ipar initial parameter value, name parname, initial error verr and limits vlow and vhigh. ;  ; void SetParNumber (Int_t ParNum);",MatchSource.WIKI,doc/master/classTFumili.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumili.html
https://root.cern/doc/master/classTFumili.html:6586,Testability,log,log-likelihood,6586,"uble_t &eplus, Double_t &eminus, Double_t &eparab, Double_t &globcc) const override;  Return errors after MINOs not implemented. ;  ; Int_t GetNumberFreeParameters () const override;  Return the number of free parameters. ;  ; Int_t GetNumberTotalParameters () const override;  Return the total number of parameters (free + fixed) ;  ; Double_t GetParameter (Int_t ipar) const override;  Return current value of parameter ipar. ;  ; Int_t GetParameter (Int_t ipar, char *name, Double_t &value, Double_t &verr, Double_t &vlow, Double_t &vhigh) const override;  Get various ipar parameter attributes: ;  ; Double_t GetParError (Int_t ipar) const override;  Return error of parameter ipar. ;  ; const char * GetParName (Int_t ipar) const override;  Return name of parameter ipar. ;  ; Double_t * GetPL0 () const;  ; Int_t GetStats (Double_t &amin, Double_t &edm, Double_t &errdef, Int_t &nvpar, Int_t &nparx) const override;  Return global fit parameters. ;  ; Double_t GetSumLog (Int_t) override;  Return Sum(log(i) i=0,n used by log-likelihood fits. ;  ; Double_t * GetZ () const;  ; void InvertZ (Int_t);  Inverts packed diagonal matrix Z by square-root method. ;  ; TClass * IsA () const override;  ; Bool_t IsFixed (Int_t ipar) const override;  Return kTRUE if parameter ipar is fixed, kFALSE otherwise) ;  ; Int_t Minimize ();  Main minimization procedure. ;  ; void PrintResults (Int_t k, Double_t p) const override;  Prints fit results. ;  ; void ReleaseParameter (Int_t ipar) override;  Releases parameter number ipar. ;  ; void SetData (Double_t *, Int_t, Int_t);  Sets pointer to data array provided by user. ;  ; void SetFitMethod (const char *name) override;  ret fit method (chisquare or log-likelihood) ;  ; Int_t SetParameter (Int_t ipar, const char *parname, Double_t value, Double_t verr, Double_t vlow, Double_t vhigh) override;  Sets for parameter number ipar initial parameter value, name parname, initial error verr and limits vlow and vhigh. ;  ; void SetParNumber (Int_t ParNum);",MatchSource.WIKI,doc/master/classTFumili.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumili.html
https://root.cern/doc/master/classTFumili.html:7257,Testability,log,log-likelihood,7257,"_t * GetPL0 () const;  ; Int_t GetStats (Double_t &amin, Double_t &edm, Double_t &errdef, Int_t &nvpar, Int_t &nparx) const override;  Return global fit parameters. ;  ; Double_t GetSumLog (Int_t) override;  Return Sum(log(i) i=0,n used by log-likelihood fits. ;  ; Double_t * GetZ () const;  ; void InvertZ (Int_t);  Inverts packed diagonal matrix Z by square-root method. ;  ; TClass * IsA () const override;  ; Bool_t IsFixed (Int_t ipar) const override;  Return kTRUE if parameter ipar is fixed, kFALSE otherwise) ;  ; Int_t Minimize ();  Main minimization procedure. ;  ; void PrintResults (Int_t k, Double_t p) const override;  Prints fit results. ;  ; void ReleaseParameter (Int_t ipar) override;  Releases parameter number ipar. ;  ; void SetData (Double_t *, Int_t, Int_t);  Sets pointer to data array provided by user. ;  ; void SetFitMethod (const char *name) override;  ret fit method (chisquare or log-likelihood) ;  ; Int_t SetParameter (Int_t ipar, const char *parname, Double_t value, Double_t verr, Double_t vlow, Double_t vhigh) override;  Sets for parameter number ipar initial parameter value, name parname, initial error verr and limits vlow and vhigh. ;  ; void SetParNumber (Int_t ParNum);  ; Int_t SGZ ();  Evaluates objective function ( chi-square ), gradients and Z-matrix using data provided by user via TFumili::SetData. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TVirtualFitter;  TVirtualFitter ();  Default constructor. ;  ;  ~TVirtualFitter () override;  Cleanup virtual fitter. ;  ; virtual void GetConfidenceIntervals (Int_t n, Int_t ndim, const Double_t *x, Double_t *ci, Double_t cl=0.95);  return confidence intervals in array x of dimension ndim implemented in TFitter and TLinearFitter ;  ; virtual void GetConfidenceIntervals (TObject *obj, Double_t cl=0.95);  return confidence intervals in TObject obj implemented in",MatchSource.WIKI,doc/master/classTFumili.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumili.html
https://root.cern/doc/master/classTFumili.html:30999,Testability,log,logs,30999,"t, error, x of center of bin); 2D : bc,e,xc,yc; 3D : bc,e,xc,yc,zc . Definition at line 1738 of file TFumili.cxx. ◆ FitChisquareI(). void TFumili::FitChisquareI ; (; Int_t & ; npar, . Double_t * ; gin, . Double_t & ; f, . Double_t * ; u, . Int_t ; flag . ). virtual . Minimization function for H1s using a Chisquare method. ; The ""I""ntegral method is used for each point the cache contains the following info; 1D : bc,e,xc,xw (bin content, error, x of center of bin, x bin width of bin); 2D : bc,e,xc,xw,yc,yw; 3D : bc,e,xc,xw,yc,yw,zc,zw . Definition at line 1809 of file TFumili.cxx. ◆ FitLikelihood(). void TFumili::FitLikelihood ; (; Int_t & ; npar, . Double_t * ; gin, . Double_t & ; f, . Double_t * ; u, . Int_t ; flag . ). virtual . Minimization function for H1s using a Likelihood method. ; Basically, it forms the likelihood by determining the Poisson probability that given a number of entries in a particular bin, the fit would predict it's value. This is then done for each bin, and the sum of the logs is taken as the likelihood.; Default method (function evaluated at center of bin) for each point the cache contains the following info; 1D : bc,e,xc (bin content, error, x of center of bin); 2D : bc,e,xc,yc; 3D : bc,e,xc,yc,zc . Definition at line 1884 of file TFumili.cxx. ◆ FitLikelihoodI(). void TFumili::FitLikelihoodI ; (; Int_t & ; npar, . Double_t * ; gin, . Double_t & ; f, . Double_t * ; u, . Int_t ; flag . ). virtual . Minimization function for H1s using a Likelihood method. ; Basically, it forms the likelihood by determining the Poisson probability that given a number of entries in a particular bin, the fit would predict it's value. This is then done for each bin, and the sum of the logs is taken as the likelihood.; The ""I""ntegral method is used for each point the cache contains the following info; 1D : bc,e,xc,xw (bin content, error, x of center of bin, x bin width of bin); 2D : bc,e,xc,xw,yc,yw; 3D : bc,e,xc,xw,yc,yw,zc,zw . Definition at line 1972 of file TFum",MatchSource.WIKI,doc/master/classTFumili.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumili.html
https://root.cern/doc/master/classTFumili.html:31704,Testability,log,logs,31704,"; u, . Int_t ; flag . ). virtual . Minimization function for H1s using a Likelihood method. ; Basically, it forms the likelihood by determining the Poisson probability that given a number of entries in a particular bin, the fit would predict it's value. This is then done for each bin, and the sum of the logs is taken as the likelihood.; Default method (function evaluated at center of bin) for each point the cache contains the following info; 1D : bc,e,xc (bin content, error, x of center of bin); 2D : bc,e,xc,yc; 3D : bc,e,xc,yc,zc . Definition at line 1884 of file TFumili.cxx. ◆ FitLikelihoodI(). void TFumili::FitLikelihoodI ; (; Int_t & ; npar, . Double_t * ; gin, . Double_t & ; f, . Double_t * ; u, . Int_t ; flag . ). virtual . Minimization function for H1s using a Likelihood method. ; Basically, it forms the likelihood by determining the Poisson probability that given a number of entries in a particular bin, the fit would predict it's value. This is then done for each bin, and the sum of the logs is taken as the likelihood.; The ""I""ntegral method is used for each point the cache contains the following info; 1D : bc,e,xc,xw (bin content, error, x of center of bin, x bin width of bin); 2D : bc,e,xc,xw,yc,yw; 3D : bc,e,xc,xw,yc,yw,zc,zw . Definition at line 1972 of file TFumili.cxx. ◆ FixParameter(). void TFumili::FixParameter ; (; Int_t ; ipar). overridevirtual . Fixes parameter number ipar. ; Implements TVirtualFitter.; Definition at line 774 of file TFumili.cxx. ◆ GetCovarianceMatrix(). Double_t * TFumili::GetCovarianceMatrix ; (; ); const. overridevirtual . Return a pointer to the covariance matrix. ; Implements TVirtualFitter.; Definition at line 784 of file TFumili.cxx. ◆ GetCovarianceMatrixElement(). Double_t TFumili::GetCovarianceMatrixElement ; (; Int_t ; i, . Int_t ; j . ); const. overridevirtual . Return element i,j from the covariance matrix. ; Implements TVirtualFitter.; Definition at line 793 of file TFumili.cxx. ◆ GetErrors(). Int_t TFumili::GetErrors",MatchSource.WIKI,doc/master/classTFumili.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumili.html
https://root.cern/doc/master/classTFumili.html:35112,Testability,log,log,35112,"uble_t TFumili::GetParError ; (; Int_t ; ipar); const. overridevirtual . Return error of parameter ipar. ; Implements TVirtualFitter.; Definition at line 826 of file TFumili.cxx. ◆ GetParName(). const char * TFumili::GetParName ; (; Int_t ; ipar); const. overridevirtual . Return name of parameter ipar. ; Implements TVirtualFitter.; Definition at line 872 of file TFumili.cxx. ◆ GetPL0(). Double_t * TFumili::GetPL0 ; (; ); const. inline . Definition at line 95 of file TFumili.h. ◆ GetStats(). Int_t TFumili::GetStats ; (; Double_t & ; amin, . Double_t & ; edm, . Double_t & ; errdef, . Int_t & ; nvpar, . Int_t & ; nparx . ); const. overridevirtual . Return global fit parameters. . amin : chisquare; edm : estimated distance to minimum; errdef; nvpar : number of variable parameters; nparx : total number of parameters . Implements TVirtualFitter.; Definition at line 904 of file TFumili.cxx. ◆ GetSumLog(). Double_t TFumili::GetSumLog ; (; Int_t ; n). overridevirtual . Return Sum(log(i) i=0,n used by log-likelihood fits. ; Implements TVirtualFitter.; Definition at line 921 of file TFumili.cxx. ◆ GetZ(). Double_t * TFumili::GetZ ; (; ); const. inline . Definition at line 102 of file TFumili.h. ◆ InvertZ(). void TFumili::InvertZ ; (; Int_t ; n). Inverts packed diagonal matrix Z by square-root method. ; Matrix elements corresponding to fix parameters are removed. n: number of variable parameters . Definition at line 945 of file TFumili.cxx. ◆ IsA(). TClass * TFumili::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 114 of file TFumili.h. ◆ IsFixed(). Bool_t TFumili::IsFixed ; (; Int_t ; ipar); const. overridevirtual . Return kTRUE if parameter ipar is fixed, kFALSE otherwise) ; Implements TVirtualFitter.; Definition at line 1060 of file TFumili.cxx. ◆ Minimize(). Int_t TFumili::Minimize ; (; ). Main minimization procedure. ; This function is called after setting theoretical function by means of T",MatchSource.WIKI,doc/master/classTFumili.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumili.html
https://root.cern/doc/master/classTFumili.html:35133,Testability,log,log-likelihood,35133,"uble_t TFumili::GetParError ; (; Int_t ; ipar); const. overridevirtual . Return error of parameter ipar. ; Implements TVirtualFitter.; Definition at line 826 of file TFumili.cxx. ◆ GetParName(). const char * TFumili::GetParName ; (; Int_t ; ipar); const. overridevirtual . Return name of parameter ipar. ; Implements TVirtualFitter.; Definition at line 872 of file TFumili.cxx. ◆ GetPL0(). Double_t * TFumili::GetPL0 ; (; ); const. inline . Definition at line 95 of file TFumili.h. ◆ GetStats(). Int_t TFumili::GetStats ; (; Double_t & ; amin, . Double_t & ; edm, . Double_t & ; errdef, . Int_t & ; nvpar, . Int_t & ; nparx . ); const. overridevirtual . Return global fit parameters. . amin : chisquare; edm : estimated distance to minimum; errdef; nvpar : number of variable parameters; nparx : total number of parameters . Implements TVirtualFitter.; Definition at line 904 of file TFumili.cxx. ◆ GetSumLog(). Double_t TFumili::GetSumLog ; (; Int_t ; n). overridevirtual . Return Sum(log(i) i=0,n used by log-likelihood fits. ; Implements TVirtualFitter.; Definition at line 921 of file TFumili.cxx. ◆ GetZ(). Double_t * TFumili::GetZ ; (; ); const. inline . Definition at line 102 of file TFumili.h. ◆ InvertZ(). void TFumili::InvertZ ; (; Int_t ; n). Inverts packed diagonal matrix Z by square-root method. ; Matrix elements corresponding to fix parameters are removed. n: number of variable parameters . Definition at line 945 of file TFumili.cxx. ◆ IsA(). TClass * TFumili::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 114 of file TFumili.h. ◆ IsFixed(). Bool_t TFumili::IsFixed ; (; Int_t ; ipar); const. overridevirtual . Return kTRUE if parameter ipar is fixed, kFALSE otherwise) ; Implements TVirtualFitter.; Definition at line 1060 of file TFumili.cxx. ◆ Minimize(). Int_t TFumili::Minimize ; (; ). Main minimization procedure. ; This function is called after setting theoretical function by means of T",MatchSource.WIKI,doc/master/classTFumili.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumili.html
https://root.cern/doc/master/classTFumili.html:38154,Testability,log,log-likelihood,38154,"ter number ipar. ; Implements TVirtualFitter.; Definition at line 1586 of file TFumili.cxx. ◆ SetData(). void TFumili::SetData ; (; Double_t * ; exdata, . Int_t ; numpoints, . Int_t ; vecsize . ). Sets pointer to data array provided by user. ; Necessary if SetFCN is not called. numpoints: number of experimental points; vecsize: size of data point vector + 2 (for N-dimensional fit vecsize=N+2); exdata: data array with following format; exdata[0] = ExpValue_0 - experimental data value number 0; exdata[1] = ExpSigma_0 - error of value number 0; exdata[2] = X_0[0]; exdata[3] = X_0[1]; exdata[vecsize-1] = X_0[vecsize-3]; exdata[vecsize] = ExpValue_1; exdata[vecsize+1] = ExpSigma_1; exdata[vecsize+2] = X_1[0]; exdata[vecsize*(numpoints-1)] = ExpValue_(numpoints-1); exdata[vecsize*numpoints-1] = X_(numpoints-1)[vecsize-3] . Definition at line 1616 of file TFumili.cxx. ◆ SetFitMethod(). void TFumili::SetFitMethod ; (; const char * ; name). overridevirtual . ret fit method (chisquare or log-likelihood) ; Implements TVirtualFitter.; Definition at line 1628 of file TFumili.cxx. ◆ SetParameter(). Int_t TFumili::SetParameter ; (; Int_t ; ipar, . const char * ; parname, . Double_t ; value, . Double_t ; verr, . Double_t ; vlow, . Double_t ; vhigh . ). overridevirtual . Sets for parameter number ipar initial parameter value, name parname, initial error verr and limits vlow and vhigh. . If vlow = vhigh but not equal to zero, parameter will be fixed.; If vlow = vhigh = 0, parameter is released and its limits are discarded . Implements TVirtualFitter.; Definition at line 1641 of file TFumili.cxx. ◆ SetParNumber(). void TFumili::SetParNumber ; (; Int_t ; ParNum). Definition at line 168 of file TFumili.cxx. ◆ SGZ(). Int_t TFumili::SGZ ; (; ). Evaluates objective function ( chi-square ), gradients and Z-matrix using data provided by user via TFumili::SetData. ; Definition at line 1670 of file TFumili.cxx. ◆ Streamer(). void TFumili::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stre",MatchSource.WIKI,doc/master/classTFumili.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumili.html
https://root.cern/doc/master/classTFumili.html:3225,Usability,simpl,simple,3225,"FUMILI will fail if one tries minimize \(\chi^2 = g^2(\vec\theta)\) where g is arbitrary function.; Approximate value is: ; \[{\partial^2\chi^2\over\partial\theta_i\partial\theta_k}\approx; Z_{ik}=; \sum^n_{j=1}{1\over\sigma^2_j}{\partial f_j\over\theta_i}; {\partial f_j\over\theta_k}\tag{5}; \]. Then the equations for parameter increments are ; \[\left(\partial\chi^2\over\partial\theta_i\right)_{\vec\theta={\vec\theta}^0}; +\sum_k Z_{ik}\cdot(\theta_k-\theta^0_k) = 0,; \qquad i=1\ldots m\tag{6}; \]. Remarkable feature of algorithm is the technique for step restriction. For an initial value of parameter \({\vec\theta}^0\) a parallelepiped \(P_0\) is built with the center at \({\vec\theta}^0\) and axes parallel to coordinate axes \(\theta_i\). The lengths of parallelepiped sides along i-th axis is \(2b_i\), where \(b_i\) is such a value that the functions \(f_j(\vec\theta)\) are quasi-linear all over the parallelepiped.; FUMILI takes into account simple linear inequalities in the form: ; \[; \theta_i^{\rm min}\le\theta_i\le\theta^{\rm max}_i\tag{7}; \]. They form parallelepiped \(P\) ( \(P_0\) may be deformed by \(P\)). Very similar step formulae are used in FUMILI for negative logarithm of the likelihood function with the same idea - linearization of function argument. ; Definition at line 11 of file TFumili.h. Public Member Functions;  TFumili (Int_t maxpar=25);  ;  ~TFumili () override;  TFumili destructor. ;  ; void BuildArrays ();  Allocates memory for internal arrays. ;  ; Double_t Chisquare (Int_t npar, Double_t *params) const override;  return a chisquare equivalent ;  ; void Clear (Option_t *opt="""") override;  Resets all parameter names, values and errors to zero. ;  ; void DeleteArrays ();  Deallocates memory. Called from destructor TFumili::~TFumili. ;  ; void Derivatives (Double_t *, Double_t *);  Calculates partial derivatives of theoretical function. ;  ; Int_t Eval (Int_t &npar, Double_t *grad, Double_t &fval, Double_t *par, Int_t flag);  Evaluate the ",MatchSource.WIKI,doc/master/classTFumili.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumili.html
https://root.cern/doc/master/classTFumiliMinimizer.html:859,Availability,error,errors,859,"ing...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Static Protected Member Functions |; Private Attributes |; Static Private Attributes |; List of all members ; TFumiliMinimizer Class Reference. ; TFumiliMinimizer class: minimizer implementation based on TFumili. ; Definition at line 43 of file TFumiliMinimizer.h. Public Member Functions;  TFumiliMinimizer (int dummy=0);  Default constructor (an argument is needed by plug-in manager) ;  ;  ~TFumiliMinimizer () override;  Destructor (no operations) ;  ; double CovMatrix (unsigned int i, unsigned int j) const override;  return covariance matrices elements if the variable is fixed the matrix is zero The ordering of the variables is the same as in errors ;  ; int CovMatrixStatus () const override;  return status of covariance matrix using Minuit convention {0 not calculated 1 approximated 2 made pos def , 3 accurate} Minimizer who implements covariance matrix calculation will re-implement the method ;  ; double Edm () const override;  return expected distance reached from the minimum ;  ; const double * Errors () const override;  return errors at the minimum ;  ; virtual TClass * IsA () const;  ; const double * MinGradient () const override;  return pointer to gradient values at the minimum ;  ; bool Minimize () override;  method to perform the minimization ;  ; double MinValue () const override;  return minimum function value ;  ; unsigned int NCalls () const override;  number of function calls to reach the minimum ;  ; unsigned int NDim () const override;  this is <= Function().NDim() which is the total number of variables (free+ constrained ones) ;  ; unsigned int NFree () const override;  number of free variables (real dimension of the problem) this is <= Function().NDim() which is the total ;  ; bool ProvidesError () const override;  minimizer provides error and error matrix ;  ; bool SetFixedVariable (unsigned int, const std::string &, double) overr",MatchSource.WIKI,doc/master/classTFumiliMinimizer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumiliMinimizer.html
https://root.cern/doc/master/classTFumiliMinimizer.html:1256,Availability,error,errors,1256,"ing...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Static Protected Member Functions |; Private Attributes |; Static Private Attributes |; List of all members ; TFumiliMinimizer Class Reference. ; TFumiliMinimizer class: minimizer implementation based on TFumili. ; Definition at line 43 of file TFumiliMinimizer.h. Public Member Functions;  TFumiliMinimizer (int dummy=0);  Default constructor (an argument is needed by plug-in manager) ;  ;  ~TFumiliMinimizer () override;  Destructor (no operations) ;  ; double CovMatrix (unsigned int i, unsigned int j) const override;  return covariance matrices elements if the variable is fixed the matrix is zero The ordering of the variables is the same as in errors ;  ; int CovMatrixStatus () const override;  return status of covariance matrix using Minuit convention {0 not calculated 1 approximated 2 made pos def , 3 accurate} Minimizer who implements covariance matrix calculation will re-implement the method ;  ; double Edm () const override;  return expected distance reached from the minimum ;  ; const double * Errors () const override;  return errors at the minimum ;  ; virtual TClass * IsA () const;  ; const double * MinGradient () const override;  return pointer to gradient values at the minimum ;  ; bool Minimize () override;  method to perform the minimization ;  ; double MinValue () const override;  return minimum function value ;  ; unsigned int NCalls () const override;  number of function calls to reach the minimum ;  ; unsigned int NDim () const override;  this is <= Function().NDim() which is the total number of variables (free+ constrained ones) ;  ; unsigned int NFree () const override;  number of free variables (real dimension of the problem) this is <= Function().NDim() which is the total ;  ; bool ProvidesError () const override;  minimizer provides error and error matrix ;  ; bool SetFixedVariable (unsigned int, const std::string &, double) overr",MatchSource.WIKI,doc/master/classTFumiliMinimizer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumiliMinimizer.html
https://root.cern/doc/master/classTFumiliMinimizer.html:1991,Availability,error,error,1991,"ide;  method to perform the minimization ;  ; double MinValue () const override;  return minimum function value ;  ; unsigned int NCalls () const override;  number of function calls to reach the minimum ;  ; unsigned int NDim () const override;  this is <= Function().NDim() which is the total number of variables (free+ constrained ones) ;  ; unsigned int NFree () const override;  number of free variables (real dimension of the problem) this is <= Function().NDim() which is the total ;  ; bool ProvidesError () const override;  minimizer provides error and error matrix ;  ; bool SetFixedVariable (unsigned int, const std::string &, double) override;  set fixed variable (override if minimizer supports them ) ;  ; void SetFunction (const ROOT::Math::IMultiGenFunction &func) override;  set the function to minimize ;  ; bool SetLimitedVariable (unsigned int ivar, const std::string &name, double val, double step, double, double) override;  set upper/lower limited variable (override if minimizer supports them ) ;  ; bool SetVariable (unsigned int ivar, const std::string &name, double val, double step) override;  set free variable ;  ; bool SetVariableValue (unsigned int ivar, double val) override;  set the value of an existing variable ;  ; virtual void Streamer (TBuffer &);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; const double * X () const override;  return pointer to X values at the minimum ;  ;  Public Member Functions inherited from ROOT::Math::Minimizer;  Minimizer ();  Default constructor. ;  ;  Minimizer (Minimizer &&)=delete;  ;  Minimizer (Minimizer const &)=delete;  ; virtual ~Minimizer ();  Destructor (no operations). ;  ; virtual void Clear ();  reset for consecutive minimization - implement if needed ;  ; virtual bool Contour (unsigned int ivar, unsigned int jvar, unsigned int &npoints, double *xi, double *xj);  find the contour points (xi, xj) of the function for parameter ivar and jvar around the minimum The contour will be find for ",MatchSource.WIKI,doc/master/classTFumiliMinimizer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumiliMinimizer.html
https://root.cern/doc/master/classTFumiliMinimizer.html:2001,Availability,error,error,2001,"ide;  method to perform the minimization ;  ; double MinValue () const override;  return minimum function value ;  ; unsigned int NCalls () const override;  number of function calls to reach the minimum ;  ; unsigned int NDim () const override;  this is <= Function().NDim() which is the total number of variables (free+ constrained ones) ;  ; unsigned int NFree () const override;  number of free variables (real dimension of the problem) this is <= Function().NDim() which is the total ;  ; bool ProvidesError () const override;  minimizer provides error and error matrix ;  ; bool SetFixedVariable (unsigned int, const std::string &, double) override;  set fixed variable (override if minimizer supports them ) ;  ; void SetFunction (const ROOT::Math::IMultiGenFunction &func) override;  set the function to minimize ;  ; bool SetLimitedVariable (unsigned int ivar, const std::string &name, double val, double step, double, double) override;  set upper/lower limited variable (override if minimizer supports them ) ;  ; bool SetVariable (unsigned int ivar, const std::string &name, double val, double step) override;  set free variable ;  ; bool SetVariableValue (unsigned int ivar, double val) override;  set the value of an existing variable ;  ; virtual void Streamer (TBuffer &);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; const double * X () const override;  return pointer to X values at the minimum ;  ;  Public Member Functions inherited from ROOT::Math::Minimizer;  Minimizer ();  Default constructor. ;  ;  Minimizer (Minimizer &&)=delete;  ;  Minimizer (Minimizer const &)=delete;  ; virtual ~Minimizer ();  Destructor (no operations). ;  ; virtual void Clear ();  reset for consecutive minimization - implement if needed ;  ; virtual bool Contour (unsigned int ivar, unsigned int jvar, unsigned int &npoints, double *xi, double *xj);  find the contour points (xi, xj) of the function for parameter ivar and jvar around the minimum The contour will be find for ",MatchSource.WIKI,doc/master/classTFumiliMinimizer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumiliMinimizer.html
https://root.cern/doc/master/classTFumiliMinimizer.html:3695,Availability,error,error,3695,"xisting variable ;  ; virtual void Streamer (TBuffer &);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; const double * X () const override;  return pointer to X values at the minimum ;  ;  Public Member Functions inherited from ROOT::Math::Minimizer;  Minimizer ();  Default constructor. ;  ;  Minimizer (Minimizer &&)=delete;  ;  Minimizer (Minimizer const &)=delete;  ; virtual ~Minimizer ();  Destructor (no operations). ;  ; virtual void Clear ();  reset for consecutive minimization - implement if needed ;  ; virtual bool Contour (unsigned int ivar, unsigned int jvar, unsigned int &npoints, double *xi, double *xj);  find the contour points (xi, xj) of the function for parameter ivar and jvar around the minimum The contour will be find for value of the function = Min + ErrorUp(); ;  ; virtual double Correlation (unsigned int i, unsigned int j) const;  return correlation coefficient between variable i and j. ;  ; double ErrorDef () const;  return the statistical scale used for calculate the error is typically 1 for Chi2 and 0.5 for likelihood minimization ;  ; virtual bool FixVariable (unsigned int ivar);  fix an existing variable ;  ; virtual bool GetCovMatrix (double *covMat) const;  Fill the passed array with the covariance matrix elements if the variable is fixed or const the value is zero. ;  ; virtual bool GetHessianMatrix (double *hMat) const;  Fill the passed array with the Hessian matrix elements The Hessian matrix is the matrix of the second derivatives and is the inverse of the covariance matrix If the variable is fixed or const the values for that variables are zero. ;  ; virtual bool GetMinosError (unsigned int ivar, double &errLow, double &errUp, int option=0);  minos error for variable i, return false if Minos failed or not supported and the lower and upper errors are returned in errLow and errUp An extra flag specifies if only the lower (option=-1) or the upper (option=+1) error calculation is run ;  ; virtual bool GetVariableSettin",MatchSource.WIKI,doc/master/classTFumiliMinimizer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumiliMinimizer.html
https://root.cern/doc/master/classTFumiliMinimizer.html:4400,Availability,error,error,4400,"s typically 1 for Chi2 and 0.5 for likelihood minimization ;  ; virtual bool FixVariable (unsigned int ivar);  fix an existing variable ;  ; virtual bool GetCovMatrix (double *covMat) const;  Fill the passed array with the covariance matrix elements if the variable is fixed or const the value is zero. ;  ; virtual bool GetHessianMatrix (double *hMat) const;  Fill the passed array with the Hessian matrix elements The Hessian matrix is the matrix of the second derivatives and is the inverse of the covariance matrix If the variable is fixed or const the values for that variables are zero. ;  ; virtual bool GetMinosError (unsigned int ivar, double &errLow, double &errUp, int option=0);  minos error for variable i, return false if Minos failed or not supported and the lower and upper errors are returned in errLow and errUp An extra flag specifies if only the lower (option=-1) or the upper (option=+1) error calculation is run ;  ; virtual bool GetVariableSettings (unsigned int ivar, ROOT::Fit::ParameterSettings &pars) const;  get variable settings in a variable object (like ROOT::Fit::ParamsSettings) ;  ; virtual double GlobalCC (unsigned int ivar) const;  return global correlation coefficient for variable i This is a number between zero and one which gives the correlation between the i-th parameter and that linear combination of all other parameters which is most strongly correlated with i. ;  ; virtual bool Hesse ();  perform a full calculation of the Hessian matrix for error calculation ;  ; virtual bool IsFixedVariable (unsigned int ivar) const;  query if an existing variable is fixed (i.e. ;  ; bool IsValidError () const;  return true if Minimizer has performed a detailed error validation (e.g. run Hesse for Minuit) ;  ; unsigned int MaxFunctionCalls () const;  max number of function calls ;  ; unsigned int MaxIterations () const;  max iterations ;  ; virtual int MinosStatus () const;  status code of Minos (to be re-implemented by the minimizers supporting Minos) ;  ",MatchSource.WIKI,doc/master/classTFumiliMinimizer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumiliMinimizer.html
https://root.cern/doc/master/classTFumiliMinimizer.html:4492,Availability,error,errors,4492,"s typically 1 for Chi2 and 0.5 for likelihood minimization ;  ; virtual bool FixVariable (unsigned int ivar);  fix an existing variable ;  ; virtual bool GetCovMatrix (double *covMat) const;  Fill the passed array with the covariance matrix elements if the variable is fixed or const the value is zero. ;  ; virtual bool GetHessianMatrix (double *hMat) const;  Fill the passed array with the Hessian matrix elements The Hessian matrix is the matrix of the second derivatives and is the inverse of the covariance matrix If the variable is fixed or const the values for that variables are zero. ;  ; virtual bool GetMinosError (unsigned int ivar, double &errLow, double &errUp, int option=0);  minos error for variable i, return false if Minos failed or not supported and the lower and upper errors are returned in errLow and errUp An extra flag specifies if only the lower (option=-1) or the upper (option=+1) error calculation is run ;  ; virtual bool GetVariableSettings (unsigned int ivar, ROOT::Fit::ParameterSettings &pars) const;  get variable settings in a variable object (like ROOT::Fit::ParamsSettings) ;  ; virtual double GlobalCC (unsigned int ivar) const;  return global correlation coefficient for variable i This is a number between zero and one which gives the correlation between the i-th parameter and that linear combination of all other parameters which is most strongly correlated with i. ;  ; virtual bool Hesse ();  perform a full calculation of the Hessian matrix for error calculation ;  ; virtual bool IsFixedVariable (unsigned int ivar) const;  query if an existing variable is fixed (i.e. ;  ; bool IsValidError () const;  return true if Minimizer has performed a detailed error validation (e.g. run Hesse for Minuit) ;  ; unsigned int MaxFunctionCalls () const;  max number of function calls ;  ; unsigned int MaxIterations () const;  max iterations ;  ; virtual int MinosStatus () const;  status code of Minos (to be re-implemented by the minimizers supporting Minos) ;  ",MatchSource.WIKI,doc/master/classTFumiliMinimizer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumiliMinimizer.html
https://root.cern/doc/master/classTFumiliMinimizer.html:4611,Availability,error,error,4611,"s typically 1 for Chi2 and 0.5 for likelihood minimization ;  ; virtual bool FixVariable (unsigned int ivar);  fix an existing variable ;  ; virtual bool GetCovMatrix (double *covMat) const;  Fill the passed array with the covariance matrix elements if the variable is fixed or const the value is zero. ;  ; virtual bool GetHessianMatrix (double *hMat) const;  Fill the passed array with the Hessian matrix elements The Hessian matrix is the matrix of the second derivatives and is the inverse of the covariance matrix If the variable is fixed or const the values for that variables are zero. ;  ; virtual bool GetMinosError (unsigned int ivar, double &errLow, double &errUp, int option=0);  minos error for variable i, return false if Minos failed or not supported and the lower and upper errors are returned in errLow and errUp An extra flag specifies if only the lower (option=-1) or the upper (option=+1) error calculation is run ;  ; virtual bool GetVariableSettings (unsigned int ivar, ROOT::Fit::ParameterSettings &pars) const;  get variable settings in a variable object (like ROOT::Fit::ParamsSettings) ;  ; virtual double GlobalCC (unsigned int ivar) const;  return global correlation coefficient for variable i This is a number between zero and one which gives the correlation between the i-th parameter and that linear combination of all other parameters which is most strongly correlated with i. ;  ; virtual bool Hesse ();  perform a full calculation of the Hessian matrix for error calculation ;  ; virtual bool IsFixedVariable (unsigned int ivar) const;  query if an existing variable is fixed (i.e. ;  ; bool IsValidError () const;  return true if Minimizer has performed a detailed error validation (e.g. run Hesse for Minuit) ;  ; unsigned int MaxFunctionCalls () const;  max number of function calls ;  ; unsigned int MaxIterations () const;  max iterations ;  ; virtual int MinosStatus () const;  status code of Minos (to be re-implemented by the minimizers supporting Minos) ;  ",MatchSource.WIKI,doc/master/classTFumiliMinimizer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumiliMinimizer.html
https://root.cern/doc/master/classTFumiliMinimizer.html:5193,Availability,error,error,5193,"e matrix If the variable is fixed or const the values for that variables are zero. ;  ; virtual bool GetMinosError (unsigned int ivar, double &errLow, double &errUp, int option=0);  minos error for variable i, return false if Minos failed or not supported and the lower and upper errors are returned in errLow and errUp An extra flag specifies if only the lower (option=-1) or the upper (option=+1) error calculation is run ;  ; virtual bool GetVariableSettings (unsigned int ivar, ROOT::Fit::ParameterSettings &pars) const;  get variable settings in a variable object (like ROOT::Fit::ParamsSettings) ;  ; virtual double GlobalCC (unsigned int ivar) const;  return global correlation coefficient for variable i This is a number between zero and one which gives the correlation between the i-th parameter and that linear combination of all other parameters which is most strongly correlated with i. ;  ; virtual bool Hesse ();  perform a full calculation of the Hessian matrix for error calculation ;  ; virtual bool IsFixedVariable (unsigned int ivar) const;  query if an existing variable is fixed (i.e. ;  ; bool IsValidError () const;  return true if Minimizer has performed a detailed error validation (e.g. run Hesse for Minuit) ;  ; unsigned int MaxFunctionCalls () const;  max number of function calls ;  ; unsigned int MaxIterations () const;  max iterations ;  ; virtual int MinosStatus () const;  status code of Minos (to be re-implemented by the minimizers supporting Minos) ;  ; virtual unsigned int NIterations () const;  number of iterations to reach the minimum ;  ; Minimizer & operator= (Minimizer &&)=delete;  ; Minimizer & operator= (Minimizer const &)=delete;  ; virtual MinimizerOptions Options () const;  retrieve the minimizer options (implement derived class if needed) ;  ; double Precision () const;  precision of minimizer in the evaluation of the objective function ( a value <=0 corresponds to the let the minimizer choose its default one) ;  ; int PrintLevel () const;  ",MatchSource.WIKI,doc/master/classTFumiliMinimizer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumiliMinimizer.html
https://root.cern/doc/master/classTFumiliMinimizer.html:5402,Availability,error,error,5402," &errUp, int option=0);  minos error for variable i, return false if Minos failed or not supported and the lower and upper errors are returned in errLow and errUp An extra flag specifies if only the lower (option=-1) or the upper (option=+1) error calculation is run ;  ; virtual bool GetVariableSettings (unsigned int ivar, ROOT::Fit::ParameterSettings &pars) const;  get variable settings in a variable object (like ROOT::Fit::ParamsSettings) ;  ; virtual double GlobalCC (unsigned int ivar) const;  return global correlation coefficient for variable i This is a number between zero and one which gives the correlation between the i-th parameter and that linear combination of all other parameters which is most strongly correlated with i. ;  ; virtual bool Hesse ();  perform a full calculation of the Hessian matrix for error calculation ;  ; virtual bool IsFixedVariable (unsigned int ivar) const;  query if an existing variable is fixed (i.e. ;  ; bool IsValidError () const;  return true if Minimizer has performed a detailed error validation (e.g. run Hesse for Minuit) ;  ; unsigned int MaxFunctionCalls () const;  max number of function calls ;  ; unsigned int MaxIterations () const;  max iterations ;  ; virtual int MinosStatus () const;  status code of Minos (to be re-implemented by the minimizers supporting Minos) ;  ; virtual unsigned int NIterations () const;  number of iterations to reach the minimum ;  ; Minimizer & operator= (Minimizer &&)=delete;  ; Minimizer & operator= (Minimizer const &)=delete;  ; virtual MinimizerOptions Options () const;  retrieve the minimizer options (implement derived class if needed) ;  ; double Precision () const;  precision of minimizer in the evaluation of the objective function ( a value <=0 corresponds to the let the minimizer choose its default one) ;  ; int PrintLevel () const;  minimizer configuration parameters ;  ; virtual void PrintResults ();  return reference to the objective function virtual const ROOT::Math::IGenFunction & Fu",MatchSource.WIKI,doc/master/classTFumiliMinimizer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumiliMinimizer.html
https://root.cern/doc/master/classTFumiliMinimizer.html:7017,Availability,error,errors,7017,"nce to the objective function virtual const ROOT::Math::IGenFunction & Function() const = 0; ;  ; virtual bool ReleaseVariable (unsigned int ivar);  release an existing variable ;  ; virtual bool Scan (unsigned int ivar, unsigned int &nstep, double *x, double *y, double xmin=0, double xmax=0);  scan function minimum for variable i. ;  ; virtual bool SetCovariance (std::span< const double > cov, unsigned int nrow);  set initial covariance matrix ;  ; virtual bool SetCovarianceDiag (std::span< const double > d2, unsigned int n);  set initial second derivatives ;  ; void SetDefaultOptions ();  reset the default options (defined in MinimizerOptions) ;  ; void SetErrorDef (double up);  set scale for calculating the errors ;  ; void SetExtraOptions (const IOptions &extraOptions);  set only the extra options ;  ; virtual void SetHessianFunction (std::function< bool(std::span< const double >, double *)>);  set the function implementing Hessian computation (re-implemented by Minimizer using it) ;  ; virtual bool SetLowerLimitedVariable (unsigned int ivar, const std::string &name, double val, double step, double lower);  set a new lower limit variable (override if minimizer supports them ) ;  ; void SetMaxFunctionCalls (unsigned int maxfcn);  set maximum of function calls ;  ; void SetMaxIterations (unsigned int maxiter);  set maximum iterations (one iteration can have many function calls) ;  ; void SetOptions (const MinimizerOptions &opt);  set all options in one go ;  ; void SetPrecision (double prec);  set in the minimizer the objective function evaluation precision ( a value <=0 means the minimizer will choose its optimal value automatically, i.e. ;  ; void SetPrintLevel (int level);  set print level ;  ; void SetStrategy (int strategyLevel);  set the strategy ;  ; void SetTolerance (double tol);  set the tolerance ;  ; virtual bool SetUpperLimitedVariable (unsigned int ivar, const std::string &name, double val, double step, double upper);  set a new upper limit variable ",MatchSource.WIKI,doc/master/classTFumiliMinimizer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumiliMinimizer.html
https://root.cern/doc/master/classTFumiliMinimizer.html:8128,Availability,toler,tolerance,8128,">);  set the function implementing Hessian computation (re-implemented by Minimizer using it) ;  ; virtual bool SetLowerLimitedVariable (unsigned int ivar, const std::string &name, double val, double step, double lower);  set a new lower limit variable (override if minimizer supports them ) ;  ; void SetMaxFunctionCalls (unsigned int maxfcn);  set maximum of function calls ;  ; void SetMaxIterations (unsigned int maxiter);  set maximum iterations (one iteration can have many function calls) ;  ; void SetOptions (const MinimizerOptions &opt);  set all options in one go ;  ; void SetPrecision (double prec);  set in the minimizer the objective function evaluation precision ( a value <=0 means the minimizer will choose its optimal value automatically, i.e. ;  ; void SetPrintLevel (int level);  set print level ;  ; void SetStrategy (int strategyLevel);  set the strategy ;  ; void SetTolerance (double tol);  set the tolerance ;  ; virtual bool SetUpperLimitedVariable (unsigned int ivar, const std::string &name, double val, double step, double upper);  set a new upper limit variable (override if minimizer supports them ) ;  ; void SetValidError (bool on);  flag to check if minimizer needs to perform accurate error analysis (e.g. run Hesse for Minuit) ;  ; virtual bool SetVariableInitialRange (unsigned int, double, double);  set the initial range of an existing variable ;  ; virtual bool SetVariableLimits (unsigned int ivar, double lower, double upper);  set the limits of an already existing variable ;  ; virtual bool SetVariableLowerLimit (unsigned int ivar, double lower);  set the lower-limit of an already existing variable ;  ; template<class VariableIterator > ; int SetVariables (const VariableIterator &begin, const VariableIterator &end);  add variables . Return number of variables successfully added ;  ; virtual bool SetVariableStepSize (unsigned int ivar, double value);  set the step size of an already existing variable ;  ; virtual bool SetVariableUpperLimit (unsigne",MatchSource.WIKI,doc/master/classTFumiliMinimizer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumiliMinimizer.html
https://root.cern/doc/master/classTFumiliMinimizer.html:8425,Availability,error,error,8425,">);  set the function implementing Hessian computation (re-implemented by Minimizer using it) ;  ; virtual bool SetLowerLimitedVariable (unsigned int ivar, const std::string &name, double val, double step, double lower);  set a new lower limit variable (override if minimizer supports them ) ;  ; void SetMaxFunctionCalls (unsigned int maxfcn);  set maximum of function calls ;  ; void SetMaxIterations (unsigned int maxiter);  set maximum iterations (one iteration can have many function calls) ;  ; void SetOptions (const MinimizerOptions &opt);  set all options in one go ;  ; void SetPrecision (double prec);  set in the minimizer the objective function evaluation precision ( a value <=0 means the minimizer will choose its optimal value automatically, i.e. ;  ; void SetPrintLevel (int level);  set print level ;  ; void SetStrategy (int strategyLevel);  set the strategy ;  ; void SetTolerance (double tol);  set the tolerance ;  ; virtual bool SetUpperLimitedVariable (unsigned int ivar, const std::string &name, double val, double step, double upper);  set a new upper limit variable (override if minimizer supports them ) ;  ; void SetValidError (bool on);  flag to check if minimizer needs to perform accurate error analysis (e.g. run Hesse for Minuit) ;  ; virtual bool SetVariableInitialRange (unsigned int, double, double);  set the initial range of an existing variable ;  ; virtual bool SetVariableLimits (unsigned int ivar, double lower, double upper);  set the limits of an already existing variable ;  ; virtual bool SetVariableLowerLimit (unsigned int ivar, double lower);  set the lower-limit of an already existing variable ;  ; template<class VariableIterator > ; int SetVariables (const VariableIterator &begin, const VariableIterator &end);  add variables . Return number of variables successfully added ;  ; virtual bool SetVariableStepSize (unsigned int ivar, double value);  set the step size of an already existing variable ;  ; virtual bool SetVariableUpperLimit (unsigne",MatchSource.WIKI,doc/master/classTFumiliMinimizer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumiliMinimizer.html
https://root.cern/doc/master/classTFumiliMinimizer.html:9581,Availability,toler,tolerance,9581,"uit) ;  ; virtual bool SetVariableInitialRange (unsigned int, double, double);  set the initial range of an existing variable ;  ; virtual bool SetVariableLimits (unsigned int ivar, double lower, double upper);  set the limits of an already existing variable ;  ; virtual bool SetVariableLowerLimit (unsigned int ivar, double lower);  set the lower-limit of an already existing variable ;  ; template<class VariableIterator > ; int SetVariables (const VariableIterator &begin, const VariableIterator &end);  add variables . Return number of variables successfully added ;  ; virtual bool SetVariableStepSize (unsigned int ivar, double value);  set the step size of an already existing variable ;  ; virtual bool SetVariableUpperLimit (unsigned int ivar, double upper);  set the upper-limit of an already existing variable ;  ; virtual bool SetVariableValues (const double *x);  set the values of all existing variables (array must be dimensioned to the size of the existing parameters) ;  ; int Status () const;  status code of minimizer ;  ; int Strategy () const;  strategy ;  ; double Tolerance () const;  absolute tolerance ;  ; virtual int VariableIndex (const std::string &name) const;  get index of variable given a variable given a name return -1 if variable is not found ;  ; virtual std::string VariableName (unsigned int ivar) const;  get name of variables (override if minimizer support storing of variable names) return an empty string if variable is not found ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Static Protected Member Functions; static double EvaluateFCN (const double *x, double *g);  implementation of FCN for Fumili when user provided gradient is used ;  ; static void Fcn (int &, double *, double &f, double *, int);  implementation of FCN for Fumili ;  . Private Attributes; std::vector< double > fCovar;  ; unsigned int fDi",MatchSource.WIKI,doc/master/classTFumiliMinimizer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumiliMinimizer.html
https://root.cern/doc/master/classTFumiliMinimizer.html:11045,Availability,error,errors,11045,"unctions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Static Protected Member Functions; static double EvaluateFCN (const double *x, double *g);  implementation of FCN for Fumili when user provided gradient is used ;  ; static void Fcn (int &, double *, double &f, double *, int);  implementation of FCN for Fumili ;  . Private Attributes; std::vector< double > fCovar;  ; unsigned int fDim;  ; double fEdm;  ; std::vector< double > fErrors;  ; TFumili * fFumili;  ; double fMinVal;  ; unsigned int fNFree;  ; std::vector< double > fParams;  . Static Private Attributes; static TFumili * fgFumili = nullptr;  ; static ROOT::Math::FitMethodFunction * fgFunc = nullptr;  ; static ROOT::Math::FitMethodGradFunction * fgGradFunc = nullptr;  . Additional Inherited Members;  Protected Attributes inherited from ROOT::Math::Minimizer; MinimizerOptions fOptions;  minimizer options ;  ; int fStatus = -1;  status of minimizer ;  ; bool fValidError = false;  flag to control if errors have been validated (Hesse has been run in case of Minuit) ;  . #include <TFumiliMinimizer.h>. Inheritance diagram for TFumiliMinimizer:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TFumiliMinimizer(). TFumiliMinimizer::TFumiliMinimizer ; (; int ; dummy = 0). Default constructor (an argument is needed by plug-in manager) ; Definition at line 137 of file TFumiliMinimizer.cxx. ◆ ~TFumiliMinimizer(). TFumiliMinimizer::~TFumiliMinimizer ; (; ). override . Destructor (no operations) ; Definition at line 160 of file TFumiliMinimizer.cxx. Member Function Documentation. ◆ Class(). static TClass * TFumiliMinimizer::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TFumiliMinimizer::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constex",MatchSource.WIKI,doc/master/classTFumiliMinimizer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumiliMinimizer.html
https://root.cern/doc/master/classTFumiliMinimizer.html:12379,Availability,error,errors,12379,"mizer(). TFumiliMinimizer::TFumiliMinimizer ; (; int ; dummy = 0). Default constructor (an argument is needed by plug-in manager) ; Definition at line 137 of file TFumiliMinimizer.cxx. ◆ ~TFumiliMinimizer(). TFumiliMinimizer::~TFumiliMinimizer ; (; ). override . Destructor (no operations) ; Definition at line 160 of file TFumiliMinimizer.cxx. Member Function Documentation. ◆ Class(). static TClass * TFumiliMinimizer::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TFumiliMinimizer::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TFumiliMinimizer::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 162 of file TFumiliMinimizer.h. ◆ CovMatrix(). double TFumiliMinimizer::CovMatrix ; (; unsigned int ; i, . unsigned int ; j . ); const. inlineoverridevirtual . return covariance matrices elements if the variable is fixed the matrix is zero The ordering of the variables is the same as in errors ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 116 of file TFumiliMinimizer.h. ◆ CovMatrixStatus(). int TFumiliMinimizer::CovMatrixStatus ; (; ); const. inlineoverridevirtual . return status of covariance matrix using Minuit convention {0 not calculated 1 approximated 2 made pos def , 3 accurate} Minimizer who implements covariance matrix calculation will re-implement the method ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 123 of file TFumiliMinimizer.h. ◆ DeclFileName(). static const char * TFumiliMinimizer::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 162 of file TFumiliMinimizer.h. ◆ Edm(). double TFumiliMinimizer::Edm ; (; ); const. inlineoverridevirtual . return expected distance reached from the minimum ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 87 of file TFumiliMinimizer.h. ◆ Errors(). const double * TFumiliM",MatchSource.WIKI,doc/master/classTFumiliMinimizer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumiliMinimizer.html
https://root.cern/doc/master/classTFumiliMinimizer.html:13403,Availability,error,errors,13403,"Definition at line 116 of file TFumiliMinimizer.h. ◆ CovMatrixStatus(). int TFumiliMinimizer::CovMatrixStatus ; (; ); const. inlineoverridevirtual . return status of covariance matrix using Minuit convention {0 not calculated 1 approximated 2 made pos def , 3 accurate} Minimizer who implements covariance matrix calculation will re-implement the method ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 123 of file TFumiliMinimizer.h. ◆ DeclFileName(). static const char * TFumiliMinimizer::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 162 of file TFumiliMinimizer.h. ◆ Edm(). double TFumiliMinimizer::Edm ; (; ); const. inlineoverridevirtual . return expected distance reached from the minimum ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 87 of file TFumiliMinimizer.h. ◆ Errors(). const double * TFumiliMinimizer::Errors ; (; ); const. inlineoverridevirtual . return errors at the minimum ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 110 of file TFumiliMinimizer.h. ◆ EvaluateFCN(). double TFumiliMinimizer::EvaluateFCN ; (; const double * ; x, . double * ; g . ). staticprotected . implementation of FCN for Fumili when user provided gradient is used ; static function implementing the evaluation of the FCN (it uses static instance fgFumili) ; Definition at line 240 of file TFumiliMinimizer.cxx. ◆ Fcn(). void TFumiliMinimizer::Fcn ; (; int & ; , . double * ; g, . double & ; f, . double * ; x, . int ;  . ). staticprotected . implementation of FCN for Fumili ; Definition at line 221 of file TFumiliMinimizer.cxx. ◆ IsA(). virtual TClass * TFumiliMinimizer::IsA ; (; ); const. inlinevirtual . ReturnsTClass describing current object ; Definition at line 162 of file TFumiliMinimizer.h. ◆ MinGradient(). const double * TFumiliMinimizer::MinGradient ; (; ); const. inlineoverridevirtual . return pointer to gradient values at the minimum ; Reimplemented from ROOT::Math::Mini",MatchSource.WIKI,doc/master/classTFumiliMinimizer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumiliMinimizer.html
https://root.cern/doc/master/classTFumiliMinimizer.html:15789,Availability,error,error,15789,"ents ROOT::Math::Minimizer.; Definition at line 84 of file TFumiliMinimizer.h. ◆ NCalls(). unsigned int TFumiliMinimizer::NCalls ; (; ); const. inlineoverridevirtual . number of function calls to reach the minimum ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 96 of file TFumiliMinimizer.h. ◆ NDim(). unsigned int TFumiliMinimizer::NDim ; (; ); const. inlineoverridevirtual . this is <= Function().NDim() which is the total number of variables (free+ constrained ones) ; Implements ROOT::Math::Minimizer.; Definition at line 100 of file TFumiliMinimizer.h. ◆ NFree(). unsigned int TFumiliMinimizer::NFree ; (; ); const. inlineoverridevirtual . number of free variables (real dimension of the problem) this is <= Function().NDim() which is the total ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 104 of file TFumiliMinimizer.h. ◆ ProvidesError(). bool TFumiliMinimizer::ProvidesError ; (; ); const. inlineoverridevirtual . minimizer provides error and error matrix ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 107 of file TFumiliMinimizer.h. ◆ SetFixedVariable(). bool TFumiliMinimizer::SetFixedVariable ; (; unsigned int ; ivar, . const std::string & ; name, . double ; val . ). overridevirtual . set fixed variable (override if minimizer supports them ) ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 460 of file TFumiliMinimizer.cxx. ◆ SetFunction(). void TFumiliMinimizer::SetFunction ; (; const ROOT::Math::IMultiGenFunction & ; func). overridevirtual . set the function to minimize ; Implements ROOT::Math::Minimizer.; Definition at line 168 of file TFumiliMinimizer.cxx. ◆ SetLimitedVariable(). bool TFumiliMinimizer::SetLimitedVariable ; (; unsigned int ; ivar, . const std::string & ; name, . double ; val, . double ; step, . double ; lower, . double ; upper . ). overridevirtual . set upper/lower limited variable (override if minimizer supports them ) ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 43",MatchSource.WIKI,doc/master/classTFumiliMinimizer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumiliMinimizer.html
https://root.cern/doc/master/classTFumiliMinimizer.html:15799,Availability,error,error,15799,"ents ROOT::Math::Minimizer.; Definition at line 84 of file TFumiliMinimizer.h. ◆ NCalls(). unsigned int TFumiliMinimizer::NCalls ; (; ); const. inlineoverridevirtual . number of function calls to reach the minimum ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 96 of file TFumiliMinimizer.h. ◆ NDim(). unsigned int TFumiliMinimizer::NDim ; (; ); const. inlineoverridevirtual . this is <= Function().NDim() which is the total number of variables (free+ constrained ones) ; Implements ROOT::Math::Minimizer.; Definition at line 100 of file TFumiliMinimizer.h. ◆ NFree(). unsigned int TFumiliMinimizer::NFree ; (; ); const. inlineoverridevirtual . number of free variables (real dimension of the problem) this is <= Function().NDim() which is the total ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 104 of file TFumiliMinimizer.h. ◆ ProvidesError(). bool TFumiliMinimizer::ProvidesError ; (; ); const. inlineoverridevirtual . minimizer provides error and error matrix ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 107 of file TFumiliMinimizer.h. ◆ SetFixedVariable(). bool TFumiliMinimizer::SetFixedVariable ; (; unsigned int ; ivar, . const std::string & ; name, . double ; val . ). overridevirtual . set fixed variable (override if minimizer supports them ) ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 460 of file TFumiliMinimizer.cxx. ◆ SetFunction(). void TFumiliMinimizer::SetFunction ; (; const ROOT::Math::IMultiGenFunction & ; func). overridevirtual . set the function to minimize ; Implements ROOT::Math::Minimizer.; Definition at line 168 of file TFumiliMinimizer.cxx. ◆ SetLimitedVariable(). bool TFumiliMinimizer::SetLimitedVariable ; (; unsigned int ; ivar, . const std::string & ; name, . double ; val, . double ; step, . double ; lower, . double ; upper . ). overridevirtual . set upper/lower limited variable (override if minimizer supports them ) ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 43",MatchSource.WIKI,doc/master/classTFumiliMinimizer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumiliMinimizer.html
https://root.cern/doc/master/classTFumiliMinimizer.html:6223,Deployability,configurat,configuration,6223,"inear combination of all other parameters which is most strongly correlated with i. ;  ; virtual bool Hesse ();  perform a full calculation of the Hessian matrix for error calculation ;  ; virtual bool IsFixedVariable (unsigned int ivar) const;  query if an existing variable is fixed (i.e. ;  ; bool IsValidError () const;  return true if Minimizer has performed a detailed error validation (e.g. run Hesse for Minuit) ;  ; unsigned int MaxFunctionCalls () const;  max number of function calls ;  ; unsigned int MaxIterations () const;  max iterations ;  ; virtual int MinosStatus () const;  status code of Minos (to be re-implemented by the minimizers supporting Minos) ;  ; virtual unsigned int NIterations () const;  number of iterations to reach the minimum ;  ; Minimizer & operator= (Minimizer &&)=delete;  ; Minimizer & operator= (Minimizer const &)=delete;  ; virtual MinimizerOptions Options () const;  retrieve the minimizer options (implement derived class if needed) ;  ; double Precision () const;  precision of minimizer in the evaluation of the objective function ( a value <=0 corresponds to the let the minimizer choose its default one) ;  ; int PrintLevel () const;  minimizer configuration parameters ;  ; virtual void PrintResults ();  return reference to the objective function virtual const ROOT::Math::IGenFunction & Function() const = 0; ;  ; virtual bool ReleaseVariable (unsigned int ivar);  release an existing variable ;  ; virtual bool Scan (unsigned int ivar, unsigned int &nstep, double *x, double *y, double xmin=0, double xmax=0);  scan function minimum for variable i. ;  ; virtual bool SetCovariance (std::span< const double > cov, unsigned int nrow);  set initial covariance matrix ;  ; virtual bool SetCovarianceDiag (std::span< const double > d2, unsigned int n);  set initial second derivatives ;  ; void SetDefaultOptions ();  reset the default options (defined in MinimizerOptions) ;  ; void SetErrorDef (double up);  set scale for calculating the errors ;  ",MatchSource.WIKI,doc/master/classTFumiliMinimizer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumiliMinimizer.html
https://root.cern/doc/master/classTFumiliMinimizer.html:6446,Deployability,release,release,6446,"inear combination of all other parameters which is most strongly correlated with i. ;  ; virtual bool Hesse ();  perform a full calculation of the Hessian matrix for error calculation ;  ; virtual bool IsFixedVariable (unsigned int ivar) const;  query if an existing variable is fixed (i.e. ;  ; bool IsValidError () const;  return true if Minimizer has performed a detailed error validation (e.g. run Hesse for Minuit) ;  ; unsigned int MaxFunctionCalls () const;  max number of function calls ;  ; unsigned int MaxIterations () const;  max iterations ;  ; virtual int MinosStatus () const;  status code of Minos (to be re-implemented by the minimizers supporting Minos) ;  ; virtual unsigned int NIterations () const;  number of iterations to reach the minimum ;  ; Minimizer & operator= (Minimizer &&)=delete;  ; Minimizer & operator= (Minimizer const &)=delete;  ; virtual MinimizerOptions Options () const;  retrieve the minimizer options (implement derived class if needed) ;  ; double Precision () const;  precision of minimizer in the evaluation of the objective function ( a value <=0 corresponds to the let the minimizer choose its default one) ;  ; int PrintLevel () const;  minimizer configuration parameters ;  ; virtual void PrintResults ();  return reference to the objective function virtual const ROOT::Math::IGenFunction & Function() const = 0; ;  ; virtual bool ReleaseVariable (unsigned int ivar);  release an existing variable ;  ; virtual bool Scan (unsigned int ivar, unsigned int &nstep, double *x, double *y, double xmin=0, double xmax=0);  scan function minimum for variable i. ;  ; virtual bool SetCovariance (std::span< const double > cov, unsigned int nrow);  set initial covariance matrix ;  ; virtual bool SetCovarianceDiag (std::span< const double > d2, unsigned int n);  set initial second derivatives ;  ; void SetDefaultOptions ();  reset the default options (defined in MinimizerOptions) ;  ; void SetErrorDef (double up);  set scale for calculating the errors ;  ",MatchSource.WIKI,doc/master/classTFumiliMinimizer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumiliMinimizer.html
https://root.cern/doc/master/classTFumiliMinimizer.html:577,Modifiability,plug-in,plug-in,577,"ing...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Static Protected Member Functions |; Private Attributes |; Static Private Attributes |; List of all members ; TFumiliMinimizer Class Reference. ; TFumiliMinimizer class: minimizer implementation based on TFumili. ; Definition at line 43 of file TFumiliMinimizer.h. Public Member Functions;  TFumiliMinimizer (int dummy=0);  Default constructor (an argument is needed by plug-in manager) ;  ;  ~TFumiliMinimizer () override;  Destructor (no operations) ;  ; double CovMatrix (unsigned int i, unsigned int j) const override;  return covariance matrices elements if the variable is fixed the matrix is zero The ordering of the variables is the same as in errors ;  ; int CovMatrixStatus () const override;  return status of covariance matrix using Minuit convention {0 not calculated 1 approximated 2 made pos def , 3 accurate} Minimizer who implements covariance matrix calculation will re-implement the method ;  ; double Edm () const override;  return expected distance reached from the minimum ;  ; const double * Errors () const override;  return errors at the minimum ;  ; virtual TClass * IsA () const;  ; const double * MinGradient () const override;  return pointer to gradient values at the minimum ;  ; bool Minimize () override;  method to perform the minimization ;  ; double MinValue () const override;  return minimum function value ;  ; unsigned int NCalls () const override;  number of function calls to reach the minimum ;  ; unsigned int NDim () const override;  this is <= Function().NDim() which is the total number of variables (free+ constrained ones) ;  ; unsigned int NFree () const override;  number of free variables (real dimension of the problem) this is <= Function().NDim() which is the total ;  ; bool ProvidesError () const override;  minimizer provides error and error matrix ;  ; bool SetFixedVariable (unsigned int, const std::string &, double) overr",MatchSource.WIKI,doc/master/classTFumiliMinimizer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumiliMinimizer.html
https://root.cern/doc/master/classTFumiliMinimizer.html:774,Modifiability,variab,variable,774,"ing...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Static Protected Member Functions |; Private Attributes |; Static Private Attributes |; List of all members ; TFumiliMinimizer Class Reference. ; TFumiliMinimizer class: minimizer implementation based on TFumili. ; Definition at line 43 of file TFumiliMinimizer.h. Public Member Functions;  TFumiliMinimizer (int dummy=0);  Default constructor (an argument is needed by plug-in manager) ;  ;  ~TFumiliMinimizer () override;  Destructor (no operations) ;  ; double CovMatrix (unsigned int i, unsigned int j) const override;  return covariance matrices elements if the variable is fixed the matrix is zero The ordering of the variables is the same as in errors ;  ; int CovMatrixStatus () const override;  return status of covariance matrix using Minuit convention {0 not calculated 1 approximated 2 made pos def , 3 accurate} Minimizer who implements covariance matrix calculation will re-implement the method ;  ; double Edm () const override;  return expected distance reached from the minimum ;  ; const double * Errors () const override;  return errors at the minimum ;  ; virtual TClass * IsA () const;  ; const double * MinGradient () const override;  return pointer to gradient values at the minimum ;  ; bool Minimize () override;  method to perform the minimization ;  ; double MinValue () const override;  return minimum function value ;  ; unsigned int NCalls () const override;  number of function calls to reach the minimum ;  ; unsigned int NDim () const override;  this is <= Function().NDim() which is the total number of variables (free+ constrained ones) ;  ; unsigned int NFree () const override;  number of free variables (real dimension of the problem) this is <= Function().NDim() which is the total ;  ; bool ProvidesError () const override;  minimizer provides error and error matrix ;  ; bool SetFixedVariable (unsigned int, const std::string &, double) overr",MatchSource.WIKI,doc/master/classTFumiliMinimizer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumiliMinimizer.html
https://root.cern/doc/master/classTFumiliMinimizer.html:831,Modifiability,variab,variables,831,"ing...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Static Protected Member Functions |; Private Attributes |; Static Private Attributes |; List of all members ; TFumiliMinimizer Class Reference. ; TFumiliMinimizer class: minimizer implementation based on TFumili. ; Definition at line 43 of file TFumiliMinimizer.h. Public Member Functions;  TFumiliMinimizer (int dummy=0);  Default constructor (an argument is needed by plug-in manager) ;  ;  ~TFumiliMinimizer () override;  Destructor (no operations) ;  ; double CovMatrix (unsigned int i, unsigned int j) const override;  return covariance matrices elements if the variable is fixed the matrix is zero The ordering of the variables is the same as in errors ;  ; int CovMatrixStatus () const override;  return status of covariance matrix using Minuit convention {0 not calculated 1 approximated 2 made pos def , 3 accurate} Minimizer who implements covariance matrix calculation will re-implement the method ;  ; double Edm () const override;  return expected distance reached from the minimum ;  ; const double * Errors () const override;  return errors at the minimum ;  ; virtual TClass * IsA () const;  ; const double * MinGradient () const override;  return pointer to gradient values at the minimum ;  ; bool Minimize () override;  method to perform the minimization ;  ; double MinValue () const override;  return minimum function value ;  ; unsigned int NCalls () const override;  number of function calls to reach the minimum ;  ; unsigned int NDim () const override;  this is <= Function().NDim() which is the total number of variables (free+ constrained ones) ;  ; unsigned int NFree () const override;  number of free variables (real dimension of the problem) this is <= Function().NDim() which is the total ;  ; bool ProvidesError () const override;  minimizer provides error and error matrix ;  ; bool SetFixedVariable (unsigned int, const std::string &, double) overr",MatchSource.WIKI,doc/master/classTFumiliMinimizer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumiliMinimizer.html
https://root.cern/doc/master/classTFumiliMinimizer.html:1744,Modifiability,variab,variables,1744," zero The ordering of the variables is the same as in errors ;  ; int CovMatrixStatus () const override;  return status of covariance matrix using Minuit convention {0 not calculated 1 approximated 2 made pos def , 3 accurate} Minimizer who implements covariance matrix calculation will re-implement the method ;  ; double Edm () const override;  return expected distance reached from the minimum ;  ; const double * Errors () const override;  return errors at the minimum ;  ; virtual TClass * IsA () const;  ; const double * MinGradient () const override;  return pointer to gradient values at the minimum ;  ; bool Minimize () override;  method to perform the minimization ;  ; double MinValue () const override;  return minimum function value ;  ; unsigned int NCalls () const override;  number of function calls to reach the minimum ;  ; unsigned int NDim () const override;  this is <= Function().NDim() which is the total number of variables (free+ constrained ones) ;  ; unsigned int NFree () const override;  number of free variables (real dimension of the problem) this is <= Function().NDim() which is the total ;  ; bool ProvidesError () const override;  minimizer provides error and error matrix ;  ; bool SetFixedVariable (unsigned int, const std::string &, double) override;  set fixed variable (override if minimizer supports them ) ;  ; void SetFunction (const ROOT::Math::IMultiGenFunction &func) override;  set the function to minimize ;  ; bool SetLimitedVariable (unsigned int ivar, const std::string &name, double val, double step, double, double) override;  set upper/lower limited variable (override if minimizer supports them ) ;  ; bool SetVariable (unsigned int ivar, const std::string &name, double val, double step) override;  set free variable ;  ; bool SetVariableValue (unsigned int ivar, double val) override;  set the value of an existing variable ;  ; virtual void Streamer (TBuffer &);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; const doub",MatchSource.WIKI,doc/master/classTFumiliMinimizer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumiliMinimizer.html
https://root.cern/doc/master/classTFumiliMinimizer.html:1838,Modifiability,variab,variables,1838," zero The ordering of the variables is the same as in errors ;  ; int CovMatrixStatus () const override;  return status of covariance matrix using Minuit convention {0 not calculated 1 approximated 2 made pos def , 3 accurate} Minimizer who implements covariance matrix calculation will re-implement the method ;  ; double Edm () const override;  return expected distance reached from the minimum ;  ; const double * Errors () const override;  return errors at the minimum ;  ; virtual TClass * IsA () const;  ; const double * MinGradient () const override;  return pointer to gradient values at the minimum ;  ; bool Minimize () override;  method to perform the minimization ;  ; double MinValue () const override;  return minimum function value ;  ; unsigned int NCalls () const override;  number of function calls to reach the minimum ;  ; unsigned int NDim () const override;  this is <= Function().NDim() which is the total number of variables (free+ constrained ones) ;  ; unsigned int NFree () const override;  number of free variables (real dimension of the problem) this is <= Function().NDim() which is the total ;  ; bool ProvidesError () const override;  minimizer provides error and error matrix ;  ; bool SetFixedVariable (unsigned int, const std::string &, double) override;  set fixed variable (override if minimizer supports them ) ;  ; void SetFunction (const ROOT::Math::IMultiGenFunction &func) override;  set the function to minimize ;  ; bool SetLimitedVariable (unsigned int ivar, const std::string &name, double val, double step, double, double) override;  set upper/lower limited variable (override if minimizer supports them ) ;  ; bool SetVariable (unsigned int ivar, const std::string &name, double val, double step) override;  set free variable ;  ; bool SetVariableValue (unsigned int ivar, double val) override;  set the value of an existing variable ;  ; virtual void Streamer (TBuffer &);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; const doub",MatchSource.WIKI,doc/master/classTFumiliMinimizer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumiliMinimizer.html
https://root.cern/doc/master/classTFumiliMinimizer.html:2106,Modifiability,variab,variable,2106,"ide;  method to perform the minimization ;  ; double MinValue () const override;  return minimum function value ;  ; unsigned int NCalls () const override;  number of function calls to reach the minimum ;  ; unsigned int NDim () const override;  this is <= Function().NDim() which is the total number of variables (free+ constrained ones) ;  ; unsigned int NFree () const override;  number of free variables (real dimension of the problem) this is <= Function().NDim() which is the total ;  ; bool ProvidesError () const override;  minimizer provides error and error matrix ;  ; bool SetFixedVariable (unsigned int, const std::string &, double) override;  set fixed variable (override if minimizer supports them ) ;  ; void SetFunction (const ROOT::Math::IMultiGenFunction &func) override;  set the function to minimize ;  ; bool SetLimitedVariable (unsigned int ivar, const std::string &name, double val, double step, double, double) override;  set upper/lower limited variable (override if minimizer supports them ) ;  ; bool SetVariable (unsigned int ivar, const std::string &name, double val, double step) override;  set free variable ;  ; bool SetVariableValue (unsigned int ivar, double val) override;  set the value of an existing variable ;  ; virtual void Streamer (TBuffer &);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; const double * X () const override;  return pointer to X values at the minimum ;  ;  Public Member Functions inherited from ROOT::Math::Minimizer;  Minimizer ();  Default constructor. ;  ;  Minimizer (Minimizer &&)=delete;  ;  Minimizer (Minimizer const &)=delete;  ; virtual ~Minimizer ();  Destructor (no operations). ;  ; virtual void Clear ();  reset for consecutive minimization - implement if needed ;  ; virtual bool Contour (unsigned int ivar, unsigned int jvar, unsigned int &npoints, double *xi, double *xj);  find the contour points (xi, xj) of the function for parameter ivar and jvar around the minimum The contour will be find for ",MatchSource.WIKI,doc/master/classTFumiliMinimizer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumiliMinimizer.html
https://root.cern/doc/master/classTFumiliMinimizer.html:2410,Modifiability,variab,variable,2410,"ide;  method to perform the minimization ;  ; double MinValue () const override;  return minimum function value ;  ; unsigned int NCalls () const override;  number of function calls to reach the minimum ;  ; unsigned int NDim () const override;  this is <= Function().NDim() which is the total number of variables (free+ constrained ones) ;  ; unsigned int NFree () const override;  number of free variables (real dimension of the problem) this is <= Function().NDim() which is the total ;  ; bool ProvidesError () const override;  minimizer provides error and error matrix ;  ; bool SetFixedVariable (unsigned int, const std::string &, double) override;  set fixed variable (override if minimizer supports them ) ;  ; void SetFunction (const ROOT::Math::IMultiGenFunction &func) override;  set the function to minimize ;  ; bool SetLimitedVariable (unsigned int ivar, const std::string &name, double val, double step, double, double) override;  set upper/lower limited variable (override if minimizer supports them ) ;  ; bool SetVariable (unsigned int ivar, const std::string &name, double val, double step) override;  set free variable ;  ; bool SetVariableValue (unsigned int ivar, double val) override;  set the value of an existing variable ;  ; virtual void Streamer (TBuffer &);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; const double * X () const override;  return pointer to X values at the minimum ;  ;  Public Member Functions inherited from ROOT::Math::Minimizer;  Minimizer ();  Default constructor. ;  ;  Minimizer (Minimizer &&)=delete;  ;  Minimizer (Minimizer const &)=delete;  ; virtual ~Minimizer ();  Destructor (no operations). ;  ; virtual void Clear ();  reset for consecutive minimization - implement if needed ;  ; virtual bool Contour (unsigned int ivar, unsigned int jvar, unsigned int &npoints, double *xi, double *xj);  find the contour points (xi, xj) of the function for parameter ivar and jvar around the minimum The contour will be find for ",MatchSource.WIKI,doc/master/classTFumiliMinimizer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumiliMinimizer.html
https://root.cern/doc/master/classTFumiliMinimizer.html:2570,Modifiability,variab,variable,2570,"ide;  method to perform the minimization ;  ; double MinValue () const override;  return minimum function value ;  ; unsigned int NCalls () const override;  number of function calls to reach the minimum ;  ; unsigned int NDim () const override;  this is <= Function().NDim() which is the total number of variables (free+ constrained ones) ;  ; unsigned int NFree () const override;  number of free variables (real dimension of the problem) this is <= Function().NDim() which is the total ;  ; bool ProvidesError () const override;  minimizer provides error and error matrix ;  ; bool SetFixedVariable (unsigned int, const std::string &, double) override;  set fixed variable (override if minimizer supports them ) ;  ; void SetFunction (const ROOT::Math::IMultiGenFunction &func) override;  set the function to minimize ;  ; bool SetLimitedVariable (unsigned int ivar, const std::string &name, double val, double step, double, double) override;  set upper/lower limited variable (override if minimizer supports them ) ;  ; bool SetVariable (unsigned int ivar, const std::string &name, double val, double step) override;  set free variable ;  ; bool SetVariableValue (unsigned int ivar, double val) override;  set the value of an existing variable ;  ; virtual void Streamer (TBuffer &);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; const double * X () const override;  return pointer to X values at the minimum ;  ;  Public Member Functions inherited from ROOT::Math::Minimizer;  Minimizer ();  Default constructor. ;  ;  Minimizer (Minimizer &&)=delete;  ;  Minimizer (Minimizer const &)=delete;  ; virtual ~Minimizer ();  Destructor (no operations). ;  ; virtual void Clear ();  reset for consecutive minimization - implement if needed ;  ; virtual bool Contour (unsigned int ivar, unsigned int jvar, unsigned int &npoints, double *xi, double *xj);  find the contour points (xi, xj) of the function for parameter ivar and jvar around the minimum The contour will be find for ",MatchSource.WIKI,doc/master/classTFumiliMinimizer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumiliMinimizer.html
https://root.cern/doc/master/classTFumiliMinimizer.html:2678,Modifiability,variab,variable,2678,"ide;  method to perform the minimization ;  ; double MinValue () const override;  return minimum function value ;  ; unsigned int NCalls () const override;  number of function calls to reach the minimum ;  ; unsigned int NDim () const override;  this is <= Function().NDim() which is the total number of variables (free+ constrained ones) ;  ; unsigned int NFree () const override;  number of free variables (real dimension of the problem) this is <= Function().NDim() which is the total ;  ; bool ProvidesError () const override;  minimizer provides error and error matrix ;  ; bool SetFixedVariable (unsigned int, const std::string &, double) override;  set fixed variable (override if minimizer supports them ) ;  ; void SetFunction (const ROOT::Math::IMultiGenFunction &func) override;  set the function to minimize ;  ; bool SetLimitedVariable (unsigned int ivar, const std::string &name, double val, double step, double, double) override;  set upper/lower limited variable (override if minimizer supports them ) ;  ; bool SetVariable (unsigned int ivar, const std::string &name, double val, double step) override;  set free variable ;  ; bool SetVariableValue (unsigned int ivar, double val) override;  set the value of an existing variable ;  ; virtual void Streamer (TBuffer &);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; const double * X () const override;  return pointer to X values at the minimum ;  ;  Public Member Functions inherited from ROOT::Math::Minimizer;  Minimizer ();  Default constructor. ;  ;  Minimizer (Minimizer &&)=delete;  ;  Minimizer (Minimizer const &)=delete;  ; virtual ~Minimizer ();  Destructor (no operations). ;  ; virtual void Clear ();  reset for consecutive minimization - implement if needed ;  ; virtual bool Contour (unsigned int ivar, unsigned int jvar, unsigned int &npoints, double *xi, double *xj);  find the contour points (xi, xj) of the function for parameter ivar and jvar around the minimum The contour will be find for ",MatchSource.WIKI,doc/master/classTFumiliMinimizer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumiliMinimizer.html
https://root.cern/doc/master/classTFumiliMinimizer.html:2904,Modifiability,inherit,inherited,2904,"ide;  method to perform the minimization ;  ; double MinValue () const override;  return minimum function value ;  ; unsigned int NCalls () const override;  number of function calls to reach the minimum ;  ; unsigned int NDim () const override;  this is <= Function().NDim() which is the total number of variables (free+ constrained ones) ;  ; unsigned int NFree () const override;  number of free variables (real dimension of the problem) this is <= Function().NDim() which is the total ;  ; bool ProvidesError () const override;  minimizer provides error and error matrix ;  ; bool SetFixedVariable (unsigned int, const std::string &, double) override;  set fixed variable (override if minimizer supports them ) ;  ; void SetFunction (const ROOT::Math::IMultiGenFunction &func) override;  set the function to minimize ;  ; bool SetLimitedVariable (unsigned int ivar, const std::string &name, double val, double step, double, double) override;  set upper/lower limited variable (override if minimizer supports them ) ;  ; bool SetVariable (unsigned int ivar, const std::string &name, double val, double step) override;  set free variable ;  ; bool SetVariableValue (unsigned int ivar, double val) override;  set the value of an existing variable ;  ; virtual void Streamer (TBuffer &);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; const double * X () const override;  return pointer to X values at the minimum ;  ;  Public Member Functions inherited from ROOT::Math::Minimizer;  Minimizer ();  Default constructor. ;  ;  Minimizer (Minimizer &&)=delete;  ;  Minimizer (Minimizer const &)=delete;  ; virtual ~Minimizer ();  Destructor (no operations). ;  ; virtual void Clear ();  reset for consecutive minimization - implement if needed ;  ; virtual bool Contour (unsigned int ivar, unsigned int jvar, unsigned int &npoints, double *xi, double *xj);  find the contour points (xi, xj) of the function for parameter ivar and jvar around the minimum The contour will be find for ",MatchSource.WIKI,doc/master/classTFumiliMinimizer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumiliMinimizer.html
https://root.cern/doc/master/classTFumiliMinimizer.html:3593,Modifiability,variab,variable,3593,"ble, double) override;  set upper/lower limited variable (override if minimizer supports them ) ;  ; bool SetVariable (unsigned int ivar, const std::string &name, double val, double step) override;  set free variable ;  ; bool SetVariableValue (unsigned int ivar, double val) override;  set the value of an existing variable ;  ; virtual void Streamer (TBuffer &);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; const double * X () const override;  return pointer to X values at the minimum ;  ;  Public Member Functions inherited from ROOT::Math::Minimizer;  Minimizer ();  Default constructor. ;  ;  Minimizer (Minimizer &&)=delete;  ;  Minimizer (Minimizer const &)=delete;  ; virtual ~Minimizer ();  Destructor (no operations). ;  ; virtual void Clear ();  reset for consecutive minimization - implement if needed ;  ; virtual bool Contour (unsigned int ivar, unsigned int jvar, unsigned int &npoints, double *xi, double *xj);  find the contour points (xi, xj) of the function for parameter ivar and jvar around the minimum The contour will be find for value of the function = Min + ErrorUp(); ;  ; virtual double Correlation (unsigned int i, unsigned int j) const;  return correlation coefficient between variable i and j. ;  ; double ErrorDef () const;  return the statistical scale used for calculate the error is typically 1 for Chi2 and 0.5 for likelihood minimization ;  ; virtual bool FixVariable (unsigned int ivar);  fix an existing variable ;  ; virtual bool GetCovMatrix (double *covMat) const;  Fill the passed array with the covariance matrix elements if the variable is fixed or const the value is zero. ;  ; virtual bool GetHessianMatrix (double *hMat) const;  Fill the passed array with the Hessian matrix elements The Hessian matrix is the matrix of the second derivatives and is the inverse of the covariance matrix If the variable is fixed or const the values for that variables are zero. ;  ; virtual bool GetMinosError (unsigned int ivar, double &errLow,",MatchSource.WIKI,doc/master/classTFumiliMinimizer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumiliMinimizer.html
https://root.cern/doc/master/classTFumiliMinimizer.html:3829,Modifiability,variab,variable,3829,"inimum ;  ;  Public Member Functions inherited from ROOT::Math::Minimizer;  Minimizer ();  Default constructor. ;  ;  Minimizer (Minimizer &&)=delete;  ;  Minimizer (Minimizer const &)=delete;  ; virtual ~Minimizer ();  Destructor (no operations). ;  ; virtual void Clear ();  reset for consecutive minimization - implement if needed ;  ; virtual bool Contour (unsigned int ivar, unsigned int jvar, unsigned int &npoints, double *xi, double *xj);  find the contour points (xi, xj) of the function for parameter ivar and jvar around the minimum The contour will be find for value of the function = Min + ErrorUp(); ;  ; virtual double Correlation (unsigned int i, unsigned int j) const;  return correlation coefficient between variable i and j. ;  ; double ErrorDef () const;  return the statistical scale used for calculate the error is typically 1 for Chi2 and 0.5 for likelihood minimization ;  ; virtual bool FixVariable (unsigned int ivar);  fix an existing variable ;  ; virtual bool GetCovMatrix (double *covMat) const;  Fill the passed array with the covariance matrix elements if the variable is fixed or const the value is zero. ;  ; virtual bool GetHessianMatrix (double *hMat) const;  Fill the passed array with the Hessian matrix elements The Hessian matrix is the matrix of the second derivatives and is the inverse of the covariance matrix If the variable is fixed or const the values for that variables are zero. ;  ; virtual bool GetMinosError (unsigned int ivar, double &errLow, double &errUp, int option=0);  minos error for variable i, return false if Minos failed or not supported and the lower and upper errors are returned in errLow and errUp An extra flag specifies if only the lower (option=-1) or the upper (option=+1) error calculation is run ;  ; virtual bool GetVariableSettings (unsigned int ivar, ROOT::Fit::ParameterSettings &pars) const;  get variable settings in a variable object (like ROOT::Fit::ParamsSettings) ;  ; virtual double GlobalCC (unsigned int ivar) const",MatchSource.WIKI,doc/master/classTFumiliMinimizer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumiliMinimizer.html
https://root.cern/doc/master/classTFumiliMinimizer.html:3959,Modifiability,variab,variable,3959,"inimum ;  ;  Public Member Functions inherited from ROOT::Math::Minimizer;  Minimizer ();  Default constructor. ;  ;  Minimizer (Minimizer &&)=delete;  ;  Minimizer (Minimizer const &)=delete;  ; virtual ~Minimizer ();  Destructor (no operations). ;  ; virtual void Clear ();  reset for consecutive minimization - implement if needed ;  ; virtual bool Contour (unsigned int ivar, unsigned int jvar, unsigned int &npoints, double *xi, double *xj);  find the contour points (xi, xj) of the function for parameter ivar and jvar around the minimum The contour will be find for value of the function = Min + ErrorUp(); ;  ; virtual double Correlation (unsigned int i, unsigned int j) const;  return correlation coefficient between variable i and j. ;  ; double ErrorDef () const;  return the statistical scale used for calculate the error is typically 1 for Chi2 and 0.5 for likelihood minimization ;  ; virtual bool FixVariable (unsigned int ivar);  fix an existing variable ;  ; virtual bool GetCovMatrix (double *covMat) const;  Fill the passed array with the covariance matrix elements if the variable is fixed or const the value is zero. ;  ; virtual bool GetHessianMatrix (double *hMat) const;  Fill the passed array with the Hessian matrix elements The Hessian matrix is the matrix of the second derivatives and is the inverse of the covariance matrix If the variable is fixed or const the values for that variables are zero. ;  ; virtual bool GetMinosError (unsigned int ivar, double &errLow, double &errUp, int option=0);  minos error for variable i, return false if Minos failed or not supported and the lower and upper errors are returned in errLow and errUp An extra flag specifies if only the lower (option=-1) or the upper (option=+1) error calculation is run ;  ; virtual bool GetVariableSettings (unsigned int ivar, ROOT::Fit::ParameterSettings &pars) const;  get variable settings in a variable object (like ROOT::Fit::ParamsSettings) ;  ; virtual double GlobalCC (unsigned int ivar) const",MatchSource.WIKI,doc/master/classTFumiliMinimizer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumiliMinimizer.html
https://root.cern/doc/master/classTFumiliMinimizer.html:4228,Modifiability,variab,variable,4228," for consecutive minimization - implement if needed ;  ; virtual bool Contour (unsigned int ivar, unsigned int jvar, unsigned int &npoints, double *xi, double *xj);  find the contour points (xi, xj) of the function for parameter ivar and jvar around the minimum The contour will be find for value of the function = Min + ErrorUp(); ;  ; virtual double Correlation (unsigned int i, unsigned int j) const;  return correlation coefficient between variable i and j. ;  ; double ErrorDef () const;  return the statistical scale used for calculate the error is typically 1 for Chi2 and 0.5 for likelihood minimization ;  ; virtual bool FixVariable (unsigned int ivar);  fix an existing variable ;  ; virtual bool GetCovMatrix (double *covMat) const;  Fill the passed array with the covariance matrix elements if the variable is fixed or const the value is zero. ;  ; virtual bool GetHessianMatrix (double *hMat) const;  Fill the passed array with the Hessian matrix elements The Hessian matrix is the matrix of the second derivatives and is the inverse of the covariance matrix If the variable is fixed or const the values for that variables are zero. ;  ; virtual bool GetMinosError (unsigned int ivar, double &errLow, double &errUp, int option=0);  minos error for variable i, return false if Minos failed or not supported and the lower and upper errors are returned in errLow and errUp An extra flag specifies if only the lower (option=-1) or the upper (option=+1) error calculation is run ;  ; virtual bool GetVariableSettings (unsigned int ivar, ROOT::Fit::ParameterSettings &pars) const;  get variable settings in a variable object (like ROOT::Fit::ParamsSettings) ;  ; virtual double GlobalCC (unsigned int ivar) const;  return global correlation coefficient for variable i This is a number between zero and one which gives the correlation between the i-th parameter and that linear combination of all other parameters which is most strongly correlated with i. ;  ; virtual bool Hesse ();  perform a",MatchSource.WIKI,doc/master/classTFumiliMinimizer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumiliMinimizer.html
https://root.cern/doc/master/classTFumiliMinimizer.html:4275,Modifiability,variab,variables,4275," for consecutive minimization - implement if needed ;  ; virtual bool Contour (unsigned int ivar, unsigned int jvar, unsigned int &npoints, double *xi, double *xj);  find the contour points (xi, xj) of the function for parameter ivar and jvar around the minimum The contour will be find for value of the function = Min + ErrorUp(); ;  ; virtual double Correlation (unsigned int i, unsigned int j) const;  return correlation coefficient between variable i and j. ;  ; double ErrorDef () const;  return the statistical scale used for calculate the error is typically 1 for Chi2 and 0.5 for likelihood minimization ;  ; virtual bool FixVariable (unsigned int ivar);  fix an existing variable ;  ; virtual bool GetCovMatrix (double *covMat) const;  Fill the passed array with the covariance matrix elements if the variable is fixed or const the value is zero. ;  ; virtual bool GetHessianMatrix (double *hMat) const;  Fill the passed array with the Hessian matrix elements The Hessian matrix is the matrix of the second derivatives and is the inverse of the covariance matrix If the variable is fixed or const the values for that variables are zero. ;  ; virtual bool GetMinosError (unsigned int ivar, double &errLow, double &errUp, int option=0);  minos error for variable i, return false if Minos failed or not supported and the lower and upper errors are returned in errLow and errUp An extra flag specifies if only the lower (option=-1) or the upper (option=+1) error calculation is run ;  ; virtual bool GetVariableSettings (unsigned int ivar, ROOT::Fit::ParameterSettings &pars) const;  get variable settings in a variable object (like ROOT::Fit::ParamsSettings) ;  ; virtual double GlobalCC (unsigned int ivar) const;  return global correlation coefficient for variable i This is a number between zero and one which gives the correlation between the i-th parameter and that linear combination of all other parameters which is most strongly correlated with i. ;  ; virtual bool Hesse ();  perform a",MatchSource.WIKI,doc/master/classTFumiliMinimizer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumiliMinimizer.html
https://root.cern/doc/master/classTFumiliMinimizer.html:4410,Modifiability,variab,variable,4410,"s typically 1 for Chi2 and 0.5 for likelihood minimization ;  ; virtual bool FixVariable (unsigned int ivar);  fix an existing variable ;  ; virtual bool GetCovMatrix (double *covMat) const;  Fill the passed array with the covariance matrix elements if the variable is fixed or const the value is zero. ;  ; virtual bool GetHessianMatrix (double *hMat) const;  Fill the passed array with the Hessian matrix elements The Hessian matrix is the matrix of the second derivatives and is the inverse of the covariance matrix If the variable is fixed or const the values for that variables are zero. ;  ; virtual bool GetMinosError (unsigned int ivar, double &errLow, double &errUp, int option=0);  minos error for variable i, return false if Minos failed or not supported and the lower and upper errors are returned in errLow and errUp An extra flag specifies if only the lower (option=-1) or the upper (option=+1) error calculation is run ;  ; virtual bool GetVariableSettings (unsigned int ivar, ROOT::Fit::ParameterSettings &pars) const;  get variable settings in a variable object (like ROOT::Fit::ParamsSettings) ;  ; virtual double GlobalCC (unsigned int ivar) const;  return global correlation coefficient for variable i This is a number between zero and one which gives the correlation between the i-th parameter and that linear combination of all other parameters which is most strongly correlated with i. ;  ; virtual bool Hesse ();  perform a full calculation of the Hessian matrix for error calculation ;  ; virtual bool IsFixedVariable (unsigned int ivar) const;  query if an existing variable is fixed (i.e. ;  ; bool IsValidError () const;  return true if Minimizer has performed a detailed error validation (e.g. run Hesse for Minuit) ;  ; unsigned int MaxFunctionCalls () const;  max number of function calls ;  ; unsigned int MaxIterations () const;  max iterations ;  ; virtual int MinosStatus () const;  status code of Minos (to be re-implemented by the minimizers supporting Minos) ;  ",MatchSource.WIKI,doc/master/classTFumiliMinimizer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumiliMinimizer.html
https://root.cern/doc/master/classTFumiliMinimizer.html:4742,Modifiability,variab,variable,4742,"s typically 1 for Chi2 and 0.5 for likelihood minimization ;  ; virtual bool FixVariable (unsigned int ivar);  fix an existing variable ;  ; virtual bool GetCovMatrix (double *covMat) const;  Fill the passed array with the covariance matrix elements if the variable is fixed or const the value is zero. ;  ; virtual bool GetHessianMatrix (double *hMat) const;  Fill the passed array with the Hessian matrix elements The Hessian matrix is the matrix of the second derivatives and is the inverse of the covariance matrix If the variable is fixed or const the values for that variables are zero. ;  ; virtual bool GetMinosError (unsigned int ivar, double &errLow, double &errUp, int option=0);  minos error for variable i, return false if Minos failed or not supported and the lower and upper errors are returned in errLow and errUp An extra flag specifies if only the lower (option=-1) or the upper (option=+1) error calculation is run ;  ; virtual bool GetVariableSettings (unsigned int ivar, ROOT::Fit::ParameterSettings &pars) const;  get variable settings in a variable object (like ROOT::Fit::ParamsSettings) ;  ; virtual double GlobalCC (unsigned int ivar) const;  return global correlation coefficient for variable i This is a number between zero and one which gives the correlation between the i-th parameter and that linear combination of all other parameters which is most strongly correlated with i. ;  ; virtual bool Hesse ();  perform a full calculation of the Hessian matrix for error calculation ;  ; virtual bool IsFixedVariable (unsigned int ivar) const;  query if an existing variable is fixed (i.e. ;  ; bool IsValidError () const;  return true if Minimizer has performed a detailed error validation (e.g. run Hesse for Minuit) ;  ; unsigned int MaxFunctionCalls () const;  max number of function calls ;  ; unsigned int MaxIterations () const;  max iterations ;  ; virtual int MinosStatus () const;  status code of Minos (to be re-implemented by the minimizers supporting Minos) ;  ",MatchSource.WIKI,doc/master/classTFumiliMinimizer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumiliMinimizer.html
https://root.cern/doc/master/classTFumiliMinimizer.html:4765,Modifiability,variab,variable,4765,"s typically 1 for Chi2 and 0.5 for likelihood minimization ;  ; virtual bool FixVariable (unsigned int ivar);  fix an existing variable ;  ; virtual bool GetCovMatrix (double *covMat) const;  Fill the passed array with the covariance matrix elements if the variable is fixed or const the value is zero. ;  ; virtual bool GetHessianMatrix (double *hMat) const;  Fill the passed array with the Hessian matrix elements The Hessian matrix is the matrix of the second derivatives and is the inverse of the covariance matrix If the variable is fixed or const the values for that variables are zero. ;  ; virtual bool GetMinosError (unsigned int ivar, double &errLow, double &errUp, int option=0);  minos error for variable i, return false if Minos failed or not supported and the lower and upper errors are returned in errLow and errUp An extra flag specifies if only the lower (option=-1) or the upper (option=+1) error calculation is run ;  ; virtual bool GetVariableSettings (unsigned int ivar, ROOT::Fit::ParameterSettings &pars) const;  get variable settings in a variable object (like ROOT::Fit::ParamsSettings) ;  ; virtual double GlobalCC (unsigned int ivar) const;  return global correlation coefficient for variable i This is a number between zero and one which gives the correlation between the i-th parameter and that linear combination of all other parameters which is most strongly correlated with i. ;  ; virtual bool Hesse ();  perform a full calculation of the Hessian matrix for error calculation ;  ; virtual bool IsFixedVariable (unsigned int ivar) const;  query if an existing variable is fixed (i.e. ;  ; bool IsValidError () const;  return true if Minimizer has performed a detailed error validation (e.g. run Hesse for Minuit) ;  ; unsigned int MaxFunctionCalls () const;  max number of function calls ;  ; unsigned int MaxIterations () const;  max iterations ;  ; virtual int MinosStatus () const;  status code of Minos (to be re-implemented by the minimizers supporting Minos) ;  ",MatchSource.WIKI,doc/master/classTFumiliMinimizer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumiliMinimizer.html
https://root.cern/doc/master/classTFumiliMinimizer.html:4913,Modifiability,variab,variable,4913,"s typically 1 for Chi2 and 0.5 for likelihood minimization ;  ; virtual bool FixVariable (unsigned int ivar);  fix an existing variable ;  ; virtual bool GetCovMatrix (double *covMat) const;  Fill the passed array with the covariance matrix elements if the variable is fixed or const the value is zero. ;  ; virtual bool GetHessianMatrix (double *hMat) const;  Fill the passed array with the Hessian matrix elements The Hessian matrix is the matrix of the second derivatives and is the inverse of the covariance matrix If the variable is fixed or const the values for that variables are zero. ;  ; virtual bool GetMinosError (unsigned int ivar, double &errLow, double &errUp, int option=0);  minos error for variable i, return false if Minos failed or not supported and the lower and upper errors are returned in errLow and errUp An extra flag specifies if only the lower (option=-1) or the upper (option=+1) error calculation is run ;  ; virtual bool GetVariableSettings (unsigned int ivar, ROOT::Fit::ParameterSettings &pars) const;  get variable settings in a variable object (like ROOT::Fit::ParamsSettings) ;  ; virtual double GlobalCC (unsigned int ivar) const;  return global correlation coefficient for variable i This is a number between zero and one which gives the correlation between the i-th parameter and that linear combination of all other parameters which is most strongly correlated with i. ;  ; virtual bool Hesse ();  perform a full calculation of the Hessian matrix for error calculation ;  ; virtual bool IsFixedVariable (unsigned int ivar) const;  query if an existing variable is fixed (i.e. ;  ; bool IsValidError () const;  return true if Minimizer has performed a detailed error validation (e.g. run Hesse for Minuit) ;  ; unsigned int MaxFunctionCalls () const;  max number of function calls ;  ; unsigned int MaxIterations () const;  max iterations ;  ; virtual int MinosStatus () const;  status code of Minos (to be re-implemented by the minimizers supporting Minos) ;  ",MatchSource.WIKI,doc/master/classTFumiliMinimizer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumiliMinimizer.html
https://root.cern/doc/master/classTFumiliMinimizer.html:5294,Modifiability,variab,variable,5294,"e matrix If the variable is fixed or const the values for that variables are zero. ;  ; virtual bool GetMinosError (unsigned int ivar, double &errLow, double &errUp, int option=0);  minos error for variable i, return false if Minos failed or not supported and the lower and upper errors are returned in errLow and errUp An extra flag specifies if only the lower (option=-1) or the upper (option=+1) error calculation is run ;  ; virtual bool GetVariableSettings (unsigned int ivar, ROOT::Fit::ParameterSettings &pars) const;  get variable settings in a variable object (like ROOT::Fit::ParamsSettings) ;  ; virtual double GlobalCC (unsigned int ivar) const;  return global correlation coefficient for variable i This is a number between zero and one which gives the correlation between the i-th parameter and that linear combination of all other parameters which is most strongly correlated with i. ;  ; virtual bool Hesse ();  perform a full calculation of the Hessian matrix for error calculation ;  ; virtual bool IsFixedVariable (unsigned int ivar) const;  query if an existing variable is fixed (i.e. ;  ; bool IsValidError () const;  return true if Minimizer has performed a detailed error validation (e.g. run Hesse for Minuit) ;  ; unsigned int MaxFunctionCalls () const;  max number of function calls ;  ; unsigned int MaxIterations () const;  max iterations ;  ; virtual int MinosStatus () const;  status code of Minos (to be re-implemented by the minimizers supporting Minos) ;  ; virtual unsigned int NIterations () const;  number of iterations to reach the minimum ;  ; Minimizer & operator= (Minimizer &&)=delete;  ; Minimizer & operator= (Minimizer const &)=delete;  ; virtual MinimizerOptions Options () const;  retrieve the minimizer options (implement derived class if needed) ;  ; double Precision () const;  precision of minimizer in the evaluation of the objective function ( a value <=0 corresponds to the let the minimizer choose its default one) ;  ; int PrintLevel () const;  ",MatchSource.WIKI,doc/master/classTFumiliMinimizer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumiliMinimizer.html
https://root.cern/doc/master/classTFumiliMinimizer.html:6223,Modifiability,config,configuration,6223,"inear combination of all other parameters which is most strongly correlated with i. ;  ; virtual bool Hesse ();  perform a full calculation of the Hessian matrix for error calculation ;  ; virtual bool IsFixedVariable (unsigned int ivar) const;  query if an existing variable is fixed (i.e. ;  ; bool IsValidError () const;  return true if Minimizer has performed a detailed error validation (e.g. run Hesse for Minuit) ;  ; unsigned int MaxFunctionCalls () const;  max number of function calls ;  ; unsigned int MaxIterations () const;  max iterations ;  ; virtual int MinosStatus () const;  status code of Minos (to be re-implemented by the minimizers supporting Minos) ;  ; virtual unsigned int NIterations () const;  number of iterations to reach the minimum ;  ; Minimizer & operator= (Minimizer &&)=delete;  ; Minimizer & operator= (Minimizer const &)=delete;  ; virtual MinimizerOptions Options () const;  retrieve the minimizer options (implement derived class if needed) ;  ; double Precision () const;  precision of minimizer in the evaluation of the objective function ( a value <=0 corresponds to the let the minimizer choose its default one) ;  ; int PrintLevel () const;  minimizer configuration parameters ;  ; virtual void PrintResults ();  return reference to the objective function virtual const ROOT::Math::IGenFunction & Function() const = 0; ;  ; virtual bool ReleaseVariable (unsigned int ivar);  release an existing variable ;  ; virtual bool Scan (unsigned int ivar, unsigned int &nstep, double *x, double *y, double xmin=0, double xmax=0);  scan function minimum for variable i. ;  ; virtual bool SetCovariance (std::span< const double > cov, unsigned int nrow);  set initial covariance matrix ;  ; virtual bool SetCovarianceDiag (std::span< const double > d2, unsigned int n);  set initial second derivatives ;  ; void SetDefaultOptions ();  reset the default options (defined in MinimizerOptions) ;  ; void SetErrorDef (double up);  set scale for calculating the errors ;  ",MatchSource.WIKI,doc/master/classTFumiliMinimizer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumiliMinimizer.html
https://root.cern/doc/master/classTFumiliMinimizer.html:6466,Modifiability,variab,variable,6466,"inear combination of all other parameters which is most strongly correlated with i. ;  ; virtual bool Hesse ();  perform a full calculation of the Hessian matrix for error calculation ;  ; virtual bool IsFixedVariable (unsigned int ivar) const;  query if an existing variable is fixed (i.e. ;  ; bool IsValidError () const;  return true if Minimizer has performed a detailed error validation (e.g. run Hesse for Minuit) ;  ; unsigned int MaxFunctionCalls () const;  max number of function calls ;  ; unsigned int MaxIterations () const;  max iterations ;  ; virtual int MinosStatus () const;  status code of Minos (to be re-implemented by the minimizers supporting Minos) ;  ; virtual unsigned int NIterations () const;  number of iterations to reach the minimum ;  ; Minimizer & operator= (Minimizer &&)=delete;  ; Minimizer & operator= (Minimizer const &)=delete;  ; virtual MinimizerOptions Options () const;  retrieve the minimizer options (implement derived class if needed) ;  ; double Precision () const;  precision of minimizer in the evaluation of the objective function ( a value <=0 corresponds to the let the minimizer choose its default one) ;  ; int PrintLevel () const;  minimizer configuration parameters ;  ; virtual void PrintResults ();  return reference to the objective function virtual const ROOT::Math::IGenFunction & Function() const = 0; ;  ; virtual bool ReleaseVariable (unsigned int ivar);  release an existing variable ;  ; virtual bool Scan (unsigned int ivar, unsigned int &nstep, double *x, double *y, double xmin=0, double xmax=0);  scan function minimum for variable i. ;  ; virtual bool SetCovariance (std::span< const double > cov, unsigned int nrow);  set initial covariance matrix ;  ; virtual bool SetCovarianceDiag (std::span< const double > d2, unsigned int n);  set initial second derivatives ;  ; void SetDefaultOptions ();  reset the default options (defined in MinimizerOptions) ;  ; void SetErrorDef (double up);  set scale for calculating the errors ;  ",MatchSource.WIKI,doc/master/classTFumiliMinimizer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumiliMinimizer.html
https://root.cern/doc/master/classTFumiliMinimizer.html:6619,Modifiability,variab,variable,6619,"inear combination of all other parameters which is most strongly correlated with i. ;  ; virtual bool Hesse ();  perform a full calculation of the Hessian matrix for error calculation ;  ; virtual bool IsFixedVariable (unsigned int ivar) const;  query if an existing variable is fixed (i.e. ;  ; bool IsValidError () const;  return true if Minimizer has performed a detailed error validation (e.g. run Hesse for Minuit) ;  ; unsigned int MaxFunctionCalls () const;  max number of function calls ;  ; unsigned int MaxIterations () const;  max iterations ;  ; virtual int MinosStatus () const;  status code of Minos (to be re-implemented by the minimizers supporting Minos) ;  ; virtual unsigned int NIterations () const;  number of iterations to reach the minimum ;  ; Minimizer & operator= (Minimizer &&)=delete;  ; Minimizer & operator= (Minimizer const &)=delete;  ; virtual MinimizerOptions Options () const;  retrieve the minimizer options (implement derived class if needed) ;  ; double Precision () const;  precision of minimizer in the evaluation of the objective function ( a value <=0 corresponds to the let the minimizer choose its default one) ;  ; int PrintLevel () const;  minimizer configuration parameters ;  ; virtual void PrintResults ();  return reference to the objective function virtual const ROOT::Math::IGenFunction & Function() const = 0; ;  ; virtual bool ReleaseVariable (unsigned int ivar);  release an existing variable ;  ; virtual bool Scan (unsigned int ivar, unsigned int &nstep, double *x, double *y, double xmin=0, double xmax=0);  scan function minimum for variable i. ;  ; virtual bool SetCovariance (std::span< const double > cov, unsigned int nrow);  set initial covariance matrix ;  ; virtual bool SetCovarianceDiag (std::span< const double > d2, unsigned int n);  set initial second derivatives ;  ; void SetDefaultOptions ();  reset the default options (defined in MinimizerOptions) ;  ; void SetErrorDef (double up);  set scale for calculating the errors ;  ",MatchSource.WIKI,doc/master/classTFumiliMinimizer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumiliMinimizer.html
https://root.cern/doc/master/classTFumiliMinimizer.html:7448,Modifiability,variab,variable,7448,"nce to the objective function virtual const ROOT::Math::IGenFunction & Function() const = 0; ;  ; virtual bool ReleaseVariable (unsigned int ivar);  release an existing variable ;  ; virtual bool Scan (unsigned int ivar, unsigned int &nstep, double *x, double *y, double xmin=0, double xmax=0);  scan function minimum for variable i. ;  ; virtual bool SetCovariance (std::span< const double > cov, unsigned int nrow);  set initial covariance matrix ;  ; virtual bool SetCovarianceDiag (std::span< const double > d2, unsigned int n);  set initial second derivatives ;  ; void SetDefaultOptions ();  reset the default options (defined in MinimizerOptions) ;  ; void SetErrorDef (double up);  set scale for calculating the errors ;  ; void SetExtraOptions (const IOptions &extraOptions);  set only the extra options ;  ; virtual void SetHessianFunction (std::function< bool(std::span< const double >, double *)>);  set the function implementing Hessian computation (re-implemented by Minimizer using it) ;  ; virtual bool SetLowerLimitedVariable (unsigned int ivar, const std::string &name, double val, double step, double lower);  set a new lower limit variable (override if minimizer supports them ) ;  ; void SetMaxFunctionCalls (unsigned int maxfcn);  set maximum of function calls ;  ; void SetMaxIterations (unsigned int maxiter);  set maximum iterations (one iteration can have many function calls) ;  ; void SetOptions (const MinimizerOptions &opt);  set all options in one go ;  ; void SetPrecision (double prec);  set in the minimizer the objective function evaluation precision ( a value <=0 means the minimizer will choose its optimal value automatically, i.e. ;  ; void SetPrintLevel (int level);  set print level ;  ; void SetStrategy (int strategyLevel);  set the strategy ;  ; void SetTolerance (double tol);  set the tolerance ;  ; virtual bool SetUpperLimitedVariable (unsigned int ivar, const std::string &name, double val, double step, double upper);  set a new upper limit variable ",MatchSource.WIKI,doc/master/classTFumiliMinimizer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumiliMinimizer.html
https://root.cern/doc/master/classTFumiliMinimizer.html:8288,Modifiability,variab,variable,8288,">);  set the function implementing Hessian computation (re-implemented by Minimizer using it) ;  ; virtual bool SetLowerLimitedVariable (unsigned int ivar, const std::string &name, double val, double step, double lower);  set a new lower limit variable (override if minimizer supports them ) ;  ; void SetMaxFunctionCalls (unsigned int maxfcn);  set maximum of function calls ;  ; void SetMaxIterations (unsigned int maxiter);  set maximum iterations (one iteration can have many function calls) ;  ; void SetOptions (const MinimizerOptions &opt);  set all options in one go ;  ; void SetPrecision (double prec);  set in the minimizer the objective function evaluation precision ( a value <=0 means the minimizer will choose its optimal value automatically, i.e. ;  ; void SetPrintLevel (int level);  set print level ;  ; void SetStrategy (int strategyLevel);  set the strategy ;  ; void SetTolerance (double tol);  set the tolerance ;  ; virtual bool SetUpperLimitedVariable (unsigned int ivar, const std::string &name, double val, double step, double upper);  set a new upper limit variable (override if minimizer supports them ) ;  ; void SetValidError (bool on);  flag to check if minimizer needs to perform accurate error analysis (e.g. run Hesse for Minuit) ;  ; virtual bool SetVariableInitialRange (unsigned int, double, double);  set the initial range of an existing variable ;  ; virtual bool SetVariableLimits (unsigned int ivar, double lower, double upper);  set the limits of an already existing variable ;  ; virtual bool SetVariableLowerLimit (unsigned int ivar, double lower);  set the lower-limit of an already existing variable ;  ; template<class VariableIterator > ; int SetVariables (const VariableIterator &begin, const VariableIterator &end);  add variables . Return number of variables successfully added ;  ; virtual bool SetVariableStepSize (unsigned int ivar, double value);  set the step size of an already existing variable ;  ; virtual bool SetVariableUpperLimit (unsigne",MatchSource.WIKI,doc/master/classTFumiliMinimizer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumiliMinimizer.html
https://root.cern/doc/master/classTFumiliMinimizer.html:8580,Modifiability,variab,variable,8580,"tions (const MinimizerOptions &opt);  set all options in one go ;  ; void SetPrecision (double prec);  set in the minimizer the objective function evaluation precision ( a value <=0 means the minimizer will choose its optimal value automatically, i.e. ;  ; void SetPrintLevel (int level);  set print level ;  ; void SetStrategy (int strategyLevel);  set the strategy ;  ; void SetTolerance (double tol);  set the tolerance ;  ; virtual bool SetUpperLimitedVariable (unsigned int ivar, const std::string &name, double val, double step, double upper);  set a new upper limit variable (override if minimizer supports them ) ;  ; void SetValidError (bool on);  flag to check if minimizer needs to perform accurate error analysis (e.g. run Hesse for Minuit) ;  ; virtual bool SetVariableInitialRange (unsigned int, double, double);  set the initial range of an existing variable ;  ; virtual bool SetVariableLimits (unsigned int ivar, double lower, double upper);  set the limits of an already existing variable ;  ; virtual bool SetVariableLowerLimit (unsigned int ivar, double lower);  set the lower-limit of an already existing variable ;  ; template<class VariableIterator > ; int SetVariables (const VariableIterator &begin, const VariableIterator &end);  add variables . Return number of variables successfully added ;  ; virtual bool SetVariableStepSize (unsigned int ivar, double value);  set the step size of an already existing variable ;  ; virtual bool SetVariableUpperLimit (unsigned int ivar, double upper);  set the upper-limit of an already existing variable ;  ; virtual bool SetVariableValues (const double *x);  set the values of all existing variables (array must be dimensioned to the size of the existing parameters) ;  ; int Status () const;  status code of minimizer ;  ; int Strategy () const;  strategy ;  ; double Tolerance () const;  absolute tolerance ;  ; virtual int VariableIndex (const std::string &name) const;  get index of variable given a variable given a name return -",MatchSource.WIKI,doc/master/classTFumiliMinimizer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumiliMinimizer.html
https://root.cern/doc/master/classTFumiliMinimizer.html:8713,Modifiability,variab,variable,8713,"tions (const MinimizerOptions &opt);  set all options in one go ;  ; void SetPrecision (double prec);  set in the minimizer the objective function evaluation precision ( a value <=0 means the minimizer will choose its optimal value automatically, i.e. ;  ; void SetPrintLevel (int level);  set print level ;  ; void SetStrategy (int strategyLevel);  set the strategy ;  ; void SetTolerance (double tol);  set the tolerance ;  ; virtual bool SetUpperLimitedVariable (unsigned int ivar, const std::string &name, double val, double step, double upper);  set a new upper limit variable (override if minimizer supports them ) ;  ; void SetValidError (bool on);  flag to check if minimizer needs to perform accurate error analysis (e.g. run Hesse for Minuit) ;  ; virtual bool SetVariableInitialRange (unsigned int, double, double);  set the initial range of an existing variable ;  ; virtual bool SetVariableLimits (unsigned int ivar, double lower, double upper);  set the limits of an already existing variable ;  ; virtual bool SetVariableLowerLimit (unsigned int ivar, double lower);  set the lower-limit of an already existing variable ;  ; template<class VariableIterator > ; int SetVariables (const VariableIterator &begin, const VariableIterator &end);  add variables . Return number of variables successfully added ;  ; virtual bool SetVariableStepSize (unsigned int ivar, double value);  set the step size of an already existing variable ;  ; virtual bool SetVariableUpperLimit (unsigned int ivar, double upper);  set the upper-limit of an already existing variable ;  ; virtual bool SetVariableValues (const double *x);  set the values of all existing variables (array must be dimensioned to the size of the existing parameters) ;  ; int Status () const;  status code of minimizer ;  ; int Strategy () const;  strategy ;  ; double Tolerance () const;  absolute tolerance ;  ; virtual int VariableIndex (const std::string &name) const;  get index of variable given a variable given a name return -",MatchSource.WIKI,doc/master/classTFumiliMinimizer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumiliMinimizer.html
https://root.cern/doc/master/classTFumiliMinimizer.html:8841,Modifiability,variab,variable,8841,"tions (const MinimizerOptions &opt);  set all options in one go ;  ; void SetPrecision (double prec);  set in the minimizer the objective function evaluation precision ( a value <=0 means the minimizer will choose its optimal value automatically, i.e. ;  ; void SetPrintLevel (int level);  set print level ;  ; void SetStrategy (int strategyLevel);  set the strategy ;  ; void SetTolerance (double tol);  set the tolerance ;  ; virtual bool SetUpperLimitedVariable (unsigned int ivar, const std::string &name, double val, double step, double upper);  set a new upper limit variable (override if minimizer supports them ) ;  ; void SetValidError (bool on);  flag to check if minimizer needs to perform accurate error analysis (e.g. run Hesse for Minuit) ;  ; virtual bool SetVariableInitialRange (unsigned int, double, double);  set the initial range of an existing variable ;  ; virtual bool SetVariableLimits (unsigned int ivar, double lower, double upper);  set the limits of an already existing variable ;  ; virtual bool SetVariableLowerLimit (unsigned int ivar, double lower);  set the lower-limit of an already existing variable ;  ; template<class VariableIterator > ; int SetVariables (const VariableIterator &begin, const VariableIterator &end);  add variables . Return number of variables successfully added ;  ; virtual bool SetVariableStepSize (unsigned int ivar, double value);  set the step size of an already existing variable ;  ; virtual bool SetVariableUpperLimit (unsigned int ivar, double upper);  set the upper-limit of an already existing variable ;  ; virtual bool SetVariableValues (const double *x);  set the values of all existing variables (array must be dimensioned to the size of the existing parameters) ;  ; int Status () const;  status code of minimizer ;  ; int Strategy () const;  strategy ;  ; double Tolerance () const;  absolute tolerance ;  ; virtual int VariableIndex (const std::string &name) const;  get index of variable given a variable given a name return -",MatchSource.WIKI,doc/master/classTFumiliMinimizer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumiliMinimizer.html
https://root.cern/doc/master/classTFumiliMinimizer.html:8975,Modifiability,variab,variables,8975,"tions (const MinimizerOptions &opt);  set all options in one go ;  ; void SetPrecision (double prec);  set in the minimizer the objective function evaluation precision ( a value <=0 means the minimizer will choose its optimal value automatically, i.e. ;  ; void SetPrintLevel (int level);  set print level ;  ; void SetStrategy (int strategyLevel);  set the strategy ;  ; void SetTolerance (double tol);  set the tolerance ;  ; virtual bool SetUpperLimitedVariable (unsigned int ivar, const std::string &name, double val, double step, double upper);  set a new upper limit variable (override if minimizer supports them ) ;  ; void SetValidError (bool on);  flag to check if minimizer needs to perform accurate error analysis (e.g. run Hesse for Minuit) ;  ; virtual bool SetVariableInitialRange (unsigned int, double, double);  set the initial range of an existing variable ;  ; virtual bool SetVariableLimits (unsigned int ivar, double lower, double upper);  set the limits of an already existing variable ;  ; virtual bool SetVariableLowerLimit (unsigned int ivar, double lower);  set the lower-limit of an already existing variable ;  ; template<class VariableIterator > ; int SetVariables (const VariableIterator &begin, const VariableIterator &end);  add variables . Return number of variables successfully added ;  ; virtual bool SetVariableStepSize (unsigned int ivar, double value);  set the step size of an already existing variable ;  ; virtual bool SetVariableUpperLimit (unsigned int ivar, double upper);  set the upper-limit of an already existing variable ;  ; virtual bool SetVariableValues (const double *x);  set the values of all existing variables (array must be dimensioned to the size of the existing parameters) ;  ; int Status () const;  status code of minimizer ;  ; int Strategy () const;  strategy ;  ; double Tolerance () const;  absolute tolerance ;  ; virtual int VariableIndex (const std::string &name) const;  get index of variable given a variable given a name return -",MatchSource.WIKI,doc/master/classTFumiliMinimizer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumiliMinimizer.html
https://root.cern/doc/master/classTFumiliMinimizer.html:9004,Modifiability,variab,variables,9004,"uit) ;  ; virtual bool SetVariableInitialRange (unsigned int, double, double);  set the initial range of an existing variable ;  ; virtual bool SetVariableLimits (unsigned int ivar, double lower, double upper);  set the limits of an already existing variable ;  ; virtual bool SetVariableLowerLimit (unsigned int ivar, double lower);  set the lower-limit of an already existing variable ;  ; template<class VariableIterator > ; int SetVariables (const VariableIterator &begin, const VariableIterator &end);  add variables . Return number of variables successfully added ;  ; virtual bool SetVariableStepSize (unsigned int ivar, double value);  set the step size of an already existing variable ;  ; virtual bool SetVariableUpperLimit (unsigned int ivar, double upper);  set the upper-limit of an already existing variable ;  ; virtual bool SetVariableValues (const double *x);  set the values of all existing variables (array must be dimensioned to the size of the existing parameters) ;  ; int Status () const;  status code of minimizer ;  ; int Strategy () const;  strategy ;  ; double Tolerance () const;  absolute tolerance ;  ; virtual int VariableIndex (const std::string &name) const;  get index of variable given a variable given a name return -1 if variable is not found ;  ; virtual std::string VariableName (unsigned int ivar) const;  get name of variables (override if minimizer support storing of variable names) return an empty string if variable is not found ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Static Protected Member Functions; static double EvaluateFCN (const double *x, double *g);  implementation of FCN for Fumili when user provided gradient is used ;  ; static void Fcn (int &, double *, double &f, double *, int);  implementation of FCN for Fumili ;  . Private Attributes; std::vector< double > fCovar;  ; unsigned int fDi",MatchSource.WIKI,doc/master/classTFumiliMinimizer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumiliMinimizer.html
https://root.cern/doc/master/classTFumiliMinimizer.html:9148,Modifiability,variab,variable,9148,"uit) ;  ; virtual bool SetVariableInitialRange (unsigned int, double, double);  set the initial range of an existing variable ;  ; virtual bool SetVariableLimits (unsigned int ivar, double lower, double upper);  set the limits of an already existing variable ;  ; virtual bool SetVariableLowerLimit (unsigned int ivar, double lower);  set the lower-limit of an already existing variable ;  ; template<class VariableIterator > ; int SetVariables (const VariableIterator &begin, const VariableIterator &end);  add variables . Return number of variables successfully added ;  ; virtual bool SetVariableStepSize (unsigned int ivar, double value);  set the step size of an already existing variable ;  ; virtual bool SetVariableUpperLimit (unsigned int ivar, double upper);  set the upper-limit of an already existing variable ;  ; virtual bool SetVariableValues (const double *x);  set the values of all existing variables (array must be dimensioned to the size of the existing parameters) ;  ; int Status () const;  status code of minimizer ;  ; int Strategy () const;  strategy ;  ; double Tolerance () const;  absolute tolerance ;  ; virtual int VariableIndex (const std::string &name) const;  get index of variable given a variable given a name return -1 if variable is not found ;  ; virtual std::string VariableName (unsigned int ivar) const;  get name of variables (override if minimizer support storing of variable names) return an empty string if variable is not found ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Static Protected Member Functions; static double EvaluateFCN (const double *x, double *g);  implementation of FCN for Fumili when user provided gradient is used ;  ; static void Fcn (int &, double *, double &f, double *, int);  implementation of FCN for Fumili ;  . Private Attributes; std::vector< double > fCovar;  ; unsigned int fDi",MatchSource.WIKI,doc/master/classTFumiliMinimizer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumiliMinimizer.html
https://root.cern/doc/master/classTFumiliMinimizer.html:9276,Modifiability,variab,variable,9276,"uit) ;  ; virtual bool SetVariableInitialRange (unsigned int, double, double);  set the initial range of an existing variable ;  ; virtual bool SetVariableLimits (unsigned int ivar, double lower, double upper);  set the limits of an already existing variable ;  ; virtual bool SetVariableLowerLimit (unsigned int ivar, double lower);  set the lower-limit of an already existing variable ;  ; template<class VariableIterator > ; int SetVariables (const VariableIterator &begin, const VariableIterator &end);  add variables . Return number of variables successfully added ;  ; virtual bool SetVariableStepSize (unsigned int ivar, double value);  set the step size of an already existing variable ;  ; virtual bool SetVariableUpperLimit (unsigned int ivar, double upper);  set the upper-limit of an already existing variable ;  ; virtual bool SetVariableValues (const double *x);  set the values of all existing variables (array must be dimensioned to the size of the existing parameters) ;  ; int Status () const;  status code of minimizer ;  ; int Strategy () const;  strategy ;  ; double Tolerance () const;  absolute tolerance ;  ; virtual int VariableIndex (const std::string &name) const;  get index of variable given a variable given a name return -1 if variable is not found ;  ; virtual std::string VariableName (unsigned int ivar) const;  get name of variables (override if minimizer support storing of variable names) return an empty string if variable is not found ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Static Protected Member Functions; static double EvaluateFCN (const double *x, double *g);  implementation of FCN for Fumili when user provided gradient is used ;  ; static void Fcn (int &, double *, double &f, double *, int);  implementation of FCN for Fumili ;  . Private Attributes; std::vector< double > fCovar;  ; unsigned int fDi",MatchSource.WIKI,doc/master/classTFumiliMinimizer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumiliMinimizer.html
https://root.cern/doc/master/classTFumiliMinimizer.html:9372,Modifiability,variab,variables,9372,"uit) ;  ; virtual bool SetVariableInitialRange (unsigned int, double, double);  set the initial range of an existing variable ;  ; virtual bool SetVariableLimits (unsigned int ivar, double lower, double upper);  set the limits of an already existing variable ;  ; virtual bool SetVariableLowerLimit (unsigned int ivar, double lower);  set the lower-limit of an already existing variable ;  ; template<class VariableIterator > ; int SetVariables (const VariableIterator &begin, const VariableIterator &end);  add variables . Return number of variables successfully added ;  ; virtual bool SetVariableStepSize (unsigned int ivar, double value);  set the step size of an already existing variable ;  ; virtual bool SetVariableUpperLimit (unsigned int ivar, double upper);  set the upper-limit of an already existing variable ;  ; virtual bool SetVariableValues (const double *x);  set the values of all existing variables (array must be dimensioned to the size of the existing parameters) ;  ; int Status () const;  status code of minimizer ;  ; int Strategy () const;  strategy ;  ; double Tolerance () const;  absolute tolerance ;  ; virtual int VariableIndex (const std::string &name) const;  get index of variable given a variable given a name return -1 if variable is not found ;  ; virtual std::string VariableName (unsigned int ivar) const;  get name of variables (override if minimizer support storing of variable names) return an empty string if variable is not found ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Static Protected Member Functions; static double EvaluateFCN (const double *x, double *g);  implementation of FCN for Fumili when user provided gradient is used ;  ; static void Fcn (int &, double *, double &f, double *, int);  implementation of FCN for Fumili ;  . Private Attributes; std::vector< double > fCovar;  ; unsigned int fDi",MatchSource.WIKI,doc/master/classTFumiliMinimizer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumiliMinimizer.html
https://root.cern/doc/master/classTFumiliMinimizer.html:9669,Modifiability,variab,variable,9669,"uit) ;  ; virtual bool SetVariableInitialRange (unsigned int, double, double);  set the initial range of an existing variable ;  ; virtual bool SetVariableLimits (unsigned int ivar, double lower, double upper);  set the limits of an already existing variable ;  ; virtual bool SetVariableLowerLimit (unsigned int ivar, double lower);  set the lower-limit of an already existing variable ;  ; template<class VariableIterator > ; int SetVariables (const VariableIterator &begin, const VariableIterator &end);  add variables . Return number of variables successfully added ;  ; virtual bool SetVariableStepSize (unsigned int ivar, double value);  set the step size of an already existing variable ;  ; virtual bool SetVariableUpperLimit (unsigned int ivar, double upper);  set the upper-limit of an already existing variable ;  ; virtual bool SetVariableValues (const double *x);  set the values of all existing variables (array must be dimensioned to the size of the existing parameters) ;  ; int Status () const;  status code of minimizer ;  ; int Strategy () const;  strategy ;  ; double Tolerance () const;  absolute tolerance ;  ; virtual int VariableIndex (const std::string &name) const;  get index of variable given a variable given a name return -1 if variable is not found ;  ; virtual std::string VariableName (unsigned int ivar) const;  get name of variables (override if minimizer support storing of variable names) return an empty string if variable is not found ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Static Protected Member Functions; static double EvaluateFCN (const double *x, double *g);  implementation of FCN for Fumili when user provided gradient is used ;  ; static void Fcn (int &, double *, double &f, double *, int);  implementation of FCN for Fumili ;  . Private Attributes; std::vector< double > fCovar;  ; unsigned int fDi",MatchSource.WIKI,doc/master/classTFumiliMinimizer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumiliMinimizer.html
https://root.cern/doc/master/classTFumiliMinimizer.html:9686,Modifiability,variab,variable,9686,"uit) ;  ; virtual bool SetVariableInitialRange (unsigned int, double, double);  set the initial range of an existing variable ;  ; virtual bool SetVariableLimits (unsigned int ivar, double lower, double upper);  set the limits of an already existing variable ;  ; virtual bool SetVariableLowerLimit (unsigned int ivar, double lower);  set the lower-limit of an already existing variable ;  ; template<class VariableIterator > ; int SetVariables (const VariableIterator &begin, const VariableIterator &end);  add variables . Return number of variables successfully added ;  ; virtual bool SetVariableStepSize (unsigned int ivar, double value);  set the step size of an already existing variable ;  ; virtual bool SetVariableUpperLimit (unsigned int ivar, double upper);  set the upper-limit of an already existing variable ;  ; virtual bool SetVariableValues (const double *x);  set the values of all existing variables (array must be dimensioned to the size of the existing parameters) ;  ; int Status () const;  status code of minimizer ;  ; int Strategy () const;  strategy ;  ; double Tolerance () const;  absolute tolerance ;  ; virtual int VariableIndex (const std::string &name) const;  get index of variable given a variable given a name return -1 if variable is not found ;  ; virtual std::string VariableName (unsigned int ivar) const;  get name of variables (override if minimizer support storing of variable names) return an empty string if variable is not found ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Static Protected Member Functions; static double EvaluateFCN (const double *x, double *g);  implementation of FCN for Fumili when user provided gradient is used ;  ; static void Fcn (int &, double *, double &f, double *, int);  implementation of FCN for Fumili ;  . Private Attributes; std::vector< double > fCovar;  ; unsigned int fDi",MatchSource.WIKI,doc/master/classTFumiliMinimizer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumiliMinimizer.html
https://root.cern/doc/master/classTFumiliMinimizer.html:9721,Modifiability,variab,variable,9721,"uit) ;  ; virtual bool SetVariableInitialRange (unsigned int, double, double);  set the initial range of an existing variable ;  ; virtual bool SetVariableLimits (unsigned int ivar, double lower, double upper);  set the limits of an already existing variable ;  ; virtual bool SetVariableLowerLimit (unsigned int ivar, double lower);  set the lower-limit of an already existing variable ;  ; template<class VariableIterator > ; int SetVariables (const VariableIterator &begin, const VariableIterator &end);  add variables . Return number of variables successfully added ;  ; virtual bool SetVariableStepSize (unsigned int ivar, double value);  set the step size of an already existing variable ;  ; virtual bool SetVariableUpperLimit (unsigned int ivar, double upper);  set the upper-limit of an already existing variable ;  ; virtual bool SetVariableValues (const double *x);  set the values of all existing variables (array must be dimensioned to the size of the existing parameters) ;  ; int Status () const;  status code of minimizer ;  ; int Strategy () const;  strategy ;  ; double Tolerance () const;  absolute tolerance ;  ; virtual int VariableIndex (const std::string &name) const;  get index of variable given a variable given a name return -1 if variable is not found ;  ; virtual std::string VariableName (unsigned int ivar) const;  get name of variables (override if minimizer support storing of variable names) return an empty string if variable is not found ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Static Protected Member Functions; static double EvaluateFCN (const double *x, double *g);  implementation of FCN for Fumili when user provided gradient is used ;  ; static void Fcn (int &, double *, double &f, double *, int);  implementation of FCN for Fumili ;  . Private Attributes; std::vector< double > fCovar;  ; unsigned int fDi",MatchSource.WIKI,doc/master/classTFumiliMinimizer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumiliMinimizer.html
https://root.cern/doc/master/classTFumiliMinimizer.html:9821,Modifiability,variab,variables,9821,"uit) ;  ; virtual bool SetVariableInitialRange (unsigned int, double, double);  set the initial range of an existing variable ;  ; virtual bool SetVariableLimits (unsigned int ivar, double lower, double upper);  set the limits of an already existing variable ;  ; virtual bool SetVariableLowerLimit (unsigned int ivar, double lower);  set the lower-limit of an already existing variable ;  ; template<class VariableIterator > ; int SetVariables (const VariableIterator &begin, const VariableIterator &end);  add variables . Return number of variables successfully added ;  ; virtual bool SetVariableStepSize (unsigned int ivar, double value);  set the step size of an already existing variable ;  ; virtual bool SetVariableUpperLimit (unsigned int ivar, double upper);  set the upper-limit of an already existing variable ;  ; virtual bool SetVariableValues (const double *x);  set the values of all existing variables (array must be dimensioned to the size of the existing parameters) ;  ; int Status () const;  status code of minimizer ;  ; int Strategy () const;  strategy ;  ; double Tolerance () const;  absolute tolerance ;  ; virtual int VariableIndex (const std::string &name) const;  get index of variable given a variable given a name return -1 if variable is not found ;  ; virtual std::string VariableName (unsigned int ivar) const;  get name of variables (override if minimizer support storing of variable names) return an empty string if variable is not found ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Static Protected Member Functions; static double EvaluateFCN (const double *x, double *g);  implementation of FCN for Fumili when user provided gradient is used ;  ; static void Fcn (int &, double *, double &f, double *, int);  implementation of FCN for Fumili ;  . Private Attributes; std::vector< double > fCovar;  ; unsigned int fDi",MatchSource.WIKI,doc/master/classTFumiliMinimizer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumiliMinimizer.html
https://root.cern/doc/master/classTFumiliMinimizer.html:9873,Modifiability,variab,variable,9873,"uit) ;  ; virtual bool SetVariableInitialRange (unsigned int, double, double);  set the initial range of an existing variable ;  ; virtual bool SetVariableLimits (unsigned int ivar, double lower, double upper);  set the limits of an already existing variable ;  ; virtual bool SetVariableLowerLimit (unsigned int ivar, double lower);  set the lower-limit of an already existing variable ;  ; template<class VariableIterator > ; int SetVariables (const VariableIterator &begin, const VariableIterator &end);  add variables . Return number of variables successfully added ;  ; virtual bool SetVariableStepSize (unsigned int ivar, double value);  set the step size of an already existing variable ;  ; virtual bool SetVariableUpperLimit (unsigned int ivar, double upper);  set the upper-limit of an already existing variable ;  ; virtual bool SetVariableValues (const double *x);  set the values of all existing variables (array must be dimensioned to the size of the existing parameters) ;  ; int Status () const;  status code of minimizer ;  ; int Strategy () const;  strategy ;  ; double Tolerance () const;  absolute tolerance ;  ; virtual int VariableIndex (const std::string &name) const;  get index of variable given a variable given a name return -1 if variable is not found ;  ; virtual std::string VariableName (unsigned int ivar) const;  get name of variables (override if minimizer support storing of variable names) return an empty string if variable is not found ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Static Protected Member Functions; static double EvaluateFCN (const double *x, double *g);  implementation of FCN for Fumili when user provided gradient is used ;  ; static void Fcn (int &, double *, double &f, double *, int);  implementation of FCN for Fumili ;  . Private Attributes; std::vector< double > fCovar;  ; unsigned int fDi",MatchSource.WIKI,doc/master/classTFumiliMinimizer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumiliMinimizer.html
https://root.cern/doc/master/classTFumiliMinimizer.html:9915,Modifiability,variab,variable,9915,"uit) ;  ; virtual bool SetVariableInitialRange (unsigned int, double, double);  set the initial range of an existing variable ;  ; virtual bool SetVariableLimits (unsigned int ivar, double lower, double upper);  set the limits of an already existing variable ;  ; virtual bool SetVariableLowerLimit (unsigned int ivar, double lower);  set the lower-limit of an already existing variable ;  ; template<class VariableIterator > ; int SetVariables (const VariableIterator &begin, const VariableIterator &end);  add variables . Return number of variables successfully added ;  ; virtual bool SetVariableStepSize (unsigned int ivar, double value);  set the step size of an already existing variable ;  ; virtual bool SetVariableUpperLimit (unsigned int ivar, double upper);  set the upper-limit of an already existing variable ;  ; virtual bool SetVariableValues (const double *x);  set the values of all existing variables (array must be dimensioned to the size of the existing parameters) ;  ; int Status () const;  status code of minimizer ;  ; int Strategy () const;  strategy ;  ; double Tolerance () const;  absolute tolerance ;  ; virtual int VariableIndex (const std::string &name) const;  get index of variable given a variable given a name return -1 if variable is not found ;  ; virtual std::string VariableName (unsigned int ivar) const;  get name of variables (override if minimizer support storing of variable names) return an empty string if variable is not found ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Static Protected Member Functions; static double EvaluateFCN (const double *x, double *g);  implementation of FCN for Fumili when user provided gradient is used ;  ; static void Fcn (int &, double *, double &f, double *, int);  implementation of FCN for Fumili ;  . Private Attributes; std::vector< double > fCovar;  ; unsigned int fDi",MatchSource.WIKI,doc/master/classTFumiliMinimizer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumiliMinimizer.html
https://root.cern/doc/master/classTFumiliMinimizer.html:10866,Modifiability,inherit,inherited,10866,"unctions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Static Protected Member Functions; static double EvaluateFCN (const double *x, double *g);  implementation of FCN for Fumili when user provided gradient is used ;  ; static void Fcn (int &, double *, double &f, double *, int);  implementation of FCN for Fumili ;  . Private Attributes; std::vector< double > fCovar;  ; unsigned int fDim;  ; double fEdm;  ; std::vector< double > fErrors;  ; TFumili * fFumili;  ; double fMinVal;  ; unsigned int fNFree;  ; std::vector< double > fParams;  . Static Private Attributes; static TFumili * fgFumili = nullptr;  ; static ROOT::Math::FitMethodFunction * fgFunc = nullptr;  ; static ROOT::Math::FitMethodGradFunction * fgGradFunc = nullptr;  . Additional Inherited Members;  Protected Attributes inherited from ROOT::Math::Minimizer; MinimizerOptions fOptions;  minimizer options ;  ; int fStatus = -1;  status of minimizer ;  ; bool fValidError = false;  flag to control if errors have been validated (Hesse has been run in case of Minuit) ;  . #include <TFumiliMinimizer.h>. Inheritance diagram for TFumiliMinimizer:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TFumiliMinimizer(). TFumiliMinimizer::TFumiliMinimizer ; (; int ; dummy = 0). Default constructor (an argument is needed by plug-in manager) ; Definition at line 137 of file TFumiliMinimizer.cxx. ◆ ~TFumiliMinimizer(). TFumiliMinimizer::~TFumiliMinimizer ; (; ). override . Destructor (no operations) ; Definition at line 160 of file TFumiliMinimizer.cxx. Member Function Documentation. ◆ Class(). static TClass * TFumiliMinimizer::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TFumiliMinimizer::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constex",MatchSource.WIKI,doc/master/classTFumiliMinimizer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumiliMinimizer.html
https://root.cern/doc/master/classTFumiliMinimizer.html:11452,Modifiability,plug-in,plug-in,11452,"Dim;  ; double fEdm;  ; std::vector< double > fErrors;  ; TFumili * fFumili;  ; double fMinVal;  ; unsigned int fNFree;  ; std::vector< double > fParams;  . Static Private Attributes; static TFumili * fgFumili = nullptr;  ; static ROOT::Math::FitMethodFunction * fgFunc = nullptr;  ; static ROOT::Math::FitMethodGradFunction * fgGradFunc = nullptr;  . Additional Inherited Members;  Protected Attributes inherited from ROOT::Math::Minimizer; MinimizerOptions fOptions;  minimizer options ;  ; int fStatus = -1;  status of minimizer ;  ; bool fValidError = false;  flag to control if errors have been validated (Hesse has been run in case of Minuit) ;  . #include <TFumiliMinimizer.h>. Inheritance diagram for TFumiliMinimizer:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TFumiliMinimizer(). TFumiliMinimizer::TFumiliMinimizer ; (; int ; dummy = 0). Default constructor (an argument is needed by plug-in manager) ; Definition at line 137 of file TFumiliMinimizer.cxx. ◆ ~TFumiliMinimizer(). TFumiliMinimizer::~TFumiliMinimizer ; (; ). override . Destructor (no operations) ; Definition at line 160 of file TFumiliMinimizer.cxx. Member Function Documentation. ◆ Class(). static TClass * TFumiliMinimizer::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TFumiliMinimizer::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TFumiliMinimizer::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 162 of file TFumiliMinimizer.h. ◆ CovMatrix(). double TFumiliMinimizer::CovMatrix ; (; unsigned int ; i, . unsigned int ; j . ); const. inlineoverridevirtual . return covariance matrices elements if the variable is fixed the matrix is zero The ordering of the variables is the same as in errors ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 116 of file ",MatchSource.WIKI,doc/master/classTFumiliMinimizer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumiliMinimizer.html
https://root.cern/doc/master/classTFumiliMinimizer.html:12294,Modifiability,variab,variable,12294,"mizer(). TFumiliMinimizer::TFumiliMinimizer ; (; int ; dummy = 0). Default constructor (an argument is needed by plug-in manager) ; Definition at line 137 of file TFumiliMinimizer.cxx. ◆ ~TFumiliMinimizer(). TFumiliMinimizer::~TFumiliMinimizer ; (; ). override . Destructor (no operations) ; Definition at line 160 of file TFumiliMinimizer.cxx. Member Function Documentation. ◆ Class(). static TClass * TFumiliMinimizer::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TFumiliMinimizer::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TFumiliMinimizer::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 162 of file TFumiliMinimizer.h. ◆ CovMatrix(). double TFumiliMinimizer::CovMatrix ; (; unsigned int ; i, . unsigned int ; j . ); const. inlineoverridevirtual . return covariance matrices elements if the variable is fixed the matrix is zero The ordering of the variables is the same as in errors ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 116 of file TFumiliMinimizer.h. ◆ CovMatrixStatus(). int TFumiliMinimizer::CovMatrixStatus ; (; ); const. inlineoverridevirtual . return status of covariance matrix using Minuit convention {0 not calculated 1 approximated 2 made pos def , 3 accurate} Minimizer who implements covariance matrix calculation will re-implement the method ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 123 of file TFumiliMinimizer.h. ◆ DeclFileName(). static const char * TFumiliMinimizer::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 162 of file TFumiliMinimizer.h. ◆ Edm(). double TFumiliMinimizer::Edm ; (; ); const. inlineoverridevirtual . return expected distance reached from the minimum ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 87 of file TFumiliMinimizer.h. ◆ Errors(). const double * TFumiliM",MatchSource.WIKI,doc/master/classTFumiliMinimizer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumiliMinimizer.html
https://root.cern/doc/master/classTFumiliMinimizer.html:12351,Modifiability,variab,variables,12351,"mizer(). TFumiliMinimizer::TFumiliMinimizer ; (; int ; dummy = 0). Default constructor (an argument is needed by plug-in manager) ; Definition at line 137 of file TFumiliMinimizer.cxx. ◆ ~TFumiliMinimizer(). TFumiliMinimizer::~TFumiliMinimizer ; (; ). override . Destructor (no operations) ; Definition at line 160 of file TFumiliMinimizer.cxx. Member Function Documentation. ◆ Class(). static TClass * TFumiliMinimizer::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TFumiliMinimizer::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TFumiliMinimizer::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 162 of file TFumiliMinimizer.h. ◆ CovMatrix(). double TFumiliMinimizer::CovMatrix ; (; unsigned int ; i, . unsigned int ; j . ); const. inlineoverridevirtual . return covariance matrices elements if the variable is fixed the matrix is zero The ordering of the variables is the same as in errors ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 116 of file TFumiliMinimizer.h. ◆ CovMatrixStatus(). int TFumiliMinimizer::CovMatrixStatus ; (; ); const. inlineoverridevirtual . return status of covariance matrix using Minuit convention {0 not calculated 1 approximated 2 made pos def , 3 accurate} Minimizer who implements covariance matrix calculation will re-implement the method ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 123 of file TFumiliMinimizer.h. ◆ DeclFileName(). static const char * TFumiliMinimizer::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 162 of file TFumiliMinimizer.h. ◆ Edm(). double TFumiliMinimizer::Edm ; (; ); const. inlineoverridevirtual . return expected distance reached from the minimum ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 87 of file TFumiliMinimizer.h. ◆ Errors(). const double * TFumiliM",MatchSource.WIKI,doc/master/classTFumiliMinimizer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumiliMinimizer.html
https://root.cern/doc/master/classTFumiliMinimizer.html:15264,Modifiability,variab,variables,15264,"iliMinimizer::MinGradient ; (; ); const. inlineoverridevirtual . return pointer to gradient values at the minimum ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 93 of file TFumiliMinimizer.h. ◆ Minimize(). bool TFumiliMinimizer::Minimize ; (; ). overridevirtual . method to perform the minimization ; Implements ROOT::Math::Minimizer.; Definition at line 508 of file TFumiliMinimizer.cxx. ◆ MinValue(). double TFumiliMinimizer::MinValue ; (; ); const. inlineoverridevirtual . return minimum function value ; Implements ROOT::Math::Minimizer.; Definition at line 84 of file TFumiliMinimizer.h. ◆ NCalls(). unsigned int TFumiliMinimizer::NCalls ; (; ); const. inlineoverridevirtual . number of function calls to reach the minimum ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 96 of file TFumiliMinimizer.h. ◆ NDim(). unsigned int TFumiliMinimizer::NDim ; (; ); const. inlineoverridevirtual . this is <= Function().NDim() which is the total number of variables (free+ constrained ones) ; Implements ROOT::Math::Minimizer.; Definition at line 100 of file TFumiliMinimizer.h. ◆ NFree(). unsigned int TFumiliMinimizer::NFree ; (; ); const. inlineoverridevirtual . number of free variables (real dimension of the problem) this is <= Function().NDim() which is the total ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 104 of file TFumiliMinimizer.h. ◆ ProvidesError(). bool TFumiliMinimizer::ProvidesError ; (; ); const. inlineoverridevirtual . minimizer provides error and error matrix ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 107 of file TFumiliMinimizer.h. ◆ SetFixedVariable(). bool TFumiliMinimizer::SetFixedVariable ; (; unsigned int ; ivar, . const std::string & ; name, . double ; val . ). overridevirtual . set fixed variable (override if minimizer supports them ) ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 460 of file TFumiliMinimizer.cxx. ◆ SetFunction(). void TFumiliMinimizer::SetFunction ; (; cons",MatchSource.WIKI,doc/master/classTFumiliMinimizer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumiliMinimizer.html
https://root.cern/doc/master/classTFumiliMinimizer.html:15489,Modifiability,variab,variables,15489,"iliMinimizer::Minimize ; (; ). overridevirtual . method to perform the minimization ; Implements ROOT::Math::Minimizer.; Definition at line 508 of file TFumiliMinimizer.cxx. ◆ MinValue(). double TFumiliMinimizer::MinValue ; (; ); const. inlineoverridevirtual . return minimum function value ; Implements ROOT::Math::Minimizer.; Definition at line 84 of file TFumiliMinimizer.h. ◆ NCalls(). unsigned int TFumiliMinimizer::NCalls ; (; ); const. inlineoverridevirtual . number of function calls to reach the minimum ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 96 of file TFumiliMinimizer.h. ◆ NDim(). unsigned int TFumiliMinimizer::NDim ; (; ); const. inlineoverridevirtual . this is <= Function().NDim() which is the total number of variables (free+ constrained ones) ; Implements ROOT::Math::Minimizer.; Definition at line 100 of file TFumiliMinimizer.h. ◆ NFree(). unsigned int TFumiliMinimizer::NFree ; (; ); const. inlineoverridevirtual . number of free variables (real dimension of the problem) this is <= Function().NDim() which is the total ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 104 of file TFumiliMinimizer.h. ◆ ProvidesError(). bool TFumiliMinimizer::ProvidesError ; (; ); const. inlineoverridevirtual . minimizer provides error and error matrix ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 107 of file TFumiliMinimizer.h. ◆ SetFixedVariable(). bool TFumiliMinimizer::SetFixedVariable ; (; unsigned int ; ivar, . const std::string & ; name, . double ; val . ). overridevirtual . set fixed variable (override if minimizer supports them ) ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 460 of file TFumiliMinimizer.cxx. ◆ SetFunction(). void TFumiliMinimizer::SetFunction ; (; const ROOT::Math::IMultiGenFunction & ; func). overridevirtual . set the function to minimize ; Implements ROOT::Math::Minimizer.; Definition at line 168 of file TFumiliMinimizer.cxx. ◆ SetLimitedVariable(). bool TFumiliMinimizer::SetLi",MatchSource.WIKI,doc/master/classTFumiliMinimizer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumiliMinimizer.html
https://root.cern/doc/master/classTFumiliMinimizer.html:16074,Modifiability,variab,variable,16074,"zer.h. ◆ NDim(). unsigned int TFumiliMinimizer::NDim ; (; ); const. inlineoverridevirtual . this is <= Function().NDim() which is the total number of variables (free+ constrained ones) ; Implements ROOT::Math::Minimizer.; Definition at line 100 of file TFumiliMinimizer.h. ◆ NFree(). unsigned int TFumiliMinimizer::NFree ; (; ); const. inlineoverridevirtual . number of free variables (real dimension of the problem) this is <= Function().NDim() which is the total ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 104 of file TFumiliMinimizer.h. ◆ ProvidesError(). bool TFumiliMinimizer::ProvidesError ; (; ); const. inlineoverridevirtual . minimizer provides error and error matrix ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 107 of file TFumiliMinimizer.h. ◆ SetFixedVariable(). bool TFumiliMinimizer::SetFixedVariable ; (; unsigned int ; ivar, . const std::string & ; name, . double ; val . ). overridevirtual . set fixed variable (override if minimizer supports them ) ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 460 of file TFumiliMinimizer.cxx. ◆ SetFunction(). void TFumiliMinimizer::SetFunction ; (; const ROOT::Math::IMultiGenFunction & ; func). overridevirtual . set the function to minimize ; Implements ROOT::Math::Minimizer.; Definition at line 168 of file TFumiliMinimizer.cxx. ◆ SetLimitedVariable(). bool TFumiliMinimizer::SetLimitedVariable ; (; unsigned int ; ivar, . const std::string & ; name, . double ; val, . double ; step, . double ; lower, . double ; upper . ). overridevirtual . set upper/lower limited variable (override if minimizer supports them ) ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 433 of file TFumiliMinimizer.cxx. ◆ SetVariable(). bool TFumiliMinimizer::SetVariable ; (; unsigned int ; ivar, . const std::string & ; name, . double ; val, . double ; step . ). overridevirtual . set free variable ; Implements ROOT::Math::Minimizer.; Definition at line 415 of file TFumiliMinimizer.cxx.",MatchSource.WIKI,doc/master/classTFumiliMinimizer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumiliMinimizer.html
https://root.cern/doc/master/classTFumiliMinimizer.html:16698,Modifiability,variab,variable,16698,"; (; ); const. inlineoverridevirtual . minimizer provides error and error matrix ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 107 of file TFumiliMinimizer.h. ◆ SetFixedVariable(). bool TFumiliMinimizer::SetFixedVariable ; (; unsigned int ; ivar, . const std::string & ; name, . double ; val . ). overridevirtual . set fixed variable (override if minimizer supports them ) ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 460 of file TFumiliMinimizer.cxx. ◆ SetFunction(). void TFumiliMinimizer::SetFunction ; (; const ROOT::Math::IMultiGenFunction & ; func). overridevirtual . set the function to minimize ; Implements ROOT::Math::Minimizer.; Definition at line 168 of file TFumiliMinimizer.cxx. ◆ SetLimitedVariable(). bool TFumiliMinimizer::SetLimitedVariable ; (; unsigned int ; ivar, . const std::string & ; name, . double ; val, . double ; step, . double ; lower, . double ; upper . ). overridevirtual . set upper/lower limited variable (override if minimizer supports them ) ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 433 of file TFumiliMinimizer.cxx. ◆ SetVariable(). bool TFumiliMinimizer::SetVariable ; (; unsigned int ; ivar, . const std::string & ; name, . double ; val, . double ; step . ). overridevirtual . set free variable ; Implements ROOT::Math::Minimizer.; Definition at line 415 of file TFumiliMinimizer.cxx. ◆ SetVariableValue(). bool TFumiliMinimizer::SetVariableValue ; (; unsigned int ; ivar, . double ; val . ). overridevirtual . set the value of an existing variable ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 482 of file TFumiliMinimizer.cxx. ◆ Streamer(). virtual void TFumiliMinimizer::Streamer ; (; TBuffer & ; ). virtual . ◆ StreamerNVirtual(). void TFumiliMinimizer::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 162 of file TFumiliMinimizer.h. ◆ X(). const double * TFumiliMinimizer::X ; (; ); const. inlineoverridevirtual . return pointer to X ",MatchSource.WIKI,doc/master/classTFumiliMinimizer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumiliMinimizer.html
https://root.cern/doc/master/classTFumiliMinimizer.html:17016,Modifiability,variab,variable,17016,"e ; val . ). overridevirtual . set fixed variable (override if minimizer supports them ) ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 460 of file TFumiliMinimizer.cxx. ◆ SetFunction(). void TFumiliMinimizer::SetFunction ; (; const ROOT::Math::IMultiGenFunction & ; func). overridevirtual . set the function to minimize ; Implements ROOT::Math::Minimizer.; Definition at line 168 of file TFumiliMinimizer.cxx. ◆ SetLimitedVariable(). bool TFumiliMinimizer::SetLimitedVariable ; (; unsigned int ; ivar, . const std::string & ; name, . double ; val, . double ; step, . double ; lower, . double ; upper . ). overridevirtual . set upper/lower limited variable (override if minimizer supports them ) ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 433 of file TFumiliMinimizer.cxx. ◆ SetVariable(). bool TFumiliMinimizer::SetVariable ; (; unsigned int ; ivar, . const std::string & ; name, . double ; val, . double ; step . ). overridevirtual . set free variable ; Implements ROOT::Math::Minimizer.; Definition at line 415 of file TFumiliMinimizer.cxx. ◆ SetVariableValue(). bool TFumiliMinimizer::SetVariableValue ; (; unsigned int ; ivar, . double ; val . ). overridevirtual . set the value of an existing variable ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 482 of file TFumiliMinimizer.cxx. ◆ Streamer(). virtual void TFumiliMinimizer::Streamer ; (; TBuffer & ; ). virtual . ◆ StreamerNVirtual(). void TFumiliMinimizer::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 162 of file TFumiliMinimizer.h. ◆ X(). const double * TFumiliMinimizer::X ; (; ); const. inlineoverridevirtual . return pointer to X values at the minimum ; Implements ROOT::Math::Minimizer.; Definition at line 90 of file TFumiliMinimizer.h. Member Data Documentation. ◆ fCovar. std::vector<double> TFumiliMinimizer::fCovar. private . Definition at line 151 of file TFumiliMinimizer.h. ◆ fDim. unsigned int TFumiliMinimizer::fDim. priv",MatchSource.WIKI,doc/master/classTFumiliMinimizer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumiliMinimizer.html
https://root.cern/doc/master/classTFumiliMinimizer.html:17270,Modifiability,variab,variable,17270,"t ROOT::Math::IMultiGenFunction & ; func). overridevirtual . set the function to minimize ; Implements ROOT::Math::Minimizer.; Definition at line 168 of file TFumiliMinimizer.cxx. ◆ SetLimitedVariable(). bool TFumiliMinimizer::SetLimitedVariable ; (; unsigned int ; ivar, . const std::string & ; name, . double ; val, . double ; step, . double ; lower, . double ; upper . ). overridevirtual . set upper/lower limited variable (override if minimizer supports them ) ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 433 of file TFumiliMinimizer.cxx. ◆ SetVariable(). bool TFumiliMinimizer::SetVariable ; (; unsigned int ; ivar, . const std::string & ; name, . double ; val, . double ; step . ). overridevirtual . set free variable ; Implements ROOT::Math::Minimizer.; Definition at line 415 of file TFumiliMinimizer.cxx. ◆ SetVariableValue(). bool TFumiliMinimizer::SetVariableValue ; (; unsigned int ; ivar, . double ; val . ). overridevirtual . set the value of an existing variable ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 482 of file TFumiliMinimizer.cxx. ◆ Streamer(). virtual void TFumiliMinimizer::Streamer ; (; TBuffer & ; ). virtual . ◆ StreamerNVirtual(). void TFumiliMinimizer::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 162 of file TFumiliMinimizer.h. ◆ X(). const double * TFumiliMinimizer::X ; (; ); const. inlineoverridevirtual . return pointer to X values at the minimum ; Implements ROOT::Math::Minimizer.; Definition at line 90 of file TFumiliMinimizer.h. Member Data Documentation. ◆ fCovar. std::vector<double> TFumiliMinimizer::fCovar. private . Definition at line 151 of file TFumiliMinimizer.h. ◆ fDim. unsigned int TFumiliMinimizer::fDim. private . Definition at line 145 of file TFumiliMinimizer.h. ◆ fEdm. double TFumiliMinimizer::fEdm. private . Definition at line 148 of file TFumiliMinimizer.h. ◆ fErrors. std::vector<double> TFumiliMinimizer::fErrors. private . Definition at line 150 ",MatchSource.WIKI,doc/master/classTFumiliMinimizer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumiliMinimizer.html
https://root.cern/doc/master/classTFumiliMinimizer.html:1456,Performance,perform,perform,1456,"ing...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Static Protected Member Functions |; Private Attributes |; Static Private Attributes |; List of all members ; TFumiliMinimizer Class Reference. ; TFumiliMinimizer class: minimizer implementation based on TFumili. ; Definition at line 43 of file TFumiliMinimizer.h. Public Member Functions;  TFumiliMinimizer (int dummy=0);  Default constructor (an argument is needed by plug-in manager) ;  ;  ~TFumiliMinimizer () override;  Destructor (no operations) ;  ; double CovMatrix (unsigned int i, unsigned int j) const override;  return covariance matrices elements if the variable is fixed the matrix is zero The ordering of the variables is the same as in errors ;  ; int CovMatrixStatus () const override;  return status of covariance matrix using Minuit convention {0 not calculated 1 approximated 2 made pos def , 3 accurate} Minimizer who implements covariance matrix calculation will re-implement the method ;  ; double Edm () const override;  return expected distance reached from the minimum ;  ; const double * Errors () const override;  return errors at the minimum ;  ; virtual TClass * IsA () const;  ; const double * MinGradient () const override;  return pointer to gradient values at the minimum ;  ; bool Minimize () override;  method to perform the minimization ;  ; double MinValue () const override;  return minimum function value ;  ; unsigned int NCalls () const override;  number of function calls to reach the minimum ;  ; unsigned int NDim () const override;  this is <= Function().NDim() which is the total number of variables (free+ constrained ones) ;  ; unsigned int NFree () const override;  number of free variables (real dimension of the problem) this is <= Function().NDim() which is the total ;  ; bool ProvidesError () const override;  minimizer provides error and error matrix ;  ; bool SetFixedVariable (unsigned int, const std::string &, double) overr",MatchSource.WIKI,doc/master/classTFumiliMinimizer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumiliMinimizer.html
https://root.cern/doc/master/classTFumiliMinimizer.html:5140,Performance,perform,perform,5140,"e matrix If the variable is fixed or const the values for that variables are zero. ;  ; virtual bool GetMinosError (unsigned int ivar, double &errLow, double &errUp, int option=0);  minos error for variable i, return false if Minos failed or not supported and the lower and upper errors are returned in errLow and errUp An extra flag specifies if only the lower (option=-1) or the upper (option=+1) error calculation is run ;  ; virtual bool GetVariableSettings (unsigned int ivar, ROOT::Fit::ParameterSettings &pars) const;  get variable settings in a variable object (like ROOT::Fit::ParamsSettings) ;  ; virtual double GlobalCC (unsigned int ivar) const;  return global correlation coefficient for variable i This is a number between zero and one which gives the correlation between the i-th parameter and that linear combination of all other parameters which is most strongly correlated with i. ;  ; virtual bool Hesse ();  perform a full calculation of the Hessian matrix for error calculation ;  ; virtual bool IsFixedVariable (unsigned int ivar) const;  query if an existing variable is fixed (i.e. ;  ; bool IsValidError () const;  return true if Minimizer has performed a detailed error validation (e.g. run Hesse for Minuit) ;  ; unsigned int MaxFunctionCalls () const;  max number of function calls ;  ; unsigned int MaxIterations () const;  max iterations ;  ; virtual int MinosStatus () const;  status code of Minos (to be re-implemented by the minimizers supporting Minos) ;  ; virtual unsigned int NIterations () const;  number of iterations to reach the minimum ;  ; Minimizer & operator= (Minimizer &&)=delete;  ; Minimizer & operator= (Minimizer const &)=delete;  ; virtual MinimizerOptions Options () const;  retrieve the minimizer options (implement derived class if needed) ;  ; double Precision () const;  precision of minimizer in the evaluation of the objective function ( a value <=0 corresponds to the let the minimizer choose its default one) ;  ; int PrintLevel () const;  ",MatchSource.WIKI,doc/master/classTFumiliMinimizer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumiliMinimizer.html
https://root.cern/doc/master/classTFumiliMinimizer.html:5381,Performance,perform,performed,5381," &errUp, int option=0);  minos error for variable i, return false if Minos failed or not supported and the lower and upper errors are returned in errLow and errUp An extra flag specifies if only the lower (option=-1) or the upper (option=+1) error calculation is run ;  ; virtual bool GetVariableSettings (unsigned int ivar, ROOT::Fit::ParameterSettings &pars) const;  get variable settings in a variable object (like ROOT::Fit::ParamsSettings) ;  ; virtual double GlobalCC (unsigned int ivar) const;  return global correlation coefficient for variable i This is a number between zero and one which gives the correlation between the i-th parameter and that linear combination of all other parameters which is most strongly correlated with i. ;  ; virtual bool Hesse ();  perform a full calculation of the Hessian matrix for error calculation ;  ; virtual bool IsFixedVariable (unsigned int ivar) const;  query if an existing variable is fixed (i.e. ;  ; bool IsValidError () const;  return true if Minimizer has performed a detailed error validation (e.g. run Hesse for Minuit) ;  ; unsigned int MaxFunctionCalls () const;  max number of function calls ;  ; unsigned int MaxIterations () const;  max iterations ;  ; virtual int MinosStatus () const;  status code of Minos (to be re-implemented by the minimizers supporting Minos) ;  ; virtual unsigned int NIterations () const;  number of iterations to reach the minimum ;  ; Minimizer & operator= (Minimizer &&)=delete;  ; Minimizer & operator= (Minimizer const &)=delete;  ; virtual MinimizerOptions Options () const;  retrieve the minimizer options (implement derived class if needed) ;  ; double Precision () const;  precision of minimizer in the evaluation of the objective function ( a value <=0 corresponds to the let the minimizer choose its default one) ;  ; int PrintLevel () const;  minimizer configuration parameters ;  ; virtual void PrintResults ();  return reference to the objective function virtual const ROOT::Math::IGenFunction & Fu",MatchSource.WIKI,doc/master/classTFumiliMinimizer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumiliMinimizer.html
https://root.cern/doc/master/classTFumiliMinimizer.html:8408,Performance,perform,perform,8408,">);  set the function implementing Hessian computation (re-implemented by Minimizer using it) ;  ; virtual bool SetLowerLimitedVariable (unsigned int ivar, const std::string &name, double val, double step, double lower);  set a new lower limit variable (override if minimizer supports them ) ;  ; void SetMaxFunctionCalls (unsigned int maxfcn);  set maximum of function calls ;  ; void SetMaxIterations (unsigned int maxiter);  set maximum iterations (one iteration can have many function calls) ;  ; void SetOptions (const MinimizerOptions &opt);  set all options in one go ;  ; void SetPrecision (double prec);  set in the minimizer the objective function evaluation precision ( a value <=0 means the minimizer will choose its optimal value automatically, i.e. ;  ; void SetPrintLevel (int level);  set print level ;  ; void SetStrategy (int strategyLevel);  set the strategy ;  ; void SetTolerance (double tol);  set the tolerance ;  ; virtual bool SetUpperLimitedVariable (unsigned int ivar, const std::string &name, double val, double step, double upper);  set a new upper limit variable (override if minimizer supports them ) ;  ; void SetValidError (bool on);  flag to check if minimizer needs to perform accurate error analysis (e.g. run Hesse for Minuit) ;  ; virtual bool SetVariableInitialRange (unsigned int, double, double);  set the initial range of an existing variable ;  ; virtual bool SetVariableLimits (unsigned int ivar, double lower, double upper);  set the limits of an already existing variable ;  ; virtual bool SetVariableLowerLimit (unsigned int ivar, double lower);  set the lower-limit of an already existing variable ;  ; template<class VariableIterator > ; int SetVariables (const VariableIterator &begin, const VariableIterator &end);  add variables . Return number of variables successfully added ;  ; virtual bool SetVariableStepSize (unsigned int ivar, double value);  set the step size of an already existing variable ;  ; virtual bool SetVariableUpperLimit (unsigne",MatchSource.WIKI,doc/master/classTFumiliMinimizer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumiliMinimizer.html
https://root.cern/doc/master/classTFumiliMinimizer.html:14572,Performance,perform,perform,14572," x, . double * ; g . ). staticprotected . implementation of FCN for Fumili when user provided gradient is used ; static function implementing the evaluation of the FCN (it uses static instance fgFumili) ; Definition at line 240 of file TFumiliMinimizer.cxx. ◆ Fcn(). void TFumiliMinimizer::Fcn ; (; int & ; , . double * ; g, . double & ; f, . double * ; x, . int ;  . ). staticprotected . implementation of FCN for Fumili ; Definition at line 221 of file TFumiliMinimizer.cxx. ◆ IsA(). virtual TClass * TFumiliMinimizer::IsA ; (; ); const. inlinevirtual . ReturnsTClass describing current object ; Definition at line 162 of file TFumiliMinimizer.h. ◆ MinGradient(). const double * TFumiliMinimizer::MinGradient ; (; ); const. inlineoverridevirtual . return pointer to gradient values at the minimum ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 93 of file TFumiliMinimizer.h. ◆ Minimize(). bool TFumiliMinimizer::Minimize ; (; ). overridevirtual . method to perform the minimization ; Implements ROOT::Math::Minimizer.; Definition at line 508 of file TFumiliMinimizer.cxx. ◆ MinValue(). double TFumiliMinimizer::MinValue ; (; ); const. inlineoverridevirtual . return minimum function value ; Implements ROOT::Math::Minimizer.; Definition at line 84 of file TFumiliMinimizer.h. ◆ NCalls(). unsigned int TFumiliMinimizer::NCalls ; (; ); const. inlineoverridevirtual . number of function calls to reach the minimum ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 96 of file TFumiliMinimizer.h. ◆ NDim(). unsigned int TFumiliMinimizer::NDim ; (; ); const. inlineoverridevirtual . this is <= Function().NDim() which is the total number of variables (free+ constrained ones) ; Implements ROOT::Math::Minimizer.; Definition at line 100 of file TFumiliMinimizer.h. ◆ NFree(). unsigned int TFumiliMinimizer::NFree ; (; ); const. inlineoverridevirtual . number of free variables (real dimension of the problem) this is <= Function().NDim() which is the total ; Reimplemented fr",MatchSource.WIKI,doc/master/classTFumiliMinimizer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumiliMinimizer.html
https://root.cern/doc/master/classTFumiliMinimizer.html:5408,Security,validat,validation,5408," &errUp, int option=0);  minos error for variable i, return false if Minos failed or not supported and the lower and upper errors are returned in errLow and errUp An extra flag specifies if only the lower (option=-1) or the upper (option=+1) error calculation is run ;  ; virtual bool GetVariableSettings (unsigned int ivar, ROOT::Fit::ParameterSettings &pars) const;  get variable settings in a variable object (like ROOT::Fit::ParamsSettings) ;  ; virtual double GlobalCC (unsigned int ivar) const;  return global correlation coefficient for variable i This is a number between zero and one which gives the correlation between the i-th parameter and that linear combination of all other parameters which is most strongly correlated with i. ;  ; virtual bool Hesse ();  perform a full calculation of the Hessian matrix for error calculation ;  ; virtual bool IsFixedVariable (unsigned int ivar) const;  query if an existing variable is fixed (i.e. ;  ; bool IsValidError () const;  return true if Minimizer has performed a detailed error validation (e.g. run Hesse for Minuit) ;  ; unsigned int MaxFunctionCalls () const;  max number of function calls ;  ; unsigned int MaxIterations () const;  max iterations ;  ; virtual int MinosStatus () const;  status code of Minos (to be re-implemented by the minimizers supporting Minos) ;  ; virtual unsigned int NIterations () const;  number of iterations to reach the minimum ;  ; Minimizer & operator= (Minimizer &&)=delete;  ; Minimizer & operator= (Minimizer const &)=delete;  ; virtual MinimizerOptions Options () const;  retrieve the minimizer options (implement derived class if needed) ;  ; double Precision () const;  precision of minimizer in the evaluation of the objective function ( a value <=0 corresponds to the let the minimizer choose its default one) ;  ; int PrintLevel () const;  minimizer configuration parameters ;  ; virtual void PrintResults ();  return reference to the objective function virtual const ROOT::Math::IGenFunction & Fu",MatchSource.WIKI,doc/master/classTFumiliMinimizer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumiliMinimizer.html
https://root.cern/doc/master/classTFumiliMinimizer.html:11062,Security,validat,validated,11062,"unctions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Static Protected Member Functions; static double EvaluateFCN (const double *x, double *g);  implementation of FCN for Fumili when user provided gradient is used ;  ; static void Fcn (int &, double *, double &f, double *, int);  implementation of FCN for Fumili ;  . Private Attributes; std::vector< double > fCovar;  ; unsigned int fDim;  ; double fEdm;  ; std::vector< double > fErrors;  ; TFumili * fFumili;  ; double fMinVal;  ; unsigned int fNFree;  ; std::vector< double > fParams;  . Static Private Attributes; static TFumili * fgFumili = nullptr;  ; static ROOT::Math::FitMethodFunction * fgFunc = nullptr;  ; static ROOT::Math::FitMethodGradFunction * fgGradFunc = nullptr;  . Additional Inherited Members;  Protected Attributes inherited from ROOT::Math::Minimizer; MinimizerOptions fOptions;  minimizer options ;  ; int fStatus = -1;  status of minimizer ;  ; bool fValidError = false;  flag to control if errors have been validated (Hesse has been run in case of Minuit) ;  . #include <TFumiliMinimizer.h>. Inheritance diagram for TFumiliMinimizer:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TFumiliMinimizer(). TFumiliMinimizer::TFumiliMinimizer ; (; int ; dummy = 0). Default constructor (an argument is needed by plug-in manager) ; Definition at line 137 of file TFumiliMinimizer.cxx. ◆ ~TFumiliMinimizer(). TFumiliMinimizer::~TFumiliMinimizer ; (; ). override . Destructor (no operations) ; Definition at line 160 of file TFumiliMinimizer.cxx. Member Function Documentation. ◆ Class(). static TClass * TFumiliMinimizer::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TFumiliMinimizer::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constex",MatchSource.WIKI,doc/master/classTFumiliMinimizer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFumiliMinimizer.html
https://root.cern/doc/master/classTFunction.html:1247,Availability,error,error,1247,"ons |; Protected Member Functions |; Protected Attributes |; Friends |; List of all members ; TFunction Class Reference. ; Global functions class (global functions are obtained from CINT). ; This class describes one single global function. The TROOT class contains a list of all currently defined global functions (accessible via TROOT::GetListOfGlobalFunctions()). ; Definition at line 30 of file TFunction.h. Public Member Functions;  TFunction (const TFunction &orig);  Copy operator. ;  ;  TFunction (MethodInfo_t *info=nullptr);  Default TFunction ctor. ;  ; virtual ~TFunction ();  TFunction dtor deletes adopted CINT MethodInfo. ;  ; TObject * Clone (const char *newname="""") const override;  Clone method. ;  ; Long_t ExtraProperty () const;  Get property description word. For meaning of bits see EProperty. ;  ; DeclId_t GetDeclId () const;  ; TList * GetListOfMethodArgs ();  Return list containing the TMethodArgs of a TFunction. ;  ; virtual const char * GetMangledName () const;  Returns the mangled name as defined by CINT, or 0 in case of error. ;  ; Int_t GetNargs () const;  Number of function arguments. ;  ; Int_t GetNargsOpt () const;  Number of function optional (default) arguments. ;  ; virtual const char * GetPrototype () const;  Returns the prototype of a function as defined by CINT, or 0 in case of error. ;  ; const char * GetReturnTypeName () const;  Get full type description of function return type, e,g.: ""class TDirectory*"". ;  ; std::string GetReturnTypeNormalizedName () const;  Get the normalized name of the return type. ;  ; const char * GetSignature ();  Return signature of function. ;  ; void * InterfaceMethod () const;  Return pointer to the interface method. ;  ; TClass * IsA () const override;  ; virtual Bool_t IsValid ();  Return true if this function object is pointing to a currently loaded function. ;  ; void ls (Option_t *option="""") const override;  List TFunction name and title. ;  ; TFunction & operator= (const TFunction &rhs);  Assignment op",MatchSource.WIKI,doc/master/classTFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFunction.html
https://root.cern/doc/master/classTFunction.html:1520,Availability,error,error,1520,"ist of all currently defined global functions (accessible via TROOT::GetListOfGlobalFunctions()). ; Definition at line 30 of file TFunction.h. Public Member Functions;  TFunction (const TFunction &orig);  Copy operator. ;  ;  TFunction (MethodInfo_t *info=nullptr);  Default TFunction ctor. ;  ; virtual ~TFunction ();  TFunction dtor deletes adopted CINT MethodInfo. ;  ; TObject * Clone (const char *newname="""") const override;  Clone method. ;  ; Long_t ExtraProperty () const;  Get property description word. For meaning of bits see EProperty. ;  ; DeclId_t GetDeclId () const;  ; TList * GetListOfMethodArgs ();  Return list containing the TMethodArgs of a TFunction. ;  ; virtual const char * GetMangledName () const;  Returns the mangled name as defined by CINT, or 0 in case of error. ;  ; Int_t GetNargs () const;  Number of function arguments. ;  ; Int_t GetNargsOpt () const;  Number of function optional (default) arguments. ;  ; virtual const char * GetPrototype () const;  Returns the prototype of a function as defined by CINT, or 0 in case of error. ;  ; const char * GetReturnTypeName () const;  Get full type description of function return type, e,g.: ""class TDirectory*"". ;  ; std::string GetReturnTypeNormalizedName () const;  Get the normalized name of the return type. ;  ; const char * GetSignature ();  Return signature of function. ;  ; void * InterfaceMethod () const;  Return pointer to the interface method. ;  ; TClass * IsA () const override;  ; virtual Bool_t IsValid ();  Return true if this function object is pointing to a currently loaded function. ;  ; void ls (Option_t *option="""") const override;  List TFunction name and title. ;  ; TFunction & operator= (const TFunction &rhs);  Assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TFunction name and title. ;  ; Long_t Property () const override;  Get property description word. For meaning of bits see EProperty. ;  ; void Streamer (TBuffer &) override;  Stream an object of class",MatchSource.WIKI,doc/master/classTFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFunction.html
https://root.cern/doc/master/classTFunction.html:6238,Availability,error,error,6238,"ject. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFunction.html
https://root.cern/doc/master/classTFunction.html:6327,Availability,error,error,6327,"ecord whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual ",MatchSource.WIKI,doc/master/classTFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFunction.html
https://root.cern/doc/master/classTFunction.html:6482,Availability,error,error,6482,"Name () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute ",MatchSource.WIKI,doc/master/classTFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFunction.html
https://root.cern/doc/master/classTFunction.html:6779,Availability,error,error,6779,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFunction.html
https://root.cern/doc/master/classTFunction.html:10863,Availability,error,error,10863,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TDictionary; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Vers",MatchSource.WIKI,doc/master/classTFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFunction.html
https://root.cern/doc/master/classTFunction.html:17619,Availability,error,error,17619,"gnature(). void TFunction::CreateSignature ; (; ). protectedvirtual . Using the CINT method arg information to create a complete signature string. ; Reimplemented in TMethod.; Definition at line 112 of file TFunction.cxx. ◆ DeclFileName(). static const char * TFunction::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 68 of file TFunction.h. ◆ ExtraProperty(). Long_t TFunction::ExtraProperty ; (; ); const. Get property description word. For meaning of bits see EProperty. ; Definition at line 202 of file TFunction.cxx. ◆ GetDeclId(). TDictionary::DeclId_t TFunction::GetDeclId ; (; ); const. Definition at line 210 of file TFunction.cxx. ◆ GetListOfMethodArgs(). TList * TFunction::GetListOfMethodArgs ; (; ). Return list containing the TMethodArgs of a TFunction. ; Definition at line 135 of file TFunction.cxx. ◆ GetMangledName(). const char * TFunction::GetMangledName ; (; ); const. virtual . Returns the mangled name as defined by CINT, or 0 in case of error. ; Definition at line 252 of file TFunction.cxx. ◆ GetNargs(). Int_t TFunction::GetNargs ; (; ); const. Number of function arguments. ; Definition at line 174 of file TFunction.cxx. ◆ GetNargsOpt(). Int_t TFunction::GetNargsOpt ; (; ); const. Number of function optional (default) arguments. ; Definition at line 184 of file TFunction.cxx. ◆ GetPrototype(). const char * TFunction::GetPrototype ; (; ); const. virtual . Returns the prototype of a function as defined by CINT, or 0 in case of error. ; Definition at line 261 of file TFunction.cxx. ◆ GetReturnTypeName(). const char * TFunction::GetReturnTypeName ; (; ); const. Get full type description of function return type, e,g.: ""class TDirectory*"". ; Definition at line 150 of file TFunction.cxx. ◆ GetReturnTypeNormalizedName(). std::string TFunction::GetReturnTypeNormalizedName ; (; ); const. Get the normalized name of the return type. ; A normalized name is fully qualified and has all typedef desugared e",MatchSource.WIKI,doc/master/classTFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFunction.html
https://root.cern/doc/master/classTFunction.html:18117,Availability,error,error,18117,"ription word. For meaning of bits see EProperty. ; Definition at line 202 of file TFunction.cxx. ◆ GetDeclId(). TDictionary::DeclId_t TFunction::GetDeclId ; (; ); const. Definition at line 210 of file TFunction.cxx. ◆ GetListOfMethodArgs(). TList * TFunction::GetListOfMethodArgs ; (; ). Return list containing the TMethodArgs of a TFunction. ; Definition at line 135 of file TFunction.cxx. ◆ GetMangledName(). const char * TFunction::GetMangledName ; (; ); const. virtual . Returns the mangled name as defined by CINT, or 0 in case of error. ; Definition at line 252 of file TFunction.cxx. ◆ GetNargs(). Int_t TFunction::GetNargs ; (; ); const. Number of function arguments. ; Definition at line 174 of file TFunction.cxx. ◆ GetNargsOpt(). Int_t TFunction::GetNargsOpt ; (; ); const. Number of function optional (default) arguments. ; Definition at line 184 of file TFunction.cxx. ◆ GetPrototype(). const char * TFunction::GetPrototype ; (; ); const. virtual . Returns the prototype of a function as defined by CINT, or 0 in case of error. ; Definition at line 261 of file TFunction.cxx. ◆ GetReturnTypeName(). const char * TFunction::GetReturnTypeName ; (; ); const. Get full type description of function return type, e,g.: ""class TDirectory*"". ; Definition at line 150 of file TFunction.cxx. ◆ GetReturnTypeNormalizedName(). std::string TFunction::GetReturnTypeNormalizedName ; (; ); const. Get the normalized name of the return type. ; A normalized name is fully qualified and has all typedef desugared except for the 'special' typedef which include Double32_t, Float16_t, [U]Long64_t and std::string. It also has std:: removed [This is subject to change]. ; Definition at line 164 of file TFunction.cxx. ◆ GetSignature(). const char * TFunction::GetSignature ; (; ). Return signature of function. ; Definition at line 122 of file TFunction.cxx. ◆ InterfaceMethod(). void * TFunction::InterfaceMethod ; (; ); const. Return pointer to the interface method. ; Using this pointer we can find which TF",MatchSource.WIKI,doc/master/classTFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFunction.html
https://root.cern/doc/master/classTFunction.html:13255,Deployability,update,updated,13255," from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; virtual void CreateSignature ();  Using the CINT method arg information to create a complete signature string. ;  ;  Protected Member Functions inherited from TDictionary; Bool_t UpdateInterpreterStateMarker ();  the Cling ID of the transaction that last updated the object ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; MethodInfo_t * fInfo;  ; TString fMangledName;  ; TList * fMethodArgs;  ; TString fSignature;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Friends; class TCling;  ; class TMethodCall;  . Additional Inherited Members;  Public Types inherited from TDictionary; typedef const void * DeclId_t;  ; enum class  EMemberSelection { kNoUsingDecls; , kOnlyUsingDecls; , kAlsoUsingDecls; };  Kinds of members to include in lists. More...;  ; enum  ESTLType { ;   kNone = ROOT::kNotSTL; , kVector = ROOT::kSTLvector; , kList = ROOT::kSTLlist; , kForwardlist = ROOT::kSTLforwardlist; , ;   kDeque = ROOT::kSTLdeque; , kMap = ROOT::kSTLmap; , kMultimap = ROOT::kSTLmultimap; , kSet = ROOT::kSTLset; , ;   kMultiset = ROOT::kSTLmultiset; , kUnordere",MatchSource.WIKI,doc/master/classTFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFunction.html
https://root.cern/doc/master/classTFunction.html:1879,Integrability,interface,interface,1879," char *newname="""") const override;  Clone method. ;  ; Long_t ExtraProperty () const;  Get property description word. For meaning of bits see EProperty. ;  ; DeclId_t GetDeclId () const;  ; TList * GetListOfMethodArgs ();  Return list containing the TMethodArgs of a TFunction. ;  ; virtual const char * GetMangledName () const;  Returns the mangled name as defined by CINT, or 0 in case of error. ;  ; Int_t GetNargs () const;  Number of function arguments. ;  ; Int_t GetNargsOpt () const;  Number of function optional (default) arguments. ;  ; virtual const char * GetPrototype () const;  Returns the prototype of a function as defined by CINT, or 0 in case of error. ;  ; const char * GetReturnTypeName () const;  Get full type description of function return type, e,g.: ""class TDirectory*"". ;  ; std::string GetReturnTypeNormalizedName () const;  Get the normalized name of the return type. ;  ; const char * GetSignature ();  Return signature of function. ;  ; void * InterfaceMethod () const;  Return pointer to the interface method. ;  ; TClass * IsA () const override;  ; virtual Bool_t IsValid ();  Return true if this function object is pointing to a currently loaded function. ;  ; void ls (Option_t *option="""") const override;  List TFunction name and title. ;  ; TFunction & operator= (const TFunction &rhs);  Assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TFunction name and title. ;  ; Long_t Property () const override;  Get property description word. For meaning of bits see EProperty. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual bool Update (MethodInfo_t *info);  Update the TFunction to reflect the new info. ;  ;  Public Member Functions inherited from TDictionary;  TDictionary ();  ;  TDictionary (const char *name);  ;  TDictionary (const TDictionary &dict);  ; virtual ~TDictionary ();  ; void CreateAttributeMap ();  ; TDictAttri",MatchSource.WIKI,doc/master/classTFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFunction.html
https://root.cern/doc/master/classTFunction.html:6244,Integrability,message,message,6244,"ject. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFunction.html
https://root.cern/doc/master/classTFunction.html:6785,Integrability,message,message,6785,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFunction.html
https://root.cern/doc/master/classTFunction.html:7775,Integrability,message,message,7775,"ssue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class shou",MatchSource.WIKI,doc/master/classTFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFunction.html
https://root.cern/doc/master/classTFunction.html:10869,Integrability,message,message,10869,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TDictionary; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Vers",MatchSource.WIKI,doc/master/classTFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFunction.html
https://root.cern/doc/master/classTFunction.html:11242,Integrability,message,message,11242," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TDictionary; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TDictionary * GetDictionary (const char *name);  Retrieve the type (class, fundamental type, typedef etc) named ""name"". ;  ; static TDictionary * GetDictionary (const std::type_info &typeinfo);  ; static bool WantsRegularMembers (EMemberSelection sel);  ; static bool WantsUsingDecls (EMemberSelection",MatchSource.WIKI,doc/master/classTFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFunction.html
https://root.cern/doc/master/classTFunction.html:19025,Integrability,interface,interface,19025,"(; ); const. virtual . Returns the prototype of a function as defined by CINT, or 0 in case of error. ; Definition at line 261 of file TFunction.cxx. ◆ GetReturnTypeName(). const char * TFunction::GetReturnTypeName ; (; ); const. Get full type description of function return type, e,g.: ""class TDirectory*"". ; Definition at line 150 of file TFunction.cxx. ◆ GetReturnTypeNormalizedName(). std::string TFunction::GetReturnTypeNormalizedName ; (; ); const. Get the normalized name of the return type. ; A normalized name is fully qualified and has all typedef desugared except for the 'special' typedef which include Double32_t, Float16_t, [U]Long64_t and std::string. It also has std:: removed [This is subject to change]. ; Definition at line 164 of file TFunction.cxx. ◆ GetSignature(). const char * TFunction::GetSignature ; (; ). Return signature of function. ; Definition at line 122 of file TFunction.cxx. ◆ InterfaceMethod(). void * TFunction::InterfaceMethod ; (; ); const. Return pointer to the interface method. ; Using this pointer we can find which TFunction belongs to a CINT MethodInfo object. Both need to have the same InterfaceMethod pointer. ; Definition at line 221 of file TFunction.cxx. ◆ IsA(). TClass * TFunction::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TDictionary.; Reimplemented in TMethod.; Definition at line 68 of file TFunction.h. ◆ IsValid(). Bool_t TFunction::IsValid ; (; ). virtual . Return true if this function object is pointing to a currently loaded function. ; If a function is unloaded after the TFunction is created, the TFunction will be set to be invalid. ; Reimplemented in TMethod.; Definition at line 232 of file TFunction.cxx. ◆ ls(). void TFunction::ls ; (; Option_t * ; option = """"); const. overridevirtual . List TFunction name and title. ; Reimplemented from TObject.; Definition at line 273 of file TFunction.cxx. ◆ operator=(). TFunction & TFunction::operator= ; (; const TFunction & ",MatchSource.WIKI,doc/master/classTFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFunction.html
https://root.cern/doc/master/classTFunction.html:2661,Modifiability,inherit,inherited,2661,"lass * IsA () const override;  ; virtual Bool_t IsValid ();  Return true if this function object is pointing to a currently loaded function. ;  ; void ls (Option_t *option="""") const override;  List TFunction name and title. ;  ; TFunction & operator= (const TFunction &rhs);  Assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TFunction name and title. ;  ; Long_t Property () const override;  Get property description word. For meaning of bits see EProperty. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual bool Update (MethodInfo_t *info);  Update the TFunction to reflect the new info. ;  ;  Public Member Functions inherited from TDictionary;  TDictionary ();  ;  TDictionary (const char *name);  ;  TDictionary (const TDictionary &dict);  ; virtual ~TDictionary ();  ; void CreateAttributeMap ();  ; TDictAttributeMap * GetAttributeMap () const;  ; TDictionary & operator= (const TDictionary &other);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Re",MatchSource.WIKI,doc/master/classTFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFunction.html
https://root.cern/doc/master/classTFunction.html:3041,Modifiability,inherit,inherited,3041,"lass * IsA () const override;  ; virtual Bool_t IsValid ();  Return true if this function object is pointing to a currently loaded function. ;  ; void ls (Option_t *option="""") const override;  List TFunction name and title. ;  ; TFunction & operator= (const TFunction &rhs);  Assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TFunction name and title. ;  ; Long_t Property () const override;  Get property description word. For meaning of bits see EProperty. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual bool Update (MethodInfo_t *info);  Update the TFunction to reflect the new info. ;  ;  Public Member Functions inherited from TDictionary;  TDictionary ();  ;  TDictionary (const char *name);  ;  TDictionary (const TDictionary &dict);  ; virtual ~TDictionary ();  ; void CreateAttributeMap ();  ; TDictAttributeMap * GetAttributeMap () const;  ; TDictionary & operator= (const TDictionary &other);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Re",MatchSource.WIKI,doc/master/classTFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFunction.html
https://root.cern/doc/master/classTFunction.html:4781,Modifiability,inherit,inherited,4781,"ide;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw",MatchSource.WIKI,doc/master/classTFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFunction.html
https://root.cern/doc/master/classTFunction.html:5874,Modifiability,inherit,inheritance,5874,"  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFunction.html
https://root.cern/doc/master/classTFunction.html:7873,Modifiability,inherit,inherits,7873,"e) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is",MatchSource.WIKI,doc/master/classTFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFunction.html
https://root.cern/doc/master/classTFunction.html:7990,Modifiability,inherit,inherits,7990,"t be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base ",MatchSource.WIKI,doc/master/classTFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFunction.html
https://root.cern/doc/master/classTFunction.html:11743,Modifiability,inherit,inherited,11743," SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TDictionary; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TDictionary * GetDictionary (const char *name);  Retrieve the type (class, fundamental type, typedef etc) named ""name"". ;  ; static TDictionary * GetDictionary (const std::type_info &typeinfo);  ; static bool WantsRegularMembers (EMemberSelection sel);  ; static bool WantsUsingDecls (EMemberSelection sel);  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object s",MatchSource.WIKI,doc/master/classTFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFunction.html
https://root.cern/doc/master/classTFunction.html:12276,Modifiability,inherit,inherited,12276,"rtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TDictionary; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TDictionary * GetDictionary (const char *name);  Retrieve the type (class, fundamental type, typedef etc) named ""name"". ;  ; static TDictionary * GetDictionary (const std::type_info &typeinfo);  ; static bool WantsRegularMembers (EMemberSelection sel);  ; static bool WantsUsingDecls (EMemberSelection sel);  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; virtual void CreateSignature ();  Using the CINT method arg information to create a complete signature string. ;  ;  Protected Member Functions inherited from TDictionary; Bool_t UpdateInterpreterStateMarker ();  the Cling ID of the transaction that last updated the object ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, cons",MatchSource.WIKI,doc/master/classTFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFunction.html
https://root.cern/doc/master/classTFunction.html:12486,Modifiability,inherit,inherited,12486,"rtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TDictionary; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TDictionary * GetDictionary (const char *name);  Retrieve the type (class, fundamental type, typedef etc) named ""name"". ;  ; static TDictionary * GetDictionary (const std::type_info &typeinfo);  ; static bool WantsRegularMembers (EMemberSelection sel);  ; static bool WantsUsingDecls (EMemberSelection sel);  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; virtual void CreateSignature ();  Using the CINT method arg information to create a complete signature string. ;  ;  Protected Member Functions inherited from TDictionary; Bool_t UpdateInterpreterStateMarker ();  the Cling ID of the transaction that last updated the object ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, cons",MatchSource.WIKI,doc/master/classTFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFunction.html
https://root.cern/doc/master/classTFunction.html:13144,Modifiability,inherit,inherited,13144," from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; virtual void CreateSignature ();  Using the CINT method arg information to create a complete signature string. ;  ;  Protected Member Functions inherited from TDictionary; Bool_t UpdateInterpreterStateMarker ();  the Cling ID of the transaction that last updated the object ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; MethodInfo_t * fInfo;  ; TString fMangledName;  ; TList * fMethodArgs;  ; TString fSignature;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Friends; class TCling;  ; class TMethodCall;  . Additional Inherited Members;  Public Types inherited from TDictionary; typedef const void * DeclId_t;  ; enum class  EMemberSelection { kNoUsingDecls; , kOnlyUsingDecls; , kAlsoUsingDecls; };  Kinds of members to include in lists. More...;  ; enum  ESTLType { ;   kNone = ROOT::kNotSTL; , kVector = ROOT::kSTLvector; , kList = ROOT::kSTLlist; , kForwardlist = ROOT::kSTLforwardlist; , ;   kDeque = ROOT::kSTLdeque; , kMap = ROOT::kSTLmap; , kMultimap = ROOT::kSTLmultimap; , kSet = ROOT::kSTLset; , ;   kMultiset = ROOT::kSTLmultiset; , kUnordere",MatchSource.WIKI,doc/master/classTFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFunction.html
https://root.cern/doc/master/classTFunction.html:13307,Modifiability,inherit,inherited,13307," from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; virtual void CreateSignature ();  Using the CINT method arg information to create a complete signature string. ;  ;  Protected Member Functions inherited from TDictionary; Bool_t UpdateInterpreterStateMarker ();  the Cling ID of the transaction that last updated the object ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; MethodInfo_t * fInfo;  ; TString fMangledName;  ; TList * fMethodArgs;  ; TString fSignature;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Friends; class TCling;  ; class TMethodCall;  . Additional Inherited Members;  Public Types inherited from TDictionary; typedef const void * DeclId_t;  ; enum class  EMemberSelection { kNoUsingDecls; , kOnlyUsingDecls; , kAlsoUsingDecls; };  Kinds of members to include in lists. More...;  ; enum  ESTLType { ;   kNone = ROOT::kNotSTL; , kVector = ROOT::kSTLvector; , kList = ROOT::kSTLlist; , kForwardlist = ROOT::kSTLforwardlist; , ;   kDeque = ROOT::kSTLdeque; , kMap = ROOT::kSTLmap; , kMultimap = ROOT::kSTLmultimap; , kSet = ROOT::kSTLset; , ;   kMultiset = ROOT::kSTLmultiset; , kUnordere",MatchSource.WIKI,doc/master/classTFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFunction.html
https://root.cern/doc/master/classTFunction.html:13631,Modifiability,inherit,inherited,13631,"expr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; virtual void CreateSignature ();  Using the CINT method arg information to create a complete signature string. ;  ;  Protected Member Functions inherited from TDictionary; Bool_t UpdateInterpreterStateMarker ();  the Cling ID of the transaction that last updated the object ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; MethodInfo_t * fInfo;  ; TString fMangledName;  ; TList * fMethodArgs;  ; TString fSignature;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Friends; class TCling;  ; class TMethodCall;  . Additional Inherited Members;  Public Types inherited from TDictionary; typedef const void * DeclId_t;  ; enum class  EMemberSelection { kNoUsingDecls; , kOnlyUsingDecls; , kAlsoUsingDecls; };  Kinds of members to include in lists. More...;  ; enum  ESTLType { ;   kNone = ROOT::kNotSTL; , kVector = ROOT::kSTLvector; , kList = ROOT::kSTLlist; , kForwardlist = ROOT::kSTLforwardlist; , ;   kDeque = ROOT::kSTLdeque; , kMap = ROOT::kSTLmap; , kMultimap = ROOT::kSTLmultimap; , kSet = ROOT::kSTLset; , ;   kMultiset = ROOT::kSTLmultiset; , kUnorderedSet = ROOT::kSTLunorderedset; , kUnorderedMultiset = ROOT::kSTLunorderedmultiset; , kUnorderedMap = ROOT::kSTLunorderedmap; , ;   kUnorderedMultimap = ROOT::kSTLunorderedmultimap; , kBitset = ROOT::kSTLbitset. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted",MatchSource.WIKI,doc/master/classTFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFunction.html
https://root.cern/doc/master/classTFunction.html:13783,Modifiability,inherit,inherited,13783,"r only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; virtual void CreateSignature ();  Using the CINT method arg information to create a complete signature string. ;  ;  Protected Member Functions inherited from TDictionary; Bool_t UpdateInterpreterStateMarker ();  the Cling ID of the transaction that last updated the object ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; MethodInfo_t * fInfo;  ; TString fMangledName;  ; TList * fMethodArgs;  ; TString fSignature;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Friends; class TCling;  ; class TMethodCall;  . Additional Inherited Members;  Public Types inherited from TDictionary; typedef const void * DeclId_t;  ; enum class  EMemberSelection { kNoUsingDecls; , kOnlyUsingDecls; , kAlsoUsingDecls; };  Kinds of members to include in lists. More...;  ; enum  ESTLType { ;   kNone = ROOT::kNotSTL; , kVector = ROOT::kSTLvector; , kList = ROOT::kSTLlist; , kForwardlist = ROOT::kSTLforwardlist; , ;   kDeque = ROOT::kSTLdeque; , kMap = ROOT::kSTLmap; , kMultimap = ROOT::kSTLmultimap; , kSet = ROOT::kSTLset; , ;   kMultiset = ROOT::kSTLmultiset; , kUnorderedSet = ROOT::kSTLunorderedset; , kUnorderedMultiset = ROOT::kSTLunorderedmultiset; , kUnorderedMap = ROOT::kSTLunorderedmap; , ;   kUnorderedMultimap = ROOT::kSTLunorderedmultimap; , kBitset = ROOT::kSTLbitset. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL",MatchSource.WIKI,doc/master/classTFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFunction.html
https://root.cern/doc/master/classTFunction.html:14517,Modifiability,inherit,inherited,14517,"ng fSignature;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Friends; class TCling;  ; class TMethodCall;  . Additional Inherited Members;  Public Types inherited from TDictionary; typedef const void * DeclId_t;  ; enum class  EMemberSelection { kNoUsingDecls; , kOnlyUsingDecls; , kAlsoUsingDecls; };  Kinds of members to include in lists. More...;  ; enum  ESTLType { ;   kNone = ROOT::kNotSTL; , kVector = ROOT::kSTLvector; , kList = ROOT::kSTLlist; , kForwardlist = ROOT::kSTLforwardlist; , ;   kDeque = ROOT::kSTLdeque; , kMap = ROOT::kSTLmap; , kMultimap = ROOT::kSTLmultimap; , kSet = ROOT::kSTLset; , ;   kMultiset = ROOT::kSTLmultiset; , kUnorderedSet = ROOT::kSTLunorderedset; , kUnorderedMultiset = ROOT::kSTLunorderedmultiset; , kUnorderedMap = ROOT::kSTLunorderedmap; , ;   kUnorderedMultimap = ROOT::kSTLunorderedmultimap; , kBitset = ROOT::kSTLbitset. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TFunction.h>. Inheritance diagram for TFunction:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TFunction() [1/2]. TFunction::TFunction ; (; MethodInfo_t * ; info = nullptr). Default TFunction ctor. ; TFunctions are constructed in TROOT via a call to TCling::Up",MatchSource.WIKI,doc/master/classTFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFunction.html
https://root.cern/doc/master/classTFunction.html:15158,Modifiability,inherit,inherited,15158,"kMultimap = ROOT::kSTLmultimap; , kSet = ROOT::kSTLset; , ;   kMultiset = ROOT::kSTLmultiset; , kUnorderedSet = ROOT::kSTLunorderedset; , kUnorderedMultiset = ROOT::kSTLunorderedmultiset; , kUnorderedMap = ROOT::kSTLunorderedmap; , ;   kUnorderedMultimap = ROOT::kSTLunorderedmultimap; , kBitset = ROOT::kSTLbitset. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TFunction.h>. Inheritance diagram for TFunction:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TFunction() [1/2]. TFunction::TFunction ; (; MethodInfo_t * ; info = nullptr). Default TFunction ctor. ; TFunctions are constructed in TROOT via a call to TCling::UpdateListOfGlobalFunctions(). ; Definition at line 35 of file TFunction.cxx. ◆ TFunction() [2/2]. TFunction::TFunction ; (; const TFunction & ; orig). Copy operator. ; Definition at line 52 of file TFunction.cxx. ◆ ~TFunction(). TFunction::~TFunction ; (; ). virtual . TFunction dtor deletes adopted CINT MethodInfo. ; Definition at line 90 of file TFunction.cxx. Member Function Documentation. ◆ Class(). static TClass * TFunction::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TFunction::Class_Name ; (; ). static . ReturnsName of this c",MatchSource.WIKI,doc/master/classTFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFunction.html
https://root.cern/doc/master/classTFunction.html:2028,Performance,load,loaded,2028,"rd. For meaning of bits see EProperty. ;  ; DeclId_t GetDeclId () const;  ; TList * GetListOfMethodArgs ();  Return list containing the TMethodArgs of a TFunction. ;  ; virtual const char * GetMangledName () const;  Returns the mangled name as defined by CINT, or 0 in case of error. ;  ; Int_t GetNargs () const;  Number of function arguments. ;  ; Int_t GetNargsOpt () const;  Number of function optional (default) arguments. ;  ; virtual const char * GetPrototype () const;  Returns the prototype of a function as defined by CINT, or 0 in case of error. ;  ; const char * GetReturnTypeName () const;  Get full type description of function return type, e,g.: ""class TDirectory*"". ;  ; std::string GetReturnTypeNormalizedName () const;  Get the normalized name of the return type. ;  ; const char * GetSignature ();  Return signature of function. ;  ; void * InterfaceMethod () const;  Return pointer to the interface method. ;  ; TClass * IsA () const override;  ; virtual Bool_t IsValid ();  Return true if this function object is pointing to a currently loaded function. ;  ; void ls (Option_t *option="""") const override;  List TFunction name and title. ;  ; TFunction & operator= (const TFunction &rhs);  Assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TFunction name and title. ;  ; Long_t Property () const override;  Get property description word. For meaning of bits see EProperty. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual bool Update (MethodInfo_t *info);  Update the TFunction to reflect the new info. ;  ;  Public Member Functions inherited from TDictionary;  TDictionary ();  ;  TDictionary (const char *name);  ;  TDictionary (const TDictionary &dict);  ; virtual ~TDictionary ();  ; void CreateAttributeMap ();  ; TDictAttributeMap * GetAttributeMap () const;  ; TDictionary & operator= (const TDictionary &other);  ; void StreamerNVirtu",MatchSource.WIKI,doc/master/classTFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFunction.html
https://root.cern/doc/master/classTFunction.html:19566,Performance,load,loaded,19566,"s fully qualified and has all typedef desugared except for the 'special' typedef which include Double32_t, Float16_t, [U]Long64_t and std::string. It also has std:: removed [This is subject to change]. ; Definition at line 164 of file TFunction.cxx. ◆ GetSignature(). const char * TFunction::GetSignature ; (; ). Return signature of function. ; Definition at line 122 of file TFunction.cxx. ◆ InterfaceMethod(). void * TFunction::InterfaceMethod ; (; ); const. Return pointer to the interface method. ; Using this pointer we can find which TFunction belongs to a CINT MethodInfo object. Both need to have the same InterfaceMethod pointer. ; Definition at line 221 of file TFunction.cxx. ◆ IsA(). TClass * TFunction::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TDictionary.; Reimplemented in TMethod.; Definition at line 68 of file TFunction.h. ◆ IsValid(). Bool_t TFunction::IsValid ; (; ). virtual . Return true if this function object is pointing to a currently loaded function. ; If a function is unloaded after the TFunction is created, the TFunction will be set to be invalid. ; Reimplemented in TMethod.; Definition at line 232 of file TFunction.cxx. ◆ ls(). void TFunction::ls ; (; Option_t * ; option = """"); const. overridevirtual . List TFunction name and title. ; Reimplemented from TObject.; Definition at line 273 of file TFunction.cxx. ◆ operator=(). TFunction & TFunction::operator= ; (; const TFunction & ; rhs). Assignment operator. ; Definition at line 66 of file TFunction.cxx. ◆ Print(). void TFunction::Print ; (; Option_t * ; option = """"); const. overridevirtual . Print TFunction name and title. ; Reimplemented from TObject.; Definition at line 283 of file TFunction.cxx. ◆ Property(). Long_t TFunction::Property ; (; ); const. overridevirtual . Get property description word. For meaning of bits see EProperty. ; Implements TDictionary.; Definition at line 193 of file TFunction.cxx. ◆ Streamer(). void TFunction::St",MatchSource.WIKI,doc/master/classTFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFunction.html
https://root.cern/doc/master/classTFunction.html:508,Security,access,accessible,508,". ROOT: TFunction Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; Friends |; List of all members ; TFunction Class Reference. ; Global functions class (global functions are obtained from CINT). ; This class describes one single global function. The TROOT class contains a list of all currently defined global functions (accessible via TROOT::GetListOfGlobalFunctions()). ; Definition at line 30 of file TFunction.h. Public Member Functions;  TFunction (const TFunction &orig);  Copy operator. ;  ;  TFunction (MethodInfo_t *info=nullptr);  Default TFunction ctor. ;  ; virtual ~TFunction ();  TFunction dtor deletes adopted CINT MethodInfo. ;  ; TObject * Clone (const char *newname="""") const override;  Clone method. ;  ; Long_t ExtraProperty () const;  Get property description word. For meaning of bits see EProperty. ;  ; DeclId_t GetDeclId () const;  ; TList * GetListOfMethodArgs ();  Return list containing the TMethodArgs of a TFunction. ;  ; virtual const char * GetMangledName () const;  Returns the mangled name as defined by CINT, or 0 in case of error. ;  ; Int_t GetNargs () const;  Number of function arguments. ;  ; Int_t GetNargsOpt () const;  Number of function optional (default) arguments. ;  ; virtual const char * GetPrototype () const;  Returns the prototype of a function as defined by CINT, or 0 in case of error. ;  ; const char * GetReturnTypeName () const;  Get full type description of function return type, e,g.: ""class TDirectory*"". ;  ; std::string GetReturnTypeNormalizedName () const;  Get the normalized name of the return type. ;  ; const char * GetSignature ();  Return signature of function. ;  ; void * InterfaceMethod () const;  Return pointer to the interface method. ;  ; TClass * IsA () const override;  ; virtual Bool_t IsValid ();  Return true if this function object ",MatchSource.WIKI,doc/master/classTFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFunction.html
https://root.cern/doc/master/classTFunction.html:3909,Security,hash,hash,3909,"ctionary & operator= (const TDictionary &other);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;",MatchSource.WIKI,doc/master/classTFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFunction.html
https://root.cern/doc/master/classTFunctionTemplate.html:5313,Availability,error,error,5313,"ject. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTFunctionTemplate.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFunctionTemplate.html
https://root.cern/doc/master/classTFunctionTemplate.html:5402,Availability,error,error,5402,"ecord whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual ",MatchSource.WIKI,doc/master/classTFunctionTemplate.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFunctionTemplate.html
https://root.cern/doc/master/classTFunctionTemplate.html:5557,Availability,error,error,5557,"Name () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute ",MatchSource.WIKI,doc/master/classTFunctionTemplate.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFunctionTemplate.html
https://root.cern/doc/master/classTFunctionTemplate.html:5854,Availability,error,error,5854,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTFunctionTemplate.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFunctionTemplate.html
https://root.cern/doc/master/classTFunctionTemplate.html:9938,Availability,error,error,9938,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TDictionary; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Vers",MatchSource.WIKI,doc/master/classTFunctionTemplate.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFunctionTemplate.html
https://root.cern/doc/master/classTFunctionTemplate.html:13827,Deployability,update,updated,13827,"deredmultiset; , kUnorderedMap = ROOT::kSTLunorderedmap; , ;   kUnorderedMultimap = ROOT::kSTLunorderedmultimap; , kBitset = ROOT::kSTLbitset. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TDictionary; Bool_t UpdateInterpreterStateMarker ();  the Cling ID of the transaction that last updated the object ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TFunctionTemplate.h>. Inheritance diagram for TFunctionTemplate:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TFunctionTemplate() [1/2]. TFunctionTemplate::TFunctionTemplate ; (; FuncTempInfo_t * ; info, . TClass * ; cl . ). Default TFunctionTemplate ctor. ; Definition at line 26 of file TFunctionTemplate.cxx. ◆ TFunctionTemplate() [2/2]. TFunctionTemplate::TFunctionTemplate ; (; const TFunctionTemplate & ; orig). Copy operator. ; Definition at line 38 of file TFunctionTemplate.cxx. ◆ ~TFunctionTemplate(). TFunctionTemplate::~TFunctionTemplate ; (; ). virtual . TFunctionTemplate dtor deletes adopted CINT FuncTempInfo. ; Definition at line ",MatchSource.WIKI,doc/master/classTFunctionTemplate.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFunctionTemplate.html
https://root.cern/doc/master/classTFunctionTemplate.html:5319,Integrability,message,message,5319,"ject. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTFunctionTemplate.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFunctionTemplate.html
https://root.cern/doc/master/classTFunctionTemplate.html:5860,Integrability,message,message,5860,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTFunctionTemplate.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFunctionTemplate.html
https://root.cern/doc/master/classTFunctionTemplate.html:6850,Integrability,message,message,6850,"ssue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class shou",MatchSource.WIKI,doc/master/classTFunctionTemplate.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFunctionTemplate.html
https://root.cern/doc/master/classTFunctionTemplate.html:9944,Integrability,message,message,9944,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TDictionary; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Vers",MatchSource.WIKI,doc/master/classTFunctionTemplate.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFunctionTemplate.html
https://root.cern/doc/master/classTFunctionTemplate.html:10317,Integrability,message,message,10317," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TDictionary; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TDictionary * GetDictionary (const char *name);  Retrieve the type (class, fundamental type, typedef etc) named ""name"". ;  ; static TDictionary * GetDictionary (const std::type_info &typeinfo);  ; static bool WantsRegularMembers (EMemberSelection sel);  ; static bool WantsUsingDecls (EMemberSelection",MatchSource.WIKI,doc/master/classTFunctionTemplate.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFunctionTemplate.html
https://root.cern/doc/master/classTFunctionTemplate.html:1736,Modifiability,inherit,inherited,1736," const;  Number of function optional (default) arguments. ;  ; UInt_t GetTemplateNargs () const;  Number of function arguments. ;  ; TClass * IsA () const override;  ; virtual Bool_t IsValid ();  Return true if this function template object is pointing to a currently loaded function. ;  ; TFunctionTemplate & operator= (const TFunctionTemplate &rhs);  Assignment operator. ;  ; Long_t Property () const override;  Get property description word. For meaning of bits see EProperty. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual bool Update (FuncTempInfo_t *info);  Update the TFunctionTemplate to reflect the new info. ;  ;  Public Member Functions inherited from TDictionary;  TDictionary ();  ;  TDictionary (const char *name);  ;  TDictionary (const TDictionary &dict);  ; virtual ~TDictionary ();  ; void CreateAttributeMap ();  ; TDictAttributeMap * GetAttributeMap () const;  ; TDictionary & operator= (const TDictionary &other);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Re",MatchSource.WIKI,doc/master/classTFunctionTemplate.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFunctionTemplate.html
https://root.cern/doc/master/classTFunctionTemplate.html:2116,Modifiability,inherit,inherited,2116," const;  Number of function optional (default) arguments. ;  ; UInt_t GetTemplateNargs () const;  Number of function arguments. ;  ; TClass * IsA () const override;  ; virtual Bool_t IsValid ();  Return true if this function template object is pointing to a currently loaded function. ;  ; TFunctionTemplate & operator= (const TFunctionTemplate &rhs);  Assignment operator. ;  ; Long_t Property () const override;  Get property description word. For meaning of bits see EProperty. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual bool Update (FuncTempInfo_t *info);  Update the TFunctionTemplate to reflect the new info. ;  ;  Public Member Functions inherited from TDictionary;  TDictionary ();  ;  TDictionary (const char *name);  ;  TDictionary (const TDictionary &dict);  ; virtual ~TDictionary ();  ; void CreateAttributeMap ();  ; TDictAttributeMap * GetAttributeMap () const;  ; TDictionary & operator= (const TDictionary &other);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Re",MatchSource.WIKI,doc/master/classTFunctionTemplate.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFunctionTemplate.html
https://root.cern/doc/master/classTFunctionTemplate.html:3856,Modifiability,inherit,inherited,3856,"ide;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw",MatchSource.WIKI,doc/master/classTFunctionTemplate.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFunctionTemplate.html
https://root.cern/doc/master/classTFunctionTemplate.html:4949,Modifiability,inherit,inheritance,4949,"  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTFunctionTemplate.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFunctionTemplate.html
https://root.cern/doc/master/classTFunctionTemplate.html:6948,Modifiability,inherit,inherits,6948,"e) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is",MatchSource.WIKI,doc/master/classTFunctionTemplate.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFunctionTemplate.html
https://root.cern/doc/master/classTFunctionTemplate.html:7065,Modifiability,inherit,inherits,7065,"t be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base ",MatchSource.WIKI,doc/master/classTFunctionTemplate.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFunctionTemplate.html
https://root.cern/doc/master/classTFunctionTemplate.html:10818,Modifiability,inherit,inherited,10818," SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TDictionary; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TDictionary * GetDictionary (const char *name);  Retrieve the type (class, fundamental type, typedef etc) named ""name"". ;  ; static TDictionary * GetDictionary (const std::type_info &typeinfo);  ; static bool WantsRegularMembers (EMemberSelection sel);  ; static bool WantsUsingDecls (EMemberSelection sel);  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object s",MatchSource.WIKI,doc/master/classTFunctionTemplate.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFunctionTemplate.html
https://root.cern/doc/master/classTFunctionTemplate.html:11351,Modifiability,inherit,inherited,11351,"rtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TDictionary; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TDictionary * GetDictionary (const char *name);  Retrieve the type (class, fundamental type, typedef etc) named ""name"". ;  ; static TDictionary * GetDictionary (const std::type_info &typeinfo);  ; static bool WantsRegularMembers (EMemberSelection sel);  ; static bool WantsUsingDecls (EMemberSelection sel);  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; TClass * fClass;  ; FuncTempInfo_t * fInfo;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TDictionary; typedef const void * DeclId_t;  ; enum class  EMemberSelection { kNoUsingDecls; , kOnlyUsingDecls; , kAlsoUsingDecls; };  Kinds of members to include in lists. More...;  ; enum  ESTLType { ;   kN",MatchSource.WIKI,doc/master/classTFunctionTemplate.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFunctionTemplate.html
https://root.cern/doc/master/classTFunctionTemplate.html:11561,Modifiability,inherit,inherited,11561,"rtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TDictionary; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TDictionary * GetDictionary (const char *name);  Retrieve the type (class, fundamental type, typedef etc) named ""name"". ;  ; static TDictionary * GetDictionary (const std::type_info &typeinfo);  ; static bool WantsRegularMembers (EMemberSelection sel);  ; static bool WantsUsingDecls (EMemberSelection sel);  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; TClass * fClass;  ; FuncTempInfo_t * fInfo;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TDictionary; typedef const void * DeclId_t;  ; enum class  EMemberSelection { kNoUsingDecls; , kOnlyUsingDecls; , kAlsoUsingDecls; };  Kinds of members to include in lists. More...;  ; enum  ESTLType { ;   kN",MatchSource.WIKI,doc/master/classTFunctionTemplate.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFunctionTemplate.html
https://root.cern/doc/master/classTFunctionTemplate.html:12138,Modifiability,inherit,inherited,12138,"name"". ;  ; static TDictionary * GetDictionary (const std::type_info &typeinfo);  ; static bool WantsRegularMembers (EMemberSelection sel);  ; static bool WantsUsingDecls (EMemberSelection sel);  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; TClass * fClass;  ; FuncTempInfo_t * fInfo;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TDictionary; typedef const void * DeclId_t;  ; enum class  EMemberSelection { kNoUsingDecls; , kOnlyUsingDecls; , kAlsoUsingDecls; };  Kinds of members to include in lists. More...;  ; enum  ESTLType { ;   kNone = ROOT::kNotSTL; , kVector = ROOT::kSTLvector; , kList = ROOT::kSTLlist; , kForwardlist = ROOT::kSTLforwardlist; , ;   kDeque = ROOT::kSTLdeque; , kMap = ROOT::kSTLmap; , kMultimap = ROOT::kSTLmultimap; , kSet = ROOT::kSTLset; , ;   kMultiset = ROOT::kSTLmultiset; , kUnorderedSet = ROOT::kSTLunorderedset; , kUnorderedMultiset = ROOT::kSTLunorderedmultiset; , kUnorderedMap = ROOT::kSTLunorderedmap; , ;   kUnorderedMultimap = ROOT::kSTLunorderedmultimap; , kBitset = ROOT::kSTLbitset. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ; ",MatchSource.WIKI,doc/master/classTFunctionTemplate.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFunctionTemplate.html
https://root.cern/doc/master/classTFunctionTemplate.html:12242,Modifiability,inherit,inherited,12242,");  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; TClass * fClass;  ; FuncTempInfo_t * fInfo;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TDictionary; typedef const void * DeclId_t;  ; enum class  EMemberSelection { kNoUsingDecls; , kOnlyUsingDecls; , kAlsoUsingDecls; };  Kinds of members to include in lists. More...;  ; enum  ESTLType { ;   kNone = ROOT::kNotSTL; , kVector = ROOT::kSTLvector; , kList = ROOT::kSTLlist; , kForwardlist = ROOT::kSTLforwardlist; , ;   kDeque = ROOT::kSTLdeque; , kMap = ROOT::kSTLmap; , kMultimap = ROOT::kSTLmultimap; , kSet = ROOT::kSTLset; , ;   kMultiset = ROOT::kSTLmultiset; , kUnorderedSet = ROOT::kSTLunorderedset; , kUnorderedMultiset = ROOT::kSTLunorderedmultiset; , kUnorderedMap = ROOT::kSTLunorderedmap; , ;   kUnorderedMultimap = ROOT::kSTLunorderedmultimap; , kBitset = ROOT::kSTLbitset. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL",MatchSource.WIKI,doc/master/classTFunctionTemplate.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFunctionTemplate.html
https://root.cern/doc/master/classTFunctionTemplate.html:12976,Modifiability,inherit,inherited,12976,"tected Attributes; TClass * fClass;  ; FuncTempInfo_t * fInfo;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TDictionary; typedef const void * DeclId_t;  ; enum class  EMemberSelection { kNoUsingDecls; , kOnlyUsingDecls; , kAlsoUsingDecls; };  Kinds of members to include in lists. More...;  ; enum  ESTLType { ;   kNone = ROOT::kNotSTL; , kVector = ROOT::kSTLvector; , kList = ROOT::kSTLlist; , kForwardlist = ROOT::kSTLforwardlist; , ;   kDeque = ROOT::kSTLdeque; , kMap = ROOT::kSTLmap; , kMultimap = ROOT::kSTLmultimap; , kSet = ROOT::kSTLset; , ;   kMultiset = ROOT::kSTLmultiset; , kUnorderedSet = ROOT::kSTLunorderedset; , kUnorderedMultiset = ROOT::kSTLunorderedmultiset; , kUnorderedMap = ROOT::kSTLunorderedmap; , ;   kUnorderedMultimap = ROOT::kSTLunorderedmultimap; , kBitset = ROOT::kSTLbitset. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TDictionary; Bool_t UpdateInterpreterStateMarker ();  the Cling ID of the transaction that last updated the object ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZom",MatchSource.WIKI,doc/master/classTFunctionTemplate.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFunctionTemplate.html
https://root.cern/doc/master/classTFunctionTemplate.html:13617,Modifiability,inherit,inherited,13617,"deredmultiset; , kUnorderedMap = ROOT::kSTLunorderedmap; , ;   kUnorderedMultimap = ROOT::kSTLunorderedmultimap; , kBitset = ROOT::kSTLbitset. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TDictionary; Bool_t UpdateInterpreterStateMarker ();  the Cling ID of the transaction that last updated the object ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TFunctionTemplate.h>. Inheritance diagram for TFunctionTemplate:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TFunctionTemplate() [1/2]. TFunctionTemplate::TFunctionTemplate ; (; FuncTempInfo_t * ; info, . TClass * ; cl . ). Default TFunctionTemplate ctor. ; Definition at line 26 of file TFunctionTemplate.cxx. ◆ TFunctionTemplate() [2/2]. TFunctionTemplate::TFunctionTemplate ; (; const TFunctionTemplate & ; orig). Copy operator. ; Definition at line 38 of file TFunctionTemplate.cxx. ◆ ~TFunctionTemplate(). TFunctionTemplate::~TFunctionTemplate ; (; ). virtual . TFunctionTemplate dtor deletes adopted CINT FuncTempInfo. ; Definition at line ",MatchSource.WIKI,doc/master/classTFunctionTemplate.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFunctionTemplate.html
https://root.cern/doc/master/classTFunctionTemplate.html:13716,Modifiability,inherit,inherited,13716,"deredmultiset; , kUnorderedMap = ROOT::kSTLunorderedmap; , ;   kUnorderedMultimap = ROOT::kSTLunorderedmultimap; , kBitset = ROOT::kSTLbitset. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TDictionary; Bool_t UpdateInterpreterStateMarker ();  the Cling ID of the transaction that last updated the object ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TFunctionTemplate.h>. Inheritance diagram for TFunctionTemplate:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TFunctionTemplate() [1/2]. TFunctionTemplate::TFunctionTemplate ; (; FuncTempInfo_t * ; info, . TClass * ; cl . ). Default TFunctionTemplate ctor. ; Definition at line 26 of file TFunctionTemplate.cxx. ◆ TFunctionTemplate() [2/2]. TFunctionTemplate::TFunctionTemplate ; (; const TFunctionTemplate & ; orig). Copy operator. ; Definition at line 38 of file TFunctionTemplate.cxx. ◆ ~TFunctionTemplate(). TFunctionTemplate::~TFunctionTemplate ; (; ). virtual . TFunctionTemplate dtor deletes adopted CINT FuncTempInfo. ; Definition at line ",MatchSource.WIKI,doc/master/classTFunctionTemplate.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFunctionTemplate.html
https://root.cern/doc/master/classTFunctionTemplate.html:13879,Modifiability,inherit,inherited,13879,"deredmultiset; , kUnorderedMap = ROOT::kSTLunorderedmap; , ;   kUnorderedMultimap = ROOT::kSTLunorderedmultimap; , kBitset = ROOT::kSTLbitset. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TDictionary; Bool_t UpdateInterpreterStateMarker ();  the Cling ID of the transaction that last updated the object ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TFunctionTemplate.h>. Inheritance diagram for TFunctionTemplate:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TFunctionTemplate() [1/2]. TFunctionTemplate::TFunctionTemplate ; (; FuncTempInfo_t * ; info, . TClass * ; cl . ). Default TFunctionTemplate ctor. ; Definition at line 26 of file TFunctionTemplate.cxx. ◆ TFunctionTemplate() [2/2]. TFunctionTemplate::TFunctionTemplate ; (; const TFunctionTemplate & ; orig). Copy operator. ; Definition at line 38 of file TFunctionTemplate.cxx. ◆ ~TFunctionTemplate(). TFunctionTemplate::~TFunctionTemplate ; (; ). virtual . TFunctionTemplate dtor deletes adopted CINT FuncTempInfo. ; Definition at line ",MatchSource.WIKI,doc/master/classTFunctionTemplate.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFunctionTemplate.html
https://root.cern/doc/master/classTFunctionTemplate.html:1247,Performance,load,loaded,1247,"lic Member Functions |; Protected Attributes |; List of all members ; TFunctionTemplate Class Reference. ; Dictionary for function template This class describes one single function template. ; Definition at line 26 of file TFunctionTemplate.h. Public Member Functions;  TFunctionTemplate (const TFunctionTemplate &orig);  Copy operator. ;  ;  TFunctionTemplate (FuncTempInfo_t *info, TClass *cl);  Default TFunctionTemplate ctor. ;  ; virtual ~TFunctionTemplate ();  TFunctionTemplate dtor deletes adopted CINT FuncTempInfo. ;  ; TObject * Clone (const char *newname="""") const override;  Clone method. ;  ; Long_t ExtraProperty () const;  Get the properties not already defined in Property.See TDictionary's EFunctionProperty. ;  ; DeclId_t GetDeclId () const;  ; UInt_t GetTemplateMinReqArgs () const;  Number of function optional (default) arguments. ;  ; UInt_t GetTemplateNargs () const;  Number of function arguments. ;  ; TClass * IsA () const override;  ; virtual Bool_t IsValid ();  Return true if this function template object is pointing to a currently loaded function. ;  ; TFunctionTemplate & operator= (const TFunctionTemplate &rhs);  Assignment operator. ;  ; Long_t Property () const override;  Get property description word. For meaning of bits see EProperty. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual bool Update (FuncTempInfo_t *info);  Update the TFunctionTemplate to reflect the new info. ;  ;  Public Member Functions inherited from TDictionary;  TDictionary ();  ;  TDictionary (const char *name);  ;  TDictionary (const TDictionary &dict);  ; virtual ~TDictionary ();  ; void CreateAttributeMap ();  ; TDictAttributeMap * GetAttributeMap () const;  ; TDictionary & operator= (const TDictionary &other);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, cons",MatchSource.WIKI,doc/master/classTFunctionTemplate.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFunctionTemplate.html
https://root.cern/doc/master/classTFunctionTemplate.html:16753,Performance,load,loaded,16753,"unctionTemplate::ExtraProperty ; (; ); const. Get the properties not already defined in Property.See TDictionary's EFunctionProperty. ; Definition at line 132 of file TFunctionTemplate.cxx. ◆ GetDeclId(). TDictionary::DeclId_t TFunctionTemplate::GetDeclId ; (; ); const. Definition at line 139 of file TFunctionTemplate.cxx. ◆ GetTemplateMinReqArgs(). UInt_t TFunctionTemplate::GetTemplateMinReqArgs ; (; ); const. Number of function optional (default) arguments. ; Definition at line 115 of file TFunctionTemplate.cxx. ◆ GetTemplateNargs(). UInt_t TFunctionTemplate::GetTemplateNargs ; (; ); const. Number of function arguments. ; Definition at line 107 of file TFunctionTemplate.cxx. ◆ IsA(). TClass * TFunctionTemplate::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TDictionary.; Definition at line 49 of file TFunctionTemplate.h. ◆ IsValid(). Bool_t TFunctionTemplate::IsValid ; (; ). virtual . Return true if this function template object is pointing to a currently loaded function. ; If a function is unloaded after the TFunction is created, the TFunction will be set to be invalid. ; Definition at line 89 of file TFunctionTemplate.cxx. ◆ operator=(). TFunctionTemplate & TFunctionTemplate::operator= ; (; const TFunctionTemplate & ; rhs). Assignment operator. ; Definition at line 50 of file TFunctionTemplate.cxx. ◆ Property(). Long_t TFunctionTemplate::Property ; (; ); const. overridevirtual . Get property description word. For meaning of bits see EProperty. ; Implements TDictionary.; Definition at line 124 of file TFunctionTemplate.cxx. ◆ Streamer(). void TFunctionTemplate::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TDictionary. ◆ StreamerNVirtual(). void TFunctionTemplate::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 49 of file TFunctionTemplate.h. ◆ Update(). Bool_t TFunctionTemplate::Update ; (; FuncTempInfo_",MatchSource.WIKI,doc/master/classTFunctionTemplate.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFunctionTemplate.html
https://root.cern/doc/master/classTFunctionTemplate.html:2984,Security,hash,hash,2984,"ctionary & operator= (const TDictionary &other);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;",MatchSource.WIKI,doc/master/classTFunctionTemplate.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTFunctionTemplate.html
https://root.cern/doc/master/classTG16ColorSelector.html:14520,Availability,error,error,14520,"="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTG16ColorSelector.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTG16ColorSelector.html
https://root.cern/doc/master/classTG16ColorSelector.html:14609,Availability,error,error,14609," object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual ",MatchSource.WIKI,doc/master/classTG16ColorSelector.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTG16ColorSelector.html
https://root.cern/doc/master/classTG16ColorSelector.html:14764,Availability,error,error,14764,"etup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the uniqu",MatchSource.WIKI,doc/master/classTG16ColorSelector.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTG16ColorSelector.html
https://root.cern/doc/master/classTG16ColorSelector.html:15061,Availability,error,error,15061,"ject using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t ",MatchSource.WIKI,doc/master/classTG16ColorSelector.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTG16ColorSelector.html
https://root.cern/doc/master/classTG16ColorSelector.html:18675,Availability,error,error,18675,"sz);  ; void * operator new (size_t sz, void *vp);  ; void * operator new[] (size_t sz);  ; void * operator new[] (size_t sz, void *vp);  ; TObject & operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Paint (Option_t *option="""");  This method must be overridden if a class wants to paint itself. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class s",MatchSource.WIKI,doc/master/classTG16ColorSelector.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTG16ColorSelector.html
https://root.cern/doc/master/classTG16ColorSelector.html:25547,Availability,mask,mask,25547," color cell ;  ; TGColorFrame * fCe [16];  matrix of color cells ;  ; const TGWindow * fMsgWindow;  window handling container messages ;  ;  Protected Attributes inherited from TGCompositeFrame; Bool_t fLayoutBroken;  no layout manager is used ;  ; TGLayoutManager * fLayoutManager;  layout manager ;  ; TList * fList;  container of frame elements ;  ; Bool_t fMapSubwindows;  kTRUE - map subwindows ;  ; Int_t fMustCleanup;  cleanup mode (see EFrameCleanup) ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions;  TG16ColorSelector (const TG16ColorSelector &)=delete;  ; TG16ColorSelector & operator= (const TG16ColorSelector &)=delete;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditD",MatchSource.WIKI,doc/master/classTG16ColorSelector.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTG16ColorSelector.html
https://root.cern/doc/master/classTG16ColorSelector.html:764,Integrability,message,messages,764,". ROOT: TG16ColorSelector Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; Private Member Functions |; List of all members ; TG16ColorSelector Class ReferenceGUI » Low level GUI widgets. ; A composite frame with 16 TGColorFrames. ; Definition at line 50 of file TGColorSelect.h. Public Member Functions;  TG16ColorSelector (const TGWindow *p=nullptr);  TG16ColorSelector constructor. ;  ;  ~TG16ColorSelector () override;  TG16ColorSelector destructor. ;  ; Int_t GetActive ();  ; TClass * IsA () const override;  ; Bool_t ProcessMessage (Longptr_t msg, Longptr_t parm1, Longptr_t parm2) override;  Process messages for TG16ColorSelector. ;  ; void SetActive (Int_t newat);  Set active color frame. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGCompositeFrame;  TGCompositeFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=0, Pixel_t back=GetDefaultFrameBackground());  Create a composite frame. ;  ;  TGCompositeFrame (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a frame using an externally created window. ;  ;  ~TGCompositeFrame () override;  Delete a composite frame. ;  ; virtual void AddFrame (TGFrame *f, TGLayoutHints *l=nullptr);  Add frame to the composite frame using the specified layout hints. ;  ; void ChangeOptions (UInt_t options) override;  Change composite frame options. Options is an OR of the EFrameTypes. ;  ; virtual void ChangeSubframesBackground (Pixel_t back);  Change background color for this frame and all subframes. ;  ; virtual void Cleanup ();  Cleanup and delete all objects contained in this composite frame. ;  ; virtual TGFrameElement * FindFrameElement (TGFrame *f) const;  Find frame-element holding frame f. ;  ; UI",MatchSource.WIKI,doc/master/classTG16ColorSelector.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTG16ColorSelector.html
https://root.cern/doc/master/classTG16ColorSelector.html:7375,Integrability,message,message,7375,"d DrawBorder ();  Draw frame border. ;  ; void DrawClass () const override;  Draw class inheritance tree of the class to which this object belongs. ;  ; TObject * DrawClone (Option_t *="""") const override;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void DrawCopy (Handle_t, Int_t, Int_t);  ; void Dump () const override;  Dump contents of object on stdout. ;  ; virtual Pixel_t GetBackground () const;  ; Int_t GetBorderWidth () const;  ; virtual TDNDData * GetDNDData (Atom_t);  ; virtual Int_t GetDragType () const;  Returns drag source type. ;  ; virtual Int_t GetDropType () const;  Returns drop target type. ;  ; UInt_t GetEventMask () const;  ; virtual Pixel_t GetForeground () const;  Return frame foreground color. ;  ; TGFrameElement * GetFrameElement () const;  ; UInt_t GetHeight () const;  ; UInt_t GetMaxHeight () const;  ; UInt_t GetMaxWidth () const;  ; UInt_t GetMinHeight () const;  ; UInt_t GetMinWidth () const;  ; virtual UInt_t GetOptions () const;  ; TGDimension GetSize () const;  ; UInt_t GetWidth () const;  ; Int_t GetX () const;  ; Int_t GetY () const;  ; virtual Bool_t HandleClientMessage (Event_t *event);  Handle a client message. ;  ; virtual Bool_t HandleColormapChange (Event_t *);  ; virtual Bool_t HandleConfigureNotify (Event_t *event);  This event is generated when the frame is resized. ;  ; virtual Bool_t HandleDNDDrop (TDNDData *);  ; virtual Atom_t HandleDNDEnter (Atom_t *);  ; virtual Bool_t HandleDNDFinished ();  ; virtual Bool_t HandleDNDLeave ();  ; virtual Atom_t HandleDNDPosition (Int_t, Int_t, Atom_t, Int_t, Int_t);  ; Bool_t HandleEvent (Event_t *event) override;  Handle all frame events. ;  ; virtual Bool_t HandleSelectionClear (Event_t *);  ; virtual Bool_t HandleSelectionRequest (Event_t *);  ; void Inspect () const override;  Dump contents of this object in a graphics canvas. ;  ; TClass * IsA () const override;  ; virtual Bool_t IsActive () const;  ; Bool_t IsDNDSource () con",MatchSource.WIKI,doc/master/classTG16ColorSelector.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTG16ColorSelector.html
https://root.cern/doc/master/classTG16ColorSelector.html:9542,Integrability,message,message,9542,"t_t h=0) override;  Move and/or resize the frame. ;  ; void Print (Option_t *option="""") const override;  Print window id. ;  ; virtual void ProcessedConfigure (Event_t *event);  ; virtual void ProcessedEvent (Event_t *event);  ; virtual void ReallyDelete ();  ; void RemoveInput (UInt_t emask);  Remove events specified in emask from the events the frame should handle. ;  ; void ReparentWindow (const TGWindow *p, Int_t x=0, Int_t y=0) override;  Reparent window, make p the new parent and position the window at position (x,y) in new parent. ;  ; virtual void Resize (TGDimension size);  Resize the frame. ;  ; void Resize (UInt_t w=0, UInt_t h=0) override;  Resize the frame. ;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save a frame widget as a C++ statement(s) on output stream out. ;  ; void SaveUserColor (std::ostream &out, Option_t *);  Save a user color in a C++ macro file - used in SavePrimitive(). ;  ; virtual void SendMessage (const TGWindow *w, Longptr_t msg, Longptr_t parm1, Longptr_t parm2);  Send message (i.e. ;  ; void SetBackgroundColor (Pixel_t back) override;  Set background color (override from TGWindow base class). ;  ; void SetDNDSource (Bool_t onoff);  ; void SetDNDTarget (Bool_t onoff);  ; virtual void SetDragType (Int_t type);  SetDragType. ;  ; void SetDrawOption (Option_t *="""") override;  Set drawing option for object. ;  ; virtual void SetDropType (Int_t type);  SetDropType. ;  ; void SetEditable (Bool_t) override;  ; virtual void SetForegroundColor (Pixel_t);  ; void SetFrameElement (TGFrameElement *fe);  ; virtual void SetHeight (UInt_t h);  ; virtual void SetMaxHeight (UInt_t h);  ; virtual void SetMaxWidth (UInt_t w);  ; virtual void SetMinHeight (UInt_t h);  ; virtual void SetMinWidth (UInt_t w);  ; virtual void SetSize (const TGDimension &s);  ; virtual void SetWidth (UInt_t w);  ; virtual void SetX (Int_t x);  ; virtual void SetY (Int_t y);  ; void Streamer (TBuffer &) override;  Stream an object of class TObje",MatchSource.WIKI,doc/master/classTG16ColorSelector.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTG16ColorSelector.html
https://root.cern/doc/master/classTG16ColorSelector.html:14526,Integrability,message,message,14526,"="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTG16ColorSelector.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTG16ColorSelector.html
https://root.cern/doc/master/classTG16ColorSelector.html:15067,Integrability,message,message,15067,"ject using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t ",MatchSource.WIKI,doc/master/classTG16ColorSelector.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTG16ColorSelector.html
https://root.cern/doc/master/classTG16ColorSelector.html:16028,Integrability,message,message,16028,"t char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessar",MatchSource.WIKI,doc/master/classTG16ColorSelector.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTG16ColorSelector.html
https://root.cern/doc/master/classTG16ColorSelector.html:18681,Integrability,message,message,18681,"sz);  ; void * operator new (size_t sz, void *vp);  ; void * operator new[] (size_t sz);  ; void * operator new[] (size_t sz, void *vp);  ; TObject & operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Paint (Option_t *option="""");  This method must be overridden if a class wants to paint itself. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class s",MatchSource.WIKI,doc/master/classTG16ColorSelector.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTG16ColorSelector.html
https://root.cern/doc/master/classTG16ColorSelector.html:19054,Integrability,message,message,19054," pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from class cls and all its base-classes. ;  ; Bool_t Connect (const char *signal, const char *receiver_class, void *receiver, const char *slot);  Non-static method is used to connect from the signal of this object to the receiver slot. ;  ; virtual void Connected (const char *);  ; virtual void Destroyed ();  ; Bool_t Disconnect (const char *signal=nullptr, voi",MatchSource.WIKI,doc/master/classTG16ColorSelector.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTG16ColorSelector.html
https://root.cern/doc/master/classTG16ColorSelector.html:24991,Integrability,message,messages,24991,"llows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Protected Attributes; Int_t fActive;  index of active color cell ;  ; TGColorFrame * fCe [16];  matrix of color cells ;  ; const TGWindow * fMsgWindow;  window handling container messages ;  ;  Protected Attributes inherited from TGCompositeFrame; Bool_t fLayoutBroken;  no layout manager is used ;  ; TGLayoutManager * fLayoutManager;  layout manager ;  ; TList * fList;  container of frame elements ;  ; Bool_t fMapSubwindows;  kTRUE - map subwindows ;  ; Int_t fMustCleanup;  cleanup mode (see EFrameCleanup) ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE",MatchSource.WIKI,doc/master/classTG16ColorSelector.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTG16ColorSelector.html
https://root.cern/doc/master/classTG16ColorSelector.html:33190,Integrability,message,messages,33190,"e of this class . ◆ Class_Version(). static constexpr Version_t TG16ColorSelector::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 70 of file TGColorSelect.h. ◆ DeclFileName(). static const char * TG16ColorSelector::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 70 of file TGColorSelect.h. ◆ GetActive(). Int_t TG16ColorSelector::GetActive ; (; ). inline . Definition at line 68 of file TGColorSelect.h. ◆ IsA(). TClass * TG16ColorSelector::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 70 of file TGColorSelect.h. ◆ operator=(). TG16ColorSelector & TG16ColorSelector::operator= ; (; const TG16ColorSelector & ; ). privatedelete . ◆ ProcessMessage(). Bool_t TG16ColorSelector::ProcessMessage ; (; Longptr_t ; msg, . Longptr_t ; parm1, . Longptr_t ; parm2 . ). overridevirtual . Process messages for TG16ColorSelector. ; Reimplemented from TGFrame.; Definition at line 188 of file TGColorSelect.cxx. ◆ SetActive(). void TG16ColorSelector::SetActive ; (; Int_t ; newat). Set active color frame. ; Definition at line 172 of file TGColorSelect.cxx. ◆ Streamer(). void TG16ColorSelector::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject. ◆ StreamerNVirtual(). void TG16ColorSelector::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 70 of file TGColorSelect.h. Member Data Documentation. ◆ fActive. Int_t TG16ColorSelector::fActive. protected . index of active color cell ; Definition at line 53 of file TGColorSelect.h. ◆ fCe. TGColorFrame* TG16ColorSelector::fCe[16]. protected . matrix of color cells ; Definition at line 55 of file TGColorSelect.h. ◆ fMsgWindow. const TGWindow* TG16ColorSelector::fMsgWindow. protected . window handling container messages ; Definition at line 54 of file ",MatchSource.WIKI,doc/master/classTG16ColorSelector.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTG16ColorSelector.html
https://root.cern/doc/master/classTG16ColorSelector.html:34160,Integrability,message,messages,34160," file containing the class declaration ; Definition at line 70 of file TGColorSelect.h. ◆ GetActive(). Int_t TG16ColorSelector::GetActive ; (; ). inline . Definition at line 68 of file TGColorSelect.h. ◆ IsA(). TClass * TG16ColorSelector::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 70 of file TGColorSelect.h. ◆ operator=(). TG16ColorSelector & TG16ColorSelector::operator= ; (; const TG16ColorSelector & ; ). privatedelete . ◆ ProcessMessage(). Bool_t TG16ColorSelector::ProcessMessage ; (; Longptr_t ; msg, . Longptr_t ; parm1, . Longptr_t ; parm2 . ). overridevirtual . Process messages for TG16ColorSelector. ; Reimplemented from TGFrame.; Definition at line 188 of file TGColorSelect.cxx. ◆ SetActive(). void TG16ColorSelector::SetActive ; (; Int_t ; newat). Set active color frame. ; Definition at line 172 of file TGColorSelect.cxx. ◆ Streamer(). void TG16ColorSelector::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject. ◆ StreamerNVirtual(). void TG16ColorSelector::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 70 of file TGColorSelect.h. Member Data Documentation. ◆ fActive. Int_t TG16ColorSelector::fActive. protected . index of active color cell ; Definition at line 53 of file TGColorSelect.h. ◆ fCe. TGColorFrame* TG16ColorSelector::fCe[16]. protected . matrix of color cells ; Definition at line 55 of file TGColorSelect.h. ◆ fMsgWindow. const TGWindow* TG16ColorSelector::fMsgWindow. protected . window handling container messages ; Definition at line 54 of file TGColorSelect.h. Libraries for TG16ColorSelector:. [legend]; The documentation for this class was generated from the following files:; gui/gui/inc/TGColorSelect.h; gui/gui/src/TGColorSelect.cxx. TG16ColorSelector. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:42:54 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/classTG16ColorSelector.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTG16ColorSelector.html
https://root.cern/doc/master/classTG16ColorSelector.html:1028,Modifiability,inherit,inherited,1028,"ide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; Private Member Functions |; List of all members ; TG16ColorSelector Class ReferenceGUI » Low level GUI widgets. ; A composite frame with 16 TGColorFrames. ; Definition at line 50 of file TGColorSelect.h. Public Member Functions;  TG16ColorSelector (const TGWindow *p=nullptr);  TG16ColorSelector constructor. ;  ;  ~TG16ColorSelector () override;  TG16ColorSelector destructor. ;  ; Int_t GetActive ();  ; TClass * IsA () const override;  ; Bool_t ProcessMessage (Longptr_t msg, Longptr_t parm1, Longptr_t parm2) override;  Process messages for TG16ColorSelector. ;  ; void SetActive (Int_t newat);  Set active color frame. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGCompositeFrame;  TGCompositeFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=0, Pixel_t back=GetDefaultFrameBackground());  Create a composite frame. ;  ;  TGCompositeFrame (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a frame using an externally created window. ;  ;  ~TGCompositeFrame () override;  Delete a composite frame. ;  ; virtual void AddFrame (TGFrame *f, TGLayoutHints *l=nullptr);  Add frame to the composite frame using the specified layout hints. ;  ; void ChangeOptions (UInt_t options) override;  Change composite frame options. Options is an OR of the EFrameTypes. ;  ; virtual void ChangeSubframesBackground (Pixel_t back);  Change background color for this frame and all subframes. ;  ; virtual void Cleanup ();  Cleanup and delete all objects contained in this composite frame. ;  ; virtual TGFrameElement * FindFrameElement (TGFrame *f) const;  Find frame-element holding frame f. ;  ; UInt_t GetDefaultHeight () const override;  ; TGDimension GetDefaultSize () ",MatchSource.WIKI,doc/master/classTG16ColorSelector.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTG16ColorSelector.html
https://root.cern/doc/master/classTG16ColorSelector.html:5384,Modifiability,inherit,inherited,5384," save subframes. ;  ; void SetCleanup (Int_t mode=kLocalCleanup) override;  Turn on automatic cleanup of child frames in dtor. ;  ; void SetEditable (Bool_t on=kTRUE) override;  Switch ON/OFF edit mode. ;  ; void SetEditDisabled (UInt_t on=1) override;  Set edit disable flag for this frame and subframes. ;  ; void SetLayoutBroken (Bool_t on=kTRUE) override;  Set broken layout. No Layout method is called. ;  ; virtual void SetLayoutManager (TGLayoutManager *l);  Set the layout manager for the composite frame. ;  ; void SetMapSubwindows (Bool_t on) override;  ; virtual void ShowFrame (TGFrame *f);  Show sub frame. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual Bool_t TranslateCoordinates (TGFrame *child, Int_t x, Int_t y, Int_t &fx, Int_t &fy);  Translate coordinates to child frame. ;  ;  Public Member Functions inherited from TGFrame;  TGFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=0, Pixel_t back=GetDefaultFrameBackground());  Create a TGFrame object. Options is an OR of the EFrameTypes. ;  ;  TGFrame (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a frame using an externally created window. ;  ;  ~TGFrame () override;  Destructor. ;  ; virtual void Activate (Bool_t);  ; void AddInput (UInt_t emask);  Add events specified in the emask to the events the frame should handle. ;  ; virtual void ChangeBackground (Pixel_t back);  Change frame background color. ;  ; Bool_t Contains (Int_t x, Int_t y) const;  ; void Delete (Option_t *="""") override;  Delete this object. ;  ; virtual void DeleteWindow ();  Delete window. ;  ; virtual void DrawBorder ();  Draw frame border. ;  ; void DrawClass () const override;  Draw class inheritance tree of the class to which this object belongs. ;  ; TObject * DrawClone (Option_t *="""") const override;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c",MatchSource.WIKI,doc/master/classTG16ColorSelector.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTG16ColorSelector.html
https://root.cern/doc/master/classTG16ColorSelector.html:6251,Modifiability,inherit,inheritance,6251,"es (TGFrame *child, Int_t x, Int_t y, Int_t &fx, Int_t &fy);  Translate coordinates to child frame. ;  ;  Public Member Functions inherited from TGFrame;  TGFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=0, Pixel_t back=GetDefaultFrameBackground());  Create a TGFrame object. Options is an OR of the EFrameTypes. ;  ;  TGFrame (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a frame using an externally created window. ;  ;  ~TGFrame () override;  Destructor. ;  ; virtual void Activate (Bool_t);  ; void AddInput (UInt_t emask);  Add events specified in the emask to the events the frame should handle. ;  ; virtual void ChangeBackground (Pixel_t back);  Change frame background color. ;  ; Bool_t Contains (Int_t x, Int_t y) const;  ; void Delete (Option_t *="""") override;  Delete this object. ;  ; virtual void DeleteWindow ();  Delete window. ;  ; virtual void DrawBorder ();  Draw frame border. ;  ; void DrawClass () const override;  Draw class inheritance tree of the class to which this object belongs. ;  ; TObject * DrawClone (Option_t *="""") const override;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void DrawCopy (Handle_t, Int_t, Int_t);  ; void Dump () const override;  Dump contents of object on stdout. ;  ; virtual Pixel_t GetBackground () const;  ; Int_t GetBorderWidth () const;  ; virtual TDNDData * GetDNDData (Atom_t);  ; virtual Int_t GetDragType () const;  Returns drag source type. ;  ; virtual Int_t GetDropType () const;  Returns drop target type. ;  ; UInt_t GetEventMask () const;  ; virtual Pixel_t GetForeground () const;  Return frame foreground color. ;  ; TGFrameElement * GetFrameElement () const;  ; UInt_t GetHeight () const;  ; UInt_t GetMaxHeight () const;  ; UInt_t GetMaxWidth () const;  ; UInt_t GetMinHeight () const;  ; UInt_t GetMinWidth () const;  ; virtual UInt_t GetOptions () const;  ; TGDimension GetSize () const;  ; UInt_t GetWidth () const;  ",MatchSource.WIKI,doc/master/classTG16ColorSelector.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTG16ColorSelector.html
https://root.cern/doc/master/classTG16ColorSelector.html:10642,Modifiability,inherit,inherited,10642,"l_t onoff);  ; void SetDNDTarget (Bool_t onoff);  ; virtual void SetDragType (Int_t type);  SetDragType. ;  ; void SetDrawOption (Option_t *="""") override;  Set drawing option for object. ;  ; virtual void SetDropType (Int_t type);  SetDropType. ;  ; void SetEditable (Bool_t) override;  ; virtual void SetForegroundColor (Pixel_t);  ; void SetFrameElement (TGFrameElement *fe);  ; virtual void SetHeight (UInt_t h);  ; virtual void SetMaxHeight (UInt_t h);  ; virtual void SetMaxWidth (UInt_t w);  ; virtual void SetMinHeight (UInt_t h);  ; virtual void SetMinWidth (UInt_t w);  ; virtual void SetSize (const TGDimension &s);  ; virtual void SetWidth (UInt_t w);  ; virtual void SetX (Int_t x);  ; virtual void SetY (Int_t y);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UnmapWindow () override;  unmap window ;  ;  Public Member Functions inherited from TGWindow;  TGWindow (const TGWindow *p=nullptr, Int_t x=0, Int_t y=0, UInt_t w=0, UInt_t h=0, UInt_t border=0, Int_t depth=0, UInt_t clss=0, void *visual=nullptr, SetWindowAttributes_t *attr=nullptr, UInt_t wtype=0);  Create a new window. ;  ;  TGWindow (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a copy of a window. ;  ;  ~TGWindow () override;  Window destructor. Unregisters the window. ;  ; virtual void DestroySubwindows ();  destroy sub windows ;  ; virtual void DestroyWindow ();  destroy window ;  ; virtual UInt_t GetEditDisabled () const;  ; virtual const TGWindow * GetMainFrame () const;  Returns top level main frame. ;  ; const char * GetName () const override;  Return unique name, used in SavePrimitive methods. ;  ; const TGWindow * GetParent () const;  ; virtual Bool_t HandleExpose (Event_t *event);  ; virtual Bool_t HandleIdleEvent (TGIdleHandler *);  ; Bool_t HandleTimer (TTimer *) override;  Execute action in response of a timer timing out. ;  ; virtual void IconifyWindow ();  iconify win",MatchSource.WIKI,doc/master/classTG16ColorSelector.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTG16ColorSelector.html
https://root.cern/doc/master/classTG16ColorSelector.html:12424,Modifiability,inherit,inherited,12424,"rent () const;  ; virtual Bool_t HandleExpose (Event_t *event);  ; virtual Bool_t HandleIdleEvent (TGIdleHandler *);  ; Bool_t HandleTimer (TTimer *) override;  Execute action in response of a timer timing out. ;  ; virtual void IconifyWindow ();  iconify window ;  ; TClass * IsA () const override;  ; virtual Bool_t IsMapped ();  Returns kTRUE if window is mapped on screen, kFALSE otherwise. ;  ; virtual void LowerWindow ();  lower window ;  ; void Print (Option_t *option="""") const override;  Print window id. ;  ; virtual void RaiseWindow ();  raise window ;  ; virtual void RequestFocus ();  request focus ;  ; virtual void SetBackgroundPixmap (Pixmap_t pixmap);  set background pixmap ;  ; virtual void SetName (const char *name);  ; virtual void SetWindowName (const char *name=nullptr);  Set window name. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGObject;  TGObject ();  ;  TGObject (const TGObject &tgo);  ;  ~TGObject () override;  TGObject destructor. ;  ; TGClient * GetClient () const;  ; Handle_t GetId () const;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsEqual (const TObject *obj) const override;  Equal comparison (TGObjects are equal if they have the same window identifier). ;  ; void SaveAs (const char *filename="""", Option_t *option="""") const override;  Write this TGObject to a file using TImage, if filename's extension signals a valid TImage::EImageFileType, as defined by TImage::GetImageFileTypeFromFilename(). ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you d",MatchSource.WIKI,doc/master/classTG16ColorSelector.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTG16ColorSelector.html
https://root.cern/doc/master/classTG16ColorSelector.html:13159,Modifiability,inherit,inherited,13159,"al void SetName (const char *name);  ; virtual void SetWindowName (const char *name=nullptr);  Set window name. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGObject;  TGObject ();  ;  TGObject (const TGObject &tgo);  ;  ~TGObject () override;  TGObject destructor. ;  ; TGClient * GetClient () const;  ; Handle_t GetId () const;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsEqual (const TObject *obj) const override;  Equal comparison (TGObjects are equal if they have the same window identifier). ;  ; void SaveAs (const char *filename="""", Option_t *option="""") const override;  Write this TGObject to a file using TImage, if filename's extension signals a valid TImage::EImageFileType, as defined by TImage::GetImageFileTypeFromFilename(). ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,doc/master/classTG16ColorSelector.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTG16ColorSelector.html
https://root.cern/doc/master/classTG16ColorSelector.html:16126,Modifiability,inherit,inherits,16126,"* FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handl",MatchSource.WIKI,doc/master/classTG16ColorSelector.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTG16ColorSelector.html
https://root.cern/doc/master/classTG16ColorSelector.html:16243,Modifiability,inherit,inherits,16243,"nst TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base implementation is no-op). ;  ; void Obsolete (const char *method, const char *asOfVe",MatchSource.WIKI,doc/master/classTG16ColorSelector.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTG16ColorSelector.html
https://root.cern/doc/master/classTG16ColorSelector.html:19361,Modifiability,inherit,inherited,19361,"f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from class cls and all its base-classes. ;  ; Bool_t Connect (const char *signal, const char *receiver_class, void *receiver, const char *slot);  Non-static method is used to connect from the signal of this object to the receiver slot. ;  ; virtual void Connected (const char *);  ; virtual void Destroyed ();  ; Bool_t Disconnect (const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal of this object from slot of receiver. ;  ; virtual void Disconnected (const char *);  ; void Emit (const char *signal);  Activate signal without args. ;  ; template<typename T > ; void Emit (const char *signal, const T &arg);  Activate signal with single paramet",MatchSource.WIKI,doc/master/classTG16ColorSelector.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTG16ColorSelector.html
https://root.cern/doc/master/classTG16ColorSelector.html:21523,Modifiability,inherit,inherited,21523,"nections () const;  ; TList * GetListOfSignals () const;  ; virtual Bool_t HasConnection (const char *signal_name) const;  Return true if there is any object connected to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGCompositeFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetBckgndGC ();  Get background color graphics context. ;  ; static const TGGC & GetBlackGC ();  Get black graphics context. ;  ; static Pixel_t GetBlackPixel ();  Get black pixel value. ;  ; static Pixel_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get shadow color graphics context. ;  ; static const TGGC & GetWhiteGC ();  Get white graphics context. ;  ; static Pixel_t GetWhitePixel ();  Get white pixel value. ;  ;  Static Public Member Functions inherited from TGWind",MatchSource.WIKI,doc/master/classTG16ColorSelector.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTG16ColorSelector.html
https://root.cern/doc/master/classTG16ColorSelector.html:21743,Modifiability,inherit,inherited,21743,"nections () const;  ; TList * GetListOfSignals () const;  ; virtual Bool_t HasConnection (const char *signal_name) const;  Return true if there is any object connected to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGCompositeFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetBckgndGC ();  Get background color graphics context. ;  ; static const TGGC & GetBlackGC ();  Get black graphics context. ;  ; static Pixel_t GetBlackPixel ();  Get black pixel value. ;  ; static Pixel_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get shadow color graphics context. ;  ; static const TGGC & GetWhiteGC ();  Get white graphics context. ;  ; static Pixel_t GetWhitePixel ();  Get white pixel value. ;  ;  Static Public Member Functions inherited from TGWind",MatchSource.WIKI,doc/master/classTG16ColorSelector.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTG16ColorSelector.html
https://root.cern/doc/master/classTG16ColorSelector.html:22629,Modifiability,inherit,inherited,22629,erited from TGFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetBckgndGC ();  Get background color graphics context. ;  ; static const TGGC & GetBlackGC ();  Get black graphics context. ;  ; static Pixel_t GetBlackPixel ();  Get black pixel value. ;  ; static Pixel_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get shadow color graphics context. ;  ; static const TGGC & GetWhiteGC ();  Get white graphics context. ;  ; static Pixel_t GetWhitePixel ();  Get white pixel value. ;  ;  Static Public Member Functions inherited from TGWindow; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetCounter ();  Return global window counter (total number of created windows). ;  ;  Static Public Member Functions inherited from TGObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true,MatchSource.WIKI,doc/master/classTG16ColorSelector.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTG16ColorSelector.html
https://root.cern/doc/master/classTG16ColorSelector.html:22939,Modifiability,inherit,inherited,22939,"_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get shadow color graphics context. ;  ; static const TGGC & GetWhiteGC ();  Get white graphics context. ;  ; static Pixel_t GetWhitePixel ();  Get white pixel value. ;  ;  Static Public Member Functions inherited from TGWindow; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetCounter ();  Return global window counter (total number of created windows). ;  ;  Static Public Member Functions inherited from TGObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This m",MatchSource.WIKI,doc/master/classTG16ColorSelector.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTG16ColorSelector.html
https://root.cern/doc/master/classTG16ColorSelector.html:23151,Modifiability,inherit,inherited,23151,"_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get shadow color graphics context. ;  ; static const TGGC & GetWhiteGC ();  Get white graphics context. ;  ; static Pixel_t GetWhitePixel ();  Get white pixel value. ;  ;  Static Public Member Functions inherited from TGWindow; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetCounter ();  Return global window counter (total number of created windows). ;  ;  Static Public Member Functions inherited from TGObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This m",MatchSource.WIKI,doc/master/classTG16ColorSelector.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTG16ColorSelector.html
https://root.cern/doc/master/classTG16ColorSelector.html:23669,Modifiability,inherit,inherited,23669," Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetCounter ();  Return global window counter (total number of created windows). ;  ;  Static Public Member Functions inherited from TGObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullpt",MatchSource.WIKI,doc/master/classTG16ColorSelector.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTG16ColorSelector.html
https://root.cern/doc/master/classTG16ColorSelector.html:25027,Modifiability,inherit,inherited,25027,"llows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Protected Attributes; Int_t fActive;  index of active color cell ;  ; TGColorFrame * fCe [16];  matrix of color cells ;  ; const TGWindow * fMsgWindow;  window handling container messages ;  ;  Protected Attributes inherited from TGCompositeFrame; Bool_t fLayoutBroken;  no layout manager is used ;  ; TGLayoutManager * fLayoutManager;  layout manager ;  ; TList * fList;  container of frame elements ;  ; Bool_t fMapSubwindows;  kTRUE - map subwindows ;  ; Int_t fMustCleanup;  cleanup mode (see EFrameCleanup) ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE",MatchSource.WIKI,doc/master/classTG16ColorSelector.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTG16ColorSelector.html
https://root.cern/doc/master/classTG16ColorSelector.html:25351,Modifiability,inherit,inherited,25351,"llows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Protected Attributes; Int_t fActive;  index of active color cell ;  ; TGColorFrame * fCe [16];  matrix of color cells ;  ; const TGWindow * fMsgWindow;  window handling container messages ;  ;  Protected Attributes inherited from TGCompositeFrame; Bool_t fLayoutBroken;  no layout manager is used ;  ; TGLayoutManager * fLayoutManager;  layout manager ;  ; TList * fList;  container of frame elements ;  ; Bool_t fMapSubwindows;  kTRUE - map subwindows ;  ; Int_t fMustCleanup;  cleanup mode (see EFrameCleanup) ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE",MatchSource.WIKI,doc/master/classTG16ColorSelector.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTG16ColorSelector.html
https://root.cern/doc/master/classTG16ColorSelector.html:25983,Modifiability,inherit,inherited,25983," color cell ;  ; TGColorFrame * fCe [16];  matrix of color cells ;  ; const TGWindow * fMsgWindow;  window handling container messages ;  ;  Protected Attributes inherited from TGCompositeFrame; Bool_t fLayoutBroken;  no layout manager is used ;  ; TGLayoutManager * fLayoutManager;  layout manager ;  ; TList * fList;  container of frame elements ;  ; Bool_t fMapSubwindows;  kTRUE - map subwindows ;  ; Int_t fMustCleanup;  cleanup mode (see EFrameCleanup) ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions;  TG16ColorSelector (const TG16ColorSelector &)=delete;  ; TG16ColorSelector & operator= (const TG16ColorSelector &)=delete;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditD",MatchSource.WIKI,doc/master/classTG16ColorSelector.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTG16ColorSelector.html
https://root.cern/doc/master/classTG16ColorSelector.html:26260,Modifiability,inherit,inherited,26260,"eanup;  cleanup mode (see EFrameCleanup) ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions;  TG16ColorSelector (const TG16ColorSelector &)=delete;  ; TG16ColorSelector & operator= (const TG16ColorSelector &)=delete;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ",MatchSource.WIKI,doc/master/classTG16ColorSelector.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTG16ColorSelector.html
https://root.cern/doc/master/classTG16ColorSelector.html:26412,Modifiability,inherit,inherited,26412,"DNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions;  TG16ColorSelector (const TG16ColorSelector &)=delete;  ; TG16ColorSelector & operator= (const TG16ColorSelector &)=delete;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSing",MatchSource.WIKI,doc/master/classTG16ColorSelector.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTG16ColorSelector.html
https://root.cern/doc/master/classTG16ColorSelector.html:26793,Modifiability,inherit,inherited,26793,"nherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions;  TG16ColorSelector (const TG16ColorSelector &)=delete;  ; TG16ColorSelector & operator= (const TG16ColorSelector &)=delete;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindo",MatchSource.WIKI,doc/master/classTG16ColorSelector.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTG16ColorSelector.html
https://root.cern/doc/master/classTG16ColorSelector.html:27300,Modifiability,inherit,inherited,27300,"le_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions;  TG16ColorSelector (const TG16ColorSelector &)=delete;  ; TG16ColorSelector & operator= (const TG16ColorSelector &)=delete;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString G",MatchSource.WIKI,doc/master/classTG16ColorSelector.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTG16ColorSelector.html
https://root.cern/doc/master/classTG16ColorSelector.html:27941,Modifiability,inherit,inherited,27941,"DisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void Mak",MatchSource.WIKI,doc/master/classTG16ColorSelector.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTG16ColorSelector.html
https://root.cern/doc/master/classTG16ColorSelector.html:28036,Modifiability,inherit,inherited,28036,"DisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void Mak",MatchSource.WIKI,doc/master/classTG16ColorSelector.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTG16ColorSelector.html
https://root.cern/doc/master/classTG16ColorSelector.html:28135,Modifiability,inherit,inherited,28135,"DisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void Mak",MatchSource.WIKI,doc/master/classTG16ColorSelector.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTG16ColorSelector.html
https://root.cern/doc/master/classTG16ColorSelector.html:28629,Modifiability,inherit,inherited,28629,"Pick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *",MatchSource.WIKI,doc/master/classTG16ColorSelector.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTG16ColorSelector.html
https://root.cern/doc/master/classTG16ColorSelector.html:28793,Modifiability,inherit,inherited,28793,"Pick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *",MatchSource.WIKI,doc/master/classTG16ColorSelector.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTG16ColorSelector.html
https://root.cern/doc/master/classTG16ColorSelector.html:28893,Modifiability,inherit,inherited,28893,"Pick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *",MatchSource.WIKI,doc/master/classTG16ColorSelector.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTG16ColorSelector.html
https://root.cern/doc/master/classTG16ColorSelector.html:29104,Modifiability,inherit,inherited,29104,") override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Stat",MatchSource.WIKI,doc/master/classTG16ColorSelector.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTG16ColorSelector.html
https://root.cern/doc/master/classTG16ColorSelector.html:29217,Modifiability,inherit,inherited,29217,") override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Stat",MatchSource.WIKI,doc/master/classTG16ColorSelector.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTG16ColorSelector.html
https://root.cern/doc/master/classTG16ColorSelector.html:29343,Modifiability,inherit,inherited,29343," const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static ",MatchSource.WIKI,doc/master/classTG16ColorSelector.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTG16ColorSelector.html
https://root.cern/doc/master/classTG16ColorSelector.html:30199,Modifiability,inherit,inherited,30199,"ame and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGColorSelect.h>. Inheritance diagram for TG16ColorSelector:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TG16ColorSelector() [1/2]. TG16ColorSelector::TG16ColorSelector ; (; const TG16ColorSelector & ; ). privatedelete . ◆ TG16ColorSelector() [2/2]. TG16ColorSelector::TG16ColorSelector ; (; const TGWindow * ; p = nullptr). TG16ColorSelector constructor. ; The TG",MatchSource.WIKI,doc/master/classTG16ColorSelector.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTG16ColorSelector.html
https://root.cern/doc/master/classTG16ColorSelector.html:30313,Modifiability,inherit,inherited,30313,"ame and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGColorSelect.h>. Inheritance diagram for TG16ColorSelector:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TG16ColorSelector() [1/2]. TG16ColorSelector::TG16ColorSelector ; (; const TG16ColorSelector & ; ). privatedelete . ◆ TG16ColorSelector() [2/2]. TG16ColorSelector::TG16ColorSelector ; (; const TGWindow * ; p = nullptr). TG16ColorSelector constructor. ; The TG",MatchSource.WIKI,doc/master/classTG16ColorSelector.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTG16ColorSelector.html
https://root.cern/doc/master/classTG16ColorSelector.html:30982,Modifiability,inherit,inherited,30982,"ame and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGColorSelect.h>. Inheritance diagram for TG16ColorSelector:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TG16ColorSelector() [1/2]. TG16ColorSelector::TG16ColorSelector ; (; const TG16ColorSelector & ; ). privatedelete . ◆ TG16ColorSelector() [2/2]. TG16ColorSelector::TG16ColorSelector ; (; const TGWindow * ; p = nullptr). TG16ColorSelector constructor. ; The TG",MatchSource.WIKI,doc/master/classTG16ColorSelector.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTG16ColorSelector.html
https://root.cern/doc/master/classTG16ColorSelector.html:31114,Modifiability,inherit,inherited,31114,"ame and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGColorSelect.h>. Inheritance diagram for TG16ColorSelector:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TG16ColorSelector() [1/2]. TG16ColorSelector::TG16ColorSelector ; (; const TG16ColorSelector & ; ). privatedelete . ◆ TG16ColorSelector() [2/2]. TG16ColorSelector::TG16ColorSelector ; (; const TGWindow * ; p = nullptr). TG16ColorSelector constructor. ; The TG",MatchSource.WIKI,doc/master/classTG16ColorSelector.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTG16ColorSelector.html
https://root.cern/doc/master/classTG16ColorSelector.html:12655,Security,hash,hash,12655,"n response of a timer timing out. ;  ; virtual void IconifyWindow ();  iconify window ;  ; TClass * IsA () const override;  ; virtual Bool_t IsMapped ();  Returns kTRUE if window is mapped on screen, kFALSE otherwise. ;  ; virtual void LowerWindow ();  lower window ;  ; void Print (Option_t *option="""") const override;  Print window id. ;  ; virtual void RaiseWindow ();  raise window ;  ; virtual void RequestFocus ();  request focus ;  ; virtual void SetBackgroundPixmap (Pixmap_t pixmap);  set background pixmap ;  ; virtual void SetName (const char *name);  ; virtual void SetWindowName (const char *name=nullptr);  Set window name. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGObject;  TGObject ();  ;  TGObject (const TGObject &tgo);  ;  ~TGObject () override;  TGObject destructor. ;  ; TGClient * GetClient () const;  ; Handle_t GetId () const;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsEqual (const TObject *obj) const override;  Equal comparison (TGObjects are equal if they have the same window identifier). ;  ; void SaveAs (const char *filename="""", Option_t *option="""") const override;  Write this TGObject to a file using TImage, if filename's extension signals a valid TImage::EImageFileType, as defined by TImage::GetImageFileTypeFromFilename(). ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse ob",MatchSource.WIKI,doc/master/classTG16ColorSelector.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTG16ColorSelector.html
https://root.cern/doc/master/classTGApplication.html:2693,Availability,avail,available,2693,"icationImp ();  ; TApplication * GetAppRemote () const;  ; const char * GetIdleCommand () const;  ; TString GetSetup ();  It gets the ROOT installation setup as TString. ;  ; TSignalHandler * GetSignalHandler () const;  ; virtual void HandleException (Int_t sig);  Handle exceptions (kSigBus, kSigSegmentationViolation, kSigIllegalInstruction and kSigFloatingException) trapped in TSystem. ;  ; virtual void HandleIdleTimer ();  Handle idle timeout. ;  ; virtual Bool_t HandleTermInput ();  ; virtual void Hide ();  ; virtual void Iconify ();  ; virtual void Init ();  ; void InitializeGraphics (Bool_t only_web=kFALSE);  Initialize the graphics environment. ;  ; TObjArray * InputFiles () const;  ; virtual Bool_t IsCmdThread ();  ; Bool_t IsRunning () const;  ; virtual void KeyPressed (Int_t key);  Emit signal when console keyboard key was pressed. ;  ; virtual void LineProcessed (const char *line);  Emit signal when a line has been processed. ;  ; virtual void Lower ();  ; void ls (Option_t *option="""") const override;  Show available sessions. ;  ; Bool_t NoLogoOpt () const;  ; Bool_t NoLogOpt () const;  ; virtual void Open ();  ; void OpenForumTopic (const TString &type);  It opens a Forum topic in a web browser with prefilled ROOT version. ;  ; void OpenGitHubIssue (const TString &type);  It opens a GitHub issue in a web browser with prefilled ROOT version. ;  ; void OpenInBrowser (const TString &url);  The function generates and executes a command that loads the Doxygen URL in a browser. ;  ; void OpenReferenceGuideFor (const TString &strippedClass);  It opens the online reference guide, generated with Doxygen, for the chosen scope (class/namespace/struct) or member (method/function/ data member/enumeration/enumerator. ;  ; virtual Longptr_t ProcessFile (const char *file, Int_t *error=nullptr, Bool_t keep=kFALSE);  Process a file containing a C++ macro. ;  ; virtual Longptr_t ProcessLine (const char *line, Bool_t sync=kFALSE, Int_t *error=nullptr);  Process a single comm",MatchSource.WIKI,doc/master/classTGApplication.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGApplication.html
https://root.cern/doc/master/classTGApplication.html:3466,Availability,error,error,3466,"l when console keyboard key was pressed. ;  ; virtual void LineProcessed (const char *line);  Emit signal when a line has been processed. ;  ; virtual void Lower ();  ; void ls (Option_t *option="""") const override;  Show available sessions. ;  ; Bool_t NoLogoOpt () const;  ; Bool_t NoLogOpt () const;  ; virtual void Open ();  ; void OpenForumTopic (const TString &type);  It opens a Forum topic in a web browser with prefilled ROOT version. ;  ; void OpenGitHubIssue (const TString &type);  It opens a GitHub issue in a web browser with prefilled ROOT version. ;  ; void OpenInBrowser (const TString &url);  The function generates and executes a command that loads the Doxygen URL in a browser. ;  ; void OpenReferenceGuideFor (const TString &strippedClass);  It opens the online reference guide, generated with Doxygen, for the chosen scope (class/namespace/struct) or member (method/function/ data member/enumeration/enumerator. ;  ; virtual Longptr_t ProcessFile (const char *file, Int_t *error=nullptr, Bool_t keep=kFALSE);  Process a file containing a C++ macro. ;  ; virtual Longptr_t ProcessLine (const char *line, Bool_t sync=kFALSE, Int_t *error=nullptr);  Process a single command line, either a C++ statement or an interpreter command starting with a ""."". ;  ; Bool_t QuitOpt () const;  ; virtual void Raise ();  ; virtual void RemoveIdleTimer ();  Remove idle timer. Normally called via TROOT::Idle(0). ;  ; Bool_t ReturnFromRun () const;  ; virtual void ReturnPressed (char *text);  Emit signal when return key was pressed. ;  ; virtual void Run (Bool_t retrn=kFALSE);  Main application eventloop. Calls system dependent eventloop via gSystem. ;  ; virtual void SetEchoMode (Bool_t mode);  Set console echo mode: ;  ; virtual void SetIdleTimer (UInt_t idleTimeInSec, const char *command);  Set the command to be executed after the system has been idle for idleTimeInSec seconds. ;  ; void SetReturnFromRun (Bool_t ret);  ; virtual void Show ();  ; virtual void StartIdleing ();  Called ",MatchSource.WIKI,doc/master/classTGApplication.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGApplication.html
https://root.cern/doc/master/classTGApplication.html:3623,Availability,error,error,3623,"; void ls (Option_t *option="""") const override;  Show available sessions. ;  ; Bool_t NoLogoOpt () const;  ; Bool_t NoLogOpt () const;  ; virtual void Open ();  ; void OpenForumTopic (const TString &type);  It opens a Forum topic in a web browser with prefilled ROOT version. ;  ; void OpenGitHubIssue (const TString &type);  It opens a GitHub issue in a web browser with prefilled ROOT version. ;  ; void OpenInBrowser (const TString &url);  The function generates and executes a command that loads the Doxygen URL in a browser. ;  ; void OpenReferenceGuideFor (const TString &strippedClass);  It opens the online reference guide, generated with Doxygen, for the chosen scope (class/namespace/struct) or member (method/function/ data member/enumeration/enumerator. ;  ; virtual Longptr_t ProcessFile (const char *file, Int_t *error=nullptr, Bool_t keep=kFALSE);  Process a file containing a C++ macro. ;  ; virtual Longptr_t ProcessLine (const char *line, Bool_t sync=kFALSE, Int_t *error=nullptr);  Process a single command line, either a C++ statement or an interpreter command starting with a ""."". ;  ; Bool_t QuitOpt () const;  ; virtual void Raise ();  ; virtual void RemoveIdleTimer ();  Remove idle timer. Normally called via TROOT::Idle(0). ;  ; Bool_t ReturnFromRun () const;  ; virtual void ReturnPressed (char *text);  Emit signal when return key was pressed. ;  ; virtual void Run (Bool_t retrn=kFALSE);  Main application eventloop. Calls system dependent eventloop via gSystem. ;  ; virtual void SetEchoMode (Bool_t mode);  Set console echo mode: ;  ; virtual void SetIdleTimer (UInt_t idleTimeInSec, const char *command);  Set the command to be executed after the system has been idle for idleTimeInSec seconds. ;  ; void SetReturnFromRun (Bool_t ret);  ; virtual void Show ();  ; virtual void StartIdleing ();  Called when system starts idleing. ;  ; virtual void StopIdleing ();  Called when system stops idleing. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; ",MatchSource.WIKI,doc/master/classTGApplication.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGApplication.html
https://root.cern/doc/master/classTGApplication.html:4189,Availability,echo,echo,4189,"online reference guide, generated with Doxygen, for the chosen scope (class/namespace/struct) or member (method/function/ data member/enumeration/enumerator. ;  ; virtual Longptr_t ProcessFile (const char *file, Int_t *error=nullptr, Bool_t keep=kFALSE);  Process a file containing a C++ macro. ;  ; virtual Longptr_t ProcessLine (const char *line, Bool_t sync=kFALSE, Int_t *error=nullptr);  Process a single command line, either a C++ statement or an interpreter command starting with a ""."". ;  ; Bool_t QuitOpt () const;  ; virtual void Raise ();  ; virtual void RemoveIdleTimer ();  Remove idle timer. Normally called via TROOT::Idle(0). ;  ; Bool_t ReturnFromRun () const;  ; virtual void ReturnPressed (char *text);  Emit signal when return key was pressed. ;  ; virtual void Run (Bool_t retrn=kFALSE);  Main application eventloop. Calls system dependent eventloop via gSystem. ;  ; virtual void SetEchoMode (Bool_t mode);  Set console echo mode: ;  ; virtual void SetIdleTimer (UInt_t idleTimeInSec, const char *command);  Set the command to be executed after the system has been idle for idleTimeInSec seconds. ;  ; void SetReturnFromRun (Bool_t ret);  ; virtual void Show ();  ; virtual void StartIdleing ();  Called when system starts idleing. ;  ; virtual void StopIdleing ();  Called when system stops idleing. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual Int_t TabCompletionHook (char *buf, int *pLoc, std::ostream &out);  What to do when tab is pressed. ;  ; virtual void Terminate (Int_t status=0);  Terminate the application by call TSystem::Exit() unless application has been told to return from Run(), by a call to SetReturnFromRun(). ;  ; const char * WorkingDirectory () const;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to impl",MatchSource.WIKI,doc/master/classTGApplication.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGApplication.html
https://root.cern/doc/master/classTGApplication.html:6767,Availability,error,error,6767,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTGApplication.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGApplication.html
https://root.cern/doc/master/classTGApplication.html:6856,Availability,error,error,6856,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTGApplication.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGApplication.html
https://root.cern/doc/master/classTGApplication.html:7011,Availability,error,error,7011,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTGApplication.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGApplication.html
https://root.cern/doc/master/classTGApplication.html:7308,Availability,error,error,7308,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTGApplication.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGApplication.html
https://root.cern/doc/master/classTGApplication.html:11764,Availability,error,error,11764," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class s",MatchSource.WIKI,doc/master/classTGApplication.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGApplication.html
https://root.cern/doc/master/classTGApplication.html:14957,Availability,error,error,14957,"y (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TApplication; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static void CreateApplication ();  Static function used to create a default application environment. ;  ; static const char * DeclFileName ();  ; static Longptr_t ExecuteFile (const char *file, Int_t *error=nullptr, Bool_t keep=kFALSE);  Execute a file containing a C++ macro (static method). ;  ; static TList * GetApplications ();  Static method returning the list of available applications. ;  ; static void NeedGraphicsLibs ();  Static method. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns t",MatchSource.WIKI,doc/master/classTGApplication.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGApplication.html
https://root.cern/doc/master/classTGApplication.html:15126,Availability,avail,available,15126," ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TApplication; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static void CreateApplication ();  Static function used to create a default application environment. ;  ; static const char * DeclFileName ();  ; static Longptr_t ExecuteFile (const char *file, Int_t *error=nullptr, Bool_t keep=kFALSE);  Execute a file containing a C++ macro (static method). ;  ; static TList * GetApplications ();  Static method returning the list of available applications. ;  ; static void NeedGraphicsLibs ();  Static method. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; s",MatchSource.WIKI,doc/master/classTGApplication.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGApplication.html
https://root.cern/doc/master/classTGApplication.html:17730,Availability,error,error,17730,"bject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Protected Member Functions;  TGApplication ();  ; void LoadGraphicsLibs () override;  Load shared libs necessary for GUI. ;  ;  Protected Member Functions inherited from TApplication;  TApplication ();  Default ctor. Can be used by classes deriving from TApplication. ;  ; virtual void Forum (const char *line);  The function ("".forum <type>"") submits a new post on the ROOT forum via web browser. ;  ; virtual void GitHub (const char *line);  The function ("".gh <type>"") submits a new issue on GitHub via web browser. ;  ; virtual void Help (const char *line);  The function lists useful commands ("".help"") or opens the online reference guide, generated with Doxygen ("".help scope"" or "".help scope::member""). ;  ; virtual void MakeBatch ();  Switch to batch mode. ;  ; virtual Longptr_t ProcessRemote (const char *line, Int_t *error=nullptr);  Process the content of a line starting with "".R"" (already stripped-off) The format is. ;  ; void SetSignalHandler (TSignalHandler *sh);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  . Private Attributes; TGClient * fClient {nullptr};  pointer to the client environment ;  ; TString fDisplay;  display server to connect to ;  . Additional Inherited Members;  Public Types inherited from TApplication; enum  EExitOnException { kDontExit; , kExit; , kAbort; };  ; enum  EFileBits { kExpression = (1ULL << ( 14 )); };  ; enum  EStatusBits { kProcessRemotely = (1ULL << ( 15 )); , kDefaultApplication = (1ULL << ( 16 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHe",MatchSource.WIKI,doc/master/classTGApplication.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGApplication.html
https://root.cern/doc/master/classTGApplication.html:1799,Deployability,install,installation,1799,"ion dtor. ;  ; void GetOptions (Int_t *argc, char **argv) override;  Handle command line arguments. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TApplication;  TApplication (const char *appClassName, Int_t *argc, char **argv, void *options=nullptr, Int_t numOptions=0);  Create an application environment. ;  ; virtual ~TApplication ();  TApplication dtor. ;  ; virtual const char * ApplicationName () const;  ; Int_t Argc () const;  ; char ** Argv () const;  ; char * Argv (Int_t index) const;  Return specified argument. ;  ; void ClearInputFiles ();  Clear list containing macro files passed as program arguments. ;  ; EExitOnException ExitOnException (EExitOnException opt=kExit);  Set the exit on exception option. ;  ; virtual TApplicationImp * GetApplicationImp ();  ; TApplication * GetAppRemote () const;  ; const char * GetIdleCommand () const;  ; TString GetSetup ();  It gets the ROOT installation setup as TString. ;  ; TSignalHandler * GetSignalHandler () const;  ; virtual void HandleException (Int_t sig);  Handle exceptions (kSigBus, kSigSegmentationViolation, kSigIllegalInstruction and kSigFloatingException) trapped in TSystem. ;  ; virtual void HandleIdleTimer ();  Handle idle timeout. ;  ; virtual Bool_t HandleTermInput ();  ; virtual void Hide ();  ; virtual void Iconify ();  ; virtual void Init ();  ; void InitializeGraphics (Bool_t only_web=kFALSE);  Initialize the graphics environment. ;  ; TObjArray * InputFiles () const;  ; virtual Bool_t IsCmdThread ();  ; Bool_t IsRunning () const;  ; virtual void KeyPressed (Int_t key);  Emit signal when console keyboard key was pressed. ;  ; virtual void LineProcessed (const char *line);  Emit signal when a line has been processed. ;  ; virtual void Lower ();  ; void ls (Option_t *option="""") const override;  Show available sessions. ;  ; Bool_t ",MatchSource.WIKI,doc/master/classTGApplication.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGApplication.html
https://root.cern/doc/master/classTGApplication.html:4098,Integrability,depend,dependent,4098,"d executes a command that loads the Doxygen URL in a browser. ;  ; void OpenReferenceGuideFor (const TString &strippedClass);  It opens the online reference guide, generated with Doxygen, for the chosen scope (class/namespace/struct) or member (method/function/ data member/enumeration/enumerator. ;  ; virtual Longptr_t ProcessFile (const char *file, Int_t *error=nullptr, Bool_t keep=kFALSE);  Process a file containing a C++ macro. ;  ; virtual Longptr_t ProcessLine (const char *line, Bool_t sync=kFALSE, Int_t *error=nullptr);  Process a single command line, either a C++ statement or an interpreter command starting with a ""."". ;  ; Bool_t QuitOpt () const;  ; virtual void Raise ();  ; virtual void RemoveIdleTimer ();  Remove idle timer. Normally called via TROOT::Idle(0). ;  ; Bool_t ReturnFromRun () const;  ; virtual void ReturnPressed (char *text);  Emit signal when return key was pressed. ;  ; virtual void Run (Bool_t retrn=kFALSE);  Main application eventloop. Calls system dependent eventloop via gSystem. ;  ; virtual void SetEchoMode (Bool_t mode);  Set console echo mode: ;  ; virtual void SetIdleTimer (UInt_t idleTimeInSec, const char *command);  Set the command to be executed after the system has been idle for idleTimeInSec seconds. ;  ; void SetReturnFromRun (Bool_t ret);  ; virtual void Show ();  ; virtual void StartIdleing ();  Called when system starts idleing. ;  ; virtual void StopIdleing ();  Called when system stops idleing. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual Int_t TabCompletionHook (char *buf, int *pLoc, std::ostream &out);  What to do when tab is pressed. ;  ; virtual void Terminate (Int_t status=0);  Terminate the application by call TSystem::Exit() unless application has been told to return from Run(), by a call to SetReturnFromRun(). ;  ; const char * WorkingDirectory () const;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TO",MatchSource.WIKI,doc/master/classTGApplication.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGApplication.html
https://root.cern/doc/master/classTGApplication.html:6773,Integrability,message,message,6773,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTGApplication.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGApplication.html
https://root.cern/doc/master/classTGApplication.html:7314,Integrability,message,message,7314,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTGApplication.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGApplication.html
https://root.cern/doc/master/classTGApplication.html:8516,Integrability,message,message,8516,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle again",MatchSource.WIKI,doc/master/classTGApplication.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGApplication.html
https://root.cern/doc/master/classTGApplication.html:11770,Integrability,message,message,11770," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class s",MatchSource.WIKI,doc/master/classTGApplication.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGApplication.html
https://root.cern/doc/master/classTGApplication.html:12143,Integrability,message,message,12143," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from class cls and all its base-classes. ;  ; Bool_t Connect (const char *signal, const char *receiver_class, void *receiver, const char *slot);  Non-static method is used to connect from the signal of this object to the receiver slot. ;  ; virtual void Connected (const char *);  ; virtual void Destroyed ();  ; Bool_t Disconnect (const char *signal=nullptr, voi",MatchSource.WIKI,doc/master/classTGApplication.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGApplication.html
https://root.cern/doc/master/classTGApplication.html:1032,Modifiability,inherit,inherited,1032,"ide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Private Attributes |; List of all members ; TGApplication Class ReferenceGUI » Low level GUI widgets. ; This class initialize the ROOT GUI toolkit. ; This class must be instantiated exactly once in any given application. ; Definition at line 21 of file TGApplication.h. Public Member Functions;  TGApplication (const char *appClassName, Int_t *argc, char **argv, void *options=nullptr, Int_t numOptions=0);  Create a GUI application environment. ;  ;  ~TGApplication () override;  TGApplication dtor. ;  ; void GetOptions (Int_t *argc, char **argv) override;  Handle command line arguments. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TApplication;  TApplication (const char *appClassName, Int_t *argc, char **argv, void *options=nullptr, Int_t numOptions=0);  Create an application environment. ;  ; virtual ~TApplication ();  TApplication dtor. ;  ; virtual const char * ApplicationName () const;  ; Int_t Argc () const;  ; char ** Argv () const;  ; char * Argv (Int_t index) const;  Return specified argument. ;  ; void ClearInputFiles ();  Clear list containing macro files passed as program arguments. ;  ; EExitOnException ExitOnException (EExitOnException opt=kExit);  Set the exit on exception option. ;  ; virtual TApplicationImp * GetApplicationImp ();  ; TApplication * GetAppRemote () const;  ; const char * GetIdleCommand () const;  ; TString GetSetup ();  It gets the ROOT installation setup as TString. ;  ; TSignalHandler * GetSignalHandler () const;  ; virtual void HandleException (Int_t sig);  Handle exceptions (kSigBus, kSigSegmentationViolation, kSigIllegalInstruction and kSigFloatingException) trapped in TSystem. ;  ; virtual void Hand",MatchSource.WIKI,doc/master/classTGApplication.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGApplication.html
https://root.cern/doc/master/classTGApplication.html:5006,Modifiability,inherit,inherited,5006,"was pressed. ;  ; virtual void Run (Bool_t retrn=kFALSE);  Main application eventloop. Calls system dependent eventloop via gSystem. ;  ; virtual void SetEchoMode (Bool_t mode);  Set console echo mode: ;  ; virtual void SetIdleTimer (UInt_t idleTimeInSec, const char *command);  Set the command to be executed after the system has been idle for idleTimeInSec seconds. ;  ; void SetReturnFromRun (Bool_t ret);  ; virtual void Show ();  ; virtual void StartIdleing ();  Called when system starts idleing. ;  ; virtual void StopIdleing ();  Called when system stops idleing. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual Int_t TabCompletionHook (char *buf, int *pLoc, std::ostream &out);  What to do when tab is pressed. ;  ; virtual void Terminate (Int_t status=0);  Terminate the application by call TSystem::Exit() unless application has been told to return from Run(), by a call to SetReturnFromRun(). ;  ; const char * WorkingDirectory () const;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Comp",MatchSource.WIKI,doc/master/classTGApplication.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGApplication.html
https://root.cern/doc/master/classTGApplication.html:6403,Modifiability,inherit,inheritance,6403,"pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTGApplication.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGApplication.html
https://root.cern/doc/master/classTGApplication.html:8614,Modifiability,inherit,inherits,8614,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality th",MatchSource.WIKI,doc/master/classTGApplication.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGApplication.html
https://root.cern/doc/master/classTGApplication.html:8731,Modifiability,inherit,inherits,8731,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden t",MatchSource.WIKI,doc/master/classTGApplication.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGApplication.html
https://root.cern/doc/master/classTGApplication.html:12450,Modifiability,inherit,inherited,12450," SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from class cls and all its base-classes. ;  ; Bool_t Connect (const char *signal, const char *receiver_class, void *receiver, const char *slot);  Non-static method is used to connect from the signal of this object to the receiver slot. ;  ; virtual void Connected (const char *);  ; virtual void Destroyed ();  ; Bool_t Disconnect (const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal of this object from slot of receiver. ;  ; virtual void Disconnected (const char *);  ; void Emit (const char *signal);  Activate signal without args. ;  ; template<typename T > ; void Emit (const char *signal, const T &arg);  Activate signal with single paramet",MatchSource.WIKI,doc/master/classTGApplication.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGApplication.html
https://root.cern/doc/master/classTGApplication.html:14612,Modifiability,inherit,inherited,14612,"List * GetListOfClassSignals () const;  Returns pointer to list of signals of this class. ;  ; TList * GetListOfConnections () const;  ; TList * GetListOfSignals () const;  ; virtual Bool_t HasConnection (const char *signal_name) const;  Return true if there is any object connected to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TApplication; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static void CreateApplication ();  Static function used to create a default application environment. ;  ; static const char * DeclFileName ();  ; static Longptr_t ExecuteFile (const char *file, Int_t *error=nullptr, Bool_t keep=kFALSE);  Execute a file containing a C++ macro (static method). ;  ; static TList * GetApplications ();  Static method returning the list of available applications. ;  ; static void NeedGraphicsLibs ();  Static method. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ; ",MatchSource.WIKI,doc/master/classTGApplication.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGApplication.html
https://root.cern/doc/master/classTGApplication.html:15241,Modifiability,inherit,inherited,15241,"Virtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TApplication; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static void CreateApplication ();  Static function used to create a default application environment. ;  ; static const char * DeclFileName ();  ; static Longptr_t ExecuteFile (const char *file, Int_t *error=nullptr, Bool_t keep=kFALSE);  Execute a file containing a C++ macro (static method). ;  ; static TList * GetApplications ();  Static method returning the list of available applications. ;  ; static void NeedGraphicsLibs ();  Static method. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t C",MatchSource.WIKI,doc/master/classTGApplication.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGApplication.html
https://root.cern/doc/master/classTGApplication.html:15759,Modifiability,inherit,inherited,15759,"tatic function used to create a default application environment. ;  ; static const char * DeclFileName ();  ; static Longptr_t ExecuteFile (const char *file, Int_t *error=nullptr, Bool_t keep=kFALSE);  Execute a file containing a C++ macro (static method). ;  ; static TList * GetApplications ();  Static method returning the list of available applications. ;  ; static void NeedGraphicsLibs ();  Static method. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullpt",MatchSource.WIKI,doc/master/classTGApplication.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGApplication.html
https://root.cern/doc/master/classTGApplication.html:17057,Modifiability,inherit,inherited,17057,"sion_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Protected Member Functions;  TGApplication ();  ; void LoadGraphicsLibs () override;  Load shared libs necessary for GUI. ;  ;  Protected Member Functions inherited from TApplication;  TApplication ();  Default ctor. Can be used by classes deriving from TApplication. ;  ; virtual void Forum (const char *line);  The function ("".forum <type>"") submits a new post on the ROOT forum via web browser. ;  ; virtual void GitHub (const char *line);  The function ("".gh <type>"") submits a new issue on GitHub via web browser. ;  ; virtual void Help (const char *line);  The function lists useful commands ("".help"") or opens the online reference guide, generated with Doxygen ("".help scope"" or "".help scope::member""). ;  ; virtual void MakeBatch ();  Switch to batch mode. ;  ; virtual Longptr_t ProcessRemote (const char *line, Int_t *error=nullptr);  Process the content of a line starting with "".R"" (already stripped-off) The format is. ;  ; void SetSignalHandler (TSignalHandler *sh);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ; ",MatchSource.WIKI,doc/master/classTGApplication.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGApplication.html
https://root.cern/doc/master/classTGApplication.html:17914,Modifiability,inherit,inherited,17914,"; void LoadGraphicsLibs () override;  Load shared libs necessary for GUI. ;  ;  Protected Member Functions inherited from TApplication;  TApplication ();  Default ctor. Can be used by classes deriving from TApplication. ;  ; virtual void Forum (const char *line);  The function ("".forum <type>"") submits a new post on the ROOT forum via web browser. ;  ; virtual void GitHub (const char *line);  The function ("".gh <type>"") submits a new issue on GitHub via web browser. ;  ; virtual void Help (const char *line);  The function lists useful commands ("".help"") or opens the online reference guide, generated with Doxygen ("".help scope"" or "".help scope::member""). ;  ; virtual void MakeBatch ();  Switch to batch mode. ;  ; virtual Longptr_t ProcessRemote (const char *line, Int_t *error=nullptr);  Process the content of a line starting with "".R"" (already stripped-off) The format is. ;  ; void SetSignalHandler (TSignalHandler *sh);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  . Private Attributes; TGClient * fClient {nullptr};  pointer to the client environment ;  ; TString fDisplay;  display server to connect to ;  . Additional Inherited Members;  Public Types inherited from TApplication; enum  EExitOnException { kDontExit; , kExit; , kAbort; };  ; enum  EFileBits { kExpression = (1ULL << ( 14 )); };  ; enum  EStatusBits { kProcessRemotely = (1ULL << ( 15 )); , kDefaultApplication = (1ULL << ( 16 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = ",MatchSource.WIKI,doc/master/classTGApplication.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGApplication.html
https://root.cern/doc/master/classTGApplication.html:18125,Modifiability,inherit,inherited,18125,"from TApplication. ;  ; virtual void Forum (const char *line);  The function ("".forum <type>"") submits a new post on the ROOT forum via web browser. ;  ; virtual void GitHub (const char *line);  The function ("".gh <type>"") submits a new issue on GitHub via web browser. ;  ; virtual void Help (const char *line);  The function lists useful commands ("".help"") or opens the online reference guide, generated with Doxygen ("".help scope"" or "".help scope::member""). ;  ; virtual void MakeBatch ();  Switch to batch mode. ;  ; virtual Longptr_t ProcessRemote (const char *line, Int_t *error=nullptr);  Process the content of a line starting with "".R"" (already stripped-off) The format is. ;  ; void SetSignalHandler (TSignalHandler *sh);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  . Private Attributes; TGClient * fClient {nullptr};  pointer to the client environment ;  ; TString fDisplay;  display server to connect to ;  . Additional Inherited Members;  Public Types inherited from TApplication; enum  EExitOnException { kDontExit; , kExit; , kAbort; };  ; enum  EFileBits { kExpression = (1ULL << ( 14 )); };  ; enum  EStatusBits { kProcessRemotely = (1ULL << ( 15 )); , kDefaultApplication = (1ULL << ( 16 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1U",MatchSource.WIKI,doc/master/classTGApplication.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGApplication.html
https://root.cern/doc/master/classTGApplication.html:18422,Modifiability,inherit,inherited,18422,"virtual void MakeBatch ();  Switch to batch mode. ;  ; virtual Longptr_t ProcessRemote (const char *line, Int_t *error=nullptr);  Process the content of a line starting with "".R"" (already stripped-off) The format is. ;  ; void SetSignalHandler (TSignalHandler *sh);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  . Private Attributes; TGClient * fClient {nullptr};  pointer to the client environment ;  ; TString fDisplay;  display server to connect to ;  . Additional Inherited Members;  Public Types inherited from TApplication; enum  EExitOnException { kDontExit; , kExit; , kAbort; };  ; enum  EFileBits { kExpression = (1ULL << ( 14 )); };  ; enum  EStatusBits { kProcessRemotely = (1ULL << ( 15 )); , kDefaultApplication = (1ULL << ( 16 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TApplication; static void Close (TApplication *app);  Static function used to close a remote application. ;  ; static TApplication * Open (const char *url, Int_t debug,",MatchSource.WIKI,doc/master/classTGApplication.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGApplication.html
https://root.cern/doc/master/classTGApplication.html:18687,Modifiability,inherit,inherited,18687,"virtual void MakeBatch ();  Switch to batch mode. ;  ; virtual Longptr_t ProcessRemote (const char *line, Int_t *error=nullptr);  Process the content of a line starting with "".R"" (already stripped-off) The format is. ;  ; void SetSignalHandler (TSignalHandler *sh);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  . Private Attributes; TGClient * fClient {nullptr};  pointer to the client environment ;  ; TString fDisplay;  display server to connect to ;  . Additional Inherited Members;  Public Types inherited from TApplication; enum  EExitOnException { kDontExit; , kExit; , kAbort; };  ; enum  EFileBits { kExpression = (1ULL << ( 14 )); };  ; enum  EStatusBits { kProcessRemotely = (1ULL << ( 15 )); , kDefaultApplication = (1ULL << ( 16 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TApplication; static void Close (TApplication *app);  Static function used to close a remote application. ;  ; static TApplication * Open (const char *url, Int_t debug,",MatchSource.WIKI,doc/master/classTGApplication.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGApplication.html
https://root.cern/doc/master/classTGApplication.html:19328,Modifiability,inherit,inherited,19328,"ed from TApplication; enum  EExitOnException { kDontExit; , kExit; , kAbort; };  ; enum  EFileBits { kExpression = (1ULL << ( 14 )); };  ; enum  EStatusBits { kProcessRemotely = (1ULL << ( 15 )); , kDefaultApplication = (1ULL << ( 16 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TApplication; static void Close (TApplication *app);  Static function used to close a remote application. ;  ; static TApplication * Open (const char *url, Int_t debug, const char *script);  Static function used to attach to an existing remote application or to start one. ;  ; static Int_t ParseRemoteLine (const char *ln, TString &hostdir, TString &user, Int_t &dbg, TString &script);  Parse the content of a line starting with "".R"" (already stripped-off) The format is. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, c",MatchSource.WIKI,doc/master/classTGApplication.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGApplication.html
https://root.cern/doc/master/classTGApplication.html:19434,Modifiability,inherit,inherited,19434,"ed from TApplication; enum  EExitOnException { kDontExit; , kExit; , kAbort; };  ; enum  EFileBits { kExpression = (1ULL << ( 14 )); };  ; enum  EStatusBits { kProcessRemotely = (1ULL << ( 15 )); , kDefaultApplication = (1ULL << ( 16 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TApplication; static void Close (TApplication *app);  Static function used to close a remote application. ;  ; static TApplication * Open (const char *url, Int_t debug, const char *script);  Static function used to attach to an existing remote application or to start one. ;  ; static Int_t ParseRemoteLine (const char *ln, TString &hostdir, TString &user, Int_t &dbg, TString &script);  Parse the content of a line starting with "".R"" (already stripped-off) The format is. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, c",MatchSource.WIKI,doc/master/classTGApplication.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGApplication.html
https://root.cern/doc/master/classTGApplication.html:19962,Modifiability,inherit,inherited,19962,"tusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TApplication; static void Close (TApplication *app);  Static function used to close a remote application. ;  ; static TApplication * Open (const char *url, Int_t debug, const char *script);  Static function used to attach to an existing remote application or to start one. ;  ; static Int_t ParseRemoteLine (const char *ln, TString &hostdir, TString &user, Int_t &dbg, TString &script);  Parse the content of a line starting with "".R"" (already stripped-off) The format is. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TApplication; TApplication * fAppRemote;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connecti",MatchSource.WIKI,doc/master/classTGApplication.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGApplication.html
https://root.cern/doc/master/classTGApplication.html:20811,Modifiability,inherit,inherited,20811,"_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TApplication; TApplication * fAppRemote;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TApplication; static TList * fgApplications = nullptr;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGApplication.h>. Inheritance diagram for TGApplication:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGApplication() [1/2]. TGApplication::TGApplication ; (; ). inlineprotected . Definition at line 28 of file TGApplication.h. ◆ TGApplication() [2/2]. TGApplication::TGApplication ; (; const char * ; appClassName, . Int_t * ; argc, . char ** ; argv, . void * ; options = nullptr, . Int_t ; numOptions = 0 . ). Create a GUI application environment. ; Use this class if you only want to use the ROOT GUI and no other services. In all other cases use either TApplication or TRint. ; Definition at line 44 of file TGApplication.cxx",MatchSource.WIKI,doc/master/classTGApplication.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGApplication.html
https://root.cern/doc/master/classTGApplication.html:20892,Modifiability,inherit,inherited,20892,"_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TApplication; TApplication * fAppRemote;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TApplication; static TList * fgApplications = nullptr;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGApplication.h>. Inheritance diagram for TGApplication:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGApplication() [1/2]. TGApplication::TGApplication ; (; ). inlineprotected . Definition at line 28 of file TGApplication.h. ◆ TGApplication() [2/2]. TGApplication::TGApplication ; (; const char * ; appClassName, . Int_t * ; argc, . char ** ; argv, . void * ; options = nullptr, . Int_t ; numOptions = 0 . ). Create a GUI application environment. ; Use this class if you only want to use the ROOT GUI and no other services. In all other cases use either TApplication or TRint. ; Definition at line 44 of file TGApplication.cxx",MatchSource.WIKI,doc/master/classTGApplication.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGApplication.html
https://root.cern/doc/master/classTGApplication.html:21105,Modifiability,inherit,inherited,21105,"_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TApplication; TApplication * fAppRemote;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TApplication; static TList * fgApplications = nullptr;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGApplication.h>. Inheritance diagram for TGApplication:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGApplication() [1/2]. TGApplication::TGApplication ; (; ). inlineprotected . Definition at line 28 of file TGApplication.h. ◆ TGApplication() [2/2]. TGApplication::TGApplication ; (; const char * ; appClassName, . Int_t * ; argc, . char ** ; argv, . void * ; options = nullptr, . Int_t ; numOptions = 0 . ). Create a GUI application environment. ; Use this class if you only want to use the ROOT GUI and no other services. In all other cases use either TApplication or TRint. ; Definition at line 44 of file TGApplication.cxx",MatchSource.WIKI,doc/master/classTGApplication.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGApplication.html
https://root.cern/doc/master/classTGApplication.html:21207,Modifiability,inherit,inherited,21207,"_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TApplication; TApplication * fAppRemote;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TApplication; static TList * fgApplications = nullptr;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGApplication.h>. Inheritance diagram for TGApplication:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGApplication() [1/2]. TGApplication::TGApplication ; (; ). inlineprotected . Definition at line 28 of file TGApplication.h. ◆ TGApplication() [2/2]. TGApplication::TGApplication ; (; const char * ; appClassName, . Int_t * ; argc, . char ** ; argv, . void * ; options = nullptr, . Int_t ; numOptions = 0 . ). Create a GUI application environment. ; Use this class if you only want to use the ROOT GUI and no other services. In all other cases use either TApplication or TRint. ; Definition at line 44 of file TGApplication.cxx",MatchSource.WIKI,doc/master/classTGApplication.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGApplication.html
https://root.cern/doc/master/classTGApplication.html:3133,Performance,load,loads,3133,"timeout. ;  ; virtual Bool_t HandleTermInput ();  ; virtual void Hide ();  ; virtual void Iconify ();  ; virtual void Init ();  ; void InitializeGraphics (Bool_t only_web=kFALSE);  Initialize the graphics environment. ;  ; TObjArray * InputFiles () const;  ; virtual Bool_t IsCmdThread ();  ; Bool_t IsRunning () const;  ; virtual void KeyPressed (Int_t key);  Emit signal when console keyboard key was pressed. ;  ; virtual void LineProcessed (const char *line);  Emit signal when a line has been processed. ;  ; virtual void Lower ();  ; void ls (Option_t *option="""") const override;  Show available sessions. ;  ; Bool_t NoLogoOpt () const;  ; Bool_t NoLogOpt () const;  ; virtual void Open ();  ; void OpenForumTopic (const TString &type);  It opens a Forum topic in a web browser with prefilled ROOT version. ;  ; void OpenGitHubIssue (const TString &type);  It opens a GitHub issue in a web browser with prefilled ROOT version. ;  ; void OpenInBrowser (const TString &url);  The function generates and executes a command that loads the Doxygen URL in a browser. ;  ; void OpenReferenceGuideFor (const TString &strippedClass);  It opens the online reference guide, generated with Doxygen, for the chosen scope (class/namespace/struct) or member (method/function/ data member/enumeration/enumerator. ;  ; virtual Longptr_t ProcessFile (const char *file, Int_t *error=nullptr, Bool_t keep=kFALSE);  Process a file containing a C++ macro. ;  ; virtual Longptr_t ProcessLine (const char *line, Bool_t sync=kFALSE, Int_t *error=nullptr);  Process a single command line, either a C++ statement or an interpreter command starting with a ""."". ;  ; Bool_t QuitOpt () const;  ; virtual void Raise ();  ; virtual void RemoveIdleTimer ();  Remove idle timer. Normally called via TROOT::Idle(0). ;  ; Bool_t ReturnFromRun () const;  ; virtual void ReturnPressed (char *text);  Emit signal when return key was pressed. ;  ; virtual void Run (Bool_t retrn=kFALSE);  Main application eventloop. Calls system dep",MatchSource.WIKI,doc/master/classTGApplication.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGApplication.html
https://root.cern/doc/master/classTGApplication.html:2101,Safety,timeout,timeout,2101,"st char *appClassName, Int_t *argc, char **argv, void *options=nullptr, Int_t numOptions=0);  Create an application environment. ;  ; virtual ~TApplication ();  TApplication dtor. ;  ; virtual const char * ApplicationName () const;  ; Int_t Argc () const;  ; char ** Argv () const;  ; char * Argv (Int_t index) const;  Return specified argument. ;  ; void ClearInputFiles ();  Clear list containing macro files passed as program arguments. ;  ; EExitOnException ExitOnException (EExitOnException opt=kExit);  Set the exit on exception option. ;  ; virtual TApplicationImp * GetApplicationImp ();  ; TApplication * GetAppRemote () const;  ; const char * GetIdleCommand () const;  ; TString GetSetup ();  It gets the ROOT installation setup as TString. ;  ; TSignalHandler * GetSignalHandler () const;  ; virtual void HandleException (Int_t sig);  Handle exceptions (kSigBus, kSigSegmentationViolation, kSigIllegalInstruction and kSigFloatingException) trapped in TSystem. ;  ; virtual void HandleIdleTimer ();  Handle idle timeout. ;  ; virtual Bool_t HandleTermInput ();  ; virtual void Hide ();  ; virtual void Iconify ();  ; virtual void Init ();  ; void InitializeGraphics (Bool_t only_web=kFALSE);  Initialize the graphics environment. ;  ; TObjArray * InputFiles () const;  ; virtual Bool_t IsCmdThread ();  ; Bool_t IsRunning () const;  ; virtual void KeyPressed (Int_t key);  Emit signal when console keyboard key was pressed. ;  ; virtual void LineProcessed (const char *line);  Emit signal when a line has been processed. ;  ; virtual void Lower ();  ; void ls (Option_t *option="""") const override;  Show available sessions. ;  ; Bool_t NoLogoOpt () const;  ; Bool_t NoLogOpt () const;  ; virtual void Open ();  ; void OpenForumTopic (const TString &type);  It opens a Forum topic in a web browser with prefilled ROOT version. ;  ; void OpenGitHubIssue (const TString &type);  It opens a GitHub issue in a web browser with prefilled ROOT version. ;  ; void OpenInBrowser (const TString &url)",MatchSource.WIKI,doc/master/classTGApplication.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGApplication.html
https://root.cern/doc/master/classTGApplication.html:8245,Security,hash,hash,8245," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t",MatchSource.WIKI,doc/master/classTGApplication.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGApplication.html
https://root.cern/doc/master/classTGApplication.html:3264,Usability,guid,guide,3264,"ialize the graphics environment. ;  ; TObjArray * InputFiles () const;  ; virtual Bool_t IsCmdThread ();  ; Bool_t IsRunning () const;  ; virtual void KeyPressed (Int_t key);  Emit signal when console keyboard key was pressed. ;  ; virtual void LineProcessed (const char *line);  Emit signal when a line has been processed. ;  ; virtual void Lower ();  ; void ls (Option_t *option="""") const override;  Show available sessions. ;  ; Bool_t NoLogoOpt () const;  ; Bool_t NoLogOpt () const;  ; virtual void Open ();  ; void OpenForumTopic (const TString &type);  It opens a Forum topic in a web browser with prefilled ROOT version. ;  ; void OpenGitHubIssue (const TString &type);  It opens a GitHub issue in a web browser with prefilled ROOT version. ;  ; void OpenInBrowser (const TString &url);  The function generates and executes a command that loads the Doxygen URL in a browser. ;  ; void OpenReferenceGuideFor (const TString &strippedClass);  It opens the online reference guide, generated with Doxygen, for the chosen scope (class/namespace/struct) or member (method/function/ data member/enumeration/enumerator. ;  ; virtual Longptr_t ProcessFile (const char *file, Int_t *error=nullptr, Bool_t keep=kFALSE);  Process a file containing a C++ macro. ;  ; virtual Longptr_t ProcessLine (const char *line, Bool_t sync=kFALSE, Int_t *error=nullptr);  Process a single command line, either a C++ statement or an interpreter command starting with a ""."". ;  ; Bool_t QuitOpt () const;  ; virtual void Raise ();  ; virtual void RemoveIdleTimer ();  Remove idle timer. Normally called via TROOT::Idle(0). ;  ; Bool_t ReturnFromRun () const;  ; virtual void ReturnPressed (char *text);  Emit signal when return key was pressed. ;  ; virtual void Run (Bool_t retrn=kFALSE);  Main application eventloop. Calls system dependent eventloop via gSystem. ;  ; virtual void SetEchoMode (Bool_t mode);  Set console echo mode: ;  ; virtual void SetIdleTimer (UInt_t idleTimeInSec, const char *command);  Set the c",MatchSource.WIKI,doc/master/classTGApplication.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGApplication.html
https://root.cern/doc/master/classTGApplication.html:17540,Usability,guid,guide,17540,"();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Protected Member Functions;  TGApplication ();  ; void LoadGraphicsLibs () override;  Load shared libs necessary for GUI. ;  ;  Protected Member Functions inherited from TApplication;  TApplication ();  Default ctor. Can be used by classes deriving from TApplication. ;  ; virtual void Forum (const char *line);  The function ("".forum <type>"") submits a new post on the ROOT forum via web browser. ;  ; virtual void GitHub (const char *line);  The function ("".gh <type>"") submits a new issue on GitHub via web browser. ;  ; virtual void Help (const char *line);  The function lists useful commands ("".help"") or opens the online reference guide, generated with Doxygen ("".help scope"" or "".help scope::member""). ;  ; virtual void MakeBatch ();  Switch to batch mode. ;  ; virtual Longptr_t ProcessRemote (const char *line, Int_t *error=nullptr);  Process the content of a line starting with "".R"" (already stripped-off) The format is. ;  ; void SetSignalHandler (TSignalHandler *sh);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  . Private Attributes; TGClient * fClient {nullptr};  pointer to the client environment ;  ; TString fDisplay;  display server to connect to ;  . Additional Inherited Members;  Public Types inherited from TApplication; enum  EExitOnException { kDontExit; , kExit; , kAbort; };  ; enum  EFileBits { kExpress",MatchSource.WIKI,doc/master/classTGApplication.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGApplication.html
https://root.cern/doc/master/classTGaxis-members.html:2552,Availability,error,error,2552,"rtual; DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2)TAttLine; DistancetoPrimitive(Int_t px, Int_t py) overrideTLinevirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawAxis(Double_t xmin, Double_t ymin, Double_t xmax, Double_t ymax, Double_t wmin, Double_t wmax, Int_t ndiv=510, Option_t *chopt="""", Double_t gridlength=0)TGaxisvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; DrawLine(Double_t x1, Double_t y1, Double_t x2, Double_t y2)TLinevirtual; DrawLineNDC(Double_t x1, Double_t y1, Double_t x2, Double_t y2)TLinevirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py) overrideTLinevirtual; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fAxisTGaxisprotected; fBitsTObjectprivate; fChoptTGaxisprotected; fFunctionTGaxisprotected; fFunctionNameTGaxisprotected; fgDtorOnlyTObjectprivatestatic; fgObjectStatTObjectprivatestatic; fGridLengthTGaxisprotected; FindModLab(Int_t indx, Int_t numlabels=0, Double_t v=0., Double_t eps=-1.) constTGaxisprotected; FindObject(const char *name) constTObjectvirtual; FindObject(const TObject *obj) constTObjectvirtual; fLabelColorTGaxisprotected; fLabelFontTGaxisprotected; fLabelOffsetTGaxisprotected; fLabelSizeTGaxisprotected; fLineColorTAttLineprotected; fLineStyleTAttLineprotected; fLineWidthTAttLineprotected; fModLabsTGaxisprotected; fNameTGaxisprotected; fNdivTGaxisprotected; fNModLabsTGaxisprotected; fTextAlignTAttTextprotected; fTextAngleTAttTextprotected; fTextColorTAttTextprotected; fTextFontTAttT",MatchSource.WIKI,doc/master/classTGaxis-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGaxis-members.html
https://root.cern/doc/master/classTGaxis-members.html:2633,Availability,error,error,2633,"rtual; DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2)TAttLine; DistancetoPrimitive(Int_t px, Int_t py) overrideTLinevirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawAxis(Double_t xmin, Double_t ymin, Double_t xmax, Double_t ymax, Double_t wmin, Double_t wmax, Int_t ndiv=510, Option_t *chopt="""", Double_t gridlength=0)TGaxisvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; DrawLine(Double_t x1, Double_t y1, Double_t x2, Double_t y2)TLinevirtual; DrawLineNDC(Double_t x1, Double_t y1, Double_t x2, Double_t y2)TLinevirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py) overrideTLinevirtual; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fAxisTGaxisprotected; fBitsTObjectprivate; fChoptTGaxisprotected; fFunctionTGaxisprotected; fFunctionNameTGaxisprotected; fgDtorOnlyTObjectprivatestatic; fgObjectStatTObjectprivatestatic; fGridLengthTGaxisprotected; FindModLab(Int_t indx, Int_t numlabels=0, Double_t v=0., Double_t eps=-1.) constTGaxisprotected; FindObject(const char *name) constTObjectvirtual; FindObject(const TObject *obj) constTObjectvirtual; fLabelColorTGaxisprotected; fLabelFontTGaxisprotected; fLabelOffsetTGaxisprotected; fLabelSizeTGaxisprotected; fLineColorTAttLineprotected; fLineStyleTAttLineprotected; fLineWidthTAttLineprotected; fModLabsTGaxisprotected; fNameTGaxisprotected; fNdivTGaxisprotected; fNModLabsTGaxisprotected; fTextAlignTAttTextprotected; fTextAngleTAttTextprotected; fTextColorTAttTextprotected; fTextFontTAttT",MatchSource.WIKI,doc/master/classTGaxis-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGaxis-members.html
https://root.cern/doc/master/classTGaxis-members.html:185,Modifiability,inherit,inherited,185,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGaxis Member List. This is the complete list of members for TGaxis, including all inherited members. AbstractMethod(const char *method) constTObject; AddToTObjectTable(TObject *)TObjectprivatestatic; AdjustBinSize(Double_t A1, Double_t A2, Int_t nold, Double_t &BinLow, Double_t &BinHigh, Int_t &nbins, Double_t &BinWidth)TGaxisvirtual; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b)TObjectvirtual; CenterLabels(Bool_t center=kTRUE)TGaxisvirtual; CenterTitle(Bool_t center=kTRUE)TGaxisvirtual; ChangeLabel(Int_t labNum=0, Double_t labAngle=-1., Double_t labSize=-1., Int_t labAlign=-1, Int_t labColor=-1, Int_t labFont=-1, const TString &labText="""")TGaxis; ChangeLabelAttributes(Int_t i, Int_t nlabels, TLatex *t, char *c, Double_t value=0., Double_t eps=-1.)TGaxis; ChangeLabelByValue(Double_t labValue, Double_t labAngle=-1., Double_t labSize=-1., Int_t labAlign=-1, Int_t labColor=-1, Int_t labFont=-1, const TString &labText="""")TGaxis; CheckedHash()TObjectinline; Class()TGaxisstatic; Class_Name()TGaxisstatic; Class_Version()TGaxisinlinestatic; ClassName() constTObjectvirtual; CleanupModLabs()TGaxisprotected; Clear(Option_t *="""")TObjectinlinevirtual; Clone(const char *newname="""") constTObjectvirtual; Compare(const TObject *obj) constTObjectvirtual; TLine::Copy(TObject &line) const overrideTLinevirtual; TLine::TAttLine::Copy(TAttLine &attline) constTAttLine; TAttText::Copy(TAttText &atttext) constTAttText; DeclFileName()TGaxisinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2)TAttLine; DistancetoPrimitive(Int_t px, Int_t py) overrideTLinevirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawAxis(Double_t xmin, Double_t ymin, Double_t xmax, Double_t ymax, Double_t wmi",MatchSource.WIKI,doc/master/classTGaxis-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGaxis-members.html
https://root.cern/doc/master/classTGaxis.html:45403,Availability,error,error,45403," consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual UInt_t GetUniqueID () cons",MatchSource.WIKI,doc/master/classTGaxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGaxis.html
https://root.cern/doc/master/classTGaxis.html:45492,Availability,error,error,45492,"ject. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute act",MatchSource.WIKI,doc/master/classTGaxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGaxis.html
https://root.cern/doc/master/classTGaxis.html:45647,Availability,error,error,45647,"ect * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Retur",MatchSource.WIKI,doc/master/classTGaxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGaxis.html
https://root.cern/doc/master/classTGaxis.html:45824,Availability,error,error,45824,"bstract method. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *m",MatchSource.WIKI,doc/master/classTGaxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGaxis.html
https://root.cern/doc/master/classTGaxis.html:49726,Availability,error,error,49726,"r new[] (size_t sz, void *vp);  ; TObject & operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TAttLine;  TAttLine ();  AttLine default constructor. ;  ;  TAttLine (Color_t lcolor, Style_t lstyle, Width_t lwidth);  AttLine normal constructor. ;  ; virtual ~TAttLine ();  AttLine destructor. ;  ; void Copy (TAttLine &attline) const;  Copy this line attributes to a new TAttLine. ;  ; Int_t ",MatchSource.WIKI,doc/master/classTGaxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGaxis.html
https://root.cern/doc/master/classTGaxis.html:5264,Energy Efficiency,energy,energy,5264,".; A TGaxis is defined the following way: TGaxis::TGaxis(Double_t xmin, Double_t ymin, Double_t xmax, Double_t ymax,; const char *func, Int_t ndiv, Option_t *chopt,; Double_t gridlength); Where:. xmin : X origin coordinate in user's coordinates space.; xmax : X end axis coordinate in user's coordinates space.; ymin : Y origin coordinate in user's coordinates space.; ymax : Y end axis coordinate in user's coordinates space.; func : function defining axis labels and tick marks.; ndiv : Number of divisions.; ndiv=N1 + 100*N2 + 10000*N3; N1=number of 1st divisions.; N2=number of 2nd divisions.; N3=number of 3rd divisions. e.g.:; ndiv=0 --> no tick marks.; ndiv=2 --> 2 divisions, one tick mark in the middle of the axis. chopt : Drawing options (see below).; gridlength: grid length on main tick marks. It should be noted that func is not defined in the user's coordinate space, but in the new TGaxis space. If x is the original axis, w the new axis, and w = f(x) (for example, f is a calibration function converting ADC channels x to energy w), then func must be supplied as f^{-1}(w).; Examples:; {; TCanvas *c2 = new TCanvas(""c2"",""c2"",10,10,700,500);; ; gPad->DrawFrame(0.,-2.,10.,2);; ; TF1 *f1=new TF1(""f1"",""-x"",-10,10);; TGaxis *A1 = new TGaxis(0,2,10,2,""f1"",510,""-"");; A1->SetTitle(""axis with decreasing values"");; A1->Draw();; ; TF1 *f2=new TF1(""f2"",""exp(x)"",0,2);; TGaxis *A2 = new TGaxis(1,1,9,1,""f2"");; A2->SetTitle(""exponential axis"");; A2->SetLabelSize(0.03);; A2->SetTitleSize(0.03);; A2->SetTitleOffset(1.2);; A2->Draw();; ; TF1 *f3=new TF1(""f3"",""log10(x)"",1,1000);; TGaxis *A3 = new TGaxis(2,-2,2,0,""f3"",505,"""");; A3->SetTitle(""logarithmic axis"");; A3->SetLabelSize(0.02);; A3->SetTitleSize(0.03);; A3->SetTitleOffset(0.); // Axis title automatically placed; A3->Draw();; }; gPad#define gPadDefinition TVirtualPad.h:308; TF11-Dim function classDefinition TF1.h:233; TGaxisThe axis painter class.Definition TGaxis.h:24; TGaxis::SetTitleOffsetvoid SetTitleOffset(Float_t titleoffset=",MatchSource.WIKI,doc/master/classTGaxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGaxis.html
https://root.cern/doc/master/classTGaxis.html:60302,Energy Efficiency,energy,energy,60302,"TGaxis ; (; const TGaxis & ; ax). protected . Copy constructor. ; Definition at line 796 of file TGaxis.cxx. ◆ TGaxis() [2/4]. TGaxis::TGaxis ; (; ). TGaxis default constructor. ; Definition at line 694 of file TGaxis.cxx. ◆ TGaxis() [3/4]. TGaxis::TGaxis ; (; Double_t ; xmin, . Double_t ; ymin, . Double_t ; xmax, . Double_t ; ymax, . Double_t ; wmin, . Double_t ; wmax, . Int_t ; ndiv = 510, . Option_t * ; chopt = """", . Double_t ; gridlength = 0 . ). TGaxis normal constructor. ; Definition at line 722 of file TGaxis.cxx. ◆ TGaxis() [4/4]. TGaxis::TGaxis ; (; Double_t ; xmin, . Double_t ; ymin, . Double_t ; xmax, . Double_t ; ymax, . const char * ; funcname, . Int_t ; ndiv = 510, . Option_t * ; chopt = """", . Double_t ; gridlength = 0 . ). Constructor with a TF1 to map axis values. ; NoteThe function func (with name funcname) is not defined in the user's coordinate space, but in the new TGaxis space. If x is the original axis, w the new axis, and w = f(x) (for example, f is a calibration function converting ADC channels x to energy w), then func must be supplied as f^{-1}(w). ; Definition at line 759 of file TGaxis.cxx. ◆ ~TGaxis(). TGaxis::~TGaxis ; (; ). override . TGaxis default destructor. ; Definition at line 861 of file TGaxis.cxx. Member Function Documentation. ◆ AdjustBinSize(). void TGaxis::AdjustBinSize ; (; Double_t ; A1, . Double_t ; A2, . Int_t ; nold, . Double_t & ; binLow, . Double_t & ; binHigh, . Int_t & ; nbins, . Double_t & ; binWidth . ). virtual . Internal method for axis labels optimisation. ; This method adjusts the bining of the axis in order to have integer values for the labels.; Parameters. [in]A1,A2Old WMIN,WMAX ; [out]binLow,binHighNew WMIN,WMAX ; [in]noldOld NDIV (primary divisions) ; [out]nbinsNew NDIV ; [out]binWidthBin width . Definition at line 2498 of file TGaxis.cxx. ◆ CenterLabels(). void TGaxis::CenterLabels ; (; Bool_t ; center = kTRUE). virtual . If center = kTRUE axis labels are centered in the center of the bin. ; The default i",MatchSource.WIKI,doc/master/classTGaxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGaxis.html
https://root.cern/doc/master/classTGaxis.html:65124,Energy Efficiency,green,green,65124," Define new text attributes for the label value ""labValue"". ; It allows to do a fine tuning of the labels. All the attributes can be changed, even the label text itself.; Parameters. [in]labValueAxis value to be changed ; [in]labAngleNew angle value ; [in]labSizeNew size (0 erase the label) ; [in]labAlignNew alignment value ; [in]labColorNew label color ; [in]labFontNew label font ; [in]labTextNew label text. Example:; {; auto c = new TCanvas(""c1"",""Examples of TGaxis"",900,100);; c->Range(-6,-0.1,6,0.1);; auto *axis = new TGaxis(-5.5,0.,5.5,0.,0.0,100,510,""S"");; axis->SetName(""axis1"");; axis->SetTitle(""Axis Title"");; axis->SetTitleSize(0.2);; axis->SetLabelSize(0.2);; axis->SetTickSize(0.15);; axis->SetTitleColor(kBlue);; axis->SetTitleFont(42);; axis->ChangeLabelByValue(0., -1, -1, -1, kRed);; axis->ChangeLabelByValue(20., -1, 0);; axis->ChangeLabelByValue(40., 30.);; axis->ChangeLabelByValue(50., -1, -1, -1, kBlue, -1, ""blue for 50."");; axis->ChangeLabelByValue(90., -1, -1, -1, kGreen, -1, ""green for 90."");; axis->Draw();; }; kGreen@ kGreenDefinition Rtypes.h:66. Notes:. If an attribute should not be changed just give the value ""-1"".; To erase a label set labSize to 0; If labText is not specified or is an empty string, the text label is not changed. . Definition at line 2813 of file TGaxis.cxx. ◆ Class(). static TClass * TGaxis::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TGaxis::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TGaxis::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 136 of file TGaxis.h. ◆ CleanupModLabs(). void TGaxis::CleanupModLabs ; (; ). protected . Correctly cleanup fModLabs - delete content when owned by TGaxis. ; Definition at line 881 of file TGaxis.cxx. ◆ DeclFileName(). static const char * TGaxis::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declarati",MatchSource.WIKI,doc/master/classTGaxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGaxis.html
https://root.cern/doc/master/classTGaxis.html:45409,Integrability,message,message,45409," consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual UInt_t GetUniqueID () cons",MatchSource.WIKI,doc/master/classTGaxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGaxis.html
https://root.cern/doc/master/classTGaxis.html:45830,Integrability,message,message,45830,"bstract method. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *m",MatchSource.WIKI,doc/master/classTGaxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGaxis.html
https://root.cern/doc/master/classTGaxis.html:46850,Integrability,message,message,46850," virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle again",MatchSource.WIKI,doc/master/classTGaxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGaxis.html
https://root.cern/doc/master/classTGaxis.html:49732,Integrability,message,message,49732,"r new[] (size_t sz, void *vp);  ; TObject & operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TAttLine;  TAttLine ();  AttLine default constructor. ;  ;  TAttLine (Color_t lcolor, Style_t lstyle, Width_t lwidth);  AttLine normal constructor. ;  ; virtual ~TAttLine ();  AttLine destructor. ;  ; void Copy (TAttLine &attline) const;  Copy this line attributes to a new TAttLine. ;  ; Int_t ",MatchSource.WIKI,doc/master/classTGaxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGaxis.html
https://root.cern/doc/master/classTGaxis.html:50105,Integrability,message,message,50105,"move this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TAttLine;  TAttLine ();  AttLine default constructor. ;  ;  TAttLine (Color_t lcolor, Style_t lstyle, Width_t lwidth);  AttLine normal constructor. ;  ; virtual ~TAttLine ();  AttLine destructor. ;  ; void Copy (TAttLine &attline) const;  Copy this line attributes to a new TAttLine. ;  ; Int_t DistancetoLine (Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2);  Compute distance from point px,py to a line. ;  ; virtual Color_t GetLineColor () const;  Return the line color. ;  ; virtual Style_t GetLineStyle () const;  Return the line style. ;  ; virtual Width_t GetLineWidth () const;  Return the line width. ;  ; virtual void Modify ();  Ch",MatchSource.WIKI,doc/master/classTGaxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGaxis.html
https://root.cern/doc/master/classTGaxis.html:40507,Modifiability,inherit,inherited,40507," axis. ;  ; virtual void SetNdivisions (Int_t ndiv);  ; virtual void SetNoExponent (Bool_t noExponent=kTRUE);  Set the NoExponent flag. ;  ; void SetOption (Option_t *option="""");  To set axis options. ;  ; void SetTickLength (Float_t ticklength);  ; void SetTickSize (Float_t ticksize);  ; void SetTimeFormat (const char *tformat);  Change the format used for time plotting. ;  ; void SetTimeOffset (Double_t toffset, Option_t *option=""local"");  Change the time offset. If option = ""gmt"", set display mode to GMT. ;  ; virtual void SetTitle (const char *title="""");  Change the title of the axis. ;  ; void SetTitleColor (Int_t titlecolor);  ; void SetTitleFont (Int_t titlefont);  ; void SetTitleOffset (Float_t titleoffset=1);  ; void SetTitleSize (Float_t titlesize);  ; void SetWmax (Double_t wmax);  ; void SetWmin (Double_t wmin);  ; void Streamer (TBuffer &) override;  Stream an object of class TGaxis. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TLine;  TLine ();  ;  TLine (const TLine &line);  Line copy constructor. ;  ;  TLine (Double_t x1, Double_t y1, Double_t x2, Double_t y2);  Line normal constructor. ;  ;  ~TLine () override=default;  ; void Copy (TObject &line) const override;  Copy this line to line. ;  ; Int_t DistancetoPrimitive (Int_t px, Int_t py) override;  Compute distance from point px,py to a line. ;  ; virtual TLine * DrawLine (Double_t x1, Double_t y1, Double_t x2, Double_t y2);  Draw this line with new coordinates. ;  ; virtual TLine * DrawLineNDC (Double_t x1, Double_t y1, Double_t x2, Double_t y2);  Draw this line with new coordinates in NDC. ;  ; void ExecuteEvent (Int_t event, Int_t px, Int_t py) override;  Execute action corresponding to one event. ;  ; Rectangle_t GetBBox () override;  Return the bounding Box of the Line. ;  ; TPoint GetBBoxCenter () override;  Return the center of the BoundingBox as TPoint in pixels. ;  ; Double_t GetX1 () const;  ; Double_t GetX2 () const;  ; Doub",MatchSource.WIKI,doc/master/classTGaxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGaxis.html
https://root.cern/doc/master/classTGaxis.html:43823,Modifiability,inherit,inherited,43823,";  Set left hand side of BoundingBox to a value (resize in x direction on left) ;  ; void SetBBoxX2 (const Int_t x) override;  Set right hand side of BoundingBox to a value (resize in x direction on right) ;  ; void SetBBoxY1 (const Int_t y) override;  Set top of BoundingBox to a value (resize in y direction on top) ;  ; void SetBBoxY2 (const Int_t y) override;  Set bottom of BoundingBox to a value (resize in y direction on bottom) ;  ; void SetHorizontal (Bool_t set=kTRUE);  Force the line to be drawn horizontally. ;  ; virtual void SetNDC (Bool_t isNDC=kTRUE);  Set NDC mode on if isNDC = kTRUE, off otherwise. ;  ; void SetVertical (Bool_t set=kTRUE);  Force the line to be drawn vertically. ;  ; virtual void SetX1 (Double_t x1);  ; virtual void SetX2 (Double_t x2);  ; virtual void SetY1 (Double_t y1);  ; virtual void SetY2 (Double_t y2);  ; void Streamer (TBuffer &) override;  Stream an object of class TLine. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,doc/master/classTGaxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGaxis.html
https://root.cern/doc/master/classTGaxis.html:45039,Modifiability,inherit,inheritance,45039,"se this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ;",MatchSource.WIKI,doc/master/classTGaxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGaxis.html
https://root.cern/doc/master/classTGaxis.html:46948,Modifiability,inherit,inherits,46948,"n derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality th",MatchSource.WIKI,doc/master/classTGaxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGaxis.html
https://root.cern/doc/master/classTGaxis.html:47065,Modifiability,inherit,inherits,47065,"ses. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden t",MatchSource.WIKI,doc/master/classTGaxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGaxis.html
https://root.cern/doc/master/classTGaxis.html:50412,Modifiability,inherit,inherited,50412,"tDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TAttLine;  TAttLine ();  AttLine default constructor. ;  ;  TAttLine (Color_t lcolor, Style_t lstyle, Width_t lwidth);  AttLine normal constructor. ;  ; virtual ~TAttLine ();  AttLine destructor. ;  ; void Copy (TAttLine &attline) const;  Copy this line attributes to a new TAttLine. ;  ; Int_t DistancetoLine (Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2);  Compute distance from point px,py to a line. ;  ; virtual Color_t GetLineColor () const;  Return the line color. ;  ; virtual Style_t GetLineStyle () const;  Return the line style. ;  ; virtual Width_t GetLineWidth () const;  Return the line width. ;  ; virtual void Modify ();  Change current line attributes if necessary. ;  ; virtual void ResetAttLine (Option_t *option="""");  Reset this line attributes to default values. ;  ; virtual void SaveLineAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t widdef=1);  Save line attributes as C++ statement(s) on output stream out. ; ",MatchSource.WIKI,doc/master/classTGaxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGaxis.html
https://root.cern/doc/master/classTGaxis.html:51917,Modifiability,inherit,inherited,51917,"eturn the line style. ;  ; virtual Width_t GetLineWidth () const;  Return the line width. ;  ; virtual void Modify ();  Change current line attributes if necessary. ;  ; virtual void ResetAttLine (Option_t *option="""");  Reset this line attributes to default values. ;  ; virtual void SaveLineAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t widdef=1);  Save line attributes as C++ statement(s) on output stream out. ;  ; virtual void SetLineAttributes ();  Invoke the DialogCanvas Line attributes. ;  ; virtual void SetLineColor (Color_t lcolor);  Set the line color. ;  ; virtual void SetLineColorAlpha (Color_t lcolor, Float_t lalpha);  Set a transparent line color. ;  ; virtual void SetLineStyle (Style_t lstyle);  Set the line style. ;  ; virtual void SetLineWidth (Width_t lwidth);  Set the line width. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttBBox2D; virtual ~TAttBBox2D ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttText;  TAttText ();  AttText default constructor. ;  ;  TAttText (Int_t align, Float_t angle, Color_t color, Style_t font, Float_t tsize);  AttText normal constructor. ;  ; virtual ~TAttText ();  AttText destructor. ;  ; void Copy (TAttText &atttext) const;  Copy this text attributes to a new TAttText. ;  ; virtual Short_t GetTextAlign () const;  Return the text alignment. ;  ; virtual Float_t GetTextAngle () const;  Return the text angle. ;  ; virtual Color_t GetTextColor () const;  Return the text color. ;  ; virtual Font_t GetTextFont () const;  Return the text font. ;  ; virtual Float_t GetTextSize () const;  Return the text size. ;  ; virtual Float_t GetTextSizePercent (Float_t size);  Return the text in percent of the pad size. ;  ; virtual void Modify ();  Change current text attributes if necessary. ;  ; virtual void ResetAttText (Option_t *toption="""");  Reset this text attr",MatchSource.WIKI,doc/master/classTGaxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGaxis.html
https://root.cern/doc/master/classTGaxis.html:52061,Modifiability,inherit,inherited,52061,"eturn the line style. ;  ; virtual Width_t GetLineWidth () const;  Return the line width. ;  ; virtual void Modify ();  Change current line attributes if necessary. ;  ; virtual void ResetAttLine (Option_t *option="""");  Reset this line attributes to default values. ;  ; virtual void SaveLineAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t widdef=1);  Save line attributes as C++ statement(s) on output stream out. ;  ; virtual void SetLineAttributes ();  Invoke the DialogCanvas Line attributes. ;  ; virtual void SetLineColor (Color_t lcolor);  Set the line color. ;  ; virtual void SetLineColorAlpha (Color_t lcolor, Float_t lalpha);  Set a transparent line color. ;  ; virtual void SetLineStyle (Style_t lstyle);  Set the line style. ;  ; virtual void SetLineWidth (Width_t lwidth);  Set the line width. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttBBox2D; virtual ~TAttBBox2D ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttText;  TAttText ();  AttText default constructor. ;  ;  TAttText (Int_t align, Float_t angle, Color_t color, Style_t font, Float_t tsize);  AttText normal constructor. ;  ; virtual ~TAttText ();  AttText destructor. ;  ; void Copy (TAttText &atttext) const;  Copy this text attributes to a new TAttText. ;  ; virtual Short_t GetTextAlign () const;  Return the text alignment. ;  ; virtual Float_t GetTextAngle () const;  Return the text angle. ;  ; virtual Color_t GetTextColor () const;  Return the text color. ;  ; virtual Font_t GetTextFont () const;  Return the text font. ;  ; virtual Float_t GetTextSize () const;  Return the text size. ;  ; virtual Float_t GetTextSizePercent (Float_t size);  Return the text in percent of the pad size. ;  ; virtual void Modify ();  Change current text attributes if necessary. ;  ; virtual void ResetAttText (Option_t *toption="""");  Reset this text attr",MatchSource.WIKI,doc/master/classTGaxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGaxis.html
https://root.cern/doc/master/classTGaxis.html:54477,Modifiability,inherit,inherited,54477," the text font. ;  ; virtual void SetTextSize (Float_t tsize=1);  Set the text size. ;  ; virtual void SetTextSizePixels (Int_t npixels);  Set the text size in pixel. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetMaxDigits ();  Static function returning gStyle->GetAxisMaxDigits(). ;  ; static void SetExponentOffset (Float_t xoff=0., Float_t yoff=0., Option_t *axis=""xy"");  Static method to set X and Y offset of the axis 10^n notation. ;  ; static void SetMaxDigits (Int_t maxd=5);  Static function to set fgMaxDigits for axis. ;  ;  Static Public Member Functions inherited from TLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttBBox2D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttText; static TClass * Class ();  ;",MatchSource.WIKI,doc/master/classTGaxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGaxis.html
https://root.cern/doc/master/classTGaxis.html:54686,Modifiability,inherit,inherited,54686," the text font. ;  ; virtual void SetTextSize (Float_t tsize=1);  Set the text size. ;  ; virtual void SetTextSizePixels (Int_t npixels);  Set the text size in pixel. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetMaxDigits ();  Static function returning gStyle->GetAxisMaxDigits(). ;  ; static void SetExponentOffset (Float_t xoff=0., Float_t yoff=0., Option_t *axis=""xy"");  Static method to set X and Y offset of the axis 10^n notation. ;  ; static void SetMaxDigits (Int_t maxd=5);  Static function to set fgMaxDigits for axis. ;  ;  Static Public Member Functions inherited from TLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttBBox2D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttText; static TClass * Class ();  ;",MatchSource.WIKI,doc/master/classTGaxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGaxis.html
https://root.cern/doc/master/classTGaxis.html:55204,Modifiability,inherit,inherited,55204,"from TLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttBBox2D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions;  TGaxis (const TGaxis &);  Copy constructor. ;  ; void CleanupModLabs ();  Correctly cleanup fModLabs - delete content when owned by TGaxis. ;  ; TAxisModLab * FindModLab (Int_t indx, Int_t numlabels=0, Double_t v=0., Double_t eps=-1.) const;  Search for axis modifier by index or value. ;  ; Bool_t IsOwnedModLabs () const;  Returns kTRUE when fModLabs owned by TGaxis and should be cleaned up. ;  ; TGaxis & operator= (const TGaxis &);  Assignment operator. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ; ",MatchSource.WIKI,doc/master/classTGaxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGaxis.html
https://root.cern/doc/master/classTGaxis.html:55416,Modifiability,inherit,inherited,55416,"from TLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttBBox2D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions;  TGaxis (const TGaxis &);  Copy constructor. ;  ; void CleanupModLabs ();  Correctly cleanup fModLabs - delete content when owned by TGaxis. ;  ; TAxisModLab * FindModLab (Int_t indx, Int_t numlabels=0, Double_t v=0., Double_t eps=-1.) const;  Search for axis modifier by index or value. ;  ; Bool_t IsOwnedModLabs () const;  Returns kTRUE when fModLabs owned by TGaxis and should be cleaned up. ;  ; TGaxis & operator= (const TGaxis &);  Assignment operator. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ; ",MatchSource.WIKI,doc/master/classTGaxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGaxis.html
https://root.cern/doc/master/classTGaxis.html:55630,Modifiability,inherit,inherited,55630,"from TLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttBBox2D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions;  TGaxis (const TGaxis &);  Copy constructor. ;  ; void CleanupModLabs ();  Correctly cleanup fModLabs - delete content when owned by TGaxis. ;  ; TAxisModLab * FindModLab (Int_t indx, Int_t numlabels=0, Double_t v=0., Double_t eps=-1.) const;  Search for axis modifier by index or value. ;  ; Bool_t IsOwnedModLabs () const;  Returns kTRUE when fModLabs owned by TGaxis and should be cleaned up. ;  ; TGaxis & operator= (const TGaxis &);  Assignment operator. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ; ",MatchSource.WIKI,doc/master/classTGaxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGaxis.html
https://root.cern/doc/master/classTGaxis.html:56331,Modifiability,inherit,inherited,56331," Public Member Functions inherited from TAttBBox2D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions;  TGaxis (const TGaxis &);  Copy constructor. ;  ; void CleanupModLabs ();  Correctly cleanup fModLabs - delete content when owned by TGaxis. ;  ; TAxisModLab * FindModLab (Int_t indx, Int_t numlabels=0, Double_t v=0., Double_t eps=-1.) const;  Search for axis modifier by index or value. ;  ; Bool_t IsOwnedModLabs () const;  Returns kTRUE when fModLabs owned by TGaxis and should be cleaned up. ;  ; TGaxis & operator= (const TGaxis &);  Assignment operator. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TAxis * fAxis;  ! Pointer to original TAxis axis (if any) ;  ; TString fChopt;  Axis options. ;  ; TF1 * fFunction;  ! Pointer to function computing axis values ;  ; TString fFunctionName;  Name of mapping function pointed by fFunction. ;  ; Float_t fGridLength;  Length of the grid in NDC. ;  ; Int_t fLabelColor;  Color for labels. ;  ; Int_t fLabelFont;  Font for labels. ;  ; Float_t fLabelOffset;  Offset of label wrt axis. ;  ; Float_t fLabelSize;  Size of labels in NDC. ;  ; TList * fModLabs;  List of modified labels. ;  ; TString fName;  Axis name. ;  ; Int_t fNdiv;  Number of divisions. ;  ; Int_t fNModLabs;  Number of modified labels. ;  ; Float_t fTickSize;  Size of primary tick mark in NDC. ;  ; TString fTimeFormat;  Time format, ex: 09/12/99 12:34:00. ;  ; TString fTitle;  Axis title. ;  ; Float_t fTitleOffset;  Offset of title wrt ax",MatchSource.WIKI,doc/master/classTGaxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGaxis.html
https://root.cern/doc/master/classTGaxis.html:57567,Modifiability,inherit,inherited,57567,"xis (if any) ;  ; TString fChopt;  Axis options. ;  ; TF1 * fFunction;  ! Pointer to function computing axis values ;  ; TString fFunctionName;  Name of mapping function pointed by fFunction. ;  ; Float_t fGridLength;  Length of the grid in NDC. ;  ; Int_t fLabelColor;  Color for labels. ;  ; Int_t fLabelFont;  Font for labels. ;  ; Float_t fLabelOffset;  Offset of label wrt axis. ;  ; Float_t fLabelSize;  Size of labels in NDC. ;  ; TList * fModLabs;  List of modified labels. ;  ; TString fName;  Axis name. ;  ; Int_t fNdiv;  Number of divisions. ;  ; Int_t fNModLabs;  Number of modified labels. ;  ; Float_t fTickSize;  Size of primary tick mark in NDC. ;  ; TString fTimeFormat;  Time format, ex: 09/12/99 12:34:00. ;  ; TString fTitle;  Axis title. ;  ; Float_t fTitleOffset;  Offset of title wrt axis. ;  ; Float_t fTitleSize;  Size of title in NDC. ;  ; Double_t fWmax;  Highest value on the axis. ;  ; Double_t fWmin;  Lowest value on the axis. ;  ;  Protected Attributes inherited from TLine; Double_t fX1 {0};  X of 1st point. ;  ; Double_t fX2 {0};  X of 2nd point. ;  ; Double_t fY1 {0};  Y of 1st point. ;  ; Double_t fY2 {0};  Y of 2nd point. ;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttText; Short_t fTextAlign;  Text alignment. ;  ; Float_t fTextAngle;  Text angle. ;  ; Color_t fTextColor;  Text color. ;  ; Font_t fTextFont;  Text font. ;  ; Float_t fTextSize;  Text size. ;  . Additional Inherited Members;  Public Types inherited from TLine; enum  { kLineNDC = (1ULL << ( 14 )); , kVertical = (1ULL << ( 15 )); , kHorizontal = (1ULL << ( 16 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 ));",MatchSource.WIKI,doc/master/classTGaxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGaxis.html
https://root.cern/doc/master/classTGaxis.html:57771,Modifiability,inherit,inherited,57771," fGridLength;  Length of the grid in NDC. ;  ; Int_t fLabelColor;  Color for labels. ;  ; Int_t fLabelFont;  Font for labels. ;  ; Float_t fLabelOffset;  Offset of label wrt axis. ;  ; Float_t fLabelSize;  Size of labels in NDC. ;  ; TList * fModLabs;  List of modified labels. ;  ; TString fName;  Axis name. ;  ; Int_t fNdiv;  Number of divisions. ;  ; Int_t fNModLabs;  Number of modified labels. ;  ; Float_t fTickSize;  Size of primary tick mark in NDC. ;  ; TString fTimeFormat;  Time format, ex: 09/12/99 12:34:00. ;  ; TString fTitle;  Axis title. ;  ; Float_t fTitleOffset;  Offset of title wrt axis. ;  ; Float_t fTitleSize;  Size of title in NDC. ;  ; Double_t fWmax;  Highest value on the axis. ;  ; Double_t fWmin;  Lowest value on the axis. ;  ;  Protected Attributes inherited from TLine; Double_t fX1 {0};  X of 1st point. ;  ; Double_t fX2 {0};  X of 2nd point. ;  ; Double_t fY1 {0};  Y of 1st point. ;  ; Double_t fY2 {0};  Y of 2nd point. ;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttText; Short_t fTextAlign;  Text alignment. ;  ; Float_t fTextAngle;  Text angle. ;  ; Color_t fTextColor;  Text color. ;  ; Font_t fTextFont;  Text font. ;  ; Float_t fTextSize;  Text size. ;  . Additional Inherited Members;  Public Types inherited from TLine; enum  { kLineNDC = (1ULL << ( 14 )); , kVertical = (1ULL << ( 15 )); , kHorizontal = (1ULL << ( 16 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsRef",MatchSource.WIKI,doc/master/classTGaxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGaxis.html
https://root.cern/doc/master/classTGaxis.html:57932,Modifiability,inherit,inherited,57932," label wrt axis. ;  ; Float_t fLabelSize;  Size of labels in NDC. ;  ; TList * fModLabs;  List of modified labels. ;  ; TString fName;  Axis name. ;  ; Int_t fNdiv;  Number of divisions. ;  ; Int_t fNModLabs;  Number of modified labels. ;  ; Float_t fTickSize;  Size of primary tick mark in NDC. ;  ; TString fTimeFormat;  Time format, ex: 09/12/99 12:34:00. ;  ; TString fTitle;  Axis title. ;  ; Float_t fTitleOffset;  Offset of title wrt axis. ;  ; Float_t fTitleSize;  Size of title in NDC. ;  ; Double_t fWmax;  Highest value on the axis. ;  ; Double_t fWmin;  Lowest value on the axis. ;  ;  Protected Attributes inherited from TLine; Double_t fX1 {0};  X of 1st point. ;  ; Double_t fX2 {0};  X of 2nd point. ;  ; Double_t fY1 {0};  Y of 1st point. ;  ; Double_t fY2 {0};  Y of 2nd point. ;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttText; Short_t fTextAlign;  Text alignment. ;  ; Float_t fTextAngle;  Text angle. ;  ; Color_t fTextColor;  Text color. ;  ; Font_t fTextFont;  Text font. ;  ; Float_t fTextSize;  Text size. ;  . Additional Inherited Members;  Public Types inherited from TLine; enum  { kLineNDC = (1ULL << ( 14 )); , kVertical = (1ULL << ( 15 )); , kHorizontal = (1ULL << ( 16 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 ",MatchSource.WIKI,doc/master/classTGaxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGaxis.html
https://root.cern/doc/master/classTGaxis.html:58190,Modifiability,inherit,inherited,58190,"e;  Axis title. ;  ; Float_t fTitleOffset;  Offset of title wrt axis. ;  ; Float_t fTitleSize;  Size of title in NDC. ;  ; Double_t fWmax;  Highest value on the axis. ;  ; Double_t fWmin;  Lowest value on the axis. ;  ;  Protected Attributes inherited from TLine; Double_t fX1 {0};  X of 1st point. ;  ; Double_t fX2 {0};  X of 2nd point. ;  ; Double_t fY1 {0};  Y of 1st point. ;  ; Double_t fY2 {0};  Y of 2nd point. ;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttText; Short_t fTextAlign;  Text alignment. ;  ; Float_t fTextAngle;  Text angle. ;  ; Color_t fTextColor;  Text color. ;  ; Font_t fTextFont;  Text font. ;  ; Float_t fTextSize;  Text size. ;  . Additional Inherited Members;  Public Types inherited from TLine; enum  { kLineNDC = (1ULL << ( 14 )); , kVertical = (1ULL << ( 15 )); , kHorizontal = (1ULL << ( 16 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TGaxis.h>. Inheritance diagram for TGaxis:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGaxis() [1/4]. TGaxis::TGaxis ; (; const TGaxis & ; ax). protected . Copy constructor",MatchSource.WIKI,doc/master/classTGaxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGaxis.html
https://root.cern/doc/master/classTGaxis.html:58335,Modifiability,inherit,inherited,58335,"e;  Axis title. ;  ; Float_t fTitleOffset;  Offset of title wrt axis. ;  ; Float_t fTitleSize;  Size of title in NDC. ;  ; Double_t fWmax;  Highest value on the axis. ;  ; Double_t fWmin;  Lowest value on the axis. ;  ;  Protected Attributes inherited from TLine; Double_t fX1 {0};  X of 1st point. ;  ; Double_t fX2 {0};  X of 2nd point. ;  ; Double_t fY1 {0};  Y of 1st point. ;  ; Double_t fY2 {0};  Y of 2nd point. ;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttText; Short_t fTextAlign;  Text alignment. ;  ; Float_t fTextAngle;  Text angle. ;  ; Color_t fTextColor;  Text color. ;  ; Font_t fTextFont;  Text font. ;  ; Float_t fTextSize;  Text size. ;  . Additional Inherited Members;  Public Types inherited from TLine; enum  { kLineNDC = (1ULL << ( 14 )); , kVertical = (1ULL << ( 15 )); , kHorizontal = (1ULL << ( 16 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TGaxis.h>. Inheritance diagram for TGaxis:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGaxis() [1/4]. TGaxis::TGaxis ; (; const TGaxis & ; ax). protected . Copy constructor",MatchSource.WIKI,doc/master/classTGaxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGaxis.html
https://root.cern/doc/master/classTGaxis.html:58976,Modifiability,inherit,inherited,58976,"Float_t fTextAngle;  Text angle. ;  ; Color_t fTextColor;  Text color. ;  ; Font_t fTextFont;  Text font. ;  ; Float_t fTextSize;  Text size. ;  . Additional Inherited Members;  Public Types inherited from TLine; enum  { kLineNDC = (1ULL << ( 14 )); , kVertical = (1ULL << ( 15 )); , kHorizontal = (1ULL << ( 16 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TGaxis.h>. Inheritance diagram for TGaxis:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGaxis() [1/4]. TGaxis::TGaxis ; (; const TGaxis & ; ax). protected . Copy constructor. ; Definition at line 796 of file TGaxis.cxx. ◆ TGaxis() [2/4]. TGaxis::TGaxis ; (; ). TGaxis default constructor. ; Definition at line 694 of file TGaxis.cxx. ◆ TGaxis() [3/4]. TGaxis::TGaxis ; (; Double_t ; xmin, . Double_t ; ymin, . Double_t ; xmax, . Double_t ; ymax, . Double_t ; wmin, . Double_t ; wmax, . Int_t ; ndiv = 510, . Option_t * ; chopt = """", . Double_t ; gridlength = 0 . ). TGaxis normal constructor. ; Definition at line 722 of file TGaxis.cxx. ◆ TGaxis() [4/4]. TGaxis::TGaxis ; (; Double_t ; xmin, . Double_t ; ymin, . Double_t ; xmax, . Double_t ; ymax, . const char * ; funcname, . Int_t ; ndiv = 510, . Option_t * ; chopt = """", . Double_t ; gridleng",MatchSource.WIKI,doc/master/classTGaxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGaxis.html
https://root.cern/doc/master/classTGaxis.html:74094,Modifiability,inherit,inherited,74094," TGaxis.h. ◆ SetMaxDigits(). void TGaxis::SetMaxDigits ; (; Int_t ; maxd = 5). static . Static function to set fgMaxDigits for axis. ; fgMaxDigits is the maximum number of digits permitted for the axis labels above which the notation with 10^N is used.For example, to accept 6 digits number like 900000 on an axis call TGaxis::SetMaxDigits(6). The default value is 5. fgMaxDigits must be greater than 0. Warning: this static function changes the max number of digits in all axes. If you only want to change the digits of the current TGaxis instance, use axis->SetNdivisions(N*1000000 + (axis->GetNdiv()%1000000)) instead of axis->SetMaxDigits(N). ; Definition at line 2896 of file TGaxis.cxx. ◆ SetMoreLogLabels(). void TGaxis::SetMoreLogLabels ; (; Bool_t ; more = kTRUE). virtual . Set the kMoreLogLabels bit flag. ; When this option is selected more labels are drawn when in logarithmic scale and there is a small number of decades (less than 3). Note that this option is automatically inherited from TAxis ; Definition at line 2914 of file TGaxis.cxx. ◆ SetName(). void TGaxis::SetName ; (; const char * ; name). virtual . Change the name of the axis. ; Definition at line 2904 of file TGaxis.cxx. ◆ SetNdivisions(). virtual void TGaxis::SetNdivisions ; (; Int_t ; ndiv). inlinevirtual . Definition at line 118 of file TGaxis.h. ◆ SetNoExponent(). void TGaxis::SetNoExponent ; (; Bool_t ; noExponent = kTRUE). virtual . Set the NoExponent flag. ; By default, an exponent of the form 10^N is used when the label values are either all very small or very large. One can disable the exponent by calling axis.SetNoExponent(kTRUE). ; Definition at line 2925 of file TGaxis.cxx. ◆ SetOption(). void TGaxis::SetOption ; (; Option_t * ; option = """"). To set axis options. ; Definition at line 2934 of file TGaxis.cxx. ◆ SetTickLength(). void TGaxis::SetTickLength ; (; Float_t ; ticklength). inline . Definition at line 123 of file TGaxis.h. ◆ SetTickSize(). void TGaxis::SetTickSize ; (; Float_t ; ticksi",MatchSource.WIKI,doc/master/classTGaxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGaxis.html
https://root.cern/doc/master/classTGaxis.html:16286,Performance,optimiz,optimization,16286,"gram axis.Definition TAxis.h:31; TMath::Piconstexpr Double_t Pi()Definition TMath.h:37. Number of divisions optimisation; By default the number of divisions on axis is optimised to show a coherent labelling of the main tick marks. The number of division (ndiv) is a composite integer given by:; ndiv = N1 + 100*N2 + 10000*N3. N1 = number of 1st divisions.; N2 = number of 2nd divisions.; N3 = number of 3rd divisions. by default the value of N1, N2 and N3 are maximum values. After optimisation the real number of divisions will be smaller or equal to these value. If one wants to bypass the optimisation, the option ""N"" should be given when the TGaxis is created. The option ""I"" also act on the number of division as it will force an integer labelling of the axis.; On an histogram pointer h the number of divisions can be set in different ways:. Directly on the histogram. The following will set the number of division to 510 on the X axis of h. To avoid optimization the number of divisions should be negative (ie: -510); h->SetNdivisions(510, ""X"");. On the axis itself: h->GetXaxis()->SetNdivisions(510, kTRUE);; kTRUEconstexpr Bool_t kTRUEDefinition RtypesCore.h:93. The first parameter is the number of division. If it is negative of if the second parameter is kFALSE then the number of divisions is not optimised. And other signature is also allowed: h->GetXaxis()->SetNdivisions(10, 5, 0, kTRUE);; . Maximum Number of Digits for the axis labels; The static method TGaxis::SetMaxDigits sets the maximum number of digits permitted for the axis labels above which the notation with 10^N is used. For example, to accept 6 digits number like 900000 on an axis call TGaxis::SetMaxDigits(6). The default value is 5. fgMaxDigits must be greater than 0. Warning: even when called on a particular TGaxis* instance, this static function changes globally the number of digits for all axes (X, Y, ...) in the canvas. If you want to change the maximum number of digits N only of the current TGaxis*, and no",MatchSource.WIKI,doc/master/classTGaxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGaxis.html
https://root.cern/doc/master/classTGaxis.html:3814,Safety,avoid,avoid,3814,"enerates various kind of axis.; ; void gaxis(){; auto c1 = new TCanvas(""c1"",""Examples of TGaxis"",10,10,700,500);; c1->Range(-10,-1,10,1);; ; auto axis1 = new TGaxis(-4.5,-0.2,5.5,-0.2,-6,8,510,"""");; axis1->Draw();; ; auto axis2 = new TGaxis(-4.5,0.2,5.5,0.2,0.001,10000,510,""G"");; axis2->Draw();; ; auto axis3 = new TGaxis(-9,-0.8,-9,0.8,-8,8,50510,"""");; axis3->SetTitle(""axis3"");; axis3->SetTitleOffset(0.5);; axis3->Draw();; ; auto axis4 = new TGaxis(-7,-0.8,-7,0.8,1,10000,50510,""G"");; axis4->SetTitle(""axis4"");; axis4->Draw();; ; auto axis5 = new TGaxis(-4.5,-0.6,5.5,-0.6,1.2,1.32,80506,""-+"");; axis5->SetLabelSize(0.03);; axis5->SetTextFont(72);; axis5->Draw();; ; auto axis6 = new TGaxis(-4.5,0.5,5.5,0.5,100,900,50510,""-"");; axis6->Draw();; ; auto axis7 = new TGaxis(-5.5,0.85,5.5,0.85,0,4.3e-6,510,"""");; axis7->Draw();; ; auto axis8 = new TGaxis(8,-0.8,8,0.8,0,9000,50510,""+L"");; axis8->Draw();; ; // One can make a vertical axis going top->bottom. However the two x values should be; // slightly different to avoid labels overlapping.; auto axis9 = new TGaxis(6.5,0.8,6.499,-0.8,0,90,50510,""-"");; axis9->Draw();; }; TCanvasThe Canvas class.Definition TCanvas.h:23; c1return c1Definition legend1.C:41; . Definition with a function; Instead of the wmin,wmax arguments of the normal definition, the name of a TF1 function can be specified. This function will be used to map the user coordinates to the axis values and ticks.; A TGaxis is defined the following way: TGaxis::TGaxis(Double_t xmin, Double_t ymin, Double_t xmax, Double_t ymax,; const char *func, Int_t ndiv, Option_t *chopt,; Double_t gridlength); Where:. xmin : X origin coordinate in user's coordinates space.; xmax : X end axis coordinate in user's coordinates space.; ymin : Y origin coordinate in user's coordinates space.; ymax : Y end axis coordinate in user's coordinates space.; func : function defining axis labels and tick marks.; ndiv : Number of divisions.; ndiv=N1 + 100*N2 + 10000*N3; N1=number of 1st divisions.; N2",MatchSource.WIKI,doc/master/classTGaxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGaxis.html
https://root.cern/doc/master/classTGaxis.html:16280,Safety,avoid,avoid,16280,"gram axis.Definition TAxis.h:31; TMath::Piconstexpr Double_t Pi()Definition TMath.h:37. Number of divisions optimisation; By default the number of divisions on axis is optimised to show a coherent labelling of the main tick marks. The number of division (ndiv) is a composite integer given by:; ndiv = N1 + 100*N2 + 10000*N3. N1 = number of 1st divisions.; N2 = number of 2nd divisions.; N3 = number of 3rd divisions. by default the value of N1, N2 and N3 are maximum values. After optimisation the real number of divisions will be smaller or equal to these value. If one wants to bypass the optimisation, the option ""N"" should be given when the TGaxis is created. The option ""I"" also act on the number of division as it will force an integer labelling of the axis.; On an histogram pointer h the number of divisions can be set in different ways:. Directly on the histogram. The following will set the number of division to 510 on the X axis of h. To avoid optimization the number of divisions should be negative (ie: -510); h->SetNdivisions(510, ""X"");. On the axis itself: h->GetXaxis()->SetNdivisions(510, kTRUE);; kTRUEconstexpr Bool_t kTRUEDefinition RtypesCore.h:93. The first parameter is the number of division. If it is negative of if the second parameter is kFALSE then the number of divisions is not optimised. And other signature is also allowed: h->GetXaxis()->SetNdivisions(10, 5, 0, kTRUE);; . Maximum Number of Digits for the axis labels; The static method TGaxis::SetMaxDigits sets the maximum number of digits permitted for the axis labels above which the notation with 10^N is used. For example, to accept 6 digits number like 900000 on an axis call TGaxis::SetMaxDigits(6). The default value is 5. fgMaxDigits must be greater than 0. Warning: even when called on a particular TGaxis* instance, this static function changes globally the number of digits for all axes (X, Y, ...) in the canvas. If you want to change the maximum number of digits N only of the current TGaxis*, and no",MatchSource.WIKI,doc/master/classTGaxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGaxis.html
https://root.cern/doc/master/classTGaxis.html:29167,Security,access,accessor,29167,"extColor(kBlue+2);; ; TLatex tex2;; tex2.SetNDC();; tex2.SetTextFont(102);; tex2.SetTextSize(0.07*f);; tex2.SetTextColor(kOrange+3);; ; time_t offset[] = {0, 0, 1325376000, 1341100800};; time_t t[] = {1331150400, 1336417200, 0, 36000};; ; c->SetTopMargin(0); c->SetBottomMargin(0);; c->SetLeftMargin(0); c->SetRightMargin(0);; c->Divide(2, 4, -1, -1);; TLine l;; l.DrawLine(0.5, 0, 0.5, 1.);; ; for(int i = 0; i < 4; ++i){; for(int gmt = 0; gmt < 2; ++gmt){; const char* opt = (gmt ? ""gmt"" : ""local"");; TVirtualPad* p = c->cd(2*i + gmt + 1);; p->SetTopMargin(0); p->SetBottomMargin(0);; p->SetLeftMargin(0); p->SetRightMargin(0);; p->SetFillStyle(4000);; ; TGaxis* ga = new TGaxis (.4, .25, 5., .25, t[i], t[i] + 1, 1, ""t"");; ga->SetTimeFormat(""TGaxis label: #color[2]{%Y-%m-%d %H:%M:%S}"");; ga->SetLabelFont(102);; ga->SetLabelColor(kBlue+2);; ; ga->SetTimeOffset(offset[i], opt);; ga->SetLabelOffset(0.04*f);; ga->SetLabelSize(0.07*f);; ga->SetLineColor(0);; ga->Draw();; ; // Get offset string of axis time format: there is not accessor; // to time format in TGaxis.; // Assumes TAxis use the same format.; TAxis a(10, 0, 1600000000);; a.SetTimeOffset(offset[i], opt);; const char* offsettimeformat = a.GetTimeFormat();; ; char buf[256];; if (offset[i] < t[i]) {; snprintf(buf, 256, ""#splitline{%s, %s}{offset: %ld, option %s}"",; stime(t+i).Data(), stime(t+i, true).Data(), offset[i], opt);; } else {; int h = t[i] / 3600;; int m = (t[i] - 3600 * h) / 60 ;; int s = (t[i] - h * 3600 - m * 60);; snprintf(buf, 256, ""#splitline{%d h %d m %d s}{offset: %s, option %s}"",; h, m, s, stime(offset + i, gmt).Data(), opt);; }; tex1.DrawLatex(.01, .75, buf);; tex2.DrawLatex(.01, .50, offsettimeformat);; time_t t_ = t[i] + offset[i];; snprintf(buf, 256, ""Expecting: #color[2]{%s}"", stime(&t_, gmt, false).Data());; tex3.DrawLatex(.01, .24, buf);; if(i > 0) l.DrawLine(0, 0.95, 1, 0.95);; }; }; }; kOrange@ kOrangeDefinition Rtypes.h:67; TAxis.h; TCanvas.h; pwinID h TVirtualViewer3D TVirtualGLPainter pDefi",MatchSource.WIKI,doc/master/classTGaxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGaxis.html
https://root.cern/doc/master/classTGaxis.html:46579,Security,hash,hash,46579,", e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t",MatchSource.WIKI,doc/master/classTGaxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGaxis.html
https://root.cern/doc/master/classTGaxis.html:5873,Testability,log,logarithmic,5873,"r of 3rd divisions. e.g.:; ndiv=0 --> no tick marks.; ndiv=2 --> 2 divisions, one tick mark in the middle of the axis. chopt : Drawing options (see below).; gridlength: grid length on main tick marks. It should be noted that func is not defined in the user's coordinate space, but in the new TGaxis space. If x is the original axis, w the new axis, and w = f(x) (for example, f is a calibration function converting ADC channels x to energy w), then func must be supplied as f^{-1}(w).; Examples:; {; TCanvas *c2 = new TCanvas(""c2"",""c2"",10,10,700,500);; ; gPad->DrawFrame(0.,-2.,10.,2);; ; TF1 *f1=new TF1(""f1"",""-x"",-10,10);; TGaxis *A1 = new TGaxis(0,2,10,2,""f1"",510,""-"");; A1->SetTitle(""axis with decreasing values"");; A1->Draw();; ; TF1 *f2=new TF1(""f2"",""exp(x)"",0,2);; TGaxis *A2 = new TGaxis(1,1,9,1,""f2"");; A2->SetTitle(""exponential axis"");; A2->SetLabelSize(0.03);; A2->SetTitleSize(0.03);; A2->SetTitleOffset(1.2);; A2->Draw();; ; TF1 *f3=new TF1(""f3"",""log10(x)"",1,1000);; TGaxis *A3 = new TGaxis(2,-2,2,0,""f3"",505,"""");; A3->SetTitle(""logarithmic axis"");; A3->SetLabelSize(0.02);; A3->SetTitleSize(0.03);; A3->SetTitleOffset(0.); // Axis title automatically placed; A3->Draw();; }; gPad#define gPadDefinition TVirtualPad.h:308; TF11-Dim function classDefinition TF1.h:233; TGaxisThe axis painter class.Definition TGaxis.h:24; TGaxis::SetTitleOffsetvoid SetTitleOffset(Float_t titleoffset=1)Definition TGaxis.h:128; TGaxis::SetTitleSizevoid SetTitleSize(Float_t titlesize)Definition TGaxis.h:129; TGaxis::SetTitlevirtual void SetTitle(const char *title="""")Change the title of the axis.Definition TGaxis.cxx:2942; TGaxis::SetLabelSizevoid SetLabelSize(Float_t labelsize)Definition TGaxis.h:107; TObject::Drawvirtual void Draw(Option_t *option="""")Default Draw method for all objects.Definition TObject.cxx:280; f1TF1 * f1Definition legend1.C:11; c2return c2Definition legend2.C:14. Note that this functionality has some limitations and does not follow all the TGaxis setting. In particular the nu",MatchSource.WIKI,doc/master/classTGaxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGaxis.html
https://root.cern/doc/master/classTGaxis.html:6960,Testability,log,logarithmic,6960,"tle automatically placed; A3->Draw();; }; gPad#define gPadDefinition TVirtualPad.h:308; TF11-Dim function classDefinition TF1.h:233; TGaxisThe axis painter class.Definition TGaxis.h:24; TGaxis::SetTitleOffsetvoid SetTitleOffset(Float_t titleoffset=1)Definition TGaxis.h:128; TGaxis::SetTitleSizevoid SetTitleSize(Float_t titlesize)Definition TGaxis.h:129; TGaxis::SetTitlevirtual void SetTitle(const char *title="""")Change the title of the axis.Definition TGaxis.cxx:2942; TGaxis::SetLabelSizevoid SetLabelSize(Float_t labelsize)Definition TGaxis.h:107; TObject::Drawvirtual void Draw(Option_t *option="""")Default Draw method for all objects.Definition TObject.cxx:280; f1TF1 * f1Definition legend1.C:11; c2return c2Definition legend2.C:14. Note that this functionality has some limitations and does not follow all the TGaxis setting. In particular the number of divisions or the maximum number digits do not apply. Logarithmic axis; By default axis are linear. To define a TGaxis as logarithmic, it is enough to create it with the option ""G"".; When plotting an histogram or a graph the logarithmic scale can be set using:. gPad->SetLogx(1); set the logarithmic scale on the X axis; gPad->SetLogy(1); set the logarithmic scale on the Y axis. When the SetMoreLogLabels() method is called more labels are drawn when in logarithmic scale and there is a small number of decades (less than 3). Blank axis; To draw only the axis tick marks without the axis body, it is enough to specify the option ""B"". It useful to superpose axis. Arrow on axis; SinceROOT version 6.27/01:; To draw an arrow at the end of the axis use the option "">"". To draw it at the beginning of the axis use the option ""<"". To draw it on both ends use ""<>"".; {; auto c = new TCanvas(""c"",""c"",0,0,500,500);; c->Range(-11,-11,11,11);; ; auto f2 = new TF1(""x2"",""x*x"",-10,10);; f2->SetLineColor(kRed);; f2->Draw(""same"");; ; auto f3 = new TF1(""x3"",""x*x*x"",-10,10);; f3->SetLineColor(kBlue);; f3->Draw(""same"");; ; // Draw the axis with arrows; ",MatchSource.WIKI,doc/master/classTGaxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGaxis.html
https://root.cern/doc/master/classTGaxis.html:7063,Testability,log,logarithmic,7063,"h:308; TF11-Dim function classDefinition TF1.h:233; TGaxisThe axis painter class.Definition TGaxis.h:24; TGaxis::SetTitleOffsetvoid SetTitleOffset(Float_t titleoffset=1)Definition TGaxis.h:128; TGaxis::SetTitleSizevoid SetTitleSize(Float_t titlesize)Definition TGaxis.h:129; TGaxis::SetTitlevirtual void SetTitle(const char *title="""")Change the title of the axis.Definition TGaxis.cxx:2942; TGaxis::SetLabelSizevoid SetLabelSize(Float_t labelsize)Definition TGaxis.h:107; TObject::Drawvirtual void Draw(Option_t *option="""")Default Draw method for all objects.Definition TObject.cxx:280; f1TF1 * f1Definition legend1.C:11; c2return c2Definition legend2.C:14. Note that this functionality has some limitations and does not follow all the TGaxis setting. In particular the number of divisions or the maximum number digits do not apply. Logarithmic axis; By default axis are linear. To define a TGaxis as logarithmic, it is enough to create it with the option ""G"".; When plotting an histogram or a graph the logarithmic scale can be set using:. gPad->SetLogx(1); set the logarithmic scale on the X axis; gPad->SetLogy(1); set the logarithmic scale on the Y axis. When the SetMoreLogLabels() method is called more labels are drawn when in logarithmic scale and there is a small number of decades (less than 3). Blank axis; To draw only the axis tick marks without the axis body, it is enough to specify the option ""B"". It useful to superpose axis. Arrow on axis; SinceROOT version 6.27/01:; To draw an arrow at the end of the axis use the option "">"". To draw it at the beginning of the axis use the option ""<"". To draw it on both ends use ""<>"".; {; auto c = new TCanvas(""c"",""c"",0,0,500,500);; c->Range(-11,-11,11,11);; ; auto f2 = new TF1(""x2"",""x*x"",-10,10);; f2->SetLineColor(kRed);; f2->Draw(""same"");; ; auto f3 = new TF1(""x3"",""x*x*x"",-10,10);; f3->SetLineColor(kBlue);; f3->Draw(""same"");; ; // Draw the axis with arrows; auto ox = new TGaxis(-10,0,10,0,-10.,10.,510,""+-S>"");; ox->SetTickSize(0.009);; o",MatchSource.WIKI,doc/master/classTGaxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGaxis.html
https://root.cern/doc/master/classTGaxis.html:7126,Testability,log,logarithmic,7126,"h:24; TGaxis::SetTitleOffsetvoid SetTitleOffset(Float_t titleoffset=1)Definition TGaxis.h:128; TGaxis::SetTitleSizevoid SetTitleSize(Float_t titlesize)Definition TGaxis.h:129; TGaxis::SetTitlevirtual void SetTitle(const char *title="""")Change the title of the axis.Definition TGaxis.cxx:2942; TGaxis::SetLabelSizevoid SetLabelSize(Float_t labelsize)Definition TGaxis.h:107; TObject::Drawvirtual void Draw(Option_t *option="""")Default Draw method for all objects.Definition TObject.cxx:280; f1TF1 * f1Definition legend1.C:11; c2return c2Definition legend2.C:14. Note that this functionality has some limitations and does not follow all the TGaxis setting. In particular the number of divisions or the maximum number digits do not apply. Logarithmic axis; By default axis are linear. To define a TGaxis as logarithmic, it is enough to create it with the option ""G"".; When plotting an histogram or a graph the logarithmic scale can be set using:. gPad->SetLogx(1); set the logarithmic scale on the X axis; gPad->SetLogy(1); set the logarithmic scale on the Y axis. When the SetMoreLogLabels() method is called more labels are drawn when in logarithmic scale and there is a small number of decades (less than 3). Blank axis; To draw only the axis tick marks without the axis body, it is enough to specify the option ""B"". It useful to superpose axis. Arrow on axis; SinceROOT version 6.27/01:; To draw an arrow at the end of the axis use the option "">"". To draw it at the beginning of the axis use the option ""<"". To draw it on both ends use ""<>"".; {; auto c = new TCanvas(""c"",""c"",0,0,500,500);; c->Range(-11,-11,11,11);; ; auto f2 = new TF1(""x2"",""x*x"",-10,10);; f2->SetLineColor(kRed);; f2->Draw(""same"");; ; auto f3 = new TF1(""x3"",""x*x*x"",-10,10);; f3->SetLineColor(kBlue);; f3->Draw(""same"");; ; // Draw the axis with arrows; auto ox = new TGaxis(-10,0,10,0,-10.,10.,510,""+-S>"");; ox->SetTickSize(0.009);; ox->SetLabelFont(42);; ox->SetLabelSize(0.025);; ox->Draw();; auto oy = new TGaxis(0,-10,0,10,-10,10",MatchSource.WIKI,doc/master/classTGaxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGaxis.html
https://root.cern/doc/master/classTGaxis.html:7185,Testability,log,logarithmic,7185,"h:24; TGaxis::SetTitleOffsetvoid SetTitleOffset(Float_t titleoffset=1)Definition TGaxis.h:128; TGaxis::SetTitleSizevoid SetTitleSize(Float_t titlesize)Definition TGaxis.h:129; TGaxis::SetTitlevirtual void SetTitle(const char *title="""")Change the title of the axis.Definition TGaxis.cxx:2942; TGaxis::SetLabelSizevoid SetLabelSize(Float_t labelsize)Definition TGaxis.h:107; TObject::Drawvirtual void Draw(Option_t *option="""")Default Draw method for all objects.Definition TObject.cxx:280; f1TF1 * f1Definition legend1.C:11; c2return c2Definition legend2.C:14. Note that this functionality has some limitations and does not follow all the TGaxis setting. In particular the number of divisions or the maximum number digits do not apply. Logarithmic axis; By default axis are linear. To define a TGaxis as logarithmic, it is enough to create it with the option ""G"".; When plotting an histogram or a graph the logarithmic scale can be set using:. gPad->SetLogx(1); set the logarithmic scale on the X axis; gPad->SetLogy(1); set the logarithmic scale on the Y axis. When the SetMoreLogLabels() method is called more labels are drawn when in logarithmic scale and there is a small number of decades (less than 3). Blank axis; To draw only the axis tick marks without the axis body, it is enough to specify the option ""B"". It useful to superpose axis. Arrow on axis; SinceROOT version 6.27/01:; To draw an arrow at the end of the axis use the option "">"". To draw it at the beginning of the axis use the option ""<"". To draw it on both ends use ""<>"".; {; auto c = new TCanvas(""c"",""c"",0,0,500,500);; c->Range(-11,-11,11,11);; ; auto f2 = new TF1(""x2"",""x*x"",-10,10);; f2->SetLineColor(kRed);; f2->Draw(""same"");; ; auto f3 = new TF1(""x3"",""x*x*x"",-10,10);; f3->SetLineColor(kBlue);; f3->Draw(""same"");; ; // Draw the axis with arrows; auto ox = new TGaxis(-10,0,10,0,-10.,10.,510,""+-S>"");; ox->SetTickSize(0.009);; ox->SetLabelFont(42);; ox->SetLabelSize(0.025);; ox->Draw();; auto oy = new TGaxis(0,-10,0,10,-10,10",MatchSource.WIKI,doc/master/classTGaxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGaxis.html
https://root.cern/doc/master/classTGaxis.html:7293,Testability,log,logarithmic,7293,"(Float_t titlesize)Definition TGaxis.h:129; TGaxis::SetTitlevirtual void SetTitle(const char *title="""")Change the title of the axis.Definition TGaxis.cxx:2942; TGaxis::SetLabelSizevoid SetLabelSize(Float_t labelsize)Definition TGaxis.h:107; TObject::Drawvirtual void Draw(Option_t *option="""")Default Draw method for all objects.Definition TObject.cxx:280; f1TF1 * f1Definition legend1.C:11; c2return c2Definition legend2.C:14. Note that this functionality has some limitations and does not follow all the TGaxis setting. In particular the number of divisions or the maximum number digits do not apply. Logarithmic axis; By default axis are linear. To define a TGaxis as logarithmic, it is enough to create it with the option ""G"".; When plotting an histogram or a graph the logarithmic scale can be set using:. gPad->SetLogx(1); set the logarithmic scale on the X axis; gPad->SetLogy(1); set the logarithmic scale on the Y axis. When the SetMoreLogLabels() method is called more labels are drawn when in logarithmic scale and there is a small number of decades (less than 3). Blank axis; To draw only the axis tick marks without the axis body, it is enough to specify the option ""B"". It useful to superpose axis. Arrow on axis; SinceROOT version 6.27/01:; To draw an arrow at the end of the axis use the option "">"". To draw it at the beginning of the axis use the option ""<"". To draw it on both ends use ""<>"".; {; auto c = new TCanvas(""c"",""c"",0,0,500,500);; c->Range(-11,-11,11,11);; ; auto f2 = new TF1(""x2"",""x*x"",-10,10);; f2->SetLineColor(kRed);; f2->Draw(""same"");; ; auto f3 = new TF1(""x3"",""x*x*x"",-10,10);; f3->SetLineColor(kBlue);; f3->Draw(""same"");; ; // Draw the axis with arrows; auto ox = new TGaxis(-10,0,10,0,-10.,10.,510,""+-S>"");; ox->SetTickSize(0.009);; ox->SetLabelFont(42);; ox->SetLabelSize(0.025);; ox->Draw();; auto oy = new TGaxis(0,-10,0,10,-10,10,510,""+-S>"");; oy->SetTickSize(0.009);; oy->SetLabelFont(42);; oy->SetLabelSize(0.025);; oy->Draw();; }; c#define c(i)Definition RSha",MatchSource.WIKI,doc/master/classTGaxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGaxis.html
https://root.cern/doc/master/classTGaxis.html:12442,Testability,test,test,12442," axis = ""xz"" set the two axes. Alphanumeric labels; Axis labels can be any alphanumeric character strings. Such axis can be produced only with histograms because the labels'definition is stored in TAxis. The following example demonstrates how to create such labels.; ; TCanvas *hlabels2(); {; const Int_t nx = 12;; const Int_t ny = 20;; const char *month[nx] = {""January"",""February"",""March"",""April"",""May"",; ""June"",""July"",""August"",""September"",""October"",""November"",; ""December""};; const char *people[ny] = {""Jean"",""Pierre"",""Marie"",""Odile"",""Sebastien"",; ""Fons"",""Rene"",""Nicolas"",""Xavier"",""Greg"",""Bjarne"",""Anton"",; ""Otto"",""Eddy"",""Peter"",""Pasha"",""Philippe"",""Suzanne"",""Jeff"",; ""Valery""};; TCanvas *c1 = new TCanvas(""c1"",""demo bin labels"",10,10,600,600);; c1->SetGrid();; c1->SetLeftMargin(0.15);; c1->SetBottomMargin(0.15);; TH2F *h = new TH2F(""h"",""test"",3,0,3,2,0,2);; h->SetCanExtend(TH1::kAllAxes);; h->SetStats(0);; gRandom->SetSeed();; for (Int_t i=0;i<15000;i++) {; Int_t rx = gRandom->Rndm()*nx;; Int_t ry = gRandom->Rndm()*ny;; h->Fill(people[ry],month[rx],1);; }; h->LabelsDeflate(""X"");; h->LabelsDeflate(""Y"");; h->LabelsOption(""v"");; h->Draw(""text"");; ; TPaveText *pt = new TPaveText(0.6,0.85,0.98,0.98,""brNDC"");; pt->SetFillColor(18);; pt->SetTextAlign(12);; pt->AddText(""Use the axis Context Menu LabelsOption"");; pt->AddText("" \""a\"" to sort by alphabetic order"");; pt->AddText("" \"">\"" to sort by decreasing values"");; pt->AddText("" \""<\"" to sort by increasing values"");; pt->Draw();; return c1;; }; h#define h(i)Definition RSha256.hxx:106; Int_tint Int_tDefinition RtypesCore.h:45; gRandomR__EXTERN TRandom * gRandomDefinition TRandom.h:62; TAttFill::SetFillColorvirtual void SetFillColor(Color_t fcolor)Set the fill area color.Definition TAttFill.h:37; TAttText::SetTextAlignvirtual void SetTextAlign(Short_t align=11)Set the text alignment.Definition TAttText.h:42; TH1::kAllAxes@ kAllAxesDefinition TH1.h:76; TH2F2-D histogram with a float per channel (see TH1 documentation)Definition TH2.h:",MatchSource.WIKI,doc/master/classTGaxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGaxis.html
https://root.cern/doc/master/classTGaxis.html:17536,Testability,log,log,17536,"ameter is kFALSE then the number of divisions is not optimised. And other signature is also allowed: h->GetXaxis()->SetNdivisions(10, 5, 0, kTRUE);; . Maximum Number of Digits for the axis labels; The static method TGaxis::SetMaxDigits sets the maximum number of digits permitted for the axis labels above which the notation with 10^N is used. For example, to accept 6 digits number like 900000 on an axis call TGaxis::SetMaxDigits(6). The default value is 5. fgMaxDigits must be greater than 0. Warning: even when called on a particular TGaxis* instance, this static function changes globally the number of digits for all axes (X, Y, ...) in the canvas. If you want to change the maximum number of digits N only of the current TGaxis*, and not all the others, use axis->SetNdivisions(N*1000000 + (axis->GetNdiv()%1000000)) instead of axis->SetMaxDigits(N). Optional grid; The option ""W"" allows to draw a grid on the primary tick marks. In case of a log axis, the grid is only drawn for the primary tick marks if the number of secondary and tertiary divisions is 0. SetGridLength() allows to define the length of the grid.; When plotting an histogram or a graph the grid can be set ON or OFF using:. gPad->SetGridy(1); set the grid on the X axis; gPad->SetGridx(1); set the grid on the Y axis; gPad->SetGrid(1,1); set the grid on both axis. Time axis; Histograms' axis can be defined as ""time axis"". To do that it is enough to activate the TAxis::SetTimeDisplay attribute on a given axis. If h is an histogram, it is done the following way:; h->GetXaxis()->SetTimeDisplay(1); // The X axis is a time axis; Two parameters can be adjusted in order to define time axis:. The time format:; Defines the format of the labels along the time axis. It can be changed using the TAxis TAxis::SetTimeFormat. The time format is the one used by the C function strftime(). It's a string containing the following formatting characters:. for date :; a abbreviated weekday name; b abbreviated month name; d day of the m",MatchSource.WIKI,doc/master/classTGaxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGaxis.html
https://root.cern/doc/master/classTGaxis.html:22903,Testability,test,test,22903,"(Double_t mean=0, Double_t sigma=1)Samples a random number from the standard Normal (Gaussian) Distribution with the given mean and sigm...Definition TRandom.cxx:275; TStyle::SetTitleHvoid SetTitleH(Float_t h=0)Definition TStyle.h:416. The histogram limits times in seconds. If wmin and wmax are the histogram limits, the time axis will spread around the time offset value from TimeOffset+wmin to TimeOffset+wmax. Until now all the examples had a lowest value equal to 0. The following example demonstrates how to define the histogram limits relatively to the time offset value.; {; // Define the time offset as 2003, January 1st; TDatime T0(2003,1,1,0,0,0);; auto X0 = T0.Convert();; gStyle->SetTimeOffset(X0);; ; // Define the lowest histogram limit as 2002, September 23rd; TDatime T1(2002,9,23,0,0,0);; auto X1 = T1.Convert()-X0;; ; // Define the highest histogram limit as 2003, March 7th; TDatime T2(2003,3,7,0,0,0);; auto X2 = T2.Convert(1)-X0;; ; auto h1 = new TH1F(""h1"",""test"",100,X1,X2);; ; TRandom r;; for (Int_t i=0;i<30000;i++) {; Double_t noise = r.Gaus(0.5*(X1+X2),0.1*(X2-X1));; h1->Fill(noise);; }; ; h1->GetXaxis()->SetTimeDisplay(1);; h1->GetXaxis()->SetLabelSize(0.03);; h1->GetXaxis()->SetTimeFormat(""%Y/%m/%d"");; h1->Draw();; }; rOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t rDefinition TGWin32VirtualXProxy.cxx:168; TAttAxis::SetLabelSizevirtual void SetLabelSize(Float_t size=0.04)Set size of axis labels.Definition TAttAxis.cxx:203; TAxis::SetTimeDisplayvirtual void SetTimeDisplay(Int_t value)Definition TAxis.h:171; TAxis::SetTimeFormatvirtual void SetTimeFormat(const char *format="""")Change the format used for time plotting.Definition TAxis.cxx:1157; TH1::GetXaxisTAxis * GetXaxis()Definition TH1.h:324; TH1::Fillvirtual Int_t Fill(Double_t x)Increment bin with abscissa X by 1.Definition TH1.cxx:3344; TH1:",MatchSource.WIKI,doc/master/classTGaxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGaxis.html
https://root.cern/doc/master/classTGaxis.html:27336,Testability,test,test,27336,"meFormat line by; axis->SetLabelOffset(0.15);; axis->SetTimeFormat(""#splitline{%Y}{%d\/%m}"");; TGaxis::SetLabelOffsetvoid SetLabelOffset(Float_t labeloffset)Definition TGaxis.h:106; will produce the following axis:. The following example shows time axis on a TGraph:; {; TDatime da1(2008,02,28,15,52,00);; TDatime da2(2008,02,28,15,53,00);; ; double x[2],y[2];; ; y[0] = 1.;; y[1] = 2.;; x[0] = da1.Convert();; x[1] = da2.Convert();; ; TGraph mgr(2,x,y);; mgr.SetMarkerStyle(20);; ; mgr.Draw(""apl"");; mgr.GetXaxis()->SetTimeDisplay(1);; mgr.GetXaxis()->SetNdivisions(-503);; mgr.GetXaxis()->SetTimeFormat(""%Y-%m-%d %H:%M"");; mgr.GetXaxis()->SetTimeOffset(0,""gmt"");; }; TGraphA TGraph is an object made of two arrays X and Y with npoints each.Definition TGraph.h:41; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17. The following example compares what the system time function gmtime and localtime give with what gives TGaxis. It can be used as referenced test to check if the time option of TGaxis is working properly.; ; #include ""TAxis.h""; #include ""TGaxis.h""; #include ""TCanvas.h""; #include ""TString.h""; #include ""TLine.h""; #include ""TLatex.h""; #include <ctime>; #include <cstdio>; ; TString stime(time_t* t, bool utc = false, bool display_time_zone = true) {; struct tm* tt;; if (utc) tt = gmtime(t);; else tt = localtime(t);; char buf[256];; if (display_time_zone) strftime(buf, sizeof(buf), ""%Y-%m-%d %H:%M:%S %Z"", tt);; else strftime(buf, sizeof(buf), ""%Y-%m-%d %H:%M:%S"", tt);; return TString(buf);; }; ; ; void timeonaxis3() {; double f = 1.8;; ; auto c = new TCanvas;; ; TLatex tex1;; tex1.SetNDC();; tex1.SetTextFont(102);; tex1.SetTextSize(0.055*f);; ; TLatex tex3;; tex3.SetNDC();; tex3.SetTextFont(102);; tex3.SetTextSize(0.07*f);; tex3.SetTextColor(kBlue+2);; ; TLatex tex2;; tex2.SetNDC();; tex2.SetTextFont(102);; tex2.SetTextSize(0.07*f);; tex2.SetTextColor(kOrange+3);; ; time_t offset[] = {0, 0, 1325376000, 1341100800};; time_t t[] = {1331150400, 1336",MatchSource.WIKI,doc/master/classTGaxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGaxis.html
https://root.cern/doc/master/classTGaxis.html:73983,Testability,log,logarithmic,73983,"axis.h. ◆ SetLabelSize(). void TGaxis::SetLabelSize ; (; Float_t ; labelsize). inline . Definition at line 107 of file TGaxis.h. ◆ SetMaxDigits(). void TGaxis::SetMaxDigits ; (; Int_t ; maxd = 5). static . Static function to set fgMaxDigits for axis. ; fgMaxDigits is the maximum number of digits permitted for the axis labels above which the notation with 10^N is used.For example, to accept 6 digits number like 900000 on an axis call TGaxis::SetMaxDigits(6). The default value is 5. fgMaxDigits must be greater than 0. Warning: this static function changes the max number of digits in all axes. If you only want to change the digits of the current TGaxis instance, use axis->SetNdivisions(N*1000000 + (axis->GetNdiv()%1000000)) instead of axis->SetMaxDigits(N). ; Definition at line 2896 of file TGaxis.cxx. ◆ SetMoreLogLabels(). void TGaxis::SetMoreLogLabels ; (; Bool_t ; more = kTRUE). virtual . Set the kMoreLogLabels bit flag. ; When this option is selected more labels are drawn when in logarithmic scale and there is a small number of decades (less than 3). Note that this option is automatically inherited from TAxis ; Definition at line 2914 of file TGaxis.cxx. ◆ SetName(). void TGaxis::SetName ; (; const char * ; name). virtual . Change the name of the axis. ; Definition at line 2904 of file TGaxis.cxx. ◆ SetNdivisions(). virtual void TGaxis::SetNdivisions ; (; Int_t ; ndiv). inlinevirtual . Definition at line 118 of file TGaxis.h. ◆ SetNoExponent(). void TGaxis::SetNoExponent ; (; Bool_t ; noExponent = kTRUE). virtual . Set the NoExponent flag. ; By default, an exponent of the form 10^N is used when the label values are either all very small or very large. One can disable the exponent by calling axis.SetNoExponent(kTRUE). ; Definition at line 2925 of file TGaxis.cxx. ◆ SetOption(). void TGaxis::SetOption ; (; Option_t * ; option = """"). To set axis options. ; Definition at line 2934 of file TGaxis.cxx. ◆ SetTickLength(). void TGaxis::SetTickLength ; (; Float_t ; ticklengt",MatchSource.WIKI,doc/master/classTGaxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGaxis.html
https://root.cern/doc/master/classTGaxis.html:31786,Usability,simpl,simple,31786,"t_t color const char Pixmap_t Pixmap_t PictureAttributes_t attr const char char ret_data h unsigned char height h offsetDefinition TGWin32VirtualXProxy.cxx:245; TGaxis.h; TLatex.h; TLine.h; TString.h; snprintf#define snprintfDefinition civetweb.c:1540; TAttText::SetTextColorvirtual void SetTextColor(Color_t tcolor=1)Set the text color.Definition TAttText.h:44; TAttText::SetTextFontvirtual void SetTextFont(Font_t tfont=62)Set the text font.Definition TAttText.h:46; TAttText::SetTextSizevirtual void SetTextSize(Float_t tsize=1)Set the text size.Definition TAttText.h:47; TGaxis::SetLabelFontvoid SetLabelFont(Int_t labelfont)Definition TGaxis.h:105; TGaxis::SetLabelColorvoid SetLabelColor(Int_t labelcolor)Definition TGaxis.h:104; TLatexTo draw Mathematical Formula.Definition TLatex.h:18; TLatex::DrawLatexTLatex * DrawLatex(Double_t x, Double_t y, const char *text)Make a copy of this object with the new parameters And copy object attributes.Definition TLatex.cxx:1943; TLineUse the TLine constructor to create a simple line.Definition TLine.h:22; TLine::DrawLinevirtual TLine * DrawLine(Double_t x1, Double_t y1, Double_t x2, Double_t y2)Draw this line with new coordinates.Definition TLine.cxx:103; TStringBasic string class.Definition TString.h:139; TText::SetNDCvirtual void SetNDC(Bool_t isNDC=kTRUE)Set NDC mode on if isNDC = kTRUE, off otherwise.Definition TText.cxx:823; TVirtualPadTVirtualPad is an abstract base class for the Pad and Canvas classes.Definition TVirtualPad.h:51; mTMarker mDefinition textangle.C:8; lTLine lDefinition textangle.C:4; ttauto * ttDefinition textangle.C:16; . The following macro illustrates the use, with histograms axis, of the time mode on the axis with different time intervals and time formats.; ; #include <time.h>; ; void timeonaxis(); {; ; time_t script_time;; script_time = time(0);; script_time = 3600*(int)(script_time/3600);; ; // The time offset is the one that will be used by all graphs.; // If one changes it, it will be changed even on th",MatchSource.WIKI,doc/master/classTGaxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGaxis.html
https://root.cern/doc/master/classTGaxis.html:33613,Usability,simpl,simple,33613,"he time offset is the one that will be used by all graphs.; // If one changes it, it will be changed even on the graphs already defined; gStyle->SetTimeOffset(script_time);; ; auto ct = new TCanvas(""ct"",""Time on axis"",10,10,700,900);; ct->Divide(1,3);; ; int i;; ; //### Build a signal: noisy damped sine; // Time interval: 30 minutes; ; gStyle->SetTitleH(0.08);; float noise;; auto ht = new TH1F(""ht"",""Love at first sight"",3000,0.,2000.);; for (i=1;i<3000;i++) {; noise = gRandom->Gaus(0,120);; if (i>700) {; noise += 1000*sin((i-700)*6.28/30)*exp((double)(700-i)/300);; }; ht->SetBinContent(i,noise);; }; ct->cd(1);; ht->SetLineColor(2);; ht->GetXaxis()->SetLabelSize(0.05);; ht->Draw();; // Sets time on the X axis; // The time used is the one set as time offset added to the value; // of the axis. This is converted into day/month/year hour:min:sec and; // a reasonable tick interval value is chosen.; ht->GetXaxis()->SetTimeDisplay(1);; ; //### Build a simple graph beginning at a different time; // Time interval: 5 seconds; ; float x[100], t[100];; for (i=0;i<100;i++) {; x[i] = sin(i*4*3.1415926/50)*exp(-(double)i/20);; t[i] = 6000+(double)i/20;; }; auto gt = new TGraph(100,t,x);; gt->SetTitle(""Politics"");; ct->cd(2);; gt->SetLineColor(5);; gt->SetLineWidth(2);; gt->Draw(""AL"");; gt->GetXaxis()->SetLabelSize(0.05);; // Sets time on the X axis; gt->GetXaxis()->SetTimeDisplay(1);; gPad->Modified();; ; //### Build a second simple graph for a very long time interval; // Time interval: a few years; ; auto gt2 = new TGraph();; TDatime dateBegin(2000,1,1,0,0,0);; for (i=0;i<10;i++) {; TDatime datePnt(2000 + i,1,1,0,0,0);; gt2->AddPoint(datePnt.Convert() - dateBegin.Convert(), 100 + gRandom->Gaus(500,100)*i);; }; gt2->SetTitle(""Number of monkeys on the moon"");; ct->cd(3);; gt2->SetMarkerColor(4);; gt2->SetMarkerStyle(29);; gt2->SetMarkerSize(1.3);; gt2->Draw(""AP"");; gt2->GetXaxis()->SetLabelSize(0.04);; gt2->GetXaxis()->SetNdivisions(10);; // Sets time on the X axis; gt2->GetXaxis()-",MatchSource.WIKI,doc/master/classTGaxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGaxis.html
https://root.cern/doc/master/classTGaxis.html:34089,Usability,simpl,simple,34089,",120);; if (i>700) {; noise += 1000*sin((i-700)*6.28/30)*exp((double)(700-i)/300);; }; ht->SetBinContent(i,noise);; }; ct->cd(1);; ht->SetLineColor(2);; ht->GetXaxis()->SetLabelSize(0.05);; ht->Draw();; // Sets time on the X axis; // The time used is the one set as time offset added to the value; // of the axis. This is converted into day/month/year hour:min:sec and; // a reasonable tick interval value is chosen.; ht->GetXaxis()->SetTimeDisplay(1);; ; //### Build a simple graph beginning at a different time; // Time interval: 5 seconds; ; float x[100], t[100];; for (i=0;i<100;i++) {; x[i] = sin(i*4*3.1415926/50)*exp(-(double)i/20);; t[i] = 6000+(double)i/20;; }; auto gt = new TGraph(100,t,x);; gt->SetTitle(""Politics"");; ct->cd(2);; gt->SetLineColor(5);; gt->SetLineWidth(2);; gt->Draw(""AL"");; gt->GetXaxis()->SetLabelSize(0.05);; // Sets time on the X axis; gt->GetXaxis()->SetTimeDisplay(1);; gPad->Modified();; ; //### Build a second simple graph for a very long time interval; // Time interval: a few years; ; auto gt2 = new TGraph();; TDatime dateBegin(2000,1,1,0,0,0);; for (i=0;i<10;i++) {; TDatime datePnt(2000 + i,1,1,0,0,0);; gt2->AddPoint(datePnt.Convert() - dateBegin.Convert(), 100 + gRandom->Gaus(500,100)*i);; }; gt2->SetTitle(""Number of monkeys on the moon"");; ct->cd(3);; gt2->SetMarkerColor(4);; gt2->SetMarkerStyle(29);; gt2->SetMarkerSize(1.3);; gt2->Draw(""AP"");; gt2->GetXaxis()->SetLabelSize(0.04);; gt2->GetXaxis()->SetNdivisions(10);; // Sets time on the X axis; gt2->GetXaxis()->SetTimeDisplay(1);; ; // One can choose a different time format than the one chosen by default; // The time format is the same as the one of the C strftime() function; // It's a string containing the following formats :; //; // for date :; // %a abbreviated weekday name; // %b abbreviated month name; // %d day of the month (01-31); // %m month (01-12); // %y year without century; // %Y year with century; //; // for time :; // %H hour (24-hour clock); // %I hour (12-hour clock); // %p",MatchSource.WIKI,doc/master/classTGaxis.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGaxis.html
https://root.cern/doc/master/classTGButton.html:12999,Availability,error,error,12999,"="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTGButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButton.html
https://root.cern/doc/master/classTGButton.html:13088,Availability,error,error,13088," object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual ",MatchSource.WIKI,doc/master/classTGButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButton.html
https://root.cern/doc/master/classTGButton.html:13243,Availability,error,error,13243,"etup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the uniqu",MatchSource.WIKI,doc/master/classTGButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButton.html
https://root.cern/doc/master/classTGButton.html:13540,Availability,error,error,13540,"ject using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t ",MatchSource.WIKI,doc/master/classTGButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButton.html
https://root.cern/doc/master/classTGButton.html:17154,Availability,error,error,17154,"sz);  ; void * operator new (size_t sz, void *vp);  ; void * operator new[] (size_t sz);  ; void * operator new[] (size_t sz, void *vp);  ; TObject & operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Paint (Option_t *option="""");  This method must be overridden if a class wants to paint itself. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class s",MatchSource.WIKI,doc/master/classTGButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButton.html
https://root.cern/doc/master/classTGButton.html:25644,Availability,down,down,25644,";  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Protected Member Functions inherited from TGWidget;  TGWidget (const TGWidget &tgw);  ; Int_t ClearFlags (Int_t flags);  ; TGWidget & operator= (const TGWidget &tgw);  ; Int_t SetFlags (Int_t flags);  . Protected Attributes; Pixel_t fBgndColor;  actual background color ;  ; TGButtonGroup * fGroup;  button group this button belongs to ;  ; Pixel_t fHighColor;  highlight color ;  ; GContext_t fNormGC;  graphics context used for drawing button ;  ; EButtonState fState;  button state ;  ; Bool_t fStayDown;  true if button has to stay down ;  ; UInt_t fStyle;  button style (modern or classic) ;  ; UInt_t fTHeight;  button height ;  ; TGToolTip * fTip;  tool tip associated with button ;  ; UInt_t fTWidth;  button width ;  ; void * fUserData;  pointer to user data structure ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive()",MatchSource.WIKI,doc/master/classTGButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButton.html
https://root.cern/doc/master/classTGButton.html:26109,Availability,mask,mask,26109,"utton belongs to ;  ; Pixel_t fHighColor;  highlight color ;  ; GContext_t fNormGC;  graphics context used for drawing button ;  ; EButtonState fState;  button state ;  ; Bool_t fStayDown;  true if button has to stay down ;  ; UInt_t fStyle;  button style (modern or classic) ;  ; UInt_t fTHeight;  button height ;  ; TGToolTip * fTip;  tool tip associated with button ;  ; UInt_t fTWidth;  button width ;  ; void * fUserData;  pointer to user data structure ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Protected Attributes inherited from TGWidget; TString fCommand;  command to be executed ;  ; const TGWindow * fMsgWindow;  window which handles widget events ;  ; Int_t fWidgetFlags;  widget status flags (OR of EWidgetStatus) ;  ; Int_t fWidgetId;  the widget id (used",MatchSource.WIKI,doc/master/classTGButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButton.html
https://root.cern/doc/master/classTGButton.html:40020,Availability,down,down,40020,. Member Data Documentation. ◆ fBgndColor. Pixel_t TGButton::fBgndColor. protected . actual background color ; Definition at line 81 of file TGButton.h. ◆ fgDefaultGC. const TGGC * TGButton::fgDefaultGC = nullptr. staticprotected . Definition at line 88 of file TGButton.h. ◆ fgHibckgndGC. const TGGC * TGButton::fgHibckgndGC = nullptr. staticprotected . Definition at line 89 of file TGButton.h. ◆ fgReleaseBtn. Window_t TGButton::fgReleaseBtn = 0. staticprotected . Definition at line 91 of file TGButton.h. ◆ fGroup. TGButtonGroup* TGButton::fGroup. protected . button group this button belongs to ; Definition at line 80 of file TGButton.h. ◆ fHighColor. Pixel_t TGButton::fHighColor. protected . highlight color ; Definition at line 82 of file TGButton.h. ◆ fNormGC. GContext_t TGButton::fNormGC. protected . graphics context used for drawing button ; Definition at line 77 of file TGButton.h. ◆ fState. EButtonState TGButton::fState. protected . button state ; Definition at line 75 of file TGButton.h. ◆ fStayDown. Bool_t TGButton::fStayDown. protected . true if button has to stay down ; Definition at line 76 of file TGButton.h. ◆ fStyle. UInt_t TGButton::fStyle. protected . button style (modern or classic) ; Definition at line 83 of file TGButton.h. ◆ fTHeight. UInt_t TGButton::fTHeight. protected . button height ; Definition at line 74 of file TGButton.h. ◆ fTip. TGToolTip* TGButton::fTip. protected . tool tip associated with button ; Definition at line 79 of file TGButton.h. ◆ fTWidth. UInt_t TGButton::fTWidth. protected . button width ; Definition at line 73 of file TGButton.h. ◆ fUserData. void* TGButton::fUserData. protected . pointer to user data structure ; Definition at line 78 of file TGButton.h. Libraries for TGButton:. [legend]; The documentation for this class was generated from the following files:; gui/gui/inc/TGButton.h; gui/gui/src/TGButton.cxx. TGButton. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:42:55 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,doc/master/classTGButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButton.html
https://root.cern/doc/master/classTGButton.html:4945,Integrability,message,message,4945,"this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void DrawCopy (Handle_t, Int_t, Int_t);  ; void Dump () const override;  Dump contents of object on stdout. ;  ; virtual Pixel_t GetBackground () const;  ; Int_t GetBorderWidth () const;  ; virtual UInt_t GetDefaultHeight () const;  ; virtual TGDimension GetDefaultSize () const;  std::cout << fWidth << ""x"" << fHeight << std::endl; ;  ; virtual UInt_t GetDefaultWidth () const;  ; virtual TDNDData * GetDNDData (Atom_t);  ; virtual Int_t GetDragType () const;  Returns drag source type. ;  ; virtual Int_t GetDropType () const;  Returns drop target type. ;  ; UInt_t GetEventMask () const;  ; virtual Pixel_t GetForeground () const;  Return frame foreground color. ;  ; TGFrameElement * GetFrameElement () const;  ; virtual TGFrame * GetFrameFromPoint (Int_t x, Int_t y);  ; UInt_t GetHeight () const;  ; UInt_t GetMaxHeight () const;  ; UInt_t GetMaxWidth () const;  ; UInt_t GetMinHeight () const;  ; UInt_t GetMinWidth () const;  ; virtual UInt_t GetOptions () const;  ; TGDimension GetSize () const;  ; UInt_t GetWidth () const;  ; Int_t GetX () const;  ; Int_t GetY () const;  ; virtual Bool_t HandleClientMessage (Event_t *event);  Handle a client message. ;  ; virtual Bool_t HandleColormapChange (Event_t *);  ; virtual Bool_t HandleConfigureNotify (Event_t *event);  This event is generated when the frame is resized. ;  ; virtual Bool_t HandleDNDDrop (TDNDData *);  ; virtual Atom_t HandleDNDEnter (Atom_t *);  ; virtual Bool_t HandleDNDFinished ();  ; virtual Bool_t HandleDNDLeave ();  ; virtual Atom_t HandleDNDPosition (Int_t, Int_t, Atom_t, Int_t, Int_t);  ; virtual Bool_t HandleDoubleClick (Event_t *);  ; virtual Bool_t HandleDragDrop (TGFrame *, Int_t, Int_t, TGLayoutHints *);  ; virtual Bool_t HandleDragEnter (TGFrame *);  ; virtual Bool_t HandleDragLeave (TGFrame *);  ; virtual Bool_t HandleDragMotion (TGFrame *);  ; Bool_t HandleEvent (Event_t *event) override;  Handle all frame events.",MatchSource.WIKI,doc/master/classTGButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButton.html
https://root.cern/doc/master/classTGButton.html:7739,Integrability,message,message,7739,"ption_t *option="""") const override;  Print window id. ;  ; virtual void ProcessedConfigure (Event_t *event);  ; virtual void ProcessedEvent (Event_t *event);  ; virtual Bool_t ProcessMessage (Longptr_t, Longptr_t, Longptr_t);  ; virtual void ReallyDelete ();  ; void RemoveInput (UInt_t emask);  Remove events specified in emask from the events the frame should handle. ;  ; void ReparentWindow (const TGWindow *p, Int_t x=0, Int_t y=0) override;  Reparent window, make p the new parent and position the window at position (x,y) in new parent. ;  ; virtual void Resize (TGDimension size);  Resize the frame. ;  ; void Resize (UInt_t w=0, UInt_t h=0) override;  Resize the frame. ;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save a frame widget as a C++ statement(s) on output stream out. ;  ; void SaveUserColor (std::ostream &out, Option_t *);  Save a user color in a C++ macro file - used in SavePrimitive(). ;  ; virtual void SendMessage (const TGWindow *w, Longptr_t msg, Longptr_t parm1, Longptr_t parm2);  Send message (i.e. ;  ; void SetBackgroundColor (Pixel_t back) override;  Set background color (override from TGWindow base class). ;  ; virtual void SetCleanup (Int_t=kLocalCleanup);  ; void SetDNDSource (Bool_t onoff);  ; void SetDNDTarget (Bool_t onoff);  ; virtual void SetDragType (Int_t type);  SetDragType. ;  ; void SetDrawOption (Option_t *="""") override;  Set drawing option for object. ;  ; virtual void SetDropType (Int_t type);  SetDropType. ;  ; void SetEditable (Bool_t) override;  ; virtual void SetForegroundColor (Pixel_t);  ; void SetFrameElement (TGFrameElement *fe);  ; virtual void SetHeight (UInt_t h);  ; virtual void SetLayoutBroken (Bool_t=kTRUE);  ; virtual void SetMaxHeight (UInt_t h);  ; virtual void SetMaxWidth (UInt_t w);  ; virtual void SetMinHeight (UInt_t h);  ; virtual void SetMinWidth (UInt_t w);  ; virtual void SetSize (const TGDimension &s);  ; virtual void SetWidth (UInt_t w);  ; virtual void SetX (Int_t x);  ; vi",MatchSource.WIKI,doc/master/classTGButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButton.html
https://root.cern/doc/master/classTGButton.html:13005,Integrability,message,message,13005,"="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTGButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButton.html
https://root.cern/doc/master/classTGButton.html:13546,Integrability,message,message,13546,"ject using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t ",MatchSource.WIKI,doc/master/classTGButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButton.html
https://root.cern/doc/master/classTGButton.html:14507,Integrability,message,message,14507,"t char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessar",MatchSource.WIKI,doc/master/classTGButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButton.html
https://root.cern/doc/master/classTGButton.html:17160,Integrability,message,message,17160,"sz);  ; void * operator new (size_t sz, void *vp);  ; void * operator new[] (size_t sz);  ; void * operator new[] (size_t sz, void *vp);  ; TObject & operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Paint (Option_t *option="""");  This method must be overridden if a class wants to paint itself. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class s",MatchSource.WIKI,doc/master/classTGButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButton.html
https://root.cern/doc/master/classTGButton.html:17533,Integrability,message,message,17533," pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from class cls and all its base-classes. ;  ; Bool_t Connect (const char *signal, const char *receiver_class, void *receiver, const char *slot);  Non-static method is used to connect from the signal of this object to the receiver slot. ;  ; virtual void Connected (const char *);  ; virtual void Destroyed ();  ; Bool_t Disconnect (const char *signal=nullptr, voi",MatchSource.WIKI,doc/master/classTGButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButton.html
https://root.cern/doc/master/classTGButton.html:2593,Modifiability,inherit,inherited,2593,"t stream out. ;  ; virtual void SetDown (Bool_t on=kTRUE, Bool_t emit=kFALSE);  ; virtual void SetEnabled (Bool_t e=kTRUE);  Set enabled or disabled state of button. ;  ; virtual void SetGroup (TGButtonGroup *gr);  Sets new button-group for this button. ;  ; virtual void SetOn (Bool_t on=kTRUE, Bool_t emit=kFALSE);  ; virtual void SetState (EButtonState state, Bool_t emit=kFALSE);  Set button state. ;  ; virtual void SetStyle (const char *style);  Set the button style (modern or classic). ;  ; virtual void SetStyle (UInt_t newstyle);  Set the button style (modern or classic). ;  ; virtual void SetToolTipText (const char *text, Long_t delayms=400);  Set tool tip text associated with this button. ;  ; virtual void SetUserData (void *userData);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void Toggle (Bool_t emit=kFALSE);  ; virtual void Toggled (Bool_t on);  ;  Public Member Functions inherited from TGFrame;  TGFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=0, Pixel_t back=GetDefaultFrameBackground());  Create a TGFrame object. Options is an OR of the EFrameTypes. ;  ;  TGFrame (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a frame using an externally created window. ;  ;  ~TGFrame () override;  Destructor. ;  ; virtual void Activate (Bool_t);  ; void AddInput (UInt_t emask);  Add events specified in the emask to the events the frame should handle. ;  ; virtual void ChangeBackground (Pixel_t back);  Change frame background color. ;  ; virtual void ChangeOptions (UInt_t options);  Change frame options. Options is an OR of the EFrameTypes. ;  ; Bool_t Contains (Int_t x, Int_t y) const;  ; void Delete (Option_t *="""") override;  Delete this object. ;  ; virtual void DeleteWindow ();  Delete window. ;  ; virtual void DrawBorder ();  Draw frame border. ;  ; void DrawClass () const override;  Draw class inheritance tree of ",MatchSource.WIKI,doc/master/classTGButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButton.html
https://root.cern/doc/master/classTGButton.html:3570,Modifiability,inherit,inheritance,3570,"ic Member Functions inherited from TGFrame;  TGFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=0, Pixel_t back=GetDefaultFrameBackground());  Create a TGFrame object. Options is an OR of the EFrameTypes. ;  ;  TGFrame (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a frame using an externally created window. ;  ;  ~TGFrame () override;  Destructor. ;  ; virtual void Activate (Bool_t);  ; void AddInput (UInt_t emask);  Add events specified in the emask to the events the frame should handle. ;  ; virtual void ChangeBackground (Pixel_t back);  Change frame background color. ;  ; virtual void ChangeOptions (UInt_t options);  Change frame options. Options is an OR of the EFrameTypes. ;  ; Bool_t Contains (Int_t x, Int_t y) const;  ; void Delete (Option_t *="""") override;  Delete this object. ;  ; virtual void DeleteWindow ();  Delete window. ;  ; virtual void DrawBorder ();  Draw frame border. ;  ; void DrawClass () const override;  Draw class inheritance tree of the class to which this object belongs. ;  ; TObject * DrawClone (Option_t *="""") const override;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void DrawCopy (Handle_t, Int_t, Int_t);  ; void Dump () const override;  Dump contents of object on stdout. ;  ; virtual Pixel_t GetBackground () const;  ; Int_t GetBorderWidth () const;  ; virtual UInt_t GetDefaultHeight () const;  ; virtual TGDimension GetDefaultSize () const;  std::cout << fWidth << ""x"" << fHeight << std::endl; ;  ; virtual UInt_t GetDefaultWidth () const;  ; virtual TDNDData * GetDNDData (Atom_t);  ; virtual Int_t GetDragType () const;  Returns drag source type. ;  ; virtual Int_t GetDropType () const;  Returns drop target type. ;  ; UInt_t GetEventMask () const;  ; virtual Pixel_t GetForeground () const;  Return frame foreground color. ;  ; TGFrameElement * GetFrameElement () const;  ; virtual TGFrame * GetFrameFromPoint (Int_t x, Int_t y);  ; UInt_t G",MatchSource.WIKI,doc/master/classTGButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButton.html
https://root.cern/doc/master/classTGButton.html:8937,Modifiability,inherit,inherited,8937,"  ; virtual void SetDragType (Int_t type);  SetDragType. ;  ; void SetDrawOption (Option_t *="""") override;  Set drawing option for object. ;  ; virtual void SetDropType (Int_t type);  SetDropType. ;  ; void SetEditable (Bool_t) override;  ; virtual void SetForegroundColor (Pixel_t);  ; void SetFrameElement (TGFrameElement *fe);  ; virtual void SetHeight (UInt_t h);  ; virtual void SetLayoutBroken (Bool_t=kTRUE);  ; virtual void SetMaxHeight (UInt_t h);  ; virtual void SetMaxWidth (UInt_t w);  ; virtual void SetMinHeight (UInt_t h);  ; virtual void SetMinWidth (UInt_t w);  ; virtual void SetSize (const TGDimension &s);  ; virtual void SetWidth (UInt_t w);  ; virtual void SetX (Int_t x);  ; virtual void SetY (Int_t y);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UnmapWindow () override;  unmap window ;  ;  Public Member Functions inherited from TGWindow;  TGWindow (const TGWindow *p=nullptr, Int_t x=0, Int_t y=0, UInt_t w=0, UInt_t h=0, UInt_t border=0, Int_t depth=0, UInt_t clss=0, void *visual=nullptr, SetWindowAttributes_t *attr=nullptr, UInt_t wtype=0);  Create a new window. ;  ;  TGWindow (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a copy of a window. ;  ;  ~TGWindow () override;  Window destructor. Unregisters the window. ;  ; virtual void DestroySubwindows ();  destroy sub windows ;  ; virtual void DestroyWindow ();  destroy window ;  ; virtual UInt_t GetEditDisabled () const;  ; virtual const TGWindow * GetMainFrame () const;  Returns top level main frame. ;  ; const char * GetName () const override;  Return unique name, used in SavePrimitive methods. ;  ; const TGWindow * GetParent () const;  ; virtual Bool_t HandleExpose (Event_t *event);  ; virtual Bool_t HandleIdleEvent (TGIdleHandler *);  ; Bool_t HandleTimer (TTimer *) override;  Execute action in response of a timer timing out. ;  ; virtual void IconifyWindow ();  iconify win",MatchSource.WIKI,doc/master/classTGButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButton.html
https://root.cern/doc/master/classTGButton.html:10903,Modifiability,inherit,inherited,10903,"nse of a timer timing out. ;  ; virtual void IconifyWindow ();  iconify window ;  ; TClass * IsA () const override;  ; virtual Bool_t IsMapped ();  Returns kTRUE if window is mapped on screen, kFALSE otherwise. ;  ; virtual Bool_t IsMapSubwindows () const;  ; virtual void LowerWindow ();  lower window ;  ; virtual Int_t MustCleanup () const;  ; void Print (Option_t *option="""") const override;  Print window id. ;  ; virtual void RaiseWindow ();  raise window ;  ; virtual void RequestFocus ();  request focus ;  ; virtual void SetBackgroundPixmap (Pixmap_t pixmap);  set background pixmap ;  ; virtual void SetEditDisabled (UInt_t on=kEditDisable);  ; virtual void SetMapSubwindows (Bool_t);  ; virtual void SetName (const char *name);  ; virtual void SetWindowName (const char *name=nullptr);  Set window name. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGObject;  TGObject ();  ;  TGObject (const TGObject &tgo);  ;  ~TGObject () override;  TGObject destructor. ;  ; TGClient * GetClient () const;  ; Handle_t GetId () const;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsEqual (const TObject *obj) const override;  Equal comparison (TGObjects are equal if they have the same window identifier). ;  ; void SaveAs (const char *filename="""", Option_t *option="""") const override;  Write this TGObject to a file using TImage, if filename's extension signals a valid TImage::EImageFileType, as defined by TImage::GetImageFileTypeFromFilename(). ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you d",MatchSource.WIKI,doc/master/classTGButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButton.html
https://root.cern/doc/master/classTGButton.html:11638,Modifiability,inherit,inherited,11638,"al void SetName (const char *name);  ; virtual void SetWindowName (const char *name=nullptr);  Set window name. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGObject;  TGObject ();  ;  TGObject (const TGObject &tgo);  ;  ~TGObject () override;  TGObject destructor. ;  ; TGClient * GetClient () const;  ; Handle_t GetId () const;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsEqual (const TObject *obj) const override;  Equal comparison (TGObjects are equal if they have the same window identifier). ;  ; void SaveAs (const char *filename="""", Option_t *option="""") const override;  Write this TGObject to a file using TImage, if filename's extension signals a valid TImage::EImageFileType, as defined by TImage::GetImageFileTypeFromFilename(). ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,doc/master/classTGButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButton.html
https://root.cern/doc/master/classTGButton.html:14605,Modifiability,inherit,inherits,14605,"* FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handl",MatchSource.WIKI,doc/master/classTGButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButton.html
https://root.cern/doc/master/classTGButton.html:14722,Modifiability,inherit,inherits,14722,"nst TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base implementation is no-op). ;  ; void Obsolete (const char *method, const char *asOfVe",MatchSource.WIKI,doc/master/classTGButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButton.html
https://root.cern/doc/master/classTGButton.html:17840,Modifiability,inherit,inherited,17840,"f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from class cls and all its base-classes. ;  ; Bool_t Connect (const char *signal, const char *receiver_class, void *receiver, const char *slot);  Non-static method is used to connect from the signal of this object to the receiver slot. ;  ; virtual void Connected (const char *);  ; virtual void Destroyed ();  ; Bool_t Disconnect (const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal of this object from slot of receiver. ;  ; virtual void Disconnected (const char *);  ; void Emit (const char *signal);  Activate signal without args. ;  ; template<typename T > ; void Emit (const char *signal, const T &arg);  Activate signal with single paramet",MatchSource.WIKI,doc/master/classTGButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButton.html
https://root.cern/doc/master/classTGButton.html:19808,Modifiability,inherit,inherited,19808,"a signal with a varying number of arguments. ;  ; TList * GetListOfClassSignals () const;  Returns pointer to list of signals of this class. ;  ; TList * GetListOfConnections () const;  ; TList * GetListOfSignals () const;  ; virtual Bool_t HasConnection (const char *signal_name) const;  Return true if there is any object connected to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGWidget;  TGWidget ();  ;  TGWidget (Int_t id);  ; virtual ~TGWidget ();  ; virtual void Associate (const TGWindow *w);  ; const char * GetCommand () const;  ; Bool_t HasFocus () const;  ; Bool_t IsEnabled () const;  ; virtual void SetCommand (const char *command);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Bool_t WantFocus () const;  ; Int_t WidgetId () const;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetDefaultGC ();  Return default graphics context. ;  ; static const TGGC & GetHibckgndGC ();  Return graphics context for highlighted frame background. ;  ;  Static Public Member Functions inherited from TGFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetBckgndGC ();  Get background color graphics context. ;  ; static const TGGC & GetBlackGC ();  Get black graphics context. ;  ; static Pixel_t GetBlac",MatchSource.WIKI,doc/master/classTGButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButton.html
https://root.cern/doc/master/classTGButton.html:20613,Modifiability,inherit,inherited,20613,d StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGWidget;  TGWidget ();  ;  TGWidget (Int_t id);  ; virtual ~TGWidget ();  ; virtual void Associate (const TGWindow *w);  ; const char * GetCommand () const;  ; Bool_t HasFocus () const;  ; Bool_t IsEnabled () const;  ; virtual void SetCommand (const char *command);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Bool_t WantFocus () const;  ; Int_t WidgetId () const;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetDefaultGC ();  Return default graphics context. ;  ; static const TGGC & GetHibckgndGC ();  Return graphics context for highlighted frame background. ;  ;  Static Public Member Functions inherited from TGFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetBckgndGC ();  Get background color graphics context. ;  ; static const TGGC & GetBlackGC ();  Get black graphics context. ;  ; static Pixel_t GetBlackPixel ();  Get black pixel value. ;  ; static Pixel_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get shadow color graphics context. ;  ; static const TGGC & GetWhiteGC ();  Get white graphics context. ;  ; static Pixel_t GetWhitePixel ();  Get white pixel value. ;  ;  Static Public Member Functions inherited from TGWindow; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetCounter ();  Return global,MatchSource.WIKI,doc/master/classTGButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButton.html
https://root.cern/doc/master/classTGButton.html:21499,Modifiability,inherit,inherited,21499,erited from TGFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetBckgndGC ();  Get background color graphics context. ;  ; static const TGGC & GetBlackGC ();  Get black graphics context. ;  ; static Pixel_t GetBlackPixel ();  Get black pixel value. ;  ; static Pixel_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get shadow color graphics context. ;  ; static const TGGC & GetWhiteGC ();  Get white graphics context. ;  ; static Pixel_t GetWhitePixel ();  Get white pixel value. ;  ;  Static Public Member Functions inherited from TGWindow; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetCounter ();  Return global window counter (total number of created windows). ;  ;  Static Public Member Functions inherited from TGObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true,MatchSource.WIKI,doc/master/classTGButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButton.html
https://root.cern/doc/master/classTGButton.html:21809,Modifiability,inherit,inherited,21809,"_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get shadow color graphics context. ;  ; static const TGGC & GetWhiteGC ();  Get white graphics context. ;  ; static Pixel_t GetWhitePixel ();  Get white pixel value. ;  ;  Static Public Member Functions inherited from TGWindow; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetCounter ();  Return global window counter (total number of created windows). ;  ;  Static Public Member Functions inherited from TGObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This m",MatchSource.WIKI,doc/master/classTGButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButton.html
https://root.cern/doc/master/classTGButton.html:22021,Modifiability,inherit,inherited,22021,"_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get shadow color graphics context. ;  ; static const TGGC & GetWhiteGC ();  Get white graphics context. ;  ; static Pixel_t GetWhitePixel ();  Get white pixel value. ;  ;  Static Public Member Functions inherited from TGWindow; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetCounter ();  Return global window counter (total number of created windows). ;  ;  Static Public Member Functions inherited from TGObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This m",MatchSource.WIKI,doc/master/classTGButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButton.html
https://root.cern/doc/master/classTGButton.html:22539,Modifiability,inherit,inherited,22539," Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetCounter ();  Return global window counter (total number of created windows). ;  ;  Static Public Member Functions inherited from TGObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullpt",MatchSource.WIKI,doc/master/classTGButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButton.html
https://root.cern/doc/master/classTGButton.html:23714,Modifiability,inherit,inherited,23714," ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Static Public Member Functions inherited from TGWidget; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; virtual void EmitSignals (Bool_t wasUp);  Emit button signals. ;  ; virtual void SetToggleButton (Bool_t);  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo)",MatchSource.WIKI,doc/master/classTGButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButton.html
https://root.cern/doc/master/classTGButton.html:24060,Modifiability,inherit,inherited,24060,"any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Static Public Member Functions inherited from TGWidget; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; virtual void EmitSignals (Bool_t wasUp);  Emit button signals. ;  ; virtual void SetToggleButton (Bool_t);  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; vir",MatchSource.WIKI,doc/master/classTGButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButton.html
https://root.cern/doc/master/classTGButton.html:24554,Modifiability,inherit,inherited,24554,"TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; virtual void EmitSignals (Bool_t wasUp);  Emit button signals. ;  ; virtual void SetToggleButton (Bool_t);  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Protected Member Functions inherited from TGWidget;  TGWidget (const TGWidget &tgw);  ; Int_t ClearFlags (Int_t flags);  ; TGWidget & operator= (const TGWidget &tgw);  ; Int_t SetFlags (Int_t flags);  . Protected Attributes; Pixel_t fBgndColor;  actual background color ;  ; TGButtonGroup * fGroup;  button group this button belongs to ;  ; Pixel_t fHighColor;  highlight color ;  ; GContext_t fNormGC;  graphics context used for drawing button ;  ; EButtonState fState;  button state ;  ; Bool_t fStayDown;  true if button has to stay down ;  ; UInt_t fStyle;  button style (modern or classic) ;  ; UInt_t fTHeight;  button height ;  ; T",MatchSource.WIKI,doc/master/classTGButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButton.html
https://root.cern/doc/master/classTGButton.html:24718,Modifiability,inherit,inherited,24718,"TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; virtual void EmitSignals (Bool_t wasUp);  Emit button signals. ;  ; virtual void SetToggleButton (Bool_t);  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Protected Member Functions inherited from TGWidget;  TGWidget (const TGWidget &tgw);  ; Int_t ClearFlags (Int_t flags);  ; TGWidget & operator= (const TGWidget &tgw);  ; Int_t SetFlags (Int_t flags);  . Protected Attributes; Pixel_t fBgndColor;  actual background color ;  ; TGButtonGroup * fGroup;  button group this button belongs to ;  ; Pixel_t fHighColor;  highlight color ;  ; GContext_t fNormGC;  graphics context used for drawing button ;  ; EButtonState fState;  button state ;  ; Bool_t fStayDown;  true if button has to stay down ;  ; UInt_t fStyle;  button style (modern or classic) ;  ; UInt_t fTHeight;  button height ;  ; T",MatchSource.WIKI,doc/master/classTGButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButton.html
https://root.cern/doc/master/classTGButton.html:24818,Modifiability,inherit,inherited,24818,"TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; virtual void EmitSignals (Bool_t wasUp);  Emit button signals. ;  ; virtual void SetToggleButton (Bool_t);  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Protected Member Functions inherited from TGWidget;  TGWidget (const TGWidget &tgw);  ; Int_t ClearFlags (Int_t flags);  ; TGWidget & operator= (const TGWidget &tgw);  ; Int_t SetFlags (Int_t flags);  . Protected Attributes; Pixel_t fBgndColor;  actual background color ;  ; TGButtonGroup * fGroup;  button group this button belongs to ;  ; Pixel_t fHighColor;  highlight color ;  ; GContext_t fNormGC;  graphics context used for drawing button ;  ; EButtonState fState;  button state ;  ; Bool_t fStayDown;  true if button has to stay down ;  ; UInt_t fStyle;  button style (modern or classic) ;  ; UInt_t fTHeight;  button height ;  ; T",MatchSource.WIKI,doc/master/classTGButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButton.html
https://root.cern/doc/master/classTGButton.html:25029,Modifiability,inherit,inherited,25029,"l void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Protected Member Functions inherited from TGWidget;  TGWidget (const TGWidget &tgw);  ; Int_t ClearFlags (Int_t flags);  ; TGWidget & operator= (const TGWidget &tgw);  ; Int_t SetFlags (Int_t flags);  . Protected Attributes; Pixel_t fBgndColor;  actual background color ;  ; TGButtonGroup * fGroup;  button group this button belongs to ;  ; Pixel_t fHighColor;  highlight color ;  ; GContext_t fNormGC;  graphics context used for drawing button ;  ; EButtonState fState;  button state ;  ; Bool_t fStayDown;  true if button has to stay down ;  ; UInt_t fStyle;  button style (modern or classic) ;  ; UInt_t fTHeight;  button height ;  ; TGToolTip * fTip;  tool tip associated with button ;  ; UInt_t fTWidth;  button width ;  ; void * fUserData;  pointer to user data structure ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE; ",MatchSource.WIKI,doc/master/classTGButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButton.html
https://root.cern/doc/master/classTGButton.html:25135,Modifiability,inherit,inherited,25135,"l void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Protected Member Functions inherited from TGWidget;  TGWidget (const TGWidget &tgw);  ; Int_t ClearFlags (Int_t flags);  ; TGWidget & operator= (const TGWidget &tgw);  ; Int_t SetFlags (Int_t flags);  . Protected Attributes; Pixel_t fBgndColor;  actual background color ;  ; TGButtonGroup * fGroup;  button group this button belongs to ;  ; Pixel_t fHighColor;  highlight color ;  ; GContext_t fNormGC;  graphics context used for drawing button ;  ; EButtonState fState;  button state ;  ; Bool_t fStayDown;  true if button has to stay down ;  ; UInt_t fStyle;  button style (modern or classic) ;  ; UInt_t fTHeight;  button height ;  ; TGToolTip * fTip;  tool tip associated with button ;  ; UInt_t fTWidth;  button width ;  ; void * fUserData;  pointer to user data structure ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE; ",MatchSource.WIKI,doc/master/classTGButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButton.html
https://root.cern/doc/master/classTGButton.html:25913,Modifiability,inherit,inherited,25913,";  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Protected Member Functions inherited from TGWidget;  TGWidget (const TGWidget &tgw);  ; Int_t ClearFlags (Int_t flags);  ; TGWidget & operator= (const TGWidget &tgw);  ; Int_t SetFlags (Int_t flags);  . Protected Attributes; Pixel_t fBgndColor;  actual background color ;  ; TGButtonGroup * fGroup;  button group this button belongs to ;  ; Pixel_t fHighColor;  highlight color ;  ; GContext_t fNormGC;  graphics context used for drawing button ;  ; EButtonState fState;  button state ;  ; Bool_t fStayDown;  true if button has to stay down ;  ; UInt_t fStyle;  button style (modern or classic) ;  ; UInt_t fTHeight;  button height ;  ; TGToolTip * fTip;  tool tip associated with button ;  ; UInt_t fTWidth;  button width ;  ; void * fUserData;  pointer to user data structure ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive()",MatchSource.WIKI,doc/master/classTGButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButton.html
https://root.cern/doc/master/classTGButton.html:26545,Modifiability,inherit,inherited,26545,"utton belongs to ;  ; Pixel_t fHighColor;  highlight color ;  ; GContext_t fNormGC;  graphics context used for drawing button ;  ; EButtonState fState;  button state ;  ; Bool_t fStayDown;  true if button has to stay down ;  ; UInt_t fStyle;  button style (modern or classic) ;  ; UInt_t fTHeight;  button height ;  ; TGToolTip * fTip;  tool tip associated with button ;  ; UInt_t fTWidth;  button width ;  ; void * fUserData;  pointer to user data structure ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Protected Attributes inherited from TGWidget; TString fCommand;  command to be executed ;  ; const TGWindow * fMsgWindow;  window which handles widget events ;  ; Int_t fWidgetFlags;  widget status flags (OR of EWidgetStatus) ;  ; Int_t fWidgetId;  the widget id (used",MatchSource.WIKI,doc/master/classTGButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButton.html
https://root.cern/doc/master/classTGButton.html:26822,Modifiability,inherit,inherited,26822,"serData;  pointer to user data structure ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Protected Attributes inherited from TGWidget; TString fCommand;  command to be executed ;  ; const TGWindow * fMsgWindow;  window which handles widget events ;  ; Int_t fWidgetFlags;  widget status flags (OR of EWidgetStatus) ;  ; Int_t fWidgetId;  the widget id (used for event processing) ;  . Static Protected Attributes; static const TGGC * fgDefaultGC = nullptr;  ; static const TGGC * fgHibckgndGC = nullptr;  ; static Window_t fgReleaseBtn = 0;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0; ",MatchSource.WIKI,doc/master/classTGButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButton.html
https://root.cern/doc/master/classTGButton.html:26974,Modifiability,inherit,inherited,26974,"t ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Protected Attributes inherited from TGWidget; TString fCommand;  command to be executed ;  ; const TGWindow * fMsgWindow;  window which handles widget events ;  ; Int_t fWidgetFlags;  widget status flags (OR of EWidgetStatus) ;  ; Int_t fWidgetId;  the widget id (used for event processing) ;  . Static Protected Attributes; static const TGGC * fgDefaultGC = nullptr;  ; static const TGGC * fgHibckgndGC = nullptr;  ; static Window_t fgReleaseBtn = 0;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0; ",MatchSource.WIKI,doc/master/classTGButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButton.html
https://root.cern/doc/master/classTGButton.html:27180,Modifiability,inherit,inherited,27180,"t ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Protected Attributes inherited from TGWidget; TString fCommand;  command to be executed ;  ; const TGWindow * fMsgWindow;  window which handles widget events ;  ; Int_t fWidgetFlags;  widget status flags (OR of EWidgetStatus) ;  ; Int_t fWidgetId;  the widget id (used for event processing) ;  . Static Protected Attributes; static const TGGC * fgDefaultGC = nullptr;  ; static const TGGC * fgHibckgndGC = nullptr;  ; static Window_t fgReleaseBtn = 0;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0; ",MatchSource.WIKI,doc/master/classTGButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButton.html
https://root.cern/doc/master/classTGButton.html:27643,Modifiability,inherit,inherited,27643," * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Protected Attributes inherited from TGWidget; TString fCommand;  command to be executed ;  ; const TGWindow * fMsgWindow;  window which handles widget events ;  ; Int_t fWidgetFlags;  widget status flags (OR of EWidgetStatus) ;  ; Int_t fWidgetId;  the widget id (used for event processing) ;  . Static Protected Attributes; static const TGGC * fgDefaultGC = nullptr;  ; static const TGGC * fgHibckgndGC = nullptr;  ; static Window_t fgReleaseBtn = 0;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Private Member Functions;  TGButton (const TGButton &)=delete;  ; TGButton & operator= (const TGButton &)=delete;  . Friends; class TGButtonGroup;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4",MatchSource.WIKI,doc/master/classTGButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButton.html
https://root.cern/doc/master/classTGButton.html:28312,Modifiability,inherit,inherited,28312," * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Protected Attributes inherited from TGWidget; TString fCommand;  command to be executed ;  ; const TGWindow * fMsgWindow;  window which handles widget events ;  ; Int_t fWidgetFlags;  widget status flags (OR of EWidgetStatus) ;  ; Int_t fWidgetId;  the widget id (used for event processing) ;  . Static Protected Attributes; static const TGGC * fgDefaultGC = nullptr;  ; static const TGGC * fgHibckgndGC = nullptr;  ; static Window_t fgReleaseBtn = 0;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Private Member Functions;  TGButton (const TGButton &)=delete;  ; TGButton & operator= (const TGButton &)=delete;  . Friends; class TGButtonGroup;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4",MatchSource.WIKI,doc/master/classTGButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButton.html
https://root.cern/doc/master/classTGButton.html:28444,Modifiability,inherit,inherited,28444," * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Protected Attributes inherited from TGWidget; TString fCommand;  command to be executed ;  ; const TGWindow * fMsgWindow;  window which handles widget events ;  ; Int_t fWidgetFlags;  widget status flags (OR of EWidgetStatus) ;  ; Int_t fWidgetId;  the widget id (used for event processing) ;  . Static Protected Attributes; static const TGGC * fgDefaultGC = nullptr;  ; static const TGGC * fgHibckgndGC = nullptr;  ; static Window_t fgReleaseBtn = 0;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Private Member Functions;  TGButton (const TGButton &)=delete;  ; TGButton & operator= (const TGButton &)=delete;  . Friends; class TGButtonGroup;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4",MatchSource.WIKI,doc/master/classTGButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButton.html
https://root.cern/doc/master/classTGButton.html:28750,Modifiability,inherit,inherited,28750,"DefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Private Member Functions;  TGButton (const TGButton &)=delete;  ; TGButton & operator= (const TGButton &)=delete;  . Friends; class TGButtonGroup;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindo",MatchSource.WIKI,doc/master/classTGButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButton.html
https://root.cern/doc/master/classTGButton.html:29257,Modifiability,inherit,inherited,29257,"ttributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Private Member Functions;  TGButton (const TGButton &)=delete;  ; TGButton & operator= (const TGButton &)=delete;  . Friends; class TGButtonGroup;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TCla",MatchSource.WIKI,doc/master/classTGButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButton.html
https://root.cern/doc/master/classTGButton.html:29898,Modifiability,inherit,inherited,29898,"t = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sen",MatchSource.WIKI,doc/master/classTGButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButton.html
https://root.cern/doc/master/classTGButton.html:29993,Modifiability,inherit,inherited,29993,"t = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sen",MatchSource.WIKI,doc/master/classTGButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButton.html
https://root.cern/doc/master/classTGButton.html:30099,Modifiability,inherit,inherited,30099,"t = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sen",MatchSource.WIKI,doc/master/classTGButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButton.html
https://root.cern/doc/master/classTGButton.html:30225,Modifiability,inherit,inherited,30225,"; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  . #include <TGButton.h>. Inheritance diagram for TGButton:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGButton() [1/2]. TGButton::TGButton ; (; const TGButton & ; ). pri",MatchSource.WIKI,doc/master/classTGButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButton.html
https://root.cern/doc/master/classTGButton.html:11134,Security,hash,hash,11134,"pped on screen, kFALSE otherwise. ;  ; virtual Bool_t IsMapSubwindows () const;  ; virtual void LowerWindow ();  lower window ;  ; virtual Int_t MustCleanup () const;  ; void Print (Option_t *option="""") const override;  Print window id. ;  ; virtual void RaiseWindow ();  raise window ;  ; virtual void RequestFocus ();  request focus ;  ; virtual void SetBackgroundPixmap (Pixmap_t pixmap);  set background pixmap ;  ; virtual void SetEditDisabled (UInt_t on=kEditDisable);  ; virtual void SetMapSubwindows (Bool_t);  ; virtual void SetName (const char *name);  ; virtual void SetWindowName (const char *name=nullptr);  Set window name. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGObject;  TGObject ();  ;  TGObject (const TGObject &tgo);  ;  ~TGObject () override;  TGObject destructor. ;  ; TGClient * GetClient () const;  ; Handle_t GetId () const;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsEqual (const TObject *obj) const override;  Equal comparison (TGObjects are equal if they have the same window identifier). ;  ; void SaveAs (const char *filename="""", Option_t *option="""") const override;  Write this TGObject to a file using TImage, if filename's extension signals a valid TImage::EImageFileType, as defined by TImage::GetImageFileTypeFromFilename(). ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse ob",MatchSource.WIKI,doc/master/classTGButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButton.html
https://root.cern/doc/master/classTGButtonGroup.html:2386,Availability,down,down,2386,"ructor. A TGButtonGroup can display a frame and a title because it inherits from TGGroupFrame.; Example:; // vertical frame without border and title; TGVButtonGroup *bg = new TGVButtonGroup(main_frame);; ; // create text button with id=1; TGTextButton *button1 = new TGTextButton(bg,""some text"");; ; // create another text button with id=2; TGTextButton *button2 = new TGTextButton(bg,""another text"");; ; // map all buttons; bg->Show();; TGButtonGroup::Showvirtual void Show()Show group of buttons.Definition TGButtonGroup.cxx:549; TGTextButtonYield an action as soon as it is clicked.Definition TGButton.h:142; TGVButtonGroupOrganizes TGButton widgets in a group with one vertical column.Definition TGButtonGroup.h:94; NOTE: there is no need to call AddFrame() since the buttons are automatically added with a default layout hint to their parent, i.e. the buttongroup. To override the default layout hints use the SetLayoutHints() method.; ButtonGroup Signals:. Pressed(Int_t id) --> is emitted when a button in the group is pressed down. The id argument is the button's identifier.; Released(Int_t id) --> is emitted when a button in the group is released. The id argument is the button's identifier.; Clicked(Int_t id) --> is emitted when a button in the group is clicked. The id argument is the button's identifier. . Definition at line 21 of file TGButtonGroup.h. Public Member Functions;  TGButtonGroup (const TGWindow *parent, UInt_t r, UInt_t c, Int_t s=0, Int_t h=0, const TString &title="""", GContext_t norm=GetDefaultGC()(), FontStruct_t font=GetDefaultFontStruct(), Pixel_t back=GetDefaultFrameBackground());  Constructor. ;  ;  TGButtonGroup (const TGWindow *parent=nullptr, const TString &title="""", UInt_t options=kChildFrame|kVerticalFrame, GContext_t norm=GetDefaultGC()(), FontStruct_t font=GetDefaultFontStruct(), Pixel_t back=GetDefaultFrameBackground());  Constructor. Layout 1 row or 1 column. ;  ;  ~TGButtonGroup () override;  Destructor, we do not delete the buttons. ;  ; virtu",MatchSource.WIKI,doc/master/classTGButtonGroup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButtonGroup.html
https://root.cern/doc/master/classTGButtonGroup.html:5084,Availability,down,down,5084,"eturns the id of the button. ;  ; virtual void Hide ();  Hide group of buttons. ;  ; virtual Int_t Insert (TGButton *button, int id=-1);  Inserts a button with the identifier id into the button group. ;  ; TClass * IsA () const override;  ; Bool_t IsBorderDrawn () const;  ; Bool_t IsEnabled () const;  ; Bool_t IsExclusive () const;  ; Bool_t IsRadioButtonExclusive () const;  ; virtual void Pressed (Int_t id);  ; virtual void ReleaseButtons ();  This slot is activated when one of the buttons in the exclusive group emits the Pressed() signal. ;  ; virtual void Released (Int_t id);  ; virtual void Remove (TGButton *button);  Removes a button from the button group. ;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save a button group widget as a C++ statement(s) on output stream out. ;  ; virtual void SetBorderDrawn (Bool_t enable=kTRUE);  Makes border to be visible/invisible. ;  ; virtual void SetButton (Int_t id, Bool_t down=kTRUE);  Sets the button with id to be on/down, and if this is an exclusive group, all other button in the group to be off/up. ;  ; virtual void SetExclusive (Bool_t flag=kTRUE);  Sets the button group to be exclusive if enable is kTRUE, or to be non-exclusive if enable is kFALSE. ;  ; virtual void SetLayoutHints (TGLayoutHints *l, TGButton *button=nullptr);  Set layout hints for the specified button or if button=0 for all buttons. ;  ; virtual void SetRadioButtonExclusive (Bool_t flag=kTRUE);  If enable is kTRUE, this button group will treat radio buttons as mutually exclusive, and other buttons according to IsExclusive(). ;  ; virtual void SetState (Bool_t state=kTRUE);  Sets the state of all the buttons in the group to enable or disable. ;  ; void SetTitle (const char *title) override;  Set or change title. ;  ; void SetTitle (TGString *title) override;  Set or change title. ;  ; virtual void Show ();  Show group of buttons. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void Streamer",MatchSource.WIKI,doc/master/classTGButtonGroup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButtonGroup.html
https://root.cern/doc/master/classTGButtonGroup.html:5131,Availability,down,down,5131,"eturns the id of the button. ;  ; virtual void Hide ();  Hide group of buttons. ;  ; virtual Int_t Insert (TGButton *button, int id=-1);  Inserts a button with the identifier id into the button group. ;  ; TClass * IsA () const override;  ; Bool_t IsBorderDrawn () const;  ; Bool_t IsEnabled () const;  ; Bool_t IsExclusive () const;  ; Bool_t IsRadioButtonExclusive () const;  ; virtual void Pressed (Int_t id);  ; virtual void ReleaseButtons ();  This slot is activated when one of the buttons in the exclusive group emits the Pressed() signal. ;  ; virtual void Released (Int_t id);  ; virtual void Remove (TGButton *button);  Removes a button from the button group. ;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save a button group widget as a C++ statement(s) on output stream out. ;  ; virtual void SetBorderDrawn (Bool_t enable=kTRUE);  Makes border to be visible/invisible. ;  ; virtual void SetButton (Int_t id, Bool_t down=kTRUE);  Sets the button with id to be on/down, and if this is an exclusive group, all other button in the group to be off/up. ;  ; virtual void SetExclusive (Bool_t flag=kTRUE);  Sets the button group to be exclusive if enable is kTRUE, or to be non-exclusive if enable is kFALSE. ;  ; virtual void SetLayoutHints (TGLayoutHints *l, TGButton *button=nullptr);  Set layout hints for the specified button or if button=0 for all buttons. ;  ; virtual void SetRadioButtonExclusive (Bool_t flag=kTRUE);  If enable is kTRUE, this button group will treat radio buttons as mutually exclusive, and other buttons according to IsExclusive(). ;  ; virtual void SetState (Bool_t state=kTRUE);  Sets the state of all the buttons in the group to enable or disable. ;  ; void SetTitle (const char *title) override;  Set or change title. ;  ; void SetTitle (TGString *title) override;  Set or change title. ;  ; virtual void Show ();  Show group of buttons. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void Streamer",MatchSource.WIKI,doc/master/classTGButtonGroup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButtonGroup.html
https://root.cern/doc/master/classTGButtonGroup.html:20779,Availability,error,error,20779,"="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTGButtonGroup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButtonGroup.html
https://root.cern/doc/master/classTGButtonGroup.html:20868,Availability,error,error,20868," object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual ",MatchSource.WIKI,doc/master/classTGButtonGroup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButtonGroup.html
https://root.cern/doc/master/classTGButtonGroup.html:21023,Availability,error,error,21023,"etup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; Bool_t HasInconsistentHash () const;  Return true is ",MatchSource.WIKI,doc/master/classTGButtonGroup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButtonGroup.html
https://root.cern/doc/master/classTGButtonGroup.html:21320,Availability,error,error,21320,"ject using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object in",MatchSource.WIKI,doc/master/classTGButtonGroup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButtonGroup.html
https://root.cern/doc/master/classTGButtonGroup.html:24863,Availability,error,error,24863,"sz);  ; void * operator new (size_t sz, void *vp);  ; void * operator new[] (size_t sz);  ; void * operator new[] (size_t sz, void *vp);  ; TObject & operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Paint (Option_t *option="""");  This method must be overridden if a class wants to paint itself. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class s",MatchSource.WIKI,doc/master/classTGButtonGroup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButtonGroup.html
https://root.cern/doc/master/classTGButtonGroup.html:33875,Availability,mask,mask,33875,"xt;  title text ;  ; Int_t fTitlePos;  OPTION={GetMethod=""GetTitlePos"";SetMethod=""SetTitlePos"";Items=(-1=""Left"",0=""Center"",1=""Right"")} ;  ;  Protected Attributes inherited from TGCompositeFrame; Bool_t fLayoutBroken;  no layout manager is used ;  ; TGLayoutManager * fLayoutManager;  layout manager ;  ; TList * fList;  container of frame elements ;  ; Bool_t fMapSubwindows;  kTRUE - map subwindows ;  ; Int_t fMustCleanup;  cleanup mode (see EFrameCleanup) ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions;  TGButtonGroup (const TGButtonGroup &)=delete;  ; TGButtonGroup & operator= (const TGButtonGroup &)=delete;  . Friends; class TGButton;  . Additional Inherited Members;  Public Types inherited from TGGroupFrame; enum  ETitlePos { kLeft = -1; ,",MatchSource.WIKI,doc/master/classTGButtonGroup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButtonGroup.html
https://root.cern/doc/master/classTGButtonGroup.html:46044,Availability,down,down,46044,"in the exclusive group emits the Pressed() signal. ; Definition at line 523 of file TGButtonGroup.cxx. ◆ Released(). virtual void TGButtonGroup::Released ; (; Int_t ; id). inlinevirtual . Definition at line 57 of file TGButtonGroup.h. ◆ Remove(). void TGButtonGroup::Remove ; (; TGButton * ; button). virtual . Removes a button from the button group. ; Definition at line 411 of file TGButtonGroup.cxx. ◆ SavePrimitive(). void TGButtonGroup::SavePrimitive ; (; std::ostream & ; out, . Option_t * ; option = """" . ). overridevirtual . Save a button group widget as a C++ statement(s) on output stream out. ; Reimplemented from TObject.; Reimplemented in TGVButtonGroup, and TGHButtonGroup.; Definition at line 619 of file TGButtonGroup.cxx. ◆ SetBorderDrawn(). void TGButtonGroup::SetBorderDrawn ; (; Bool_t ; enable = kTRUE). virtual . Makes border to be visible/invisible. ; Definition at line 283 of file TGButtonGroup.cxx. ◆ SetButton(). void TGButtonGroup::SetButton ; (; Int_t ; id, . Bool_t ; down = kTRUE . ). virtual . Sets the button with id to be on/down, and if this is an exclusive group, all other button in the group to be off/up. ; Definition at line 344 of file TGButtonGroup.cxx. ◆ SetExclusive(). void TGButtonGroup::SetExclusive ; (; Bool_t ; enable = kTRUE). virtual . Sets the button group to be exclusive if enable is kTRUE, or to be non-exclusive if enable is kFALSE. ; An exclusive button group switches off all other toggle buttons when one is switched on. This is ideal for groups of radio-buttons A non-exclusive group allow many buttons to be switched on at the same time. The default setting is kFALSE. ; Definition at line 299 of file TGButtonGroup.cxx. ◆ SetLayoutHints(). void TGButtonGroup::SetLayoutHints ; (; TGLayoutHints * ; l, . TGButton * ; button = nullptr . ). virtual . Set layout hints for the specified button or if button=0 for all buttons. ; Definition at line 603 of file TGButtonGroup.cxx. ◆ SetRadioButtonExclusive(). void TGButtonGroup::SetRadioButton",MatchSource.WIKI,doc/master/classTGButtonGroup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButtonGroup.html
https://root.cern/doc/master/classTGButtonGroup.html:46105,Availability,down,down,46105,"TGButtonGroup.cxx. ◆ Released(). virtual void TGButtonGroup::Released ; (; Int_t ; id). inlinevirtual . Definition at line 57 of file TGButtonGroup.h. ◆ Remove(). void TGButtonGroup::Remove ; (; TGButton * ; button). virtual . Removes a button from the button group. ; Definition at line 411 of file TGButtonGroup.cxx. ◆ SavePrimitive(). void TGButtonGroup::SavePrimitive ; (; std::ostream & ; out, . Option_t * ; option = """" . ). overridevirtual . Save a button group widget as a C++ statement(s) on output stream out. ; Reimplemented from TObject.; Reimplemented in TGVButtonGroup, and TGHButtonGroup.; Definition at line 619 of file TGButtonGroup.cxx. ◆ SetBorderDrawn(). void TGButtonGroup::SetBorderDrawn ; (; Bool_t ; enable = kTRUE). virtual . Makes border to be visible/invisible. ; Definition at line 283 of file TGButtonGroup.cxx. ◆ SetButton(). void TGButtonGroup::SetButton ; (; Int_t ; id, . Bool_t ; down = kTRUE . ). virtual . Sets the button with id to be on/down, and if this is an exclusive group, all other button in the group to be off/up. ; Definition at line 344 of file TGButtonGroup.cxx. ◆ SetExclusive(). void TGButtonGroup::SetExclusive ; (; Bool_t ; enable = kTRUE). virtual . Sets the button group to be exclusive if enable is kTRUE, or to be non-exclusive if enable is kFALSE. ; An exclusive button group switches off all other toggle buttons when one is switched on. This is ideal for groups of radio-buttons A non-exclusive group allow many buttons to be switched on at the same time. The default setting is kFALSE. ; Definition at line 299 of file TGButtonGroup.cxx. ◆ SetLayoutHints(). void TGButtonGroup::SetLayoutHints ; (; TGLayoutHints * ; l, . TGButton * ; button = nullptr . ). virtual . Set layout hints for the specified button or if button=0 for all buttons. ; Definition at line 603 of file TGButtonGroup.cxx. ◆ SetRadioButtonExclusive(). void TGButtonGroup::SetRadioButtonExclusive ; (; Bool_t ; enable = kTRUE). virtual . If enable is kTRUE, this button g",MatchSource.WIKI,doc/master/classTGButtonGroup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButtonGroup.html
https://root.cern/doc/master/classTGButtonGroup.html:847,Deployability,toggle,toggle,847,". ROOT: TGButtonGroup Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; Private Member Functions |; Friends |; List of all members ; TGButtonGroup Class ReferenceGUI » Low level GUI widgets. ; Organizes TGButton widgets in a group. ; A button group widget makes it easier to deal with groups of buttons. A button in a button group is associated with a unique identifier. The button group emits a Clicked() signal with this identifier when the button is clicked. Thus, a button group is an ideal solution when you have several similar buttons and want to connect all their Clicked() signals, for example, to one slot.; An exclusive button group switches off all toggle buttons except the one that was clicked. A button group is by default non-exclusive. All radio buttons that are inserted, will be mutually exclusive even if the button group is non-exclusive.; There are two ways of using a button group:; The button group is a parent widget of a number of buttons, i.e. the button group is the parent argument in the button constructor. The buttons are assigned identifiers 1, 2, 3 etc. in the order they are created or you can specify button id in the button constructor. A TGButtonGroup can display a frame and a title because it inherits from TGGroupFrame.; Example:; // vertical frame without border and title; TGVButtonGroup *bg = new TGVButtonGroup(main_frame);; ; // create text button with id=1; TGTextButton *button1 = new TGTextButton(bg,""some text"");; ; // create another text button with id=2; TGTextButton *button2 = new TGTextButton(bg,""another text"");; ; // map all buttons; bg->Show();; TGButtonGroup::Showvirtual void Show()Show group of buttons.Definition TGButtonGroup.cxx:549; TGTextButtonYield an action as soon as it is clicked.Definition TGButton.h:142; TGVButtonGroupOrganizes TGButton widg",MatchSource.WIKI,doc/master/classTGButtonGroup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButtonGroup.html
https://root.cern/doc/master/classTGButtonGroup.html:2501,Deployability,release,released,2501,"ame without border and title; TGVButtonGroup *bg = new TGVButtonGroup(main_frame);; ; // create text button with id=1; TGTextButton *button1 = new TGTextButton(bg,""some text"");; ; // create another text button with id=2; TGTextButton *button2 = new TGTextButton(bg,""another text"");; ; // map all buttons; bg->Show();; TGButtonGroup::Showvirtual void Show()Show group of buttons.Definition TGButtonGroup.cxx:549; TGTextButtonYield an action as soon as it is clicked.Definition TGButton.h:142; TGVButtonGroupOrganizes TGButton widgets in a group with one vertical column.Definition TGButtonGroup.h:94; NOTE: there is no need to call AddFrame() since the buttons are automatically added with a default layout hint to their parent, i.e. the buttongroup. To override the default layout hints use the SetLayoutHints() method.; ButtonGroup Signals:. Pressed(Int_t id) --> is emitted when a button in the group is pressed down. The id argument is the button's identifier.; Released(Int_t id) --> is emitted when a button in the group is released. The id argument is the button's identifier.; Clicked(Int_t id) --> is emitted when a button in the group is clicked. The id argument is the button's identifier. . Definition at line 21 of file TGButtonGroup.h. Public Member Functions;  TGButtonGroup (const TGWindow *parent, UInt_t r, UInt_t c, Int_t s=0, Int_t h=0, const TString &title="""", GContext_t norm=GetDefaultGC()(), FontStruct_t font=GetDefaultFontStruct(), Pixel_t back=GetDefaultFrameBackground());  Constructor. ;  ;  TGButtonGroup (const TGWindow *parent=nullptr, const TString &title="""", UInt_t options=kChildFrame|kVerticalFrame, GContext_t norm=GetDefaultGC()(), FontStruct_t font=GetDefaultFontStruct(), Pixel_t back=GetDefaultFrameBackground());  Constructor. Layout 1 row or 1 column. ;  ;  ~TGButtonGroup () override;  Destructor, we do not delete the buttons. ;  ; virtual void ButtonClicked ();  This slot is activated when one of the buttons in the group emits the Clicked() signal. ;  ; ",MatchSource.WIKI,doc/master/classTGButtonGroup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButtonGroup.html
https://root.cern/doc/master/classTGButtonGroup.html:46487,Deployability,toggle,toggle,46487,"nGroup::SavePrimitive ; (; std::ostream & ; out, . Option_t * ; option = """" . ). overridevirtual . Save a button group widget as a C++ statement(s) on output stream out. ; Reimplemented from TObject.; Reimplemented in TGVButtonGroup, and TGHButtonGroup.; Definition at line 619 of file TGButtonGroup.cxx. ◆ SetBorderDrawn(). void TGButtonGroup::SetBorderDrawn ; (; Bool_t ; enable = kTRUE). virtual . Makes border to be visible/invisible. ; Definition at line 283 of file TGButtonGroup.cxx. ◆ SetButton(). void TGButtonGroup::SetButton ; (; Int_t ; id, . Bool_t ; down = kTRUE . ). virtual . Sets the button with id to be on/down, and if this is an exclusive group, all other button in the group to be off/up. ; Definition at line 344 of file TGButtonGroup.cxx. ◆ SetExclusive(). void TGButtonGroup::SetExclusive ; (; Bool_t ; enable = kTRUE). virtual . Sets the button group to be exclusive if enable is kTRUE, or to be non-exclusive if enable is kFALSE. ; An exclusive button group switches off all other toggle buttons when one is switched on. This is ideal for groups of radio-buttons A non-exclusive group allow many buttons to be switched on at the same time. The default setting is kFALSE. ; Definition at line 299 of file TGButtonGroup.cxx. ◆ SetLayoutHints(). void TGButtonGroup::SetLayoutHints ; (; TGLayoutHints * ; l, . TGButton * ; button = nullptr . ). virtual . Set layout hints for the specified button or if button=0 for all buttons. ; Definition at line 603 of file TGButtonGroup.cxx. ◆ SetRadioButtonExclusive(). void TGButtonGroup::SetRadioButtonExclusive ; (; Bool_t ; enable = kTRUE). virtual . If enable is kTRUE, this button group will treat radio buttons as mutually exclusive, and other buttons according to IsExclusive(). ; This function is called automatically whenever a TGRadioButton is inserted, so you should normally never have to call it. ; Definition at line 313 of file TGButtonGroup.cxx. ◆ SetState(). void TGButtonGroup::SetState ; (; Bool_t ; state = kTRUE). vir",MatchSource.WIKI,doc/master/classTGButtonGroup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButtonGroup.html
https://root.cern/doc/master/classTGButtonGroup.html:13886,Integrability,message,message,13886,"oid DeleteWindow ();  Delete window. ;  ; void DrawClass () const override;  Draw class inheritance tree of the class to which this object belongs. ;  ; TObject * DrawClone (Option_t *="""") const override;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void DrawCopy (Handle_t, Int_t, Int_t);  ; void Dump () const override;  Dump contents of object on stdout. ;  ; virtual Pixel_t GetBackground () const;  ; Int_t GetBorderWidth () const;  ; virtual TDNDData * GetDNDData (Atom_t);  ; virtual Int_t GetDragType () const;  Returns drag source type. ;  ; virtual Int_t GetDropType () const;  Returns drop target type. ;  ; UInt_t GetEventMask () const;  ; virtual Pixel_t GetForeground () const;  Return frame foreground color. ;  ; TGFrameElement * GetFrameElement () const;  ; UInt_t GetHeight () const;  ; UInt_t GetMaxHeight () const;  ; UInt_t GetMaxWidth () const;  ; UInt_t GetMinHeight () const;  ; UInt_t GetMinWidth () const;  ; virtual UInt_t GetOptions () const;  ; TGDimension GetSize () const;  ; UInt_t GetWidth () const;  ; Int_t GetX () const;  ; Int_t GetY () const;  ; virtual Bool_t HandleClientMessage (Event_t *event);  Handle a client message. ;  ; virtual Bool_t HandleColormapChange (Event_t *);  ; virtual Bool_t HandleConfigureNotify (Event_t *event);  This event is generated when the frame is resized. ;  ; virtual Bool_t HandleDNDDrop (TDNDData *);  ; virtual Atom_t HandleDNDEnter (Atom_t *);  ; virtual Bool_t HandleDNDFinished ();  ; virtual Bool_t HandleDNDLeave ();  ; virtual Atom_t HandleDNDPosition (Int_t, Int_t, Atom_t, Int_t, Int_t);  ; Bool_t HandleEvent (Event_t *event) override;  Handle all frame events. ;  ; virtual Bool_t HandleSelectionClear (Event_t *);  ; virtual Bool_t HandleSelectionRequest (Event_t *);  ; void Inspect () const override;  Dump contents of this object in a graphics canvas. ;  ; virtual Bool_t IsActive () const;  ; Bool_t IsDNDSource () const;  ; Bool_t IsDNDTarget () const;",MatchSource.WIKI,doc/master/classTGButtonGroup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButtonGroup.html
https://root.cern/doc/master/classTGButtonGroup.html:15878,Integrability,message,message,15878,"ow () override;  map window ;  ; void Move (Int_t x, Int_t y) override;  Move frame. ;  ; void MoveResize (Int_t x, Int_t y, UInt_t w=0, UInt_t h=0) override;  Move and/or resize the frame. ;  ; void Print (Option_t *option="""") const override;  Print window id. ;  ; virtual void ProcessedConfigure (Event_t *event);  ; virtual void ProcessedEvent (Event_t *event);  ; virtual void ReallyDelete ();  ; void RemoveInput (UInt_t emask);  Remove events specified in emask from the events the frame should handle. ;  ; void ReparentWindow (const TGWindow *p, Int_t x=0, Int_t y=0) override;  Reparent window, make p the new parent and position the window at position (x,y) in new parent. ;  ; virtual void Resize (TGDimension size);  Resize the frame. ;  ; void Resize (UInt_t w=0, UInt_t h=0) override;  Resize the frame. ;  ; void SaveUserColor (std::ostream &out, Option_t *);  Save a user color in a C++ macro file - used in SavePrimitive(). ;  ; virtual void SendMessage (const TGWindow *w, Longptr_t msg, Longptr_t parm1, Longptr_t parm2);  Send message (i.e. ;  ; void SetBackgroundColor (Pixel_t back) override;  Set background color (override from TGWindow base class). ;  ; void SetDNDSource (Bool_t onoff);  ; void SetDNDTarget (Bool_t onoff);  ; virtual void SetDragType (Int_t type);  SetDragType. ;  ; void SetDrawOption (Option_t *="""") override;  Set drawing option for object. ;  ; virtual void SetDropType (Int_t type);  SetDropType. ;  ; void SetEditable (Bool_t) override;  ; virtual void SetForegroundColor (Pixel_t);  ; void SetFrameElement (TGFrameElement *fe);  ; virtual void SetHeight (UInt_t h);  ; virtual void SetMaxHeight (UInt_t h);  ; virtual void SetMaxWidth (UInt_t w);  ; virtual void SetMinHeight (UInt_t h);  ; virtual void SetMinWidth (UInt_t w);  ; virtual void SetSize (const TGDimension &s);  ; virtual void SetWidth (UInt_t w);  ; virtual void SetX (Int_t x);  ; virtual void SetY (Int_t y);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; voi",MatchSource.WIKI,doc/master/classTGButtonGroup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButtonGroup.html
https://root.cern/doc/master/classTGButtonGroup.html:20785,Integrability,message,message,20785,"="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTGButtonGroup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButtonGroup.html
https://root.cern/doc/master/classTGButtonGroup.html:21326,Integrability,message,message,21326,"ject using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object in",MatchSource.WIKI,doc/master/classTGButtonGroup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButtonGroup.html
https://root.cern/doc/master/classTGButtonGroup.html:22216,Integrability,message,message,22216," an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessar",MatchSource.WIKI,doc/master/classTGButtonGroup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButtonGroup.html
https://root.cern/doc/master/classTGButtonGroup.html:24869,Integrability,message,message,24869,"sz);  ; void * operator new (size_t sz, void *vp);  ; void * operator new[] (size_t sz);  ; void * operator new[] (size_t sz, void *vp);  ; TObject & operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Paint (Option_t *option="""");  This method must be overridden if a class wants to paint itself. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class s",MatchSource.WIKI,doc/master/classTGButtonGroup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButtonGroup.html
https://root.cern/doc/master/classTGButtonGroup.html:25242,Integrability,message,message,25242," pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from class cls and all its base-classes. ;  ; Bool_t Connect (const char *signal, const char *receiver_class, void *receiver, const char *slot);  Non-static method is used to connect from the signal of this object to the receiver slot. ;  ; virtual void Connected (const char *);  ; virtual void Destroyed ();  ; Bool_t Disconnect (const char *signal=nullptr, voi",MatchSource.WIKI,doc/master/classTGButtonGroup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButtonGroup.html
https://root.cern/doc/master/classTGButtonGroup.html:1419,Modifiability,inherit,inherits,1419,"ets in a group. ; A button group widget makes it easier to deal with groups of buttons. A button in a button group is associated with a unique identifier. The button group emits a Clicked() signal with this identifier when the button is clicked. Thus, a button group is an ideal solution when you have several similar buttons and want to connect all their Clicked() signals, for example, to one slot.; An exclusive button group switches off all toggle buttons except the one that was clicked. A button group is by default non-exclusive. All radio buttons that are inserted, will be mutually exclusive even if the button group is non-exclusive.; There are two ways of using a button group:; The button group is a parent widget of a number of buttons, i.e. the button group is the parent argument in the button constructor. The buttons are assigned identifiers 1, 2, 3 etc. in the order they are created or you can specify button id in the button constructor. A TGButtonGroup can display a frame and a title because it inherits from TGGroupFrame.; Example:; // vertical frame without border and title; TGVButtonGroup *bg = new TGVButtonGroup(main_frame);; ; // create text button with id=1; TGTextButton *button1 = new TGTextButton(bg,""some text"");; ; // create another text button with id=2; TGTextButton *button2 = new TGTextButton(bg,""another text"");; ; // map all buttons; bg->Show();; TGButtonGroup::Showvirtual void Show()Show group of buttons.Definition TGButtonGroup.cxx:549; TGTextButtonYield an action as soon as it is clicked.Definition TGButton.h:142; TGVButtonGroupOrganizes TGButton widgets in a group with one vertical column.Definition TGButtonGroup.h:94; NOTE: there is no need to call AddFrame() since the buttons are automatically added with a default layout hint to their parent, i.e. the buttongroup. To override the default layout hints use the SetLayoutHints() method.; ButtonGroup Signals:. Pressed(Int_t id) --> is emitted when a button in the group is pressed down. The id argu",MatchSource.WIKI,doc/master/classTGButtonGroup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButtonGroup.html
https://root.cern/doc/master/classTGButtonGroup.html:6203,Modifiability,inherit,inherited,6203,"ton group to be exclusive if enable is kTRUE, or to be non-exclusive if enable is kFALSE. ;  ; virtual void SetLayoutHints (TGLayoutHints *l, TGButton *button=nullptr);  Set layout hints for the specified button or if button=0 for all buttons. ;  ; virtual void SetRadioButtonExclusive (Bool_t flag=kTRUE);  If enable is kTRUE, this button group will treat radio buttons as mutually exclusive, and other buttons according to IsExclusive(). ;  ; virtual void SetState (Bool_t state=kTRUE);  Sets the state of all the buttons in the group to enable or disable. ;  ; void SetTitle (const char *title) override;  Set or change title. ;  ; void SetTitle (TGString *title) override;  Set or change title. ;  ; virtual void Show ();  Show group of buttons. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGGroupFrame;  TGGroupFrame (const TGWindow *p, TGString *title, UInt_t options=kVerticalFrame, GContext_t norm=GetDefaultGC()(), FontStruct_t font=GetDefaultFontStruct(), Pixel_t back=GetDefaultFrameBackground());  Create a group frame. ;  ;  TGGroupFrame (const TGWindow *p=nullptr, const char *title=nullptr, UInt_t options=kVerticalFrame, GContext_t norm=GetDefaultGC()(), FontStruct_t font=GetDefaultFontStruct(), Pixel_t back=GetDefaultFrameBackground());  Create a group frame. ;  ;  ~TGGroupFrame () override;  Delete a group frame. ;  ; void DrawBorder () override;  Draw border of around the group frame. ;  ; TGDimension GetDefaultSize () const override;  Returns default size. ;  ; FontStruct_t GetFontStruct () const;  ; GContext_t GetNormGC () const;  ; const char * GetTitle () const override;  Returns title of object. ;  ; Int_t GetTitlePos () const;  ; Bool_t HasOwnFont () const;  Returns kTRUE if text attributes are unique, returns kFALSE if text attributes are shared (global). ;  ; TClass * IsA () const override;  ; virtual void Rename (co",MatchSource.WIKI,doc/master/classTGButtonGroup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButtonGroup.html
https://root.cern/doc/master/classTGButtonGroup.html:7958,Modifiability,inherit,inherited,7958,"le () const override;  Returns title of object. ;  ; Int_t GetTitlePos () const;  ; Bool_t HasOwnFont () const;  Returns kTRUE if text attributes are unique, returns kFALSE if text attributes are shared (global). ;  ; TClass * IsA () const override;  ; virtual void Rename (const char *title);  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save a group frame widget as a C++ statement(s) on output stream out. ;  ; virtual void SetTextColor (Pixel_t color, Bool_t local=kTRUE);  Changes text color. ;  ; virtual void SetTextFont (const char *fontName, Bool_t local=kTRUE);  Changes text font specified by name. ;  ; virtual void SetTextFont (FontStruct_t font, Bool_t local=kTRUE);  Changes text font. ;  ; virtual void SetTitlePos (ETitlePos pos=kLeft);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGCompositeFrame;  TGCompositeFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=0, Pixel_t back=GetDefaultFrameBackground());  Create a composite frame. ;  ;  TGCompositeFrame (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a frame using an externally created window. ;  ;  ~TGCompositeFrame () override;  Delete a composite frame. ;  ; virtual void AddFrame (TGFrame *f, TGLayoutHints *l=nullptr);  Add frame to the composite frame using the specified layout hints. ;  ; void ChangeOptions (UInt_t options) override;  Change composite frame options. Options is an OR of the EFrameTypes. ;  ; virtual void ChangeSubframesBackground (Pixel_t back);  Change background color for this frame and all subframes. ;  ; virtual void Cleanup ();  Cleanup and delete all objects contained in this composite frame. ;  ; virtual TGFrameElement * FindFrameElement (TGFrame *f) const;  Find frame-element holding frame f. ;  ; UInt_t GetDefaultHeight () const override;  ; UInt_t GetDefaultWidth () cons",MatchSource.WIKI,doc/master/classTGButtonGroup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButtonGroup.html
https://root.cern/doc/master/classTGButtonGroup.html:11948,Modifiability,inherit,inherited,11948,"(std::ostream &out, Option_t *option="""");  Auxiliary protected method used to save subframes. ;  ; void SetCleanup (Int_t mode=kLocalCleanup) override;  Turn on automatic cleanup of child frames in dtor. ;  ; void SetEditable (Bool_t on=kTRUE) override;  Switch ON/OFF edit mode. ;  ; void SetEditDisabled (UInt_t on=1) override;  Set edit disable flag for this frame and subframes. ;  ; void SetLayoutBroken (Bool_t on=kTRUE) override;  Set broken layout. No Layout method is called. ;  ; virtual void SetLayoutManager (TGLayoutManager *l);  Set the layout manager for the composite frame. ;  ; void SetMapSubwindows (Bool_t on) override;  ; virtual void ShowFrame (TGFrame *f);  Show sub frame. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual Bool_t TranslateCoordinates (TGFrame *child, Int_t x, Int_t y, Int_t &fx, Int_t &fy);  Translate coordinates to child frame. ;  ;  Public Member Functions inherited from TGFrame;  TGFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=0, Pixel_t back=GetDefaultFrameBackground());  Create a TGFrame object. Options is an OR of the EFrameTypes. ;  ;  TGFrame (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a frame using an externally created window. ;  ;  ~TGFrame () override;  Destructor. ;  ; virtual void Activate (Bool_t);  ; void AddInput (UInt_t emask);  Add events specified in the emask to the events the frame should handle. ;  ; virtual void ChangeBackground (Pixel_t back);  Change frame background color. ;  ; Bool_t Contains (Int_t x, Int_t y) const;  ; void Delete (Option_t *="""") override;  Delete this object. ;  ; virtual void DeleteWindow ();  Delete window. ;  ; void DrawClass () const override;  Draw class inheritance tree of the class to which this object belongs. ;  ; TObject * DrawClone (Option_t *="""") const override;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void DrawCopy (Handle_t, Int_t, Int_",MatchSource.WIKI,doc/master/classTGButtonGroup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButtonGroup.html
https://root.cern/doc/master/classTGButtonGroup.html:12762,Modifiability,inherit,inheritance,12762,"amerNVirtual_b);  ; virtual Bool_t TranslateCoordinates (TGFrame *child, Int_t x, Int_t y, Int_t &fx, Int_t &fy);  Translate coordinates to child frame. ;  ;  Public Member Functions inherited from TGFrame;  TGFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=0, Pixel_t back=GetDefaultFrameBackground());  Create a TGFrame object. Options is an OR of the EFrameTypes. ;  ;  TGFrame (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a frame using an externally created window. ;  ;  ~TGFrame () override;  Destructor. ;  ; virtual void Activate (Bool_t);  ; void AddInput (UInt_t emask);  Add events specified in the emask to the events the frame should handle. ;  ; virtual void ChangeBackground (Pixel_t back);  Change frame background color. ;  ; Bool_t Contains (Int_t x, Int_t y) const;  ; void Delete (Option_t *="""") override;  Delete this object. ;  ; virtual void DeleteWindow ();  Delete window. ;  ; void DrawClass () const override;  Draw class inheritance tree of the class to which this object belongs. ;  ; TObject * DrawClone (Option_t *="""") const override;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void DrawCopy (Handle_t, Int_t, Int_t);  ; void Dump () const override;  Dump contents of object on stdout. ;  ; virtual Pixel_t GetBackground () const;  ; Int_t GetBorderWidth () const;  ; virtual TDNDData * GetDNDData (Atom_t);  ; virtual Int_t GetDragType () const;  Returns drag source type. ;  ; virtual Int_t GetDropType () const;  Returns drop target type. ;  ; UInt_t GetEventMask () const;  ; virtual Pixel_t GetForeground () const;  Return frame foreground color. ;  ; TGFrameElement * GetFrameElement () const;  ; UInt_t GetHeight () const;  ; UInt_t GetMaxHeight () const;  ; UInt_t GetMaxWidth () const;  ; UInt_t GetMinHeight () const;  ; UInt_t GetMinWidth () const;  ; virtual UInt_t GetOptions () const;  ; TGDimension GetSize () const;  ; UInt_t GetWidth () const;  ",MatchSource.WIKI,doc/master/classTGButtonGroup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButtonGroup.html
https://root.cern/doc/master/classTGButtonGroup.html:16901,Modifiability,inherit,inherited,16901,"ser color in a C++ macro file - used in SavePrimitive(). ;  ; virtual void SendMessage (const TGWindow *w, Longptr_t msg, Longptr_t parm1, Longptr_t parm2);  Send message (i.e. ;  ; void SetBackgroundColor (Pixel_t back) override;  Set background color (override from TGWindow base class). ;  ; void SetDNDSource (Bool_t onoff);  ; void SetDNDTarget (Bool_t onoff);  ; virtual void SetDragType (Int_t type);  SetDragType. ;  ; void SetDrawOption (Option_t *="""") override;  Set drawing option for object. ;  ; virtual void SetDropType (Int_t type);  SetDropType. ;  ; void SetEditable (Bool_t) override;  ; virtual void SetForegroundColor (Pixel_t);  ; void SetFrameElement (TGFrameElement *fe);  ; virtual void SetHeight (UInt_t h);  ; virtual void SetMaxHeight (UInt_t h);  ; virtual void SetMaxWidth (UInt_t w);  ; virtual void SetMinHeight (UInt_t h);  ; virtual void SetMinWidth (UInt_t w);  ; virtual void SetSize (const TGDimension &s);  ; virtual void SetWidth (UInt_t w);  ; virtual void SetX (Int_t x);  ; virtual void SetY (Int_t y);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UnmapWindow () override;  unmap window ;  ;  Public Member Functions inherited from TGWindow;  TGWindow (const TGWindow *p=nullptr, Int_t x=0, Int_t y=0, UInt_t w=0, UInt_t h=0, UInt_t border=0, Int_t depth=0, UInt_t clss=0, void *visual=nullptr, SetWindowAttributes_t *attr=nullptr, UInt_t wtype=0);  Create a new window. ;  ;  TGWindow (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a copy of a window. ;  ;  ~TGWindow () override;  Window destructor. Unregisters the window. ;  ; virtual void DestroySubwindows ();  destroy sub windows ;  ; virtual void DestroyWindow ();  destroy window ;  ; virtual UInt_t GetEditDisabled () const;  ; virtual const TGWindow * GetMainFrame () const;  Returns top level main frame. ;  ; const char * GetName () const override;  Return unique name, used in SavePrimitive methods. ;  ; const TGWindow * GetParent () const;  ; v",MatchSource.WIKI,doc/master/classTGButtonGroup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButtonGroup.html
https://root.cern/doc/master/classTGButtonGroup.html:18683,Modifiability,inherit,inherited,18683,"rent () const;  ; virtual Bool_t HandleExpose (Event_t *event);  ; virtual Bool_t HandleIdleEvent (TGIdleHandler *);  ; Bool_t HandleTimer (TTimer *) override;  Execute action in response of a timer timing out. ;  ; virtual void IconifyWindow ();  iconify window ;  ; TClass * IsA () const override;  ; virtual Bool_t IsMapped ();  Returns kTRUE if window is mapped on screen, kFALSE otherwise. ;  ; virtual void LowerWindow ();  lower window ;  ; void Print (Option_t *option="""") const override;  Print window id. ;  ; virtual void RaiseWindow ();  raise window ;  ; virtual void RequestFocus ();  request focus ;  ; virtual void SetBackgroundPixmap (Pixmap_t pixmap);  set background pixmap ;  ; virtual void SetName (const char *name);  ; virtual void SetWindowName (const char *name=nullptr);  Set window name. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGObject;  TGObject ();  ;  TGObject (const TGObject &tgo);  ;  ~TGObject () override;  TGObject destructor. ;  ; TGClient * GetClient () const;  ; Handle_t GetId () const;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsEqual (const TObject *obj) const override;  Equal comparison (TGObjects are equal if they have the same window identifier). ;  ; void SaveAs (const char *filename="""", Option_t *option="""") const override;  Write this TGObject to a file using TImage, if filename's extension signals a valid TImage::EImageFileType, as defined by TImage::GetImageFileTypeFromFilename(). ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you d",MatchSource.WIKI,doc/master/classTGButtonGroup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButtonGroup.html
https://root.cern/doc/master/classTGButtonGroup.html:19418,Modifiability,inherit,inherited,19418,"al void SetName (const char *name);  ; virtual void SetWindowName (const char *name=nullptr);  Set window name. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGObject;  TGObject ();  ;  TGObject (const TGObject &tgo);  ;  ~TGObject () override;  TGObject destructor. ;  ; TGClient * GetClient () const;  ; Handle_t GetId () const;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsEqual (const TObject *obj) const override;  Equal comparison (TGObjects are equal if they have the same window identifier). ;  ; void SaveAs (const char *filename="""", Option_t *option="""") const override;  Write this TGObject to a file using TImage, if filename's extension signals a valid TImage::EImageFileType, as defined by TImage::GetImageFileTypeFromFilename(). ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,doc/master/classTGButtonGroup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButtonGroup.html
https://root.cern/doc/master/classTGButtonGroup.html:22314,Modifiability,inherit,inherits,22314,"r *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handl",MatchSource.WIKI,doc/master/classTGButtonGroup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButtonGroup.html
https://root.cern/doc/master/classTGButtonGroup.html:22431,Modifiability,inherit,inherits,22431," be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base implementation is no-op). ;  ; void Obsolete (const char *method, const char *asOfVe",MatchSource.WIKI,doc/master/classTGButtonGroup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButtonGroup.html
https://root.cern/doc/master/classTGButtonGroup.html:25549,Modifiability,inherit,inherited,25549,"f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from class cls and all its base-classes. ;  ; Bool_t Connect (const char *signal, const char *receiver_class, void *receiver, const char *slot);  Non-static method is used to connect from the signal of this object to the receiver slot. ;  ; virtual void Connected (const char *);  ; virtual void Destroyed ();  ; Bool_t Disconnect (const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal of this object from slot of receiver. ;  ; virtual void Disconnected (const char *);  ; void Emit (const char *signal);  Activate signal without args. ;  ; template<typename T > ; void Emit (const char *signal, const T &arg);  Activate signal with single paramet",MatchSource.WIKI,doc/master/classTGButtonGroup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButtonGroup.html
https://root.cern/doc/master/classTGButtonGroup.html:27711,Modifiability,inherit,inherited,27711,"istOfClassSignals () const;  Returns pointer to list of signals of this class. ;  ; TList * GetListOfConnections () const;  ; TList * GetListOfSignals () const;  ; virtual Bool_t HasConnection (const char *signal_name) const;  Return true if there is any object connected to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGGroupFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static FontStruct_t GetDefaultFontStruct ();  Return default font structure in use. ;  ; static const TGGC & GetDefaultGC ();  Return default graphics context in use. ;  ;  Static Public Member Functions inherited from TGCompositeFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetBckgndGC ();  Get background color graphics context. ;  ; static const TGGC & GetBlackGC ();  Get black graphics context. ;  ; static Pixel_t GetBlackPixel ();  Get black pixel value. ;  ; static Pixel_t GetDefault",MatchSource.WIKI,doc/master/classTGButtonGroup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButtonGroup.html
https://root.cern/doc/master/classTGButtonGroup.html:28099,Modifiability,inherit,inherited,28099,for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGGroupFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static FontStruct_t GetDefaultFontStruct ();  Return default font structure in use. ;  ; static const TGGC & GetDefaultGC ();  Return default graphics context in use. ;  ;  Static Public Member Functions inherited from TGCompositeFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetBckgndGC ();  Get background color graphics context. ;  ; static const TGGC & GetBlackGC ();  Get black graphics context. ;  ; static Pixel_t GetBlackPixel ();  Get black pixel value. ;  ; static Pixel_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get shadow color graphics context. ;  ; static const TGGC & GetWhiteGC ();  Get white graphics context. ;  ; static Pixel_t GetWhitePixel ();  Get white pixel value. ;  ;  Static Public Member Functions inherited from TGWindow; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Ver,MatchSource.WIKI,doc/master/classTGButtonGroup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButtonGroup.html
https://root.cern/doc/master/classTGButtonGroup.html:28319,Modifiability,inherit,inherited,28319,for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGGroupFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static FontStruct_t GetDefaultFontStruct ();  Return default font structure in use. ;  ; static const TGGC & GetDefaultGC ();  Return default graphics context in use. ;  ;  Static Public Member Functions inherited from TGCompositeFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetBckgndGC ();  Get background color graphics context. ;  ; static const TGGC & GetBlackGC ();  Get black graphics context. ;  ; static Pixel_t GetBlackPixel ();  Get black pixel value. ;  ; static Pixel_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get shadow color graphics context. ;  ; static const TGGC & GetWhiteGC ();  Get white graphics context. ;  ; static Pixel_t GetWhitePixel ();  Get white pixel value. ;  ;  Static Public Member Functions inherited from TGWindow; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Ver,MatchSource.WIKI,doc/master/classTGButtonGroup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButtonGroup.html
https://root.cern/doc/master/classTGButtonGroup.html:29205,Modifiability,inherit,inherited,29205,erited from TGFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetBckgndGC ();  Get background color graphics context. ;  ; static const TGGC & GetBlackGC ();  Get black graphics context. ;  ; static Pixel_t GetBlackPixel ();  Get black pixel value. ;  ; static Pixel_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get shadow color graphics context. ;  ; static const TGGC & GetWhiteGC ();  Get white graphics context. ;  ; static Pixel_t GetWhitePixel ();  Get white pixel value. ;  ;  Static Public Member Functions inherited from TGWindow; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetCounter ();  Return global window counter (total number of created windows). ;  ;  Static Public Member Functions inherited from TGObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true,MatchSource.WIKI,doc/master/classTGButtonGroup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButtonGroup.html
https://root.cern/doc/master/classTGButtonGroup.html:29515,Modifiability,inherit,inherited,29515,"_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get shadow color graphics context. ;  ; static const TGGC & GetWhiteGC ();  Get white graphics context. ;  ; static Pixel_t GetWhitePixel ();  Get white pixel value. ;  ;  Static Public Member Functions inherited from TGWindow; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetCounter ();  Return global window counter (total number of created windows). ;  ;  Static Public Member Functions inherited from TGObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This m",MatchSource.WIKI,doc/master/classTGButtonGroup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButtonGroup.html
https://root.cern/doc/master/classTGButtonGroup.html:29727,Modifiability,inherit,inherited,29727,"_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get shadow color graphics context. ;  ; static const TGGC & GetWhiteGC ();  Get white graphics context. ;  ; static Pixel_t GetWhitePixel ();  Get white pixel value. ;  ;  Static Public Member Functions inherited from TGWindow; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetCounter ();  Return global window counter (total number of created windows). ;  ;  Static Public Member Functions inherited from TGObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This m",MatchSource.WIKI,doc/master/classTGButtonGroup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButtonGroup.html
https://root.cern/doc/master/classTGButtonGroup.html:30245,Modifiability,inherit,inherited,30245," Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetCounter ();  Return global window counter (total number of created windows). ;  ;  Static Public Member Functions inherited from TGObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullpt",MatchSource.WIKI,doc/master/classTGButtonGroup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButtonGroup.html
https://root.cern/doc/master/classTGButtonGroup.html:31535,Modifiability,inherit,inherited,31535,"on_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Protected Member Functions; void DoRedraw () override;  Redraw the group frame. ;  ; void Init ();  Default init. ;  ;  Protected Member Functions inherited from TGGroupFrame; void DoRedraw () override;  Redraw the group frame. ;  ;  Protected Member Functions inherited from TGFrame; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member F",MatchSource.WIKI,doc/master/classTGButtonGroup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButtonGroup.html
https://root.cern/doc/master/classTGButtonGroup.html:31649,Modifiability,inherit,inherited,31649,"har *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Protected Member Functions; void DoRedraw () override;  Redraw the group frame. ;  ; void Init ();  Default init. ;  ;  Protected Member Functions inherited from TGGroupFrame; void DoRedraw () override;  Redraw the group frame. ;  ;  Protected Member Functions inherited from TGFrame; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  . Protected Attributes; Bool_t fDrawBorder;  kTRUE if border a",MatchSource.WIKI,doc/master/classTGButtonGroup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButtonGroup.html
https://root.cern/doc/master/classTGButtonGroup.html:32092,Modifiability,inherit,inherited,32092,"nst char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Protected Member Functions; void DoRedraw () override;  Redraw the group frame. ;  ; void Init ();  Default init. ;  ;  Protected Member Functions inherited from TGGroupFrame; void DoRedraw () override;  Redraw the group frame. ;  ;  Protected Member Functions inherited from TGFrame; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  . Protected Attributes; Bool_t fDrawBorder;  kTRUE if border and title are drawn ;  ; Bool_t fExclGroup;  kTRUE if group is exclusive ;  ; TMap * fMapOfButtons;  map of button/id pairs in this group ;  ; Bool_t fRadioExcl;  kTRUE if radio buttons are exclusive ;  ; Bool_t fState;  kTRUE if group is enabled ;  ;  Protected Attributes inherited from TGGroupFrame; FontStruct_t fFontStruct;  title fontstruct ;  ; Bool_t fHasOwnFont;  kTRUE - font defined locally, kFALSE - globally ;  ; GContext_t fNormGC;  title graphics context ;  ; TGString * fText;  title text ;  ; Int_t fTitlePos;  OPTION={GetMethod=""GetTitlePos"";SetMethod=""SetTitleP",MatchSource.WIKI,doc/master/classTGButtonGroup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButtonGroup.html
https://root.cern/doc/master/classTGButtonGroup.html:32256,Modifiability,inherit,inherited,32256,"nst char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Protected Member Functions; void DoRedraw () override;  Redraw the group frame. ;  ; void Init ();  Default init. ;  ;  Protected Member Functions inherited from TGGroupFrame; void DoRedraw () override;  Redraw the group frame. ;  ;  Protected Member Functions inherited from TGFrame; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  . Protected Attributes; Bool_t fDrawBorder;  kTRUE if border and title are drawn ;  ; Bool_t fExclGroup;  kTRUE if group is exclusive ;  ; TMap * fMapOfButtons;  map of button/id pairs in this group ;  ; Bool_t fRadioExcl;  kTRUE if radio buttons are exclusive ;  ; Bool_t fState;  kTRUE if group is enabled ;  ;  Protected Attributes inherited from TGGroupFrame; FontStruct_t fFontStruct;  title fontstruct ;  ; Bool_t fHasOwnFont;  kTRUE - font defined locally, kFALSE - globally ;  ; GContext_t fNormGC;  title graphics context ;  ; TGString * fText;  title text ;  ; Int_t fTitlePos;  OPTION={GetMethod=""GetTitlePos"";SetMethod=""SetTitleP",MatchSource.WIKI,doc/master/classTGButtonGroup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButtonGroup.html
https://root.cern/doc/master/classTGButtonGroup.html:32356,Modifiability,inherit,inherited,32356,"nst char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Protected Member Functions; void DoRedraw () override;  Redraw the group frame. ;  ; void Init ();  Default init. ;  ;  Protected Member Functions inherited from TGGroupFrame; void DoRedraw () override;  Redraw the group frame. ;  ;  Protected Member Functions inherited from TGFrame; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  . Protected Attributes; Bool_t fDrawBorder;  kTRUE if border and title are drawn ;  ; Bool_t fExclGroup;  kTRUE if group is exclusive ;  ; TMap * fMapOfButtons;  map of button/id pairs in this group ;  ; Bool_t fRadioExcl;  kTRUE if radio buttons are exclusive ;  ; Bool_t fState;  kTRUE if group is enabled ;  ;  Protected Attributes inherited from TGGroupFrame; FontStruct_t fFontStruct;  title fontstruct ;  ; Bool_t fHasOwnFont;  kTRUE - font defined locally, kFALSE - globally ;  ; GContext_t fNormGC;  title graphics context ;  ; TGString * fText;  title text ;  ; Int_t fTitlePos;  OPTION={GetMethod=""GetTitlePos"";SetMethod=""SetTitleP",MatchSource.WIKI,doc/master/classTGButtonGroup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButtonGroup.html
https://root.cern/doc/master/classTGButtonGroup.html:32567,Modifiability,inherit,inherited,32567," () override;  Redraw the group frame. ;  ;  Protected Member Functions inherited from TGFrame; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  . Protected Attributes; Bool_t fDrawBorder;  kTRUE if border and title are drawn ;  ; Bool_t fExclGroup;  kTRUE if group is exclusive ;  ; TMap * fMapOfButtons;  map of button/id pairs in this group ;  ; Bool_t fRadioExcl;  kTRUE if radio buttons are exclusive ;  ; Bool_t fState;  kTRUE if group is enabled ;  ;  Protected Attributes inherited from TGGroupFrame; FontStruct_t fFontStruct;  title fontstruct ;  ; Bool_t fHasOwnFont;  kTRUE - font defined locally, kFALSE - globally ;  ; GContext_t fNormGC;  title graphics context ;  ; TGString * fText;  title text ;  ; Int_t fTitlePos;  OPTION={GetMethod=""GetTitlePos"";SetMethod=""SetTitlePos"";Items=(-1=""Left"",0=""Center"",1=""Right"")} ;  ;  Protected Attributes inherited from TGCompositeFrame; Bool_t fLayoutBroken;  no layout manager is used ;  ; TGLayoutManager * fLayoutManager;  layout manager ;  ; TList * fList;  container of frame elements ;  ; Bool_t fMapSubwindows;  kTRUE -",MatchSource.WIKI,doc/master/classTGButtonGroup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButtonGroup.html
https://root.cern/doc/master/classTGButtonGroup.html:32978,Modifiability,inherit,inherited,32978,"ted Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  . Protected Attributes; Bool_t fDrawBorder;  kTRUE if border and title are drawn ;  ; Bool_t fExclGroup;  kTRUE if group is exclusive ;  ; TMap * fMapOfButtons;  map of button/id pairs in this group ;  ; Bool_t fRadioExcl;  kTRUE if radio buttons are exclusive ;  ; Bool_t fState;  kTRUE if group is enabled ;  ;  Protected Attributes inherited from TGGroupFrame; FontStruct_t fFontStruct;  title fontstruct ;  ; Bool_t fHasOwnFont;  kTRUE - font defined locally, kFALSE - globally ;  ; GContext_t fNormGC;  title graphics context ;  ; TGString * fText;  title text ;  ; Int_t fTitlePos;  OPTION={GetMethod=""GetTitlePos"";SetMethod=""SetTitlePos"";Items=(-1=""Left"",0=""Center"",1=""Right"")} ;  ;  Protected Attributes inherited from TGCompositeFrame; Bool_t fLayoutBroken;  no layout manager is used ;  ; TGLayoutManager * fLayoutManager;  layout manager ;  ; TList * fList;  container of frame elements ;  ; Bool_t fMapSubwindows;  kTRUE - map subwindows ;  ; Int_t fMustCleanup;  cleanup mode (see EFrameCleanup) ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  f",MatchSource.WIKI,doc/master/classTGButtonGroup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButtonGroup.html
https://root.cern/doc/master/classTGButtonGroup.html:33355,Modifiability,inherit,inherited,33355,"ted Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  . Protected Attributes; Bool_t fDrawBorder;  kTRUE if border and title are drawn ;  ; Bool_t fExclGroup;  kTRUE if group is exclusive ;  ; TMap * fMapOfButtons;  map of button/id pairs in this group ;  ; Bool_t fRadioExcl;  kTRUE if radio buttons are exclusive ;  ; Bool_t fState;  kTRUE if group is enabled ;  ;  Protected Attributes inherited from TGGroupFrame; FontStruct_t fFontStruct;  title fontstruct ;  ; Bool_t fHasOwnFont;  kTRUE - font defined locally, kFALSE - globally ;  ; GContext_t fNormGC;  title graphics context ;  ; TGString * fText;  title text ;  ; Int_t fTitlePos;  OPTION={GetMethod=""GetTitlePos"";SetMethod=""SetTitlePos"";Items=(-1=""Left"",0=""Center"",1=""Right"")} ;  ;  Protected Attributes inherited from TGCompositeFrame; Bool_t fLayoutBroken;  no layout manager is used ;  ; TGLayoutManager * fLayoutManager;  layout manager ;  ; TList * fList;  container of frame elements ;  ; Bool_t fMapSubwindows;  kTRUE - map subwindows ;  ; Int_t fMustCleanup;  cleanup mode (see EFrameCleanup) ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  f",MatchSource.WIKI,doc/master/classTGButtonGroup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButtonGroup.html
https://root.cern/doc/master/classTGButtonGroup.html:33679,Modifiability,inherit,inherited,33679,"ted Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  . Protected Attributes; Bool_t fDrawBorder;  kTRUE if border and title are drawn ;  ; Bool_t fExclGroup;  kTRUE if group is exclusive ;  ; TMap * fMapOfButtons;  map of button/id pairs in this group ;  ; Bool_t fRadioExcl;  kTRUE if radio buttons are exclusive ;  ; Bool_t fState;  kTRUE if group is enabled ;  ;  Protected Attributes inherited from TGGroupFrame; FontStruct_t fFontStruct;  title fontstruct ;  ; Bool_t fHasOwnFont;  kTRUE - font defined locally, kFALSE - globally ;  ; GContext_t fNormGC;  title graphics context ;  ; TGString * fText;  title text ;  ; Int_t fTitlePos;  OPTION={GetMethod=""GetTitlePos"";SetMethod=""SetTitlePos"";Items=(-1=""Left"",0=""Center"",1=""Right"")} ;  ;  Protected Attributes inherited from TGCompositeFrame; Bool_t fLayoutBroken;  no layout manager is used ;  ; TGLayoutManager * fLayoutManager;  layout manager ;  ; TList * fList;  container of frame elements ;  ; Bool_t fMapSubwindows;  kTRUE - map subwindows ;  ; Int_t fMustCleanup;  cleanup mode (see EFrameCleanup) ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  f",MatchSource.WIKI,doc/master/classTGButtonGroup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButtonGroup.html
https://root.cern/doc/master/classTGButtonGroup.html:34311,Modifiability,inherit,inherited,34311,"xt;  title text ;  ; Int_t fTitlePos;  OPTION={GetMethod=""GetTitlePos"";SetMethod=""SetTitlePos"";Items=(-1=""Left"",0=""Center"",1=""Right"")} ;  ;  Protected Attributes inherited from TGCompositeFrame; Bool_t fLayoutBroken;  no layout manager is used ;  ; TGLayoutManager * fLayoutManager;  layout manager ;  ; TList * fList;  container of frame elements ;  ; Bool_t fMapSubwindows;  kTRUE - map subwindows ;  ; Int_t fMustCleanup;  cleanup mode (see EFrameCleanup) ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions;  TGButtonGroup (const TGButtonGroup &)=delete;  ; TGButtonGroup & operator= (const TGButtonGroup &)=delete;  . Friends; class TGButton;  . Additional Inherited Members;  Public Types inherited from TGGroupFrame; enum  ETitlePos { kLeft = -1; ,",MatchSource.WIKI,doc/master/classTGButtonGroup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButtonGroup.html
https://root.cern/doc/master/classTGButtonGroup.html:34588,Modifiability,inherit,inherited,34588,"eanup;  cleanup mode (see EFrameCleanup) ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions;  TGButtonGroup (const TGButtonGroup &)=delete;  ; TGButtonGroup & operator= (const TGButtonGroup &)=delete;  . Friends; class TGButton;  . Additional Inherited Members;  Public Types inherited from TGGroupFrame; enum  ETitlePos { kLeft = -1; , kCenter = 0; , kRight = 1; };  ;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1",MatchSource.WIKI,doc/master/classTGButtonGroup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButtonGroup.html
https://root.cern/doc/master/classTGButtonGroup.html:34740,Modifiability,inherit,inherited,34740,"DNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions;  TGButtonGroup (const TGButtonGroup &)=delete;  ; TGButtonGroup & operator= (const TGButtonGroup &)=delete;  . Friends; class TGButton;  . Additional Inherited Members;  Public Types inherited from TGGroupFrame; enum  ETitlePos { kLeft = -1; , kCenter = 0; , kRight = 1; };  ;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDele",MatchSource.WIKI,doc/master/classTGButtonGroup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButtonGroup.html
https://root.cern/doc/master/classTGButtonGroup.html:35133,Modifiability,inherit,inherited,35133,"building"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions;  TGButtonGroup (const TGButtonGroup &)=delete;  ; TGButtonGroup & operator= (const TGButtonGroup &)=delete;  . Friends; class TGButton;  . Additional Inherited Members;  Public Types inherited from TGGroupFrame; enum  ETitlePos { kLeft = -1; , kCenter = 0; , kRight = 1; };  ;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protec",MatchSource.WIKI,doc/master/classTGButtonGroup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButtonGroup.html
https://root.cern/doc/master/classTGButtonGroup.html:35241,Modifiability,inherit,inherited,35241,"building"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions;  TGButtonGroup (const TGButtonGroup &)=delete;  ; TGButtonGroup & operator= (const TGButtonGroup &)=delete;  . Friends; class TGButton;  . Additional Inherited Members;  Public Types inherited from TGGroupFrame; enum  ETitlePos { kLeft = -1; , kCenter = 0; , kRight = 1; };  ;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protec",MatchSource.WIKI,doc/master/classTGButtonGroup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButtonGroup.html
https://root.cern/doc/master/classTGButtonGroup.html:35748,Modifiability,inherit,inherited,35748," list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions;  TGButtonGroup (const TGButtonGroup &)=delete;  ; TGButtonGroup & operator= (const TGButtonGroup &)=delete;  . Friends; class TGButton;  . Additional Inherited Members;  Public Types inherited from TGGroupFrame; enum  ETitlePos { kLeft = -1; , kCenter = 0; , kRight = 1; };  ;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TCla",MatchSource.WIKI,doc/master/classTGButtonGroup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButtonGroup.html
https://root.cern/doc/master/classTGButtonGroup.html:36389,Modifiability,inherit,inherited,36389,"t = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sen",MatchSource.WIKI,doc/master/classTGButtonGroup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButtonGroup.html
https://root.cern/doc/master/classTGButtonGroup.html:36484,Modifiability,inherit,inherited,36484,"t = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sen",MatchSource.WIKI,doc/master/classTGButtonGroup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButtonGroup.html
https://root.cern/doc/master/classTGButtonGroup.html:36590,Modifiability,inherit,inherited,36590,"t = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sen",MatchSource.WIKI,doc/master/classTGButtonGroup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButtonGroup.html
https://root.cern/doc/master/classTGButtonGroup.html:36716,Modifiability,inherit,inherited,36716,"; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGGroupFrame; static const TGFont * fgDefaultFont = nullptr;  ; static const TGGC * fgDefaultGC = nullptr;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr",MatchSource.WIKI,doc/master/classTGButtonGroup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButtonGroup.html
https://root.cern/doc/master/classTGButtonGroup.html:37572,Modifiability,inherit,inherited,37572,"ectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGGroupFrame; static const TGFont * fgDefaultFont = nullptr;  ; static const TGGC * fgDefaultGC = nullptr;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGButtonGroup.h>. Inheritance diagram for TGButtonGroup:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGButtonGroup() [1/3]. TGButtonGroup::TGButtonGroup ; (; const TGButtonGroup & ; ). privatedelete . ◆ TGButtonGroup() [2/3]. TGButtonGroup::TGButtonGroup ; (; const TGWindow * ; parent =",MatchSource.WIKI,doc/master/classTGButtonGroup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButtonGroup.html
https://root.cern/doc/master/classTGButtonGroup.html:37726,Modifiability,inherit,inherited,37726,"ectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGGroupFrame; static const TGFont * fgDefaultFont = nullptr;  ; static const TGGC * fgDefaultGC = nullptr;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGButtonGroup.h>. Inheritance diagram for TGButtonGroup:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGButtonGroup() [1/3]. TGButtonGroup::TGButtonGroup ; (; const TGButtonGroup & ; ). privatedelete . ◆ TGButtonGroup() [2/3]. TGButtonGroup::TGButtonGroup ; (; const TGWindow * ; parent =",MatchSource.WIKI,doc/master/classTGButtonGroup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButtonGroup.html
https://root.cern/doc/master/classTGButtonGroup.html:37840,Modifiability,inherit,inherited,37840,"ectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGGroupFrame; static const TGFont * fgDefaultFont = nullptr;  ; static const TGGC * fgDefaultGC = nullptr;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGButtonGroup.h>. Inheritance diagram for TGButtonGroup:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGButtonGroup() [1/3]. TGButtonGroup::TGButtonGroup ; (; const TGButtonGroup & ; ). privatedelete . ◆ TGButtonGroup() [2/3]. TGButtonGroup::TGButtonGroup ; (; const TGWindow * ; parent =",MatchSource.WIKI,doc/master/classTGButtonGroup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButtonGroup.html
https://root.cern/doc/master/classTGButtonGroup.html:38509,Modifiability,inherit,inherited,38509,"ectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGGroupFrame; static const TGFont * fgDefaultFont = nullptr;  ; static const TGGC * fgDefaultGC = nullptr;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGButtonGroup.h>. Inheritance diagram for TGButtonGroup:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGButtonGroup() [1/3]. TGButtonGroup::TGButtonGroup ; (; const TGButtonGroup & ; ). privatedelete . ◆ TGButtonGroup() [2/3]. TGButtonGroup::TGButtonGroup ; (; const TGWindow * ; parent =",MatchSource.WIKI,doc/master/classTGButtonGroup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButtonGroup.html
https://root.cern/doc/master/classTGButtonGroup.html:38641,Modifiability,inherit,inherited,38641,"ectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGGroupFrame; static const TGFont * fgDefaultFont = nullptr;  ; static const TGGC * fgDefaultGC = nullptr;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGButtonGroup.h>. Inheritance diagram for TGButtonGroup:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGButtonGroup() [1/3]. TGButtonGroup::TGButtonGroup ; (; const TGButtonGroup & ; ). privatedelete . ◆ TGButtonGroup() [2/3]. TGButtonGroup::TGButtonGroup ; (; const TGWindow * ; parent =",MatchSource.WIKI,doc/master/classTGButtonGroup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButtonGroup.html
https://root.cern/doc/master/classTGButtonGroup.html:18914,Security,hash,hash,18914,"n response of a timer timing out. ;  ; virtual void IconifyWindow ();  iconify window ;  ; TClass * IsA () const override;  ; virtual Bool_t IsMapped ();  Returns kTRUE if window is mapped on screen, kFALSE otherwise. ;  ; virtual void LowerWindow ();  lower window ;  ; void Print (Option_t *option="""") const override;  Print window id. ;  ; virtual void RaiseWindow ();  raise window ;  ; virtual void RequestFocus ();  request focus ;  ; virtual void SetBackgroundPixmap (Pixmap_t pixmap);  set background pixmap ;  ; virtual void SetName (const char *name);  ; virtual void SetWindowName (const char *name=nullptr);  Set window name. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGObject;  TGObject ();  ;  TGObject (const TGObject &tgo);  ;  ~TGObject () override;  TGObject destructor. ;  ; TGClient * GetClient () const;  ; Handle_t GetId () const;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsEqual (const TObject *obj) const override;  Equal comparison (TGObjects are equal if they have the same window identifier). ;  ; void SaveAs (const char *filename="""", Option_t *option="""") const override;  Write this TGObject to a file using TImage, if filename's extension signals a valid TImage::EImageFileType, as defined by TImage::GetImageFileTypeFromFilename(). ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse ob",MatchSource.WIKI,doc/master/classTGButtonGroup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGButtonGroup.html
https://root.cern/doc/master/classTGCanvas.html:14037,Availability,error,error,14037,"="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTGCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCanvas.html
https://root.cern/doc/master/classTGCanvas.html:14126,Availability,error,error,14126," object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual ",MatchSource.WIKI,doc/master/classTGCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCanvas.html
https://root.cern/doc/master/classTGCanvas.html:14281,Availability,error,error,14281,"etup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the uniqu",MatchSource.WIKI,doc/master/classTGCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCanvas.html
https://root.cern/doc/master/classTGCanvas.html:14578,Availability,error,error,14578,"ject using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t ",MatchSource.WIKI,doc/master/classTGCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCanvas.html
https://root.cern/doc/master/classTGCanvas.html:18192,Availability,error,error,18192,"sz);  ; void * operator new (size_t sz, void *vp);  ; void * operator new[] (size_t sz);  ; void * operator new[] (size_t sz, void *vp);  ; TObject & operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Paint (Option_t *option="""");  This method must be overridden if a class wants to paint itself. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class s",MatchSource.WIKI,doc/master/classTGCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCanvas.html
https://root.cern/doc/master/classTGCanvas.html:24590,Availability,mask,mask,24590,"tatic Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Protected Attributes; TGHScrollBar * fHScrollbar;  horizontal scrollbar ;  ; Int_t fScrolling;  flag which scrolling modes are allowed ;  ; TGViewPort * fVport;  viewport through which we look at contents ;  ; TGVScrollBar * fVScrollbar;  vertical scrollbar ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions;  TGCanvas (const TGCanvas &)=delete;  ; TGCanvas & operator= (const TGCanvas &)=delete;  . Additional Inherited Members;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited ",MatchSource.WIKI,doc/master/classTGCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCanvas.html
https://root.cern/doc/master/classTGCanvas.html:3153,Integrability,message,message,3153,"GCanvas () override;  Delete canvas. ;  ; virtual void AddFrame (TGFrame *f, TGLayoutHints *l=nullptr);  Adding a frame to a canvas is actually adding the frame to the viewport container. ;  ; virtual void ClearViewPort ();  Clear view port and redraw content. ;  ; void DrawBorder () override;  Draw canvas border. ;  ; TGFrame * GetContainer () const;  ; TGDimension GetDefaultSize () const override;  std::cout << fWidth << ""x"" << fHeight << std::endl; ;  ; virtual Int_t GetHsbPosition () const;  Get position of horizontal scrollbar. ;  ; TGHScrollBar * GetHScrollbar () const;  ; Int_t GetScrolling () const;  ; TGViewPort * GetViewPort () const;  ; virtual Int_t GetVsbPosition () const;  Get position of vertical scrollbar. ;  ; TGVScrollBar * GetVScrollbar () const;  ; TClass * IsA () const override;  ; void Layout () override;  Create layout for canvas. ;  ; void MapSubwindows () override;  Map all canvas sub windows. ;  ; Bool_t ProcessMessage (Longptr_t msg, Longptr_t parm1, Longptr_t parm2) override;  Handle message generated by the canvas scrollbars. ;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save a canvas widget as a C++ statement(s) on output stream out. ;  ; virtual void SetContainer (TGFrame *f);  ; virtual void SetHsbPosition (Int_t newPos);  Set position of horizontal scrollbar. ;  ; void SetScrolling (Int_t scrolling);  Set scrolling policy. ;  ; virtual void SetVsbPosition (Int_t newPos);  Set position of vertical scrollbar. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGFrame;  TGFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=0, Pixel_t back=GetDefaultFrameBackground());  Create a TGFrame object. Options is an OR of the EFrameTypes. ;  ;  TGFrame (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a frame using an externally created window. ",MatchSource.WIKI,doc/master/classTGCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCanvas.html
https://root.cern/doc/master/classTGCanvas.html:6032,Integrability,message,message,6032,"longs. ;  ; TObject * DrawClone (Option_t *="""") const override;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void DrawCopy (Handle_t, Int_t, Int_t);  ; void Dump () const override;  Dump contents of object on stdout. ;  ; virtual Pixel_t GetBackground () const;  ; Int_t GetBorderWidth () const;  ; virtual UInt_t GetDefaultHeight () const;  ; virtual UInt_t GetDefaultWidth () const;  ; virtual TDNDData * GetDNDData (Atom_t);  ; virtual Int_t GetDragType () const;  Returns drag source type. ;  ; virtual Int_t GetDropType () const;  Returns drop target type. ;  ; UInt_t GetEventMask () const;  ; virtual Pixel_t GetForeground () const;  Return frame foreground color. ;  ; TGFrameElement * GetFrameElement () const;  ; virtual TGFrame * GetFrameFromPoint (Int_t x, Int_t y);  ; UInt_t GetHeight () const;  ; UInt_t GetMaxHeight () const;  ; UInt_t GetMaxWidth () const;  ; UInt_t GetMinHeight () const;  ; UInt_t GetMinWidth () const;  ; virtual UInt_t GetOptions () const;  ; TGDimension GetSize () const;  ; UInt_t GetWidth () const;  ; Int_t GetX () const;  ; Int_t GetY () const;  ; virtual Bool_t HandleButton (Event_t *);  ; virtual Bool_t HandleClientMessage (Event_t *event);  Handle a client message. ;  ; virtual Bool_t HandleColormapChange (Event_t *);  ; virtual Bool_t HandleConfigureNotify (Event_t *event);  This event is generated when the frame is resized. ;  ; virtual Bool_t HandleCrossing (Event_t *);  ; virtual Bool_t HandleDNDDrop (TDNDData *);  ; virtual Atom_t HandleDNDEnter (Atom_t *);  ; virtual Bool_t HandleDNDFinished ();  ; virtual Bool_t HandleDNDLeave ();  ; virtual Atom_t HandleDNDPosition (Int_t, Int_t, Atom_t, Int_t, Int_t);  ; virtual Bool_t HandleDoubleClick (Event_t *);  ; virtual Bool_t HandleDragDrop (TGFrame *, Int_t, Int_t, TGLayoutHints *);  ; virtual Bool_t HandleDragEnter (TGFrame *);  ; virtual Bool_t HandleDragLeave (TGFrame *);  ; virtual Bool_t HandleDragMotion (TGFrame *);  ; Boo",MatchSource.WIKI,doc/master/classTGCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCanvas.html
https://root.cern/doc/master/classTGCanvas.html:8777,Integrability,message,message,8777,"t_t h=0) override;  Move and/or resize the frame. ;  ; void Print (Option_t *option="""") const override;  Print window id. ;  ; virtual void ProcessedConfigure (Event_t *event);  ; virtual void ProcessedEvent (Event_t *event);  ; virtual void ReallyDelete ();  ; void RemoveInput (UInt_t emask);  Remove events specified in emask from the events the frame should handle. ;  ; void ReparentWindow (const TGWindow *p, Int_t x=0, Int_t y=0) override;  Reparent window, make p the new parent and position the window at position (x,y) in new parent. ;  ; virtual void Resize (TGDimension size);  Resize the frame. ;  ; void Resize (UInt_t w=0, UInt_t h=0) override;  Resize the frame. ;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save a frame widget as a C++ statement(s) on output stream out. ;  ; void SaveUserColor (std::ostream &out, Option_t *);  Save a user color in a C++ macro file - used in SavePrimitive(). ;  ; virtual void SendMessage (const TGWindow *w, Longptr_t msg, Longptr_t parm1, Longptr_t parm2);  Send message (i.e. ;  ; void SetBackgroundColor (Pixel_t back) override;  Set background color (override from TGWindow base class). ;  ; virtual void SetCleanup (Int_t=kLocalCleanup);  ; void SetDNDSource (Bool_t onoff);  ; void SetDNDTarget (Bool_t onoff);  ; virtual void SetDragType (Int_t type);  SetDragType. ;  ; void SetDrawOption (Option_t *="""") override;  Set drawing option for object. ;  ; virtual void SetDropType (Int_t type);  SetDropType. ;  ; void SetEditable (Bool_t) override;  ; virtual void SetForegroundColor (Pixel_t);  ; void SetFrameElement (TGFrameElement *fe);  ; virtual void SetHeight (UInt_t h);  ; virtual void SetLayoutBroken (Bool_t=kTRUE);  ; virtual void SetMaxHeight (UInt_t h);  ; virtual void SetMaxWidth (UInt_t w);  ; virtual void SetMinHeight (UInt_t h);  ; virtual void SetMinWidth (UInt_t w);  ; virtual void SetSize (const TGDimension &s);  ; virtual void SetWidth (UInt_t w);  ; virtual void SetX (Int_t x);  ; vi",MatchSource.WIKI,doc/master/classTGCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCanvas.html
https://root.cern/doc/master/classTGCanvas.html:14043,Integrability,message,message,14043,"="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTGCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCanvas.html
https://root.cern/doc/master/classTGCanvas.html:14584,Integrability,message,message,14584,"ject using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t ",MatchSource.WIKI,doc/master/classTGCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCanvas.html
https://root.cern/doc/master/classTGCanvas.html:15545,Integrability,message,message,15545,"t char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessar",MatchSource.WIKI,doc/master/classTGCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCanvas.html
https://root.cern/doc/master/classTGCanvas.html:18198,Integrability,message,message,18198,"sz);  ; void * operator new (size_t sz, void *vp);  ; void * operator new[] (size_t sz);  ; void * operator new[] (size_t sz, void *vp);  ; TObject & operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Paint (Option_t *option="""");  This method must be overridden if a class wants to paint itself. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class s",MatchSource.WIKI,doc/master/classTGCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCanvas.html
https://root.cern/doc/master/classTGCanvas.html:18571,Integrability,message,message,18571," pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from class cls and all its base-classes. ;  ; Bool_t Connect (const char *signal, const char *receiver_class, void *receiver, const char *slot);  Non-static method is used to connect from the signal of this object to the receiver slot. ;  ; virtual void Connected (const char *);  ; virtual void Destroyed ();  ; Bool_t Disconnect (const char *signal=nullptr, voi",MatchSource.WIKI,doc/master/classTGCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCanvas.html
https://root.cern/doc/master/classTGCanvas.html:33196,Integrability,message,message,33196,"ine 219 of file TGCanvas.h. ◆ IsA(). TClass * TGCanvas::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Reimplemented in TGListView, TGMdiMainFrame, and TRootEmbeddedCanvas.; Definition at line 239 of file TGCanvas.h. ◆ Layout(). void TGCanvas::Layout ; (; ). overridevirtual . Create layout for canvas. ; Depending on the size of the container we need to add the scrollbars. ; Reimplemented from TGFrame.; Reimplemented in TGListView, and TGMdiMainFrame.; Definition at line 2229 of file TGCanvas.cxx. ◆ MapSubwindows(). void TGCanvas::MapSubwindows ; (; ). overridevirtual . Map all canvas sub windows. ; Reimplemented from TGWindow.; Definition at line 2165 of file TGCanvas.cxx. ◆ operator=(). TGCanvas & TGCanvas::operator= ; (; const TGCanvas & ; ). privatedelete . ◆ ProcessMessage(). Bool_t TGCanvas::ProcessMessage ; (; Longptr_t ; msg, . Longptr_t ; parm1, . Longptr_t ; parm2 . ). overridevirtual . Handle message generated by the canvas scrollbars. ; Reimplemented from TGFrame.; Reimplemented in TGListView, and TGMdiMainFrame.; Definition at line 2344 of file TGCanvas.cxx. ◆ SavePrimitive(). void TGCanvas::SavePrimitive ; (; std::ostream & ; out, . Option_t * ; option = """" . ). overridevirtual . Save a canvas widget as a C++ statement(s) on output stream out. ; Reimplemented from TObject.; Reimplemented in TGListView, TGMdiMainFrame, and TRootEmbeddedCanvas.; Definition at line 2446 of file TGCanvas.cxx. ◆ SetContainer(). virtual void TGCanvas::SetContainer ; (; TGFrame * ; f). inlinevirtual . Reimplemented in TGListView.; Definition at line 222 of file TGCanvas.h. ◆ SetHsbPosition(). void TGCanvas::SetHsbPosition ; (; Int_t ; newPos). virtual . Set position of horizontal scrollbar. ; Definition at line 2394 of file TGCanvas.cxx. ◆ SetScrolling(). void TGCanvas::SetScrolling ; (; Int_t ; scrolling). Set scrolling policy. ; Use values defined by the enum: kCanvasNoScroll, kCanvasScrollHorizontal, kCanvasS",MatchSource.WIKI,doc/master/classTGCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCanvas.html
https://root.cern/doc/master/classTGCanvas.html:789,Modifiability,inherit,inherited,789,". ROOT: TGCanvas Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; Private Member Functions |; List of all members ; TGCanvas Class ReferenceGUI » Low level GUI widgets. ; A frame containing two scrollbars (a horizontal and a vertical) and a viewport. ; The viewport acts as the window through which we look at the contents of the container frame. ; Definition at line 192 of file TGCanvas.h. Public Types; enum  { kCanvasNoScroll = 0; , kCanvasScrollHorizontal = (1ULL << ( 0 )); , kCanvasScrollVertical = (1ULL << ( 1 )); , kCanvasScrollBoth = (kCanvasScrollHorizontal | kCanvasScrollVertical); };  ;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TGCanvas (const TGWindow *p=nullptr, UInt_t w=1, UInt_t",MatchSource.WIKI,doc/master/classTGCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCanvas.html
https://root.cern/doc/master/classTGCanvas.html:1296,Modifiability,inherit,inherited,1296," ; A frame containing two scrollbars (a horizontal and a vertical) and a viewport. ; The viewport acts as the window through which we look at the contents of the container frame. ; Definition at line 192 of file TGCanvas.h. Public Types; enum  { kCanvasNoScroll = 0; , kCanvasScrollHorizontal = (1ULL << ( 0 )); , kCanvasScrollVertical = (1ULL << ( 1 )); , kCanvasScrollBoth = (kCanvasScrollHorizontal | kCanvasScrollVertical); };  ;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TGCanvas (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=kSunkenFrame|kDoubleBorder, Pixel_t back=GetDefaultFrameBackground());  Create a canvas object. ;  ;  ~TGCanvas () override;  Delete canvas. ;  ; virtual void AddFrame (TGFrame *f, TGLayoutHints *l=nullptr);  Adding a frame to a canvas is actually adding the frame to the viewport container. ;  ; virtual void ClearViewP",MatchSource.WIKI,doc/master/classTGCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCanvas.html
https://root.cern/doc/master/classTGCanvas.html:3792,Modifiability,inherit,inherited,3792,"ition of vertical scrollbar. ;  ; TGVScrollBar * GetVScrollbar () const;  ; TClass * IsA () const override;  ; void Layout () override;  Create layout for canvas. ;  ; void MapSubwindows () override;  Map all canvas sub windows. ;  ; Bool_t ProcessMessage (Longptr_t msg, Longptr_t parm1, Longptr_t parm2) override;  Handle message generated by the canvas scrollbars. ;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save a canvas widget as a C++ statement(s) on output stream out. ;  ; virtual void SetContainer (TGFrame *f);  ; virtual void SetHsbPosition (Int_t newPos);  Set position of horizontal scrollbar. ;  ; void SetScrolling (Int_t scrolling);  Set scrolling policy. ;  ; virtual void SetVsbPosition (Int_t newPos);  Set position of vertical scrollbar. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGFrame;  TGFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=0, Pixel_t back=GetDefaultFrameBackground());  Create a TGFrame object. Options is an OR of the EFrameTypes. ;  ;  TGFrame (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a frame using an externally created window. ;  ;  ~TGFrame () override;  Destructor. ;  ; virtual void Activate (Bool_t);  ; void AddInput (UInt_t emask);  Add events specified in the emask to the events the frame should handle. ;  ; virtual void ChangeBackground (Pixel_t back);  Change frame background color. ;  ; virtual void ChangeOptions (UInt_t options);  Change frame options. Options is an OR of the EFrameTypes. ;  ; Bool_t Contains (Int_t x, Int_t y) const;  ; void Delete (Option_t *="""") override;  Delete this object. ;  ; virtual void DeleteWindow ();  Delete window. ;  ; void DrawClass () const override;  Draw class inheritance tree of the class to which this object belongs. ;  ; TObject * DrawClone (Option_t *="""") const overrid",MatchSource.WIKI,doc/master/classTGCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCanvas.html
https://root.cern/doc/master/classTGCanvas.html:4716,Modifiability,inherit,inheritance,4716,"tual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGFrame;  TGFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=0, Pixel_t back=GetDefaultFrameBackground());  Create a TGFrame object. Options is an OR of the EFrameTypes. ;  ;  TGFrame (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a frame using an externally created window. ;  ;  ~TGFrame () override;  Destructor. ;  ; virtual void Activate (Bool_t);  ; void AddInput (UInt_t emask);  Add events specified in the emask to the events the frame should handle. ;  ; virtual void ChangeBackground (Pixel_t back);  Change frame background color. ;  ; virtual void ChangeOptions (UInt_t options);  Change frame options. Options is an OR of the EFrameTypes. ;  ; Bool_t Contains (Int_t x, Int_t y) const;  ; void Delete (Option_t *="""") override;  Delete this object. ;  ; virtual void DeleteWindow ();  Delete window. ;  ; void DrawClass () const override;  Draw class inheritance tree of the class to which this object belongs. ;  ; TObject * DrawClone (Option_t *="""") const override;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void DrawCopy (Handle_t, Int_t, Int_t);  ; void Dump () const override;  Dump contents of object on stdout. ;  ; virtual Pixel_t GetBackground () const;  ; Int_t GetBorderWidth () const;  ; virtual UInt_t GetDefaultHeight () const;  ; virtual UInt_t GetDefaultWidth () const;  ; virtual TDNDData * GetDNDData (Atom_t);  ; virtual Int_t GetDragType () const;  Returns drag source type. ;  ; virtual Int_t GetDropType () const;  Returns drop target type. ;  ; UInt_t GetEventMask () const;  ; virtual Pixel_t GetForeground () const;  Return frame foreground color. ;  ; TGFrameElement * GetFrameElement () const;  ; virtual TGFrame * GetFrameFromPoint (Int_t x, Int_t y);  ; UInt_t GetHeight () const;  ; UInt_t GetMaxHeight () const;  ; UInt_t GetMaxWidth () const;  ; UInt_t GetMinHei",MatchSource.WIKI,doc/master/classTGCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCanvas.html
https://root.cern/doc/master/classTGCanvas.html:9975,Modifiability,inherit,inherited,9975,"  ; virtual void SetDragType (Int_t type);  SetDragType. ;  ; void SetDrawOption (Option_t *="""") override;  Set drawing option for object. ;  ; virtual void SetDropType (Int_t type);  SetDropType. ;  ; void SetEditable (Bool_t) override;  ; virtual void SetForegroundColor (Pixel_t);  ; void SetFrameElement (TGFrameElement *fe);  ; virtual void SetHeight (UInt_t h);  ; virtual void SetLayoutBroken (Bool_t=kTRUE);  ; virtual void SetMaxHeight (UInt_t h);  ; virtual void SetMaxWidth (UInt_t w);  ; virtual void SetMinHeight (UInt_t h);  ; virtual void SetMinWidth (UInt_t w);  ; virtual void SetSize (const TGDimension &s);  ; virtual void SetWidth (UInt_t w);  ; virtual void SetX (Int_t x);  ; virtual void SetY (Int_t y);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UnmapWindow () override;  unmap window ;  ;  Public Member Functions inherited from TGWindow;  TGWindow (const TGWindow *p=nullptr, Int_t x=0, Int_t y=0, UInt_t w=0, UInt_t h=0, UInt_t border=0, Int_t depth=0, UInt_t clss=0, void *visual=nullptr, SetWindowAttributes_t *attr=nullptr, UInt_t wtype=0);  Create a new window. ;  ;  TGWindow (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a copy of a window. ;  ;  ~TGWindow () override;  Window destructor. Unregisters the window. ;  ; virtual void DestroySubwindows ();  destroy sub windows ;  ; virtual void DestroyWindow ();  destroy window ;  ; virtual UInt_t GetEditDisabled () const;  ; virtual const TGWindow * GetMainFrame () const;  Returns top level main frame. ;  ; const char * GetName () const override;  Return unique name, used in SavePrimitive methods. ;  ; const TGWindow * GetParent () const;  ; virtual Bool_t HandleExpose (Event_t *event);  ; virtual Bool_t HandleIdleEvent (TGIdleHandler *);  ; Bool_t HandleTimer (TTimer *) override;  Execute action in response of a timer timing out. ;  ; virtual void IconifyWindow ();  iconify win",MatchSource.WIKI,doc/master/classTGCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCanvas.html
https://root.cern/doc/master/classTGCanvas.html:11941,Modifiability,inherit,inherited,11941,"nse of a timer timing out. ;  ; virtual void IconifyWindow ();  iconify window ;  ; TClass * IsA () const override;  ; virtual Bool_t IsMapped ();  Returns kTRUE if window is mapped on screen, kFALSE otherwise. ;  ; virtual Bool_t IsMapSubwindows () const;  ; virtual void LowerWindow ();  lower window ;  ; virtual Int_t MustCleanup () const;  ; void Print (Option_t *option="""") const override;  Print window id. ;  ; virtual void RaiseWindow ();  raise window ;  ; virtual void RequestFocus ();  request focus ;  ; virtual void SetBackgroundPixmap (Pixmap_t pixmap);  set background pixmap ;  ; virtual void SetEditDisabled (UInt_t on=kEditDisable);  ; virtual void SetMapSubwindows (Bool_t);  ; virtual void SetName (const char *name);  ; virtual void SetWindowName (const char *name=nullptr);  Set window name. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGObject;  TGObject ();  ;  TGObject (const TGObject &tgo);  ;  ~TGObject () override;  TGObject destructor. ;  ; TGClient * GetClient () const;  ; Handle_t GetId () const;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsEqual (const TObject *obj) const override;  Equal comparison (TGObjects are equal if they have the same window identifier). ;  ; void SaveAs (const char *filename="""", Option_t *option="""") const override;  Write this TGObject to a file using TImage, if filename's extension signals a valid TImage::EImageFileType, as defined by TImage::GetImageFileTypeFromFilename(). ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you d",MatchSource.WIKI,doc/master/classTGCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCanvas.html
https://root.cern/doc/master/classTGCanvas.html:12676,Modifiability,inherit,inherited,12676,"al void SetName (const char *name);  ; virtual void SetWindowName (const char *name=nullptr);  Set window name. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGObject;  TGObject ();  ;  TGObject (const TGObject &tgo);  ;  ~TGObject () override;  TGObject destructor. ;  ; TGClient * GetClient () const;  ; Handle_t GetId () const;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsEqual (const TObject *obj) const override;  Equal comparison (TGObjects are equal if they have the same window identifier). ;  ; void SaveAs (const char *filename="""", Option_t *option="""") const override;  Write this TGObject to a file using TImage, if filename's extension signals a valid TImage::EImageFileType, as defined by TImage::GetImageFileTypeFromFilename(). ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,doc/master/classTGCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCanvas.html
https://root.cern/doc/master/classTGCanvas.html:15643,Modifiability,inherit,inherits,15643,"* FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handl",MatchSource.WIKI,doc/master/classTGCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCanvas.html
https://root.cern/doc/master/classTGCanvas.html:15760,Modifiability,inherit,inherits,15760,"nst TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base implementation is no-op). ;  ; void Obsolete (const char *method, const char *asOfVe",MatchSource.WIKI,doc/master/classTGCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCanvas.html
https://root.cern/doc/master/classTGCanvas.html:18878,Modifiability,inherit,inherited,18878,"f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from class cls and all its base-classes. ;  ; Bool_t Connect (const char *signal, const char *receiver_class, void *receiver, const char *slot);  Non-static method is used to connect from the signal of this object to the receiver slot. ;  ; virtual void Connected (const char *);  ; virtual void Destroyed ();  ; Bool_t Disconnect (const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal of this object from slot of receiver. ;  ; virtual void Disconnected (const char *);  ; void Emit (const char *signal);  Activate signal without args. ;  ; template<typename T > ; void Emit (const char *signal, const T &arg);  Activate signal with single paramet",MatchSource.WIKI,doc/master/classTGCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCanvas.html
https://root.cern/doc/master/classTGCanvas.html:21040,Modifiability,inherit,inherited,21040,"* GetListOfClassSignals () const;  Returns pointer to list of signals of this class. ;  ; TList * GetListOfConnections () const;  ; TList * GetListOfSignals () const;  ; virtual Bool_t HasConnection (const char *signal_name) const;  Return true if there is any object connected to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetBckgndGC ();  Get background color graphics context. ;  ; static const TGGC & GetBlackGC ();  Get black graphics context. ;  ; static Pixel_t GetBlackPixel ();  Get black pixel value. ;  ; static Pixel_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get shadow color graphics context. ;  ; static const TGGC & GetWhiteGC ();  Get white graphics context. ;  ; static Pixel_t GetWhitePixel ();  Get white pixel value. ;  ;  Static Public Member Functions inherited from TGWindow; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Versio",MatchSource.WIKI,doc/master/classTGCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCanvas.html
https://root.cern/doc/master/classTGCanvas.html:21926,Modifiability,inherit,inherited,21926,erited from TGFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetBckgndGC ();  Get background color graphics context. ;  ; static const TGGC & GetBlackGC ();  Get black graphics context. ;  ; static Pixel_t GetBlackPixel ();  Get black pixel value. ;  ; static Pixel_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get shadow color graphics context. ;  ; static const TGGC & GetWhiteGC ();  Get white graphics context. ;  ; static Pixel_t GetWhitePixel ();  Get white pixel value. ;  ;  Static Public Member Functions inherited from TGWindow; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetCounter ();  Return global window counter (total number of created windows). ;  ;  Static Public Member Functions inherited from TGObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true,MatchSource.WIKI,doc/master/classTGCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCanvas.html
https://root.cern/doc/master/classTGCanvas.html:22236,Modifiability,inherit,inherited,22236,"_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get shadow color graphics context. ;  ; static const TGGC & GetWhiteGC ();  Get white graphics context. ;  ; static Pixel_t GetWhitePixel ();  Get white pixel value. ;  ;  Static Public Member Functions inherited from TGWindow; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetCounter ();  Return global window counter (total number of created windows). ;  ;  Static Public Member Functions inherited from TGObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This m",MatchSource.WIKI,doc/master/classTGCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCanvas.html
https://root.cern/doc/master/classTGCanvas.html:22448,Modifiability,inherit,inherited,22448,"_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get shadow color graphics context. ;  ; static const TGGC & GetWhiteGC ();  Get white graphics context. ;  ; static Pixel_t GetWhitePixel ();  Get white pixel value. ;  ;  Static Public Member Functions inherited from TGWindow; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetCounter ();  Return global window counter (total number of created windows). ;  ;  Static Public Member Functions inherited from TGObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This m",MatchSource.WIKI,doc/master/classTGCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCanvas.html
https://root.cern/doc/master/classTGCanvas.html:22966,Modifiability,inherit,inherited,22966," Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetCounter ();  Return global window counter (total number of created windows). ;  ;  Static Public Member Functions inherited from TGObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullpt",MatchSource.WIKI,doc/master/classTGCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCanvas.html
https://root.cern/doc/master/classTGCanvas.html:24394,Modifiability,inherit,inherited,24394,"ct (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Protected Attributes; TGHScrollBar * fHScrollbar;  horizontal scrollbar ;  ; Int_t fScrolling;  flag which scrolling modes are allowed ;  ; TGViewPort * fVport;  viewport through which we look at contents ;  ; TGVScrollBar * fVScrollbar;  vertical scrollbar ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObjec",MatchSource.WIKI,doc/master/classTGCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCanvas.html
https://root.cern/doc/master/classTGCanvas.html:25026,Modifiability,inherit,inherited,25026,"tatic Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Protected Attributes; TGHScrollBar * fHScrollbar;  horizontal scrollbar ;  ; Int_t fScrolling;  flag which scrolling modes are allowed ;  ; TGViewPort * fVport;  viewport through which we look at contents ;  ; TGVScrollBar * fVScrollbar;  vertical scrollbar ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions;  TGCanvas (const TGCanvas &)=delete;  ; TGCanvas & operator= (const TGCanvas &)=delete;  . Additional Inherited Members;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited ",MatchSource.WIKI,doc/master/classTGCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCanvas.html
https://root.cern/doc/master/classTGCanvas.html:25303,Modifiability,inherit,inherited,25303,"llBar * fVScrollbar;  vertical scrollbar ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions;  TGCanvas (const TGCanvas &)=delete;  ; TGCanvas & operator= (const TGCanvas &)=delete;  . Additional Inherited Members;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResou",MatchSource.WIKI,doc/master/classTGCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCanvas.html
https://root.cern/doc/master/classTGCanvas.html:25455,Modifiability,inherit,inherited,25455,"DNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions;  TGCanvas (const TGCanvas &)=delete;  ; TGCanvas & operator= (const TGCanvas &)=delete;  . Additional Inherited Members;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const ",MatchSource.WIKI,doc/master/classTGCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCanvas.html
https://root.cern/doc/master/classTGCanvas.html:25803,Modifiability,inherit,inherited,25803,"t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions;  TGCanvas (const TGCanvas &)=delete;  ; TGCanvas & operator= (const TGCanvas &)=delete;  . Additional Inherited Members;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;",MatchSource.WIKI,doc/master/classTGCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCanvas.html
https://root.cern/doc/master/classTGCanvas.html:25898,Modifiability,inherit,inherited,25898,"t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions;  TGCanvas (const TGCanvas &)=delete;  ; TGCanvas & operator= (const TGCanvas &)=delete;  . Additional Inherited Members;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;",MatchSource.WIKI,doc/master/classTGCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCanvas.html
https://root.cern/doc/master/classTGCanvas.html:25997,Modifiability,inherit,inherited,25997,"t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions;  TGCanvas (const TGCanvas &)=delete;  ; TGCanvas & operator= (const TGCanvas &)=delete;  . Additional Inherited Members;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;",MatchSource.WIKI,doc/master/classTGCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCanvas.html
https://root.cern/doc/master/classTGCanvas.html:26491,Modifiability,inherit,inherited,26491,"GCanvas &)=delete;  ; TGCanvas & operator= (const TGCanvas &)=delete;  . Additional Inherited Members;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *",MatchSource.WIKI,doc/master/classTGCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCanvas.html
https://root.cern/doc/master/classTGCanvas.html:26655,Modifiability,inherit,inherited,26655,"GCanvas &)=delete;  ; TGCanvas & operator= (const TGCanvas &)=delete;  . Additional Inherited Members;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *",MatchSource.WIKI,doc/master/classTGCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCanvas.html
https://root.cern/doc/master/classTGCanvas.html:26755,Modifiability,inherit,inherited,26755,"GCanvas &)=delete;  ; TGCanvas & operator= (const TGCanvas &)=delete;  . Additional Inherited Members;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *",MatchSource.WIKI,doc/master/classTGCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCanvas.html
https://root.cern/doc/master/classTGCanvas.html:26966,Modifiability,inherit,inherited,26966,") override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Stat",MatchSource.WIKI,doc/master/classTGCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCanvas.html
https://root.cern/doc/master/classTGCanvas.html:27079,Modifiability,inherit,inherited,27079,") override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Stat",MatchSource.WIKI,doc/master/classTGCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCanvas.html
https://root.cern/doc/master/classTGCanvas.html:27205,Modifiability,inherit,inherited,27205," const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; s",MatchSource.WIKI,doc/master/classTGCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCanvas.html
https://root.cern/doc/master/classTGCanvas.html:28061,Modifiability,inherit,inherited,28061,"nst"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGCanvas.h>. Inheritance diagram for TGCanvas:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ anonymous enum. anonymous enum. EnumeratorkCanvasNoScroll ; kCanvasScrollHorizontal ; kCanvasScrollVertical ; kCanvasScrollBoth . Definition at line 205 of file TGCanvas.h. Constructor & Destructor Documentation. ◆ TGCanvas() [1/2]. TGCanvas::TGCanvas ; (; const TGCanvas & ; ). privatedelete . ◆ TGCanvas() [2/2]. TGCanvas::TGCanvas ; ",MatchSource.WIKI,doc/master/classTGCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCanvas.html
https://root.cern/doc/master/classTGCanvas.html:28730,Modifiability,inherit,inherited,28730,"nst"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGCanvas.h>. Inheritance diagram for TGCanvas:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ anonymous enum. anonymous enum. EnumeratorkCanvasNoScroll ; kCanvasScrollHorizontal ; kCanvasScrollVertical ; kCanvasScrollBoth . Definition at line 205 of file TGCanvas.h. Constructor & Destructor Documentation. ◆ TGCanvas() [1/2]. TGCanvas::TGCanvas ; (; const TGCanvas & ; ). privatedelete . ◆ TGCanvas() [2/2]. TGCanvas::TGCanvas ; ",MatchSource.WIKI,doc/master/classTGCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCanvas.html
https://root.cern/doc/master/classTGCanvas.html:28862,Modifiability,inherit,inherited,28862,"nst"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGCanvas.h>. Inheritance diagram for TGCanvas:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ anonymous enum. anonymous enum. EnumeratorkCanvasNoScroll ; kCanvasScrollHorizontal ; kCanvasScrollVertical ; kCanvasScrollBoth . Definition at line 205 of file TGCanvas.h. Constructor & Destructor Documentation. ◆ TGCanvas() [1/2]. TGCanvas::TGCanvas ; (; const TGCanvas & ; ). privatedelete . ◆ TGCanvas() [2/2]. TGCanvas::TGCanvas ; ",MatchSource.WIKI,doc/master/classTGCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCanvas.html
https://root.cern/doc/master/classTGCanvas.html:12172,Security,hash,hash,12172,"pped on screen, kFALSE otherwise. ;  ; virtual Bool_t IsMapSubwindows () const;  ; virtual void LowerWindow ();  lower window ;  ; virtual Int_t MustCleanup () const;  ; void Print (Option_t *option="""") const override;  Print window id. ;  ; virtual void RaiseWindow ();  raise window ;  ; virtual void RequestFocus ();  request focus ;  ; virtual void SetBackgroundPixmap (Pixmap_t pixmap);  set background pixmap ;  ; virtual void SetEditDisabled (UInt_t on=kEditDisable);  ; virtual void SetMapSubwindows (Bool_t);  ; virtual void SetName (const char *name);  ; virtual void SetWindowName (const char *name=nullptr);  Set window name. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGObject;  TGObject ();  ;  TGObject (const TGObject &tgo);  ;  ~TGObject () override;  TGObject destructor. ;  ; TGClient * GetClient () const;  ; Handle_t GetId () const;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsEqual (const TObject *obj) const override;  Equal comparison (TGObjects are equal if they have the same window identifier). ;  ; void SaveAs (const char *filename="""", Option_t *option="""") const override;  Write this TGObject to a file using TImage, if filename's extension signals a valid TImage::EImageFileType, as defined by TImage::GetImageFileTypeFromFilename(). ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse ob",MatchSource.WIKI,doc/master/classTGCanvas.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCanvas.html
https://root.cern/doc/master/classTGCheckButton.html:17070,Availability,error,error,17070,"="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTGCheckButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCheckButton.html
https://root.cern/doc/master/classTGCheckButton.html:17159,Availability,error,error,17159," object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual ",MatchSource.WIKI,doc/master/classTGCheckButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCheckButton.html
https://root.cern/doc/master/classTGCheckButton.html:17314,Availability,error,error,17314,"etup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; Bool_t HasInconsistentHash () const;  Return true is ",MatchSource.WIKI,doc/master/classTGCheckButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCheckButton.html
https://root.cern/doc/master/classTGCheckButton.html:17611,Availability,error,error,17611,"ject using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object in",MatchSource.WIKI,doc/master/classTGCheckButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCheckButton.html
https://root.cern/doc/master/classTGCheckButton.html:21154,Availability,error,error,21154,"sz);  ; void * operator new (size_t sz, void *vp);  ; void * operator new[] (size_t sz);  ; void * operator new[] (size_t sz, void *vp);  ; TObject & operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Paint (Option_t *option="""");  This method must be overridden if a class wants to paint itself. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class s",MatchSource.WIKI,doc/master/classTGCheckButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCheckButton.html
https://root.cern/doc/master/classTGCheckButton.html:31363,Availability,down,down,31363, Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Protected Member Functions inherited from TGWidget;  TGWidget (const TGWidget &tgw);  ; Int_t ClearFlags (Int_t flags);  ; TGWidget & operator= (const TGWidget &tgw);  ; Int_t SetFlags (Int_t flags);  . Protected Attributes; const TGPicture * fDisOff;  button disabled and was OFF picture ;  ; const TGPicture * fDisOn;  button disabled and was ON picture ;  ; const TGPicture * fOff;  button OFF picture ;  ; const TGPicture * fOn;  button ON picture ;  ; EButtonState fPrevState;  previous check button state ;  ;  Protected Attributes inherited from TGTextButton; FontStruct_t fFontStruct;  ; Bool_t fHasOwnFont;  ; Int_t fHKeycode;  ; TGHotString * fLabel;  ; Int_t fMBottom;  ; Int_t fMLeft;  ; Int_t fMRight;  ; Int_t fMTop;  ; Bool_t fPrevStateOn;  ; Bool_t fStateOn;  ; TGTextLayout * fTLayout;  ; Int_t fTMode;  ; Int_t fWrapLength;  ;  Protected Attributes inherited from TGButton; Pixel_t fBgndColor;  actual background color ;  ; TGButtonGroup * fGroup;  button group this button belongs to ;  ; Pixel_t fHighColor;  highlight color ;  ; GContext_t fNormGC;  graphics context used for drawing button ;  ; EButtonState fState;  button state ;  ; Bool_t fStayDown;  true if button has to stay down ;  ; UInt_t fStyle;  button style (modern or classic) ;  ; UInt_t fTHeight;  button height ;  ; TGToolTip * fTip;  tool tip associated with button ;  ; UInt_t fTWidth;  button width ;  ; void * fUserData;  pointer to user data structure ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fM,MatchSource.WIKI,doc/master/classTGCheckButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCheckButton.html
https://root.cern/doc/master/classTGCheckButton.html:31828,Availability,mask,mask,31828,"utton belongs to ;  ; Pixel_t fHighColor;  highlight color ;  ; GContext_t fNormGC;  graphics context used for drawing button ;  ; EButtonState fState;  button state ;  ; Bool_t fStayDown;  true if button has to stay down ;  ; UInt_t fStyle;  button style (modern or classic) ;  ; UInt_t fTHeight;  button height ;  ; TGToolTip * fTip;  tool tip associated with button ;  ; UInt_t fTWidth;  button width ;  ; void * fUserData;  pointer to user data structure ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Protected Attributes inherited from TGWidget; TString fCommand;  command to be executed ;  ; const TGWindow * fMsgWindow;  window which handles widget events ;  ; Int_t fWidgetFlags;  widget status flags (OR of EWidgetStatus) ;  ; Int_t fWidgetId;  the widget id (used",MatchSource.WIKI,doc/master/classTGCheckButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCheckButton.html
https://root.cern/doc/master/classTGCheckButton.html:825,Integrability,message,message,825,". ROOT: TGCheckButton Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; Static Protected Attributes |; Private Member Functions |; List of all members ; TGCheckButton Class ReferenceGUI » Low level GUI widgets. ; Selects different options. ; Like text buttons, they have text or hot string as a label.; Selecting a check button will generate the event:; kC_COMMAND, kCM_CHECKBUTTON, button id, user data. If a command string has been specified (via SetCommand()) then this command string will be executed via the interpreter whenever a button is selected. A command string can contain the macros:. $MSG – kC_COMMAND, kCMCHECKBUTTON packed message (use GET_MSG() and GET_SUBMSG() to unpack); $PARM1 – button id; $PARM2 – user data pointer. Before executing these macros are expanded into the respective Long_t's ; Definition at line 264 of file TGButton.h. Public Member Functions;  TGCheckButton (const TGWindow *p, const char *s, const char *cmd, Int_t id=-1, GContext_t norm=GetDefaultGC()(), FontStruct_t font=GetDefaultFontStruct(), UInt_t option=0);  Create a check button widget. ;  ;  TGCheckButton (const TGWindow *p, TGHotString *s, Int_t id=-1, GContext_t norm=GetDefaultGC()(), FontStruct_t font=GetDefaultFontStruct(), UInt_t option=0);  Create a check button widget. ;  ;  TGCheckButton (const TGWindow *p=nullptr, const char *s=nullptr, Int_t id=-1, GContext_t norm=GetDefaultGC()(), FontStruct_t font=GetDefaultFontStruct(), UInt_t option=0);  Create a check button widget. ;  ;  ~TGCheckButton () override;  Delete a check button. ;  ; TGDimension GetDefaultSize () const override;  default size ;  ; Bool_t HandleButton (Event_t *event) override;  Handle mouse button event. ;  ; Bool_t HandleCrossing (Event_t *event) override;  Handle mouse crossing event. ;  ; Bool_t HandleKey (Event_t *event) ",MatchSource.WIKI,doc/master/classTGCheckButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCheckButton.html
https://root.cern/doc/master/classTGCheckButton.html:9382,Integrability,message,message,9382,"o which this object belongs. ;  ; TObject * DrawClone (Option_t *="""") const override;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void DrawCopy (Handle_t, Int_t, Int_t);  ; void Dump () const override;  Dump contents of object on stdout. ;  ; virtual Pixel_t GetBackground () const;  ; Int_t GetBorderWidth () const;  ; virtual UInt_t GetDefaultHeight () const;  ; virtual UInt_t GetDefaultWidth () const;  ; virtual TDNDData * GetDNDData (Atom_t);  ; virtual Int_t GetDragType () const;  Returns drag source type. ;  ; virtual Int_t GetDropType () const;  Returns drop target type. ;  ; UInt_t GetEventMask () const;  ; virtual Pixel_t GetForeground () const;  Return frame foreground color. ;  ; TGFrameElement * GetFrameElement () const;  ; virtual TGFrame * GetFrameFromPoint (Int_t x, Int_t y);  ; UInt_t GetHeight () const;  ; UInt_t GetMaxHeight () const;  ; UInt_t GetMaxWidth () const;  ; UInt_t GetMinHeight () const;  ; UInt_t GetMinWidth () const;  ; virtual UInt_t GetOptions () const;  ; TGDimension GetSize () const;  ; UInt_t GetWidth () const;  ; Int_t GetX () const;  ; Int_t GetY () const;  ; virtual Bool_t HandleClientMessage (Event_t *event);  Handle a client message. ;  ; virtual Bool_t HandleColormapChange (Event_t *);  ; virtual Bool_t HandleConfigureNotify (Event_t *event);  This event is generated when the frame is resized. ;  ; virtual Bool_t HandleDNDDrop (TDNDData *);  ; virtual Atom_t HandleDNDEnter (Atom_t *);  ; virtual Bool_t HandleDNDFinished ();  ; virtual Bool_t HandleDNDLeave ();  ; virtual Atom_t HandleDNDPosition (Int_t, Int_t, Atom_t, Int_t, Int_t);  ; virtual Bool_t HandleDoubleClick (Event_t *);  ; virtual Bool_t HandleDragDrop (TGFrame *, Int_t, Int_t, TGLayoutHints *);  ; virtual Bool_t HandleDragEnter (TGFrame *);  ; virtual Bool_t HandleDragLeave (TGFrame *);  ; virtual Bool_t HandleDragMotion (TGFrame *);  ; Bool_t HandleEvent (Event_t *event) override;  Handle all frame events.",MatchSource.WIKI,doc/master/classTGCheckButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCheckButton.html
https://root.cern/doc/master/classTGCheckButton.html:11933,Integrability,message,message,11933,"de;  Move frame. ;  ; void MoveResize (Int_t x, Int_t y, UInt_t w=0, UInt_t h=0) override;  Move and/or resize the frame. ;  ; void Print (Option_t *option="""") const override;  Print window id. ;  ; virtual void ProcessedConfigure (Event_t *event);  ; virtual void ProcessedEvent (Event_t *event);  ; virtual Bool_t ProcessMessage (Longptr_t, Longptr_t, Longptr_t);  ; virtual void ReallyDelete ();  ; void RemoveInput (UInt_t emask);  Remove events specified in emask from the events the frame should handle. ;  ; void ReparentWindow (const TGWindow *p, Int_t x=0, Int_t y=0) override;  Reparent window, make p the new parent and position the window at position (x,y) in new parent. ;  ; virtual void Resize (TGDimension size);  Resize the frame. ;  ; void Resize (UInt_t w=0, UInt_t h=0) override;  Resize the frame. ;  ; void SaveUserColor (std::ostream &out, Option_t *);  Save a user color in a C++ macro file - used in SavePrimitive(). ;  ; virtual void SendMessage (const TGWindow *w, Longptr_t msg, Longptr_t parm1, Longptr_t parm2);  Send message (i.e. ;  ; void SetBackgroundColor (Pixel_t back) override;  Set background color (override from TGWindow base class). ;  ; virtual void SetCleanup (Int_t=kLocalCleanup);  ; void SetDNDSource (Bool_t onoff);  ; void SetDNDTarget (Bool_t onoff);  ; virtual void SetDragType (Int_t type);  SetDragType. ;  ; void SetDrawOption (Option_t *="""") override;  Set drawing option for object. ;  ; virtual void SetDropType (Int_t type);  SetDropType. ;  ; void SetEditable (Bool_t) override;  ; void SetFrameElement (TGFrameElement *fe);  ; virtual void SetHeight (UInt_t h);  ; virtual void SetLayoutBroken (Bool_t=kTRUE);  ; virtual void SetMaxHeight (UInt_t h);  ; virtual void SetMaxWidth (UInt_t w);  ; virtual void SetMinHeight (UInt_t h);  ; virtual void SetMinWidth (UInt_t w);  ; virtual void SetSize (const TGDimension &s);  ; virtual void SetWidth (UInt_t w);  ; virtual void SetX (Int_t x);  ; virtual void SetY (Int_t y);  ; void StreamerNVi",MatchSource.WIKI,doc/master/classTGCheckButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCheckButton.html
https://root.cern/doc/master/classTGCheckButton.html:17076,Integrability,message,message,17076,"="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTGCheckButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCheckButton.html
https://root.cern/doc/master/classTGCheckButton.html:17617,Integrability,message,message,17617,"ject using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object in",MatchSource.WIKI,doc/master/classTGCheckButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCheckButton.html
https://root.cern/doc/master/classTGCheckButton.html:18507,Integrability,message,message,18507," an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessar",MatchSource.WIKI,doc/master/classTGCheckButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCheckButton.html
https://root.cern/doc/master/classTGCheckButton.html:21160,Integrability,message,message,21160,"sz);  ; void * operator new (size_t sz, void *vp);  ; void * operator new[] (size_t sz);  ; void * operator new[] (size_t sz, void *vp);  ; TObject & operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Paint (Option_t *option="""");  This method must be overridden if a class wants to paint itself. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class s",MatchSource.WIKI,doc/master/classTGCheckButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCheckButton.html
https://root.cern/doc/master/classTGCheckButton.html:21533,Integrability,message,message,21533," pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from class cls and all its base-classes. ;  ; Bool_t Connect (const char *signal, const char *receiver_class, void *receiver, const char *slot);  Non-static method is used to connect from the signal of this object to the receiver slot. ;  ; virtual void Connected (const char *);  ; virtual void Destroyed ();  ; Bool_t Disconnect (const char *signal=nullptr, voi",MatchSource.WIKI,doc/master/classTGCheckButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCheckButton.html
https://root.cern/doc/master/classTGCheckButton.html:2814,Modifiability,inherit,inherited,2814,"t_t *event) override;  Handle mouse crossing event. ;  ; Bool_t HandleKey (Event_t *event) override;  Handle key event. This function will be called when the hotkey is hit. ;  ; TClass * IsA () const override;  ; virtual Bool_t IsDisabledAndSelected () const;  ; Bool_t IsDown () const override;  ; Bool_t IsOn () const override;  ; Bool_t IsToggleButton () const override;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save a check button widget as a C++ statement(s) on output stream out. ;  ; virtual void SetDisabledAndSelected (Bool_t);  Set the state of a check button to disabled and either on or off. ;  ; void SetState (EButtonState state, Bool_t emit=kFALSE) override;  Set check button state. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGTextButton;  TGTextButton (const TGWindow *p, const char *s, const char *cmd, Int_t id=-1, GContext_t norm=GetDefaultGC()(), FontStruct_t font=GetDefaultFontStruct(), UInt_t option=kRaisedFrame|kDoubleBorder);  Create a text button widget and set cmd string at same time. ;  ;  TGTextButton (const TGWindow *p, TGHotString *s, Int_t id=-1, GContext_t norm=GetDefaultGC()(), FontStruct_t font=GetDefaultFontStruct(), UInt_t option=kRaisedFrame|kDoubleBorder);  Create a text button widget. ;  ;  TGTextButton (const TGWindow *p=nullptr, const char *s=nullptr, Int_t id=-1, GContext_t norm=GetDefaultGC()(), FontStruct_t font=GetDefaultFontStruct(), UInt_t option=kRaisedFrame|kDoubleBorder);  Create a text button widget. ;  ;  ~TGTextButton () override;  Delete a text button widget. ;  ; void ChangeText (const char *title);  ; Int_t GetBottomMargin () const;  ; TGDimension GetDefaultSize () const override;  returns default size ;  ; FontStruct_t GetFontStruct () const;  ; Int_t GetLeftMargin () const;  ; Int_t GetRightMargin () const;  ; TString GetString () const;  ; cons",MatchSource.WIKI,doc/master/classTGCheckButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCheckButton.html
https://root.cern/doc/master/classTGCheckButton.html:5669,Modifiability,inherit,inherited,5669,");  Changes text font specified by name. ;  ; virtual void SetFont (FontStruct_t font, Bool_t global=kFALSE);  Changes text font. ;  ; void SetForegroundColor (Pixel_t fore) override;  ; virtual void SetLeftMargin (Int_t val);  ; void SetMargins (Int_t left=0, Int_t right=0, Int_t top=0, Int_t bottom=0);  ; virtual void SetRightMargin (Int_t val);  ; virtual void SetText (const TString &new_label);  Set new button text. ;  ; virtual void SetText (TGHotString *new_label);  Set new button text. ;  ; virtual void SetTextColor (Pixel_t color, Bool_t global=kFALSE);  Changes text color. ;  ; virtual void SetTextJustify (Int_t tmode);  Set text justification. ;  ; virtual void SetTitle (const char *label);  ; virtual void SetTopMargin (Int_t val);  ; void SetWrapLength (Int_t wl);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGButton;  TGButton (const TGWindow *p=nullptr, Int_t id=-1, GContext_t norm=GetDefaultGC()(), UInt_t option=kRaisedFrame|kDoubleBorder);  Create button base class part. ;  ;  ~TGButton () override;  Delete button. ;  ; virtual void AllowStayDown (Bool_t a);  ; virtual void Clicked ();  ; TGButtonGroup * GetGroup () const;  ; GContext_t GetNormGC () const;  ; virtual EButtonState GetState () const;  ; virtual UInt_t GetStyle () const;  ; virtual TGToolTip * GetToolTip () const;  ; virtual void * GetUserData () const;  ; virtual Bool_t IsExclusiveToggle () const;  ; virtual void Pressed ();  ; virtual void Released ();  ; virtual void SetDown (Bool_t on=kTRUE, Bool_t emit=kFALSE);  ; virtual void SetEnabled (Bool_t e=kTRUE);  Set enabled or disabled state of button. ;  ; virtual void SetGroup (TGButtonGroup *gr);  Sets new button-group for this button. ;  ; virtual void SetOn (Bool_t on=kTRUE, Bool_t emit=kFALSE);  ; virtual void SetStyle (const char *style);  Set the button style (modern or classic). ;  ; virtual ",MatchSource.WIKI,doc/master/classTGCheckButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCheckButton.html
https://root.cern/doc/master/classTGCheckButton.html:7133,Modifiability,inherit,inherited,7133,"tStyle () const;  ; virtual TGToolTip * GetToolTip () const;  ; virtual void * GetUserData () const;  ; virtual Bool_t IsExclusiveToggle () const;  ; virtual void Pressed ();  ; virtual void Released ();  ; virtual void SetDown (Bool_t on=kTRUE, Bool_t emit=kFALSE);  ; virtual void SetEnabled (Bool_t e=kTRUE);  Set enabled or disabled state of button. ;  ; virtual void SetGroup (TGButtonGroup *gr);  Sets new button-group for this button. ;  ; virtual void SetOn (Bool_t on=kTRUE, Bool_t emit=kFALSE);  ; virtual void SetStyle (const char *style);  Set the button style (modern or classic). ;  ; virtual void SetStyle (UInt_t newstyle);  Set the button style (modern or classic). ;  ; virtual void SetToolTipText (const char *text, Long_t delayms=400);  Set tool tip text associated with this button. ;  ; virtual void SetUserData (void *userData);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void Toggle (Bool_t emit=kFALSE);  ; virtual void Toggled (Bool_t on);  ;  Public Member Functions inherited from TGFrame;  TGFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=0, Pixel_t back=GetDefaultFrameBackground());  Create a TGFrame object. Options is an OR of the EFrameTypes. ;  ;  TGFrame (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a frame using an externally created window. ;  ;  ~TGFrame () override;  Destructor. ;  ; virtual void Activate (Bool_t);  ; void AddInput (UInt_t emask);  Add events specified in the emask to the events the frame should handle. ;  ; virtual void ChangeBackground (Pixel_t back);  Change frame background color. ;  ; virtual void ChangeOptions (UInt_t options);  Change frame options. Options is an OR of the EFrameTypes. ;  ; Bool_t Contains (Int_t x, Int_t y) const;  ; void Delete (Option_t *="""") override;  Delete this object. ;  ; virtual void DeleteWindow ();  Delete window. ;  ; virtual void DrawBorder ();  Draw frame border. ;  ; void DrawClass () const override;  Draw cla",MatchSource.WIKI,doc/master/classTGCheckButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCheckButton.html
https://root.cern/doc/master/classTGCheckButton.html:8110,Modifiability,inherit,inheritance,8110,"ic Member Functions inherited from TGFrame;  TGFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=0, Pixel_t back=GetDefaultFrameBackground());  Create a TGFrame object. Options is an OR of the EFrameTypes. ;  ;  TGFrame (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a frame using an externally created window. ;  ;  ~TGFrame () override;  Destructor. ;  ; virtual void Activate (Bool_t);  ; void AddInput (UInt_t emask);  Add events specified in the emask to the events the frame should handle. ;  ; virtual void ChangeBackground (Pixel_t back);  Change frame background color. ;  ; virtual void ChangeOptions (UInt_t options);  Change frame options. Options is an OR of the EFrameTypes. ;  ; Bool_t Contains (Int_t x, Int_t y) const;  ; void Delete (Option_t *="""") override;  Delete this object. ;  ; virtual void DeleteWindow ();  Delete window. ;  ; virtual void DrawBorder ();  Draw frame border. ;  ; void DrawClass () const override;  Draw class inheritance tree of the class to which this object belongs. ;  ; TObject * DrawClone (Option_t *="""") const override;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void DrawCopy (Handle_t, Int_t, Int_t);  ; void Dump () const override;  Dump contents of object on stdout. ;  ; virtual Pixel_t GetBackground () const;  ; Int_t GetBorderWidth () const;  ; virtual UInt_t GetDefaultHeight () const;  ; virtual UInt_t GetDefaultWidth () const;  ; virtual TDNDData * GetDNDData (Atom_t);  ; virtual Int_t GetDragType () const;  Returns drag source type. ;  ; virtual Int_t GetDropType () const;  Returns drop target type. ;  ; UInt_t GetEventMask () const;  ; virtual Pixel_t GetForeground () const;  Return frame foreground color. ;  ; TGFrameElement * GetFrameElement () const;  ; virtual TGFrame * GetFrameFromPoint (Int_t x, Int_t y);  ; UInt_t GetHeight () const;  ; UInt_t GetMaxHeight () const;  ; UInt_t GetMaxWidth () const;  ; UInt_t GetMinHei",MatchSource.WIKI,doc/master/classTGCheckButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCheckButton.html
https://root.cern/doc/master/classTGCheckButton.html:13008,Modifiability,inherit,inherited,13008,"ve(). ;  ; virtual void SendMessage (const TGWindow *w, Longptr_t msg, Longptr_t parm1, Longptr_t parm2);  Send message (i.e. ;  ; void SetBackgroundColor (Pixel_t back) override;  Set background color (override from TGWindow base class). ;  ; virtual void SetCleanup (Int_t=kLocalCleanup);  ; void SetDNDSource (Bool_t onoff);  ; void SetDNDTarget (Bool_t onoff);  ; virtual void SetDragType (Int_t type);  SetDragType. ;  ; void SetDrawOption (Option_t *="""") override;  Set drawing option for object. ;  ; virtual void SetDropType (Int_t type);  SetDropType. ;  ; void SetEditable (Bool_t) override;  ; void SetFrameElement (TGFrameElement *fe);  ; virtual void SetHeight (UInt_t h);  ; virtual void SetLayoutBroken (Bool_t=kTRUE);  ; virtual void SetMaxHeight (UInt_t h);  ; virtual void SetMaxWidth (UInt_t w);  ; virtual void SetMinHeight (UInt_t h);  ; virtual void SetMinWidth (UInt_t w);  ; virtual void SetSize (const TGDimension &s);  ; virtual void SetWidth (UInt_t w);  ; virtual void SetX (Int_t x);  ; virtual void SetY (Int_t y);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UnmapWindow () override;  unmap window ;  ;  Public Member Functions inherited from TGWindow;  TGWindow (const TGWindow *p=nullptr, Int_t x=0, Int_t y=0, UInt_t w=0, UInt_t h=0, UInt_t border=0, Int_t depth=0, UInt_t clss=0, void *visual=nullptr, SetWindowAttributes_t *attr=nullptr, UInt_t wtype=0);  Create a new window. ;  ;  TGWindow (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a copy of a window. ;  ;  ~TGWindow () override;  Window destructor. Unregisters the window. ;  ; virtual void DestroySubwindows ();  destroy sub windows ;  ; virtual void DestroyWindow ();  destroy window ;  ; virtual UInt_t GetEditDisabled () const;  ; virtual const TGWindow * GetMainFrame () const;  Returns top level main frame. ;  ; const char * GetName () const override;  Return unique name, used in SavePrimitive methods. ;  ; const TGWindow * GetParent () const;  ; ",MatchSource.WIKI,doc/master/classTGCheckButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCheckButton.html
https://root.cern/doc/master/classTGCheckButton.html:14974,Modifiability,inherit,inherited,14974,"nse of a timer timing out. ;  ; virtual void IconifyWindow ();  iconify window ;  ; TClass * IsA () const override;  ; virtual Bool_t IsMapped ();  Returns kTRUE if window is mapped on screen, kFALSE otherwise. ;  ; virtual Bool_t IsMapSubwindows () const;  ; virtual void LowerWindow ();  lower window ;  ; virtual Int_t MustCleanup () const;  ; void Print (Option_t *option="""") const override;  Print window id. ;  ; virtual void RaiseWindow ();  raise window ;  ; virtual void RequestFocus ();  request focus ;  ; virtual void SetBackgroundPixmap (Pixmap_t pixmap);  set background pixmap ;  ; virtual void SetEditDisabled (UInt_t on=kEditDisable);  ; virtual void SetMapSubwindows (Bool_t);  ; virtual void SetName (const char *name);  ; virtual void SetWindowName (const char *name=nullptr);  Set window name. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGObject;  TGObject ();  ;  TGObject (const TGObject &tgo);  ;  ~TGObject () override;  TGObject destructor. ;  ; TGClient * GetClient () const;  ; Handle_t GetId () const;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsEqual (const TObject *obj) const override;  Equal comparison (TGObjects are equal if they have the same window identifier). ;  ; void SaveAs (const char *filename="""", Option_t *option="""") const override;  Write this TGObject to a file using TImage, if filename's extension signals a valid TImage::EImageFileType, as defined by TImage::GetImageFileTypeFromFilename(). ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you d",MatchSource.WIKI,doc/master/classTGCheckButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCheckButton.html
https://root.cern/doc/master/classTGCheckButton.html:15709,Modifiability,inherit,inherited,15709,"al void SetName (const char *name);  ; virtual void SetWindowName (const char *name=nullptr);  Set window name. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGObject;  TGObject ();  ;  TGObject (const TGObject &tgo);  ;  ~TGObject () override;  TGObject destructor. ;  ; TGClient * GetClient () const;  ; Handle_t GetId () const;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsEqual (const TObject *obj) const override;  Equal comparison (TGObjects are equal if they have the same window identifier). ;  ; void SaveAs (const char *filename="""", Option_t *option="""") const override;  Write this TGObject to a file using TImage, if filename's extension signals a valid TImage::EImageFileType, as defined by TImage::GetImageFileTypeFromFilename(). ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,doc/master/classTGCheckButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCheckButton.html
https://root.cern/doc/master/classTGCheckButton.html:18605,Modifiability,inherit,inherits,18605,"r *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handl",MatchSource.WIKI,doc/master/classTGCheckButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCheckButton.html
https://root.cern/doc/master/classTGCheckButton.html:18722,Modifiability,inherit,inherits,18722," be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base implementation is no-op). ;  ; void Obsolete (const char *method, const char *asOfVe",MatchSource.WIKI,doc/master/classTGCheckButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCheckButton.html
https://root.cern/doc/master/classTGCheckButton.html:21840,Modifiability,inherit,inherited,21840,"f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from class cls and all its base-classes. ;  ; Bool_t Connect (const char *signal, const char *receiver_class, void *receiver, const char *slot);  Non-static method is used to connect from the signal of this object to the receiver slot. ;  ; virtual void Connected (const char *);  ; virtual void Destroyed ();  ; Bool_t Disconnect (const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal of this object from slot of receiver. ;  ; virtual void Disconnected (const char *);  ; void Emit (const char *signal);  Activate signal without args. ;  ; template<typename T > ; void Emit (const char *signal, const T &arg);  Activate signal with single paramet",MatchSource.WIKI,doc/master/classTGCheckButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCheckButton.html
https://root.cern/doc/master/classTGCheckButton.html:23808,Modifiability,inherit,inherited,23808,"a signal with a varying number of arguments. ;  ; TList * GetListOfClassSignals () const;  Returns pointer to list of signals of this class. ;  ; TList * GetListOfConnections () const;  ; TList * GetListOfSignals () const;  ; virtual Bool_t HasConnection (const char *signal_name) const;  Return true if there is any object connected to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGWidget;  TGWidget ();  ;  TGWidget (Int_t id);  ; virtual ~TGWidget ();  ; virtual void Associate (const TGWindow *w);  ; const char * GetCommand () const;  ; Bool_t HasFocus () const;  ; Bool_t IsEnabled () const;  ; virtual void SetCommand (const char *command);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Bool_t WantFocus () const;  ; Int_t WidgetId () const;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static FontStruct_t GetDefaultFontStruct ();  Return default font structure. ;  ; static const TGGC & GetDefaultGC ();  Return default graphics context. ;  ;  Static Public Member Functions inherited from TGTextButton; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static FontStruct_t GetDefaultFontStruct ();  Return default font structure. ;  ;  Static Public Member Functions inherited from TGButton; static TClass * Class ();  ; static const char *",MatchSource.WIKI,doc/master/classTGCheckButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCheckButton.html
https://root.cern/doc/master/classTGCheckButton.html:24593,Modifiability,inherit,inherited,24593, object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGWidget;  TGWidget ();  ;  TGWidget (Int_t id);  ; virtual ~TGWidget ();  ; virtual void Associate (const TGWindow *w);  ; const char * GetCommand () const;  ; Bool_t HasFocus () const;  ; Bool_t IsEnabled () const;  ; virtual void SetCommand (const char *command);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Bool_t WantFocus () const;  ; Int_t WidgetId () const;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static FontStruct_t GetDefaultFontStruct ();  Return default font structure. ;  ; static const TGGC & GetDefaultGC ();  Return default graphics context. ;  ;  Static Public Member Functions inherited from TGTextButton; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static FontStruct_t GetDefaultFontStruct ();  Return default font structure. ;  ;  Static Public Member Functions inherited from TGButton; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetDefaultGC ();  Return default graphics context. ;  ; static const TGGC & GetHibckgndGC ();  Return graphics context for highlighted frame background. ;  ;  Static Public Member Functions inherited from TGFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetBckgndGC ();  Get background color graphics context. ;  ; static const TGGC & GetBlackGC ();  Get black graphics context. ;  ; static Pixel_t GetBlackPixel ();  Get black pixel value. ;  ; static Pixel_t GetDefaultFrameBa,MatchSource.WIKI,doc/master/classTGCheckButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCheckButton.html
https://root.cern/doc/master/classTGCheckButton.html:24891,Modifiability,inherit,inherited,24891,us () const;  ; Bool_t IsEnabled () const;  ; virtual void SetCommand (const char *command);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Bool_t WantFocus () const;  ; Int_t WidgetId () const;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static FontStruct_t GetDefaultFontStruct ();  Return default font structure. ;  ; static const TGGC & GetDefaultGC ();  Return default graphics context. ;  ;  Static Public Member Functions inherited from TGTextButton; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static FontStruct_t GetDefaultFontStruct ();  Return default font structure. ;  ;  Static Public Member Functions inherited from TGButton; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetDefaultGC ();  Return default graphics context. ;  ; static const TGGC & GetHibckgndGC ();  Return graphics context for highlighted frame background. ;  ;  Static Public Member Functions inherited from TGFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetBckgndGC ();  Get background color graphics context. ;  ; static const TGGC & GetBlackGC ();  Get black graphics context. ;  ; static Pixel_t GetBlackPixel ();  Get black pixel value. ;  ; static Pixel_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get shadow color graphics context,MatchSource.WIKI,doc/master/classTGCheckButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCheckButton.html
https://root.cern/doc/master/classTGCheckButton.html:25281,Modifiability,inherit,inherited,25281,leName ();  ; static FontStruct_t GetDefaultFontStruct ();  Return default font structure. ;  ; static const TGGC & GetDefaultGC ();  Return default graphics context. ;  ;  Static Public Member Functions inherited from TGTextButton; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static FontStruct_t GetDefaultFontStruct ();  Return default font structure. ;  ;  Static Public Member Functions inherited from TGButton; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetDefaultGC ();  Return default graphics context. ;  ; static const TGGC & GetHibckgndGC ();  Return graphics context for highlighted frame background. ;  ;  Static Public Member Functions inherited from TGFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetBckgndGC ();  Get background color graphics context. ;  ; static const TGGC & GetBlackGC ();  Get black graphics context. ;  ; static Pixel_t GetBlackPixel ();  Get black pixel value. ;  ; static Pixel_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get shadow color graphics context. ;  ; static const TGGC & GetWhiteGC ();  Get white graphics context. ;  ; static Pixel_t GetWhitePixel ();  Get white pixel value. ;  ;  Static Public Member Functions inherited from TGWindow; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetCounter ();  Return global,MatchSource.WIKI,doc/master/classTGCheckButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCheckButton.html
https://root.cern/doc/master/classTGCheckButton.html:26167,Modifiability,inherit,inherited,26167,erited from TGFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetBckgndGC ();  Get background color graphics context. ;  ; static const TGGC & GetBlackGC ();  Get black graphics context. ;  ; static Pixel_t GetBlackPixel ();  Get black pixel value. ;  ; static Pixel_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get shadow color graphics context. ;  ; static const TGGC & GetWhiteGC ();  Get white graphics context. ;  ; static Pixel_t GetWhitePixel ();  Get white pixel value. ;  ;  Static Public Member Functions inherited from TGWindow; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetCounter ();  Return global window counter (total number of created windows). ;  ;  Static Public Member Functions inherited from TGObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true,MatchSource.WIKI,doc/master/classTGCheckButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCheckButton.html
https://root.cern/doc/master/classTGCheckButton.html:26477,Modifiability,inherit,inherited,26477,"_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get shadow color graphics context. ;  ; static const TGGC & GetWhiteGC ();  Get white graphics context. ;  ; static Pixel_t GetWhitePixel ();  Get white pixel value. ;  ;  Static Public Member Functions inherited from TGWindow; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetCounter ();  Return global window counter (total number of created windows). ;  ;  Static Public Member Functions inherited from TGObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This m",MatchSource.WIKI,doc/master/classTGCheckButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCheckButton.html
https://root.cern/doc/master/classTGCheckButton.html:26689,Modifiability,inherit,inherited,26689,"_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get shadow color graphics context. ;  ; static const TGGC & GetWhiteGC ();  Get white graphics context. ;  ; static Pixel_t GetWhitePixel ();  Get white pixel value. ;  ;  Static Public Member Functions inherited from TGWindow; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetCounter ();  Return global window counter (total number of created windows). ;  ;  Static Public Member Functions inherited from TGObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This m",MatchSource.WIKI,doc/master/classTGCheckButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCheckButton.html
https://root.cern/doc/master/classTGCheckButton.html:27207,Modifiability,inherit,inherited,27207," Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetCounter ();  Return global window counter (total number of created windows). ;  ;  Static Public Member Functions inherited from TGObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullpt",MatchSource.WIKI,doc/master/classTGCheckButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCheckButton.html
https://root.cern/doc/master/classTGCheckButton.html:28382,Modifiability,inherit,inherited,28382," ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Static Public Member Functions inherited from TGWidget; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; void DoRedraw () override;  Draw the check button widget. ;  ; void EmitSignals (Bool_t wasUp=kTRUE) override;  Emit signals. ;  ; void Init ();  Common check button initialization. ;  ; void PSetState (EButtonState state, Bool_t emit);  Set check button state. ;  ;  Protected Member Functions inherited from TGTextButton; void DoRedraw () override;  Draw the text button. ;  ; void Init ();  Common initialization used by the different ctors. ;  ;  Protected Member Functions inherited from TGButton; virtual void SetToggleButton (Bool_t);  ;  Protected Member Functions inherited from TGFrame; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () ",MatchSource.WIKI,doc/master/classTGCheckButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCheckButton.html
https://root.cern/doc/master/classTGCheckButton.html:28885,Modifiability,inherit,inherited,28885," connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Static Public Member Functions inherited from TGWidget; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; void DoRedraw () override;  Draw the check button widget. ;  ; void EmitSignals (Bool_t wasUp=kTRUE) override;  Emit signals. ;  ; void Init ();  Common check button initialization. ;  ; void PSetState (EButtonState state, Bool_t emit);  Set check button state. ;  ;  Protected Member Functions inherited from TGTextButton; void DoRedraw () override;  Draw the text button. ;  ; void Init ();  Common initialization used by the different ctors. ;  ;  Protected Member Functions inherited from TGButton; virtual void SetToggleButton (Bool_t);  ;  Protected Member Functions inherited from TGFrame; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void ",MatchSource.WIKI,doc/master/classTGCheckButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCheckButton.html
https://root.cern/doc/master/classTGCheckButton.html:29068,Modifiability,inherit,inherited,29068,"t (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Static Public Member Functions inherited from TGWidget; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; void DoRedraw () override;  Draw the check button widget. ;  ; void EmitSignals (Bool_t wasUp=kTRUE) override;  Emit signals. ;  ; void Init ();  Common check button initialization. ;  ; void PSetState (EButtonState state, Bool_t emit);  Set check button state. ;  ;  Protected Member Functions inherited from TGTextButton; void DoRedraw () override;  Draw the text button. ;  ; void Init ();  Common initialization used by the different ctors. ;  ;  Protected Member Functions inherited from TGButton; virtual void SetToggleButton (Bool_t);  ;  Protected Member Functions inherited from TGFrame; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Protected M",MatchSource.WIKI,doc/master/classTGCheckButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCheckButton.html
https://root.cern/doc/master/classTGCheckButton.html:29163,Modifiability,inherit,inherited,29163,"t (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Static Public Member Functions inherited from TGWidget; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; void DoRedraw () override;  Draw the check button widget. ;  ; void EmitSignals (Bool_t wasUp=kTRUE) override;  Emit signals. ;  ; void Init ();  Common check button initialization. ;  ; void PSetState (EButtonState state, Bool_t emit);  Set check button state. ;  ;  Protected Member Functions inherited from TGTextButton; void DoRedraw () override;  Draw the text button. ;  ; void Init ();  Common initialization used by the different ctors. ;  ;  Protected Member Functions inherited from TGButton; virtual void SetToggleButton (Bool_t);  ;  Protected Member Functions inherited from TGFrame; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Protected M",MatchSource.WIKI,doc/master/classTGCheckButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCheckButton.html
https://root.cern/doc/master/classTGCheckButton.html:29606,Modifiability,inherit,inherited,29606,"onState state, Bool_t emit);  Set check button state. ;  ;  Protected Member Functions inherited from TGTextButton; void DoRedraw () override;  Draw the text button. ;  ; void Init ();  Common initialization used by the different ctors. ;  ;  Protected Member Functions inherited from TGButton; virtual void SetToggleButton (Bool_t);  ;  Protected Member Functions inherited from TGFrame; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Protected Member Functions inherited from TGWidget;  TGWidget (const TGWidget &tgw);  ; Int_t ClearFlags (Int_t flags);  ; TGWidget & operator= (const TGWidget &tgw);  ; Int_t SetFlags (Int_t flags);  . Protected Attributes; const TGPicture * fDisOff;  button disabled and was OFF picture ;  ; const TGPicture * fDisOn;  button disabled and was ON picture ;  ; const TGPicture * fOff;  button OFF picture ;  ; const TGPicture * fOn;  button ON picture ;  ; EButtonState fPrevState;  previous check button state ;  ;  Protected Attributes inherited from TGTextButton; FontStruct_t fFontStruct;  ; Bool_t fHasOwnFont;  ; Int_t fHKeycode;  ;",MatchSource.WIKI,doc/master/classTGCheckButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCheckButton.html
https://root.cern/doc/master/classTGCheckButton.html:29770,Modifiability,inherit,inherited,29770,"onState state, Bool_t emit);  Set check button state. ;  ;  Protected Member Functions inherited from TGTextButton; void DoRedraw () override;  Draw the text button. ;  ; void Init ();  Common initialization used by the different ctors. ;  ;  Protected Member Functions inherited from TGButton; virtual void SetToggleButton (Bool_t);  ;  Protected Member Functions inherited from TGFrame; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Protected Member Functions inherited from TGWidget;  TGWidget (const TGWidget &tgw);  ; Int_t ClearFlags (Int_t flags);  ; TGWidget & operator= (const TGWidget &tgw);  ; Int_t SetFlags (Int_t flags);  . Protected Attributes; const TGPicture * fDisOff;  button disabled and was OFF picture ;  ; const TGPicture * fDisOn;  button disabled and was ON picture ;  ; const TGPicture * fOff;  button OFF picture ;  ; const TGPicture * fOn;  button ON picture ;  ; EButtonState fPrevState;  previous check button state ;  ;  Protected Attributes inherited from TGTextButton; FontStruct_t fFontStruct;  ; Bool_t fHasOwnFont;  ; Int_t fHKeycode;  ;",MatchSource.WIKI,doc/master/classTGCheckButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCheckButton.html
https://root.cern/doc/master/classTGCheckButton.html:29870,Modifiability,inherit,inherited,29870,"onState state, Bool_t emit);  Set check button state. ;  ;  Protected Member Functions inherited from TGTextButton; void DoRedraw () override;  Draw the text button. ;  ; void Init ();  Common initialization used by the different ctors. ;  ;  Protected Member Functions inherited from TGButton; virtual void SetToggleButton (Bool_t);  ;  Protected Member Functions inherited from TGFrame; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Protected Member Functions inherited from TGWidget;  TGWidget (const TGWidget &tgw);  ; Int_t ClearFlags (Int_t flags);  ; TGWidget & operator= (const TGWidget &tgw);  ; Int_t SetFlags (Int_t flags);  . Protected Attributes; const TGPicture * fDisOff;  button disabled and was OFF picture ;  ; const TGPicture * fDisOn;  button disabled and was ON picture ;  ; const TGPicture * fOff;  button OFF picture ;  ; const TGPicture * fOn;  button ON picture ;  ; EButtonState fPrevState;  previous check button state ;  ;  Protected Attributes inherited from TGTextButton; FontStruct_t fFontStruct;  ; Bool_t fHasOwnFont;  ; Int_t fHKeycode;  ;",MatchSource.WIKI,doc/master/classTGCheckButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCheckButton.html
https://root.cern/doc/master/classTGCheckButton.html:30081,Modifiability,inherit,inherited,30081,"l void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Protected Member Functions inherited from TGWidget;  TGWidget (const TGWidget &tgw);  ; Int_t ClearFlags (Int_t flags);  ; TGWidget & operator= (const TGWidget &tgw);  ; Int_t SetFlags (Int_t flags);  . Protected Attributes; const TGPicture * fDisOff;  button disabled and was OFF picture ;  ; const TGPicture * fDisOn;  button disabled and was ON picture ;  ; const TGPicture * fOff;  button OFF picture ;  ; const TGPicture * fOn;  button ON picture ;  ; EButtonState fPrevState;  previous check button state ;  ;  Protected Attributes inherited from TGTextButton; FontStruct_t fFontStruct;  ; Bool_t fHasOwnFont;  ; Int_t fHKeycode;  ; TGHotString * fLabel;  ; Int_t fMBottom;  ; Int_t fMLeft;  ; Int_t fMRight;  ; Int_t fMTop;  ; Bool_t fPrevStateOn;  ; Bool_t fStateOn;  ; TGTextLayout * fTLayout;  ; Int_t fTMode;  ; Int_t fWrapLength;  ;  Protected Attributes inherited from TGButton; Pixel_t fBgndColor;  actual background color ;  ; TGButtonGroup * fGroup;  button group this button belongs to ;  ; Pixel_t fHighColor;  high",MatchSource.WIKI,doc/master/classTGCheckButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCheckButton.html
https://root.cern/doc/master/classTGCheckButton.html:30187,Modifiability,inherit,inherited,30187,"l void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Protected Member Functions inherited from TGWidget;  TGWidget (const TGWidget &tgw);  ; Int_t ClearFlags (Int_t flags);  ; TGWidget & operator= (const TGWidget &tgw);  ; Int_t SetFlags (Int_t flags);  . Protected Attributes; const TGPicture * fDisOff;  button disabled and was OFF picture ;  ; const TGPicture * fDisOn;  button disabled and was ON picture ;  ; const TGPicture * fOff;  button OFF picture ;  ; const TGPicture * fOn;  button ON picture ;  ; EButtonState fPrevState;  previous check button state ;  ;  Protected Attributes inherited from TGTextButton; FontStruct_t fFontStruct;  ; Bool_t fHasOwnFont;  ; Int_t fHKeycode;  ; TGHotString * fLabel;  ; Int_t fMBottom;  ; Int_t fMLeft;  ; Int_t fMRight;  ; Int_t fMTop;  ; Bool_t fPrevStateOn;  ; Bool_t fStateOn;  ; TGTextLayout * fTLayout;  ; Int_t fTMode;  ; Int_t fWrapLength;  ;  Protected Attributes inherited from TGButton; Pixel_t fBgndColor;  actual background color ;  ; TGButtonGroup * fGroup;  button group this button belongs to ;  ; Pixel_t fHighColor;  high",MatchSource.WIKI,doc/master/classTGCheckButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCheckButton.html
https://root.cern/doc/master/classTGCheckButton.html:30698,Modifiability,inherit,inherited,30698, Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Protected Member Functions inherited from TGWidget;  TGWidget (const TGWidget &tgw);  ; Int_t ClearFlags (Int_t flags);  ; TGWidget & operator= (const TGWidget &tgw);  ; Int_t SetFlags (Int_t flags);  . Protected Attributes; const TGPicture * fDisOff;  button disabled and was OFF picture ;  ; const TGPicture * fDisOn;  button disabled and was ON picture ;  ; const TGPicture * fOff;  button OFF picture ;  ; const TGPicture * fOn;  button ON picture ;  ; EButtonState fPrevState;  previous check button state ;  ;  Protected Attributes inherited from TGTextButton; FontStruct_t fFontStruct;  ; Bool_t fHasOwnFont;  ; Int_t fHKeycode;  ; TGHotString * fLabel;  ; Int_t fMBottom;  ; Int_t fMLeft;  ; Int_t fMRight;  ; Int_t fMTop;  ; Bool_t fPrevStateOn;  ; Bool_t fStateOn;  ; TGTextLayout * fTLayout;  ; Int_t fTMode;  ; Int_t fWrapLength;  ;  Protected Attributes inherited from TGButton; Pixel_t fBgndColor;  actual background color ;  ; TGButtonGroup * fGroup;  button group this button belongs to ;  ; Pixel_t fHighColor;  highlight color ;  ; GContext_t fNormGC;  graphics context used for drawing button ;  ; EButtonState fState;  button state ;  ; Bool_t fStayDown;  true if button has to stay down ;  ; UInt_t fStyle;  button style (modern or classic) ;  ; UInt_t fTHeight;  button height ;  ; TGToolTip * fTip;  tool tip associated with button ;  ; UInt_t fTWidth;  button width ;  ; void * fUserData;  pointer to user data structure ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fM,MatchSource.WIKI,doc/master/classTGCheckButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCheckButton.html
https://root.cern/doc/master/classTGCheckButton.html:31027,Modifiability,inherit,inherited,31027, Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Protected Member Functions inherited from TGWidget;  TGWidget (const TGWidget &tgw);  ; Int_t ClearFlags (Int_t flags);  ; TGWidget & operator= (const TGWidget &tgw);  ; Int_t SetFlags (Int_t flags);  . Protected Attributes; const TGPicture * fDisOff;  button disabled and was OFF picture ;  ; const TGPicture * fDisOn;  button disabled and was ON picture ;  ; const TGPicture * fOff;  button OFF picture ;  ; const TGPicture * fOn;  button ON picture ;  ; EButtonState fPrevState;  previous check button state ;  ;  Protected Attributes inherited from TGTextButton; FontStruct_t fFontStruct;  ; Bool_t fHasOwnFont;  ; Int_t fHKeycode;  ; TGHotString * fLabel;  ; Int_t fMBottom;  ; Int_t fMLeft;  ; Int_t fMRight;  ; Int_t fMTop;  ; Bool_t fPrevStateOn;  ; Bool_t fStateOn;  ; TGTextLayout * fTLayout;  ; Int_t fTMode;  ; Int_t fWrapLength;  ;  Protected Attributes inherited from TGButton; Pixel_t fBgndColor;  actual background color ;  ; TGButtonGroup * fGroup;  button group this button belongs to ;  ; Pixel_t fHighColor;  highlight color ;  ; GContext_t fNormGC;  graphics context used for drawing button ;  ; EButtonState fState;  button state ;  ; Bool_t fStayDown;  true if button has to stay down ;  ; UInt_t fStyle;  button style (modern or classic) ;  ; UInt_t fTHeight;  button height ;  ; TGToolTip * fTip;  tool tip associated with button ;  ; UInt_t fTWidth;  button width ;  ; void * fUserData;  pointer to user data structure ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fM,MatchSource.WIKI,doc/master/classTGCheckButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCheckButton.html
https://root.cern/doc/master/classTGCheckButton.html:31632,Modifiability,inherit,inherited,31632, Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Protected Member Functions inherited from TGWidget;  TGWidget (const TGWidget &tgw);  ; Int_t ClearFlags (Int_t flags);  ; TGWidget & operator= (const TGWidget &tgw);  ; Int_t SetFlags (Int_t flags);  . Protected Attributes; const TGPicture * fDisOff;  button disabled and was OFF picture ;  ; const TGPicture * fDisOn;  button disabled and was ON picture ;  ; const TGPicture * fOff;  button OFF picture ;  ; const TGPicture * fOn;  button ON picture ;  ; EButtonState fPrevState;  previous check button state ;  ;  Protected Attributes inherited from TGTextButton; FontStruct_t fFontStruct;  ; Bool_t fHasOwnFont;  ; Int_t fHKeycode;  ; TGHotString * fLabel;  ; Int_t fMBottom;  ; Int_t fMLeft;  ; Int_t fMRight;  ; Int_t fMTop;  ; Bool_t fPrevStateOn;  ; Bool_t fStateOn;  ; TGTextLayout * fTLayout;  ; Int_t fTMode;  ; Int_t fWrapLength;  ;  Protected Attributes inherited from TGButton; Pixel_t fBgndColor;  actual background color ;  ; TGButtonGroup * fGroup;  button group this button belongs to ;  ; Pixel_t fHighColor;  highlight color ;  ; GContext_t fNormGC;  graphics context used for drawing button ;  ; EButtonState fState;  button state ;  ; Bool_t fStayDown;  true if button has to stay down ;  ; UInt_t fStyle;  button style (modern or classic) ;  ; UInt_t fTHeight;  button height ;  ; TGToolTip * fTip;  tool tip associated with button ;  ; UInt_t fTWidth;  button width ;  ; void * fUserData;  pointer to user data structure ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fM,MatchSource.WIKI,doc/master/classTGCheckButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCheckButton.html
https://root.cern/doc/master/classTGCheckButton.html:32264,Modifiability,inherit,inherited,32264,"utton belongs to ;  ; Pixel_t fHighColor;  highlight color ;  ; GContext_t fNormGC;  graphics context used for drawing button ;  ; EButtonState fState;  button state ;  ; Bool_t fStayDown;  true if button has to stay down ;  ; UInt_t fStyle;  button style (modern or classic) ;  ; UInt_t fTHeight;  button height ;  ; TGToolTip * fTip;  tool tip associated with button ;  ; UInt_t fTWidth;  button width ;  ; void * fUserData;  pointer to user data structure ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Protected Attributes inherited from TGWidget; TString fCommand;  command to be executed ;  ; const TGWindow * fMsgWindow;  window which handles widget events ;  ; Int_t fWidgetFlags;  widget status flags (OR of EWidgetStatus) ;  ; Int_t fWidgetId;  the widget id (used",MatchSource.WIKI,doc/master/classTGCheckButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCheckButton.html
https://root.cern/doc/master/classTGCheckButton.html:32541,Modifiability,inherit,inherited,32541,"serData;  pointer to user data structure ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Protected Attributes inherited from TGWidget; TString fCommand;  command to be executed ;  ; const TGWindow * fMsgWindow;  window which handles widget events ;  ; Int_t fWidgetFlags;  widget status flags (OR of EWidgetStatus) ;  ; Int_t fWidgetId;  the widget id (used for event processing) ;  . Static Protected Attributes; static const TGFont * fgDefaultFont = nullptr;  ; static const TGGC * fgDefaultGC = nullptr;  ;  Static Protected Attributes inherited from TGTextButton; static const TGFont * fgDefaultFont = nullptr;  ;  Static Protected Attributes inherited from TGButton; static const TGGC * fgDefaultGC = nullptr;  ; static const TGGC * fgHibckgndGC = nullptr;  ; static Wind",MatchSource.WIKI,doc/master/classTGCheckButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCheckButton.html
https://root.cern/doc/master/classTGCheckButton.html:32693,Modifiability,inherit,inherited,32693,"t ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Protected Attributes inherited from TGWidget; TString fCommand;  command to be executed ;  ; const TGWindow * fMsgWindow;  window which handles widget events ;  ; Int_t fWidgetFlags;  widget status flags (OR of EWidgetStatus) ;  ; Int_t fWidgetId;  the widget id (used for event processing) ;  . Static Protected Attributes; static const TGFont * fgDefaultFont = nullptr;  ; static const TGGC * fgDefaultGC = nullptr;  ;  Static Protected Attributes inherited from TGTextButton; static const TGFont * fgDefaultFont = nullptr;  ;  Static Protected Attributes inherited from TGButton; static const TGGC * fgDefaultGC = nullptr;  ; static const TGGC * fgHibckgndGC = nullptr;  ; static Window_t fgReleaseBtn = 0;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgD",MatchSource.WIKI,doc/master/classTGCheckButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCheckButton.html
https://root.cern/doc/master/classTGCheckButton.html:32899,Modifiability,inherit,inherited,32899,"t ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Protected Attributes inherited from TGWidget; TString fCommand;  command to be executed ;  ; const TGWindow * fMsgWindow;  window which handles widget events ;  ; Int_t fWidgetFlags;  widget status flags (OR of EWidgetStatus) ;  ; Int_t fWidgetId;  the widget id (used for event processing) ;  . Static Protected Attributes; static const TGFont * fgDefaultFont = nullptr;  ; static const TGGC * fgDefaultGC = nullptr;  ;  Static Protected Attributes inherited from TGTextButton; static const TGFont * fgDefaultFont = nullptr;  ;  Static Protected Attributes inherited from TGButton; static const TGGC * fgDefaultGC = nullptr;  ; static const TGGC * fgHibckgndGC = nullptr;  ; static Window_t fgReleaseBtn = 0;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgD",MatchSource.WIKI,doc/master/classTGCheckButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCheckButton.html
https://root.cern/doc/master/classTGCheckButton.html:33328,Modifiability,inherit,inherited,33328,"ions to this object ;  ;  Protected Attributes inherited from TGWidget; TString fCommand;  command to be executed ;  ; const TGWindow * fMsgWindow;  window which handles widget events ;  ; Int_t fWidgetFlags;  widget status flags (OR of EWidgetStatus) ;  ; Int_t fWidgetId;  the widget id (used for event processing) ;  . Static Protected Attributes; static const TGFont * fgDefaultFont = nullptr;  ; static const TGGC * fgDefaultGC = nullptr;  ;  Static Protected Attributes inherited from TGTextButton; static const TGFont * fgDefaultFont = nullptr;  ;  Static Protected Attributes inherited from TGButton; static const TGGC * fgDefaultGC = nullptr;  ; static const TGGC * fgHibckgndGC = nullptr;  ; static Window_t fgReleaseBtn = 0;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Private Member Functions;  TGCheckButton (const TGCheckButton &)=delete;  ; TGCheckButton & operator= (const TGCheckButton &)=delete;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); ,",MatchSource.WIKI,doc/master/classTGCheckButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCheckButton.html
https://root.cern/doc/master/classTGCheckButton.html:33436,Modifiability,inherit,inherited,33436,"ions to this object ;  ;  Protected Attributes inherited from TGWidget; TString fCommand;  command to be executed ;  ; const TGWindow * fMsgWindow;  window which handles widget events ;  ; Int_t fWidgetFlags;  widget status flags (OR of EWidgetStatus) ;  ; Int_t fWidgetId;  the widget id (used for event processing) ;  . Static Protected Attributes; static const TGFont * fgDefaultFont = nullptr;  ; static const TGGC * fgDefaultGC = nullptr;  ;  Static Protected Attributes inherited from TGTextButton; static const TGFont * fgDefaultFont = nullptr;  ;  Static Protected Attributes inherited from TGButton; static const TGGC * fgDefaultGC = nullptr;  ; static const TGGC * fgHibckgndGC = nullptr;  ; static Window_t fgReleaseBtn = 0;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Private Member Functions;  TGCheckButton (const TGCheckButton &)=delete;  ; TGCheckButton & operator= (const TGCheckButton &)=delete;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); ,",MatchSource.WIKI,doc/master/classTGCheckButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCheckButton.html
https://root.cern/doc/master/classTGCheckButton.html:33620,Modifiability,inherit,inherited,33620,"ions to this object ;  ;  Protected Attributes inherited from TGWidget; TString fCommand;  command to be executed ;  ; const TGWindow * fMsgWindow;  window which handles widget events ;  ; Int_t fWidgetFlags;  widget status flags (OR of EWidgetStatus) ;  ; Int_t fWidgetId;  the widget id (used for event processing) ;  . Static Protected Attributes; static const TGFont * fgDefaultFont = nullptr;  ; static const TGGC * fgDefaultGC = nullptr;  ;  Static Protected Attributes inherited from TGTextButton; static const TGFont * fgDefaultFont = nullptr;  ;  Static Protected Attributes inherited from TGButton; static const TGGC * fgDefaultGC = nullptr;  ; static const TGGC * fgHibckgndGC = nullptr;  ; static Window_t fgReleaseBtn = 0;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Private Member Functions;  TGCheckButton (const TGCheckButton &)=delete;  ; TGCheckButton & operator= (const TGCheckButton &)=delete;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); ,",MatchSource.WIKI,doc/master/classTGCheckButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCheckButton.html
https://root.cern/doc/master/classTGCheckButton.html:34289,Modifiability,inherit,inherited,34289,"ions to this object ;  ;  Protected Attributes inherited from TGWidget; TString fCommand;  command to be executed ;  ; const TGWindow * fMsgWindow;  window which handles widget events ;  ; Int_t fWidgetFlags;  widget status flags (OR of EWidgetStatus) ;  ; Int_t fWidgetId;  the widget id (used for event processing) ;  . Static Protected Attributes; static const TGFont * fgDefaultFont = nullptr;  ; static const TGGC * fgDefaultGC = nullptr;  ;  Static Protected Attributes inherited from TGTextButton; static const TGFont * fgDefaultFont = nullptr;  ;  Static Protected Attributes inherited from TGButton; static const TGGC * fgDefaultGC = nullptr;  ; static const TGGC * fgHibckgndGC = nullptr;  ; static Window_t fgReleaseBtn = 0;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Private Member Functions;  TGCheckButton (const TGCheckButton &)=delete;  ; TGCheckButton & operator= (const TGCheckButton &)=delete;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); ,",MatchSource.WIKI,doc/master/classTGCheckButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCheckButton.html
https://root.cern/doc/master/classTGCheckButton.html:34421,Modifiability,inherit,inherited,34421,"ions to this object ;  ;  Protected Attributes inherited from TGWidget; TString fCommand;  command to be executed ;  ; const TGWindow * fMsgWindow;  window which handles widget events ;  ; Int_t fWidgetFlags;  widget status flags (OR of EWidgetStatus) ;  ; Int_t fWidgetId;  the widget id (used for event processing) ;  . Static Protected Attributes; static const TGFont * fgDefaultFont = nullptr;  ; static const TGGC * fgDefaultGC = nullptr;  ;  Static Protected Attributes inherited from TGTextButton; static const TGFont * fgDefaultFont = nullptr;  ;  Static Protected Attributes inherited from TGButton; static const TGGC * fgDefaultGC = nullptr;  ; static const TGGC * fgHibckgndGC = nullptr;  ; static Window_t fgReleaseBtn = 0;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Private Member Functions;  TGCheckButton (const TGCheckButton &)=delete;  ; TGCheckButton & operator= (const TGCheckButton &)=delete;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); ,",MatchSource.WIKI,doc/master/classTGCheckButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCheckButton.html
https://root.cern/doc/master/classTGCheckButton.html:34714,Modifiability,inherit,inherited,34714,"ic Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Private Member Functions;  TGCheckButton (const TGCheckButton &)=delete;  ; TGCheckButton & operator= (const TGCheckButton &)=delete;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindo",MatchSource.WIKI,doc/master/classTGCheckButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCheckButton.html
https://root.cern/doc/master/classTGCheckButton.html:35221,Modifiability,inherit,inherited,35221,"c Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Private Member Functions;  TGCheckButton (const TGCheckButton &)=delete;  ; TGCheckButton & operator= (const TGCheckButton &)=delete;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TCla",MatchSource.WIKI,doc/master/classTGCheckButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCheckButton.html
https://root.cern/doc/master/classTGCheckButton.html:35862,Modifiability,inherit,inherited,35862,"t = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sen",MatchSource.WIKI,doc/master/classTGCheckButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCheckButton.html
https://root.cern/doc/master/classTGCheckButton.html:35957,Modifiability,inherit,inherited,35957,"t = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sen",MatchSource.WIKI,doc/master/classTGCheckButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCheckButton.html
https://root.cern/doc/master/classTGCheckButton.html:36063,Modifiability,inherit,inherited,36063,"t = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sen",MatchSource.WIKI,doc/master/classTGCheckButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCheckButton.html
https://root.cern/doc/master/classTGCheckButton.html:36189,Modifiability,inherit,inherited,36189,"; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  . #include <TGButton.h>. Inheritance diagram for TGCheckButton:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGCheckButton() [1/4]. TGCheckButton::TGCheckButton ; (; const",MatchSource.WIKI,doc/master/classTGCheckButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCheckButton.html
https://root.cern/doc/master/classTGCheckButton.html:15205,Security,hash,hash,15205,"pped on screen, kFALSE otherwise. ;  ; virtual Bool_t IsMapSubwindows () const;  ; virtual void LowerWindow ();  lower window ;  ; virtual Int_t MustCleanup () const;  ; void Print (Option_t *option="""") const override;  Print window id. ;  ; virtual void RaiseWindow ();  raise window ;  ; virtual void RequestFocus ();  request focus ;  ; virtual void SetBackgroundPixmap (Pixmap_t pixmap);  set background pixmap ;  ; virtual void SetEditDisabled (UInt_t on=kEditDisable);  ; virtual void SetMapSubwindows (Bool_t);  ; virtual void SetName (const char *name);  ; virtual void SetWindowName (const char *name=nullptr);  Set window name. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGObject;  TGObject ();  ;  TGObject (const TGObject &tgo);  ;  ~TGObject () override;  TGObject destructor. ;  ; TGClient * GetClient () const;  ; Handle_t GetId () const;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsEqual (const TObject *obj) const override;  Equal comparison (TGObjects are equal if they have the same window identifier). ;  ; void SaveAs (const char *filename="""", Option_t *option="""") const override;  Write this TGObject to a file using TImage, if filename's extension signals a valid TImage::EImageFileType, as defined by TImage::GetImageFileTypeFromFilename(). ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse ob",MatchSource.WIKI,doc/master/classTGCheckButton.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCheckButton.html
https://root.cern/doc/master/classTGClient.html:755,Availability,down,down,755,". ROOT: TGClient Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; Friends |; List of all members ; TGClient Class ReferenceGUI » Low level GUI widgets. ; Window client. ; In client server windowing systems, like X11 this class is used to make the initial connection to the window server. ; Definition at line 37 of file TGClient.h. Public Member Functions;  TGClient (const char *dpyName=nullptr);  Create a connection with the display sever on host dpyName and setup the complete GUI system, i.e., graphics contexts, fonts, etc. ;  ;  ~TGClient () override;  Closing down client: cleanup and close X connection. ;  ; void AddIdleHandler (TGIdleHandler *h);  Add handler for idle events. ;  ; void AddUnknownWindowHandler (TGUnknownWindowHandler *h);  Add handler for unknown (i.e. unregistered) windows. ;  ; void CancelRedraw (TGWindow *w);  ; void ForceRedraw ();  ; void FreeColor (Pixel_t color) const;  Free color. ;  ; void FreeFont (const TGFont *font);  Free a font. ;  ; void FreeGC (const TGGC *gc);  Free a graphics context. ;  ; void FreeGC (GContext_t gc);  Free a graphics context. ;  ; void FreePicture (const TGPicture *pic);  Free picture resource. ;  ; Bool_t GetColorByName (const char *name, Pixel_t &pixel) const;  Get a color by name. ;  ; Colormap_t GetDefaultColormap () const;  ; const TGWindow * GetDefaultRoot () const;  Returns the root (i.e. ;  ; UInt_t GetDisplayHeight () const;  Get display height. ;  ; UInt_t GetDisplayWidth () const;  Get display width. ;  ; TGFont * GetFont (const char *font, Bool_t fixedDefault=kTRUE);  Get a font from the font pool. ;  ; TGFont * GetFont (const TGFont *font);  Get again specified font. Will increase its usage count. ;  ; FontStruct_t GetFontByName (const char *name, Bool_t fixedDefault=kTRUE) const;  Get a font by name. ;  ; TGFontPool",MatchSource.WIKI,doc/master/classTGClient.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGClient.html
https://root.cern/doc/master/classTGClient.html:3481,Availability,mask,masked,3481,"re (const char *name, UInt_t new_width, UInt_t new_height);  Get picture with specified size from pool (picture will be scaled if necessary). ;  ; TGPicturePool * GetPicturePool () const;  ; const TGResourcePool * GetResourcePool () const;  ; const TGWindow * GetRoot () const;  Returns current root (i.e. ;  ; Pixel_t GetShadow (Pixel_t base_color) const;  Return pixel value of shadow color based on base_color. ;  ; UInt_t GetStyle () const;  ; EGEventType GetWaitForEvent () const;  ; Window_t GetWaitForWindow () const;  ; TGWindow * GetWindowById (Window_t sw) const;  Find a TGWindow via its handle. If window is not found return 0. ;  ; TGWindow * GetWindowByName (const char *name) const;  Find a TGWindow via its name (unique name used in TGWindow::SavePrimitive). ;  ; Bool_t HandleEvent (Event_t *event);  Handle a GUI event. ;  ; Bool_t HandleInput ();  Handles input from the display server. ;  ; Bool_t HandleMaskEvent (Event_t *event, Window_t wid);  Handle masked events only if window wid is the window for which the event was reported or if wid is a parent of the event window. ;  ; TClass * IsA () const override;  ; Bool_t IsEditable () const;  ; Bool_t IsEditDisabled () const;  Returns kTRUE if edit/guibuilding is forbidden. ;  ; void NeedRedraw (TGWindow *w, Bool_t force=kFALSE);  Set redraw flags. ;  ; void ProcessedEvent (Event_t *event, Window_t wid);  Emits a signal when an event has been processed. ;  ; Bool_t ProcessEventsFor (TGWindow *w);  Like gSystem->ProcessEvents() but then only allow events for w to be processed. ;  ; void ProcessLine (TString cmd, Long_t msg, Long_t parm1, Long_t parm2);  Execute string ""cmd"" via the interpreter. ;  ; void RegisteredWindow (Window_t w);  Emits a signal when a Window has been registered in TGClient. ;  ; void RegisterPopup (TGWindow *w);  Add a popup menu to the list of popups. ;  ; void RegisterWindow (TGWindow *w);  Add a TGWindow to the clients list of windows. ;  ; void RemoveIdleHandler (TGIdleHandler *h);  Rem",MatchSource.WIKI,doc/master/classTGClient.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGClient.html
https://root.cern/doc/master/classTGClient.html:7287,Availability,error,error,7287,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTGClient.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGClient.html
https://root.cern/doc/master/classTGClient.html:7376,Availability,error,error,7376,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTGClient.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGClient.html
https://root.cern/doc/master/classTGClient.html:7531,Availability,error,error,7531,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTGClient.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGClient.html
https://root.cern/doc/master/classTGClient.html:7828,Availability,error,error,7828,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTGClient.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGClient.html
https://root.cern/doc/master/classTGClient.html:12392,Availability,error,error,12392," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class s",MatchSource.WIKI,doc/master/classTGClient.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGClient.html
https://root.cern/doc/master/classTGClient.html:21759,Availability,down,down,21759,"f the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGClient.h>. Inheritance diagram for TGClient:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGClient() [1/2]. TGClient::TGClient ; (; const TGClient & ; ). protecteddelete . ◆ TGClient() [2/2]. TGClient::TGClient ; (; const char * ; dpyName = nullptr). Create a connection with the display sever on host dpyName and setup the complete GUI system, i.e., graphics contexts, fonts, etc. ; for all widgets. ; Definition at line 128 of file TGClient.cxx. ◆ ~TGClient(). TGClient::~TGClient ; (; ). override . Closing down client: cleanup and close X connection. ; Definition at line 622 of file TGClient.cxx. Member Function Documentation. ◆ AddIdleHandler(). void TGClient::AddIdleHandler ; (; TGIdleHandler * ; h). Add handler for idle events. ; Definition at line 573 of file TGClient.cxx. ◆ AddUnknownWindowHandler(). void TGClient::AddUnknownWindowHandler ; (; TGUnknownWindowHandler * ; h). Add handler for unknown (i.e. unregistered) windows. ; Definition at line 552 of file TGClient.cxx. ◆ CancelRedraw(). void TGClient::CancelRedraw ; (; TGWindow * ; w). Definition at line 386 of file TGClient.cxx. ◆ Class(). static TClass * TGClient::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TGClient::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TGClient::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 153 of file TGClient.h. ◆ DeclFileName(). static const char * TGClient::D",MatchSource.WIKI,doc/master/classTGClient.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGClient.html
https://root.cern/doc/master/classTGClient.html:25189,Availability,error,error,25189,"l value, kFALSE otherwise. ; Definition at line 395 of file TGClient.cxx. ◆ GetDefaultColormap(). Colormap_t TGClient::GetDefaultColormap ; (; ); const. inline . Definition at line 145 of file TGClient.h. ◆ GetDefaultRoot(). const TGWindow * TGClient::GetDefaultRoot ; (; ); const. Returns the root (i.e. ; desktop) window. Should only be used as parent for frames that will never be embedded, like popups, message boxes, etc. (like TGToolTips, TGMessageBox, etc.). ; Definition at line 234 of file TGClient.cxx. ◆ GetDisplayHeight(). UInt_t TGClient::GetDisplayHeight ; (; ); const. Get display height. ; Definition at line 275 of file TGClient.cxx. ◆ GetDisplayWidth(). UInt_t TGClient::GetDisplayWidth ; (; ); const. Get display width. ; Definition at line 262 of file TGClient.cxx. ◆ GetFont() [1/2]. TGFont * TGClient::GetFont ; (; const char * ; font, . Bool_t ; fixedDefault = kTRUE . ). Get a font from the font pool. ; Fonts must be freed via TGClient::FreeFont(). Returns 0 in case of error or if font does not exist. If fixedDefault is false the ""fixed"" font will not be substituted as fallback when the asked for font does not exist. ; Definition at line 348 of file TGClient.cxx. ◆ GetFont() [2/2]. TGFont * TGClient::GetFont ; (; const TGFont * ; font). Get again specified font. Will increase its usage count. ; Definition at line 356 of file TGClient.cxx. ◆ GetFontByName(). FontStruct_t TGClient::GetFontByName ; (; const char * ; name, . Bool_t ; fixedDefault = kTRUE . ); const. Get a font by name. ; If font is not found, fixed font is returned, if fixed font also does not exist return 0 and print error. The loaded font needs to be freed using TVirtualX::DeleteFont(). If fixedDefault is false the ""fixed"" font will not be substituted as fallback when the asked for font does not exist. ; Definition at line 425 of file TGClient.cxx. ◆ GetFontPool(). TGFontPool * TGClient::GetFontPool ; (; ); const. inline . Definition at line 136 of file TGClient.h. ◆ GetGC(). TGGC * TGClien",MatchSource.WIKI,doc/master/classTGClient.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGClient.html
https://root.cern/doc/master/classTGClient.html:25813,Availability,error,error,25813,"(; ); const. Get display height. ; Definition at line 275 of file TGClient.cxx. ◆ GetDisplayWidth(). UInt_t TGClient::GetDisplayWidth ; (; ); const. Get display width. ; Definition at line 262 of file TGClient.cxx. ◆ GetFont() [1/2]. TGFont * TGClient::GetFont ; (; const char * ; font, . Bool_t ; fixedDefault = kTRUE . ). Get a font from the font pool. ; Fonts must be freed via TGClient::FreeFont(). Returns 0 in case of error or if font does not exist. If fixedDefault is false the ""fixed"" font will not be substituted as fallback when the asked for font does not exist. ; Definition at line 348 of file TGClient.cxx. ◆ GetFont() [2/2]. TGFont * TGClient::GetFont ; (; const TGFont * ; font). Get again specified font. Will increase its usage count. ; Definition at line 356 of file TGClient.cxx. ◆ GetFontByName(). FontStruct_t TGClient::GetFontByName ; (; const char * ; name, . Bool_t ; fixedDefault = kTRUE . ); const. Get a font by name. ; If font is not found, fixed font is returned, if fixed font also does not exist return 0 and print error. The loaded font needs to be freed using TVirtualX::DeleteFont(). If fixedDefault is false the ""fixed"" font will not be substituted as fallback when the asked for font does not exist. ; Definition at line 425 of file TGClient.cxx. ◆ GetFontPool(). TGFontPool * TGClient::GetFontPool ; (; ); const. inline . Definition at line 136 of file TGClient.h. ◆ GetGC(). TGGC * TGClient::GetGC ; (; GCValues_t * ; values, . Bool_t ; rw = kFALSE . ). Get graphics context from the gc pool. ; Context must be freed via TGClient::FreeGC(). If rw is true a new read/write-able GC is returned, otherwise a shared read-only context is returned. For historical reasons it is also possible to create directly a TGGC object, but it is advised to use this new interface only. ; Definition at line 320 of file TGClient.cxx. ◆ GetGCPool(). TGGCPool * TGClient::GetGCPool ; (; ); const. inline . Definition at line 131 of file TGClient.h. ◆ GetHilite(). Pixel_t TGClien",MatchSource.WIKI,doc/master/classTGClient.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGClient.html
https://root.cern/doc/master/classTGClient.html:29957,Availability,mask,masked,29957,"tion at line 115 of file TGClient.h. ◆ GetWindowById(). TGWindow * TGClient::GetWindowById ; (; Window_t ; sw); const. Find a TGWindow via its handle. If window is not found return 0. ; Definition at line 594 of file TGClient.cxx. ◆ GetWindowByName(). TGWindow * TGClient::GetWindowByName ; (; const char * ; name); const. Find a TGWindow via its name (unique name used in TGWindow::SavePrimitive). ; If window is not found return 0. ; Definition at line 605 of file TGClient.cxx. ◆ HandleEvent(). Bool_t TGClient::HandleEvent ; (; Event_t * ; event). Handle a GUI event. ; Definition at line 819 of file TGClient.cxx. ◆ HandleInput(). Bool_t TGClient::HandleInput ; (; ). Handles input from the display server. ; Returns kTRUE if one or more events have been processed, kFALSE otherwise. ; Definition at line 697 of file TGClient.cxx. ◆ HandleMaskEvent(). Bool_t TGClient::HandleMaskEvent ; (; Event_t * ; event, . Window_t ; wid . ). Handle masked events only if window wid is the window for which the event was reported or if wid is a parent of the event window. ; The not masked event are handled directly. The masked events are: kButtonPress, kButtonRelease, kKeyPress, kKeyRelease, kEnterNotify, kLeaveNotify, kMotionNotify. ; Definition at line 856 of file TGClient.cxx. ◆ Instance(). TGClient * TGClient::Instance ; (; ). static . Returns global gClient (initialize graphics first, if not already done) ; Definition at line 93 of file TGClient.cxx. ◆ IsA(). TClass * TGClient::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 153 of file TGClient.h. ◆ IsEditable(). Bool_t TGClient::IsEditable ; (; ); const. inline . Definition at line 89 of file TGClient.h. ◆ IsEditDisabled(). Bool_t TGClient::IsEditDisabled ; (; ); const. Returns kTRUE if edit/guibuilding is forbidden. ; Definition at line 935 of file TGClient.cxx. ◆ NeedRedraw(). void TGClient::NeedRedraw ; (; TGWindow * ; w, . Bool_t ; force = kFAL",MatchSource.WIKI,doc/master/classTGClient.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGClient.html
https://root.cern/doc/master/classTGClient.html:30090,Availability,mask,masked,30090,"yId ; (; Window_t ; sw); const. Find a TGWindow via its handle. If window is not found return 0. ; Definition at line 594 of file TGClient.cxx. ◆ GetWindowByName(). TGWindow * TGClient::GetWindowByName ; (; const char * ; name); const. Find a TGWindow via its name (unique name used in TGWindow::SavePrimitive). ; If window is not found return 0. ; Definition at line 605 of file TGClient.cxx. ◆ HandleEvent(). Bool_t TGClient::HandleEvent ; (; Event_t * ; event). Handle a GUI event. ; Definition at line 819 of file TGClient.cxx. ◆ HandleInput(). Bool_t TGClient::HandleInput ; (; ). Handles input from the display server. ; Returns kTRUE if one or more events have been processed, kFALSE otherwise. ; Definition at line 697 of file TGClient.cxx. ◆ HandleMaskEvent(). Bool_t TGClient::HandleMaskEvent ; (; Event_t * ; event, . Window_t ; wid . ). Handle masked events only if window wid is the window for which the event was reported or if wid is a parent of the event window. ; The not masked event are handled directly. The masked events are: kButtonPress, kButtonRelease, kKeyPress, kKeyRelease, kEnterNotify, kLeaveNotify, kMotionNotify. ; Definition at line 856 of file TGClient.cxx. ◆ Instance(). TGClient * TGClient::Instance ; (; ). static . Returns global gClient (initialize graphics first, if not already done) ; Definition at line 93 of file TGClient.cxx. ◆ IsA(). TClass * TGClient::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 153 of file TGClient.h. ◆ IsEditable(). Bool_t TGClient::IsEditable ; (; ); const. inline . Definition at line 89 of file TGClient.h. ◆ IsEditDisabled(). Bool_t TGClient::IsEditDisabled ; (; ); const. Returns kTRUE if edit/guibuilding is forbidden. ; Definition at line 935 of file TGClient.cxx. ◆ NeedRedraw(). void TGClient::NeedRedraw ; (; TGWindow * ; w, . Bool_t ; force = kFALSE . ). Set redraw flags. ; Definition at line 372 of file TGClient.cxx. ◆ operator=(). ",MatchSource.WIKI,doc/master/classTGClient.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGClient.html
https://root.cern/doc/master/classTGClient.html:30129,Availability,mask,masked,30129,"und return 0. ; Definition at line 594 of file TGClient.cxx. ◆ GetWindowByName(). TGWindow * TGClient::GetWindowByName ; (; const char * ; name); const. Find a TGWindow via its name (unique name used in TGWindow::SavePrimitive). ; If window is not found return 0. ; Definition at line 605 of file TGClient.cxx. ◆ HandleEvent(). Bool_t TGClient::HandleEvent ; (; Event_t * ; event). Handle a GUI event. ; Definition at line 819 of file TGClient.cxx. ◆ HandleInput(). Bool_t TGClient::HandleInput ; (; ). Handles input from the display server. ; Returns kTRUE if one or more events have been processed, kFALSE otherwise. ; Definition at line 697 of file TGClient.cxx. ◆ HandleMaskEvent(). Bool_t TGClient::HandleMaskEvent ; (; Event_t * ; event, . Window_t ; wid . ). Handle masked events only if window wid is the window for which the event was reported or if wid is a parent of the event window. ; The not masked event are handled directly. The masked events are: kButtonPress, kButtonRelease, kKeyPress, kKeyRelease, kEnterNotify, kLeaveNotify, kMotionNotify. ; Definition at line 856 of file TGClient.cxx. ◆ Instance(). TGClient * TGClient::Instance ; (; ). static . Returns global gClient (initialize graphics first, if not already done) ; Definition at line 93 of file TGClient.cxx. ◆ IsA(). TClass * TGClient::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 153 of file TGClient.h. ◆ IsEditable(). Bool_t TGClient::IsEditable ; (; ); const. inline . Definition at line 89 of file TGClient.h. ◆ IsEditDisabled(). Bool_t TGClient::IsEditDisabled ; (; ); const. Returns kTRUE if edit/guibuilding is forbidden. ; Definition at line 935 of file TGClient.cxx. ◆ NeedRedraw(). void TGClient::NeedRedraw ; (; TGWindow * ; w, . Bool_t ; force = kFALSE . ). Set redraw flags. ; Definition at line 372 of file TGClient.cxx. ◆ operator=(). TGClient & TGClient::operator= ; (; const TGClient & ; ). protecteddelete . ◆ Proc",MatchSource.WIKI,doc/master/classTGClient.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGClient.html
https://root.cern/doc/master/classTGClient.html:7293,Integrability,message,message,7293,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTGClient.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGClient.html
https://root.cern/doc/master/classTGClient.html:7834,Integrability,message,message,7834,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTGClient.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGClient.html
https://root.cern/doc/master/classTGClient.html:9036,Integrability,message,message,9036,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this metho",MatchSource.WIKI,doc/master/classTGClient.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGClient.html
https://root.cern/doc/master/classTGClient.html:12398,Integrability,message,message,12398," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class s",MatchSource.WIKI,doc/master/classTGClient.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGClient.html
https://root.cern/doc/master/classTGClient.html:12771,Integrability,message,message,12771," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from class cls and all its base-classes. ;  ; Bool_t Connect (const char *signal, const char *receiver_class, void *receiver, const char *slot);  Non-static method is used to connect from the signal of this object to the receiver slot. ;  ; virtual void Connected (const char *);  ; virtual void Destroyed ();  ; Bool_t Disconnect (const char *signal=nullptr, voi",MatchSource.WIKI,doc/master/classTGClient.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGClient.html
https://root.cern/doc/master/classTGClient.html:24601,Integrability,message,message,24601,"ent.cxx. ◆ FreeGC() [1/2]. void TGClient::FreeGC ; (; const TGGC * ; gc). Free a graphics context. ; Definition at line 328 of file TGClient.cxx. ◆ FreeGC() [2/2]. void TGClient::FreeGC ; (; GContext_t ; gc). Free a graphics context. ; Definition at line 336 of file TGClient.cxx. ◆ FreePicture(). void TGClient::FreePicture ; (; const TGPicture * ; pic). Free picture resource. ; Definition at line 308 of file TGClient.cxx. ◆ GetColorByName(). Bool_t TGClient::GetColorByName ; (; const char * ; name, . Pixel_t & ; pixel . ); const. Get a color by name. ; If color is found return kTRUE and pixel is set to the color's pixel value, kFALSE otherwise. ; Definition at line 395 of file TGClient.cxx. ◆ GetDefaultColormap(). Colormap_t TGClient::GetDefaultColormap ; (; ); const. inline . Definition at line 145 of file TGClient.h. ◆ GetDefaultRoot(). const TGWindow * TGClient::GetDefaultRoot ; (; ); const. Returns the root (i.e. ; desktop) window. Should only be used as parent for frames that will never be embedded, like popups, message boxes, etc. (like TGToolTips, TGMessageBox, etc.). ; Definition at line 234 of file TGClient.cxx. ◆ GetDisplayHeight(). UInt_t TGClient::GetDisplayHeight ; (; ); const. Get display height. ; Definition at line 275 of file TGClient.cxx. ◆ GetDisplayWidth(). UInt_t TGClient::GetDisplayWidth ; (; ); const. Get display width. ; Definition at line 262 of file TGClient.cxx. ◆ GetFont() [1/2]. TGFont * TGClient::GetFont ; (; const char * ; font, . Bool_t ; fixedDefault = kTRUE . ). Get a font from the font pool. ; Fonts must be freed via TGClient::FreeFont(). Returns 0 in case of error or if font does not exist. If fixedDefault is false the ""fixed"" font will not be substituted as fallback when the asked for font does not exist. ; Definition at line 348 of file TGClient.cxx. ◆ GetFont() [2/2]. TGFont * TGClient::GetFont ; (; const TGFont * ; font). Get again specified font. Will increase its usage count. ; Definition at line 356 of file TGClient.cxx. ◆ G",MatchSource.WIKI,doc/master/classTGClient.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGClient.html
https://root.cern/doc/master/classTGClient.html:26559,Integrability,interface,interface,26559,"e count. ; Definition at line 356 of file TGClient.cxx. ◆ GetFontByName(). FontStruct_t TGClient::GetFontByName ; (; const char * ; name, . Bool_t ; fixedDefault = kTRUE . ); const. Get a font by name. ; If font is not found, fixed font is returned, if fixed font also does not exist return 0 and print error. The loaded font needs to be freed using TVirtualX::DeleteFont(). If fixedDefault is false the ""fixed"" font will not be substituted as fallback when the asked for font does not exist. ; Definition at line 425 of file TGClient.cxx. ◆ GetFontPool(). TGFontPool * TGClient::GetFontPool ; (; ); const. inline . Definition at line 136 of file TGClient.h. ◆ GetGC(). TGGC * TGClient::GetGC ; (; GCValues_t * ; values, . Bool_t ; rw = kFALSE . ). Get graphics context from the gc pool. ; Context must be freed via TGClient::FreeGC(). If rw is true a new read/write-able GC is returned, otherwise a shared read-only context is returned. For historical reasons it is also possible to create directly a TGGC object, but it is advised to use this new interface only. ; Definition at line 320 of file TGClient.cxx. ◆ GetGCPool(). TGGCPool * TGClient::GetGCPool ; (; ); const. inline . Definition at line 131 of file TGClient.h. ◆ GetHilite(). Pixel_t TGClient::GetHilite ; (; Pixel_t ; base_color); const. Return pixel value of hilite color based on base_color. ; Definition at line 450 of file TGClient.cxx. ◆ GetListOfPopups(). TList * TGClient::GetListOfPopups ; (; ); const. inline . Definition at line 149 of file TGClient.h. ◆ GetListOfWindows(). THashList * TGClient::GetListOfWindows ; (; ); const. inline . Definition at line 148 of file TGClient.h. ◆ GetMimeTypeList(). TGMimeTypes * TGClient::GetMimeTypeList ; (; ); const. inline . Definition at line 146 of file TGClient.h. ◆ GetPicture() [1/2]. const TGPicture * TGClient::GetPicture ; (; const char * ; name). Get picture from the picture pool. ; Picture must be freed using TGClient::FreePicture(). If picture is not found 0 is returned. ",MatchSource.WIKI,doc/master/classTGClient.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGClient.html
https://root.cern/doc/master/classTGClient.html:5526,Modifiability,inherit,inherited,5526," ; void RemoveUnknownWindowHandler (TGUnknownWindowHandler *h);  Remove handler for unknown (i.e. unregistered) windows. ;  ; void ResetWaitFor (TGWindow *w);  reset waiting ;  ; void SetEditDisabled (Bool_t on=kTRUE);  If on is kTRUE editting/guibuilding is forbidden. ;  ; void SetRoot (TGWindow *root=nullptr);  Sets the current root (i.e. ;  ; void SetStyle (const char *style);  Set the button style (modern or classic). ;  ; void SetStyle (UInt_t newstyle);  ; void SetWaitForWindow (Window_t wid);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UnregisterPopup (TGWindow *w);  Remove a popup menu from the list of popups. ;  ; void UnregisterWindow (TGWindow *w);  Remove a TGWindow from the list of windows. ;  ; void WaitFor (TGWindow *w);  Wait for window to be destroyed. ;  ; void WaitForUnmap (TGWindow *w);  Wait for window to be unmapped. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;",MatchSource.WIKI,doc/master/classTGClient.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGClient.html
https://root.cern/doc/master/classTGClient.html:6923,Modifiability,inherit,inheritance,6923,"pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTGClient.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGClient.html
https://root.cern/doc/master/classTGClient.html:9134,Modifiability,inherit,inherits,9134,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a ",MatchSource.WIKI,doc/master/classTGClient.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGClient.html
https://root.cern/doc/master/classTGClient.html:9251,Modifiability,inherit,inherits,9251,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its p",MatchSource.WIKI,doc/master/classTGClient.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGClient.html
https://root.cern/doc/master/classTGClient.html:13078,Modifiability,inherit,inherited,13078," SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from class cls and all its base-classes. ;  ; Bool_t Connect (const char *signal, const char *receiver_class, void *receiver, const char *slot);  Non-static method is used to connect from the signal of this object to the receiver slot. ;  ; virtual void Connected (const char *);  ; virtual void Destroyed ();  ; Bool_t Disconnect (const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal of this object from slot of receiver. ;  ; virtual void Disconnected (const char *);  ; void Emit (const char *signal);  Activate signal without args. ;  ; template<typename T > ; void Emit (const char *signal, const T &arg);  Activate signal with single paramet",MatchSource.WIKI,doc/master/classTGClient.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGClient.html
https://root.cern/doc/master/classTGClient.html:15349,Modifiability,inherit,inherited,15349,"er to list of signals of this class. ;  ; TList * GetListOfConnections () const;  ; TList * GetListOfSignals () const;  ; virtual Bool_t HasConnection (const char *signal_name) const;  Return true if there is any object connected to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TGClient * Instance ();  Returns global gClient (initialize graphics first, if not already done) ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, vo",MatchSource.WIKI,doc/master/classTGClient.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGClient.html
https://root.cern/doc/master/classTGClient.html:15867,Modifiability,inherit,inherited,15867," const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TGClient * Instance ();  Returns global gClient (initialize graphics first, if not already done) ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullpt",MatchSource.WIKI,doc/master/classTGClient.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGClient.html
https://root.cern/doc/master/classTGClient.html:17333,Modifiability,inherit,inherited,17333,"t of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Protected Member Functions;  TGClient (const TGClient &)=delete;  ; Bool_t DoRedraw ();  Redraw all windows that need redrawing. ;  ; TGClient & operator= (const TGClient &)=delete;  ; Bool_t ProcessIdleEvent ();  Process one idle event. ;  ; Bool_t ProcessOneEvent ();  Process one event. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  . Protected Attributes; Pixel_t fBackColor;  default background color ;  ; Pixel_t fBlack;  black color index ;  ; Colormap_t fDefaultColormap;  default colormap ;  ; TGWindow * fDefaultRoot;  default root window (base window of display) ;  ; TGFontPool * fFontPool;  font pool ;  ; Bool_t fForceRedraw;  redraw widgets as soon as possible ;  ; Pixel_t fForeColor;  default foreground color ;  ; TGGCPool * fGCPool;  graphics context pool ;  ; std::atomic< Bool_t > fGlobalNeedRedraw;  true if at least one window needs to be redrawn ;  ; Pixel_t fHilite;  default highlight color ;  ; TList * fIdleHandlers;  list of idle handlers ;  ; TGMimeTypes * fMimeTypeList;  mimetype list ;  ; TGPicturePool * fPicturePool;  pixmap pool ;  ; TList *",MatchSource.WIKI,doc/master/classTGClient.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGClient.html
https://root.cern/doc/master/classTGClient.html:17544,Modifiability,inherit,inherited,17544,"nnection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Protected Member Functions;  TGClient (const TGClient &)=delete;  ; Bool_t DoRedraw ();  Redraw all windows that need redrawing. ;  ; TGClient & operator= (const TGClient &)=delete;  ; Bool_t ProcessIdleEvent ();  Process one idle event. ;  ; Bool_t ProcessOneEvent ();  Process one event. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  . Protected Attributes; Pixel_t fBackColor;  default background color ;  ; Pixel_t fBlack;  black color index ;  ; Colormap_t fDefaultColormap;  default colormap ;  ; TGWindow * fDefaultRoot;  default root window (base window of display) ;  ; TGFontPool * fFontPool;  font pool ;  ; Bool_t fForceRedraw;  redraw widgets as soon as possible ;  ; Pixel_t fForeColor;  default foreground color ;  ; TGGCPool * fGCPool;  graphics context pool ;  ; std::atomic< Bool_t > fGlobalNeedRedraw;  true if at least one window needs to be redrawn ;  ; Pixel_t fHilite;  default highlight color ;  ; TList * fIdleHandlers;  list of idle handlers ;  ; TGMimeTypes * fMimeTypeList;  mimetype list ;  ; TGPicturePool * fPicturePool;  pixmap pool ;  ; TList * fPlist;  list of popup windows used in HandleMaskEvent() ;  ; TGResourcePool * fResourcePool;  global GUI resource pool ;  ; TGWindow * fRoot;  current root window (changing ro",MatchSource.WIKI,doc/master/classTGClient.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGClient.html
https://root.cern/doc/master/classTGClient.html:19173,Modifiability,inherit,inherited,19173,"mbie ();  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  . Protected Attributes; Pixel_t fBackColor;  default background color ;  ; Pixel_t fBlack;  black color index ;  ; Colormap_t fDefaultColormap;  default colormap ;  ; TGWindow * fDefaultRoot;  default root window (base window of display) ;  ; TGFontPool * fFontPool;  font pool ;  ; Bool_t fForceRedraw;  redraw widgets as soon as possible ;  ; Pixel_t fForeColor;  default foreground color ;  ; TGGCPool * fGCPool;  graphics context pool ;  ; std::atomic< Bool_t > fGlobalNeedRedraw;  true if at least one window needs to be redrawn ;  ; Pixel_t fHilite;  default highlight color ;  ; TList * fIdleHandlers;  list of idle handlers ;  ; TGMimeTypes * fMimeTypeList;  mimetype list ;  ; TGPicturePool * fPicturePool;  pixmap pool ;  ; TList * fPlist;  list of popup windows used in HandleMaskEvent() ;  ; TGResourcePool * fResourcePool;  global GUI resource pool ;  ; TGWindow * fRoot;  current root window (changing root window allows embedding) ;  ; Pixel_t fSelBackColor;  default selection background color ;  ; Pixel_t fSelForeColor;  default selection foreground color ;  ; Pixel_t fShadow;  default shadow color ;  ; UInt_t fStyle;  GUI style (modern or classic) ;  ; TList * fUWHandlers;  list of event handlers for unknown windows ;  ; EGEventType fWaitForEvent;  event to wait for ;  ; Window_t fWaitForWindow;  window in which to wait for event ;  ; Pixel_t fWhite;  white color index ;  ; THashList * fWlist;  list of frames ;  ; Int_t fXfd;  file descriptor of connection to server ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Friends; class TGCocoa;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0",MatchSource.WIKI,doc/master/classTGClient.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGClient.html
https://root.cern/doc/master/classTGClient.html:19428,Modifiability,inherit,inherited,19428,"lobal GUI resource pool ;  ; TGWindow * fRoot;  current root window (changing root window allows embedding) ;  ; Pixel_t fSelBackColor;  default selection background color ;  ; Pixel_t fSelForeColor;  default selection foreground color ;  ; Pixel_t fShadow;  default shadow color ;  ; UInt_t fStyle;  GUI style (modern or classic) ;  ; TList * fUWHandlers;  list of event handlers for unknown windows ;  ; EGEventType fWaitForEvent;  event to wait for ;  ; Window_t fWaitForWindow;  window in which to wait for event ;  ; Pixel_t fWhite;  white color index ;  ; THashList * fWlist;  list of frames ;  ; Int_t fXfd;  file descriptor of connection to server ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Friends; class TGCocoa;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks ",MatchSource.WIKI,doc/master/classTGClient.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGClient.html
https://root.cern/doc/master/classTGClient.html:20069,Modifiability,inherit,inherited,20069,"ions;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Friends; class TGCocoa;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGClient.h>. Inheritance diagram for TGClient:. This browser is not ",MatchSource.WIKI,doc/master/classTGClient.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGClient.html
https://root.cern/doc/master/classTGClient.html:20175,Modifiability,inherit,inherited,20175,"ions;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Friends; class TGCocoa;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGClient.h>. Inheritance diagram for TGClient:. This browser is not ",MatchSource.WIKI,doc/master/classTGClient.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGClient.html
https://root.cern/doc/master/classTGClient.html:21031,Modifiability,inherit,inherited,21031,"inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGClient.h>. Inheritance diagram for TGClient:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGClient() [1/2]. TGClient::TGClient ; (; const TGClient & ; ). protecteddelete . ◆ TGClient() [2/2]. TGClient::TGClient ; (; const char * ; dpyName = nullptr). Create a connection with the display sever on host dpyName and setup the complete GUI system, i.e., graphics contexts, fonts, etc. ; for all widgets. ; Definition at line 128 of file TGClient.cxx. ◆ ~TGClient(). TGClient::~TGClient ; (; ). override . Closing down client: cleanup and close X connection. ; Definition at line 622 of file TGClient.cxx. Member Function Documentation. ◆ AddIdleHandler(). void TGClient::AddIdleHandler ; (; TGIdleHandler * ; h). Add handler for idle events. ; Definition at line 573 of file TGClient.cxx. ◆ AddUnknownWindowHandler(). void ",MatchSource.WIKI,doc/master/classTGClient.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGClient.html
https://root.cern/doc/master/classTGClient.html:23126,Performance,queue,queue,23126,"owHandler * ; h). Add handler for unknown (i.e. unregistered) windows. ; Definition at line 552 of file TGClient.cxx. ◆ CancelRedraw(). void TGClient::CancelRedraw ; (; TGWindow * ; w). Definition at line 386 of file TGClient.cxx. ◆ Class(). static TClass * TGClient::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TGClient::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TGClient::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 153 of file TGClient.h. ◆ DeclFileName(). static const char * TGClient::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 153 of file TGClient.h. ◆ DoRedraw(). Bool_t TGClient::DoRedraw ; (; ). protected . Redraw all windows that need redrawing. ; Returns kFALSE if no redraw was needed, kTRUE otherwise. Only redraw the application's windows when the event queue does not contain expose event anymore. ; Definition at line 795 of file TGClient.cxx. ◆ ForceRedraw(). void TGClient::ForceRedraw ; (; ). inline . Definition at line 98 of file TGClient.h. ◆ FreeColor(). void TGClient::FreeColor ; (; Pixel_t ; color); const. Free color. ; Definition at line 504 of file TGClient.cxx. ◆ FreeFont(). void TGClient::FreeFont ; (; const TGFont * ; font). Free a font. ; Definition at line 364 of file TGClient.cxx. ◆ FreeGC() [1/2]. void TGClient::FreeGC ; (; const TGGC * ; gc). Free a graphics context. ; Definition at line 328 of file TGClient.cxx. ◆ FreeGC() [2/2]. void TGClient::FreeGC ; (; GContext_t ; gc). Free a graphics context. ; Definition at line 336 of file TGClient.cxx. ◆ FreePicture(). void TGClient::FreePicture ; (; const TGPicture * ; pic). Free picture resource. ; Definition at line 308 of file TGClient.cxx. ◆ GetColorByName(). Bool_t TGClient::GetColorByName ; (; const char * ; name, . Pixel_t & ; pixel . ); const. Get a color by na",MatchSource.WIKI,doc/master/classTGClient.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGClient.html
https://root.cern/doc/master/classTGClient.html:25824,Performance,load,loaded,25824,"isplayWidth(). UInt_t TGClient::GetDisplayWidth ; (; ); const. Get display width. ; Definition at line 262 of file TGClient.cxx. ◆ GetFont() [1/2]. TGFont * TGClient::GetFont ; (; const char * ; font, . Bool_t ; fixedDefault = kTRUE . ). Get a font from the font pool. ; Fonts must be freed via TGClient::FreeFont(). Returns 0 in case of error or if font does not exist. If fixedDefault is false the ""fixed"" font will not be substituted as fallback when the asked for font does not exist. ; Definition at line 348 of file TGClient.cxx. ◆ GetFont() [2/2]. TGFont * TGClient::GetFont ; (; const TGFont * ; font). Get again specified font. Will increase its usage count. ; Definition at line 356 of file TGClient.cxx. ◆ GetFontByName(). FontStruct_t TGClient::GetFontByName ; (; const char * ; name, . Bool_t ; fixedDefault = kTRUE . ); const. Get a font by name. ; If font is not found, fixed font is returned, if fixed font also does not exist return 0 and print error. The loaded font needs to be freed using TVirtualX::DeleteFont(). If fixedDefault is false the ""fixed"" font will not be substituted as fallback when the asked for font does not exist. ; Definition at line 425 of file TGClient.cxx. ◆ GetFontPool(). TGFontPool * TGClient::GetFontPool ; (; ); const. inline . Definition at line 136 of file TGClient.h. ◆ GetGC(). TGGC * TGClient::GetGC ; (; GCValues_t * ; values, . Bool_t ; rw = kFALSE . ). Get graphics context from the gc pool. ; Context must be freed via TGClient::FreeGC(). If rw is true a new read/write-able GC is returned, otherwise a shared read-only context is returned. For historical reasons it is also possible to create directly a TGGC object, but it is advised to use this new interface only. ; Definition at line 320 of file TGClient.cxx. ◆ GetGCPool(). TGGCPool * TGClient::GetGCPool ; (; ); const. inline . Definition at line 131 of file TGClient.h. ◆ GetHilite(). Pixel_t TGClient::GetHilite ; (; Pixel_t ; base_color); const. Return pixel value of hilite color base",MatchSource.WIKI,doc/master/classTGClient.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGClient.html
https://root.cern/doc/master/classTGClient.html:8765,Security,hash,hash,8765," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t",MatchSource.WIKI,doc/master/classTGClient.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGClient.html
https://root.cern/doc/master/classTGClient.html:23149,Security,expose,expose,23149,"owHandler * ; h). Add handler for unknown (i.e. unregistered) windows. ; Definition at line 552 of file TGClient.cxx. ◆ CancelRedraw(). void TGClient::CancelRedraw ; (; TGWindow * ; w). Definition at line 386 of file TGClient.cxx. ◆ Class(). static TClass * TGClient::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TGClient::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TGClient::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 153 of file TGClient.h. ◆ DeclFileName(). static const char * TGClient::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 153 of file TGClient.h. ◆ DoRedraw(). Bool_t TGClient::DoRedraw ; (; ). protected . Redraw all windows that need redrawing. ; Returns kFALSE if no redraw was needed, kTRUE otherwise. Only redraw the application's windows when the event queue does not contain expose event anymore. ; Definition at line 795 of file TGClient.cxx. ◆ ForceRedraw(). void TGClient::ForceRedraw ; (; ). inline . Definition at line 98 of file TGClient.h. ◆ FreeColor(). void TGClient::FreeColor ; (; Pixel_t ; color); const. Free color. ; Definition at line 504 of file TGClient.cxx. ◆ FreeFont(). void TGClient::FreeFont ; (; const TGFont * ; font). Free a font. ; Definition at line 364 of file TGClient.cxx. ◆ FreeGC() [1/2]. void TGClient::FreeGC ; (; const TGGC * ; gc). Free a graphics context. ; Definition at line 328 of file TGClient.cxx. ◆ FreeGC() [2/2]. void TGClient::FreeGC ; (; GContext_t ; gc). Free a graphics context. ; Definition at line 336 of file TGClient.cxx. ◆ FreePicture(). void TGClient::FreePicture ; (; const TGPicture * ; pic). Free picture resource. ; Definition at line 308 of file TGClient.cxx. ◆ GetColorByName(). Bool_t TGClient::GetColorByName ; (; const char * ; name, . Pixel_t & ; pixel . ); const. Get a color by na",MatchSource.WIKI,doc/master/classTGClient.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGClient.html
https://root.cern/doc/master/classTGCocoa.html:1875,Availability,mask,mask,1875,"e TGCocoa.h. Public Member Functions;  TGCocoa ();  ;  TGCocoa (const char *name, const char *title);  ;  ~TGCocoa () override;  ; Int_t AddPixmap (ULong_t pixid, UInt_t w, UInt_t h) override;  Registers a pixmap created by TGLManager as a ROOT pixmap. ;  ; Int_t AddWindow (ULong_t qwid, UInt_t w, UInt_t h) override;  Registers a window created by Qt as a ROOT window. ;  ; Bool_t AllocColor (Colormap_t cmap, ColorStruct_t &color) override;  Allocates a read-only colormap entry corresponding to the closest RGB value supported by the hardware. ;  ; void Bell (Int_t percent) override;  Sets the sound bell. Percent is loudness from -100% to 100%. ;  ; void ChangeActivePointerGrab (Window_t, UInt_t, Cursor_t) override;  Changes the specified dynamic parameters if the pointer is actively grabbed by the client and if the specified time is no earlier than the last-pointer-grab time and no later than the current X server time. ;  ; void ChangeGC (GContext_t gc, GCValues_t *gval) override;  Changes the components specified by the mask in gval for the specified GC. ;  ; void ChangeProperties (Window_t wid, Atom_t property, Atom_t type, Int_t format, UChar_t *data, Int_t len) override;  Alters the property for the specified window and causes the X server to generate a PropertyNotify event on that window. ;  ; void ChangeProperty (Window_t wid, Atom_t property, Atom_t type, UChar_t *data, Int_t len) override;  Alters the property for the specified window and causes the X server to generate a PropertyNotify event on that window. ;  ; void ChangeWindowAttributes (Window_t wid, SetWindowAttributes_t *attr) override;  Changes the attributes of the specified window ""id"" according the values provided in ""attr"". ;  ; Bool_t CheckEvent (Window_t wid, EGEventType type, Event_t &ev) override;  Check if there is for window ""id"" an event of type ""type"". ;  ; void ClearArea (Window_t wid, Int_t x, Int_t y, UInt_t w, UInt_t h) override;  Paints a rectangular area in the specified window ""id"" a",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:4307,Availability,mask,mask,4307,"verride;  Closes connection to display server and destroys all windows. ;  ; void ClosePixmap () override;  Deletes current pixmap. ;  ; void CloseWindow () override;  Deletes current window. ;  ; void CocoaDrawOFF ();  ; void CocoaDrawON ();  ; void ConvertPrimarySelection (Window_t wid, Atom_t clipboard, Time_t when) override;  Causes a SelectionRequest event to be sent to the current primary selection owner. ;  ; void ConvertSelection (Window_t, Atom_t &, Atom_t &, Atom_t &, Time_t &) override;  Requests that the specified selection be converted to the specified target type. ;  ; void CopyArea (Drawable_t src, Drawable_t dst, GContext_t gc, Int_t srcX, Int_t srcY, UInt_t width, UInt_t height, Int_t dstX, Int_t dstY) override;  Combines the specified rectangle of ""src"" with the specified rectangle of ""dest"" according to the ""gc"". ;  ; void CopyAreaAux (Drawable_t src, Drawable_t dst, const GCValues_t &gc, Int_t srcX, Int_t srcY, UInt_t width, UInt_t height, Int_t dstX, Int_t dstY);  ; void CopyGC (GContext_t org, GContext_t dest, Mask_t mask) override;  Copies the specified components from the source GC ""org"" to the destination GC ""dest"". ;  ; void CopyPixmap (Int_t wid, Int_t xpos, Int_t ypos) override;  Copies the pixmap ""wid"" at the position [xpos,ypos] in the current window. ;  ; Pixmap_t CreateBitmap (Drawable_t wid, const char *bitmap, UInt_t width, UInt_t height) override;  Creates a bitmap (i.e. ;  ; Cursor_t CreateCursor (ECursor cursor) override;  Creates the specified cursor. ;  ; GContext_t CreateGC (Drawable_t wid, GCValues_t *gval) override;  Creates a graphics context using the provided GCValues_t *gval structure. ;  ; Drawable_t CreateImage (UInt_t width, UInt_t height) override;  Allocates the memory needed for an drawable. ;  ; void CreateOpenGLContext (Int_t wid) override;  Creates OpenGL context for window ""wid"". ;  ; Handle_t CreateOpenGLContext (Window_t windowID, Handle_t sharedContext) override;  Creates OpenGL context for window ""windowID"".",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:9219,Availability,mask,mask,9219," const char * DisplayName (const char *) override;  Returns hostname on which the display is opened. ;  ; void DrawLine (Drawable_t wid, GContext_t gc, Int_t x1, Int_t y1, Int_t x2, Int_t y2) override;  Uses the components of the specified GC to draw a line between the specified set of points (x1, y1) and (x2, y2). ;  ; void DrawLineAux (Drawable_t wid, const GCValues_t &gcVals, Int_t x1, Int_t y1, Int_t x2, Int_t y2);  ; void DrawRectangle (Drawable_t wid, GContext_t gc, Int_t x, Int_t y, UInt_t w, UInt_t h) override;  Draws rectangle outlines of [x,y] [x+w,y] [x+w,y+h] [x,y+h]. ;  ; void DrawRectangleAux (Drawable_t wid, const GCValues_t &gcVals, Int_t x, Int_t y, UInt_t w, UInt_t h);  ; void DrawSegments (Drawable_t wid, GContext_t gc, Segment_t *segments, Int_t nSegments) override;  Draws multiple line segments. ;  ; void DrawSegmentsAux (Drawable_t wid, const GCValues_t &gcVals, const Segment_t *segments, Int_t nSegments);  ; void DrawString (Drawable_t wid, GContext_t gc, Int_t x, Int_t y, const char *s, Int_t len) override;  Each character image, as defined by the font in the GC, is treated as an additional mask for a fill operation on the drawable. ;  ; void DrawStringAux (Drawable_t wid, const GCValues_t &gc, Int_t x, Int_t y, const char *s, Int_t len);  ; Bool_t EmptyRegion (Region_t reg) override;  Returns kTRUE if the region reg is empty. ;  ; Bool_t EqualRegion (Region_t rega, Region_t regb) override;  Returns kTRUE if the two regions have the same offset, size, and shape. ;  ; Int_t EventsPending () override;  Returns the number of events that have been received from the X server but have not been removed from the event queue. ;  ; UInt_t ExecCommand (TGWin32Command *code) override;  Executes the command ""code"" coming from the other threads (Win32) ;  ; void FillPolygon (Window_t wid, GContext_t gc, Point_t *polygon, Int_t nPoints) override;  Fills the region closed by the specified path. ;  ; void FillPolygonAux (Window_t wid, const GCValues_t &gcVals,",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:12803,Availability,mask,mask,12803,"override;  Returns depth of screen (number of bit planes). ;  ; Display_t GetDisplay () const override;  Returns handle to display (might be useful in some cases where direct X11 manipulation outside of TVirtualX is needed, e.g. ;  ; ROOT::MacOSX::X11::Rectangle GetDisplayGeometry () const;  ; Int_t GetDoubleBuffer (Int_t wid) override;  Queries the double buffer value for the window ""wid"". ;  ; ROOT::MacOSX::X11::EventTranslator * GetEventTranslator () const;  ; FontH_t GetFontHandle (FontStruct_t fs) override;  Returns the font handle of the specified font structure ""fs"". ;  ; void GetFontProperties (FontStruct_t font, Int_t &max_ascent, Int_t &max_descent) override;  Returns the font properties. ;  ; FontStruct_t GetFontStruct (FontH_t fh) override;  Retrieves the associated font structure of the font specified font handle ""fh"". ;  ; void GetGCValues (GContext_t gc, GCValues_t &gval) override;  Returns the components specified by the mask in ""gval"" for the specified GC ""gc"" (see also the GCValues_t structure) ;  ; void GetGeometry (Int_t wid, Int_t &x, Int_t &y, UInt_t &w, UInt_t &h) override;  Returns position and size of window ""wid"". ;  ; void GetImageSize (Drawable_t wid, UInt_t &width, UInt_t &height) override;  Returns the width and height of the image id. ;  ; Window_t GetInputFocus () override;  Returns the window id of the window having the input focus. ;  ; Handle_t GetNativeEvent () const override;  Returns the current native event handle. ;  ; Double_t GetOpenGLScalingFactor () override;  On a HiDPI resolution it can be > 1., this means glViewport should use scaled width and height. ;  ; Window_t GetParent (Window_t wid) const override;  Returns the parent of the window ""id"". ;  ; void GetPasteBuffer (Window_t wid, Atom_t atom, TString &text, Int_t &nchar, Bool_t del) override;  Gets contents of the paste buffer ""atom"" into the string ""text"". ;  ; ULong_t GetPixel (Color_t cindex) override;  Returns pixel value associated to specified ROOT color numbe",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:20135,Availability,mask,mask,20135,"d colormap. ;  ; Bool_t PointInRegion (Int_t x, Int_t y, Region_t reg) override;  Returns kTRUE if the point [x, y] is contained in the region reg. ;  ; Region_t PolygonRegion (Point_t *points, Int_t np, Bool_t winding) override;  Returns a region for the polygon defined by the points array. ;  ; void PutImage (Drawable_t wid, GContext_t gc, Drawable_t img, Int_t dx, Int_t dy, Int_t x, Int_t y, UInt_t w, UInt_t h) override;  Combines an image with a rectangle of the specified drawable. ;  ; void PutPixel (Drawable_t wid, Int_t x, Int_t y, ULong_t pixel) override;  Overwrites the pixel in the image with the specified pixel value. ;  ; void QueryColor (Colormap_t cmap, ColorStruct_t &color) override;  Returns the current RGB value for the pixel in the ""color"" structure. ;  ; void QueryPointer (Int_t &x, Int_t &y) override;  Returns the pointer position. ;  ; void QueryPointer (Window_t wid, Window_t &rootw, Window_t &childw, Int_t &root_x, Int_t &root_y, Int_t &win_x, Int_t &win_y, UInt_t &mask) override;  Returns the root window the pointer is logically on and the pointer coordinates relative to the root window's origin. ;  ; void RaiseWindow (Window_t wid) override;  Raises the specified window to the top of the stack so that no sibling window obscures it. ;  ; Pixmap_t ReadGIF (Int_t x0, Int_t y0, const char *file, Window_t wid) override;  If id is NULL - loads the specified gif file at position [x0,y0] in the current window. ;  ; Bool_t ReadPictureDataFromFile (const char *filename, char ***ret_data) override;  Reads picture data from file ""filename"" and store it in ""ret_data"". ;  ; void ReconfigureDisplay ();  ; void RemoveWindow (ULong_t qwid) override;  Removes the created by Qt window ""qwid"". ;  ; void ReparentChild (Window_t wid, Window_t pid, Int_t x, Int_t y);  ; void ReparentTopLevel (Window_t wid, Window_t pid, Int_t x, Int_t y);  ; void ReparentWindow (Window_t wid, Window_t pid, Int_t x, Int_t y) override;  If the specified window is mapped, ReparentWin",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:24173,Availability,mask,mask,24173," ;  ; void SetCursor (Int_t win, ECursor cursor) override;  The cursor ""cursor"" will be used when the pointer is in the window ""wid"". ;  ; void SetCursor (Window_t wid, Cursor_t curid) override;  Sets the cursor ""curid"" to be used when the pointer is in the window ""id"". ;  ; void SetDashes (GContext_t gc, Int_t offset, const char *dash_list, Int_t n) override;  Sets the dash-offset and dash-list attributes for dashed line styles in the specified GC. ;  ; void SetDNDAware (Window_t, Atom_t *) override;  Add XdndAware property and the list of drag and drop types to the Window win. ;  ; void SetDoubleBuffer (Int_t wid, Int_t mode) override;  Sets the double buffer on/off on the window ""wid"". ;  ; void SetDoubleBufferOFF () override;  Turns double buffer mode off. ;  ; void SetDoubleBufferON () override;  Turns double buffer mode on. ;  ; void SetDrawMode (EDrawMode mode) override;  Sets the drawing mode. ;  ; void SetForeground (GContext_t gc, ULong_t foreground) override;  Sets the foreground color for the specified GC (shortcut for ChangeGC with only foreground mask set). ;  ; void SetIconName (Window_t wid, char *name) override;  Sets the window icon name. ;  ; void SetIconPixmap (Window_t wid, Pixmap_t pix) override;  Sets the icon name pixmap. ;  ; void SetInputFocus (Window_t wid) override;  Changes the input focus to specified window ""id"". ;  ; void SetKeyAutoRepeat (Bool_t on=kTRUE) override;  Turns key auto repeat on (kTRUE) or off (kFALSE). ;  ; void SetMWMHints (Window_t winID, UInt_t value, UInt_t decorators, UInt_t inputMode) override;  Sets decoration style. ;  ; void SetPrimarySelectionOwner (Window_t wid) override;  Makes the window ""id"" the current owner of the primary selection. ;  ; void SetRGB (Int_t cindex, Float_t r, Float_t g, Float_t b) override;  Sets color intensities the specified color index ""cindex"". ;  ; Bool_t SetSelectionOwner (Window_t windowID, Atom_t &selectionID) override;  Changes the owner and last-change time for the specified sele",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:26580,Availability,mask,mask,26580," the window ""id"" to the specified pixmap ""pxm"". ;  ; void SetWindowName (Window_t wid, char *name) override;  Sets the window name. ;  ; void SetWMPosition (Window_t winID, Int_t x, Int_t y) override;  Tells the window manager the desired position [x,y] of window ""id"". ;  ; void SetWMSize (Window_t winID, UInt_t w, UInt_t h) override;  Tells window manager the desired size of window ""id"". ;  ; void SetWMSizeHints (Window_t winID, UInt_t wMin, UInt_t hMin, UInt_t wMax, UInt_t hMax, UInt_t wInc, UInt_t hInc) override;  Gives the window manager minimum and maximum size hints of the window ""id"". ;  ; void SetWMState (Window_t winID, EInitialState state) override;  Sets the initial state of the window ""id"": either kNormalState or kIconicState. ;  ; void SetWMTransientHint (Window_t winID, Window_t mainWinID) override;  Tells window manager that the window ""id"" is a transient window of the window ""main_id"". ;  ; void ShapeCombineMask (Window_t wid, Int_t x, Int_t y, Pixmap_t mask) override;  The Non-rectangular Window Shape Extension adds non-rectangular windows to the System. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void SubtractRegion (Region_t rega, Region_t regb, Region_t result) override;  Subtracts regb from rega and stores the results in result. ;  ; Int_t SupportsExtension (const char *extensionName) const override;  Returns 1 if window system server supports extension given by the argument, returns 0 in case extension is not supported and returns -1 in case of error (like server not initialized). ;  ; void Sync (Int_t mode) override;  Set synchronisation on or off. ;  ; Int_t TextWidth (FontStruct_t font, const char *s, Int_t len) override;  Return length of the string ""s"" in pixels. Size depends on font. ;  ; void TranslateCoordinates (Window_t src, Window_t dest, Int_t src_x, Int_t src_y, Int_t &dest_x, Int_t &dest_y, Window_t &child) override;  Translates c",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:27190,Availability,error,error,27190,"nt_t hInc) override;  Gives the window manager minimum and maximum size hints of the window ""id"". ;  ; void SetWMState (Window_t winID, EInitialState state) override;  Sets the initial state of the window ""id"": either kNormalState or kIconicState. ;  ; void SetWMTransientHint (Window_t winID, Window_t mainWinID) override;  Tells window manager that the window ""id"" is a transient window of the window ""main_id"". ;  ; void ShapeCombineMask (Window_t wid, Int_t x, Int_t y, Pixmap_t mask) override;  The Non-rectangular Window Shape Extension adds non-rectangular windows to the System. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void SubtractRegion (Region_t rega, Region_t regb, Region_t result) override;  Subtracts regb from rega and stores the results in result. ;  ; Int_t SupportsExtension (const char *extensionName) const override;  Returns 1 if window system server supports extension given by the argument, returns 0 in case extension is not supported and returns -1 in case of error (like server not initialized). ;  ; void Sync (Int_t mode) override;  Set synchronisation on or off. ;  ; Int_t TextWidth (FontStruct_t font, const char *s, Int_t len) override;  Return length of the string ""s"" in pixels. Size depends on font. ;  ; void TranslateCoordinates (Window_t src, Window_t dest, Int_t src_x, Int_t src_y, Int_t &dest_x, Int_t &dest_y, Window_t &child) override;  Translates coordinates in one window to the coordinate space of another window. ;  ; void UnionRectWithRegion (Rectangle_t *rect, Region_t src, Region_t dest) override;  Updates the destination region from a union of the specified rectangle and the specified source region. ;  ; void UnionRegion (Region_t rega, Region_t regb, Region_t result) override;  Computes the union of two regions. ;  ; void UnmapWindow (Window_t wid) override;  Unmaps the specified window ""id"". ;  ; void Update (Int_t mode) override; ",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:35950,Availability,error,error,35950,"ject. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:36039,Availability,error,error,36039,"ecord whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual ",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:36194,Availability,error,error,36194,"Name () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute ",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:36491,Availability,error,error,36491,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:40575,Availability,error,error,40575,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TAttLine;  TAttLine ();  AttLine default constructor. ;  ;  TAttLine (Color_t lcolor, Style_t lstyle, Width_t lwidth);  AttLine normal constructor. ;  ; virtual ~TAttLine ();  AttLine destructor. ;  ; void Copy (TAttLine &attline) const;  Copy this line attributes to a new TAttLine. ;  ; Int_t ",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:54602,Availability,mask,mask,54602," default. Let system think we could allocate color.; Parameters. [in]cmapthe colormap ; [in]colorspecifies and returns the values actually used in the cmap . Reimplemented from TVirtualX.; Definition at line 2917 of file TGCocoa.mm. ◆ Bell(). void TGCocoa::Bell ; (; Int_t ; percent). overridevirtual . Sets the sound bell. Percent is loudness from -100% to 100%. ; Reimplemented from TVirtualX.; Definition at line 4264 of file TGCocoa.mm. ◆ ChangeActivePointerGrab(). void TGCocoa::ChangeActivePointerGrab ; (; Window_t ; , . UInt_t ; , . Cursor_t ;  . ). overridevirtual . Changes the specified dynamic parameters if the pointer is actively grabbed by the client and if the specified time is no earlier than the last-pointer-grab time and no later than the current X server time. ; Reimplemented from TVirtualX.; Definition at line 2699 of file TGCocoa.mm. ◆ ChangeGC(). void TGCocoa::ChangeGC ; (; GContext_t ; gc, . GCValues_t * ; gval . ). overridevirtual . Changes the components specified by the mask in gval for the specified GC. ; Parameters. [in]gcspecifies the GC to be changed ; [in]gvalspecifies the mask and the values to be set. (see also the GCValues_t structure) ; Reimplemented from TVirtualX.; Definition at line 3012 of file TGCocoa.mm. ◆ ChangeProperties(). void TGCocoa::ChangeProperties ; (; Window_t ; id, . Atom_t ; property, . Atom_t ; type, . Int_t ; format, . UChar_t * ; data, . Int_t ; len . ). overridevirtual . Alters the property for the specified window and causes the X server to generate a PropertyNotify event on that window. ; Reimplemented from TVirtualX.; Definition at line 3859 of file TGCocoa.mm. ◆ ChangeProperty(). void TGCocoa::ChangeProperty ; (; Window_t ; id, . Atom_t ; property, . Atom_t ; type, . UChar_t * ; data, . Int_t ; len . ). overridevirtual . Alters the property for the specified window and causes the X server to generate a PropertyNotify event on that window. ; Parameters. [in]idthe window whose property you want to change ; [in]prope",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:54712,Availability,mask,mask,54712,"pecifies and returns the values actually used in the cmap . Reimplemented from TVirtualX.; Definition at line 2917 of file TGCocoa.mm. ◆ Bell(). void TGCocoa::Bell ; (; Int_t ; percent). overridevirtual . Sets the sound bell. Percent is loudness from -100% to 100%. ; Reimplemented from TVirtualX.; Definition at line 4264 of file TGCocoa.mm. ◆ ChangeActivePointerGrab(). void TGCocoa::ChangeActivePointerGrab ; (; Window_t ; , . UInt_t ; , . Cursor_t ;  . ). overridevirtual . Changes the specified dynamic parameters if the pointer is actively grabbed by the client and if the specified time is no earlier than the last-pointer-grab time and no later than the current X server time. ; Reimplemented from TVirtualX.; Definition at line 2699 of file TGCocoa.mm. ◆ ChangeGC(). void TGCocoa::ChangeGC ; (; GContext_t ; gc, . GCValues_t * ; gval . ). overridevirtual . Changes the components specified by the mask in gval for the specified GC. ; Parameters. [in]gcspecifies the GC to be changed ; [in]gvalspecifies the mask and the values to be set. (see also the GCValues_t structure) ; Reimplemented from TVirtualX.; Definition at line 3012 of file TGCocoa.mm. ◆ ChangeProperties(). void TGCocoa::ChangeProperties ; (; Window_t ; id, . Atom_t ; property, . Atom_t ; type, . Int_t ; format, . UChar_t * ; data, . Int_t ; len . ). overridevirtual . Alters the property for the specified window and causes the X server to generate a PropertyNotify event on that window. ; Reimplemented from TVirtualX.; Definition at line 3859 of file TGCocoa.mm. ◆ ChangeProperty(). void TGCocoa::ChangeProperty ; (; Window_t ; id, . Atom_t ; property, . Atom_t ; type, . UChar_t * ; data, . Int_t ; len . ). overridevirtual . Alters the property for the specified window and causes the X server to generate a PropertyNotify event on that window. ; Parameters. [in]idthe window whose property you want to change ; [in]propertyspecifies the property name ; [in]typethe type of the property; the X server does not interpre",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:56188,Availability,mask,mask,56188,".mm. ◆ ChangeProperty(). void TGCocoa::ChangeProperty ; (; Window_t ; id, . Atom_t ; property, . Atom_t ; type, . UChar_t * ; data, . Int_t ; len . ). overridevirtual . Alters the property for the specified window and causes the X server to generate a PropertyNotify event on that window. ; Parameters. [in]idthe window whose property you want to change ; [in]propertyspecifies the property name ; [in]typethe type of the property; the X server does not interpret the type but simply passes it back to an application that might ask about the window properties ; [in]datathe property data ; [in]lenthe length of the specified data format . Reimplemented from TVirtualX.; Definition at line 3816 of file TGCocoa.mm. ◆ ChangeWindowAttributes(). void TGCocoa::ChangeWindowAttributes ; (; Window_t ; id, . SetWindowAttributes_t * ; attr . ). overridevirtual . Changes the attributes of the specified window ""id"" according the values provided in ""attr"". ; The mask data member of ""attr"" specifies which window attributes are defined in the attributes argument. This mask is the bitwise inclusive OR of the valid attribute mask bits; if it is zero, the attributes are ignored. ; Reimplemented from TVirtualX.; Definition at line 1006 of file TGCocoa.mm. ◆ CheckEvent(). Bool_t TGCocoa::CheckEvent ; (; Window_t ; id, . EGEventType ; type, . Event_t & ; ev . ). overridevirtual . Check if there is for window ""id"" an event of type ""type"". ; If there is it fills in the event structure and return true. If no such event return false. ; Reimplemented from TVirtualX.; Definition at line 3547 of file TGCocoa.mm. ◆ Class(). static TClass * TGCocoa::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TGCocoa::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TGCocoa::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 476 of file TGCocoa.h. ◆ ClearArea(). void TGCocoa",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:56294,Availability,mask,mask,56294," . UChar_t * ; data, . Int_t ; len . ). overridevirtual . Alters the property for the specified window and causes the X server to generate a PropertyNotify event on that window. ; Parameters. [in]idthe window whose property you want to change ; [in]propertyspecifies the property name ; [in]typethe type of the property; the X server does not interpret the type but simply passes it back to an application that might ask about the window properties ; [in]datathe property data ; [in]lenthe length of the specified data format . Reimplemented from TVirtualX.; Definition at line 3816 of file TGCocoa.mm. ◆ ChangeWindowAttributes(). void TGCocoa::ChangeWindowAttributes ; (; Window_t ; id, . SetWindowAttributes_t * ; attr . ). overridevirtual . Changes the attributes of the specified window ""id"" according the values provided in ""attr"". ; The mask data member of ""attr"" specifies which window attributes are defined in the attributes argument. This mask is the bitwise inclusive OR of the valid attribute mask bits; if it is zero, the attributes are ignored. ; Reimplemented from TVirtualX.; Definition at line 1006 of file TGCocoa.mm. ◆ CheckEvent(). Bool_t TGCocoa::CheckEvent ; (; Window_t ; id, . EGEventType ; type, . Event_t & ; ev . ). overridevirtual . Check if there is for window ""id"" an event of type ""type"". ; If there is it fills in the event structure and return true. If no such event return false. ; Reimplemented from TVirtualX.; Definition at line 3547 of file TGCocoa.mm. ◆ Class(). static TClass * TGCocoa::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TGCocoa::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TGCocoa::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 476 of file TGCocoa.h. ◆ ClearArea(). void TGCocoa::ClearArea ; (; Window_t ; id, . Int_t ; x, . Int_t ; y, . UInt_t ; w, . UInt_t ; h . ). overridevirtual . Pai",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:56350,Availability,mask,mask,56350," . UChar_t * ; data, . Int_t ; len . ). overridevirtual . Alters the property for the specified window and causes the X server to generate a PropertyNotify event on that window. ; Parameters. [in]idthe window whose property you want to change ; [in]propertyspecifies the property name ; [in]typethe type of the property; the X server does not interpret the type but simply passes it back to an application that might ask about the window properties ; [in]datathe property data ; [in]lenthe length of the specified data format . Reimplemented from TVirtualX.; Definition at line 3816 of file TGCocoa.mm. ◆ ChangeWindowAttributes(). void TGCocoa::ChangeWindowAttributes ; (; Window_t ; id, . SetWindowAttributes_t * ; attr . ). overridevirtual . Changes the attributes of the specified window ""id"" according the values provided in ""attr"". ; The mask data member of ""attr"" specifies which window attributes are defined in the attributes argument. This mask is the bitwise inclusive OR of the valid attribute mask bits; if it is zero, the attributes are ignored. ; Reimplemented from TVirtualX.; Definition at line 1006 of file TGCocoa.mm. ◆ CheckEvent(). Bool_t TGCocoa::CheckEvent ; (; Window_t ; id, . EGEventType ; type, . Event_t & ; ev . ). overridevirtual . Check if there is for window ""id"" an event of type ""type"". ; If there is it fills in the event structure and return true. If no such event return false. ; Reimplemented from TVirtualX.; Definition at line 3547 of file TGCocoa.mm. ◆ Class(). static TClass * TGCocoa::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TGCocoa::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TGCocoa::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 476 of file TGCocoa.h. ◆ ClearArea(). void TGCocoa::ClearArea ; (; Window_t ; id, . Int_t ; x, . Int_t ; y, . UInt_t ; w, . UInt_t ; h . ). overridevirtual . Pai",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:60927,Availability,mask,mask,60927,"  . ). overridevirtual . Requests that the specified selection be converted to the specified target type. ; Reimplemented from TVirtualX.; Definition at line 3683 of file TGCocoa.mm. ◆ CopyArea(). void TGCocoa::CopyArea ; (; Drawable_t ; src, . Drawable_t ; dest, . GContext_t ; gc, . Int_t ; src_x, . Int_t ; src_y, . UInt_t ; width, . UInt_t ; height, . Int_t ; dest_x, . Int_t ; dest_y . ). overridevirtual . Combines the specified rectangle of ""src"" with the specified rectangle of ""dest"" according to the ""gc"". ; Parameters. [in]srcsource rectangle ; [in]destdestination rectangle ; [in]gcgraphics context ; [in]src_x,src_yspecify the x and y coordinates, which are relative to the origin of the source rectangle and specify upper-left corner. ; [in]width,heightthe width and height, which are the dimensions of both the source and destination rectangles ; [in]dest_x,dest_yspecify the upper-left corner of the destination rectangle. GC components in use: function, plane-mask, subwindow-mode, graphics-exposure, clip-x-origin, clip-y-origin, and clip-mask. (see also the GCValues_t structure) ; Reimplemented from TVirtualX.; Definition at line 2138 of file TGCocoa.mm. ◆ CopyAreaAux(). void TGCocoa::CopyAreaAux ; (; Drawable_t ; src, . Drawable_t ; dst, . const GCValues_t & ; gc, . Int_t ; srcX, . Int_t ; srcY, . UInt_t ; width, . UInt_t ; height, . Int_t ; dstX, . Int_t ; dstY . ). Definition at line 2101 of file TGCocoa.mm. ◆ CopyGC(). void TGCocoa::CopyGC ; (; GContext_t ; org, . GContext_t ; dest, . Mask_t ; mask . ). overridevirtual . Copies the specified components from the source GC ""org"" to the destination GC ""dest"". ; The ""mask"" defines which component to copy and it is a data member of GCValues_t. ; Reimplemented from TVirtualX.; Definition at line 3078 of file TGCocoa.mm. ◆ CopyPixmap(). void TGCocoa::CopyPixmap ; (; Int_t ; wid, . Int_t ; xpos, . Int_t ; ypos . ). overridevirtual . Copies the pixmap ""wid"" at the position [xpos,ypos] in the current window. ; Reimplem",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:61007,Availability,mask,mask,61007,"  . ). overridevirtual . Requests that the specified selection be converted to the specified target type. ; Reimplemented from TVirtualX.; Definition at line 3683 of file TGCocoa.mm. ◆ CopyArea(). void TGCocoa::CopyArea ; (; Drawable_t ; src, . Drawable_t ; dest, . GContext_t ; gc, . Int_t ; src_x, . Int_t ; src_y, . UInt_t ; width, . UInt_t ; height, . Int_t ; dest_x, . Int_t ; dest_y . ). overridevirtual . Combines the specified rectangle of ""src"" with the specified rectangle of ""dest"" according to the ""gc"". ; Parameters. [in]srcsource rectangle ; [in]destdestination rectangle ; [in]gcgraphics context ; [in]src_x,src_yspecify the x and y coordinates, which are relative to the origin of the source rectangle and specify upper-left corner. ; [in]width,heightthe width and height, which are the dimensions of both the source and destination rectangles ; [in]dest_x,dest_yspecify the upper-left corner of the destination rectangle. GC components in use: function, plane-mask, subwindow-mode, graphics-exposure, clip-x-origin, clip-y-origin, and clip-mask. (see also the GCValues_t structure) ; Reimplemented from TVirtualX.; Definition at line 2138 of file TGCocoa.mm. ◆ CopyAreaAux(). void TGCocoa::CopyAreaAux ; (; Drawable_t ; src, . Drawable_t ; dst, . const GCValues_t & ; gc, . Int_t ; srcX, . Int_t ; srcY, . UInt_t ; width, . UInt_t ; height, . Int_t ; dstX, . Int_t ; dstY . ). Definition at line 2101 of file TGCocoa.mm. ◆ CopyGC(). void TGCocoa::CopyGC ; (; GContext_t ; org, . GContext_t ; dest, . Mask_t ; mask . ). overridevirtual . Copies the specified components from the source GC ""org"" to the destination GC ""dest"". ; The ""mask"" defines which component to copy and it is a data member of GCValues_t. ; Reimplemented from TVirtualX.; Definition at line 3078 of file TGCocoa.mm. ◆ CopyPixmap(). void TGCocoa::CopyPixmap ; (; Int_t ; wid, . Int_t ; xpos, . Int_t ; ypos . ). overridevirtual . Copies the pixmap ""wid"" at the position [xpos,ypos] in the current window. ; Reimplem",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:61476,Availability,mask,mask,61476,"ters. [in]srcsource rectangle ; [in]destdestination rectangle ; [in]gcgraphics context ; [in]src_x,src_yspecify the x and y coordinates, which are relative to the origin of the source rectangle and specify upper-left corner. ; [in]width,heightthe width and height, which are the dimensions of both the source and destination rectangles ; [in]dest_x,dest_yspecify the upper-left corner of the destination rectangle. GC components in use: function, plane-mask, subwindow-mode, graphics-exposure, clip-x-origin, clip-y-origin, and clip-mask. (see also the GCValues_t structure) ; Reimplemented from TVirtualX.; Definition at line 2138 of file TGCocoa.mm. ◆ CopyAreaAux(). void TGCocoa::CopyAreaAux ; (; Drawable_t ; src, . Drawable_t ; dst, . const GCValues_t & ; gc, . Int_t ; srcX, . Int_t ; srcY, . UInt_t ; width, . UInt_t ; height, . Int_t ; dstX, . Int_t ; dstY . ). Definition at line 2101 of file TGCocoa.mm. ◆ CopyGC(). void TGCocoa::CopyGC ; (; GContext_t ; org, . GContext_t ; dest, . Mask_t ; mask . ). overridevirtual . Copies the specified components from the source GC ""org"" to the destination GC ""dest"". ; The ""mask"" defines which component to copy and it is a data member of GCValues_t. ; Reimplemented from TVirtualX.; Definition at line 3078 of file TGCocoa.mm. ◆ CopyPixmap(). void TGCocoa::CopyPixmap ; (; Int_t ; wid, . Int_t ; xpos, . Int_t ; ypos . ). overridevirtual . Copies the pixmap ""wid"" at the position [xpos,ypos] in the current window. ; Reimplemented from TVirtualX.; Definition at line 2378 of file TGCocoa.mm. ◆ CreateBitmap(). Pixmap_t TGCocoa::CreateBitmap ; (; Drawable_t ; id, . const char * ; bitmap, . UInt_t ; width, . UInt_t ; height . ). overridevirtual . Creates a bitmap (i.e. ; pixmap with depth 1) from the bitmap data.; Parameters. [in]idspecifies which screen the pixmap is created on ; [in]bitmapthe data in bitmap format ; [in]width,heightdefine the dimensions of the pixmap . Reimplemented from TVirtualX.; Definition at line 2498 of file TGCocoa.mm",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:61598,Availability,mask,mask,61598," the origin of the source rectangle and specify upper-left corner. ; [in]width,heightthe width and height, which are the dimensions of both the source and destination rectangles ; [in]dest_x,dest_yspecify the upper-left corner of the destination rectangle. GC components in use: function, plane-mask, subwindow-mode, graphics-exposure, clip-x-origin, clip-y-origin, and clip-mask. (see also the GCValues_t structure) ; Reimplemented from TVirtualX.; Definition at line 2138 of file TGCocoa.mm. ◆ CopyAreaAux(). void TGCocoa::CopyAreaAux ; (; Drawable_t ; src, . Drawable_t ; dst, . const GCValues_t & ; gc, . Int_t ; srcX, . Int_t ; srcY, . UInt_t ; width, . UInt_t ; height, . Int_t ; dstX, . Int_t ; dstY . ). Definition at line 2101 of file TGCocoa.mm. ◆ CopyGC(). void TGCocoa::CopyGC ; (; GContext_t ; org, . GContext_t ; dest, . Mask_t ; mask . ). overridevirtual . Copies the specified components from the source GC ""org"" to the destination GC ""dest"". ; The ""mask"" defines which component to copy and it is a data member of GCValues_t. ; Reimplemented from TVirtualX.; Definition at line 3078 of file TGCocoa.mm. ◆ CopyPixmap(). void TGCocoa::CopyPixmap ; (; Int_t ; wid, . Int_t ; xpos, . Int_t ; ypos . ). overridevirtual . Copies the pixmap ""wid"" at the position [xpos,ypos] in the current window. ; Reimplemented from TVirtualX.; Definition at line 2378 of file TGCocoa.mm. ◆ CreateBitmap(). Pixmap_t TGCocoa::CreateBitmap ; (; Drawable_t ; id, . const char * ; bitmap, . UInt_t ; width, . UInt_t ; height . ). overridevirtual . Creates a bitmap (i.e. ; pixmap with depth 1) from the bitmap data.; Parameters. [in]idspecifies which screen the pixmap is created on ; [in]bitmapthe data in bitmap format ; [in]width,heightdefine the dimensions of the pixmap . Reimplemented from TVirtualX.; Definition at line 2498 of file TGCocoa.mm. ◆ CreateCursor(). Cursor_t TGCocoa::CreateCursor ; (; ECursor ; cursor). overridevirtual . Creates the specified cursor. ; (just return cursor from cursor p",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:63934,Availability,mask,mask,63934,"; kTopLeft@ kTopLeftDefinition GuiTypes.h:372; kBottomRight@ kBottomRightDefinition GuiTypes.h:372; kArrowVer@ kArrowVerDefinition GuiTypes.h:374; kCaret@ kCaretDefinition GuiTypes.h:375; kTopSide@ kTopSideDefinition GuiTypes.h:373; kLeftSide@ kLeftSideDefinition GuiTypes.h:373; kWatch@ kWatchDefinition GuiTypes.h:375; kMove@ kMoveDefinition GuiTypes.h:374; kTopRight@ kTopRightDefinition GuiTypes.h:372; kBottomLeft@ kBottomLeftDefinition GuiTypes.h:372; kHand@ kHandDefinition GuiTypes.h:374; kCross@ kCrossDefinition GuiTypes.h:374; kRotate@ kRotateDefinition GuiTypes.h:374; kArrowHor@ kArrowHorDefinition GuiTypes.h:374; kPointer@ kPointerDefinition GuiTypes.h:375. Reimplemented from TVirtualX.; Definition at line 3107 of file TGCocoa.mm. ◆ CreateGC(). GContext_t TGCocoa::CreateGC ; (; Drawable_t ; id, . GCValues_t * ; gval . ). overridevirtual . Creates a graphics context using the provided GCValues_t *gval structure. ; The mask data member of gval specifies which components in the GC are to be set using the information in the specified values structure. It returns a graphics context handle GContext_t that can be used with any destination drawable or O if the creation falls. ; Reimplemented from TVirtualX.; Definition at line 2987 of file TGCocoa.mm. ◆ CreateImage(). Drawable_t TGCocoa::CreateImage ; (; UInt_t ; width, . UInt_t ; height . ). overridevirtual . Allocates the memory needed for an drawable. ; Parameters. [in]widththe width of the image, in pixels ; [in]heightthe height of the image, in pixels . Reimplemented from TVirtualX.; Definition at line 2579 of file TGCocoa.mm. ◆ CreateOpenGLContext() [1/2]. void TGCocoa::CreateOpenGLContext ; (; Int_t ; wid). overridevirtual . Creates OpenGL context for window ""wid"". ; Reimplemented from TVirtualX.; Definition at line 3304 of file TGCocoa.mm. ◆ CreateOpenGLContext() [2/2]. Handle_t TGCocoa::CreateOpenGLContext ; (; Window_t ; windowID, . Handle_t ; sharedContext . ). overridevirtual . Creates OpenGL context for w",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:65827,Availability,mask,mask,65827,"[2/2]. Handle_t TGCocoa::CreateOpenGLContext ; (; Window_t ; windowID, . Handle_t ; sharedContext . ). overridevirtual . Creates OpenGL context for window ""windowID"". ; Reimplemented from TVirtualX.; Definition at line 3285 of file TGCocoa.mm. ◆ CreateOpenGLWindow(). Window_t TGCocoa::CreateOpenGLWindow ; (; Window_t ; parentID, . UInt_t ; width, . UInt_t ; height, . const std::vector< std::pair< UInt_t, Int_t > > & ; format . ). overridevirtual . Create window with special pixel format. Noop everywhere except Cocoa. ; Reimplemented from TVirtualX.; Definition at line 3206 of file TGCocoa.mm. ◆ CreatePictureFromData(). Bool_t TGCocoa::CreatePictureFromData ; (; Drawable_t ; id, . char ** ; data, . Pixmap_t & ; pict, . Pixmap_t & ; pict_mask, . PictureAttributes_t & ; attr . ). overridevirtual . Creates a picture pict from data in bitmap format. ; The picture attributes ""attr"" are used for input and output. Returns kTRUE in case of success, kFALSE otherwise. If the mask ""pict_mask"" does not exist it is set to kNone. ; Reimplemented from TVirtualX.; Definition at line 4217 of file TGCocoa.mm. ◆ CreatePictureFromFile(). Bool_t TGCocoa::CreatePictureFromFile ; (; Drawable_t ; id, . const char * ; filename, . Pixmap_t & ; pict, . Pixmap_t & ; pict_mask, . PictureAttributes_t & ; attr . ). overridevirtual . Creates a picture pict from data in file ""filename"". ; The picture attributes ""attr"" are used for input and output. Returns kTRUE in case of success, kFALSE otherwise. If the mask ""pict_mask"" does not exist it is set to kNone. ; Reimplemented from TVirtualX.; Definition at line 4202 of file TGCocoa.mm. ◆ CreatePixmap() [1/2]. Pixmap_t TGCocoa::CreatePixmap ; (; Drawable_t ; id, . const char * ; bitmap, . UInt_t ; width, . UInt_t ; height, . ULong_t ; forecolor, . ULong_t ; backcolor, . Int_t ; depth . ). overridevirtual . Creates a pixmap from bitmap data of the width, height, and depth you specified and returns a pixmap that identifies it. ; The width and height argume",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:66346,Availability,mask,mask,66346,"oa. ; Reimplemented from TVirtualX.; Definition at line 3206 of file TGCocoa.mm. ◆ CreatePictureFromData(). Bool_t TGCocoa::CreatePictureFromData ; (; Drawable_t ; id, . char ** ; data, . Pixmap_t & ; pict, . Pixmap_t & ; pict_mask, . PictureAttributes_t & ; attr . ). overridevirtual . Creates a picture pict from data in bitmap format. ; The picture attributes ""attr"" are used for input and output. Returns kTRUE in case of success, kFALSE otherwise. If the mask ""pict_mask"" does not exist it is set to kNone. ; Reimplemented from TVirtualX.; Definition at line 4217 of file TGCocoa.mm. ◆ CreatePictureFromFile(). Bool_t TGCocoa::CreatePictureFromFile ; (; Drawable_t ; id, . const char * ; filename, . Pixmap_t & ; pict, . Pixmap_t & ; pict_mask, . PictureAttributes_t & ; attr . ). overridevirtual . Creates a picture pict from data in file ""filename"". ; The picture attributes ""attr"" are used for input and output. Returns kTRUE in case of success, kFALSE otherwise. If the mask ""pict_mask"" does not exist it is set to kNone. ; Reimplemented from TVirtualX.; Definition at line 4202 of file TGCocoa.mm. ◆ CreatePixmap() [1/2]. Pixmap_t TGCocoa::CreatePixmap ; (; Drawable_t ; id, . const char * ; bitmap, . UInt_t ; width, . UInt_t ; height, . ULong_t ; forecolor, . ULong_t ; backcolor, . Int_t ; depth . ). overridevirtual . Creates a pixmap from bitmap data of the width, height, and depth you specified and returns a pixmap that identifies it. ; The width and height arguments must be nonzero. The depth argument must be one of the depths supported by the screen of the specified drawable.; Parameters. [in]idspecifies which screen the pixmap is created on ; [in]bitmapthe data in bitmap format ; [in]width,heightdefine the dimensions of the pixmap ; [in]forecolorthe foreground pixel values to use ; [in]backcolorthe background pixel values to use ; [in]depththe depth of the pixmap . Reimplemented from TVirtualX.; Definition at line 2434 of file TGCocoa.mm. ◆ CreatePixmap() [2/2]. Pixmap_",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:72846,Availability,mask,mask,72846,"order. ; Reimplemented from TVirtualX.; Definition at line 961 of file TGCocoa.mm. ◆ DestroyWindow(). void TGCocoa::DestroyWindow ; (; Window_t ; id). overridevirtual . Destroys the window ""id"" as well as all of its subwindows. ; The window should never be referenced again. If the window specified by the ""id"" argument is mapped, it is unmapped automatically. ; Reimplemented from TVirtualX.; Definition at line 903 of file TGCocoa.mm. ◆ DisplayName(). const char * TGCocoa::DisplayName ; (; const char * ; ). overridevirtual . Returns hostname on which the display is opened. ; Reimplemented from TVirtualX.; Definition at line 510 of file TGCocoa.mm. ◆ DrawLine(). void TGCocoa::DrawLine ; (; Drawable_t ; id, . GContext_t ; gc, . Int_t ; x1, . Int_t ; y1, . Int_t ; x2, . Int_t ; y2 . ). overridevirtual . Uses the components of the specified GC to draw a line between the specified set of points (x1, y1) and (x2, y2). ; GC components in use: function, plane-mask, line-width, line-style, cap-style, fill-style, subwindow-mode, clip-x-origin, clip-y-origin, and clip-mask.; GC mode-dependent components: foreground, background, tile, stipple, tile-stipple-x-origin, tile-stipple-y-origin, dash-offset, dash-list. (see also the GCValues_t structure) ; Reimplemented from TVirtualX.; Reimplemented in TGQuartz.; Definition at line 1737 of file TGCocoa.mm. ◆ DrawLineAux(). void TGCocoa::DrawLineAux ; (; Drawable_t ; wid, . const GCValues_t & ; gcVals, . Int_t ; x1, . Int_t ; y1, . Int_t ; x2, . Int_t ; y2 . ). Definition at line 1697 of file TGCocoa.mm. ◆ DrawRectangle(). void TGCocoa::DrawRectangle ; (; Drawable_t ; id, . GContext_t ; gc, . Int_t ; x, . Int_t ; y, . UInt_t ; w, . UInt_t ; h . ). overridevirtual . Draws rectangle outlines of [x,y] [x+w,y] [x+w,y+h] [x,y+h]. ; GC components in use: function, plane-mask, line-width, line-style, cap-style, join-style, fill-style, subwindow-mode, clip-x-origin, clip-y-origin, clip-mask. GC mode-dependent components: foreground, background,",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:72954,Availability,mask,mask,72954,"order. ; Reimplemented from TVirtualX.; Definition at line 961 of file TGCocoa.mm. ◆ DestroyWindow(). void TGCocoa::DestroyWindow ; (; Window_t ; id). overridevirtual . Destroys the window ""id"" as well as all of its subwindows. ; The window should never be referenced again. If the window specified by the ""id"" argument is mapped, it is unmapped automatically. ; Reimplemented from TVirtualX.; Definition at line 903 of file TGCocoa.mm. ◆ DisplayName(). const char * TGCocoa::DisplayName ; (; const char * ; ). overridevirtual . Returns hostname on which the display is opened. ; Reimplemented from TVirtualX.; Definition at line 510 of file TGCocoa.mm. ◆ DrawLine(). void TGCocoa::DrawLine ; (; Drawable_t ; id, . GContext_t ; gc, . Int_t ; x1, . Int_t ; y1, . Int_t ; x2, . Int_t ; y2 . ). overridevirtual . Uses the components of the specified GC to draw a line between the specified set of points (x1, y1) and (x2, y2). ; GC components in use: function, plane-mask, line-width, line-style, cap-style, fill-style, subwindow-mode, clip-x-origin, clip-y-origin, and clip-mask.; GC mode-dependent components: foreground, background, tile, stipple, tile-stipple-x-origin, tile-stipple-y-origin, dash-offset, dash-list. (see also the GCValues_t structure) ; Reimplemented from TVirtualX.; Reimplemented in TGQuartz.; Definition at line 1737 of file TGCocoa.mm. ◆ DrawLineAux(). void TGCocoa::DrawLineAux ; (; Drawable_t ; wid, . const GCValues_t & ; gcVals, . Int_t ; x1, . Int_t ; y1, . Int_t ; x2, . Int_t ; y2 . ). Definition at line 1697 of file TGCocoa.mm. ◆ DrawRectangle(). void TGCocoa::DrawRectangle ; (; Drawable_t ; id, . GContext_t ; gc, . Int_t ; x, . Int_t ; y, . UInt_t ; w, . UInt_t ; h . ). overridevirtual . Draws rectangle outlines of [x,y] [x+w,y] [x+w,y+h] [x,y+h]. ; GC components in use: function, plane-mask, line-width, line-style, cap-style, join-style, fill-style, subwindow-mode, clip-x-origin, clip-y-origin, clip-mask. GC mode-dependent components: foreground, background,",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:73707,Availability,mask,mask,73707,"between the specified set of points (x1, y1) and (x2, y2). ; GC components in use: function, plane-mask, line-width, line-style, cap-style, fill-style, subwindow-mode, clip-x-origin, clip-y-origin, and clip-mask.; GC mode-dependent components: foreground, background, tile, stipple, tile-stipple-x-origin, tile-stipple-y-origin, dash-offset, dash-list. (see also the GCValues_t structure) ; Reimplemented from TVirtualX.; Reimplemented in TGQuartz.; Definition at line 1737 of file TGCocoa.mm. ◆ DrawLineAux(). void TGCocoa::DrawLineAux ; (; Drawable_t ; wid, . const GCValues_t & ; gcVals, . Int_t ; x1, . Int_t ; y1, . Int_t ; x2, . Int_t ; y2 . ). Definition at line 1697 of file TGCocoa.mm. ◆ DrawRectangle(). void TGCocoa::DrawRectangle ; (; Drawable_t ; id, . GContext_t ; gc, . Int_t ; x, . Int_t ; y, . UInt_t ; w, . UInt_t ; h . ). overridevirtual . Draws rectangle outlines of [x,y] [x+w,y] [x+w,y+h] [x,y+h]. ; GC components in use: function, plane-mask, line-width, line-style, cap-style, join-style, fill-style, subwindow-mode, clip-x-origin, clip-y-origin, clip-mask. GC mode-dependent components: foreground, background, tile, stipple, tile-stipple-x-origin, tile-stipple-y-origin, dash-offset, dash-list. (see also the GCValues_t structure) ; Reimplemented from TVirtualX.; Definition at line 1854 of file TGCocoa.mm. ◆ DrawRectangleAux(). void TGCocoa::DrawRectangleAux ; (; Drawable_t ; wid, . const GCValues_t & ; gcVals, . Int_t ; x, . Int_t ; y, . UInt_t ; w, . UInt_t ; h . ). Definition at line 1820 of file TGCocoa.mm. ◆ DrawSegments(). void TGCocoa::DrawSegments ; (; Drawable_t ; id, . GContext_t ; gc, . Segment_t * ; seg, . Int_t ; nseg . ). overridevirtual . Draws multiple line segments. ; Each line is specified by a pair of points.; Parameters. [in]idDrawable identifier ; [in]gcgraphics context ; [in]*segspecifies an array of segments ; [in]nsegspecifies the number of segments in the array. GC components in use: function, plane-mask, line-width, line-style, cap-st",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:73823,Availability,mask,mask,73823,"between the specified set of points (x1, y1) and (x2, y2). ; GC components in use: function, plane-mask, line-width, line-style, cap-style, fill-style, subwindow-mode, clip-x-origin, clip-y-origin, and clip-mask.; GC mode-dependent components: foreground, background, tile, stipple, tile-stipple-x-origin, tile-stipple-y-origin, dash-offset, dash-list. (see also the GCValues_t structure) ; Reimplemented from TVirtualX.; Reimplemented in TGQuartz.; Definition at line 1737 of file TGCocoa.mm. ◆ DrawLineAux(). void TGCocoa::DrawLineAux ; (; Drawable_t ; wid, . const GCValues_t & ; gcVals, . Int_t ; x1, . Int_t ; y1, . Int_t ; x2, . Int_t ; y2 . ). Definition at line 1697 of file TGCocoa.mm. ◆ DrawRectangle(). void TGCocoa::DrawRectangle ; (; Drawable_t ; id, . GContext_t ; gc, . Int_t ; x, . Int_t ; y, . UInt_t ; w, . UInt_t ; h . ). overridevirtual . Draws rectangle outlines of [x,y] [x+w,y] [x+w,y+h] [x,y+h]. ; GC components in use: function, plane-mask, line-width, line-style, cap-style, join-style, fill-style, subwindow-mode, clip-x-origin, clip-y-origin, clip-mask. GC mode-dependent components: foreground, background, tile, stipple, tile-stipple-x-origin, tile-stipple-y-origin, dash-offset, dash-list. (see also the GCValues_t structure) ; Reimplemented from TVirtualX.; Definition at line 1854 of file TGCocoa.mm. ◆ DrawRectangleAux(). void TGCocoa::DrawRectangleAux ; (; Drawable_t ; wid, . const GCValues_t & ; gcVals, . Int_t ; x, . Int_t ; y, . UInt_t ; w, . UInt_t ; h . ). Definition at line 1820 of file TGCocoa.mm. ◆ DrawSegments(). void TGCocoa::DrawSegments ; (; Drawable_t ; id, . GContext_t ; gc, . Segment_t * ; seg, . Int_t ; nseg . ). overridevirtual . Draws multiple line segments. ; Each line is specified by a pair of points.; Parameters. [in]idDrawable identifier ; [in]gcgraphics context ; [in]*segspecifies an array of segments ; [in]nsegspecifies the number of segments in the array. GC components in use: function, plane-mask, line-width, line-style, cap-st",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:74711,Availability,mask,mask,74711,"-style, fill-style, subwindow-mode, clip-x-origin, clip-y-origin, clip-mask. GC mode-dependent components: foreground, background, tile, stipple, tile-stipple-x-origin, tile-stipple-y-origin, dash-offset, dash-list. (see also the GCValues_t structure) ; Reimplemented from TVirtualX.; Definition at line 1854 of file TGCocoa.mm. ◆ DrawRectangleAux(). void TGCocoa::DrawRectangleAux ; (; Drawable_t ; wid, . const GCValues_t & ; gcVals, . Int_t ; x, . Int_t ; y, . UInt_t ; w, . UInt_t ; h . ). Definition at line 1820 of file TGCocoa.mm. ◆ DrawSegments(). void TGCocoa::DrawSegments ; (; Drawable_t ; id, . GContext_t ; gc, . Segment_t * ; seg, . Int_t ; nseg . ). overridevirtual . Draws multiple line segments. ; Each line is specified by a pair of points.; Parameters. [in]idDrawable identifier ; [in]gcgraphics context ; [in]*segspecifies an array of segments ; [in]nsegspecifies the number of segments in the array. GC components in use: function, plane-mask, line-width, line-style, cap-style, join-style, fill-style, subwindow-mode, clip-x-origin, clip-y-origin, clip-mask.; GC mode-dependent components: foreground, background, tile, stipple, tile-stipple-x-origin, tile-stipple-y-origin, dash-offset, and dash-list. (see also the GCValues_t structure) ; Reimplemented from TVirtualX.; Definition at line 1785 of file TGCocoa.mm. ◆ DrawSegmentsAux(). void TGCocoa::DrawSegmentsAux ; (; Drawable_t ; wid, . const GCValues_t & ; gcVals, . const Segment_t * ; segments, . Int_t ; nSegments . ). Definition at line 1774 of file TGCocoa.mm. ◆ DrawString(). void TGCocoa::DrawString ; (; Drawable_t ; id, . GContext_t ; gc, . Int_t ; x, . Int_t ; y, . const char * ; s, . Int_t ; len . ). overridevirtual . Each character image, as defined by the font in the GC, is treated as an additional mask for a fill operation on the drawable. ; Parameters. [in]idthe drawable ; [in]gcthe GC ; [in]x,ycoordinates, which are relative to the origin of the specified drawable and define the origin of the first ",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:74827,Availability,mask,mask,74827,"-style, fill-style, subwindow-mode, clip-x-origin, clip-y-origin, clip-mask. GC mode-dependent components: foreground, background, tile, stipple, tile-stipple-x-origin, tile-stipple-y-origin, dash-offset, dash-list. (see also the GCValues_t structure) ; Reimplemented from TVirtualX.; Definition at line 1854 of file TGCocoa.mm. ◆ DrawRectangleAux(). void TGCocoa::DrawRectangleAux ; (; Drawable_t ; wid, . const GCValues_t & ; gcVals, . Int_t ; x, . Int_t ; y, . UInt_t ; w, . UInt_t ; h . ). Definition at line 1820 of file TGCocoa.mm. ◆ DrawSegments(). void TGCocoa::DrawSegments ; (; Drawable_t ; id, . GContext_t ; gc, . Segment_t * ; seg, . Int_t ; nseg . ). overridevirtual . Draws multiple line segments. ; Each line is specified by a pair of points.; Parameters. [in]idDrawable identifier ; [in]gcgraphics context ; [in]*segspecifies an array of segments ; [in]nsegspecifies the number of segments in the array. GC components in use: function, plane-mask, line-width, line-style, cap-style, join-style, fill-style, subwindow-mode, clip-x-origin, clip-y-origin, clip-mask.; GC mode-dependent components: foreground, background, tile, stipple, tile-stipple-x-origin, tile-stipple-y-origin, dash-offset, and dash-list. (see also the GCValues_t structure) ; Reimplemented from TVirtualX.; Definition at line 1785 of file TGCocoa.mm. ◆ DrawSegmentsAux(). void TGCocoa::DrawSegmentsAux ; (; Drawable_t ; wid, . const GCValues_t & ; gcVals, . const Segment_t * ; segments, . Int_t ; nSegments . ). Definition at line 1774 of file TGCocoa.mm. ◆ DrawString(). void TGCocoa::DrawString ; (; Drawable_t ; id, . GContext_t ; gc, . Int_t ; x, . Int_t ; y, . const char * ; s, . Int_t ; len . ). overridevirtual . Each character image, as defined by the font in the GC, is treated as an additional mask for a fill operation on the drawable. ; Parameters. [in]idthe drawable ; [in]gcthe GC ; [in]x,ycoordinates, which are relative to the origin of the specified drawable and define the origin of the first ",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:75545,Availability,mask,mask,75545," [in]idDrawable identifier ; [in]gcgraphics context ; [in]*segspecifies an array of segments ; [in]nsegspecifies the number of segments in the array. GC components in use: function, plane-mask, line-width, line-style, cap-style, join-style, fill-style, subwindow-mode, clip-x-origin, clip-y-origin, clip-mask.; GC mode-dependent components: foreground, background, tile, stipple, tile-stipple-x-origin, tile-stipple-y-origin, dash-offset, and dash-list. (see also the GCValues_t structure) ; Reimplemented from TVirtualX.; Definition at line 1785 of file TGCocoa.mm. ◆ DrawSegmentsAux(). void TGCocoa::DrawSegmentsAux ; (; Drawable_t ; wid, . const GCValues_t & ; gcVals, . const Segment_t * ; segments, . Int_t ; nSegments . ). Definition at line 1774 of file TGCocoa.mm. ◆ DrawString(). void TGCocoa::DrawString ; (; Drawable_t ; id, . GContext_t ; gc, . Int_t ; x, . Int_t ; y, . const char * ; s, . Int_t ; len . ). overridevirtual . Each character image, as defined by the font in the GC, is treated as an additional mask for a fill operation on the drawable. ; Parameters. [in]idthe drawable ; [in]gcthe GC ; [in]x,ycoordinates, which are relative to the origin of the specified drawable and define the origin of the first character ; [in]sthe character string ; [in]lenthe number of characters in the string argument. GC components in use: function, plane-mask, fill-style, font, subwindow-mode, clip-x-origin, clip-y-origin, and clip-mask. GC mode-dependent components: foreground, background, tile, stipple, tile-stipple-x-origin, and tile-stipple-y-origin. (see also the GCValues_t structure) ; Reimplemented from TVirtualX.; Definition at line 2219 of file TGCocoa.mm. ◆ DrawStringAux(). void TGCocoa::DrawStringAux ; (; Drawable_t ; wid, . const GCValues_t & ; gc, . Int_t ; x, . Int_t ; y, . const char * ; s, . Int_t ; len . ). Definition at line 2175 of file TGCocoa.mm. ◆ EmptyRegion(). Bool_t TGCocoa::EmptyRegion ; (; Region_t ; reg). overridevirtual . Returns kTRUE if the region re",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:75886,Availability,mask,mask,75886,"stipple-x-origin, tile-stipple-y-origin, dash-offset, and dash-list. (see also the GCValues_t structure) ; Reimplemented from TVirtualX.; Definition at line 1785 of file TGCocoa.mm. ◆ DrawSegmentsAux(). void TGCocoa::DrawSegmentsAux ; (; Drawable_t ; wid, . const GCValues_t & ; gcVals, . const Segment_t * ; segments, . Int_t ; nSegments . ). Definition at line 1774 of file TGCocoa.mm. ◆ DrawString(). void TGCocoa::DrawString ; (; Drawable_t ; id, . GContext_t ; gc, . Int_t ; x, . Int_t ; y, . const char * ; s, . Int_t ; len . ). overridevirtual . Each character image, as defined by the font in the GC, is treated as an additional mask for a fill operation on the drawable. ; Parameters. [in]idthe drawable ; [in]gcthe GC ; [in]x,ycoordinates, which are relative to the origin of the specified drawable and define the origin of the first character ; [in]sthe character string ; [in]lenthe number of characters in the string argument. GC components in use: function, plane-mask, fill-style, font, subwindow-mode, clip-x-origin, clip-y-origin, and clip-mask. GC mode-dependent components: foreground, background, tile, stipple, tile-stipple-x-origin, and tile-stipple-y-origin. (see also the GCValues_t structure) ; Reimplemented from TVirtualX.; Definition at line 2219 of file TGCocoa.mm. ◆ DrawStringAux(). void TGCocoa::DrawStringAux ; (; Drawable_t ; wid, . const GCValues_t & ; gc, . Int_t ; x, . Int_t ; y, . const char * ; s, . Int_t ; len . ). Definition at line 2175 of file TGCocoa.mm. ◆ EmptyRegion(). Bool_t TGCocoa::EmptyRegion ; (; Region_t ; reg). overridevirtual . Returns kTRUE if the region reg is empty. ; Reimplemented from TVirtualX.; Definition at line 4362 of file TGCocoa.mm. ◆ EqualRegion(). Bool_t TGCocoa::EqualRegion ; (; Region_t ; rega, . Region_t ; regb . ). overridevirtual . Returns kTRUE if the two regions have the same offset, size, and shape. ; Reimplemented from TVirtualX.; Definition at line 4378 of file TGCocoa.mm. ◆ EventsPending(). Int_t TGCocoa::Event",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:75965,Availability,mask,mask,75965,"stipple-x-origin, tile-stipple-y-origin, dash-offset, and dash-list. (see also the GCValues_t structure) ; Reimplemented from TVirtualX.; Definition at line 1785 of file TGCocoa.mm. ◆ DrawSegmentsAux(). void TGCocoa::DrawSegmentsAux ; (; Drawable_t ; wid, . const GCValues_t & ; gcVals, . const Segment_t * ; segments, . Int_t ; nSegments . ). Definition at line 1774 of file TGCocoa.mm. ◆ DrawString(). void TGCocoa::DrawString ; (; Drawable_t ; id, . GContext_t ; gc, . Int_t ; x, . Int_t ; y, . const char * ; s, . Int_t ; len . ). overridevirtual . Each character image, as defined by the font in the GC, is treated as an additional mask for a fill operation on the drawable. ; Parameters. [in]idthe drawable ; [in]gcthe GC ; [in]x,ycoordinates, which are relative to the origin of the specified drawable and define the origin of the first character ; [in]sthe character string ; [in]lenthe number of characters in the string argument. GC components in use: function, plane-mask, fill-style, font, subwindow-mode, clip-x-origin, clip-y-origin, and clip-mask. GC mode-dependent components: foreground, background, tile, stipple, tile-stipple-x-origin, and tile-stipple-y-origin. (see also the GCValues_t structure) ; Reimplemented from TVirtualX.; Definition at line 2219 of file TGCocoa.mm. ◆ DrawStringAux(). void TGCocoa::DrawStringAux ; (; Drawable_t ; wid, . const GCValues_t & ; gc, . Int_t ; x, . Int_t ; y, . const char * ; s, . Int_t ; len . ). Definition at line 2175 of file TGCocoa.mm. ◆ EmptyRegion(). Bool_t TGCocoa::EmptyRegion ; (; Region_t ; reg). overridevirtual . Returns kTRUE if the region reg is empty. ; Reimplemented from TVirtualX.; Definition at line 4362 of file TGCocoa.mm. ◆ EqualRegion(). Bool_t TGCocoa::EqualRegion ; (; Region_t ; rega, . Region_t ; regb . ). overridevirtual . Returns kTRUE if the two regions have the same offset, size, and shape. ; Reimplemented from TVirtualX.; Definition at line 4378 of file TGCocoa.mm. ◆ EventsPending(). Int_t TGCocoa::Event",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:77868,Availability,mask,mask,77868,"t TGCocoa::EventsPending ; (; ). overridevirtual . Returns the number of events that have been received from the X server but have not been removed from the event queue. ; Reimplemented from TVirtualX.; Definition at line 3540 of file TGCocoa.mm. ◆ ExecCommand(). UInt_t TGCocoa::ExecCommand ; (; TGWin32Command * ; code). overridevirtual . Executes the command ""code"" coming from the other threads (Win32) ; Reimplemented from TVirtualX.; Definition at line 4023 of file TGCocoa.mm. ◆ FillPolygon(). void TGCocoa::FillPolygon ; (; Window_t ; id, . GContext_t ; gc, . Point_t * ; points, . Int_t ; npnt . ). overridevirtual . Fills the region closed by the specified path. ; The path is closed automatically if the last point in the list does not coincide with the first point.; Parameters. [in]idwindow identifier ; [in]gcgraphics context ; [in]*pointsspecifies an array of points ; [in]npntspecifies the number of points in the array. GC components in use: function, plane-mask, fill-style, fill-rule, subwindow-mode, clip-x-origin, clip-y-origin, and clip-mask. GC mode-dependent components: foreground, background, tile, stipple, tile-stipple-x-origin, and tile-stipple-y-origin. (see also the GCValues_t structure) ; Reimplemented from TVirtualX.; Definition at line 2056 of file TGCocoa.mm. ◆ FillPolygonAux(). void TGCocoa::FillPolygonAux ; (; Window_t ; wid, . const GCValues_t & ; gcVals, . const Point_t * ; polygon, . Int_t ; nPoints . ). Definition at line 1984 of file TGCocoa.mm. ◆ FillRectangle(). void TGCocoa::FillRectangle ; (; Drawable_t ; id, . GContext_t ; gc, . Int_t ; x, . Int_t ; y, . UInt_t ; w, . UInt_t ; h . ). overridevirtual . Fills the specified rectangle defined by [x,y] [x+w,y] [x+w,y+h] [x,y+h]. ; using the GC you specify.; GC components in use are: function, plane-mask, fill-style, subwindow-mode, clip-x-origin, clip-y-origin, clip-mask. GC mode-dependent components: foreground, background, tile, stipple, tile-stipple-x-origin, and tile-stipple-y-origin. (se",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:77952,Availability,mask,mask,77952,"t TGCocoa::EventsPending ; (; ). overridevirtual . Returns the number of events that have been received from the X server but have not been removed from the event queue. ; Reimplemented from TVirtualX.; Definition at line 3540 of file TGCocoa.mm. ◆ ExecCommand(). UInt_t TGCocoa::ExecCommand ; (; TGWin32Command * ; code). overridevirtual . Executes the command ""code"" coming from the other threads (Win32) ; Reimplemented from TVirtualX.; Definition at line 4023 of file TGCocoa.mm. ◆ FillPolygon(). void TGCocoa::FillPolygon ; (; Window_t ; id, . GContext_t ; gc, . Point_t * ; points, . Int_t ; npnt . ). overridevirtual . Fills the region closed by the specified path. ; The path is closed automatically if the last point in the list does not coincide with the first point.; Parameters. [in]idwindow identifier ; [in]gcgraphics context ; [in]*pointsspecifies an array of points ; [in]npntspecifies the number of points in the array. GC components in use: function, plane-mask, fill-style, fill-rule, subwindow-mode, clip-x-origin, clip-y-origin, and clip-mask. GC mode-dependent components: foreground, background, tile, stipple, tile-stipple-x-origin, and tile-stipple-y-origin. (see also the GCValues_t structure) ; Reimplemented from TVirtualX.; Definition at line 2056 of file TGCocoa.mm. ◆ FillPolygonAux(). void TGCocoa::FillPolygonAux ; (; Window_t ; wid, . const GCValues_t & ; gcVals, . const Point_t * ; polygon, . Int_t ; nPoints . ). Definition at line 1984 of file TGCocoa.mm. ◆ FillRectangle(). void TGCocoa::FillRectangle ; (; Drawable_t ; id, . GContext_t ; gc, . Int_t ; x, . Int_t ; y, . UInt_t ; w, . UInt_t ; h . ). overridevirtual . Fills the specified rectangle defined by [x,y] [x+w,y] [x+w,y+h] [x,y+h]. ; using the GC you specify.; GC components in use are: function, plane-mask, fill-style, subwindow-mode, clip-x-origin, clip-y-origin, clip-mask. GC mode-dependent components: foreground, background, tile, stipple, tile-stipple-x-origin, and tile-stipple-y-origin. (se",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:78696,Availability,mask,mask,78696,"in]gcgraphics context ; [in]*pointsspecifies an array of points ; [in]npntspecifies the number of points in the array. GC components in use: function, plane-mask, fill-style, fill-rule, subwindow-mode, clip-x-origin, clip-y-origin, and clip-mask. GC mode-dependent components: foreground, background, tile, stipple, tile-stipple-x-origin, and tile-stipple-y-origin. (see also the GCValues_t structure) ; Reimplemented from TVirtualX.; Definition at line 2056 of file TGCocoa.mm. ◆ FillPolygonAux(). void TGCocoa::FillPolygonAux ; (; Window_t ; wid, . const GCValues_t & ; gcVals, . const Point_t * ; polygon, . Int_t ; nPoints . ). Definition at line 1984 of file TGCocoa.mm. ◆ FillRectangle(). void TGCocoa::FillRectangle ; (; Drawable_t ; id, . GContext_t ; gc, . Int_t ; x, . Int_t ; y, . UInt_t ; w, . UInt_t ; h . ). overridevirtual . Fills the specified rectangle defined by [x,y] [x+w,y] [x+w,y+h] [x,y+h]. ; using the GC you specify.; GC components in use are: function, plane-mask, fill-style, subwindow-mode, clip-x-origin, clip-y-origin, clip-mask. GC mode-dependent components: foreground, background, tile, stipple, tile-stipple-x-origin, and tile-stipple-y-origin. (see also the GCValues_t structure) ; Reimplemented from TVirtualX.; Definition at line 1954 of file TGCocoa.mm. ◆ FillRectangleAux(). void TGCocoa::FillRectangleAux ; (; Drawable_t ; wid, . const GCValues_t & ; gcVals, . Int_t ; x, . Int_t ; y, . UInt_t ; w, . UInt_t ; h . ). Definition at line 1889 of file TGCocoa.mm. ◆ FindAtom(). Atom_t TGCocoa::FindAtom ; (; const std::string & ; atomName, . bool ; addIfNotFound . ). private . Definition at line 4495 of file TGCocoa.mm. ◆ FindRWindow(). Window_t TGCocoa::FindRWindow ; (; Window_t ; win, . Window_t ; dragwin, . Window_t ; input, . int ; x, . int ; y, . int ; maxd . ). overridevirtual . Recursively search in the children of Window for a Window which is at location x, y and is DND aware, with a maximum depth of maxd. ; Reimplemented from TVirtualX.; Definiti",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:78765,Availability,mask,mask,78765,"in]gcgraphics context ; [in]*pointsspecifies an array of points ; [in]npntspecifies the number of points in the array. GC components in use: function, plane-mask, fill-style, fill-rule, subwindow-mode, clip-x-origin, clip-y-origin, and clip-mask. GC mode-dependent components: foreground, background, tile, stipple, tile-stipple-x-origin, and tile-stipple-y-origin. (see also the GCValues_t structure) ; Reimplemented from TVirtualX.; Definition at line 2056 of file TGCocoa.mm. ◆ FillPolygonAux(). void TGCocoa::FillPolygonAux ; (; Window_t ; wid, . const GCValues_t & ; gcVals, . const Point_t * ; polygon, . Int_t ; nPoints . ). Definition at line 1984 of file TGCocoa.mm. ◆ FillRectangle(). void TGCocoa::FillRectangle ; (; Drawable_t ; id, . GContext_t ; gc, . Int_t ; x, . Int_t ; y, . UInt_t ; w, . UInt_t ; h . ). overridevirtual . Fills the specified rectangle defined by [x,y] [x+w,y] [x+w,y+h] [x,y+h]. ; using the GC you specify.; GC components in use are: function, plane-mask, fill-style, subwindow-mode, clip-x-origin, clip-y-origin, clip-mask. GC mode-dependent components: foreground, background, tile, stipple, tile-stipple-x-origin, and tile-stipple-y-origin. (see also the GCValues_t structure) ; Reimplemented from TVirtualX.; Definition at line 1954 of file TGCocoa.mm. ◆ FillRectangleAux(). void TGCocoa::FillRectangleAux ; (; Drawable_t ; wid, . const GCValues_t & ; gcVals, . Int_t ; x, . Int_t ; y, . UInt_t ; w, . UInt_t ; h . ). Definition at line 1889 of file TGCocoa.mm. ◆ FindAtom(). Atom_t TGCocoa::FindAtom ; (; const std::string & ; atomName, . bool ; addIfNotFound . ). private . Definition at line 4495 of file TGCocoa.mm. ◆ FindRWindow(). Window_t TGCocoa::FindRWindow ; (; Window_t ; win, . Window_t ; dragwin, . Window_t ; input, . int ; x, . int ; y, . int ; maxd . ). overridevirtual . Recursively search in the children of Window for a Window which is at location x, y and is DND aware, with a maximum depth of maxd. ; Reimplemented from TVirtualX.; Definiti",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:84656,Availability,mask,mask,84656,"394 of file TGCocoa.mm. ◆ GetFontHandle(). FontH_t TGCocoa::GetFontHandle ; (; FontStruct_t ; fs). overridevirtual . Returns the font handle of the specified font structure ""fs"". ; Reimplemented from TVirtualX.; Definition at line 2829 of file TGCocoa.mm. ◆ GetFontProperties(). void TGCocoa::GetFontProperties ; (; FontStruct_t ; font, . Int_t & ; max_ascent, . Int_t & ; max_descent . ). overridevirtual . Returns the font properties. ; Reimplemented from TVirtualX.; Definition at line 2856 of file TGCocoa.mm. ◆ GetFontStruct(). FontStruct_t TGCocoa::GetFontStruct ; (; FontH_t ; fh). overridevirtual . Retrieves the associated font structure of the font specified font handle ""fh"". ; Free returned FontStruct_t using FreeFontStruct(). ; Reimplemented from TVirtualX.; Definition at line 2863 of file TGCocoa.mm. ◆ GetGCValues(). void TGCocoa::GetGCValues ; (; GContext_t ; gc, . GCValues_t & ; gval . ). overridevirtual . Returns the components specified by the mask in ""gval"" for the specified GC ""gc"" (see also the GCValues_t structure) ; Reimplemented from TVirtualX.; Definition at line 3090 of file TGCocoa.mm. ◆ GetGeometry(). void TGCocoa::GetGeometry ; (; Int_t ; wid, . Int_t & ; x, . Int_t & ; y, . UInt_t & ; w, . UInt_t & ; h . ). overridevirtual . Returns position and size of window ""wid"". ; Parameters. [in]widwindow identifier if wid < 0 the size of the display is returned ; [in]x,yreturned window position ; [in]w,hreturned window size . Reimplemented from TVirtualX.; Definition at line 707 of file TGCocoa.mm. ◆ GetImageSize(). void TGCocoa::GetImageSize ; (; Drawable_t ; id, . UInt_t & ; width, . UInt_t & ; height . ). overridevirtual . Returns the width and height of the image id. ; Reimplemented from TVirtualX.; Definition at line 2589 of file TGCocoa.mm. ◆ GetInputFocus(). Window_t TGCocoa::GetInputFocus ; (; ). overridevirtual . Returns the window id of the window having the input focus. ; Reimplemented from TVirtualX.; Definition at line 2768 of file TGCocoa.mm.",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:91239,Availability,down,down,91239,"assive grab on a certain mouse button. ; That is, when a certain mouse button is hit while certain modifier's (Shift, Control, Meta, Alt) are active then the mouse will be grabbed for window id. When grab is false, ungrab the mouse button for this button and modifier. ; Reimplemented from TVirtualX.; Definition at line 2644 of file TGCocoa.mm. ◆ GrabKey(). void TGCocoa::GrabKey ; (; Window_t ; id, . Int_t ; keycode, . UInt_t ; modifier, . Bool_t ; grab = kTRUE . ). overridevirtual . Establishes a passive grab on the keyboard. ; In the future, the keyboard is actively grabbed, the last-keyboard-grab time is set to the time at which the key was pressed (as transmitted in the KeyPress event), and the KeyPress event is reported if all of the following conditions are true:. the keyboard is not grabbed and the specified key (which can itself be a modifier key) is logically pressed when the specified modifier keys are logically down, and no other modifier keys are logically down;; either the grab window ""id"" is an ancestor of (or is) the focus window, or ""id"" is a descendant of the focus window and contains the pointer;; a passive grab on the same key combination does not exist on any ancestor of grab_window. Parameters. [in]idwindow id ; [in]keycodespecifies the KeyCode or AnyKey ; [in]modifierspecifies the set of keymasks or AnyModifier; the mask is the bitwise inclusive OR of the valid keymask bits ; [in]graba switch between grab/ungrab key grab = kTRUE grab the key and modifier grab = kFALSE ungrab the key and modifier . Reimplemented from TVirtualX.; Definition at line 2715 of file TGCocoa.mm. ◆ GrabPointer(). void TGCocoa::GrabPointer ; (; Window_t ; id, . UInt_t ; evmask, . Window_t ; confine, . Cursor_t ; cursor, . Bool_t ; grab = kTRUE, . Bool_t ; owner_events = kTRUE . ). overridevirtual . Establishes an active pointer grab. ; While an active pointer grab is in effect, further pointer events are only reported to the grabbing client window. ; Reimplemented from TV",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:91286,Availability,down,down,91286,"assive grab on a certain mouse button. ; That is, when a certain mouse button is hit while certain modifier's (Shift, Control, Meta, Alt) are active then the mouse will be grabbed for window id. When grab is false, ungrab the mouse button for this button and modifier. ; Reimplemented from TVirtualX.; Definition at line 2644 of file TGCocoa.mm. ◆ GrabKey(). void TGCocoa::GrabKey ; (; Window_t ; id, . Int_t ; keycode, . UInt_t ; modifier, . Bool_t ; grab = kTRUE . ). overridevirtual . Establishes a passive grab on the keyboard. ; In the future, the keyboard is actively grabbed, the last-keyboard-grab time is set to the time at which the key was pressed (as transmitted in the KeyPress event), and the KeyPress event is reported if all of the following conditions are true:. the keyboard is not grabbed and the specified key (which can itself be a modifier key) is logically pressed when the specified modifier keys are logically down, and no other modifier keys are logically down;; either the grab window ""id"" is an ancestor of (or is) the focus window, or ""id"" is a descendant of the focus window and contains the pointer;; a passive grab on the same key combination does not exist on any ancestor of grab_window. Parameters. [in]idwindow id ; [in]keycodespecifies the KeyCode or AnyKey ; [in]modifierspecifies the set of keymasks or AnyModifier; the mask is the bitwise inclusive OR of the valid keymask bits ; [in]graba switch between grab/ungrab key grab = kTRUE grab the key and modifier grab = kFALSE ungrab the key and modifier . Reimplemented from TVirtualX.; Definition at line 2715 of file TGCocoa.mm. ◆ GrabPointer(). void TGCocoa::GrabPointer ; (; Window_t ; id, . UInt_t ; evmask, . Window_t ; confine, . Cursor_t ; cursor, . Bool_t ; grab = kTRUE, . Bool_t ; owner_events = kTRUE . ). overridevirtual . Establishes an active pointer grab. ; While an active pointer grab is in effect, further pointer events are only reported to the grabbing client window. ; Reimplemented from TV",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:91663,Availability,mask,mask,91663,"ndow_t ; id, . Int_t ; keycode, . UInt_t ; modifier, . Bool_t ; grab = kTRUE . ). overridevirtual . Establishes a passive grab on the keyboard. ; In the future, the keyboard is actively grabbed, the last-keyboard-grab time is set to the time at which the key was pressed (as transmitted in the KeyPress event), and the KeyPress event is reported if all of the following conditions are true:. the keyboard is not grabbed and the specified key (which can itself be a modifier key) is logically pressed when the specified modifier keys are logically down, and no other modifier keys are logically down;; either the grab window ""id"" is an ancestor of (or is) the focus window, or ""id"" is a descendant of the focus window and contains the pointer;; a passive grab on the same key combination does not exist on any ancestor of grab_window. Parameters. [in]idwindow id ; [in]keycodespecifies the KeyCode or AnyKey ; [in]modifierspecifies the set of keymasks or AnyModifier; the mask is the bitwise inclusive OR of the valid keymask bits ; [in]graba switch between grab/ungrab key grab = kTRUE grab the key and modifier grab = kFALSE ungrab the key and modifier . Reimplemented from TVirtualX.; Definition at line 2715 of file TGCocoa.mm. ◆ GrabPointer(). void TGCocoa::GrabPointer ; (; Window_t ; id, . UInt_t ; evmask, . Window_t ; confine, . Cursor_t ; cursor, . Bool_t ; grab = kTRUE, . Bool_t ; owner_events = kTRUE . ). overridevirtual . Establishes an active pointer grab. ; While an active pointer grab is in effect, further pointer events are only reported to the grabbing client window. ; Reimplemented from TVirtualX.; Definition at line 2678 of file TGCocoa.mm. ◆ HasTTFonts(). Bool_t TGCocoa::HasTTFonts ; (; ); const. overridevirtual . Returns True when TrueType fonts are used. ; Reimplemented from TVirtualX.; Definition at line 2841 of file TGCocoa.mm. ◆ IconifyWindow(). void TGCocoa::IconifyWindow ; (; Window_t ; id). overridevirtual . Iconifies the window ""id"". ; Reimplemented from TVir",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:92871,Availability,failure,failure,92871,"d from TVirtualX.; Definition at line 2715 of file TGCocoa.mm. ◆ GrabPointer(). void TGCocoa::GrabPointer ; (; Window_t ; id, . UInt_t ; evmask, . Window_t ; confine, . Cursor_t ; cursor, . Bool_t ; grab = kTRUE, . Bool_t ; owner_events = kTRUE . ). overridevirtual . Establishes an active pointer grab. ; While an active pointer grab is in effect, further pointer events are only reported to the grabbing client window. ; Reimplemented from TVirtualX.; Definition at line 2678 of file TGCocoa.mm. ◆ HasTTFonts(). Bool_t TGCocoa::HasTTFonts ; (; ); const. overridevirtual . Returns True when TrueType fonts are used. ; Reimplemented from TVirtualX.; Definition at line 2841 of file TGCocoa.mm. ◆ IconifyWindow(). void TGCocoa::IconifyWindow ; (; Window_t ; id). overridevirtual . Iconifies the window ""id"". ; Reimplemented from TVirtualX.; Definition at line 1308 of file TGCocoa.mm. ◆ Init(). Bool_t TGCocoa::Init ; (; void * ; display). overridevirtual . Initializes the X system. ; Returns kFALSE in case of failure. It is implementation dependent. ; Reimplemented from TVirtualX.; Definition at line 491 of file TGCocoa.mm. ◆ InitWindow(). Int_t TGCocoa::InitWindow ; (; ULong_t ; window). overridevirtual . Creates a new window and return window number. ; Returns -1 if window initialization fails. ; Reimplemented from TVirtualX.; Definition at line 640 of file TGCocoa.mm. ◆ InternAtom(). Atom_t TGCocoa::InternAtom ; (; const char * ; atom_name, . Bool_t ; only_if_exist . ). overridevirtual . Returns the atom identifier associated with the specified ""atom_name"" string. ; If ""only_if_exists"" is False, the atom is created if it does not exist. If the atom name is not in the Host Portable Character Encoding, the result is implementation dependent. Uppercase and lowercase matter; the strings ""thing"", ""Thing"", and ""thinG"" all designate different atoms. ; Reimplemented from TVirtualX.; Definition at line 3577 of file TGCocoa.mm. ◆ IntersectRegion(). void TGCocoa::IntersectRegion ; (; Regi",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:101506,Availability,failure,failure,101506,"es ""tgwindow"" to be updated. ; Returns kTRUE if the notification was desirable and it was sent; At the moment only Qt4 layer needs that; One needs explicitly cast the first parameter to TGWindow to make it working in the implementation.; One needs to process the notification to confine all paint operations within ""expose"" / ""paint"" like low level event or equivalent ; Reimplemented from TVirtualX.; Definition at line 4182 of file TGCocoa.mm. ◆ NextEvent(). void TGCocoa::NextEvent ; (; Event_t & ; event). overridevirtual . The ""event"" is set to default event. ; This method however, should never be called. ; Reimplemented from TVirtualX.; Definition at line 3531 of file TGCocoa.mm. ◆ OpenDisplay(). Int_t TGCocoa::OpenDisplay ; (; const char * ; dpyName). overridevirtual . Opens connection to display server (if such a thing exist on the current platform). ; The encoding and interpretation of the display name.; On X11 this method returns on success the X display socket descriptor >0, 0 in case of batch mode, and <0 in case of failure (cannot connect to display dpyName). ; Reimplemented from TVirtualX.; Definition at line 500 of file TGCocoa.mm. ◆ OpenPixmap(). Int_t TGCocoa::OpenPixmap ; (; UInt_t ; w, . UInt_t ; h . ). overridevirtual . Creates a pixmap of the width ""w"" and height ""h"" you specified. ; Reimplemented from TVirtualX.; Definition at line 2331 of file TGCocoa.mm. ◆ operator=(). TGCocoa & TGCocoa::operator= ; (; const TGCocoa & ; rhs). private . ◆ ParseColor(). Bool_t TGCocoa::ParseColor ; (; Colormap_t ; cmap, . const char * ; cname, . ColorStruct_t & ; color . ). overridevirtual . Looks up the string name of a color ""cname"" with respect to the screen associated with the specified colormap. ; It returns the exact color value. If the color name is not in the Host Portable Character Encoding, the result is implementation dependent.; Parameters. [in]cmapthe colormap ; [in]cnamethe color name string; use of uppercase or lowercase does not matter ; [in]colorretur",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:104218,Availability,mask,mask,104218,"on ; [in]windingspecifies the winding-rule is set (kTRUE) or not(kFALSE) . Reimplemented from TVirtualX.; Definition at line 4311 of file TGCocoa.mm. ◆ PutImage(). void TGCocoa::PutImage ; (; Drawable_t ; id, . GContext_t ; gc, . Drawable_t ; img, . Int_t ; dx, . Int_t ; dy, . Int_t ; x, . Int_t ; y, . UInt_t ; w, . UInt_t ; h . ). overridevirtual . Combines an image with a rectangle of the specified drawable. ; The section of the image defined by the x, y, width, and height arguments is drawn on the specified part of the drawable.; Parameters. [in]idthe drawable ; [in]gcthe GC ; [in]imgthe image you want combined with the rectangle ; [in]dxthe offset in X from the left edge of the image ; [in]dythe offset in Y from the top edge of the image ; [in]x,ycoordinates, which are relative to the origin of the drawable and are the coordinates of the subimage ; [in]w,hthe width and height of the subimage, which define the rectangle dimensions. GC components in use: function, plane-mask, subwindow-mode, clip-x-origin, clip-y-origin, and clip-mask. GC mode-dependent components: foreground and background. (see also the GCValues_t structure) ; Reimplemented from TVirtualX.; Definition at line 2622 of file TGCocoa.mm. ◆ PutPixel(). void TGCocoa::PutPixel ; (; Drawable_t ; id, . Int_t ; x, . Int_t ; y, . ULong_t ; pixel . ). overridevirtual . Overwrites the pixel in the image with the specified pixel value. ; The image must contain the x and y coordinates.; Parameters. [in]idspecifies the image ; [in]x,ycoordinates ; [in]pixelthe new pixel value . Reimplemented from TVirtualX.; Definition at line 2600 of file TGCocoa.mm. ◆ QueryColor(). void TGCocoa::QueryColor ; (; Colormap_t ; cmap, . ColorStruct_t & ; color . ). overridevirtual . Returns the current RGB value for the pixel in the ""color"" structure. ; The color components are set to default.; Parameters. [in]cmapthe colormap ; [in]colorspecifies and returns the RGB values for the pixel specified in the structure . Reimplemented f",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:104279,Availability,mask,mask,104279,"on ; [in]windingspecifies the winding-rule is set (kTRUE) or not(kFALSE) . Reimplemented from TVirtualX.; Definition at line 4311 of file TGCocoa.mm. ◆ PutImage(). void TGCocoa::PutImage ; (; Drawable_t ; id, . GContext_t ; gc, . Drawable_t ; img, . Int_t ; dx, . Int_t ; dy, . Int_t ; x, . Int_t ; y, . UInt_t ; w, . UInt_t ; h . ). overridevirtual . Combines an image with a rectangle of the specified drawable. ; The section of the image defined by the x, y, width, and height arguments is drawn on the specified part of the drawable.; Parameters. [in]idthe drawable ; [in]gcthe GC ; [in]imgthe image you want combined with the rectangle ; [in]dxthe offset in X from the left edge of the image ; [in]dythe offset in Y from the top edge of the image ; [in]x,ycoordinates, which are relative to the origin of the drawable and are the coordinates of the subimage ; [in]w,hthe width and height of the subimage, which define the rectangle dimensions. GC components in use: function, plane-mask, subwindow-mode, clip-x-origin, clip-y-origin, and clip-mask. GC mode-dependent components: foreground and background. (see also the GCValues_t structure) ; Reimplemented from TVirtualX.; Definition at line 2622 of file TGCocoa.mm. ◆ PutPixel(). void TGCocoa::PutPixel ; (; Drawable_t ; id, . Int_t ; x, . Int_t ; y, . ULong_t ; pixel . ). overridevirtual . Overwrites the pixel in the image with the specified pixel value. ; The image must contain the x and y coordinates.; Parameters. [in]idspecifies the image ; [in]x,ycoordinates ; [in]pixelthe new pixel value . Reimplemented from TVirtualX.; Definition at line 2600 of file TGCocoa.mm. ◆ QueryColor(). void TGCocoa::QueryColor ; (; Colormap_t ; cmap, . ColorStruct_t & ; color . ). overridevirtual . Returns the current RGB value for the pixel in the ""color"" structure. ; The color components are set to default.; Parameters. [in]cmapthe colormap ; [in]colorspecifies and returns the RGB values for the pixel specified in the structure . Reimplemented f",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:105714,Availability,mask,mask,105714,"in]idspecifies the image ; [in]x,ycoordinates ; [in]pixelthe new pixel value . Reimplemented from TVirtualX.; Definition at line 2600 of file TGCocoa.mm. ◆ QueryColor(). void TGCocoa::QueryColor ; (; Colormap_t ; cmap, . ColorStruct_t & ; color . ). overridevirtual . Returns the current RGB value for the pixel in the ""color"" structure. ; The color components are set to default.; Parameters. [in]cmapthe colormap ; [in]colorspecifies and returns the RGB values for the pixel specified in the structure . Reimplemented from TVirtualX.; Definition at line 2927 of file TGCocoa.mm. ◆ QueryPointer() [1/2]. void TGCocoa::QueryPointer ; (; Int_t & ; ix, . Int_t & ; iy . ). overridevirtual . Returns the pointer position. ; Reimplemented from TVirtualX.; Definition at line 3144 of file TGCocoa.mm. ◆ QueryPointer() [2/2]. void TGCocoa::QueryPointer ; (; Window_t ; id, . Window_t & ; rootw, . Window_t & ; childw, . Int_t & ; root_x, . Int_t & ; root_y, . Int_t & ; win_x, . Int_t & ; win_y, . UInt_t & ; mask . ). overridevirtual . Returns the root window the pointer is logically on and the pointer coordinates relative to the root window's origin. ; Parameters. [in]idspecifies the window ; [in]rootwthe root window that the pointer is in ; [in]childwthe child window that the pointer is located in, if any ; [in]root_x,root_ythe pointer coordinates relative to the root window's origin ; [in]win_x,win_ythe pointer coordinates relative to the specified window ""id"" ; [in]maskthe current state of the modifier keys and pointer buttons . Reimplemented from TVirtualX.; Definition at line 3155 of file TGCocoa.mm. ◆ RaiseWindow(). void TGCocoa::RaiseWindow ; (; Window_t ; id). overridevirtual . Raises the specified window to the top of the stack so that no sibling window obscures it. ; Reimplemented from TVirtualX.; Definition at line 1214 of file TGCocoa.mm. ◆ ReadGIF(). Pixmap_t TGCocoa::ReadGIF ; (; Int_t ; x0, . Int_t ; y0, . const char * ; file, . Window_t ; id . ). overridevirtual . If id",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:106184,Availability,mask,maskthe,106184," components are set to default.; Parameters. [in]cmapthe colormap ; [in]colorspecifies and returns the RGB values for the pixel specified in the structure . Reimplemented from TVirtualX.; Definition at line 2927 of file TGCocoa.mm. ◆ QueryPointer() [1/2]. void TGCocoa::QueryPointer ; (; Int_t & ; ix, . Int_t & ; iy . ). overridevirtual . Returns the pointer position. ; Reimplemented from TVirtualX.; Definition at line 3144 of file TGCocoa.mm. ◆ QueryPointer() [2/2]. void TGCocoa::QueryPointer ; (; Window_t ; id, . Window_t & ; rootw, . Window_t & ; childw, . Int_t & ; root_x, . Int_t & ; root_y, . Int_t & ; win_x, . Int_t & ; win_y, . UInt_t & ; mask . ). overridevirtual . Returns the root window the pointer is logically on and the pointer coordinates relative to the root window's origin. ; Parameters. [in]idspecifies the window ; [in]rootwthe root window that the pointer is in ; [in]childwthe child window that the pointer is located in, if any ; [in]root_x,root_ythe pointer coordinates relative to the root window's origin ; [in]win_x,win_ythe pointer coordinates relative to the specified window ""id"" ; [in]maskthe current state of the modifier keys and pointer buttons . Reimplemented from TVirtualX.; Definition at line 3155 of file TGCocoa.mm. ◆ RaiseWindow(). void TGCocoa::RaiseWindow ; (; Window_t ; id). overridevirtual . Raises the specified window to the top of the stack so that no sibling window obscures it. ; Reimplemented from TVirtualX.; Definition at line 1214 of file TGCocoa.mm. ◆ ReadGIF(). Pixmap_t TGCocoa::ReadGIF ; (; Int_t ; x0, . Int_t ; y0, . const char * ; file, . Window_t ; id . ). overridevirtual . If id is NULL - loads the specified gif file at position [x0,y0] in the current window. ; Otherwise creates pixmap from gif file ; Reimplemented from TVirtualX.; Definition at line 4044 of file TGCocoa.mm. ◆ ReadPictureDataFromFile(). Bool_t TGCocoa::ReadPictureDataFromFile ; (; const char * ; filename, . char *** ; ret_data . ). overridevirtual . Reads",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:111384,Availability,mask,mask,111384,"n at line 771 of file TGCocoa.mm. ◆ ResizeWindow() [2/2]. void TGCocoa::ResizeWindow ; (; Window_t ; id, . UInt_t ; w, . UInt_t ; h . ). overridevirtual . Changes the width and height of the specified window ""id"", not including its borders. ; This function does not change the window's upper-left coordinate.; Parameters. [in]idwindow identifier ; [in]w,hthe width and height, which are the interior dimensions of the window after the call completes. . Reimplemented from TVirtualX.; Definition at line 1286 of file TGCocoa.mm. ◆ ScreenWidthMM(). UInt_t TGCocoa::ScreenWidthMM ; (; ); const. overridevirtual . Returns the width of the screen in millimeters. ; Reimplemented from TVirtualX.; Definition at line 551 of file TGCocoa.mm. ◆ SelectInput(). void TGCocoa::SelectInput ; (; Window_t ; id, . UInt_t ; evmask . ). overridevirtual . Defines which input events the window is interested in. ; By default events are propagated up the window stack. This mask can also be set at window creation time via the SetWindowAttributes_t::fEventMask attribute. ; Reimplemented from TVirtualX.; Definition at line 1022 of file TGCocoa.mm. ◆ SelectPixmap(). void TGCocoa::SelectPixmap ; (; Int_t ; qpixid). overridevirtual . Selects the pixmap ""qpixid"". ; Reimplemented from TVirtualX.; Definition at line 2369 of file TGCocoa.mm. ◆ SelectWindow(). void TGCocoa::SelectWindow ; (; Int_t ; wid). overridevirtual . Selects the window ""wid"" to which subsequent output is directed. ; Reimplemented from TVirtualX.; Definition at line 674 of file TGCocoa.mm. ◆ SendEvent(). void TGCocoa::SendEvent ; (; Window_t ; id, . Event_t * ; ev . ). overridevirtual . Specifies the event ""ev"" is to be sent to the window ""id"". ; This function requires you to pass an event mask. ; Reimplemented from TVirtualX.; Definition at line 3516 of file TGCocoa.mm. ◆ SetApplicationIcon(). void TGCocoa::SetApplicationIcon ; (; ). private . Definition at line 4513 of file TGCocoa.mm. ◆ SetCharacterUp(). void TGCocoa::SetCharacterUp ; ",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:112177,Availability,mask,mask,112177,"oa.mm. ◆ SelectInput(). void TGCocoa::SelectInput ; (; Window_t ; id, . UInt_t ; evmask . ). overridevirtual . Defines which input events the window is interested in. ; By default events are propagated up the window stack. This mask can also be set at window creation time via the SetWindowAttributes_t::fEventMask attribute. ; Reimplemented from TVirtualX.; Definition at line 1022 of file TGCocoa.mm. ◆ SelectPixmap(). void TGCocoa::SelectPixmap ; (; Int_t ; qpixid). overridevirtual . Selects the pixmap ""qpixid"". ; Reimplemented from TVirtualX.; Definition at line 2369 of file TGCocoa.mm. ◆ SelectWindow(). void TGCocoa::SelectWindow ; (; Int_t ; wid). overridevirtual . Selects the window ""wid"" to which subsequent output is directed. ; Reimplemented from TVirtualX.; Definition at line 674 of file TGCocoa.mm. ◆ SendEvent(). void TGCocoa::SendEvent ; (; Window_t ; id, . Event_t * ; ev . ). overridevirtual . Specifies the event ""ev"" is to be sent to the window ""id"". ; This function requires you to pass an event mask. ; Reimplemented from TVirtualX.; Definition at line 3516 of file TGCocoa.mm. ◆ SetApplicationIcon(). void TGCocoa::SetApplicationIcon ; (; ). private . Definition at line 4513 of file TGCocoa.mm. ◆ SetCharacterUp(). void TGCocoa::SetCharacterUp ; (; Float_t ; chupx, . Float_t ; chupy . ). overridevirtual . Sets character up vector. ; Reimplemented from TVirtualX.; Definition at line 4096 of file TGCocoa.mm. ◆ SetClassHints(). void TGCocoa::SetClassHints ; (; Window_t ; id, . char * ; className, . char * ; resourceName . ). overridevirtual . Sets the windows class and resource name. ; Reimplemented from TVirtualX.; Definition at line 1545 of file TGCocoa.mm. ◆ SetClipOFF(). void TGCocoa::SetClipOFF ; (; Int_t ; wid). overridevirtual . Turns off the clipping for the window ""wid"". ; Reimplemented from TVirtualX.; Definition at line 4102 of file TGCocoa.mm. ◆ SetClipRectangles(). void TGCocoa::SetClipRectangles ; (; GContext_t ; gc, . Int_t ; x, . Int_t ; y, . Re",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:113368,Availability,mask,mask,113368,"513 of file TGCocoa.mm. ◆ SetCharacterUp(). void TGCocoa::SetCharacterUp ; (; Float_t ; chupx, . Float_t ; chupy . ). overridevirtual . Sets character up vector. ; Reimplemented from TVirtualX.; Definition at line 4096 of file TGCocoa.mm. ◆ SetClassHints(). void TGCocoa::SetClassHints ; (; Window_t ; id, . char * ; className, . char * ; resourceName . ). overridevirtual . Sets the windows class and resource name. ; Reimplemented from TVirtualX.; Definition at line 1545 of file TGCocoa.mm. ◆ SetClipOFF(). void TGCocoa::SetClipOFF ; (; Int_t ; wid). overridevirtual . Turns off the clipping for the window ""wid"". ; Reimplemented from TVirtualX.; Definition at line 4102 of file TGCocoa.mm. ◆ SetClipRectangles(). void TGCocoa::SetClipRectangles ; (; GContext_t ; gc, . Int_t ; x, . Int_t ; y, . Rectangle_t * ; recs, . Int_t ; n . ). overridevirtual . Sets clipping rectangles in graphics context. ; [x,y] specify the origin of the rectangles. ""recs"" specifies an array of rectangles that define the clipping mask and ""n"" is the number of rectangles. (see also the GCValues_t structure) ; Reimplemented from TVirtualX.; Definition at line 4276 of file TGCocoa.mm. ◆ SetClipRegion(). void TGCocoa::SetClipRegion ; (; Int_t ; wid, . Int_t ; x, . Int_t ; y, . UInt_t ; w, . UInt_t ; h . ). overridevirtual . Sets clipping region for the window ""wid"". ; Parameters. [in]widwindow identifier ; [in]x,yorigin of clipping rectangle ; [in]w,hthe clipping rectangle dimensions . Reimplemented from TVirtualX.; Definition at line 4108 of file TGCocoa.mm. ◆ SetCursor() [1/2]. void TGCocoa::SetCursor ; (; Int_t ; win, . ECursor ; cursor . ). overridevirtual . The cursor ""cursor"" will be used when the pointer is in the window ""wid"". ; Reimplemented from TVirtualX.; Definition at line 3122 of file TGCocoa.mm. ◆ SetCursor() [2/2]. void TGCocoa::SetCursor ; (; Window_t ; id, . Cursor_t ; curid . ). overridevirtual . Sets the cursor ""curid"" to be used when the pointer is in the window ""id"". ; Reimplemente",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:116624,Availability,echo,echo,116624,"3918 of file TGCocoa.mm. ◆ SetDoubleBuffer(). void TGCocoa::SetDoubleBuffer ; (; Int_t ; wid, . Int_t ; mode . ). overridevirtual . Sets the double buffer on/off on the window ""wid"". ; Parameters. [in]widwindow identifier.; 999 means all opened windows. . [in]modethe on/off switch; mode = 1 double buffer is on; mode = 0 double buffer is off . Reimplemented from TVirtualX.; Definition at line 3441 of file TGCocoa.mm. ◆ SetDoubleBufferOFF(). void TGCocoa::SetDoubleBufferOFF ; (; ). overridevirtual . Turns double buffer mode off. ; Reimplemented from TVirtualX.; Definition at line 3456 of file TGCocoa.mm. ◆ SetDoubleBufferON(). void TGCocoa::SetDoubleBufferON ; (; ). overridevirtual . Turns double buffer mode on. ; Reimplemented from TVirtualX.; Definition at line 3462 of file TGCocoa.mm. ◆ SetDrawMode(). void TGCocoa::SetDrawMode ; (; EDrawMode ; mode). overridevirtual . Sets the drawing mode. ; Parameters. [in]modedrawing mode.; mode = 1 copy; mode = 2 xor; mode = 3 invert; mode = 4 set the suitable mode for cursor echo according to the vendor . Reimplemented from TVirtualX.; Definition at line 3495 of file TGCocoa.mm. ◆ SetForeground(). void TGCocoa::SetForeground ; (; GContext_t ; gc, . ULong_t ; foreground . ). overridevirtual . Sets the foreground color for the specified GC (shortcut for ChangeGC with only foreground mask set). ; Parameters. [in]gcspecifies the GC ; [in]foregroundthe foreground you want to set. (see also the GCValues_t structure) ; Reimplemented from TVirtualX.; Definition at line 2995 of file TGCocoa.mm. ◆ SetIconName(). void TGCocoa::SetIconName ; (; Window_t ; id, . char * ; name . ). overridevirtual . Sets the window icon name. ; Reimplemented from TVirtualX.; Definition at line 1533 of file TGCocoa.mm. ◆ SetIconPixmap(). void TGCocoa::SetIconPixmap ; (; Window_t ; id, . Pixmap_t ; pix . ). overridevirtual . Sets the icon name pixmap. ; Reimplemented from TVirtualX.; Definition at line 1539 of file TGCocoa.mm. ◆ SetInputFocus(). void TGCocoa:",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:116936,Availability,mask,mask,116936,"ffer is on; mode = 0 double buffer is off . Reimplemented from TVirtualX.; Definition at line 3441 of file TGCocoa.mm. ◆ SetDoubleBufferOFF(). void TGCocoa::SetDoubleBufferOFF ; (; ). overridevirtual . Turns double buffer mode off. ; Reimplemented from TVirtualX.; Definition at line 3456 of file TGCocoa.mm. ◆ SetDoubleBufferON(). void TGCocoa::SetDoubleBufferON ; (; ). overridevirtual . Turns double buffer mode on. ; Reimplemented from TVirtualX.; Definition at line 3462 of file TGCocoa.mm. ◆ SetDrawMode(). void TGCocoa::SetDrawMode ; (; EDrawMode ; mode). overridevirtual . Sets the drawing mode. ; Parameters. [in]modedrawing mode.; mode = 1 copy; mode = 2 xor; mode = 3 invert; mode = 4 set the suitable mode for cursor echo according to the vendor . Reimplemented from TVirtualX.; Definition at line 3495 of file TGCocoa.mm. ◆ SetForeground(). void TGCocoa::SetForeground ; (; GContext_t ; gc, . ULong_t ; foreground . ). overridevirtual . Sets the foreground color for the specified GC (shortcut for ChangeGC with only foreground mask set). ; Parameters. [in]gcspecifies the GC ; [in]foregroundthe foreground you want to set. (see also the GCValues_t structure) ; Reimplemented from TVirtualX.; Definition at line 2995 of file TGCocoa.mm. ◆ SetIconName(). void TGCocoa::SetIconName ; (; Window_t ; id, . char * ; name . ). overridevirtual . Sets the window icon name. ; Reimplemented from TVirtualX.; Definition at line 1533 of file TGCocoa.mm. ◆ SetIconPixmap(). void TGCocoa::SetIconPixmap ; (; Window_t ; id, . Pixmap_t ; pix . ). overridevirtual . Sets the icon name pixmap. ; Reimplemented from TVirtualX.; Definition at line 1539 of file TGCocoa.mm. ◆ SetInputFocus(). void TGCocoa::SetInputFocus ; (; Window_t ; id). overridevirtual . Changes the input focus to specified window ""id"". ; Reimplemented from TVirtualX.; Definition at line 2776 of file TGCocoa.mm. ◆ SetKeyAutoRepeat(). void TGCocoa::SetKeyAutoRepeat ; (; Bool_t ; on = kTRUE). overridevirtual . Turns key auto repeat ",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:122486,Availability,mask,mask,122486,"max,hmaxspecify the maximum window size ; [in]winc,hincdefine an arithmetic progression of sizes into which the window to be resized (minimum to maximum) . Reimplemented from TVirtualX.; Definition at line 1637 of file TGCocoa.mm. ◆ SetWMState(). void TGCocoa::SetWMState ; (; Window_t ; id, . EInitialState ; state . ). overridevirtual . Sets the initial state of the window ""id"": either kNormalState or kIconicState. ; Reimplemented from TVirtualX.; Definition at line 1653 of file TGCocoa.mm. ◆ SetWMTransientHint(). void TGCocoa::SetWMTransientHint ; (; Window_t ; id, . Window_t ; main_id . ). overridevirtual . Tells window manager that the window ""id"" is a transient window of the window ""main_id"". ; A window manager may decide not to decorate a transient window or may treat it differently in other ways. ; Reimplemented from TVirtualX.; Definition at line 1659 of file TGCocoa.mm. ◆ ShapeCombineMask(). void TGCocoa::ShapeCombineMask ; (; Window_t ; id, . Int_t ; x, . Int_t ; y, . Pixmap_t ; mask . ). overridevirtual . The Non-rectangular Window Shape Extension adds non-rectangular windows to the System. ; This allows for making shaped (partially transparent) windows ; Reimplemented from TVirtualX.; Definition at line 1551 of file TGCocoa.mm. ◆ Streamer(). void TGCocoa::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject.; Reimplemented in TGQuartz. ◆ StreamerNVirtual(). void TGCocoa::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 476 of file TGCocoa.h. ◆ SubtractRegion(). void TGCocoa::SubtractRegion ; (; Region_t ; rega, . Region_t ; regb, . Region_t ; result . ). overridevirtual . Subtracts regb from rega and stores the results in result. ; Reimplemented from TVirtualX.; Definition at line 4344 of file TGCocoa.mm. ◆ SupportsExtension(). Int_t TGCocoa::SupportsExtension ; (; const char * ; ext); const. overridevirtual . Returns 1 if window system server supports",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:123588,Availability,error,error,123588,"r Window Shape Extension adds non-rectangular windows to the System. ; This allows for making shaped (partially transparent) windows ; Reimplemented from TVirtualX.; Definition at line 1551 of file TGCocoa.mm. ◆ Streamer(). void TGCocoa::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject.; Reimplemented in TGQuartz. ◆ StreamerNVirtual(). void TGCocoa::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 476 of file TGCocoa.h. ◆ SubtractRegion(). void TGCocoa::SubtractRegion ; (; Region_t ; rega, . Region_t ; regb, . Region_t ; result . ). overridevirtual . Subtracts regb from rega and stores the results in result. ; Reimplemented from TVirtualX.; Definition at line 4344 of file TGCocoa.mm. ◆ SupportsExtension(). Int_t TGCocoa::SupportsExtension ; (; const char * ; ext); const. overridevirtual . Returns 1 if window system server supports extension given by the argument, returns 0 in case extension is not supported and returns -1 in case of error (like server not initialized). ; Reimplemented from TVirtualX.; Definition at line 517 of file TGCocoa.mm. ◆ Sync(). void TGCocoa::Sync ; (; Int_t ; mode). overridevirtual . Set synchronisation on or off. ; Parameters. [in]modesynchronisation on/off; mode=1 on; mode<>0 off . Reimplemented from TVirtualX.; Definition at line 4125 of file TGCocoa.mm. ◆ TextWidth(). Int_t TGCocoa::TextWidth ; (; FontStruct_t ; font, . const char * ; s, . Int_t ; len . ). overridevirtual . Return length of the string ""s"" in pixels. Size depends on font. ; Reimplemented from TVirtualX.; Definition at line 2849 of file TGCocoa.mm. ◆ TranslateCoordinates(). void TGCocoa::TranslateCoordinates ; (; Window_t ; src, . Window_t ; dest, . Int_t ; src_x, . Int_t ; src_y, . Int_t & ; dest_x, . Int_t & ; dest_y, . Window_t & ; child . ). overridevirtual . Translates coordinates in one window to the coordinate space of another window. ; It takes the ""src_x"" ",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:18584,Deployability,update,updated,18584,"wID) override;  Makes context ctx current OpenGL context. ;  ; void MapRaised (Window_t wid) override;  Maps the window ""id"" and all of its subwindows that have had map requests on the screen and put this window on the top of of the stack of all windows. ;  ; void MapSubwindows (Window_t wid) override;  Maps all subwindows for the specified window ""id"" in top-to-bottom stacking order. ;  ; void MapWindow (Window_t wid) override;  Maps the window ""id"" and all of its subwindows that have had map requests. ;  ; void MoveResizeWindow (Window_t wid, Int_t x, Int_t y, UInt_t w, UInt_t h) override;  Changes the size and location of the specified window ""id"" without raising it. ;  ; void MoveWindow (Int_t wid, Int_t x, Int_t y) override;  Moves the window ""wid"" to the specified x and y coordinates. ;  ; void MoveWindow (Window_t wid, Int_t x, Int_t y) override;  Moves the specified window to the specified x and y coordinates. ;  ; Bool_t NeedRedraw (ULong_t tgwindow, Bool_t force) override;  Notify the low level GUI layer ROOT requires ""tgwindow"" to be updated. ;  ; void NextEvent (Event_t &event) override;  The ""event"" is set to default event. ;  ; Int_t OpenDisplay (const char *displayName) override;  Opens connection to display server (if such a thing exist on the current platform). ;  ; Int_t OpenPixmap (UInt_t w, UInt_t h) override;  Creates a pixmap of the width ""w"" and height ""h"" you specified. ;  ; Bool_t ParseColor (Colormap_t cmap, const char *cname, ColorStruct_t &color) override;  Looks up the string name of a color ""cname"" with respect to the screen associated with the specified colormap. ;  ; Bool_t PointInRegion (Int_t x, Int_t y, Region_t reg) override;  Returns kTRUE if the point [x, y] is contained in the region reg. ;  ; Region_t PolygonRegion (Point_t *points, Int_t np, Bool_t winding) override;  Returns a region for the polygon defined by the points array. ;  ; void PutImage (Drawable_t wid, GContext_t gc, Drawable_t img, Int_t dx, Int_t dy, Int_t x, In",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:100488,Deployability,update,updated,100488,"tual . Moves the window ""wid"" to the specified x and y coordinates. ; It does not change the window's size, raise the window, or change the mapping state of the window.; Parameters. [in]widwindow identifier ; [in]x,ycoordinates, which define the new position of the window relative to its parent. . Reimplemented from TVirtualX.; Definition at line 749 of file TGCocoa.mm. ◆ MoveWindow() [2/2]. void TGCocoa::MoveWindow ; (; Window_t ; id, . Int_t ; x, . Int_t ; y . ). overridevirtual . Moves the specified window to the specified x and y coordinates. ; It does not change the window's size, raise the window, or change the mapping state of the window.; Parameters. [in]idwindow identifier ; [in]x,ycoordinates, which define the new position of the window relative to its parent. . Reimplemented from TVirtualX.; Definition at line 1248 of file TGCocoa.mm. ◆ NeedRedraw(). Bool_t TGCocoa::NeedRedraw ; (; ULong_t ; tgwindow, . Bool_t ; force . ). overridevirtual . Notify the low level GUI layer ROOT requires ""tgwindow"" to be updated. ; Returns kTRUE if the notification was desirable and it was sent; At the moment only Qt4 layer needs that; One needs explicitly cast the first parameter to TGWindow to make it working in the implementation.; One needs to process the notification to confine all paint operations within ""expose"" / ""paint"" like low level event or equivalent ; Reimplemented from TVirtualX.; Definition at line 4182 of file TGCocoa.mm. ◆ NextEvent(). void TGCocoa::NextEvent ; (; Event_t & ; event). overridevirtual . The ""event"" is set to default event. ; This method however, should never be called. ; Reimplemented from TVirtualX.; Definition at line 3531 of file TGCocoa.mm. ◆ OpenDisplay(). Int_t TGCocoa::OpenDisplay ; (; const char * ; dpyName). overridevirtual . Opens connection to display server (if such a thing exist on the current platform). ; The encoding and interpretation of the display name.; On X11 this method returns on success the X display socket descriptor >0",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:108963,Deployability,release,released,108963,"If the specified window is mapped, ReparentWindow automatically performs an UnmapWindow request on it, removes it from its current position in the hierarchy, and inserts it as the child of the specified parent. ; The window is placed in the stacking order on top with respect to sibling windows. ; Reimplemented from TVirtualX.; Definition at line 1111 of file TGCocoa.mm. ◆ RequestLocator(). Int_t TGCocoa::RequestLocator ; (; Int_t ; mode, . Int_t ; ctyp, . Int_t & ; x, . Int_t & ; y . ). overridevirtual . Requests Locator position. ; Parameters. [in]x,ycursor position at moment of button press (output) ; [in]ctypcursor type (input); ctyp = 1 tracking cross; ctyp = 2 cross-hair; ctyp = 3 rubber circle; ctyp = 4 rubber band; ctyp = 5 rubber rectangle. [in]modeinput mode; mode = 0 request; mode = 1 sample. Returns; in request mode:; 1 = left is pressed; 2 = middle is pressed; 3 = right is pressed. in sample mode:; 11 = left is released; 12 = middle is released; 13 = right is released; -1 = nothing is pressed or released; -2 = leave the window; else = keycode (keyboard is pressed) . Reimplemented from TVirtualX.; Definition at line 4053 of file TGCocoa.mm. ◆ RequestString(). Int_t TGCocoa::RequestString ; (; Int_t ; x, . Int_t ; y, . char * ; text . ). overridevirtual . Requests string: text is displayed and can be edited with Emacs-like keybinding. ; Returns termination code (0 for ESC, 1 for RETURN); Parameters. [in]x,yposition where text is displayed ; [in]textdisplayed text (as input), edited text (as output) . Reimplemented from TVirtualX.; Definition at line 4085 of file TGCocoa.mm. ◆ RescaleWindow(). void TGCocoa::RescaleWindow ; (; Int_t ; wid, . UInt_t ; w, . UInt_t ; h . ). overridevirtual . Rescales the window ""wid"". ; Parameters. [in]widwindow identifier ; [in]wthe width ; [in]hthe height . Reimplemented from TVirtualX.; Definition at line 763 of file TGCocoa.mm. ◆ ResizePixmap(). Int_t TGCocoa::ResizePixmap ; (; Int_t ; wid, . UInt_t ; w, . UInt_t ; h . ). o",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:108988,Deployability,release,released,108988,"If the specified window is mapped, ReparentWindow automatically performs an UnmapWindow request on it, removes it from its current position in the hierarchy, and inserts it as the child of the specified parent. ; The window is placed in the stacking order on top with respect to sibling windows. ; Reimplemented from TVirtualX.; Definition at line 1111 of file TGCocoa.mm. ◆ RequestLocator(). Int_t TGCocoa::RequestLocator ; (; Int_t ; mode, . Int_t ; ctyp, . Int_t & ; x, . Int_t & ; y . ). overridevirtual . Requests Locator position. ; Parameters. [in]x,ycursor position at moment of button press (output) ; [in]ctypcursor type (input); ctyp = 1 tracking cross; ctyp = 2 cross-hair; ctyp = 3 rubber circle; ctyp = 4 rubber band; ctyp = 5 rubber rectangle. [in]modeinput mode; mode = 0 request; mode = 1 sample. Returns; in request mode:; 1 = left is pressed; 2 = middle is pressed; 3 = right is pressed. in sample mode:; 11 = left is released; 12 = middle is released; 13 = right is released; -1 = nothing is pressed or released; -2 = leave the window; else = keycode (keyboard is pressed) . Reimplemented from TVirtualX.; Definition at line 4053 of file TGCocoa.mm. ◆ RequestString(). Int_t TGCocoa::RequestString ; (; Int_t ; x, . Int_t ; y, . char * ; text . ). overridevirtual . Requests string: text is displayed and can be edited with Emacs-like keybinding. ; Returns termination code (0 for ESC, 1 for RETURN); Parameters. [in]x,yposition where text is displayed ; [in]textdisplayed text (as input), edited text (as output) . Reimplemented from TVirtualX.; Definition at line 4085 of file TGCocoa.mm. ◆ RescaleWindow(). void TGCocoa::RescaleWindow ; (; Int_t ; wid, . UInt_t ; w, . UInt_t ; h . ). overridevirtual . Rescales the window ""wid"". ; Parameters. [in]widwindow identifier ; [in]wthe width ; [in]hthe height . Reimplemented from TVirtualX.; Definition at line 763 of file TGCocoa.mm. ◆ ResizePixmap(). Int_t TGCocoa::ResizePixmap ; (; Int_t ; wid, . UInt_t ; w, . UInt_t ; h . ). o",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:109012,Deployability,release,released,109012,"If the specified window is mapped, ReparentWindow automatically performs an UnmapWindow request on it, removes it from its current position in the hierarchy, and inserts it as the child of the specified parent. ; The window is placed in the stacking order on top with respect to sibling windows. ; Reimplemented from TVirtualX.; Definition at line 1111 of file TGCocoa.mm. ◆ RequestLocator(). Int_t TGCocoa::RequestLocator ; (; Int_t ; mode, . Int_t ; ctyp, . Int_t & ; x, . Int_t & ; y . ). overridevirtual . Requests Locator position. ; Parameters. [in]x,ycursor position at moment of button press (output) ; [in]ctypcursor type (input); ctyp = 1 tracking cross; ctyp = 2 cross-hair; ctyp = 3 rubber circle; ctyp = 4 rubber band; ctyp = 5 rubber rectangle. [in]modeinput mode; mode = 0 request; mode = 1 sample. Returns; in request mode:; 1 = left is pressed; 2 = middle is pressed; 3 = right is pressed. in sample mode:; 11 = left is released; 12 = middle is released; 13 = right is released; -1 = nothing is pressed or released; -2 = leave the window; else = keycode (keyboard is pressed) . Reimplemented from TVirtualX.; Definition at line 4053 of file TGCocoa.mm. ◆ RequestString(). Int_t TGCocoa::RequestString ; (; Int_t ; x, . Int_t ; y, . char * ; text . ). overridevirtual . Requests string: text is displayed and can be edited with Emacs-like keybinding. ; Returns termination code (0 for ESC, 1 for RETURN); Parameters. [in]x,yposition where text is displayed ; [in]textdisplayed text (as input), edited text (as output) . Reimplemented from TVirtualX.; Definition at line 4085 of file TGCocoa.mm. ◆ RescaleWindow(). void TGCocoa::RescaleWindow ; (; Int_t ; wid, . UInt_t ; w, . UInt_t ; h . ). overridevirtual . Rescales the window ""wid"". ; Parameters. [in]widwindow identifier ; [in]wthe width ; [in]hthe height . Reimplemented from TVirtualX.; Definition at line 763 of file TGCocoa.mm. ◆ ResizePixmap(). Int_t TGCocoa::ResizePixmap ; (; Int_t ; wid, . UInt_t ; w, . UInt_t ; h . ). o",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:109049,Deployability,release,released,109049,"If the specified window is mapped, ReparentWindow automatically performs an UnmapWindow request on it, removes it from its current position in the hierarchy, and inserts it as the child of the specified parent. ; The window is placed in the stacking order on top with respect to sibling windows. ; Reimplemented from TVirtualX.; Definition at line 1111 of file TGCocoa.mm. ◆ RequestLocator(). Int_t TGCocoa::RequestLocator ; (; Int_t ; mode, . Int_t ; ctyp, . Int_t & ; x, . Int_t & ; y . ). overridevirtual . Requests Locator position. ; Parameters. [in]x,ycursor position at moment of button press (output) ; [in]ctypcursor type (input); ctyp = 1 tracking cross; ctyp = 2 cross-hair; ctyp = 3 rubber circle; ctyp = 4 rubber band; ctyp = 5 rubber rectangle. [in]modeinput mode; mode = 0 request; mode = 1 sample. Returns; in request mode:; 1 = left is pressed; 2 = middle is pressed; 3 = right is pressed. in sample mode:; 11 = left is released; 12 = middle is released; 13 = right is released; -1 = nothing is pressed or released; -2 = leave the window; else = keycode (keyboard is pressed) . Reimplemented from TVirtualX.; Definition at line 4053 of file TGCocoa.mm. ◆ RequestString(). Int_t TGCocoa::RequestString ; (; Int_t ; x, . Int_t ; y, . char * ; text . ). overridevirtual . Requests string: text is displayed and can be edited with Emacs-like keybinding. ; Returns termination code (0 for ESC, 1 for RETURN); Parameters. [in]x,yposition where text is displayed ; [in]textdisplayed text (as input), edited text (as output) . Reimplemented from TVirtualX.; Definition at line 4085 of file TGCocoa.mm. ◆ RescaleWindow(). void TGCocoa::RescaleWindow ; (; Int_t ; wid, . UInt_t ; w, . UInt_t ; h . ). overridevirtual . Rescales the window ""wid"". ; Parameters. [in]widwindow identifier ; [in]wthe width ; [in]hthe height . Reimplemented from TVirtualX.; Definition at line 763 of file TGCocoa.mm. ◆ ResizePixmap(). Int_t TGCocoa::ResizePixmap ; (; Int_t ; wid, . UInt_t ; w, . UInt_t ; h . ). o",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:126883,Deployability,update,update,126883,"d from TVirtualX.; Definition at line 4323 of file TGCocoa.mm. ◆ UnmapWindow(). void TGCocoa::UnmapWindow ; (; Window_t ; id). overridevirtual . Unmaps the specified window ""id"". ; If the specified window is already unmapped, this function has no effect. Any child window will no longer be visible (but they are still mapped) until another map call is made on the parent. ; Reimplemented from TVirtualX.; Definition at line 1184 of file TGCocoa.mm. ◆ Update(). void TGCocoa::Update ; (; Int_t ; mode). overridevirtual . Flushes (mode = 0, default) or synchronizes (mode = 1) X output buffer. ; Flush flushes output buffer. Sync flushes buffer and waits till all requests have been processed by X server. ; Reimplemented from TVirtualX.; Definition at line 578 of file TGCocoa.mm. ◆ UpdateWindow(). void TGCocoa::UpdateWindow ; (; Int_t ; mode). overridevirtual . Updates or synchronises client and server once (not permanent). ; according to ""mode"".; Parameters. [in]modeupdate mode.; mode = 1 update; mode = 0 sync . Reimplemented from TVirtualX.; Definition at line 794 of file TGCocoa.mm. ◆ Warp(). void TGCocoa::Warp ; (; Int_t ; ix, . Int_t ; iy, . Window_t ; id . ). overridevirtual . Sets the pointer position. ; Parameters. [in]ixnew X coordinate of pointer ; [in]iynew Y coordinate of pointer ; [in]idwindow identifier. Coordinates are relative to the origin of the window id or to the origin of the current window if id == 0. ; Reimplemented from TVirtualX.; Definition at line 4134 of file TGCocoa.mm. ◆ WMDeleteNotify(). void TGCocoa::WMDeleteNotify ; (; Window_t ; id). overridevirtual . Tells WM to send message when window is closed via WM. ; Reimplemented from TVirtualX.; Definition at line 4270 of file TGCocoa.mm. ◆ WriteGIF(). Int_t TGCocoa::WriteGIF ; (; char * ; name). overridevirtual . Writes the current window into GIF file. ; Returns 1 in case of success, 0 otherwise. ; Reimplemented from TVirtualX.; Definition at line 4163 of file TGCocoa.mm. ◆ WritePixmap(). void TGCoc",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:53526,Energy Efficiency,allocate,allocated,53526,"t TGCocoa & ; rhs). private . Member Function Documentation. ◆ AddPixmap(). Int_t TGCocoa::AddPixmap ; (; ULong_t ; pixid, . UInt_t ; w, . UInt_t ; h . ). overridevirtual . Registers a pixmap created by TGLManager as a ROOT pixmap. ; Parameters. [in]pixidpixmap identifier ; [in]w,hthe width and height, which define the pixmap size . Reimplemented from TVirtualX.; Definition at line 2549 of file TGCocoa.mm. ◆ AddWindow(). Int_t TGCocoa::AddWindow ; (; ULong_t ; qwid, . UInt_t ; w, . UInt_t ; h . ). overridevirtual . Registers a window created by Qt as a ROOT window. ; Parameters. [in]qwidwindow identifier ; [in]w,hthe width and height, which define the window size . Reimplemented from TVirtualX.; Definition at line 846 of file TGCocoa.mm. ◆ AllocColor(). Bool_t TGCocoa::AllocColor ; (; Colormap_t ; cmap, . ColorStruct_t & ; color . ). overridevirtual . Allocates a read-only colormap entry corresponding to the closest RGB value supported by the hardware. ; If no cell could be allocated it returns kFALSE, otherwise kTRUE.; The pixel value is set to default. Let system think we could allocate color.; Parameters. [in]cmapthe colormap ; [in]colorspecifies and returns the values actually used in the cmap . Reimplemented from TVirtualX.; Definition at line 2917 of file TGCocoa.mm. ◆ Bell(). void TGCocoa::Bell ; (; Int_t ; percent). overridevirtual . Sets the sound bell. Percent is loudness from -100% to 100%. ; Reimplemented from TVirtualX.; Definition at line 4264 of file TGCocoa.mm. ◆ ChangeActivePointerGrab(). void TGCocoa::ChangeActivePointerGrab ; (; Window_t ; , . UInt_t ; , . Cursor_t ;  . ). overridevirtual . Changes the specified dynamic parameters if the pointer is actively grabbed by the client and if the specified time is no earlier than the last-pointer-grab time and no later than the current X server time. ; Reimplemented from TVirtualX.; Definition at line 2699 of file TGCocoa.mm. ◆ ChangeGC(). void TGCocoa::ChangeGC ; (; GContext_t ; gc, . GCValues_t * ; gva",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:53634,Energy Efficiency,allocate,allocate,53634,"AddPixmap ; (; ULong_t ; pixid, . UInt_t ; w, . UInt_t ; h . ). overridevirtual . Registers a pixmap created by TGLManager as a ROOT pixmap. ; Parameters. [in]pixidpixmap identifier ; [in]w,hthe width and height, which define the pixmap size . Reimplemented from TVirtualX.; Definition at line 2549 of file TGCocoa.mm. ◆ AddWindow(). Int_t TGCocoa::AddWindow ; (; ULong_t ; qwid, . UInt_t ; w, . UInt_t ; h . ). overridevirtual . Registers a window created by Qt as a ROOT window. ; Parameters. [in]qwidwindow identifier ; [in]w,hthe width and height, which define the window size . Reimplemented from TVirtualX.; Definition at line 846 of file TGCocoa.mm. ◆ AllocColor(). Bool_t TGCocoa::AllocColor ; (; Colormap_t ; cmap, . ColorStruct_t & ; color . ). overridevirtual . Allocates a read-only colormap entry corresponding to the closest RGB value supported by the hardware. ; If no cell could be allocated it returns kFALSE, otherwise kTRUE.; The pixel value is set to default. Let system think we could allocate color.; Parameters. [in]cmapthe colormap ; [in]colorspecifies and returns the values actually used in the cmap . Reimplemented from TVirtualX.; Definition at line 2917 of file TGCocoa.mm. ◆ Bell(). void TGCocoa::Bell ; (; Int_t ; percent). overridevirtual . Sets the sound bell. Percent is loudness from -100% to 100%. ; Reimplemented from TVirtualX.; Definition at line 4264 of file TGCocoa.mm. ◆ ChangeActivePointerGrab(). void TGCocoa::ChangeActivePointerGrab ; (; Window_t ; , . UInt_t ; , . Cursor_t ;  . ). overridevirtual . Changes the specified dynamic parameters if the pointer is actively grabbed by the client and if the specified time is no earlier than the last-pointer-grab time and no later than the current X server time. ; Reimplemented from TVirtualX.; Definition at line 2699 of file TGCocoa.mm. ◆ ChangeGC(). void TGCocoa::ChangeGC ; (; GContext_t ; gc, . GCValues_t * ; gval . ). overridevirtual . Changes the components specified by the mask in gval for the speci",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:118792,Energy Efficiency,green,green,118792,"Repeat(). void TGCocoa::SetKeyAutoRepeat ; (; Bool_t ; on = kTRUE). overridevirtual . Turns key auto repeat on (kTRUE) or off (kFALSE). ; Reimplemented from TVirtualX.; Definition at line 2708 of file TGCocoa.mm. ◆ SetMWMHints(). void TGCocoa::SetMWMHints ; (; Window_t ; id, . UInt_t ; value, . UInt_t ; funcs, . UInt_t ; input . ). overridevirtual . Sets decoration style. ; Reimplemented from TVirtualX.; Definition at line 1585 of file TGCocoa.mm. ◆ SetPrimarySelectionOwner(). void TGCocoa::SetPrimarySelectionOwner ; (; Window_t ; id). overridevirtual . Makes the window ""id"" the current owner of the primary selection. ; That is the window in which, for example some text is selected. ; Reimplemented from TVirtualX.; Definition at line 3586 of file TGCocoa.mm. ◆ SetRGB(). void TGCocoa::SetRGB ; (; Int_t ; cindex, . Float_t ; r, . Float_t ; g, . Float_t ; b . ). overridevirtual . Sets color intensities the specified color index ""cindex"". ; Parameters. [in]cindexcolor index ; [in]r,g,bthe red, green, blue intensities between 0.0 and 1.0 . Reimplemented from TVirtualX.; Definition at line 2970 of file TGCocoa.mm. ◆ SetSelectionOwner(). Bool_t TGCocoa::SetSelectionOwner ; (; Window_t ; , . Atom_t & ;  . ). overridevirtual . Changes the owner and last-change time for the specified selection. ; Reimplemented from TVirtualX.; Definition at line 3612 of file TGCocoa.mm. ◆ SetTextMagnitude(). void TGCocoa::SetTextMagnitude ; (; Float_t ; mgn). overridevirtual . Sets the current text magnification factor to ""mgn"". ; Reimplemented from TVirtualX.; Definition at line 4119 of file TGCocoa.mm. ◆ SetTypeList(). void TGCocoa::SetTypeList ; (; Window_t ; win, . Atom_t ; prop, . Atom_t * ; typelist . ). overridevirtual . Add the list of drag and drop types to the Window win. ; Reimplemented from TVirtualX.; Definition at line 3984 of file TGCocoa.mm. ◆ SetWindowBackground(). void TGCocoa::SetWindowBackground ; (; Window_t ; id, . ULong_t ; color . ). overridevirtual . Sets the backgroun",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:473,Integrability,interface,interface,473,". ROOT: TGCocoa Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Static Public Attributes |; Protected Member Functions |; Protected Attributes |; Private Types |; Private Member Functions |; Private Attributes |; List of all members ; TGCocoa Class ReferenceGraphics » Graphics' Backends » Cocoa backend. ; This class implements TVirtualX interface for MacOS X, using Cocoa and Quartz 2D. ; TVirtualX is a typical fat interface, it's a ""C++ wrapper"" for X11 library. It's a union of several orthogonal interfaces like: color management, window management, pixmap management, cursors, events, images, drag and drop, font management, gui-rendering, non-gui graphics, etc. etc. ; Definition at line 58 of file TGCocoa.h. Public Member Functions;  TGCocoa ();  ;  TGCocoa (const char *name, const char *title);  ;  ~TGCocoa () override;  ; Int_t AddPixmap (ULong_t pixid, UInt_t w, UInt_t h) override;  Registers a pixmap created by TGLManager as a ROOT pixmap. ;  ; Int_t AddWindow (ULong_t qwid, UInt_t w, UInt_t h) override;  Registers a window created by Qt as a ROOT window. ;  ; Bool_t AllocColor (Colormap_t cmap, ColorStruct_t &color) override;  Allocates a read-only colormap entry corresponding to the closest RGB value supported by the hardware. ;  ; void Bell (Int_t percent) override;  Sets the sound bell. Percent is loudness from -100% to 100%. ;  ; void ChangeActivePointerGrab (Window_t, UInt_t, Cursor_t) override;  Changes the specified dynamic parameters if the pointer is actively grabbed by the client and if the specified time is no earlier than the last-pointer-grab time and no later than the current X server time. ;  ; void ChangeGC (GContext_t gc, GCValues_t *gval) override;  Changes the components specified by the mask in gval for the specified GC. ;  ; void ChangeProperties (Window_t wid, Atom_t property, Atom_t type, Int_t format, UChar",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:552,Integrability,interface,interface,552,". ROOT: TGCocoa Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Static Public Attributes |; Protected Member Functions |; Protected Attributes |; Private Types |; Private Member Functions |; Private Attributes |; List of all members ; TGCocoa Class ReferenceGraphics » Graphics' Backends » Cocoa backend. ; This class implements TVirtualX interface for MacOS X, using Cocoa and Quartz 2D. ; TVirtualX is a typical fat interface, it's a ""C++ wrapper"" for X11 library. It's a union of several orthogonal interfaces like: color management, window management, pixmap management, cursors, events, images, drag and drop, font management, gui-rendering, non-gui graphics, etc. etc. ; Definition at line 58 of file TGCocoa.h. Public Member Functions;  TGCocoa ();  ;  TGCocoa (const char *name, const char *title);  ;  ~TGCocoa () override;  ; Int_t AddPixmap (ULong_t pixid, UInt_t w, UInt_t h) override;  Registers a pixmap created by TGLManager as a ROOT pixmap. ;  ; Int_t AddWindow (ULong_t qwid, UInt_t w, UInt_t h) override;  Registers a window created by Qt as a ROOT window. ;  ; Bool_t AllocColor (Colormap_t cmap, ColorStruct_t &color) override;  Allocates a read-only colormap entry corresponding to the closest RGB value supported by the hardware. ;  ; void Bell (Int_t percent) override;  Sets the sound bell. Percent is loudness from -100% to 100%. ;  ; void ChangeActivePointerGrab (Window_t, UInt_t, Cursor_t) override;  Changes the specified dynamic parameters if the pointer is actively grabbed by the client and if the specified time is no earlier than the last-pointer-grab time and no later than the current X server time. ;  ; void ChangeGC (GContext_t gc, GCValues_t *gval) override;  Changes the components specified by the mask in gval for the specified GC. ;  ; void ChangeProperties (Window_t wid, Atom_t property, Atom_t type, Int_t format, UChar",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:575,Integrability,wrap,wrapper,575,". ROOT: TGCocoa Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Static Public Attributes |; Protected Member Functions |; Protected Attributes |; Private Types |; Private Member Functions |; Private Attributes |; List of all members ; TGCocoa Class ReferenceGraphics » Graphics' Backends » Cocoa backend. ; This class implements TVirtualX interface for MacOS X, using Cocoa and Quartz 2D. ; TVirtualX is a typical fat interface, it's a ""C++ wrapper"" for X11 library. It's a union of several orthogonal interfaces like: color management, window management, pixmap management, cursors, events, images, drag and drop, font management, gui-rendering, non-gui graphics, etc. etc. ; Definition at line 58 of file TGCocoa.h. Public Member Functions;  TGCocoa ();  ;  TGCocoa (const char *name, const char *title);  ;  ~TGCocoa () override;  ; Int_t AddPixmap (ULong_t pixid, UInt_t w, UInt_t h) override;  Registers a pixmap created by TGLManager as a ROOT pixmap. ;  ; Int_t AddWindow (ULong_t qwid, UInt_t w, UInt_t h) override;  Registers a window created by Qt as a ROOT window. ;  ; Bool_t AllocColor (Colormap_t cmap, ColorStruct_t &color) override;  Allocates a read-only colormap entry corresponding to the closest RGB value supported by the hardware. ;  ; void Bell (Int_t percent) override;  Sets the sound bell. Percent is loudness from -100% to 100%. ;  ; void ChangeActivePointerGrab (Window_t, UInt_t, Cursor_t) override;  Changes the specified dynamic parameters if the pointer is actively grabbed by the client and if the specified time is no earlier than the last-pointer-grab time and no later than the current X server time. ;  ; void ChangeGC (GContext_t gc, GCValues_t *gval) override;  Changes the components specified by the mask in gval for the specified GC. ;  ; void ChangeProperties (Window_t wid, Atom_t property, Atom_t type, Int_t format, UChar",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:636,Integrability,interface,interfaces,636,". ROOT: TGCocoa Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Static Public Attributes |; Protected Member Functions |; Protected Attributes |; Private Types |; Private Member Functions |; Private Attributes |; List of all members ; TGCocoa Class ReferenceGraphics » Graphics' Backends » Cocoa backend. ; This class implements TVirtualX interface for MacOS X, using Cocoa and Quartz 2D. ; TVirtualX is a typical fat interface, it's a ""C++ wrapper"" for X11 library. It's a union of several orthogonal interfaces like: color management, window management, pixmap management, cursors, events, images, drag and drop, font management, gui-rendering, non-gui graphics, etc. etc. ; Definition at line 58 of file TGCocoa.h. Public Member Functions;  TGCocoa ();  ;  TGCocoa (const char *name, const char *title);  ;  ~TGCocoa () override;  ; Int_t AddPixmap (ULong_t pixid, UInt_t w, UInt_t h) override;  Registers a pixmap created by TGLManager as a ROOT pixmap. ;  ; Int_t AddWindow (ULong_t qwid, UInt_t w, UInt_t h) override;  Registers a window created by Qt as a ROOT window. ;  ; Bool_t AllocColor (Colormap_t cmap, ColorStruct_t &color) override;  Allocates a read-only colormap entry corresponding to the closest RGB value supported by the hardware. ;  ; void Bell (Int_t percent) override;  Sets the sound bell. Percent is loudness from -100% to 100%. ;  ; void ChangeActivePointerGrab (Window_t, UInt_t, Cursor_t) override;  Changes the specified dynamic parameters if the pointer is actively grabbed by the client and if the specified time is no earlier than the last-pointer-grab time and no later than the current X server time. ;  ; void ChangeGC (GContext_t gc, GCValues_t *gval) override;  Changes the components specified by the mask in gval for the specified GC. ;  ; void ChangeProperties (Window_t wid, Atom_t property, Atom_t type, Int_t format, UChar",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:27423,Integrability,depend,depends,27423,"window manager that the window ""id"" is a transient window of the window ""main_id"". ;  ; void ShapeCombineMask (Window_t wid, Int_t x, Int_t y, Pixmap_t mask) override;  The Non-rectangular Window Shape Extension adds non-rectangular windows to the System. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void SubtractRegion (Region_t rega, Region_t regb, Region_t result) override;  Subtracts regb from rega and stores the results in result. ;  ; Int_t SupportsExtension (const char *extensionName) const override;  Returns 1 if window system server supports extension given by the argument, returns 0 in case extension is not supported and returns -1 in case of error (like server not initialized). ;  ; void Sync (Int_t mode) override;  Set synchronisation on or off. ;  ; Int_t TextWidth (FontStruct_t font, const char *s, Int_t len) override;  Return length of the string ""s"" in pixels. Size depends on font. ;  ; void TranslateCoordinates (Window_t src, Window_t dest, Int_t src_x, Int_t src_y, Int_t &dest_x, Int_t &dest_y, Window_t &child) override;  Translates coordinates in one window to the coordinate space of another window. ;  ; void UnionRectWithRegion (Rectangle_t *rect, Region_t src, Region_t dest) override;  Updates the destination region from a union of the specified rectangle and the specified source region. ;  ; void UnionRegion (Region_t rega, Region_t regb, Region_t result) override;  Computes the union of two regions. ;  ; void UnmapWindow (Window_t wid) override;  Unmaps the specified window ""id"". ;  ; void Update (Int_t mode) override;  Flushes (mode = 0, default) or synchronizes (mode = 1) X output buffer. ;  ; void UpdateWindow (Int_t mode) override;  Updates or synchronises client and server once (not permanent). ;  ; void Warp (Int_t ix, Int_t iy, Window_t wid) override;  Sets the pointer position. ;  ; void WMDeleteNotify (Window_t wid) override;  Tells WM",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:28129,Integrability,synchroniz,synchronizes,28129,"ument, returns 0 in case extension is not supported and returns -1 in case of error (like server not initialized). ;  ; void Sync (Int_t mode) override;  Set synchronisation on or off. ;  ; Int_t TextWidth (FontStruct_t font, const char *s, Int_t len) override;  Return length of the string ""s"" in pixels. Size depends on font. ;  ; void TranslateCoordinates (Window_t src, Window_t dest, Int_t src_x, Int_t src_y, Int_t &dest_x, Int_t &dest_y, Window_t &child) override;  Translates coordinates in one window to the coordinate space of another window. ;  ; void UnionRectWithRegion (Rectangle_t *rect, Region_t src, Region_t dest) override;  Updates the destination region from a union of the specified rectangle and the specified source region. ;  ; void UnionRegion (Region_t rega, Region_t regb, Region_t result) override;  Computes the union of two regions. ;  ; void UnmapWindow (Window_t wid) override;  Unmaps the specified window ""id"". ;  ; void Update (Int_t mode) override;  Flushes (mode = 0, default) or synchronizes (mode = 1) X output buffer. ;  ; void UpdateWindow (Int_t mode) override;  Updates or synchronises client and server once (not permanent). ;  ; void Warp (Int_t ix, Int_t iy, Window_t wid) override;  Sets the pointer position. ;  ; void WMDeleteNotify (Window_t wid) override;  Tells WM to send message when window is closed via WM. ;  ; Int_t WriteGIF (char *name) override;  Writes the current window into GIF file. ;  ; void WritePixmap (Int_t wid, UInt_t w, UInt_t h, char *pxname) override;  Writes the pixmap ""wid"" in the bitmap file ""pxname"". ;  ; void XorRegion (Region_t rega, Region_t regb, Region_t result) override;  Calculates the difference between the union and intersection of two regions. ;  ;  Public Member Functions inherited from TVirtualX;  TVirtualX ();  ;  TVirtualX (const char *name, const char *title);  Ctor of ABC. ;  ; virtual ~TVirtualX ();  ; virtual void BeginModalSessionFor (Window_t window);  Start a modal session for a dialog window.",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:28437,Integrability,message,message,28437,"e depends on font. ;  ; void TranslateCoordinates (Window_t src, Window_t dest, Int_t src_x, Int_t src_y, Int_t &dest_x, Int_t &dest_y, Window_t &child) override;  Translates coordinates in one window to the coordinate space of another window. ;  ; void UnionRectWithRegion (Rectangle_t *rect, Region_t src, Region_t dest) override;  Updates the destination region from a union of the specified rectangle and the specified source region. ;  ; void UnionRegion (Region_t rega, Region_t regb, Region_t result) override;  Computes the union of two regions. ;  ; void UnmapWindow (Window_t wid) override;  Unmaps the specified window ""id"". ;  ; void Update (Int_t mode) override;  Flushes (mode = 0, default) or synchronizes (mode = 1) X output buffer. ;  ; void UpdateWindow (Int_t mode) override;  Updates or synchronises client and server once (not permanent). ;  ; void Warp (Int_t ix, Int_t iy, Window_t wid) override;  Sets the pointer position. ;  ; void WMDeleteNotify (Window_t wid) override;  Tells WM to send message when window is closed via WM. ;  ; Int_t WriteGIF (char *name) override;  Writes the current window into GIF file. ;  ; void WritePixmap (Int_t wid, UInt_t w, UInt_t h, char *pxname) override;  Writes the pixmap ""wid"" in the bitmap file ""pxname"". ;  ; void XorRegion (Region_t rega, Region_t regb, Region_t result) override;  Calculates the difference between the union and intersection of two regions. ;  ;  Public Member Functions inherited from TVirtualX;  TVirtualX ();  ;  TVirtualX (const char *name, const char *title);  Ctor of ABC. ;  ; virtual ~TVirtualX ();  ; virtual void BeginModalSessionFor (Window_t window);  Start a modal session for a dialog window. ;  ; virtual void DispatchClientMessage (UInt_t messageID);  Force processing of event, sent by SendEvent before. ;  ; virtual void DrawBox (Int_t x1, Int_t y1, Int_t x2, Int_t y2, EBoxMode mode);  Draws a box between [x1,y1] and [x2,y2] according to the ""mode"". ;  ; virtual void DrawCellArray (Int_t x1, I",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:29162,Integrability,message,messageID,29162,";  ; void UpdateWindow (Int_t mode) override;  Updates or synchronises client and server once (not permanent). ;  ; void Warp (Int_t ix, Int_t iy, Window_t wid) override;  Sets the pointer position. ;  ; void WMDeleteNotify (Window_t wid) override;  Tells WM to send message when window is closed via WM. ;  ; Int_t WriteGIF (char *name) override;  Writes the current window into GIF file. ;  ; void WritePixmap (Int_t wid, UInt_t w, UInt_t h, char *pxname) override;  Writes the pixmap ""wid"" in the bitmap file ""pxname"". ;  ; void XorRegion (Region_t rega, Region_t regb, Region_t result) override;  Calculates the difference between the union and intersection of two regions. ;  ;  Public Member Functions inherited from TVirtualX;  TVirtualX ();  ;  TVirtualX (const char *name, const char *title);  Ctor of ABC. ;  ; virtual ~TVirtualX ();  ; virtual void BeginModalSessionFor (Window_t window);  Start a modal session for a dialog window. ;  ; virtual void DispatchClientMessage (UInt_t messageID);  Force processing of event, sent by SendEvent before. ;  ; virtual void DrawBox (Int_t x1, Int_t y1, Int_t x2, Int_t y2, EBoxMode mode);  Draws a box between [x1,y1] and [x2,y2] according to the ""mode"". ;  ; virtual void DrawCellArray (Int_t x1, Int_t y1, Int_t x2, Int_t y2, Int_t nx, Int_t ny, Int_t *ic);  Draws a cell array. ;  ; virtual void DrawFillArea (Int_t n, TPoint *xy);  Fills area described by the polygon. ;  ; virtual void DrawLine (Int_t x1, Int_t y1, Int_t x2, Int_t y2);  Draws a line. ;  ; virtual void DrawPolyLine (Int_t n, TPoint *xy);  Draws a line through all points in the list. ;  ; virtual void DrawPolyMarker (Int_t n, TPoint *xy);  Draws ""n"" markers with the current attributes at position [x,y]. ;  ; virtual void DrawText (Int_t x, Int_t y, Float_t angle, Float_t mgn, const char *text, ETextMode mode);  Draws a text string using current font. ;  ; virtual void DrawText (Int_t x, Int_t y, Float_t angle, Float_t mgn, const wchar_t *text, ETextMode mode);  Draws ",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:35956,Integrability,message,message,35956,"ject. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:36497,Integrability,message,message,36497,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:37487,Integrability,message,message,37487,"ssue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class shou",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:40581,Integrability,message,message,40581,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TAttLine;  TAttLine ();  AttLine default constructor. ;  ;  TAttLine (Color_t lcolor, Style_t lstyle, Width_t lwidth);  AttLine normal constructor. ;  ; virtual ~TAttLine ();  AttLine destructor. ;  ; void Copy (TAttLine &attline) const;  Copy this line attributes to a new TAttLine. ;  ; Int_t ",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:40954,Integrability,message,message,40954," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TAttLine;  TAttLine ();  AttLine default constructor. ;  ;  TAttLine (Color_t lcolor, Style_t lstyle, Width_t lwidth);  AttLine normal constructor. ;  ; virtual ~TAttLine ();  AttLine destructor. ;  ; void Copy (TAttLine &attline) const;  Copy this line attributes to a new TAttLine. ;  ; Int_t DistancetoLine (Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2);  Compute distance from point px,py to a line. ;  ; virtual Color_t GetLineColor () const;  Return the line color. ;  ; virtual Style_t GetLineStyle () const;  Return the line style. ;  ; virtual Width_t GetLineWidth () const;  Return the line width. ;  ; virtual void Modify ();  Ch",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:72969,Integrability,depend,dependent,72969,"d). overridevirtual . Destroys the window ""id"" as well as all of its subwindows. ; The window should never be referenced again. If the window specified by the ""id"" argument is mapped, it is unmapped automatically. ; Reimplemented from TVirtualX.; Definition at line 903 of file TGCocoa.mm. ◆ DisplayName(). const char * TGCocoa::DisplayName ; (; const char * ; ). overridevirtual . Returns hostname on which the display is opened. ; Reimplemented from TVirtualX.; Definition at line 510 of file TGCocoa.mm. ◆ DrawLine(). void TGCocoa::DrawLine ; (; Drawable_t ; id, . GContext_t ; gc, . Int_t ; x1, . Int_t ; y1, . Int_t ; x2, . Int_t ; y2 . ). overridevirtual . Uses the components of the specified GC to draw a line between the specified set of points (x1, y1) and (x2, y2). ; GC components in use: function, plane-mask, line-width, line-style, cap-style, fill-style, subwindow-mode, clip-x-origin, clip-y-origin, and clip-mask.; GC mode-dependent components: foreground, background, tile, stipple, tile-stipple-x-origin, tile-stipple-y-origin, dash-offset, dash-list. (see also the GCValues_t structure) ; Reimplemented from TVirtualX.; Reimplemented in TGQuartz.; Definition at line 1737 of file TGCocoa.mm. ◆ DrawLineAux(). void TGCocoa::DrawLineAux ; (; Drawable_t ; wid, . const GCValues_t & ; gcVals, . Int_t ; x1, . Int_t ; y1, . Int_t ; x2, . Int_t ; y2 . ). Definition at line 1697 of file TGCocoa.mm. ◆ DrawRectangle(). void TGCocoa::DrawRectangle ; (; Drawable_t ; id, . GContext_t ; gc, . Int_t ; x, . Int_t ; y, . UInt_t ; w, . UInt_t ; h . ). overridevirtual . Draws rectangle outlines of [x,y] [x+w,y] [x+w,y+h] [x,y+h]. ; GC components in use: function, plane-mask, line-width, line-style, cap-style, join-style, fill-style, subwindow-mode, clip-x-origin, clip-y-origin, clip-mask. GC mode-dependent components: foreground, background, tile, stipple, tile-stipple-x-origin, tile-stipple-y-origin, dash-offset, dash-list. (see also the GCValues_t structure) ; Reimplemented from TVir",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:73837,Integrability,depend,dependent,73837,", subwindow-mode, clip-x-origin, clip-y-origin, and clip-mask.; GC mode-dependent components: foreground, background, tile, stipple, tile-stipple-x-origin, tile-stipple-y-origin, dash-offset, dash-list. (see also the GCValues_t structure) ; Reimplemented from TVirtualX.; Reimplemented in TGQuartz.; Definition at line 1737 of file TGCocoa.mm. ◆ DrawLineAux(). void TGCocoa::DrawLineAux ; (; Drawable_t ; wid, . const GCValues_t & ; gcVals, . Int_t ; x1, . Int_t ; y1, . Int_t ; x2, . Int_t ; y2 . ). Definition at line 1697 of file TGCocoa.mm. ◆ DrawRectangle(). void TGCocoa::DrawRectangle ; (; Drawable_t ; id, . GContext_t ; gc, . Int_t ; x, . Int_t ; y, . UInt_t ; w, . UInt_t ; h . ). overridevirtual . Draws rectangle outlines of [x,y] [x+w,y] [x+w,y+h] [x,y+h]. ; GC components in use: function, plane-mask, line-width, line-style, cap-style, join-style, fill-style, subwindow-mode, clip-x-origin, clip-y-origin, clip-mask. GC mode-dependent components: foreground, background, tile, stipple, tile-stipple-x-origin, tile-stipple-y-origin, dash-offset, dash-list. (see also the GCValues_t structure) ; Reimplemented from TVirtualX.; Definition at line 1854 of file TGCocoa.mm. ◆ DrawRectangleAux(). void TGCocoa::DrawRectangleAux ; (; Drawable_t ; wid, . const GCValues_t & ; gcVals, . Int_t ; x, . Int_t ; y, . UInt_t ; w, . UInt_t ; h . ). Definition at line 1820 of file TGCocoa.mm. ◆ DrawSegments(). void TGCocoa::DrawSegments ; (; Drawable_t ; id, . GContext_t ; gc, . Segment_t * ; seg, . Int_t ; nseg . ). overridevirtual . Draws multiple line segments. ; Each line is specified by a pair of points.; Parameters. [in]idDrawable identifier ; [in]gcgraphics context ; [in]*segspecifies an array of segments ; [in]nsegspecifies the number of segments in the array. GC components in use: function, plane-mask, line-width, line-style, cap-style, join-style, fill-style, subwindow-mode, clip-x-origin, clip-y-origin, clip-mask.; GC mode-dependent components: foreground, background, tile, stip",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:74842,Integrability,depend,dependent,74842,"tipple-x-origin, tile-stipple-y-origin, dash-offset, dash-list. (see also the GCValues_t structure) ; Reimplemented from TVirtualX.; Definition at line 1854 of file TGCocoa.mm. ◆ DrawRectangleAux(). void TGCocoa::DrawRectangleAux ; (; Drawable_t ; wid, . const GCValues_t & ; gcVals, . Int_t ; x, . Int_t ; y, . UInt_t ; w, . UInt_t ; h . ). Definition at line 1820 of file TGCocoa.mm. ◆ DrawSegments(). void TGCocoa::DrawSegments ; (; Drawable_t ; id, . GContext_t ; gc, . Segment_t * ; seg, . Int_t ; nseg . ). overridevirtual . Draws multiple line segments. ; Each line is specified by a pair of points.; Parameters. [in]idDrawable identifier ; [in]gcgraphics context ; [in]*segspecifies an array of segments ; [in]nsegspecifies the number of segments in the array. GC components in use: function, plane-mask, line-width, line-style, cap-style, join-style, fill-style, subwindow-mode, clip-x-origin, clip-y-origin, clip-mask.; GC mode-dependent components: foreground, background, tile, stipple, tile-stipple-x-origin, tile-stipple-y-origin, dash-offset, and dash-list. (see also the GCValues_t structure) ; Reimplemented from TVirtualX.; Definition at line 1785 of file TGCocoa.mm. ◆ DrawSegmentsAux(). void TGCocoa::DrawSegmentsAux ; (; Drawable_t ; wid, . const GCValues_t & ; gcVals, . const Segment_t * ; segments, . Int_t ; nSegments . ). Definition at line 1774 of file TGCocoa.mm. ◆ DrawString(). void TGCocoa::DrawString ; (; Drawable_t ; id, . GContext_t ; gc, . Int_t ; x, . Int_t ; y, . const char * ; s, . Int_t ; len . ). overridevirtual . Each character image, as defined by the font in the GC, is treated as an additional mask for a fill operation on the drawable. ; Parameters. [in]idthe drawable ; [in]gcthe GC ; [in]x,ycoordinates, which are relative to the origin of the specified drawable and define the origin of the first character ; [in]sthe character string ; [in]lenthe number of characters in the string argument. GC components in use: function, plane-mask, fill-style, ",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:75979,Integrability,depend,dependent,75979,"from TVirtualX.; Definition at line 1785 of file TGCocoa.mm. ◆ DrawSegmentsAux(). void TGCocoa::DrawSegmentsAux ; (; Drawable_t ; wid, . const GCValues_t & ; gcVals, . const Segment_t * ; segments, . Int_t ; nSegments . ). Definition at line 1774 of file TGCocoa.mm. ◆ DrawString(). void TGCocoa::DrawString ; (; Drawable_t ; id, . GContext_t ; gc, . Int_t ; x, . Int_t ; y, . const char * ; s, . Int_t ; len . ). overridevirtual . Each character image, as defined by the font in the GC, is treated as an additional mask for a fill operation on the drawable. ; Parameters. [in]idthe drawable ; [in]gcthe GC ; [in]x,ycoordinates, which are relative to the origin of the specified drawable and define the origin of the first character ; [in]sthe character string ; [in]lenthe number of characters in the string argument. GC components in use: function, plane-mask, fill-style, font, subwindow-mode, clip-x-origin, clip-y-origin, and clip-mask. GC mode-dependent components: foreground, background, tile, stipple, tile-stipple-x-origin, and tile-stipple-y-origin. (see also the GCValues_t structure) ; Reimplemented from TVirtualX.; Definition at line 2219 of file TGCocoa.mm. ◆ DrawStringAux(). void TGCocoa::DrawStringAux ; (; Drawable_t ; wid, . const GCValues_t & ; gc, . Int_t ; x, . Int_t ; y, . const char * ; s, . Int_t ; len . ). Definition at line 2175 of file TGCocoa.mm. ◆ EmptyRegion(). Bool_t TGCocoa::EmptyRegion ; (; Region_t ; reg). overridevirtual . Returns kTRUE if the region reg is empty. ; Reimplemented from TVirtualX.; Definition at line 4362 of file TGCocoa.mm. ◆ EqualRegion(). Bool_t TGCocoa::EqualRegion ; (; Region_t ; rega, . Region_t ; regb . ). overridevirtual . Returns kTRUE if the two regions have the same offset, size, and shape. ; Reimplemented from TVirtualX.; Definition at line 4378 of file TGCocoa.mm. ◆ EventsPending(). Int_t TGCocoa::EventsPending ; (; ). overridevirtual . Returns the number of events that have been received from the X server but have not be",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:77966,Integrability,depend,dependent,77966,"ut have not been removed from the event queue. ; Reimplemented from TVirtualX.; Definition at line 3540 of file TGCocoa.mm. ◆ ExecCommand(). UInt_t TGCocoa::ExecCommand ; (; TGWin32Command * ; code). overridevirtual . Executes the command ""code"" coming from the other threads (Win32) ; Reimplemented from TVirtualX.; Definition at line 4023 of file TGCocoa.mm. ◆ FillPolygon(). void TGCocoa::FillPolygon ; (; Window_t ; id, . GContext_t ; gc, . Point_t * ; points, . Int_t ; npnt . ). overridevirtual . Fills the region closed by the specified path. ; The path is closed automatically if the last point in the list does not coincide with the first point.; Parameters. [in]idwindow identifier ; [in]gcgraphics context ; [in]*pointsspecifies an array of points ; [in]npntspecifies the number of points in the array. GC components in use: function, plane-mask, fill-style, fill-rule, subwindow-mode, clip-x-origin, clip-y-origin, and clip-mask. GC mode-dependent components: foreground, background, tile, stipple, tile-stipple-x-origin, and tile-stipple-y-origin. (see also the GCValues_t structure) ; Reimplemented from TVirtualX.; Definition at line 2056 of file TGCocoa.mm. ◆ FillPolygonAux(). void TGCocoa::FillPolygonAux ; (; Window_t ; wid, . const GCValues_t & ; gcVals, . const Point_t * ; polygon, . Int_t ; nPoints . ). Definition at line 1984 of file TGCocoa.mm. ◆ FillRectangle(). void TGCocoa::FillRectangle ; (; Drawable_t ; id, . GContext_t ; gc, . Int_t ; x, . Int_t ; y, . UInt_t ; w, . UInt_t ; h . ). overridevirtual . Fills the specified rectangle defined by [x,y] [x+w,y] [x+w,y+h] [x,y+h]. ; using the GC you specify.; GC components in use are: function, plane-mask, fill-style, subwindow-mode, clip-x-origin, clip-y-origin, clip-mask. GC mode-dependent components: foreground, background, tile, stipple, tile-stipple-x-origin, and tile-stipple-y-origin. (see also the GCValues_t structure) ; Reimplemented from TVirtualX.; Definition at line 1954 of file TGCocoa.mm. ◆ FillRectangl",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:78779,Integrability,depend,dependent,78779," GC components in use: function, plane-mask, fill-style, fill-rule, subwindow-mode, clip-x-origin, clip-y-origin, and clip-mask. GC mode-dependent components: foreground, background, tile, stipple, tile-stipple-x-origin, and tile-stipple-y-origin. (see also the GCValues_t structure) ; Reimplemented from TVirtualX.; Definition at line 2056 of file TGCocoa.mm. ◆ FillPolygonAux(). void TGCocoa::FillPolygonAux ; (; Window_t ; wid, . const GCValues_t & ; gcVals, . const Point_t * ; polygon, . Int_t ; nPoints . ). Definition at line 1984 of file TGCocoa.mm. ◆ FillRectangle(). void TGCocoa::FillRectangle ; (; Drawable_t ; id, . GContext_t ; gc, . Int_t ; x, . Int_t ; y, . UInt_t ; w, . UInt_t ; h . ). overridevirtual . Fills the specified rectangle defined by [x,y] [x+w,y] [x+w,y+h] [x,y+h]. ; using the GC you specify.; GC components in use are: function, plane-mask, fill-style, subwindow-mode, clip-x-origin, clip-y-origin, clip-mask. GC mode-dependent components: foreground, background, tile, stipple, tile-stipple-x-origin, and tile-stipple-y-origin. (see also the GCValues_t structure) ; Reimplemented from TVirtualX.; Definition at line 1954 of file TGCocoa.mm. ◆ FillRectangleAux(). void TGCocoa::FillRectangleAux ; (; Drawable_t ; wid, . const GCValues_t & ; gcVals, . Int_t ; x, . Int_t ; y, . UInt_t ; w, . UInt_t ; h . ). Definition at line 1889 of file TGCocoa.mm. ◆ FindAtom(). Atom_t TGCocoa::FindAtom ; (; const std::string & ; atomName, . bool ; addIfNotFound . ). private . Definition at line 4495 of file TGCocoa.mm. ◆ FindRWindow(). Window_t TGCocoa::FindRWindow ; (; Window_t ; win, . Window_t ; dragwin, . Window_t ; input, . int ; x, . int ; y, . int ; maxd . ). overridevirtual . Recursively search in the children of Window for a Window which is at location x, y and is DND aware, with a maximum depth of maxd. ; Reimplemented from TVirtualX.; Definition at line 3992 of file TGCocoa.mm. ◆ FlushOpenGLBuffer(). void TGCocoa::FlushOpenGLBuffer ; (; Handle_t ; ctx). overri",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:81637,Integrability,interface,interface,81637,"f file TGCocoa.mm. ◆ GetCharacterUp(). void TGCocoa::GetCharacterUp ; (; Float_t & ; chupx, . Float_t & ; chupy . ). overridevirtual . Returns character up vector. ; Reimplemented from TVirtualX.; Definition at line 4037 of file TGCocoa.mm. ◆ GetColorBits(). unsigned char * TGCocoa::GetColorBits ; (; Drawable_t ; wid, . Int_t ; x, . Int_t ; y, . UInt_t ; w, . UInt_t ; h . ). overridevirtual . Returns an array of pixels created from a part of drawable (defined by x, y, w, h) in format: ; b1, g1, r1, 0, b2, g2, r2, 0 ... bn, gn, rn, 0 ..; Pixels are numbered from left to right and from top to bottom. By default all pixels from the whole drawable are returned.; Note that return array is 32-bit aligned ; Reimplemented from TVirtualX.; Definition at line 2558 of file TGCocoa.mm. ◆ GetColormap(). Colormap_t TGCocoa::GetColormap ; (; ); const. overridevirtual . Returns handle to colormap. ; Might be useful in some cases where direct X11 manipulation outside of TVirtualX is needed, e.g. GL interface. ; Reimplemented from TVirtualX.; Definition at line 2979 of file TGCocoa.mm. ◆ GetCommandBuffer(). ROOT::MacOSX::X11::CommandBuffer * TGCocoa::GetCommandBuffer ; (; ); const. Definition at line 4400 of file TGCocoa.mm. ◆ GetCurrentContext(). void * TGCocoa::GetCurrentContext ; (; ). protected . Definition at line 4425 of file TGCocoa.mm. ◆ GetCurrentOpenGLContext(). Handle_t TGCocoa::GetCurrentOpenGLContext ; (; ). overridevirtual . Asks OpenGL subsystem about the current OpenGL context. ; Reimplemented from TVirtualX.; Definition at line 3387 of file TGCocoa.mm. ◆ GetCurrentWindow(). Window_t TGCocoa::GetCurrentWindow ; (; ); const. overridevirtual . pointer to the current internal window used in canvas graphics ; Reimplemented from TVirtualX.; Definition at line 833 of file TGCocoa.mm. ◆ GetDefaultRootWindow(). Window_t TGCocoa::GetDefaultRootWindow ; (; ); const. overridevirtual . Returns handle to the default root window created when calling XOpenDisplay(). ; Reimplemented ",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:83132,Integrability,interface,interface,83132,"ntext. ; Reimplemented from TVirtualX.; Definition at line 3387 of file TGCocoa.mm. ◆ GetCurrentWindow(). Window_t TGCocoa::GetCurrentWindow ; (; ); const. overridevirtual . pointer to the current internal window used in canvas graphics ; Reimplemented from TVirtualX.; Definition at line 833 of file TGCocoa.mm. ◆ GetDefaultRootWindow(). Window_t TGCocoa::GetDefaultRootWindow ; (; ); const. overridevirtual . Returns handle to the default root window created when calling XOpenDisplay(). ; Reimplemented from TVirtualX.; Definition at line 633 of file TGCocoa.mm. ◆ GetDepth(). Int_t TGCocoa::GetDepth ; (; ); const. overridevirtual . Returns depth of screen (number of bit planes). ; Equivalent to GetPlanes(). ; Reimplemented from TVirtualX.; Definition at line 561 of file TGCocoa.mm. ◆ GetDisplay(). Display_t TGCocoa::GetDisplay ; (; ); const. overridevirtual . Returns handle to display (might be useful in some cases where direct X11 manipulation outside of TVirtualX is needed, e.g. ; GL interface). ; Reimplemented from TVirtualX.; Definition at line 530 of file TGCocoa.mm. ◆ GetDisplayGeometry(). X11::Rectangle TGCocoa::GetDisplayGeometry ; (; ); const. Definition at line 601 of file TGCocoa.mm. ◆ GetDoubleBuffer(). Int_t TGCocoa::GetDoubleBuffer ; (; Int_t ; wid). overridevirtual . Queries the double buffer value for the window ""wid"". ; Reimplemented from TVirtualX.; Definition at line 4030 of file TGCocoa.mm. ◆ GetEventTranslator(). ROOT::MacOSX::X11::EventTranslator * TGCocoa::GetEventTranslator ; (; ); const. Definition at line 4394 of file TGCocoa.mm. ◆ GetFontHandle(). FontH_t TGCocoa::GetFontHandle ; (; FontStruct_t ; fs). overridevirtual . Returns the font handle of the specified font structure ""fs"". ; Reimplemented from TVirtualX.; Definition at line 2829 of file TGCocoa.mm. ◆ GetFontProperties(). void TGCocoa::GetFontProperties ; (; FontStruct_t ; font, . Int_t & ; max_ascent, . Int_t & ; max_descent . ). overridevirtual . Returns the font properties. ; Reimple",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:88712,Integrability,interface,interface,88712,"verridevirtual . Returns the actual type of the property; the actual format of the property; the number of 8-bit, 16-bit, or 32-bit items transferred; the number of bytes remaining to be read in the property; and a pointer to the data actually returned. ; Reimplemented from TVirtualX.; Definition at line 3718 of file TGCocoa.mm. ◆ GetRegionBox(). void TGCocoa::GetRegionBox ; (; Region_t ; reg, . Rectangle_t * ; rect . ). overridevirtual . Returns smallest enclosing rectangle. ; Reimplemented from TVirtualX.; Definition at line 4386 of file TGCocoa.mm. ◆ GetRGB(). void TGCocoa::GetRGB ; (; Int_t ; index, . Float_t & ; r, . Float_t & ; g, . Float_t & ; b . ). overridevirtual . Returns RGB values for color ""index"". ; Reimplemented from TVirtualX.; Definition at line 2964 of file TGCocoa.mm. ◆ GetScreen(). Int_t TGCocoa::GetScreen ; (; ); const. overridevirtual . Returns screen number. ; Might be useful in some cases where direct X11 manipulation outside of TVirtualX is needed, e.g. GL interface. ; Reimplemented from TVirtualX.; Definition at line 544 of file TGCocoa.mm. ◆ GetVisual(). Visual_t TGCocoa::GetVisual ; (; ); const. overridevirtual . Returns handle to visual. ; Might be useful in some cases where direct X11 manipulation outside of TVirtualX is needed, e.g. GL interface. ; Reimplemented from TVirtualX.; Definition at line 537 of file TGCocoa.mm. ◆ GetWindowAttributes(). void TGCocoa::GetWindowAttributes ; (; Window_t ; id, . WindowAttributes_t & ; attr . ). overridevirtual . The WindowAttributes_t structure is set to default. ; Reimplemented from TVirtualX.; Definition at line 992 of file TGCocoa.mm. ◆ GetWindowID(). Window_t TGCocoa::GetWindowID ; (; Int_t ; wid). overridevirtual . Returns the X11 window identifier. ; Parameters. [in]widworkstation identifier (input) . Reimplemented from TVirtualX.; Definition at line 665 of file TGCocoa.mm. ◆ GetWindowSize(). void TGCocoa::GetWindowSize ; (; Drawable_t ; id, . Int_t & ; x, . Int_t & ; y, . UInt_t & ; w, . U",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:89003,Integrability,interface,interface,89003,"nition at line 3718 of file TGCocoa.mm. ◆ GetRegionBox(). void TGCocoa::GetRegionBox ; (; Region_t ; reg, . Rectangle_t * ; rect . ). overridevirtual . Returns smallest enclosing rectangle. ; Reimplemented from TVirtualX.; Definition at line 4386 of file TGCocoa.mm. ◆ GetRGB(). void TGCocoa::GetRGB ; (; Int_t ; index, . Float_t & ; r, . Float_t & ; g, . Float_t & ; b . ). overridevirtual . Returns RGB values for color ""index"". ; Reimplemented from TVirtualX.; Definition at line 2964 of file TGCocoa.mm. ◆ GetScreen(). Int_t TGCocoa::GetScreen ; (; ); const. overridevirtual . Returns screen number. ; Might be useful in some cases where direct X11 manipulation outside of TVirtualX is needed, e.g. GL interface. ; Reimplemented from TVirtualX.; Definition at line 544 of file TGCocoa.mm. ◆ GetVisual(). Visual_t TGCocoa::GetVisual ; (; ); const. overridevirtual . Returns handle to visual. ; Might be useful in some cases where direct X11 manipulation outside of TVirtualX is needed, e.g. GL interface. ; Reimplemented from TVirtualX.; Definition at line 537 of file TGCocoa.mm. ◆ GetWindowAttributes(). void TGCocoa::GetWindowAttributes ; (; Window_t ; id, . WindowAttributes_t & ; attr . ). overridevirtual . The WindowAttributes_t structure is set to default. ; Reimplemented from TVirtualX.; Definition at line 992 of file TGCocoa.mm. ◆ GetWindowID(). Window_t TGCocoa::GetWindowID ; (; Int_t ; wid). overridevirtual . Returns the X11 window identifier. ; Parameters. [in]widworkstation identifier (input) . Reimplemented from TVirtualX.; Definition at line 665 of file TGCocoa.mm. ◆ GetWindowSize(). void TGCocoa::GetWindowSize ; (; Drawable_t ; id, . Int_t & ; x, . Int_t & ; y, . UInt_t & ; w, . UInt_t & ; h . ). overridevirtual . Returns the location and the size of window ""id"". ; Parameters. [in]iddrawable identifier ; [in]x,ycoordinates of the upper-left outer corner relative to the parent window's origin ; [in]w,hthe inside size of the window, not including the border . Reimplem",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:92901,Integrability,depend,dependent,92901,"ne 2715 of file TGCocoa.mm. ◆ GrabPointer(). void TGCocoa::GrabPointer ; (; Window_t ; id, . UInt_t ; evmask, . Window_t ; confine, . Cursor_t ; cursor, . Bool_t ; grab = kTRUE, . Bool_t ; owner_events = kTRUE . ). overridevirtual . Establishes an active pointer grab. ; While an active pointer grab is in effect, further pointer events are only reported to the grabbing client window. ; Reimplemented from TVirtualX.; Definition at line 2678 of file TGCocoa.mm. ◆ HasTTFonts(). Bool_t TGCocoa::HasTTFonts ; (; ); const. overridevirtual . Returns True when TrueType fonts are used. ; Reimplemented from TVirtualX.; Definition at line 2841 of file TGCocoa.mm. ◆ IconifyWindow(). void TGCocoa::IconifyWindow ; (; Window_t ; id). overridevirtual . Iconifies the window ""id"". ; Reimplemented from TVirtualX.; Definition at line 1308 of file TGCocoa.mm. ◆ Init(). Bool_t TGCocoa::Init ; (; void * ; display). overridevirtual . Initializes the X system. ; Returns kFALSE in case of failure. It is implementation dependent. ; Reimplemented from TVirtualX.; Definition at line 491 of file TGCocoa.mm. ◆ InitWindow(). Int_t TGCocoa::InitWindow ; (; ULong_t ; window). overridevirtual . Creates a new window and return window number. ; Returns -1 if window initialization fails. ; Reimplemented from TVirtualX.; Definition at line 640 of file TGCocoa.mm. ◆ InternAtom(). Atom_t TGCocoa::InternAtom ; (; const char * ; atom_name, . Bool_t ; only_if_exist . ). overridevirtual . Returns the atom identifier associated with the specified ""atom_name"" string. ; If ""only_if_exists"" is False, the atom is created if it does not exist. If the atom name is not in the Host Portable Character Encoding, the result is implementation dependent. Uppercase and lowercase matter; the strings ""thing"", ""Thing"", and ""thinG"" all designate different atoms. ; Reimplemented from TVirtualX.; Definition at line 3577 of file TGCocoa.mm. ◆ IntersectRegion(). void TGCocoa::IntersectRegion ; (; Region_t ; rega, . Region_t ; regb, . ",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:93608,Integrability,depend,dependent,93608,"ndow(). void TGCocoa::IconifyWindow ; (; Window_t ; id). overridevirtual . Iconifies the window ""id"". ; Reimplemented from TVirtualX.; Definition at line 1308 of file TGCocoa.mm. ◆ Init(). Bool_t TGCocoa::Init ; (; void * ; display). overridevirtual . Initializes the X system. ; Returns kFALSE in case of failure. It is implementation dependent. ; Reimplemented from TVirtualX.; Definition at line 491 of file TGCocoa.mm. ◆ InitWindow(). Int_t TGCocoa::InitWindow ; (; ULong_t ; window). overridevirtual . Creates a new window and return window number. ; Returns -1 if window initialization fails. ; Reimplemented from TVirtualX.; Definition at line 640 of file TGCocoa.mm. ◆ InternAtom(). Atom_t TGCocoa::InternAtom ; (; const char * ; atom_name, . Bool_t ; only_if_exist . ). overridevirtual . Returns the atom identifier associated with the specified ""atom_name"" string. ; If ""only_if_exists"" is False, the atom is created if it does not exist. If the atom name is not in the Host Portable Character Encoding, the result is implementation dependent. Uppercase and lowercase matter; the strings ""thing"", ""Thing"", and ""thinG"" all designate different atoms. ; Reimplemented from TVirtualX.; Definition at line 3577 of file TGCocoa.mm. ◆ IntersectRegion(). void TGCocoa::IntersectRegion ; (; Region_t ; rega, . Region_t ; regb, . Region_t ; result . ). overridevirtual . Computes the intersection of two regions. ; Parameters. [in]rega,regbspecify the two regions with which you want to perform the computation ; [in]resultreturns the result of the computation . Reimplemented from TVirtualX.; Definition at line 4334 of file TGCocoa.mm. ◆ IsA(). TClass * TGCocoa::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Reimplemented in TGQuartz.; Definition at line 476 of file TGCocoa.h. ◆ IsCmdThread(). Bool_t TGCocoa::IsCmdThread ; (; ); const. inlineoverridevirtual . Reimplemented from TVirtualX.; Definition at line 429 of file TGCoco",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:95175,Integrability,depend,dependent,95175,"alX.; Definition at line 4334 of file TGCocoa.mm. ◆ IsA(). TClass * TGCocoa::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Reimplemented in TGQuartz.; Definition at line 476 of file TGCocoa.h. ◆ IsCmdThread(). Bool_t TGCocoa::IsCmdThread ; (; ); const. inlineoverridevirtual . Reimplemented from TVirtualX.; Definition at line 429 of file TGCocoa.h. ◆ IsCocoaDraw(). bool TGCocoa::IsCocoaDraw ; (; ); const. Definition at line 4419 of file TGCocoa.mm. ◆ IsDNDAware(). Bool_t TGCocoa::IsDNDAware ; (; Window_t ; win, . Atom_t * ; typelist . ). overridevirtual . Checks if the Window is DND aware, and knows any of the DND formats passed in argument. ; Reimplemented from TVirtualX.; Definition at line 3969 of file TGCocoa.mm. ◆ KeysymToKeycode(). Int_t TGCocoa::KeysymToKeycode ; (; UInt_t ; keysym). overridevirtual . Converts the ""keysym"" to the appropriate keycode. ; For example, keysym is a letter and keycode is the matching keyboard key (which is dependent on the current keyboard mapping). If the specified ""keysym"" is not defined for any keycode, returns zero. ; Reimplemented from TVirtualX.; Definition at line 2757 of file TGCocoa.mm. ◆ ListFonts(). char ** TGCocoa::ListFonts ; (; const char * ; fontname, . Int_t ; max, . Int_t & ; count . ). overridevirtual . Returns list of font names matching fontname regexp, like ""-*-times-*"". ; The pattern string can contain any characters, but each asterisk (*) is a wildcard for any number of characters, and each question mark (?) is a wildcard for a single character. If the pattern string is not in the Host Portable Character Encoding, the result is implementation dependent. Use of uppercase or lowercase does not matter. Each returned string is null-terminated.; Parameters. [in]fontnamespecifies the null-terminated pattern string that can contain wildcard characters ; [in]maxspecifies the maximum number of names to be returned ; [in]countreturns the actual number of",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:95847,Integrability,depend,dependent,95847," is DND aware, and knows any of the DND formats passed in argument. ; Reimplemented from TVirtualX.; Definition at line 3969 of file TGCocoa.mm. ◆ KeysymToKeycode(). Int_t TGCocoa::KeysymToKeycode ; (; UInt_t ; keysym). overridevirtual . Converts the ""keysym"" to the appropriate keycode. ; For example, keysym is a letter and keycode is the matching keyboard key (which is dependent on the current keyboard mapping). If the specified ""keysym"" is not defined for any keycode, returns zero. ; Reimplemented from TVirtualX.; Definition at line 2757 of file TGCocoa.mm. ◆ ListFonts(). char ** TGCocoa::ListFonts ; (; const char * ; fontname, . Int_t ; max, . Int_t & ; count . ). overridevirtual . Returns list of font names matching fontname regexp, like ""-*-times-*"". ; The pattern string can contain any characters, but each asterisk (*) is a wildcard for any number of characters, and each question mark (?) is a wildcard for a single character. If the pattern string is not in the Host Portable Character Encoding, the result is implementation dependent. Use of uppercase or lowercase does not matter. Each returned string is null-terminated.; Parameters. [in]fontnamespecifies the null-terminated pattern string that can contain wildcard characters ; [in]maxspecifies the maximum number of names to be returned ; [in]countreturns the actual number of font names . Reimplemented from TVirtualX.; Definition at line 2882 of file TGCocoa.mm. ◆ LoadQueryFont(). FontStruct_t TGCocoa::LoadQueryFont ; (; const char * ; font_name). overridevirtual . Provides the most common way for accessing a font: opens (loads) the specified font and returns a pointer to the appropriate FontStruct_t structure. ; If the font does not exist, it returns NULL. ; Reimplemented from TVirtualX.; Definition at line 2809 of file TGCocoa.mm. ◆ LookupString(). void TGCocoa::LookupString ; (; Event_t * ; event, . char * ; buf, . Int_t ; buflen, . UInt_t & ; keysym . ). overridevirtual . Converts the keycode from the event",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:102328,Integrability,depend,dependent,102328,"if such a thing exist on the current platform). ; The encoding and interpretation of the display name.; On X11 this method returns on success the X display socket descriptor >0, 0 in case of batch mode, and <0 in case of failure (cannot connect to display dpyName). ; Reimplemented from TVirtualX.; Definition at line 500 of file TGCocoa.mm. ◆ OpenPixmap(). Int_t TGCocoa::OpenPixmap ; (; UInt_t ; w, . UInt_t ; h . ). overridevirtual . Creates a pixmap of the width ""w"" and height ""h"" you specified. ; Reimplemented from TVirtualX.; Definition at line 2331 of file TGCocoa.mm. ◆ operator=(). TGCocoa & TGCocoa::operator= ; (; const TGCocoa & ; rhs). private . ◆ ParseColor(). Bool_t TGCocoa::ParseColor ; (; Colormap_t ; cmap, . const char * ; cname, . ColorStruct_t & ; color . ). overridevirtual . Looks up the string name of a color ""cname"" with respect to the screen associated with the specified colormap. ; It returns the exact color value. If the color name is not in the Host Portable Character Encoding, the result is implementation dependent.; Parameters. [in]cmapthe colormap ; [in]cnamethe color name string; use of uppercase or lowercase does not matter ; [in]colorreturns the exact color value for later use. The ColorStruct_t structure is set to default. Let system think we could parse color. ; Reimplemented from TVirtualX.; Definition at line 2908 of file TGCocoa.mm. ◆ PointInRegion(). Bool_t TGCocoa::PointInRegion ; (; Int_t ; x, . Int_t ; y, . Region_t ; reg . ). overridevirtual . Returns kTRUE if the point [x, y] is contained in the region reg. ; Reimplemented from TVirtualX.; Definition at line 4370 of file TGCocoa.mm. ◆ PolygonRegion(). Region_t TGCocoa::PolygonRegion ; (; Point_t * ; points, . Int_t ; np, . Bool_t ; winding . ). overridevirtual . Returns a region for the polygon defined by the points array. ; Parameters. [in]pointsspecifies an array of points ; [in]npspecifies the number of points in the polygon ; [in]windingspecifies the winding-rule is set (kTR",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:104293,Integrability,depend,dependent,104293,"emented from TVirtualX.; Definition at line 4311 of file TGCocoa.mm. ◆ PutImage(). void TGCocoa::PutImage ; (; Drawable_t ; id, . GContext_t ; gc, . Drawable_t ; img, . Int_t ; dx, . Int_t ; dy, . Int_t ; x, . Int_t ; y, . UInt_t ; w, . UInt_t ; h . ). overridevirtual . Combines an image with a rectangle of the specified drawable. ; The section of the image defined by the x, y, width, and height arguments is drawn on the specified part of the drawable.; Parameters. [in]idthe drawable ; [in]gcthe GC ; [in]imgthe image you want combined with the rectangle ; [in]dxthe offset in X from the left edge of the image ; [in]dythe offset in Y from the top edge of the image ; [in]x,ycoordinates, which are relative to the origin of the drawable and are the coordinates of the subimage ; [in]w,hthe width and height of the subimage, which define the rectangle dimensions. GC components in use: function, plane-mask, subwindow-mode, clip-x-origin, clip-y-origin, and clip-mask. GC mode-dependent components: foreground and background. (see also the GCValues_t structure) ; Reimplemented from TVirtualX.; Definition at line 2622 of file TGCocoa.mm. ◆ PutPixel(). void TGCocoa::PutPixel ; (; Drawable_t ; id, . Int_t ; x, . Int_t ; y, . ULong_t ; pixel . ). overridevirtual . Overwrites the pixel in the image with the specified pixel value. ; The image must contain the x and y coordinates.; Parameters. [in]idspecifies the image ; [in]x,ycoordinates ; [in]pixelthe new pixel value . Reimplemented from TVirtualX.; Definition at line 2600 of file TGCocoa.mm. ◆ QueryColor(). void TGCocoa::QueryColor ; (; Colormap_t ; cmap, . ColorStruct_t & ; color . ). overridevirtual . Returns the current RGB value for the pixel in the ""color"" structure. ; The color components are set to default.; Parameters. [in]cmapthe colormap ; [in]colorspecifies and returns the RGB values for the pixel specified in the structure . Reimplemented from TVirtualX.; Definition at line 2927 of file TGCocoa.mm. ◆ QueryPointer() [1/2",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:124116,Integrability,depend,depends,124116,"gion_t ; rega, . Region_t ; regb, . Region_t ; result . ). overridevirtual . Subtracts regb from rega and stores the results in result. ; Reimplemented from TVirtualX.; Definition at line 4344 of file TGCocoa.mm. ◆ SupportsExtension(). Int_t TGCocoa::SupportsExtension ; (; const char * ; ext); const. overridevirtual . Returns 1 if window system server supports extension given by the argument, returns 0 in case extension is not supported and returns -1 in case of error (like server not initialized). ; Reimplemented from TVirtualX.; Definition at line 517 of file TGCocoa.mm. ◆ Sync(). void TGCocoa::Sync ; (; Int_t ; mode). overridevirtual . Set synchronisation on or off. ; Parameters. [in]modesynchronisation on/off; mode=1 on; mode<>0 off . Reimplemented from TVirtualX.; Definition at line 4125 of file TGCocoa.mm. ◆ TextWidth(). Int_t TGCocoa::TextWidth ; (; FontStruct_t ; font, . const char * ; s, . Int_t ; len . ). overridevirtual . Return length of the string ""s"" in pixels. Size depends on font. ; Reimplemented from TVirtualX.; Definition at line 2849 of file TGCocoa.mm. ◆ TranslateCoordinates(). void TGCocoa::TranslateCoordinates ; (; Window_t ; src, . Window_t ; dest, . Int_t ; src_x, . Int_t ; src_y, . Int_t & ; dest_x, . Int_t & ; dest_y, . Window_t & ; child . ). overridevirtual . Translates coordinates in one window to the coordinate space of another window. ; It takes the ""src_x"" and ""src_y"" coordinates relative to the source window's origin and returns these coordinates to ""dest_x"" and ""dest_y"" relative to the destination window's origin.; Parameters. [in]srcthe source window ; [in]destthe destination window ; [in]src_x,src_ycoordinates within the source window ; [in]dest_x,dest_ycoordinates within the destination window ; [in]childreturns the child of ""dest"" if the coordinates are contained in a mapped child of the destination window; otherwise, child is set to 0 . Reimplemented from TVirtualX.; Definition at line 1335 of file TGCocoa.mm. ◆ UnionRectWithRe",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:126440,Integrability,synchroniz,synchronizes,126440,"ed ; [in]destreturns the destination region . Reimplemented from TVirtualX.; Definition at line 4300 of file TGCocoa.mm. ◆ UnionRegion(). void TGCocoa::UnionRegion ; (; Region_t ; rega, . Region_t ; regb, . Region_t ; result . ). overridevirtual . Computes the union of two regions. ; Parameters. [in]rega,regbspecify the two regions with which you want to perform the computation ; [in]resultreturns the result of the computation . Reimplemented from TVirtualX.; Definition at line 4323 of file TGCocoa.mm. ◆ UnmapWindow(). void TGCocoa::UnmapWindow ; (; Window_t ; id). overridevirtual . Unmaps the specified window ""id"". ; If the specified window is already unmapped, this function has no effect. Any child window will no longer be visible (but they are still mapped) until another map call is made on the parent. ; Reimplemented from TVirtualX.; Definition at line 1184 of file TGCocoa.mm. ◆ Update(). void TGCocoa::Update ; (; Int_t ; mode). overridevirtual . Flushes (mode = 0, default) or synchronizes (mode = 1) X output buffer. ; Flush flushes output buffer. Sync flushes buffer and waits till all requests have been processed by X server. ; Reimplemented from TVirtualX.; Definition at line 578 of file TGCocoa.mm. ◆ UpdateWindow(). void TGCocoa::UpdateWindow ; (; Int_t ; mode). overridevirtual . Updates or synchronises client and server once (not permanent). ; according to ""mode"".; Parameters. [in]modeupdate mode.; mode = 1 update; mode = 0 sync . Reimplemented from TVirtualX.; Definition at line 794 of file TGCocoa.mm. ◆ Warp(). void TGCocoa::Warp ; (; Int_t ; ix, . Int_t ; iy, . Window_t ; id . ). overridevirtual . Sets the pointer position. ; Parameters. [in]ixnew X coordinate of pointer ; [in]iynew Y coordinate of pointer ; [in]idwindow identifier. Coordinates are relative to the origin of the window id or to the origin of the current window if id == 0. ; Reimplemented from TVirtualX.; Definition at line 4134 of file TGCocoa.mm. ◆ WMDeleteNotify(). void TGCocoa::WMDelete",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:127507,Integrability,message,message,127507," flushes buffer and waits till all requests have been processed by X server. ; Reimplemented from TVirtualX.; Definition at line 578 of file TGCocoa.mm. ◆ UpdateWindow(). void TGCocoa::UpdateWindow ; (; Int_t ; mode). overridevirtual . Updates or synchronises client and server once (not permanent). ; according to ""mode"".; Parameters. [in]modeupdate mode.; mode = 1 update; mode = 0 sync . Reimplemented from TVirtualX.; Definition at line 794 of file TGCocoa.mm. ◆ Warp(). void TGCocoa::Warp ; (; Int_t ; ix, . Int_t ; iy, . Window_t ; id . ). overridevirtual . Sets the pointer position. ; Parameters. [in]ixnew X coordinate of pointer ; [in]iynew Y coordinate of pointer ; [in]idwindow identifier. Coordinates are relative to the origin of the window id or to the origin of the current window if id == 0. ; Reimplemented from TVirtualX.; Definition at line 4134 of file TGCocoa.mm. ◆ WMDeleteNotify(). void TGCocoa::WMDeleteNotify ; (; Window_t ; id). overridevirtual . Tells WM to send message when window is closed via WM. ; Reimplemented from TVirtualX.; Definition at line 4270 of file TGCocoa.mm. ◆ WriteGIF(). Int_t TGCocoa::WriteGIF ; (; char * ; name). overridevirtual . Writes the current window into GIF file. ; Returns 1 in case of success, 0 otherwise. ; Reimplemented from TVirtualX.; Definition at line 4163 of file TGCocoa.mm. ◆ WritePixmap(). void TGCocoa::WritePixmap ; (; Int_t ; wid, . UInt_t ; w, . UInt_t ; h, . char * ; pxname . ). overridevirtual . Writes the pixmap ""wid"" in the bitmap file ""pxname"". ; Parameters. [in]widthe pixmap address ; [in]w,hthe width and height of the pixmap. ; [in]pxnamethe file name . Reimplemented from TVirtualX.; Definition at line 4172 of file TGCocoa.mm. ◆ XorRegion(). void TGCocoa::XorRegion ; (; Region_t ; rega, . Region_t ; regb, . Region_t ; result . ). overridevirtual . Calculates the difference between the union and intersection of two regions. ; Parameters. [in]rega,regbspecify the two regions with which you want to perform th",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:28878,Modifiability,inherit,inherited,28878,"on_t result) override;  Computes the union of two regions. ;  ; void UnmapWindow (Window_t wid) override;  Unmaps the specified window ""id"". ;  ; void Update (Int_t mode) override;  Flushes (mode = 0, default) or synchronizes (mode = 1) X output buffer. ;  ; void UpdateWindow (Int_t mode) override;  Updates or synchronises client and server once (not permanent). ;  ; void Warp (Int_t ix, Int_t iy, Window_t wid) override;  Sets the pointer position. ;  ; void WMDeleteNotify (Window_t wid) override;  Tells WM to send message when window is closed via WM. ;  ; Int_t WriteGIF (char *name) override;  Writes the current window into GIF file. ;  ; void WritePixmap (Int_t wid, UInt_t w, UInt_t h, char *pxname) override;  Writes the pixmap ""wid"" in the bitmap file ""pxname"". ;  ; void XorRegion (Region_t rega, Region_t regb, Region_t result) override;  Calculates the difference between the union and intersection of two regions. ;  ;  Public Member Functions inherited from TVirtualX;  TVirtualX ();  ;  TVirtualX (const char *name, const char *title);  Ctor of ABC. ;  ; virtual ~TVirtualX ();  ; virtual void BeginModalSessionFor (Window_t window);  Start a modal session for a dialog window. ;  ; virtual void DispatchClientMessage (UInt_t messageID);  Force processing of event, sent by SendEvent before. ;  ; virtual void DrawBox (Int_t x1, Int_t y1, Int_t x2, Int_t y2, EBoxMode mode);  Draws a box between [x1,y1] and [x2,y2] according to the ""mode"". ;  ; virtual void DrawCellArray (Int_t x1, Int_t y1, Int_t x2, Int_t y2, Int_t nx, Int_t ny, Int_t *ic);  Draws a cell array. ;  ; virtual void DrawFillArea (Int_t n, TPoint *xy);  Fills area described by the polygon. ;  ; virtual void DrawLine (Int_t x1, Int_t y1, Int_t x2, Int_t y2);  Draws a line. ;  ; virtual void DrawPolyLine (Int_t n, TPoint *xy);  Draws a line through all points in the list. ;  ; virtual void DrawPolyMarker (Int_t n, TPoint *xy);  Draws ""n"" markers with the current attributes at position [x,y]. ;  ; virtual vo",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:32865,Modifiability,inherit,inherited,32865,"or index ""cindex"" for markers. ;  ; void SetMarkerSize (Float_t markersize) override;  Sets marker size index. ;  ; void SetMarkerStyle (Style_t markerstyle) override;  Sets marker style. ;  ; virtual void SetOpacity (Int_t percent);  Sets opacity of the current window. ;  ; void SetTextAlign (Short_t talign=11) override;  Sets the text alignment. ;  ; void SetTextColor (Color_t cindex) override;  Sets the color index ""cindex"" for text. ;  ; virtual Int_t SetTextFont (char *fontname, ETextSetMode mode);  Sets text font to specified name ""fontname"".This function returns 0 if the specified font is found, 1 if it is not. ;  ; void SetTextFont (Font_t fontnumber) override;  Sets the current text font number. ;  ; void SetTextSize (Float_t textsize) override;  Sets the current text size to ""textsize"". ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; ",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:34493,Modifiability,inherit,inherited,34493,"ual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:35586,Modifiability,inherit,inheritance,35586,"  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:37585,Modifiability,inherit,inherits,37585,"e) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:37702,Modifiability,inherit,inherits,37702,"t be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base ",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:41261,Modifiability,inherit,inherited,41261,"tDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TAttLine;  TAttLine ();  AttLine default constructor. ;  ;  TAttLine (Color_t lcolor, Style_t lstyle, Width_t lwidth);  AttLine normal constructor. ;  ; virtual ~TAttLine ();  AttLine destructor. ;  ; void Copy (TAttLine &attline) const;  Copy this line attributes to a new TAttLine. ;  ; Int_t DistancetoLine (Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2);  Compute distance from point px,py to a line. ;  ; virtual Color_t GetLineColor () const;  Return the line color. ;  ; virtual Style_t GetLineStyle () const;  Return the line style. ;  ; virtual Width_t GetLineWidth () const;  Return the line width. ;  ; virtual void Modify ();  Change current line attributes if necessary. ;  ; virtual void ResetAttLine (Option_t *option="""");  Reset this line attributes to default values. ;  ; virtual void SaveLineAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t widdef=1);  Save line attributes as C++ statement(s) on output stream out. ; ",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:42556,Modifiability,inherit,inherited,42556,"o a new TAttLine. ;  ; Int_t DistancetoLine (Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2);  Compute distance from point px,py to a line. ;  ; virtual Color_t GetLineColor () const;  Return the line color. ;  ; virtual Style_t GetLineStyle () const;  Return the line style. ;  ; virtual Width_t GetLineWidth () const;  Return the line width. ;  ; virtual void Modify ();  Change current line attributes if necessary. ;  ; virtual void ResetAttLine (Option_t *option="""");  Reset this line attributes to default values. ;  ; virtual void SaveLineAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t widdef=1);  Save line attributes as C++ statement(s) on output stream out. ;  ; virtual void SetLineAttributes ();  Invoke the DialogCanvas Line attributes. ;  ; virtual void SetLineColorAlpha (Color_t lcolor, Float_t lalpha);  Set a transparent line color. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttFill;  TAttFill ();  AttFill default constructor. ;  ;  TAttFill (Color_t fcolor, Style_t fstyle);  AttFill normal constructor. ;  ; virtual ~TAttFill ();  AttFill destructor. ;  ; void Copy (TAttFill &attfill) const;  Copy this fill attributes to a new TAttFill. ;  ; virtual Color_t GetFillColor () const;  Return the fill area color. ;  ; virtual Style_t GetFillStyle () const;  Return the fill area style. ;  ; virtual Bool_t IsTransparent () const;  ; virtual void Modify ();  Change current fill area attributes if necessary. ;  ; virtual void ResetAttFill (Option_t *option="""");  Reset this fill attributes to default values. ;  ; virtual void SaveFillAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1001);  Save fill attributes as C++ statement(s) on output stream out. ;  ; virtual void SetFillAttributes ();  Invoke the DialogCanvas Fill attributes. ;  ; virtual void SetFillColorAlpha (Color_t fcolor, Float_t falpha);  Set a ",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:43661,Modifiability,inherit,inherited,43661,"t fcolor, Style_t fstyle);  AttFill normal constructor. ;  ; virtual ~TAttFill ();  AttFill destructor. ;  ; void Copy (TAttFill &attfill) const;  Copy this fill attributes to a new TAttFill. ;  ; virtual Color_t GetFillColor () const;  Return the fill area color. ;  ; virtual Style_t GetFillStyle () const;  Return the fill area style. ;  ; virtual Bool_t IsTransparent () const;  ; virtual void Modify ();  Change current fill area attributes if necessary. ;  ; virtual void ResetAttFill (Option_t *option="""");  Reset this fill attributes to default values. ;  ; virtual void SaveFillAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1001);  Save fill attributes as C++ statement(s) on output stream out. ;  ; virtual void SetFillAttributes ();  Invoke the DialogCanvas Fill attributes. ;  ; virtual void SetFillColorAlpha (Color_t fcolor, Float_t falpha);  Set a transparent fill color. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttText;  TAttText ();  AttText default constructor. ;  ;  TAttText (Int_t align, Float_t angle, Color_t color, Style_t font, Float_t tsize);  AttText normal constructor. ;  ; virtual ~TAttText ();  AttText destructor. ;  ; void Copy (TAttText &atttext) const;  Copy this text attributes to a new TAttText. ;  ; virtual Short_t GetTextAlign () const;  Return the text alignment. ;  ; virtual Float_t GetTextAngle () const;  Return the text angle. ;  ; virtual Color_t GetTextColor () const;  Return the text color. ;  ; virtual Font_t GetTextFont () const;  Return the text font. ;  ; virtual Float_t GetTextSize () const;  Return the text size. ;  ; virtual Float_t GetTextSizePercent (Float_t size);  Return the text in percent of the pad size. ;  ; virtual void Modify ();  Change current text attributes if necessary. ;  ; virtual void ResetAttText (Option_t *toption="""");  Reset this text attributes to default values. ;  ; virtual void SaveTextAttributes (std::ost",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:45259,Modifiability,inherit,inherited,45259,"xt font. ;  ; virtual Float_t GetTextSize () const;  Return the text size. ;  ; virtual Float_t GetTextSizePercent (Float_t size);  Return the text in percent of the pad size. ;  ; virtual void Modify ();  Change current text attributes if necessary. ;  ; virtual void ResetAttText (Option_t *toption="""");  Reset this text attributes to default values. ;  ; virtual void SaveTextAttributes (std::ostream &out, const char *name, Int_t alidef=12, Float_t angdef=0, Int_t coldef=1, Int_t fondef=61, Float_t sizdef=1);  Save text attributes as C++ statement(s) on output stream out. ;  ; virtual void SetTextAngle (Float_t tangle=0);  Set the text angle. ;  ; virtual void SetTextAttributes ();  Invoke the DialogCanvas Text attributes. ;  ; virtual void SetTextColorAlpha (Color_t tcolor, Float_t talpha);  Set a transparent text color. ;  ; virtual void SetTextSizePixels (Int_t npixels);  Set the text size in pixel. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttMarker;  TAttMarker ();  TAttMarker default constructor. ;  ;  TAttMarker (Color_t color, Style_t style, Size_t msize);  TAttMarker normal constructor. ;  ; virtual ~TAttMarker ();  TAttMarker destructor. ;  ; void Copy (TAttMarker &attmarker) const;  Copy this marker attributes to a new TAttMarker. ;  ; virtual Color_t GetMarkerColor () const;  Return the marker color. ;  ; virtual Size_t GetMarkerSize () const;  Return the marker size. ;  ; virtual Style_t GetMarkerStyle () const;  Return the marker style. ;  ; virtual void Modify ();  Change current marker attributes if necessary. ;  ; virtual void ResetAttMarker (Option_t *toption="""");  Reset this marker attributes to the default values. ;  ; virtual void SaveMarkerAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t sizdef=1);  Save line attributes as C++ statement(s) on output stream out. ;  ; virtual void SetMarkerAttributes ();  Invoke the DialogCanvas Marker attrib",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:46649,Modifiability,inherit,inherited,46649,"tual Size_t GetMarkerSize () const;  Return the marker size. ;  ; virtual Style_t GetMarkerStyle () const;  Return the marker style. ;  ; virtual void Modify ();  Change current marker attributes if necessary. ;  ; virtual void ResetAttMarker (Option_t *toption="""");  Reset this marker attributes to the default values. ;  ; virtual void SaveMarkerAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t sizdef=1);  Save line attributes as C++ statement(s) on output stream out. ;  ; virtual void SetMarkerAttributes ();  Invoke the DialogCanvas Marker attributes. ;  ; virtual void SetMarkerColorAlpha (Color_t mcolor, Float_t malpha);  Set a transparent marker color. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TVirtualX; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TVirtualX *& Instance ();  Returns gVirtualX global. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inhe",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:46927,Modifiability,inherit,inherited,46927," statement(s) on output stream out. ;  ; virtual void SetMarkerAttributes ();  Invoke the DialogCanvas Marker attributes. ;  ; virtual void SetMarkerColorAlpha (Color_t mcolor, Float_t malpha);  Set a transparent marker color. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TVirtualX; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TVirtualX *& Instance ();  Returns gVirtualX global. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttText; static TClass * Class ();  ; s",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:47137,Modifiability,inherit,inherited,47137," statement(s) on output stream out. ;  ; virtual void SetMarkerAttributes ();  Invoke the DialogCanvas Marker attributes. ;  ; virtual void SetMarkerColorAlpha (Color_t mcolor, Float_t malpha);  Set a transparent marker color. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TVirtualX; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TVirtualX *& Instance ();  Returns gVirtualX global. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttText; static TClass * Class ();  ; s",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:47655,Modifiability,inherit,inherited,47655," char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttMarker; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Width_t GetMarkerLineWidth (Style_t style);  Internal helper function that returns the line width of the given marker style (0 = filled marker) ;  ; static Style_t GetMarkerStyleBase (Style_t style);  Internal helper function that returns the corresponding marker style with line width 1 for the given style. ;  . Static Public Attributes; static Atom_t fgDeleteWindowAtom = 0;  . Protected Member Functions; void * GetCurrentContext ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Int_t fCocoaDraw;  ; bool fDirectDraw;  ; EDrawMo",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:47867,Modifiability,inherit,inherited,47867," char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttMarker; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Width_t GetMarkerLineWidth (Style_t style);  Internal helper function that returns the line width of the given marker style (0 = filled marker) ;  ; static Style_t GetMarkerStyleBase (Style_t style);  Internal helper function that returns the corresponding marker style with line width 1 for the given style. ;  . Static Public Attributes; static Atom_t fgDeleteWindowAtom = 0;  . Protected Member Functions; void * GetCurrentContext ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Int_t fCocoaDraw;  ; bool fDirectDraw;  ; EDrawMo",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:48079,Modifiability,inherit,inherited,48079," char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttMarker; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Width_t GetMarkerLineWidth (Style_t style);  Internal helper function that returns the line width of the given marker style (0 = filled marker) ;  ; static Style_t GetMarkerStyleBase (Style_t style);  Internal helper function that returns the corresponding marker style with line width 1 for the given style. ;  . Static Public Attributes; static Atom_t fgDeleteWindowAtom = 0;  . Protected Member Functions; void * GetCurrentContext ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Int_t fCocoaDraw;  ; bool fDirectDraw;  ; EDrawMo",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:48291,Modifiability,inherit,inherited,48291," char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttMarker; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Width_t GetMarkerLineWidth (Style_t style);  Internal helper function that returns the line width of the given marker style (0 = filled marker) ;  ; static Style_t GetMarkerStyleBase (Style_t style);  Internal helper function that returns the corresponding marker style with line width 1 for the given style. ;  . Static Public Attributes; static Atom_t fgDeleteWindowAtom = 0;  . Protected Member Functions; void * GetCurrentContext ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Int_t fCocoaDraw;  ; bool fDirectDraw;  ; EDrawMo",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:48949,Modifiability,inherit,inherited,48949,"on_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttMarker; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Width_t GetMarkerLineWidth (Style_t style);  Internal helper function that returns the line width of the given marker style (0 = filled marker) ;  ; static Style_t GetMarkerStyleBase (Style_t style);  Internal helper function that returns the corresponding marker style with line width 1 for the given style. ;  . Static Public Attributes; static Atom_t fgDeleteWindowAtom = 0;  . Protected Member Functions; void * GetCurrentContext ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Int_t fCocoaDraw;  ; bool fDirectDraw;  ; EDrawMode fDrawMode;  ; std::unique_ptr< ROOT::MacOSX::Details::CocoaPrivate > fPimpl;  ; Drawable_t fSelectedDrawable;  ;  Protected Attributes inherited from TVirtualX; EDrawMode fDrawMode;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttText; Short_t fTextAlign;  Text alignment. ;  ; Float_t fTextAngle;  Text angle. ;  ; Color_t fTextColor;  Text color. ;  ; Font_t fTextFont;  Text font. ;  ; Float_t fTextSi",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:49341,Modifiability,inherit,inherited,49341,");  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Width_t GetMarkerLineWidth (Style_t style);  Internal helper function that returns the line width of the given marker style (0 = filled marker) ;  ; static Style_t GetMarkerStyleBase (Style_t style);  Internal helper function that returns the corresponding marker style with line width 1 for the given style. ;  . Static Public Attributes; static Atom_t fgDeleteWindowAtom = 0;  . Protected Member Functions; void * GetCurrentContext ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Int_t fCocoaDraw;  ; bool fDirectDraw;  ; EDrawMode fDrawMode;  ; std::unique_ptr< ROOT::MacOSX::Details::CocoaPrivate > fPimpl;  ; Drawable_t fSelectedDrawable;  ;  Protected Attributes inherited from TVirtualX; EDrawMode fDrawMode;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttText; Short_t fTextAlign;  Text alignment. ;  ; Float_t fTextAngle;  Text angle. ;  ; Color_t fTextColor;  Text color. ;  ; Font_t fTextFont;  Text font. ;  ; Float_t fTextSize;  Text size. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  . Private Types; typedef std::map< Atom_t, Window_t >::iterator selection_iterator;  . Private Member Functions;  TGCocoa (const TGCocoa &rhs);  ; Atom_t FindAtom (const",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:49413,Modifiability,inherit,inherited,49413,");  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Width_t GetMarkerLineWidth (Style_t style);  Internal helper function that returns the line width of the given marker style (0 = filled marker) ;  ; static Style_t GetMarkerStyleBase (Style_t style);  Internal helper function that returns the corresponding marker style with line width 1 for the given style. ;  . Static Public Attributes; static Atom_t fgDeleteWindowAtom = 0;  . Protected Member Functions; void * GetCurrentContext ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Int_t fCocoaDraw;  ; bool fDirectDraw;  ; EDrawMode fDrawMode;  ; std::unique_ptr< ROOT::MacOSX::Details::CocoaPrivate > fPimpl;  ; Drawable_t fSelectedDrawable;  ;  Protected Attributes inherited from TVirtualX; EDrawMode fDrawMode;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttText; Short_t fTextAlign;  Text alignment. ;  ; Float_t fTextAngle;  Text angle. ;  ; Color_t fTextColor;  Text color. ;  ; Font_t fTextFont;  Text font. ;  ; Float_t fTextSize;  Text size. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  . Private Types; typedef std::map< Atom_t, Window_t >::iterator selection_iterator;  . Private Member Functions;  TGCocoa (const TGCocoa &rhs);  ; Atom_t FindAtom (const",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:49495,Modifiability,inherit,inherited,49495,");  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Width_t GetMarkerLineWidth (Style_t style);  Internal helper function that returns the line width of the given marker style (0 = filled marker) ;  ; static Style_t GetMarkerStyleBase (Style_t style);  Internal helper function that returns the corresponding marker style with line width 1 for the given style. ;  . Static Public Attributes; static Atom_t fgDeleteWindowAtom = 0;  . Protected Member Functions; void * GetCurrentContext ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Int_t fCocoaDraw;  ; bool fDirectDraw;  ; EDrawMode fDrawMode;  ; std::unique_ptr< ROOT::MacOSX::Details::CocoaPrivate > fPimpl;  ; Drawable_t fSelectedDrawable;  ;  Protected Attributes inherited from TVirtualX; EDrawMode fDrawMode;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttText; Short_t fTextAlign;  Text alignment. ;  ; Float_t fTextAngle;  Text angle. ;  ; Color_t fTextColor;  Text color. ;  ; Font_t fTextFont;  Text font. ;  ; Float_t fTextSize;  Text size. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  . Private Types; typedef std::map< Atom_t, Window_t >::iterator selection_iterator;  . Private Member Functions;  TGCocoa (const TGCocoa &rhs);  ; Atom_t FindAtom (const",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:49656,Modifiability,inherit,inherited,49656,"tyle);  Internal helper function that returns the corresponding marker style with line width 1 for the given style. ;  . Static Public Attributes; static Atom_t fgDeleteWindowAtom = 0;  . Protected Member Functions; void * GetCurrentContext ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Int_t fCocoaDraw;  ; bool fDirectDraw;  ; EDrawMode fDrawMode;  ; std::unique_ptr< ROOT::MacOSX::Details::CocoaPrivate > fPimpl;  ; Drawable_t fSelectedDrawable;  ;  Protected Attributes inherited from TVirtualX; EDrawMode fDrawMode;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttText; Short_t fTextAlign;  Text alignment. ;  ; Float_t fTextAngle;  Text angle. ;  ; Color_t fTextColor;  Text color. ;  ; Font_t fTextFont;  Text font. ;  ; Float_t fTextSize;  Text size. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  . Private Types; typedef std::map< Atom_t, Window_t >::iterator selection_iterator;  . Private Member Functions;  TGCocoa (const TGCocoa &rhs);  ; Atom_t FindAtom (const std::string &atomName, bool addIfNotFound);  ; bool MakeProcessForeground ();  ; TGCocoa & operator= (const TGCocoa &rhs);  ; void SetApplicationIcon ();  . Private Attributes; std::vector< std::string > fAtomToName;  ; ROOT::MacOSX::X11::Rectangle fDisplayRect;  ; bool fDisplayShapeChanged;  ; bool fForegroundProcess;  ; ROOT::",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:49789,Modifiability,inherit,inherited,49789,"ic Attributes; static Atom_t fgDeleteWindowAtom = 0;  . Protected Member Functions; void * GetCurrentContext ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Int_t fCocoaDraw;  ; bool fDirectDraw;  ; EDrawMode fDrawMode;  ; std::unique_ptr< ROOT::MacOSX::Details::CocoaPrivate > fPimpl;  ; Drawable_t fSelectedDrawable;  ;  Protected Attributes inherited from TVirtualX; EDrawMode fDrawMode;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttText; Short_t fTextAlign;  Text alignment. ;  ; Float_t fTextAngle;  Text angle. ;  ; Color_t fTextColor;  Text color. ;  ; Font_t fTextFont;  Text font. ;  ; Float_t fTextSize;  Text size. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  . Private Types; typedef std::map< Atom_t, Window_t >::iterator selection_iterator;  . Private Member Functions;  TGCocoa (const TGCocoa &rhs);  ; Atom_t FindAtom (const std::string &atomName, bool addIfNotFound);  ; bool MakeProcessForeground ();  ; TGCocoa & operator= (const TGCocoa &rhs);  ; void SetApplicationIcon ();  . Private Attributes; std::vector< std::string > fAtomToName;  ; ROOT::MacOSX::X11::Rectangle fDisplayRect;  ; bool fDisplayShapeChanged;  ; bool fForegroundProcess;  ; ROOT::MacOSX::X11::name_to_atom_map fNameToAtom;  ; std::map< Atom_t, Window_t > fSelectionOwners;  ; bool fSetApp;  ; std::vector< GCValue",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:50025,Modifiability,inherit,inherited,50025,"t, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Int_t fCocoaDraw;  ; bool fDirectDraw;  ; EDrawMode fDrawMode;  ; std::unique_ptr< ROOT::MacOSX::Details::CocoaPrivate > fPimpl;  ; Drawable_t fSelectedDrawable;  ;  Protected Attributes inherited from TVirtualX; EDrawMode fDrawMode;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttText; Short_t fTextAlign;  Text alignment. ;  ; Float_t fTextAngle;  Text angle. ;  ; Color_t fTextColor;  Text color. ;  ; Font_t fTextFont;  Text font. ;  ; Float_t fTextSize;  Text size. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  . Private Types; typedef std::map< Atom_t, Window_t >::iterator selection_iterator;  . Private Member Functions;  TGCocoa (const TGCocoa &rhs);  ; Atom_t FindAtom (const std::string &atomName, bool addIfNotFound);  ; bool MakeProcessForeground ();  ; TGCocoa & operator= (const TGCocoa &rhs);  ; void SetApplicationIcon ();  . Private Attributes; std::vector< std::string > fAtomToName;  ; ROOT::MacOSX::X11::Rectangle fDisplayRect;  ; bool fDisplayShapeChanged;  ; bool fForegroundProcess;  ; ROOT::MacOSX::X11::name_to_atom_map fNameToAtom;  ; std::map< Atom_t, Window_t > fSelectionOwners;  ; bool fSetApp;  ; std::vector< GCValues_t > fX11Contexts;  . Additional Inherited Members;  Public Types inherited from TVirtualX; enum  EBoxMode { kHollow; , kFilled; };  ; enum  EDrawMode { kCopy = 1; , kXor; , kInvert; };  ; enum  ETextMode { kClear; , kOpaque; };  ; enum",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:50873,Modifiability,inherit,inherited,50873,"ker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  . Private Types; typedef std::map< Atom_t, Window_t >::iterator selection_iterator;  . Private Member Functions;  TGCocoa (const TGCocoa &rhs);  ; Atom_t FindAtom (const std::string &atomName, bool addIfNotFound);  ; bool MakeProcessForeground ();  ; TGCocoa & operator= (const TGCocoa &rhs);  ; void SetApplicationIcon ();  . Private Attributes; std::vector< std::string > fAtomToName;  ; ROOT::MacOSX::X11::Rectangle fDisplayRect;  ; bool fDisplayShapeChanged;  ; bool fForegroundProcess;  ; ROOT::MacOSX::X11::name_to_atom_map fNameToAtom;  ; std::map< Atom_t, Window_t > fSelectionOwners;  ; bool fSetApp;  ; std::vector< GCValues_t > fX11Contexts;  . Additional Inherited Members;  Public Types inherited from TVirtualX; enum  EBoxMode { kHollow; , kFilled; };  ; enum  EDrawMode { kCopy = 1; , kXor; , kInvert; };  ; enum  ETextMode { kClear; , kOpaque; };  ; enum  ETextSetMode { kCheck; , kLoad; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TGCocoa.h>. Inheritance diagram for TGCocoa:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ selection_iterator. typedef std::map<Atom_t,Window_t>::",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:51097,Modifiability,inherit,inherited,51097,"ker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  . Private Types; typedef std::map< Atom_t, Window_t >::iterator selection_iterator;  . Private Member Functions;  TGCocoa (const TGCocoa &rhs);  ; Atom_t FindAtom (const std::string &atomName, bool addIfNotFound);  ; bool MakeProcessForeground ();  ; TGCocoa & operator= (const TGCocoa &rhs);  ; void SetApplicationIcon ();  . Private Attributes; std::vector< std::string > fAtomToName;  ; ROOT::MacOSX::X11::Rectangle fDisplayRect;  ; bool fDisplayShapeChanged;  ; bool fForegroundProcess;  ; ROOT::MacOSX::X11::name_to_atom_map fNameToAtom;  ; std::map< Atom_t, Window_t > fSelectionOwners;  ; bool fSetApp;  ; std::vector< GCValues_t > fX11Contexts;  . Additional Inherited Members;  Public Types inherited from TVirtualX; enum  EBoxMode { kHollow; , kFilled; };  ; enum  EDrawMode { kCopy = 1; , kXor; , kInvert; };  ; enum  ETextMode { kClear; , kOpaque; };  ; enum  ETextSetMode { kCheck; , kLoad; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TGCocoa.h>. Inheritance diagram for TGCocoa:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ selection_iterator. typedef std::map<Atom_t,Window_t>::",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:51738,Modifiability,inherit,inherited,51738,"ers;  ; bool fSetApp;  ; std::vector< GCValues_t > fX11Contexts;  . Additional Inherited Members;  Public Types inherited from TVirtualX; enum  EBoxMode { kHollow; , kFilled; };  ; enum  EDrawMode { kCopy = 1; , kXor; , kInvert; };  ; enum  ETextMode { kClear; , kOpaque; };  ; enum  ETextSetMode { kCheck; , kLoad; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TGCocoa.h>. Inheritance diagram for TGCocoa:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ selection_iterator. typedef std::map<Atom_t,Window_t>::iterator TGCocoa::selection_iterator. private . Definition at line 462 of file TGCocoa.h. Constructor & Destructor Documentation. ◆ TGCocoa() [1/3]. TGCocoa::TGCocoa ; (; ). Definition at line 431 of file TGCocoa.mm. ◆ TGCocoa() [2/3]. TGCocoa::TGCocoa ; (; const char * ; name, . const char * ; title . ). Definition at line 456 of file TGCocoa.mm. ◆ ~TGCocoa(). TGCocoa::~TGCocoa ; (; ). override . Definition at line 482 of file TGCocoa.mm. ◆ TGCocoa() [3/3]. TGCocoa::TGCocoa ; (; const TGCocoa & ; rhs). private . Member Function Documentation. ◆ AddPixmap(). Int_t TGCocoa::AddPixmap ; (; ULong_t ; pixid, . UInt_t ; w, . UInt_t ; h . ). overridevirtual . Registers a pixmap created by TGLManager as a ROOT ",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:9749,Performance,queue,queue,9749," ; void DrawRectangleAux (Drawable_t wid, const GCValues_t &gcVals, Int_t x, Int_t y, UInt_t w, UInt_t h);  ; void DrawSegments (Drawable_t wid, GContext_t gc, Segment_t *segments, Int_t nSegments) override;  Draws multiple line segments. ;  ; void DrawSegmentsAux (Drawable_t wid, const GCValues_t &gcVals, const Segment_t *segments, Int_t nSegments);  ; void DrawString (Drawable_t wid, GContext_t gc, Int_t x, Int_t y, const char *s, Int_t len) override;  Each character image, as defined by the font in the GC, is treated as an additional mask for a fill operation on the drawable. ;  ; void DrawStringAux (Drawable_t wid, const GCValues_t &gc, Int_t x, Int_t y, const char *s, Int_t len);  ; Bool_t EmptyRegion (Region_t reg) override;  Returns kTRUE if the region reg is empty. ;  ; Bool_t EqualRegion (Region_t rega, Region_t regb) override;  Returns kTRUE if the two regions have the same offset, size, and shape. ;  ; Int_t EventsPending () override;  Returns the number of events that have been received from the X server but have not been removed from the event queue. ;  ; UInt_t ExecCommand (TGWin32Command *code) override;  Executes the command ""code"" coming from the other threads (Win32) ;  ; void FillPolygon (Window_t wid, GContext_t gc, Point_t *polygon, Int_t nPoints) override;  Fills the region closed by the specified path. ;  ; void FillPolygonAux (Window_t wid, const GCValues_t &gcVals, const Point_t *polygon, Int_t nPoints);  ; void FillRectangle (Drawable_t wid, GContext_t gc, Int_t x, Int_t y, UInt_t w, UInt_t h) override;  Fills the specified rectangle defined by [x,y] [x+w,y] [x+w,y+h] [x,y+h]. ;  ; void FillRectangleAux (Drawable_t wid, const GCValues_t &gcVals, Int_t x, Int_t y, UInt_t w, UInt_t h);  ; Window_t FindRWindow (Window_t win, Window_t dragwin, Window_t input, int x, int y, int maxd) override;  Recursively search in the children of Window for a Window which is at location x, y and is DND aware, with a maximum depth of maxd. ;  ; void FlushOpenGL",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:16959,Performance,load,loads,16959," InitWindow (ULong_t window) override;  Creates a new window and return window number. ;  ; Atom_t InternAtom (const char *atom_name, Bool_t only_if_exist) override;  Returns the atom identifier associated with the specified ""atom_name"" string. ;  ; void IntersectRegion (Region_t rega, Region_t regb, Region_t result) override;  Computes the intersection of two regions. ;  ; TClass * IsA () const override;  ; Bool_t IsCmdThread () const override;  ; Bool_t IsCocoaDraw () const;  ; Bool_t IsDNDAware (Window_t win, Atom_t *typelist) override;  Checks if the Window is DND aware, and knows any of the DND formats passed in argument. ;  ; Int_t KeysymToKeycode (UInt_t keysym) override;  Converts the ""keysym"" to the appropriate keycode. ;  ; char ** ListFonts (const char *fontname, Int_t max, Int_t &count) override;  Returns list of font names matching fontname regexp, like ""-*-times-*"". ;  ; FontStruct_t LoadQueryFont (const char *font_name) override;  Provides the most common way for accessing a font: opens (loads) the specified font and returns a pointer to the appropriate FontStruct_t structure. ;  ; void LookupString (Event_t *event, char *buf, Int_t buflen, UInt_t &keysym) override;  Converts the keycode from the event structure to a key symbol (according to the modifiers specified in the event structure and the current keyboard mapping). ;  ; void LowerWindow (Window_t wid) override;  Lowers the specified window ""id"" to the bottom of the stack so that it does not obscure any sibling windows. ;  ; Bool_t MakeOpenGLContextCurrent (Handle_t ctx, Window_t windowID) override;  Makes context ctx current OpenGL context. ;  ; void MapRaised (Window_t wid) override;  Maps the window ""id"" and all of its subwindows that have had map requests on the screen and put this window on the top of of the stack of all windows. ;  ; void MapSubwindows (Window_t wid) override;  Maps all subwindows for the specified window ""id"" in top-to-bottom stacking order. ;  ; void MapWindow (Window_t ",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:20511,Performance,load,loads,20511,"_t dx, Int_t dy, Int_t x, Int_t y, UInt_t w, UInt_t h) override;  Combines an image with a rectangle of the specified drawable. ;  ; void PutPixel (Drawable_t wid, Int_t x, Int_t y, ULong_t pixel) override;  Overwrites the pixel in the image with the specified pixel value. ;  ; void QueryColor (Colormap_t cmap, ColorStruct_t &color) override;  Returns the current RGB value for the pixel in the ""color"" structure. ;  ; void QueryPointer (Int_t &x, Int_t &y) override;  Returns the pointer position. ;  ; void QueryPointer (Window_t wid, Window_t &rootw, Window_t &childw, Int_t &root_x, Int_t &root_y, Int_t &win_x, Int_t &win_y, UInt_t &mask) override;  Returns the root window the pointer is logically on and the pointer coordinates relative to the root window's origin. ;  ; void RaiseWindow (Window_t wid) override;  Raises the specified window to the top of the stack so that no sibling window obscures it. ;  ; Pixmap_t ReadGIF (Int_t x0, Int_t y0, const char *file, Window_t wid) override;  If id is NULL - loads the specified gif file at position [x0,y0] in the current window. ;  ; Bool_t ReadPictureDataFromFile (const char *filename, char ***ret_data) override;  Reads picture data from file ""filename"" and store it in ""ret_data"". ;  ; void ReconfigureDisplay ();  ; void RemoveWindow (ULong_t qwid) override;  Removes the created by Qt window ""qwid"". ;  ; void ReparentChild (Window_t wid, Window_t pid, Int_t x, Int_t y);  ; void ReparentTopLevel (Window_t wid, Window_t pid, Int_t x, Int_t y);  ; void ReparentWindow (Window_t wid, Window_t pid, Int_t x, Int_t y) override;  If the specified window is mapped, ReparentWindow automatically performs an UnmapWindow request on it, removes it from its current position in the hierarchy, and inserts it as the child of the specified parent. ;  ; Int_t RequestLocator (Int_t mode, Int_t ctyp, Int_t &x, Int_t &y) override;  Requests Locator position. ;  ; Int_t RequestString (Int_t x, Int_t y, char *text) override;  Requests string: text ",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:21150,Performance,perform,performs,21150,"oot_x, Int_t &root_y, Int_t &win_x, Int_t &win_y, UInt_t &mask) override;  Returns the root window the pointer is logically on and the pointer coordinates relative to the root window's origin. ;  ; void RaiseWindow (Window_t wid) override;  Raises the specified window to the top of the stack so that no sibling window obscures it. ;  ; Pixmap_t ReadGIF (Int_t x0, Int_t y0, const char *file, Window_t wid) override;  If id is NULL - loads the specified gif file at position [x0,y0] in the current window. ;  ; Bool_t ReadPictureDataFromFile (const char *filename, char ***ret_data) override;  Reads picture data from file ""filename"" and store it in ""ret_data"". ;  ; void ReconfigureDisplay ();  ; void RemoveWindow (ULong_t qwid) override;  Removes the created by Qt window ""qwid"". ;  ; void ReparentChild (Window_t wid, Window_t pid, Int_t x, Int_t y);  ; void ReparentTopLevel (Window_t wid, Window_t pid, Int_t x, Int_t y);  ; void ReparentWindow (Window_t wid, Window_t pid, Int_t x, Int_t y) override;  If the specified window is mapped, ReparentWindow automatically performs an UnmapWindow request on it, removes it from its current position in the hierarchy, and inserts it as the child of the specified parent. ;  ; Int_t RequestLocator (Int_t mode, Int_t ctyp, Int_t &x, Int_t &y) override;  Requests Locator position. ;  ; Int_t RequestString (Int_t x, Int_t y, char *text) override;  Requests string: text is displayed and can be edited with Emacs-like keybinding. ;  ; void RescaleWindow (Int_t wid, UInt_t w, UInt_t h) override;  Rescales the window ""wid"". ;  ; Int_t ResizePixmap (Int_t wid, UInt_t w, UInt_t h) override;  Resizes the specified pixmap ""wid"". ;  ; void ResizeWindow (Int_t wid) override;  Resizes the window ""wid"" if necessary. ;  ; void ResizeWindow (Window_t wid, UInt_t w, UInt_t h) override;  Changes the width and height of the specified window ""id"", not including its borders. ;  ; UInt_t ScreenWidthMM () const override;  Returns the width of the screen in millim",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:77056,Performance,queue,queue,77056,"oreground, background, tile, stipple, tile-stipple-x-origin, and tile-stipple-y-origin. (see also the GCValues_t structure) ; Reimplemented from TVirtualX.; Definition at line 2219 of file TGCocoa.mm. ◆ DrawStringAux(). void TGCocoa::DrawStringAux ; (; Drawable_t ; wid, . const GCValues_t & ; gc, . Int_t ; x, . Int_t ; y, . const char * ; s, . Int_t ; len . ). Definition at line 2175 of file TGCocoa.mm. ◆ EmptyRegion(). Bool_t TGCocoa::EmptyRegion ; (; Region_t ; reg). overridevirtual . Returns kTRUE if the region reg is empty. ; Reimplemented from TVirtualX.; Definition at line 4362 of file TGCocoa.mm. ◆ EqualRegion(). Bool_t TGCocoa::EqualRegion ; (; Region_t ; rega, . Region_t ; regb . ). overridevirtual . Returns kTRUE if the two regions have the same offset, size, and shape. ; Reimplemented from TVirtualX.; Definition at line 4378 of file TGCocoa.mm. ◆ EventsPending(). Int_t TGCocoa::EventsPending ; (; ). overridevirtual . Returns the number of events that have been received from the X server but have not been removed from the event queue. ; Reimplemented from TVirtualX.; Definition at line 3540 of file TGCocoa.mm. ◆ ExecCommand(). UInt_t TGCocoa::ExecCommand ; (; TGWin32Command * ; code). overridevirtual . Executes the command ""code"" coming from the other threads (Win32) ; Reimplemented from TVirtualX.; Definition at line 4023 of file TGCocoa.mm. ◆ FillPolygon(). void TGCocoa::FillPolygon ; (; Window_t ; id, . GContext_t ; gc, . Point_t * ; points, . Int_t ; npnt . ). overridevirtual . Fills the region closed by the specified path. ; The path is closed automatically if the last point in the list does not coincide with the first point.; Parameters. [in]idwindow identifier ; [in]gcgraphics context ; [in]*pointsspecifies an array of points ; [in]npntspecifies the number of points in the array. GC components in use: function, plane-mask, fill-style, fill-rule, subwindow-mode, clip-x-origin, clip-y-origin, and clip-mask. GC mode-dependent components: foreground, bac",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:94052,Performance,perform,perform,94052,"idevirtual . Creates a new window and return window number. ; Returns -1 if window initialization fails. ; Reimplemented from TVirtualX.; Definition at line 640 of file TGCocoa.mm. ◆ InternAtom(). Atom_t TGCocoa::InternAtom ; (; const char * ; atom_name, . Bool_t ; only_if_exist . ). overridevirtual . Returns the atom identifier associated with the specified ""atom_name"" string. ; If ""only_if_exists"" is False, the atom is created if it does not exist. If the atom name is not in the Host Portable Character Encoding, the result is implementation dependent. Uppercase and lowercase matter; the strings ""thing"", ""Thing"", and ""thinG"" all designate different atoms. ; Reimplemented from TVirtualX.; Definition at line 3577 of file TGCocoa.mm. ◆ IntersectRegion(). void TGCocoa::IntersectRegion ; (; Region_t ; rega, . Region_t ; regb, . Region_t ; result . ). overridevirtual . Computes the intersection of two regions. ; Parameters. [in]rega,regbspecify the two regions with which you want to perform the computation ; [in]resultreturns the result of the computation . Reimplemented from TVirtualX.; Definition at line 4334 of file TGCocoa.mm. ◆ IsA(). TClass * TGCocoa::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Reimplemented in TGQuartz.; Definition at line 476 of file TGCocoa.h. ◆ IsCmdThread(). Bool_t TGCocoa::IsCmdThread ; (; ); const. inlineoverridevirtual . Reimplemented from TVirtualX.; Definition at line 429 of file TGCocoa.h. ◆ IsCocoaDraw(). bool TGCocoa::IsCocoaDraw ; (; ); const. Definition at line 4419 of file TGCocoa.mm. ◆ IsDNDAware(). Bool_t TGCocoa::IsDNDAware ; (; Window_t ; win, . Atom_t * ; typelist . ). overridevirtual . Checks if the Window is DND aware, and knows any of the DND formats passed in argument. ; Reimplemented from TVirtualX.; Definition at line 3969 of file TGCocoa.mm. ◆ KeysymToKeycode(). Int_t TGCocoa::KeysymToKeycode ; (; UInt_t ; keysym). overridevirtual . Converts the ""keysy",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:96406,Performance,load,loads,96406,"char * ; fontname, . Int_t ; max, . Int_t & ; count . ). overridevirtual . Returns list of font names matching fontname regexp, like ""-*-times-*"". ; The pattern string can contain any characters, but each asterisk (*) is a wildcard for any number of characters, and each question mark (?) is a wildcard for a single character. If the pattern string is not in the Host Portable Character Encoding, the result is implementation dependent. Use of uppercase or lowercase does not matter. Each returned string is null-terminated.; Parameters. [in]fontnamespecifies the null-terminated pattern string that can contain wildcard characters ; [in]maxspecifies the maximum number of names to be returned ; [in]countreturns the actual number of font names . Reimplemented from TVirtualX.; Definition at line 2882 of file TGCocoa.mm. ◆ LoadQueryFont(). FontStruct_t TGCocoa::LoadQueryFont ; (; const char * ; font_name). overridevirtual . Provides the most common way for accessing a font: opens (loads) the specified font and returns a pointer to the appropriate FontStruct_t structure. ; If the font does not exist, it returns NULL. ; Reimplemented from TVirtualX.; Definition at line 2809 of file TGCocoa.mm. ◆ LookupString(). void TGCocoa::LookupString ; (; Event_t * ; event, . char * ; buf, . Int_t ; buflen, . UInt_t & ; keysym . ). overridevirtual . Converts the keycode from the event structure to a key symbol (according to the modifiers specified in the event structure and the current keyboard mapping). ; In ""buf"" a null terminated ASCII string is returned representing the string that is currently mapped to the key code.; Parameters. [in]eventspecifies the event structure to be used ; [in]bufreturns the translated characters ; [in]buflenthe length of the buffer ; [in]keysymreturns the ""keysym"" computed from the event if this argument is not NULL . Reimplemented from TVirtualX.; Definition at line 2788 of file TGCocoa.mm. ◆ LowerWindow(). void TGCocoa::LowerWindow ; (; Window_t ; id). overrid",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:106722,Performance,load,loads,106722," the root window the pointer is logically on and the pointer coordinates relative to the root window's origin. ; Parameters. [in]idspecifies the window ; [in]rootwthe root window that the pointer is in ; [in]childwthe child window that the pointer is located in, if any ; [in]root_x,root_ythe pointer coordinates relative to the root window's origin ; [in]win_x,win_ythe pointer coordinates relative to the specified window ""id"" ; [in]maskthe current state of the modifier keys and pointer buttons . Reimplemented from TVirtualX.; Definition at line 3155 of file TGCocoa.mm. ◆ RaiseWindow(). void TGCocoa::RaiseWindow ; (; Window_t ; id). overridevirtual . Raises the specified window to the top of the stack so that no sibling window obscures it. ; Reimplemented from TVirtualX.; Definition at line 1214 of file TGCocoa.mm. ◆ ReadGIF(). Pixmap_t TGCocoa::ReadGIF ; (; Int_t ; x0, . Int_t ; y0, . const char * ; file, . Window_t ; id . ). overridevirtual . If id is NULL - loads the specified gif file at position [x0,y0] in the current window. ; Otherwise creates pixmap from gif file ; Reimplemented from TVirtualX.; Definition at line 4044 of file TGCocoa.mm. ◆ ReadPictureDataFromFile(). Bool_t TGCocoa::ReadPictureDataFromFile ; (; const char * ; filename, . char *** ; ret_data . ). overridevirtual . Reads picture data from file ""filename"" and store it in ""ret_data"". ; Returns kTRUE in case of success, kFALSE otherwise. ; Reimplemented from TVirtualX.; Definition at line 4230 of file TGCocoa.mm. ◆ ReconfigureDisplay(). void TGCocoa::ReconfigureDisplay ; (; ). Definition at line 595 of file TGCocoa.mm. ◆ RemoveWindow(). void TGCocoa::RemoveWindow ; (; ULong_t ; qwid). overridevirtual . Removes the created by Qt window ""qwid"". ; Reimplemented from TVirtualX.; Definition at line 856 of file TGCocoa.mm. ◆ ReparentChild(). void TGCocoa::ReparentChild ; (; Window_t ; wid, . Window_t ; pid, . Int_t ; x, . Int_t ; y . ). Definition at line 1042 of file TGCocoa.mm. ◆ ReparentTopLevel(). vo",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:108090,Performance,perform,performs,108090,"rns kTRUE in case of success, kFALSE otherwise. ; Reimplemented from TVirtualX.; Definition at line 4230 of file TGCocoa.mm. ◆ ReconfigureDisplay(). void TGCocoa::ReconfigureDisplay ; (; ). Definition at line 595 of file TGCocoa.mm. ◆ RemoveWindow(). void TGCocoa::RemoveWindow ; (; ULong_t ; qwid). overridevirtual . Removes the created by Qt window ""qwid"". ; Reimplemented from TVirtualX.; Definition at line 856 of file TGCocoa.mm. ◆ ReparentChild(). void TGCocoa::ReparentChild ; (; Window_t ; wid, . Window_t ; pid, . Int_t ; x, . Int_t ; y . ). Definition at line 1042 of file TGCocoa.mm. ◆ ReparentTopLevel(). void TGCocoa::ReparentTopLevel ; (; Window_t ; wid, . Window_t ; pid, . Int_t ; x, . Int_t ; y . ). Definition at line 1089 of file TGCocoa.mm. ◆ ReparentWindow(). void TGCocoa::ReparentWindow ; (; Window_t ; id, . Window_t ; pid, . Int_t ; x, . Int_t ; y . ). overridevirtual . If the specified window is mapped, ReparentWindow automatically performs an UnmapWindow request on it, removes it from its current position in the hierarchy, and inserts it as the child of the specified parent. ; The window is placed in the stacking order on top with respect to sibling windows. ; Reimplemented from TVirtualX.; Definition at line 1111 of file TGCocoa.mm. ◆ RequestLocator(). Int_t TGCocoa::RequestLocator ; (; Int_t ; mode, . Int_t ; ctyp, . Int_t & ; x, . Int_t & ; y . ). overridevirtual . Requests Locator position. ; Parameters. [in]x,ycursor position at moment of button press (output) ; [in]ctypcursor type (input); ctyp = 1 tracking cross; ctyp = 2 cross-hair; ctyp = 3 rubber circle; ctyp = 4 rubber band; ctyp = 5 rubber rectangle. [in]modeinput mode; mode = 0 request; mode = 1 sample. Returns; in request mode:; 1 = left is pressed; 2 = middle is pressed; 3 = right is pressed. in sample mode:; 11 = left is released; 12 = middle is released; 13 = right is released; -1 = nothing is pressed or released; -2 = leave the window; else = keycode (keyboard is pressed) . Reimplemen",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:125801,Performance,perform,perform,125801,"urce window ; [in]dest_x,dest_ycoordinates within the destination window ; [in]childreturns the child of ""dest"" if the coordinates are contained in a mapped child of the destination window; otherwise, child is set to 0 . Reimplemented from TVirtualX.; Definition at line 1335 of file TGCocoa.mm. ◆ UnionRectWithRegion(). void TGCocoa::UnionRectWithRegion ; (; Rectangle_t * ; rect, . Region_t ; src, . Region_t ; dest . ). overridevirtual . Updates the destination region from a union of the specified rectangle and the specified source region. ; Parameters. [in]rectspecifies the rectangle ; [in]srcspecifies the source region to be used ; [in]destreturns the destination region . Reimplemented from TVirtualX.; Definition at line 4300 of file TGCocoa.mm. ◆ UnionRegion(). void TGCocoa::UnionRegion ; (; Region_t ; rega, . Region_t ; regb, . Region_t ; result . ). overridevirtual . Computes the union of two regions. ; Parameters. [in]rega,regbspecify the two regions with which you want to perform the computation ; [in]resultreturns the result of the computation . Reimplemented from TVirtualX.; Definition at line 4323 of file TGCocoa.mm. ◆ UnmapWindow(). void TGCocoa::UnmapWindow ; (; Window_t ; id). overridevirtual . Unmaps the specified window ""id"". ; If the specified window is already unmapped, this function has no effect. Any child window will no longer be visible (but they are still mapped) until another map call is made on the parent. ; Reimplemented from TVirtualX.; Definition at line 1184 of file TGCocoa.mm. ◆ Update(). void TGCocoa::Update ; (; Int_t ; mode). overridevirtual . Flushes (mode = 0, default) or synchronizes (mode = 1) X output buffer. ; Flush flushes output buffer. Sync flushes buffer and waits till all requests have been processed by X server. ; Reimplemented from TVirtualX.; Definition at line 578 of file TGCocoa.mm. ◆ UpdateWindow(). void TGCocoa::UpdateWindow ; (; Int_t ; mode). overridevirtual . Updates or synchronises client and server once (not perm",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:128507,Performance,perform,perform,128507," when window is closed via WM. ; Reimplemented from TVirtualX.; Definition at line 4270 of file TGCocoa.mm. ◆ WriteGIF(). Int_t TGCocoa::WriteGIF ; (; char * ; name). overridevirtual . Writes the current window into GIF file. ; Returns 1 in case of success, 0 otherwise. ; Reimplemented from TVirtualX.; Definition at line 4163 of file TGCocoa.mm. ◆ WritePixmap(). void TGCocoa::WritePixmap ; (; Int_t ; wid, . UInt_t ; w, . UInt_t ; h, . char * ; pxname . ). overridevirtual . Writes the pixmap ""wid"" in the bitmap file ""pxname"". ; Parameters. [in]widthe pixmap address ; [in]w,hthe width and height of the pixmap. ; [in]pxnamethe file name . Reimplemented from TVirtualX.; Definition at line 4172 of file TGCocoa.mm. ◆ XorRegion(). void TGCocoa::XorRegion ; (; Region_t ; rega, . Region_t ; regb, . Region_t ; result . ). overridevirtual . Calculates the difference between the union and intersection of two regions. ; Parameters. [in]rega,regbspecify the two regions with which you want to perform the computation ; [in]resultreturns the result of the computation . Reimplemented from TVirtualX.; Definition at line 4350 of file TGCocoa.mm. Member Data Documentation. ◆ fAtomToName. std::vector<std::string> TGCocoa::fAtomToName. private . Definition at line 459 of file TGCocoa.h. ◆ fCocoaDraw. Int_t TGCocoa::fCocoaDraw. protected . Definition at line 445 of file TGCocoa.h. ◆ fDirectDraw. bool TGCocoa::fDirectDraw. protected . Definition at line 448 of file TGCocoa.h. ◆ fDisplayRect. ROOT::MacOSX::X11::Rectangle TGCocoa::fDisplayRect. mutableprivate . Definition at line 466 of file TGCocoa.h. ◆ fDisplayShapeChanged. bool TGCocoa::fDisplayShapeChanged. mutableprivate . Definition at line 465 of file TGCocoa.h. ◆ fDrawMode. EDrawMode TGCocoa::fDrawMode. protected . Definition at line 447 of file TGCocoa.h. ◆ fForegroundProcess. bool TGCocoa::fForegroundProcess. private . Definition at line 455 of file TGCocoa.h. ◆ fgDeleteWindowAtom. Atom_t TGCocoa::fgDeleteWindowAtom = 0. static . De",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:16934,Security,access,accessing,16934," InitWindow (ULong_t window) override;  Creates a new window and return window number. ;  ; Atom_t InternAtom (const char *atom_name, Bool_t only_if_exist) override;  Returns the atom identifier associated with the specified ""atom_name"" string. ;  ; void IntersectRegion (Region_t rega, Region_t regb, Region_t result) override;  Computes the intersection of two regions. ;  ; TClass * IsA () const override;  ; Bool_t IsCmdThread () const override;  ; Bool_t IsCocoaDraw () const;  ; Bool_t IsDNDAware (Window_t win, Atom_t *typelist) override;  Checks if the Window is DND aware, and knows any of the DND formats passed in argument. ;  ; Int_t KeysymToKeycode (UInt_t keysym) override;  Converts the ""keysym"" to the appropriate keycode. ;  ; char ** ListFonts (const char *fontname, Int_t max, Int_t &count) override;  Returns list of font names matching fontname regexp, like ""-*-times-*"". ;  ; FontStruct_t LoadQueryFont (const char *font_name) override;  Provides the most common way for accessing a font: opens (loads) the specified font and returns a pointer to the appropriate FontStruct_t structure. ;  ; void LookupString (Event_t *event, char *buf, Int_t buflen, UInt_t &keysym) override;  Converts the keycode from the event structure to a key symbol (according to the modifiers specified in the event structure and the current keyboard mapping). ;  ; void LowerWindow (Window_t wid) override;  Lowers the specified window ""id"" to the bottom of the stack so that it does not obscure any sibling windows. ;  ; Bool_t MakeOpenGLContextCurrent (Handle_t ctx, Window_t windowID) override;  Makes context ctx current OpenGL context. ;  ; void MapRaised (Window_t wid) override;  Maps the window ""id"" and all of its subwindows that have had map requests on the screen and put this window on the top of of the stack of all windows. ;  ; void MapSubwindows (Window_t wid) override;  Maps all subwindows for the specified window ""id"" in top-to-bottom stacking order. ;  ; void MapWindow (Window_t ",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:33733,Security,hash,hash,33733," override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this met",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:96381,Security,access,accessing,96381,"char * ; fontname, . Int_t ; max, . Int_t & ; count . ). overridevirtual . Returns list of font names matching fontname regexp, like ""-*-times-*"". ; The pattern string can contain any characters, but each asterisk (*) is a wildcard for any number of characters, and each question mark (?) is a wildcard for a single character. If the pattern string is not in the Host Portable Character Encoding, the result is implementation dependent. Use of uppercase or lowercase does not matter. Each returned string is null-terminated.; Parameters. [in]fontnamespecifies the null-terminated pattern string that can contain wildcard characters ; [in]maxspecifies the maximum number of names to be returned ; [in]countreturns the actual number of font names . Reimplemented from TVirtualX.; Definition at line 2882 of file TGCocoa.mm. ◆ LoadQueryFont(). FontStruct_t TGCocoa::LoadQueryFont ; (; const char * ; font_name). overridevirtual . Provides the most common way for accessing a font: opens (loads) the specified font and returns a pointer to the appropriate FontStruct_t structure. ; If the font does not exist, it returns NULL. ; Reimplemented from TVirtualX.; Definition at line 2809 of file TGCocoa.mm. ◆ LookupString(). void TGCocoa::LookupString ; (; Event_t * ; event, . char * ; buf, . Int_t ; buflen, . UInt_t & ; keysym . ). overridevirtual . Converts the keycode from the event structure to a key symbol (according to the modifiers specified in the event structure and the current keyboard mapping). ; In ""buf"" a null terminated ASCII string is returned representing the string that is currently mapped to the key code.; Parameters. [in]eventspecifies the event structure to be used ; [in]bufreturns the translated characters ; [in]buflenthe length of the buffer ; [in]keysymreturns the ""keysym"" computed from the event if this argument is not NULL . Reimplemented from TVirtualX.; Definition at line 2788 of file TGCocoa.mm. ◆ LowerWindow(). void TGCocoa::LowerWindow ; (; Window_t ; id). overrid",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:100784,Security,expose,expose,100784,"X.; Definition at line 749 of file TGCocoa.mm. ◆ MoveWindow() [2/2]. void TGCocoa::MoveWindow ; (; Window_t ; id, . Int_t ; x, . Int_t ; y . ). overridevirtual . Moves the specified window to the specified x and y coordinates. ; It does not change the window's size, raise the window, or change the mapping state of the window.; Parameters. [in]idwindow identifier ; [in]x,ycoordinates, which define the new position of the window relative to its parent. . Reimplemented from TVirtualX.; Definition at line 1248 of file TGCocoa.mm. ◆ NeedRedraw(). Bool_t TGCocoa::NeedRedraw ; (; ULong_t ; tgwindow, . Bool_t ; force . ). overridevirtual . Notify the low level GUI layer ROOT requires ""tgwindow"" to be updated. ; Returns kTRUE if the notification was desirable and it was sent; At the moment only Qt4 layer needs that; One needs explicitly cast the first parameter to TGWindow to make it working in the implementation.; One needs to process the notification to confine all paint operations within ""expose"" / ""paint"" like low level event or equivalent ; Reimplemented from TVirtualX.; Definition at line 4182 of file TGCocoa.mm. ◆ NextEvent(). void TGCocoa::NextEvent ; (; Event_t & ; event). overridevirtual . The ""event"" is set to default event. ; This method however, should never be called. ; Reimplemented from TVirtualX.; Definition at line 3531 of file TGCocoa.mm. ◆ OpenDisplay(). Int_t TGCocoa::OpenDisplay ; (; const char * ; dpyName). overridevirtual . Opens connection to display server (if such a thing exist on the current platform). ; The encoding and interpretation of the display name.; On X11 this method returns on success the X display socket descriptor >0, 0 in case of batch mode, and <0 in case of failure (cannot connect to display dpyName). ; Reimplemented from TVirtualX.; Definition at line 500 of file TGCocoa.mm. ◆ OpenPixmap(). Int_t TGCocoa::OpenPixmap ; (; UInt_t ; w, . UInt_t ; h . ). overridevirtual . Creates a pixmap of the width ""w"" and height ""h"" you specified. ",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:20191,Testability,log,logically,20191,"d colormap. ;  ; Bool_t PointInRegion (Int_t x, Int_t y, Region_t reg) override;  Returns kTRUE if the point [x, y] is contained in the region reg. ;  ; Region_t PolygonRegion (Point_t *points, Int_t np, Bool_t winding) override;  Returns a region for the polygon defined by the points array. ;  ; void PutImage (Drawable_t wid, GContext_t gc, Drawable_t img, Int_t dx, Int_t dy, Int_t x, Int_t y, UInt_t w, UInt_t h) override;  Combines an image with a rectangle of the specified drawable. ;  ; void PutPixel (Drawable_t wid, Int_t x, Int_t y, ULong_t pixel) override;  Overwrites the pixel in the image with the specified pixel value. ;  ; void QueryColor (Colormap_t cmap, ColorStruct_t &color) override;  Returns the current RGB value for the pixel in the ""color"" structure. ;  ; void QueryPointer (Int_t &x, Int_t &y) override;  Returns the pointer position. ;  ; void QueryPointer (Window_t wid, Window_t &rootw, Window_t &childw, Int_t &root_x, Int_t &root_y, Int_t &win_x, Int_t &win_y, UInt_t &mask) override;  Returns the root window the pointer is logically on and the pointer coordinates relative to the root window's origin. ;  ; void RaiseWindow (Window_t wid) override;  Raises the specified window to the top of the stack so that no sibling window obscures it. ;  ; Pixmap_t ReadGIF (Int_t x0, Int_t y0, const char *file, Window_t wid) override;  If id is NULL - loads the specified gif file at position [x0,y0] in the current window. ;  ; Bool_t ReadPictureDataFromFile (const char *filename, char ***ret_data) override;  Reads picture data from file ""filename"" and store it in ""ret_data"". ;  ; void ReconfigureDisplay ();  ; void RemoveWindow (ULong_t qwid) override;  Removes the created by Qt window ""qwid"". ;  ; void ReparentChild (Window_t wid, Window_t pid, Int_t x, Int_t y);  ; void ReparentTopLevel (Window_t wid, Window_t pid, Int_t x, Int_t y);  ; void ReparentWindow (Window_t wid, Window_t pid, Int_t x, Int_t y) override;  If the specified window is mapped, ReparentWin",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:91174,Testability,log,logically,91174,"assive grab on a certain mouse button. ; That is, when a certain mouse button is hit while certain modifier's (Shift, Control, Meta, Alt) are active then the mouse will be grabbed for window id. When grab is false, ungrab the mouse button for this button and modifier. ; Reimplemented from TVirtualX.; Definition at line 2644 of file TGCocoa.mm. ◆ GrabKey(). void TGCocoa::GrabKey ; (; Window_t ; id, . Int_t ; keycode, . UInt_t ; modifier, . Bool_t ; grab = kTRUE . ). overridevirtual . Establishes a passive grab on the keyboard. ; In the future, the keyboard is actively grabbed, the last-keyboard-grab time is set to the time at which the key was pressed (as transmitted in the KeyPress event), and the KeyPress event is reported if all of the following conditions are true:. the keyboard is not grabbed and the specified key (which can itself be a modifier key) is logically pressed when the specified modifier keys are logically down, and no other modifier keys are logically down;; either the grab window ""id"" is an ancestor of (or is) the focus window, or ""id"" is a descendant of the focus window and contains the pointer;; a passive grab on the same key combination does not exist on any ancestor of grab_window. Parameters. [in]idwindow id ; [in]keycodespecifies the KeyCode or AnyKey ; [in]modifierspecifies the set of keymasks or AnyModifier; the mask is the bitwise inclusive OR of the valid keymask bits ; [in]graba switch between grab/ungrab key grab = kTRUE grab the key and modifier grab = kFALSE ungrab the key and modifier . Reimplemented from TVirtualX.; Definition at line 2715 of file TGCocoa.mm. ◆ GrabPointer(). void TGCocoa::GrabPointer ; (; Window_t ; id, . UInt_t ; evmask, . Window_t ; confine, . Cursor_t ; cursor, . Bool_t ; grab = kTRUE, . Bool_t ; owner_events = kTRUE . ). overridevirtual . Establishes an active pointer grab. ; While an active pointer grab is in effect, further pointer events are only reported to the grabbing client window. ; Reimplemented from TV",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:91229,Testability,log,logically,91229,"assive grab on a certain mouse button. ; That is, when a certain mouse button is hit while certain modifier's (Shift, Control, Meta, Alt) are active then the mouse will be grabbed for window id. When grab is false, ungrab the mouse button for this button and modifier. ; Reimplemented from TVirtualX.; Definition at line 2644 of file TGCocoa.mm. ◆ GrabKey(). void TGCocoa::GrabKey ; (; Window_t ; id, . Int_t ; keycode, . UInt_t ; modifier, . Bool_t ; grab = kTRUE . ). overridevirtual . Establishes a passive grab on the keyboard. ; In the future, the keyboard is actively grabbed, the last-keyboard-grab time is set to the time at which the key was pressed (as transmitted in the KeyPress event), and the KeyPress event is reported if all of the following conditions are true:. the keyboard is not grabbed and the specified key (which can itself be a modifier key) is logically pressed when the specified modifier keys are logically down, and no other modifier keys are logically down;; either the grab window ""id"" is an ancestor of (or is) the focus window, or ""id"" is a descendant of the focus window and contains the pointer;; a passive grab on the same key combination does not exist on any ancestor of grab_window. Parameters. [in]idwindow id ; [in]keycodespecifies the KeyCode or AnyKey ; [in]modifierspecifies the set of keymasks or AnyModifier; the mask is the bitwise inclusive OR of the valid keymask bits ; [in]graba switch between grab/ungrab key grab = kTRUE grab the key and modifier grab = kFALSE ungrab the key and modifier . Reimplemented from TVirtualX.; Definition at line 2715 of file TGCocoa.mm. ◆ GrabPointer(). void TGCocoa::GrabPointer ; (; Window_t ; id, . UInt_t ; evmask, . Window_t ; confine, . Cursor_t ; cursor, . Bool_t ; grab = kTRUE, . Bool_t ; owner_events = kTRUE . ). overridevirtual . Establishes an active pointer grab. ; While an active pointer grab is in effect, further pointer events are only reported to the grabbing client window. ; Reimplemented from TV",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:91276,Testability,log,logically,91276,"assive grab on a certain mouse button. ; That is, when a certain mouse button is hit while certain modifier's (Shift, Control, Meta, Alt) are active then the mouse will be grabbed for window id. When grab is false, ungrab the mouse button for this button and modifier. ; Reimplemented from TVirtualX.; Definition at line 2644 of file TGCocoa.mm. ◆ GrabKey(). void TGCocoa::GrabKey ; (; Window_t ; id, . Int_t ; keycode, . UInt_t ; modifier, . Bool_t ; grab = kTRUE . ). overridevirtual . Establishes a passive grab on the keyboard. ; In the future, the keyboard is actively grabbed, the last-keyboard-grab time is set to the time at which the key was pressed (as transmitted in the KeyPress event), and the KeyPress event is reported if all of the following conditions are true:. the keyboard is not grabbed and the specified key (which can itself be a modifier key) is logically pressed when the specified modifier keys are logically down, and no other modifier keys are logically down;; either the grab window ""id"" is an ancestor of (or is) the focus window, or ""id"" is a descendant of the focus window and contains the pointer;; a passive grab on the same key combination does not exist on any ancestor of grab_window. Parameters. [in]idwindow id ; [in]keycodespecifies the KeyCode or AnyKey ; [in]modifierspecifies the set of keymasks or AnyModifier; the mask is the bitwise inclusive OR of the valid keymask bits ; [in]graba switch between grab/ungrab key grab = kTRUE grab the key and modifier grab = kFALSE ungrab the key and modifier . Reimplemented from TVirtualX.; Definition at line 2715 of file TGCocoa.mm. ◆ GrabPointer(). void TGCocoa::GrabPointer ; (; Window_t ; id, . UInt_t ; evmask, . Window_t ; confine, . Cursor_t ; cursor, . Bool_t ; grab = kTRUE, . Bool_t ; owner_events = kTRUE . ). overridevirtual . Establishes an active pointer grab. ; While an active pointer grab is in effect, further pointer events are only reported to the grabbing client window. ; Reimplemented from TV",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:105781,Testability,log,logically,105781,"ted from TVirtualX.; Definition at line 2600 of file TGCocoa.mm. ◆ QueryColor(). void TGCocoa::QueryColor ; (; Colormap_t ; cmap, . ColorStruct_t & ; color . ). overridevirtual . Returns the current RGB value for the pixel in the ""color"" structure. ; The color components are set to default.; Parameters. [in]cmapthe colormap ; [in]colorspecifies and returns the RGB values for the pixel specified in the structure . Reimplemented from TVirtualX.; Definition at line 2927 of file TGCocoa.mm. ◆ QueryPointer() [1/2]. void TGCocoa::QueryPointer ; (; Int_t & ; ix, . Int_t & ; iy . ). overridevirtual . Returns the pointer position. ; Reimplemented from TVirtualX.; Definition at line 3144 of file TGCocoa.mm. ◆ QueryPointer() [2/2]. void TGCocoa::QueryPointer ; (; Window_t ; id, . Window_t & ; rootw, . Window_t & ; childw, . Int_t & ; root_x, . Int_t & ; root_y, . Int_t & ; win_x, . Int_t & ; win_y, . UInt_t & ; mask . ). overridevirtual . Returns the root window the pointer is logically on and the pointer coordinates relative to the root window's origin. ; Parameters. [in]idspecifies the window ; [in]rootwthe root window that the pointer is in ; [in]childwthe child window that the pointer is located in, if any ; [in]root_x,root_ythe pointer coordinates relative to the root window's origin ; [in]win_x,win_ythe pointer coordinates relative to the specified window ""id"" ; [in]maskthe current state of the modifier keys and pointer buttons . Reimplemented from TVirtualX.; Definition at line 3155 of file TGCocoa.mm. ◆ RaiseWindow(). void TGCocoa::RaiseWindow ; (; Window_t ; id). overridevirtual . Raises the specified window to the top of the stack so that no sibling window obscures it. ; Reimplemented from TVirtualX.; Definition at line 1214 of file TGCocoa.mm. ◆ ReadGIF(). Pixmap_t TGCocoa::ReadGIF ; (; Int_t ; x0, . Int_t ; y0, . const char * ; file, . Window_t ; id . ). overridevirtual . If id is NULL - loads the specified gif file at position [x0,y0] in the current window. ; Othe",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGCocoa.html:55711,Usability,simpl,simply,55711,"ies the mask and the values to be set. (see also the GCValues_t structure) ; Reimplemented from TVirtualX.; Definition at line 3012 of file TGCocoa.mm. ◆ ChangeProperties(). void TGCocoa::ChangeProperties ; (; Window_t ; id, . Atom_t ; property, . Atom_t ; type, . Int_t ; format, . UChar_t * ; data, . Int_t ; len . ). overridevirtual . Alters the property for the specified window and causes the X server to generate a PropertyNotify event on that window. ; Reimplemented from TVirtualX.; Definition at line 3859 of file TGCocoa.mm. ◆ ChangeProperty(). void TGCocoa::ChangeProperty ; (; Window_t ; id, . Atom_t ; property, . Atom_t ; type, . UChar_t * ; data, . Int_t ; len . ). overridevirtual . Alters the property for the specified window and causes the X server to generate a PropertyNotify event on that window. ; Parameters. [in]idthe window whose property you want to change ; [in]propertyspecifies the property name ; [in]typethe type of the property; the X server does not interpret the type but simply passes it back to an application that might ask about the window properties ; [in]datathe property data ; [in]lenthe length of the specified data format . Reimplemented from TVirtualX.; Definition at line 3816 of file TGCocoa.mm. ◆ ChangeWindowAttributes(). void TGCocoa::ChangeWindowAttributes ; (; Window_t ; id, . SetWindowAttributes_t * ; attr . ). overridevirtual . Changes the attributes of the specified window ""id"" according the values provided in ""attr"". ; The mask data member of ""attr"" specifies which window attributes are defined in the attributes argument. This mask is the bitwise inclusive OR of the valid attribute mask bits; if it is zero, the attributes are ignored. ; Reimplemented from TVirtualX.; Definition at line 1006 of file TGCocoa.mm. ◆ CheckEvent(). Bool_t TGCocoa::CheckEvent ; (; Window_t ; id, . EGEventType ; type, . Event_t & ; ev . ). overridevirtual . Check if there is for window ""id"" an event of type ""type"". ; If there is it fills in the event str",MatchSource.WIKI,doc/master/classTGCocoa.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGCocoa.html
https://root.cern/doc/master/classTGColorDialog.html:18363,Availability,error,error,18363,"="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ; ",MatchSource.WIKI,doc/master/classTGColorDialog.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorDialog.html
https://root.cern/doc/master/classTGColorDialog.html:18452,Availability,error,error,18452," object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns ",MatchSource.WIKI,doc/master/classTGColorDialog.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorDialog.html
https://root.cern/doc/master/classTGColorDialog.html:18607,Availability,error,error,18607,"etup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of ",MatchSource.WIKI,doc/master/classTGColorDialog.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorDialog.html
https://root.cern/doc/master/classTGColorDialog.html:18904,Availability,error,error,18904,"ject using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from ",MatchSource.WIKI,doc/master/classTGColorDialog.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorDialog.html
https://root.cern/doc/master/classTGColorDialog.html:22435,Availability,error,error,22435,"sz);  ; void * operator new (size_t sz, void *vp);  ; void * operator new[] (size_t sz);  ; void * operator new[] (size_t sz, void *vp);  ; TObject & operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Paint (Option_t *option="""");  This method must be overridden if a class wants to paint itself. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class s",MatchSource.WIKI,doc/master/classTGColorDialog.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorDialog.html
https://root.cern/doc/master/classTGColorDialog.html:33626,Availability,mask,mask,33626," fWMWidth;  WM width. ;  ; UInt_t fWMWidthInc;  WM width increments. ;  ; Int_t fWMX;  WM x position. ;  ; Int_t fWMY;  WM y position. ;  ;  Protected Attributes inherited from TGCompositeFrame; Bool_t fLayoutBroken;  no layout manager is used ;  ; TGLayoutManager * fLayoutManager;  layout manager ;  ; TList * fList;  container of frame elements ;  ; Bool_t fMapSubwindows;  kTRUE - map subwindows ;  ; Int_t fMustCleanup;  cleanup mode (see EFrameCleanup) ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions;  TGColorDialog (const TGColorDialog &)=delete;  ; TGColorDialog & operator= (const TGColorDialog &)=delete;  . Additional Inherited Members;  Public Types inherited from TGTransientFrame; enum  EPlacement { ;   kCenter; , kLeft; , kRight; , kT",MatchSource.WIKI,doc/master/classTGColorDialog.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorDialog.html
https://root.cern/doc/master/classTGColorDialog.html:3705,Integrability,message,messages,3705,"const;  Bind key to a window. ;  ; void DontCallClose ();  Typically call this method in the slot connected to the CloseWindow() signal to prevent the calling of the default or any derived CloseWindow() methods to prevent premature or double deletion of this window. ;  ; TList * GetBindList () const;  ; void GetClassHints (const char *&className, const char *&resourceName) const;  ; const char * GetIconName () const override;  Returns mime type name of object. ;  ; const char * GetIconPixmap () const;  ; void GetMWMHints (UInt_t &value, UInt_t &funcs, UInt_t &input) const;  ; const char * GetWindowName () const;  ; void GetWMPosition (Int_t &x, Int_t &y) const;  ; void GetWMSize (UInt_t &w, UInt_t &h) const;  ; void GetWMSizeHints (UInt_t &wmin, UInt_t &hmin, UInt_t &wmax, UInt_t &hmax, UInt_t &winc, UInt_t &hinc) const;  ; EInitialState GetWMState () const;  ; Bool_t HandleButton (Event_t *event) override;  Handle mouse button events. ;  ; Bool_t HandleClientMessage (Event_t *event) override;  Handle client messages sent to this frame. ;  ; Bool_t HandleKey (Event_t *event) override;  Handle keyboard events. ;  ; Bool_t HandleMotion (Event_t *event) override;  Handle mouse motion events. ;  ; Bool_t HandleSelection (Event_t *event) override;  Handle primary selection event. ;  ; Bool_t HandleSelectionRequest (Event_t *event) override;  Handle selection request event. ;  ; virtual void RemoveBind (const TGWindow *w, Int_t keycode, Int_t modifier) const;  Remove key binding. ;  ; virtual Bool_t SaveFrameAsCodeOrImage ();  Opens dialog window allowing user to save the frame contents as a ROOT macro or as an image. ;  ; virtual Bool_t SaveFrameAsCodeOrImage (const TString &fileName);  Saves the frame contents as a ROOT macro or as an image, depending on the extension of the fileName argument. ;  ; virtual void SendCloseMessage ();  Send close message to self. ;  ; void SetClassHints (const char *className, const char *resourceName);  Set the windows class and resource n",MatchSource.WIKI,doc/master/classTGColorDialog.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorDialog.html
https://root.cern/doc/master/classTGColorDialog.html:4449,Integrability,depend,depending,4449,"WMSizeHints (UInt_t &wmin, UInt_t &hmin, UInt_t &wmax, UInt_t &hmax, UInt_t &winc, UInt_t &hinc) const;  ; EInitialState GetWMState () const;  ; Bool_t HandleButton (Event_t *event) override;  Handle mouse button events. ;  ; Bool_t HandleClientMessage (Event_t *event) override;  Handle client messages sent to this frame. ;  ; Bool_t HandleKey (Event_t *event) override;  Handle keyboard events. ;  ; Bool_t HandleMotion (Event_t *event) override;  Handle mouse motion events. ;  ; Bool_t HandleSelection (Event_t *event) override;  Handle primary selection event. ;  ; Bool_t HandleSelectionRequest (Event_t *event) override;  Handle selection request event. ;  ; virtual void RemoveBind (const TGWindow *w, Int_t keycode, Int_t modifier) const;  Remove key binding. ;  ; virtual Bool_t SaveFrameAsCodeOrImage ();  Opens dialog window allowing user to save the frame contents as a ROOT macro or as an image. ;  ; virtual Bool_t SaveFrameAsCodeOrImage (const TString &fileName);  Saves the frame contents as a ROOT macro or as an image, depending on the extension of the fileName argument. ;  ; virtual void SendCloseMessage ();  Send close message to self. ;  ; void SetClassHints (const char *className, const char *resourceName);  Set the windows class and resource name. ;  ; void SetIconName (const char *name);  Set window icon name. This is typically done via the window manager. ;  ; void SetIconPixmap (char **xpm_array);  Set window icon by xpm array. ;  ; const TGPicture * SetIconPixmap (const char *iconName);  Set window icon pixmap by name. ;  ; void SetMWMHints (UInt_t value, UInt_t funcs, UInt_t input);  Set decoration style for MWM-compatible wm (mwm, ncdwm, fvwm?). ;  ; void SetWindowName (const char *name=nullptr) override;  Set window name. This is typically done via the window manager. ;  ; void SetWMPosition (Int_t x, Int_t y);  Give the window manager a window position hint. ;  ; void SetWMSize (UInt_t w, UInt_t h);  Give the window manager a window size hint. ;  ; v",MatchSource.WIKI,doc/master/classTGColorDialog.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorDialog.html
https://root.cern/doc/master/classTGColorDialog.html:4553,Integrability,message,message,4553,"MState () const;  ; Bool_t HandleButton (Event_t *event) override;  Handle mouse button events. ;  ; Bool_t HandleClientMessage (Event_t *event) override;  Handle client messages sent to this frame. ;  ; Bool_t HandleKey (Event_t *event) override;  Handle keyboard events. ;  ; Bool_t HandleMotion (Event_t *event) override;  Handle mouse motion events. ;  ; Bool_t HandleSelection (Event_t *event) override;  Handle primary selection event. ;  ; Bool_t HandleSelectionRequest (Event_t *event) override;  Handle selection request event. ;  ; virtual void RemoveBind (const TGWindow *w, Int_t keycode, Int_t modifier) const;  Remove key binding. ;  ; virtual Bool_t SaveFrameAsCodeOrImage ();  Opens dialog window allowing user to save the frame contents as a ROOT macro or as an image. ;  ; virtual Bool_t SaveFrameAsCodeOrImage (const TString &fileName);  Saves the frame contents as a ROOT macro or as an image, depending on the extension of the fileName argument. ;  ; virtual void SendCloseMessage ();  Send close message to self. ;  ; void SetClassHints (const char *className, const char *resourceName);  Set the windows class and resource name. ;  ; void SetIconName (const char *name);  Set window icon name. This is typically done via the window manager. ;  ; void SetIconPixmap (char **xpm_array);  Set window icon by xpm array. ;  ; const TGPicture * SetIconPixmap (const char *iconName);  Set window icon pixmap by name. ;  ; void SetMWMHints (UInt_t value, UInt_t funcs, UInt_t input);  Set decoration style for MWM-compatible wm (mwm, ncdwm, fvwm?). ;  ; void SetWindowName (const char *name=nullptr) override;  Set window name. This is typically done via the window manager. ;  ; void SetWMPosition (Int_t x, Int_t y);  Give the window manager a window position hint. ;  ; void SetWMSize (UInt_t w, UInt_t h);  Give the window manager a window size hint. ;  ; void SetWMSizeHints (UInt_t wmin, UInt_t hmin, UInt_t wmax, UInt_t hmax, UInt_t winc, UInt_t hinc);  Give the window manager ",MatchSource.WIKI,doc/master/classTGColorDialog.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorDialog.html
https://root.cern/doc/master/classTGColorDialog.html:13540,Integrability,message,message,13540,"ow () override;  map window ;  ; void Move (Int_t x, Int_t y) override;  Move frame. ;  ; void MoveResize (Int_t x, Int_t y, UInt_t w=0, UInt_t h=0) override;  Move and/or resize the frame. ;  ; void Print (Option_t *option="""") const override;  Print window id. ;  ; virtual void ProcessedConfigure (Event_t *event);  ; virtual void ProcessedEvent (Event_t *event);  ; virtual void ReallyDelete ();  ; void RemoveInput (UInt_t emask);  Remove events specified in emask from the events the frame should handle. ;  ; void ReparentWindow (const TGWindow *p, Int_t x=0, Int_t y=0) override;  Reparent window, make p the new parent and position the window at position (x,y) in new parent. ;  ; virtual void Resize (TGDimension size);  Resize the frame. ;  ; void Resize (UInt_t w=0, UInt_t h=0) override;  Resize the frame. ;  ; void SaveUserColor (std::ostream &out, Option_t *);  Save a user color in a C++ macro file - used in SavePrimitive(). ;  ; virtual void SendMessage (const TGWindow *w, Longptr_t msg, Longptr_t parm1, Longptr_t parm2);  Send message (i.e. ;  ; void SetBackgroundColor (Pixel_t back) override;  Set background color (override from TGWindow base class). ;  ; void SetDNDSource (Bool_t onoff);  ; void SetDNDTarget (Bool_t onoff);  ; virtual void SetDragType (Int_t type);  SetDragType. ;  ; void SetDrawOption (Option_t *="""") override;  Set drawing option for object. ;  ; virtual void SetDropType (Int_t type);  SetDropType. ;  ; void SetEditable (Bool_t) override;  ; virtual void SetForegroundColor (Pixel_t);  ; void SetFrameElement (TGFrameElement *fe);  ; virtual void SetHeight (UInt_t h);  ; virtual void SetMaxHeight (UInt_t h);  ; virtual void SetMaxWidth (UInt_t w);  ; virtual void SetMinHeight (UInt_t h);  ; virtual void SetMinWidth (UInt_t w);  ; virtual void SetSize (const TGDimension &s);  ; virtual void SetWidth (UInt_t w);  ; virtual void SetX (Int_t x);  ; virtual void SetY (Int_t y);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; voi",MatchSource.WIKI,doc/master/classTGColorDialog.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorDialog.html
https://root.cern/doc/master/classTGColorDialog.html:18369,Integrability,message,message,18369,"="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ; ",MatchSource.WIKI,doc/master/classTGColorDialog.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorDialog.html
https://root.cern/doc/master/classTGColorDialog.html:18910,Integrability,message,message,18910,"ject using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from ",MatchSource.WIKI,doc/master/classTGColorDialog.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorDialog.html
https://root.cern/doc/master/classTGColorDialog.html:19788,Integrability,message,message,19788,"esponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessar",MatchSource.WIKI,doc/master/classTGColorDialog.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorDialog.html
https://root.cern/doc/master/classTGColorDialog.html:22441,Integrability,message,message,22441,"sz);  ; void * operator new (size_t sz, void *vp);  ; void * operator new[] (size_t sz);  ; void * operator new[] (size_t sz, void *vp);  ; TObject & operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Paint (Option_t *option="""");  This method must be overridden if a class wants to paint itself. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class s",MatchSource.WIKI,doc/master/classTGColorDialog.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorDialog.html
https://root.cern/doc/master/classTGColorDialog.html:22814,Integrability,message,message,22814," pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from class cls and all its base-classes. ;  ; Bool_t Connect (const char *signal, const char *receiver_class, void *receiver, const char *slot);  Non-static method is used to connect from the signal of this object to the receiver slot. ;  ; virtual void Connected (const char *);  ; virtual void Destroyed ();  ; Bool_t Disconnect (const char *signal=nullptr, voi",MatchSource.WIKI,doc/master/classTGColorDialog.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorDialog.html
https://root.cern/doc/master/classTGColorDialog.html:29211,Integrability,message,messages,29211,"Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Protected Member Functions; void CloseWindow () override;  Called when window is closed via window manager. ;  ; Bool_t ProcessMessage (Longptr_t msg, Longptr_t parm1, Longptr_t parm2) override;  Process messages for the color selection dialog. ;  ; void UpdateAlpha (Pixel_t *c);  Update Opacity text entry with alpha value of color c. ;  ; void UpdateHLSentries (Pixel_t *c);  Update HLS text entries with HLS values of color c. ;  ; void UpdateRGBentries (Pixel_t *c);  Update RGB text entries with RGB values of color c. ;  ;  Protected Member Functions inherited from TGMainFrame; TString GetMWMfuncString () const;  used in SaveSource() ;  ; TString GetMWMinpString () const;  used in SaveSource() ;  ; TString GetMWMvalueString () const;  used in SaveSource() ;  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () overr",MatchSource.WIKI,doc/master/classTGColorDialog.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorDialog.html
https://root.cern/doc/master/classTGColorDialog.html:41477,Integrability,message,messages,41477,"of the file containing the class declaration ; Definition at line 185 of file TGColorDialog.h. ◆ DoPreview(). void TGColorDialog::DoPreview ; (; ). Slot method called when Preview button is clicked. ; Definition at line 1630 of file TGColorDialog.cxx. ◆ GetCustomPalette(). TGColorPalette * TGColorDialog::GetCustomPalette ; (; ); const. inline . Definition at line 177 of file TGColorDialog.h. ◆ GetPalette(). TGColorPalette * TGColorDialog::GetPalette ; (; ); const. inline . Definition at line 176 of file TGColorDialog.h. ◆ IsA(). TClass * TGColorDialog::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 185 of file TGColorDialog.h. ◆ operator=(). TGColorDialog & TGColorDialog::operator= ; (; const TGColorDialog & ; ). privatedelete . ◆ ProcessMessage(). Bool_t TGColorDialog::ProcessMessage ; (; Longptr_t ; msg, . Longptr_t ; parm1, . Longptr_t ; parm2 . ). overrideprotectedvirtual . Process messages for the color selection dialog. ; Reimplemented from TGFrame.; Definition at line 1474 of file TGColorDialog.cxx. ◆ SetColorInfo(). void TGColorDialog::SetColorInfo ; (; Int_t ; event, . Int_t ; px, . Int_t ; py, . TObject * ; selected . ). Set the color info in RGB and HLS parts. ; Definition at line 1604 of file TGColorDialog.cxx. ◆ SetCurrentColor(). void TGColorDialog::SetCurrentColor ; (; Pixel_t ; col). virtual . Change current color. ; Definition at line 1341 of file TGColorDialog.cxx. ◆ Streamer(). void TGColorDialog::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject. ◆ StreamerNVirtual(). void TGColorDialog::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 185 of file TGColorDialog.h. ◆ UpdateAlpha(). void TGColorDialog::UpdateAlpha ; (; Pixel_t * ; c). protected . Update Opacity text entry with alpha value of color c. ; Definition at line 1401 of file TGColorDialog.cxx. ◆ Upda",MatchSource.WIKI,doc/master/classTGColorDialog.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorDialog.html
https://root.cern/doc/master/classTGColorDialog.html:1510,Modifiability,inherit,inherited,1510,"onst TGWindow *p=nullptr, const TGWindow *m=nullptr, Int_t *retc=nullptr, Pixel_t *color=nullptr, Bool_t wait=kTRUE);  Color selection dialog constructor. ;  ;  ~TGColorDialog () override;  TGColorDialog destructor. ;  ; virtual void AlphaColorSelected (ULongptr_t);  Emit signal about selected alpha and color. ;  ; virtual void ColorSelected (Pixel_t);  Emit signal about selected color. ;  ; void DoPreview ();  Slot method called when Preview button is clicked. ;  ; TGColorPalette * GetCustomPalette () const;  ; TGColorPalette * GetPalette () const;  ; TClass * IsA () const override;  ; void SetColorInfo (Int_t event, Int_t px, Int_t py, TObject *selected);  Set the color info in RGB and HLS parts. ;  ; virtual void SetCurrentColor (Pixel_t col);  Change current color. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGTransientFrame;  TGTransientFrame (const TGWindow *p=nullptr, const TGWindow *main=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=kVerticalFrame);  Create a transient window. ;  ; virtual void CenterOnParent (Bool_t croot=kTRUE, EPlacement pos=kCenter);  Position transient frame centered relative to the parent frame. ;  ; const TGWindow * GetMain () const;  ; TClass * IsA () const override;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save a transient frame widget as a C++ statement(s) on output stream out. ;  ; void SaveSource (const char *filename=""Rootdlog.C"", Option_t *option="""") override;  Save the GUI transient frame widget in a C++ macro file. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGMainFrame;  TGMainFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=kVerticalFrame);  Create a top level main frame. ;  ;  ~TGMain",MatchSource.WIKI,doc/master/classTGColorDialog.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorDialog.html
https://root.cern/doc/master/classTGColorDialog.html:2388,Modifiability,inherit,inherited,2388,"; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGTransientFrame;  TGTransientFrame (const TGWindow *p=nullptr, const TGWindow *main=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=kVerticalFrame);  Create a transient window. ;  ; virtual void CenterOnParent (Bool_t croot=kTRUE, EPlacement pos=kCenter);  Position transient frame centered relative to the parent frame. ;  ; const TGWindow * GetMain () const;  ; TClass * IsA () const override;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save a transient frame widget as a C++ statement(s) on output stream out. ;  ; void SaveSource (const char *filename=""Rootdlog.C"", Option_t *option="""") override;  Save the GUI transient frame widget in a C++ macro file. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGMainFrame;  TGMainFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=kVerticalFrame);  Create a top level main frame. ;  ;  ~TGMainFrame () override;  TGMainFrame destructor. ;  ; virtual Bool_t BindKey (const TGWindow *w, Int_t keycode, Int_t modifier) const;  Bind key to a window. ;  ; void DontCallClose ();  Typically call this method in the slot connected to the CloseWindow() signal to prevent the calling of the default or any derived CloseWindow() methods to prevent premature or double deletion of this window. ;  ; TList * GetBindList () const;  ; void GetClassHints (const char *&className, const char *&resourceName) const;  ; const char * GetIconName () const override;  Returns mime type name of object. ;  ; const char * GetIconPixmap () const;  ; void GetMWMHints (UInt_t &value, UInt_t &funcs, UInt_t &input) const;  ; const char * GetWindowName () const;  ; void GetWMPosition (Int_t &x, Int_t &y) const;  ; void GetWMSize (UInt_t &w, UInt_t &h) const;  ; void GetWMSizeHi",MatchSource.WIKI,doc/master/classTGColorDialog.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorDialog.html
https://root.cern/doc/master/classTGColorDialog.html:5781,Modifiability,inherit,inherited,5781," **xpm_array);  Set window icon by xpm array. ;  ; const TGPicture * SetIconPixmap (const char *iconName);  Set window icon pixmap by name. ;  ; void SetMWMHints (UInt_t value, UInt_t funcs, UInt_t input);  Set decoration style for MWM-compatible wm (mwm, ncdwm, fvwm?). ;  ; void SetWindowName (const char *name=nullptr) override;  Set window name. This is typically done via the window manager. ;  ; void SetWMPosition (Int_t x, Int_t y);  Give the window manager a window position hint. ;  ; void SetWMSize (UInt_t w, UInt_t h);  Give the window manager a window size hint. ;  ; void SetWMSizeHints (UInt_t wmin, UInt_t hmin, UInt_t wmax, UInt_t hmax, UInt_t winc, UInt_t hinc);  Give the window manager minimum and maximum size hints. ;  ; void SetWMState (EInitialState state);  Set the initial state of the window. Either kNormalState or kIconicState. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGCompositeFrame;  TGCompositeFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=0, Pixel_t back=GetDefaultFrameBackground());  Create a composite frame. ;  ;  TGCompositeFrame (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a frame using an externally created window. ;  ;  ~TGCompositeFrame () override;  Delete a composite frame. ;  ; virtual void AddFrame (TGFrame *f, TGLayoutHints *l=nullptr);  Add frame to the composite frame using the specified layout hints. ;  ; void ChangeOptions (UInt_t options) override;  Change composite frame options. Options is an OR of the EFrameTypes. ;  ; virtual void ChangeSubframesBackground (Pixel_t back);  Change background color for this frame and all subframes. ;  ; virtual void Cleanup ();  Cleanup and delete all objects contained in this composite frame. ;  ; virtual TGFrameElement * FindFrameElement (TGFrame *f) const;  Find frame-element holding frame f. ;  ; UInt_t GetDefaultHeight () const override;  ; TGDimension GetDefaultSize () ",MatchSource.WIKI,doc/master/classTGColorDialog.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorDialog.html
https://root.cern/doc/master/classTGColorDialog.html:9695,Modifiability,inherit,inherited,9695,"(std::ostream &out, Option_t *option="""");  Auxiliary protected method used to save subframes. ;  ; void SetCleanup (Int_t mode=kLocalCleanup) override;  Turn on automatic cleanup of child frames in dtor. ;  ; void SetEditable (Bool_t on=kTRUE) override;  Switch ON/OFF edit mode. ;  ; void SetEditDisabled (UInt_t on=1) override;  Set edit disable flag for this frame and subframes. ;  ; void SetLayoutBroken (Bool_t on=kTRUE) override;  Set broken layout. No Layout method is called. ;  ; virtual void SetLayoutManager (TGLayoutManager *l);  Set the layout manager for the composite frame. ;  ; void SetMapSubwindows (Bool_t on) override;  ; virtual void ShowFrame (TGFrame *f);  Show sub frame. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual Bool_t TranslateCoordinates (TGFrame *child, Int_t x, Int_t y, Int_t &fx, Int_t &fy);  Translate coordinates to child frame. ;  ;  Public Member Functions inherited from TGFrame;  TGFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=0, Pixel_t back=GetDefaultFrameBackground());  Create a TGFrame object. Options is an OR of the EFrameTypes. ;  ;  TGFrame (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a frame using an externally created window. ;  ;  ~TGFrame () override;  Destructor. ;  ; virtual void Activate (Bool_t);  ; void AddInput (UInt_t emask);  Add events specified in the emask to the events the frame should handle. ;  ; virtual void ChangeBackground (Pixel_t back);  Change frame background color. ;  ; Bool_t Contains (Int_t x, Int_t y) const;  ; void Delete (Option_t *="""") override;  Delete this object. ;  ; virtual void DeleteWindow ();  Delete window. ;  ; virtual void DrawBorder ();  Draw frame border. ;  ; void DrawClass () const override;  Draw class inheritance tree of the class to which this object belongs. ;  ; TObject * DrawClone (Option_t *="""") const override;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c",MatchSource.WIKI,doc/master/classTGColorDialog.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorDialog.html
https://root.cern/doc/master/classTGColorDialog.html:10562,Modifiability,inherit,inheritance,10562,"es (TGFrame *child, Int_t x, Int_t y, Int_t &fx, Int_t &fy);  Translate coordinates to child frame. ;  ;  Public Member Functions inherited from TGFrame;  TGFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=0, Pixel_t back=GetDefaultFrameBackground());  Create a TGFrame object. Options is an OR of the EFrameTypes. ;  ;  TGFrame (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a frame using an externally created window. ;  ;  ~TGFrame () override;  Destructor. ;  ; virtual void Activate (Bool_t);  ; void AddInput (UInt_t emask);  Add events specified in the emask to the events the frame should handle. ;  ; virtual void ChangeBackground (Pixel_t back);  Change frame background color. ;  ; Bool_t Contains (Int_t x, Int_t y) const;  ; void Delete (Option_t *="""") override;  Delete this object. ;  ; virtual void DeleteWindow ();  Delete window. ;  ; virtual void DrawBorder ();  Draw frame border. ;  ; void DrawClass () const override;  Draw class inheritance tree of the class to which this object belongs. ;  ; TObject * DrawClone (Option_t *="""") const override;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void DrawCopy (Handle_t, Int_t, Int_t);  ; void Dump () const override;  Dump contents of object on stdout. ;  ; virtual Pixel_t GetBackground () const;  ; Int_t GetBorderWidth () const;  ; virtual TDNDData * GetDNDData (Atom_t);  ; virtual Int_t GetDragType () const;  Returns drag source type. ;  ; virtual Int_t GetDropType () const;  Returns drop target type. ;  ; UInt_t GetEventMask () const;  ; virtual Pixel_t GetForeground () const;  Return frame foreground color. ;  ; TGFrameElement * GetFrameElement () const;  ; UInt_t GetHeight () const;  ; UInt_t GetMaxHeight () const;  ; UInt_t GetMaxWidth () const;  ; UInt_t GetMinHeight () const;  ; UInt_t GetMinWidth () const;  ; virtual UInt_t GetOptions () const;  ; TGDimension GetSize () const;  ; UInt_t GetWidth () const;  ",MatchSource.WIKI,doc/master/classTGColorDialog.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorDialog.html
https://root.cern/doc/master/classTGColorDialog.html:14563,Modifiability,inherit,inherited,14563,"ser color in a C++ macro file - used in SavePrimitive(). ;  ; virtual void SendMessage (const TGWindow *w, Longptr_t msg, Longptr_t parm1, Longptr_t parm2);  Send message (i.e. ;  ; void SetBackgroundColor (Pixel_t back) override;  Set background color (override from TGWindow base class). ;  ; void SetDNDSource (Bool_t onoff);  ; void SetDNDTarget (Bool_t onoff);  ; virtual void SetDragType (Int_t type);  SetDragType. ;  ; void SetDrawOption (Option_t *="""") override;  Set drawing option for object. ;  ; virtual void SetDropType (Int_t type);  SetDropType. ;  ; void SetEditable (Bool_t) override;  ; virtual void SetForegroundColor (Pixel_t);  ; void SetFrameElement (TGFrameElement *fe);  ; virtual void SetHeight (UInt_t h);  ; virtual void SetMaxHeight (UInt_t h);  ; virtual void SetMaxWidth (UInt_t w);  ; virtual void SetMinHeight (UInt_t h);  ; virtual void SetMinWidth (UInt_t w);  ; virtual void SetSize (const TGDimension &s);  ; virtual void SetWidth (UInt_t w);  ; virtual void SetX (Int_t x);  ; virtual void SetY (Int_t y);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UnmapWindow () override;  unmap window ;  ;  Public Member Functions inherited from TGWindow;  TGWindow (const TGWindow *p=nullptr, Int_t x=0, Int_t y=0, UInt_t w=0, UInt_t h=0, UInt_t border=0, Int_t depth=0, UInt_t clss=0, void *visual=nullptr, SetWindowAttributes_t *attr=nullptr, UInt_t wtype=0);  Create a new window. ;  ;  TGWindow (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a copy of a window. ;  ;  ~TGWindow () override;  Window destructor. Unregisters the window. ;  ; virtual void DestroySubwindows ();  destroy sub windows ;  ; virtual void DestroyWindow ();  destroy window ;  ; virtual UInt_t GetEditDisabled () const;  ; virtual const TGWindow * GetMainFrame () const;  Returns top level main frame. ;  ; const char * GetName () const override;  Return unique name, used in SavePrimitive methods. ;  ; const TGWindow * GetParent () const;  ; v",MatchSource.WIKI,doc/master/classTGColorDialog.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorDialog.html
https://root.cern/doc/master/classTGColorDialog.html:16267,Modifiability,inherit,inherited,16267,"Return unique name, used in SavePrimitive methods. ;  ; const TGWindow * GetParent () const;  ; virtual Bool_t HandleExpose (Event_t *event);  ; virtual Bool_t HandleIdleEvent (TGIdleHandler *);  ; Bool_t HandleTimer (TTimer *) override;  Execute action in response of a timer timing out. ;  ; virtual void IconifyWindow ();  iconify window ;  ; TClass * IsA () const override;  ; virtual Bool_t IsMapped ();  Returns kTRUE if window is mapped on screen, kFALSE otherwise. ;  ; virtual void LowerWindow ();  lower window ;  ; void Print (Option_t *option="""") const override;  Print window id. ;  ; virtual void RaiseWindow ();  raise window ;  ; virtual void RequestFocus ();  request focus ;  ; virtual void SetBackgroundPixmap (Pixmap_t pixmap);  set background pixmap ;  ; virtual void SetName (const char *name);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGObject;  TGObject ();  ;  TGObject (const TGObject &tgo);  ;  ~TGObject () override;  TGObject destructor. ;  ; TGClient * GetClient () const;  ; Handle_t GetId () const;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsEqual (const TObject *obj) const override;  Equal comparison (TGObjects are equal if they have the same window identifier). ;  ; void SaveAs (const char *filename="""", Option_t *option="""") const override;  Write this TGObject to a file using TImage, if filename's extension signals a valid TImage::EImageFileType, as defined by TImage::GetImageFileTypeFromFilename(). ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you d",MatchSource.WIKI,doc/master/classTGColorDialog.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorDialog.html
https://root.cern/doc/master/classTGColorDialog.html:17002,Modifiability,inherit,inherited,17002," void SetBackgroundPixmap (Pixmap_t pixmap);  set background pixmap ;  ; virtual void SetName (const char *name);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGObject;  TGObject ();  ;  TGObject (const TGObject &tgo);  ;  ~TGObject () override;  TGObject destructor. ;  ; TGClient * GetClient () const;  ; Handle_t GetId () const;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsEqual (const TObject *obj) const override;  Equal comparison (TGObjects are equal if they have the same window identifier). ;  ; void SaveAs (const char *filename="""", Option_t *option="""") const override;  Write this TGObject to a file using TImage, if filename's extension signals a valid TImage::EImageFileType, as defined by TImage::GetImageFileTypeFromFilename(). ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,doc/master/classTGColorDialog.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorDialog.html
https://root.cern/doc/master/classTGColorDialog.html:19886,Modifiability,inherit,inherits,19886,"d, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handl",MatchSource.WIKI,doc/master/classTGColorDialog.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorDialog.html
https://root.cern/doc/master/classTGColorDialog.html:20003,Modifiability,inherit,inherits,20003,"const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base implementation is no-op). ;  ; void Obsolete (const char *method, const char *asOfVe",MatchSource.WIKI,doc/master/classTGColorDialog.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorDialog.html
https://root.cern/doc/master/classTGColorDialog.html:23121,Modifiability,inherit,inherited,23121,"f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from class cls and all its base-classes. ;  ; Bool_t Connect (const char *signal, const char *receiver_class, void *receiver, const char *slot);  Non-static method is used to connect from the signal of this object to the receiver slot. ;  ; virtual void Connected (const char *);  ; virtual void Destroyed ();  ; Bool_t Disconnect (const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal of this object from slot of receiver. ;  ; virtual void Disconnected (const char *);  ; void Emit (const char *signal);  Activate signal without args. ;  ; template<typename T > ; void Emit (const char *signal, const T &arg);  Activate signal with single paramet",MatchSource.WIKI,doc/master/classTGColorDialog.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorDialog.html
https://root.cern/doc/master/classTGColorDialog.html:25283,Modifiability,inherit,inherited,25283,"onst char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGTransientFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGMainFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGCompositeFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetBckgndGC ();  Get background color graphics context. ;  ; static const TGGC & GetBlackGC ();  Get black graphics context. ;  ; static Pixel_t GetBlackPixel ();  Get black pixel value. ;  ; static Pixel_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get sha",MatchSource.WIKI,doc/master/classTGColorDialog.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorDialog.html
https://root.cern/doc/master/classTGColorDialog.html:25503,Modifiability,inherit,inherited,25503,"onst char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGTransientFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGMainFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGCompositeFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetBckgndGC ();  Get background color graphics context. ;  ; static const TGGC & GetBlackGC ();  Get black graphics context. ;  ; static Pixel_t GetBlackPixel ();  Get black pixel value. ;  ; static Pixel_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get sha",MatchSource.WIKI,doc/master/classTGColorDialog.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorDialog.html
https://root.cern/doc/master/classTGColorDialog.html:25718,Modifiability,inherit,inherited,25718,"onst char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGTransientFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGMainFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGCompositeFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetBckgndGC ();  Get background color graphics context. ;  ; static const TGGC & GetBlackGC ();  Get black graphics context. ;  ; static Pixel_t GetBlackPixel ();  Get black pixel value. ;  ; static Pixel_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get sha",MatchSource.WIKI,doc/master/classTGColorDialog.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorDialog.html
https://root.cern/doc/master/classTGColorDialog.html:25938,Modifiability,inherit,inherited,25938,"onst char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGTransientFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGMainFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGCompositeFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetBckgndGC ();  Get background color graphics context. ;  ; static const TGGC & GetBlackGC ();  Get black graphics context. ;  ; static Pixel_t GetBlackPixel ();  Get black pixel value. ;  ; static Pixel_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get sha",MatchSource.WIKI,doc/master/classTGColorDialog.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorDialog.html
https://root.cern/doc/master/classTGColorDialog.html:26824,Modifiability,inherit,inherited,26824,erited from TGFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetBckgndGC ();  Get background color graphics context. ;  ; static const TGGC & GetBlackGC ();  Get black graphics context. ;  ; static Pixel_t GetBlackPixel ();  Get black pixel value. ;  ; static Pixel_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get shadow color graphics context. ;  ; static const TGGC & GetWhiteGC ();  Get white graphics context. ;  ; static Pixel_t GetWhitePixel ();  Get white pixel value. ;  ;  Static Public Member Functions inherited from TGWindow; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetCounter ();  Return global window counter (total number of created windows). ;  ;  Static Public Member Functions inherited from TGObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true,MatchSource.WIKI,doc/master/classTGColorDialog.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorDialog.html
https://root.cern/doc/master/classTGColorDialog.html:27134,Modifiability,inherit,inherited,27134,"_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get shadow color graphics context. ;  ; static const TGGC & GetWhiteGC ();  Get white graphics context. ;  ; static Pixel_t GetWhitePixel ();  Get white pixel value. ;  ;  Static Public Member Functions inherited from TGWindow; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetCounter ();  Return global window counter (total number of created windows). ;  ;  Static Public Member Functions inherited from TGObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This m",MatchSource.WIKI,doc/master/classTGColorDialog.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorDialog.html
https://root.cern/doc/master/classTGColorDialog.html:27346,Modifiability,inherit,inherited,27346,"_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get shadow color graphics context. ;  ; static const TGGC & GetWhiteGC ();  Get white graphics context. ;  ; static Pixel_t GetWhitePixel ();  Get white pixel value. ;  ;  Static Public Member Functions inherited from TGWindow; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetCounter ();  Return global window counter (total number of created windows). ;  ;  Static Public Member Functions inherited from TGObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This m",MatchSource.WIKI,doc/master/classTGColorDialog.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorDialog.html
https://root.cern/doc/master/classTGColorDialog.html:27864,Modifiability,inherit,inherited,27864," Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetCounter ();  Return global window counter (total number of created windows). ;  ;  Static Public Member Functions inherited from TGObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullpt",MatchSource.WIKI,doc/master/classTGColorDialog.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorDialog.html
https://root.cern/doc/master/classTGColorDialog.html:29565,Modifiability,inherit,inherited,29565,"st char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Protected Member Functions; void CloseWindow () override;  Called when window is closed via window manager. ;  ; Bool_t ProcessMessage (Longptr_t msg, Longptr_t parm1, Longptr_t parm2) override;  Process messages for the color selection dialog. ;  ; void UpdateAlpha (Pixel_t *c);  Update Opacity text entry with alpha value of color c. ;  ; void UpdateHLSentries (Pixel_t *c);  Update HLS text entries with HLS values of color c. ;  ; void UpdateRGBentries (Pixel_t *c);  Update RGB text entries with RGB values of color c. ;  ;  Protected Member Functions inherited from TGMainFrame; TString GetMWMfuncString () const;  used in SaveSource() ;  ; TString GetMWMinpString () const;  used in SaveSource() ;  ; TString GetMWMvalueString () const;  used in SaveSource() ;  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandl",MatchSource.WIKI,doc/master/classTGColorDialog.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorDialog.html
https://root.cern/doc/master/classTGColorDialog.html:29807,Modifiability,inherit,inherited,29807,"st char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Protected Member Functions; void CloseWindow () override;  Called when window is closed via window manager. ;  ; Bool_t ProcessMessage (Longptr_t msg, Longptr_t parm1, Longptr_t parm2) override;  Process messages for the color selection dialog. ;  ; void UpdateAlpha (Pixel_t *c);  Update Opacity text entry with alpha value of color c. ;  ; void UpdateHLSentries (Pixel_t *c);  Update HLS text entries with HLS values of color c. ;  ; void UpdateRGBentries (Pixel_t *c);  Update RGB text entries with RGB values of color c. ;  ;  Protected Member Functions inherited from TGMainFrame; TString GetMWMfuncString () const;  used in SaveSource() ;  ; TString GetMWMinpString () const;  used in SaveSource() ;  ; TString GetMWMvalueString () const;  used in SaveSource() ;  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandl",MatchSource.WIKI,doc/master/classTGColorDialog.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorDialog.html
https://root.cern/doc/master/classTGColorDialog.html:30301,Modifiability,inherit,inherited,30301,"xt entries with RGB values of color c. ;  ;  Protected Member Functions inherited from TGMainFrame; TString GetMWMfuncString () const;  used in SaveSource() ;  ; TString GetMWMinpString () const;  used in SaveSource() ;  ; TString GetMWMvalueString () const;  used in SaveSource() ;  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  . Protected Attributes; TGTextBuffer * fAlb;  RGB/HLS associated buffers. ;  ; TGTextEntry * fAle;  RGB/HLS text entries. ;  ; TGTextBuffer * fBtb;  ; TGTextEntry * fBte;  ; TGLabel * fColorInfo;  color info ;  ; TGColorPick * fColors;  color pick widget ;  ; TColorWheel * fColorWheel;  color wheel ;  ; TGColorPalette * fCpalette;  color palette ;  ; Pixel_t fCurrentColor;  currently selected color ;  ; TRootEmbeddedCanvas * fEcanvas;  embedded canvas holding the color wheel ;  ; TGTextBuffer * fGtb;  ; TGTextEntry * fGte;  ; TGTextBuffer * fHtb;  ; TGTextEntry * fHte;  ; Pixel_t fInitColor;  initially set color ;  ; TGTextBuffer * f",MatchSource.WIKI,doc/master/classTGColorDialog.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorDialog.html
https://root.cern/doc/master/classTGColorDialog.html:30465,Modifiability,inherit,inherited,30465,"xt entries with RGB values of color c. ;  ;  Protected Member Functions inherited from TGMainFrame; TString GetMWMfuncString () const;  used in SaveSource() ;  ; TString GetMWMinpString () const;  used in SaveSource() ;  ; TString GetMWMvalueString () const;  used in SaveSource() ;  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  . Protected Attributes; TGTextBuffer * fAlb;  RGB/HLS associated buffers. ;  ; TGTextEntry * fAle;  RGB/HLS text entries. ;  ; TGTextBuffer * fBtb;  ; TGTextEntry * fBte;  ; TGLabel * fColorInfo;  color info ;  ; TGColorPick * fColors;  color pick widget ;  ; TColorWheel * fColorWheel;  color wheel ;  ; TGColorPalette * fCpalette;  color palette ;  ; Pixel_t fCurrentColor;  currently selected color ;  ; TRootEmbeddedCanvas * fEcanvas;  embedded canvas holding the color wheel ;  ; TGTextBuffer * fGtb;  ; TGTextEntry * fGte;  ; TGTextBuffer * fHtb;  ; TGTextEntry * fHte;  ; Pixel_t fInitColor;  initially set color ;  ; TGTextBuffer * f",MatchSource.WIKI,doc/master/classTGColorDialog.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorDialog.html
https://root.cern/doc/master/classTGColorDialog.html:30565,Modifiability,inherit,inherited,30565,"xt entries with RGB values of color c. ;  ;  Protected Member Functions inherited from TGMainFrame; TString GetMWMfuncString () const;  used in SaveSource() ;  ; TString GetMWMinpString () const;  used in SaveSource() ;  ; TString GetMWMvalueString () const;  used in SaveSource() ;  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  . Protected Attributes; TGTextBuffer * fAlb;  RGB/HLS associated buffers. ;  ; TGTextEntry * fAle;  RGB/HLS text entries. ;  ; TGTextBuffer * fBtb;  ; TGTextEntry * fBte;  ; TGLabel * fColorInfo;  color info ;  ; TGColorPick * fColors;  color pick widget ;  ; TColorWheel * fColorWheel;  color wheel ;  ; TGColorPalette * fCpalette;  color palette ;  ; Pixel_t fCurrentColor;  currently selected color ;  ; TRootEmbeddedCanvas * fEcanvas;  embedded canvas holding the color wheel ;  ; TGTextBuffer * fGtb;  ; TGTextEntry * fGte;  ; TGTextBuffer * fHtb;  ; TGTextEntry * fHte;  ; Pixel_t fInitColor;  initially set color ;  ; TGTextBuffer * f",MatchSource.WIKI,doc/master/classTGColorDialog.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorDialog.html
https://root.cern/doc/master/classTGColorDialog.html:30776,Modifiability,inherit,inherited,30776,"ted Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  . Protected Attributes; TGTextBuffer * fAlb;  RGB/HLS associated buffers. ;  ; TGTextEntry * fAle;  RGB/HLS text entries. ;  ; TGTextBuffer * fBtb;  ; TGTextEntry * fBte;  ; TGLabel * fColorInfo;  color info ;  ; TGColorPick * fColors;  color pick widget ;  ; TColorWheel * fColorWheel;  color wheel ;  ; TGColorPalette * fCpalette;  color palette ;  ; Pixel_t fCurrentColor;  currently selected color ;  ; TRootEmbeddedCanvas * fEcanvas;  embedded canvas holding the color wheel ;  ; TGTextBuffer * fGtb;  ; TGTextEntry * fGte;  ; TGTextBuffer * fHtb;  ; TGTextEntry * fHte;  ; Pixel_t fInitColor;  initially set color ;  ; TGTextBuffer * fLtb;  ; TGTextEntry * fLte;  ; TGColorPalette * fPalette;  color palette ;  ; TGTextButton * fPreview;  preview button; ;  ; Int_t * fRetc;  return code (kMBOk, kMBCancel) ;  ; Pixel_t * fRetColor;  return color ;  ; TColor * fRetTColor;  return TColor, needed for changed alpha ;  ; TGTextBuf",MatchSource.WIKI,doc/master/classTGColorDialog.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorDialog.html
https://root.cern/doc/master/classTGColorDialog.html:32101,Modifiability,inherit,inherited,32101,"*location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  . Protected Attributes; TGTextBuffer * fAlb;  RGB/HLS associated buffers. ;  ; TGTextEntry * fAle;  RGB/HLS text entries. ;  ; TGTextBuffer * fBtb;  ; TGTextEntry * fBte;  ; TGLabel * fColorInfo;  color info ;  ; TGColorPick * fColors;  color pick widget ;  ; TColorWheel * fColorWheel;  color wheel ;  ; TGColorPalette * fCpalette;  color palette ;  ; Pixel_t fCurrentColor;  currently selected color ;  ; TRootEmbeddedCanvas * fEcanvas;  embedded canvas holding the color wheel ;  ; TGTextBuffer * fGtb;  ; TGTextEntry * fGte;  ; TGTextBuffer * fHtb;  ; TGTextEntry * fHte;  ; Pixel_t fInitColor;  initially set color ;  ; TGTextBuffer * fLtb;  ; TGTextEntry * fLte;  ; TGColorPalette * fPalette;  color palette ;  ; TGTextButton * fPreview;  preview button; ;  ; Int_t * fRetc;  return code (kMBOk, kMBCancel) ;  ; Pixel_t * fRetColor;  return color ;  ; TColor * fRetTColor;  return TColor, needed for changed alpha ;  ; TGTextBuffer * fRtb;  ; TGTextEntry * fRte;  ; TGFrame * fSample;  color sample frame ;  ; TGFrame * fSampleOld;  color sample frame ;  ; TGTextBuffer * fStb;  ; TGTextEntry * fSte;  ; TGTab * fTab;  tab widget holding the color selectors ;  ; Bool_t fWaitFor;  call WaitFor method in constructor ;  ;  Protected Attributes inherited from TGTransientFrame; const TGWindow * fMain;  ;  Protected Attributes inherited from TGMainFrame; TList * fBindList;  list with key bindings ;  ; TString fClassName;  WM class name. ;  ; Atom_t * fDNDTypeList;  handles DND types ;  ; TString fIconName;  icon name ;  ; TString fIconPixmap;  icon pixmap name ;  ; UInt_t fMWMFuncs;  MWM functions. ;  ; UInt_t fMWMInput;  MWM input modes. ;  ; UInt_t fMWMValue;  MWM decoration hints. ;  ; TString fResourceName;  WM resource name. ;  ; TString fWindowName;  window name ;",MatchSource.WIKI,doc/master/classTGColorDialog.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorDialog.html
https://root.cern/doc/master/classTGColorDialog.html:32183,Modifiability,inherit,inherited,32183,"*location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  . Protected Attributes; TGTextBuffer * fAlb;  RGB/HLS associated buffers. ;  ; TGTextEntry * fAle;  RGB/HLS text entries. ;  ; TGTextBuffer * fBtb;  ; TGTextEntry * fBte;  ; TGLabel * fColorInfo;  color info ;  ; TGColorPick * fColors;  color pick widget ;  ; TColorWheel * fColorWheel;  color wheel ;  ; TGColorPalette * fCpalette;  color palette ;  ; Pixel_t fCurrentColor;  currently selected color ;  ; TRootEmbeddedCanvas * fEcanvas;  embedded canvas holding the color wheel ;  ; TGTextBuffer * fGtb;  ; TGTextEntry * fGte;  ; TGTextBuffer * fHtb;  ; TGTextEntry * fHte;  ; Pixel_t fInitColor;  initially set color ;  ; TGTextBuffer * fLtb;  ; TGTextEntry * fLte;  ; TGColorPalette * fPalette;  color palette ;  ; TGTextButton * fPreview;  preview button; ;  ; Int_t * fRetc;  return code (kMBOk, kMBCancel) ;  ; Pixel_t * fRetColor;  return color ;  ; TColor * fRetTColor;  return TColor, needed for changed alpha ;  ; TGTextBuffer * fRtb;  ; TGTextEntry * fRte;  ; TGFrame * fSample;  color sample frame ;  ; TGFrame * fSampleOld;  color sample frame ;  ; TGTextBuffer * fStb;  ; TGTextEntry * fSte;  ; TGTab * fTab;  tab widget holding the color selectors ;  ; Bool_t fWaitFor;  call WaitFor method in constructor ;  ;  Protected Attributes inherited from TGTransientFrame; const TGWindow * fMain;  ;  Protected Attributes inherited from TGMainFrame; TList * fBindList;  list with key bindings ;  ; TString fClassName;  WM class name. ;  ; Atom_t * fDNDTypeList;  handles DND types ;  ; TString fIconName;  icon name ;  ; TString fIconPixmap;  icon pixmap name ;  ; UInt_t fMWMFuncs;  MWM functions. ;  ; UInt_t fMWMInput;  MWM input modes. ;  ; UInt_t fMWMValue;  MWM decoration hints. ;  ; TString fResourceName;  WM resource name. ;  ; TString fWindowName;  window name ;",MatchSource.WIKI,doc/master/classTGColorDialog.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorDialog.html
https://root.cern/doc/master/classTGColorDialog.html:33106,Modifiability,inherit,inherited,33106,"dles DND types ;  ; TString fIconName;  icon name ;  ; TString fIconPixmap;  icon pixmap name ;  ; UInt_t fMWMFuncs;  MWM functions. ;  ; UInt_t fMWMInput;  MWM input modes. ;  ; UInt_t fMWMValue;  MWM decoration hints. ;  ; TString fResourceName;  WM resource name. ;  ; TString fWindowName;  window name ;  ; UInt_t fWMHeight;  WM height. ;  ; UInt_t fWMHeightInc;  WM height increments. ;  ; EInitialState fWMInitState;  WM initial state. ;  ; UInt_t fWMMaxHeight;  WM max height. ;  ; UInt_t fWMMaxWidth;  WM max width. ;  ; UInt_t fWMMinHeight;  WM min height. ;  ; UInt_t fWMMinWidth;  WM min width. ;  ; UInt_t fWMWidth;  WM width. ;  ; UInt_t fWMWidthInc;  WM width increments. ;  ; Int_t fWMX;  WM x position. ;  ; Int_t fWMY;  WM y position. ;  ;  Protected Attributes inherited from TGCompositeFrame; Bool_t fLayoutBroken;  no layout manager is used ;  ; TGLayoutManager * fLayoutManager;  layout manager ;  ; TList * fList;  container of frame elements ;  ; Bool_t fMapSubwindows;  kTRUE - map subwindows ;  ; Int_t fMustCleanup;  cleanup mode (see EFrameCleanup) ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected ",MatchSource.WIKI,doc/master/classTGColorDialog.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorDialog.html
https://root.cern/doc/master/classTGColorDialog.html:33430,Modifiability,inherit,inherited,33430,"dles DND types ;  ; TString fIconName;  icon name ;  ; TString fIconPixmap;  icon pixmap name ;  ; UInt_t fMWMFuncs;  MWM functions. ;  ; UInt_t fMWMInput;  MWM input modes. ;  ; UInt_t fMWMValue;  MWM decoration hints. ;  ; TString fResourceName;  WM resource name. ;  ; TString fWindowName;  window name ;  ; UInt_t fWMHeight;  WM height. ;  ; UInt_t fWMHeightInc;  WM height increments. ;  ; EInitialState fWMInitState;  WM initial state. ;  ; UInt_t fWMMaxHeight;  WM max height. ;  ; UInt_t fWMMaxWidth;  WM max width. ;  ; UInt_t fWMMinHeight;  WM min height. ;  ; UInt_t fWMMinWidth;  WM min width. ;  ; UInt_t fWMWidth;  WM width. ;  ; UInt_t fWMWidthInc;  WM width increments. ;  ; Int_t fWMX;  WM x position. ;  ; Int_t fWMY;  WM y position. ;  ;  Protected Attributes inherited from TGCompositeFrame; Bool_t fLayoutBroken;  no layout manager is used ;  ; TGLayoutManager * fLayoutManager;  layout manager ;  ; TList * fList;  container of frame elements ;  ; Bool_t fMapSubwindows;  kTRUE - map subwindows ;  ; Int_t fMustCleanup;  cleanup mode (see EFrameCleanup) ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected ",MatchSource.WIKI,doc/master/classTGColorDialog.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorDialog.html
https://root.cern/doc/master/classTGColorDialog.html:34062,Modifiability,inherit,inherited,34062," fWMWidth;  WM width. ;  ; UInt_t fWMWidthInc;  WM width increments. ;  ; Int_t fWMX;  WM x position. ;  ; Int_t fWMY;  WM y position. ;  ;  Protected Attributes inherited from TGCompositeFrame; Bool_t fLayoutBroken;  no layout manager is used ;  ; TGLayoutManager * fLayoutManager;  layout manager ;  ; TList * fList;  container of frame elements ;  ; Bool_t fMapSubwindows;  kTRUE - map subwindows ;  ; Int_t fMustCleanup;  cleanup mode (see EFrameCleanup) ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions;  TGColorDialog (const TGColorDialog &)=delete;  ; TGColorDialog & operator= (const TGColorDialog &)=delete;  . Additional Inherited Members;  Public Types inherited from TGTransientFrame; enum  EPlacement { ;   kCenter; , kLeft; , kRight; , kT",MatchSource.WIKI,doc/master/classTGColorDialog.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorDialog.html
https://root.cern/doc/master/classTGColorDialog.html:34339,Modifiability,inherit,inherited,34339,"eanup;  cleanup mode (see EFrameCleanup) ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions;  TGColorDialog (const TGColorDialog &)=delete;  ; TGColorDialog & operator= (const TGColorDialog &)=delete;  . Additional Inherited Members;  Public Types inherited from TGTransientFrame; enum  EPlacement { ;   kCenter; , kLeft; , kRight; , kTop; , ;   kBottom; , kTopLeft; , kTopRight; , kBottomLeft; , ;   kBottomRight. };  ;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth ",MatchSource.WIKI,doc/master/classTGColorDialog.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorDialog.html
https://root.cern/doc/master/classTGColorDialog.html:34491,Modifiability,inherit,inherited,34491,"DNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions;  TGColorDialog (const TGColorDialog &)=delete;  ; TGColorDialog & operator= (const TGColorDialog &)=delete;  . Additional Inherited Members;  Public Types inherited from TGTransientFrame; enum  EPlacement { ;   kCenter; , kLeft; , kRight; , kTop; , ;   kBottom; , kTopLeft; , kTopRight; , kBottomLeft; , ;   kBottomRight. };  ;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObj",MatchSource.WIKI,doc/master/classTGColorDialog.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorDialog.html
https://root.cern/doc/master/classTGColorDialog.html:34856,Modifiability,inherit,inherited,34856,"ons;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions;  TGColorDialog (const TGColorDialog &)=delete;  ; TGColorDialog & operator= (const TGColorDialog &)=delete;  . Additional Inherited Members;  Public Types inherited from TGTransientFrame; enum  EPlacement { ;   kCenter; , kLeft; , kRight; , kTop; , ;   kBottom; , kTopLeft; , kTopRight; , kBottomLeft; , ;   kBottomRight. };  ;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatu",MatchSource.WIKI,doc/master/classTGColorDialog.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorDialog.html
https://root.cern/doc/master/classTGColorDialog.html:35043,Modifiability,inherit,inherited,35043,"eeds to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions;  TGColorDialog (const TGColorDialog &)=delete;  ; TGColorDialog & operator= (const TGColorDialog &)=delete;  . Additional Inherited Members;  Public Types inherited from TGTransientFrame; enum  EPlacement { ;   kCenter; , kLeft; , kRight; , kTop; , ;   kBottom; , kTopLeft; , kTopRight; , kBottomLeft; , ;   kBottomRight. };  ;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGMainFrame; enum  { kDontCallClose = (1U",MatchSource.WIKI,doc/master/classTGColorDialog.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorDialog.html
https://root.cern/doc/master/classTGColorDialog.html:35550,Modifiability,inherit,inherited,35550,"tOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions;  TGColorDialog (const TGColorDialog &)=delete;  ; TGColorDialog & operator= (const TGColorDialog &)=delete;  . Additional Inherited Members;  Public Types inherited from TGTransientFrame; enum  EPlacement { ;   kCenter; , kLeft; , kRight; , kTop; , ;   kBottom; , kTopLeft; , kTopRight; , kBottomLeft; , ;   kBottomRight. };  ;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGMainFrame; enum  { kDontCallClose = (1ULL << ( 14 )); };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected M",MatchSource.WIKI,doc/master/classTGColorDialog.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorDialog.html
https://root.cern/doc/master/classTGColorDialog.html:36191,Modifiability,inherit,inherited,36191,"L << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGMainFrame; enum  { kDontCallClose = (1ULL << ( 14 )); };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, co",MatchSource.WIKI,doc/master/classTGColorDialog.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorDialog.html
https://root.cern/doc/master/classTGColorDialog.html:36285,Modifiability,inherit,inherited,36285,"L << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGMainFrame; enum  { kDontCallClose = (1ULL << ( 14 )); };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, co",MatchSource.WIKI,doc/master/classTGColorDialog.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorDialog.html
https://root.cern/doc/master/classTGColorDialog.html:36380,Modifiability,inherit,inherited,36380,"L << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGMainFrame; enum  { kDontCallClose = (1ULL << ( 14 )); };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, co",MatchSource.WIKI,doc/master/classTGColorDialog.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorDialog.html
https://root.cern/doc/master/classTGColorDialog.html:36486,Modifiability,inherit,inherited,36486,"L << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGMainFrame; enum  { kDontCallClose = (1ULL << ( 14 )); };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, co",MatchSource.WIKI,doc/master/classTGColorDialog.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorDialog.html
https://root.cern/doc/master/classTGColorDialog.html:36612,Modifiability,inherit,inherited,36612,"Mask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGMainFrame; enum  { kDontCallClose = (1ULL << ( 14 )); };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static ",MatchSource.WIKI,doc/master/classTGColorDialog.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorDialog.html
https://root.cern/doc/master/classTGColorDialog.html:37468,Modifiability,inherit,inherited,37468,"ame and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGColorDialog.h>. Inheritance diagram for TGColorDialog:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGColorDialog() [1/2]. TGColorDialog::TGColorDialog ; (; const TGColorDialog & ; ). privatedelete . ◆ TGColorDialog() [2/2]. TGColorDialog::TGColorDialog ; (; const TGWindow * ; p = nullptr, . const TGWindow * ; m = nullptr, . Int_t * ; retc = nullptr, . Pixel_t ",MatchSource.WIKI,doc/master/classTGColorDialog.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorDialog.html
https://root.cern/doc/master/classTGColorDialog.html:37582,Modifiability,inherit,inherited,37582,"ame and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGColorDialog.h>. Inheritance diagram for TGColorDialog:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGColorDialog() [1/2]. TGColorDialog::TGColorDialog ; (; const TGColorDialog & ; ). privatedelete . ◆ TGColorDialog() [2/2]. TGColorDialog::TGColorDialog ; (; const TGWindow * ; p = nullptr, . const TGWindow * ; m = nullptr, . Int_t * ; retc = nullptr, . Pixel_t ",MatchSource.WIKI,doc/master/classTGColorDialog.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorDialog.html
https://root.cern/doc/master/classTGColorDialog.html:38251,Modifiability,inherit,inherited,38251,"ame and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGColorDialog.h>. Inheritance diagram for TGColorDialog:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGColorDialog() [1/2]. TGColorDialog::TGColorDialog ; (; const TGColorDialog & ; ). privatedelete . ◆ TGColorDialog() [2/2]. TGColorDialog::TGColorDialog ; (; const TGWindow * ; p = nullptr, . const TGWindow * ; m = nullptr, . Int_t * ; retc = nullptr, . Pixel_t ",MatchSource.WIKI,doc/master/classTGColorDialog.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorDialog.html
https://root.cern/doc/master/classTGColorDialog.html:38383,Modifiability,inherit,inherited,38383,"ame and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGColorDialog.h>. Inheritance diagram for TGColorDialog:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGColorDialog() [1/2]. TGColorDialog::TGColorDialog ; (; const TGColorDialog & ; ). privatedelete . ◆ TGColorDialog() [2/2]. TGColorDialog::TGColorDialog ; (; const TGWindow * ; p = nullptr, . const TGWindow * ; m = nullptr, . Int_t * ; retc = nullptr, . Pixel_t ",MatchSource.WIKI,doc/master/classTGColorDialog.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorDialog.html
https://root.cern/doc/master/classTGColorDialog.html:16498,Security,hash,hash,16498,"TGIdleHandler *);  ; Bool_t HandleTimer (TTimer *) override;  Execute action in response of a timer timing out. ;  ; virtual void IconifyWindow ();  iconify window ;  ; TClass * IsA () const override;  ; virtual Bool_t IsMapped ();  Returns kTRUE if window is mapped on screen, kFALSE otherwise. ;  ; virtual void LowerWindow ();  lower window ;  ; void Print (Option_t *option="""") const override;  Print window id. ;  ; virtual void RaiseWindow ();  raise window ;  ; virtual void RequestFocus ();  request focus ;  ; virtual void SetBackgroundPixmap (Pixmap_t pixmap);  set background pixmap ;  ; virtual void SetName (const char *name);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGObject;  TGObject ();  ;  TGObject (const TGObject &tgo);  ;  ~TGObject () override;  TGObject destructor. ;  ; TGClient * GetClient () const;  ; Handle_t GetId () const;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsEqual (const TObject *obj) const override;  Equal comparison (TGObjects are equal if they have the same window identifier). ;  ; void SaveAs (const char *filename="""", Option_t *option="""") const override;  Write this TGObject to a file using TImage, if filename's extension signals a valid TImage::EImageFileType, as defined by TImage::GetImageFileTypeFromFilename(). ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse ob",MatchSource.WIKI,doc/master/classTGColorDialog.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorDialog.html
https://root.cern/doc/master/classTGColorFrame.html:11406,Availability,error,error,11406,"="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTGColorFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorFrame.html
https://root.cern/doc/master/classTGColorFrame.html:11495,Availability,error,error,11495," object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual ",MatchSource.WIKI,doc/master/classTGColorFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorFrame.html
https://root.cern/doc/master/classTGColorFrame.html:11650,Availability,error,error,11650,"etup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the uniqu",MatchSource.WIKI,doc/master/classTGColorFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorFrame.html
https://root.cern/doc/master/classTGColorFrame.html:11947,Availability,error,error,11947,"ject using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t ",MatchSource.WIKI,doc/master/classTGColorFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorFrame.html
https://root.cern/doc/master/classTGColorFrame.html:15561,Availability,error,error,15561,"sz);  ; void * operator new (size_t sz, void *vp);  ; void * operator new[] (size_t sz);  ; void * operator new[] (size_t sz, void *vp);  ; TObject & operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Paint (Option_t *option="""");  This method must be overridden if a class wants to paint itself. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class s",MatchSource.WIKI,doc/master/classTGColorFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorFrame.html
https://root.cern/doc/master/classTGColorFrame.html:21972,Availability,mask,mask,21972,"Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Protected Attributes; Bool_t fActive;  kTRUE if this color cell is active ;  ; Pixel_t fColor;  returned color value ;  ; GContext_t fGrayGC;  Shadow GC. ;  ; const TGWindow * fMsgWindow;  window handling container messages ;  ; Pixel_t fPixel;  color value of this cell ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions;  TGColorFrame (const TGColorFrame &)=delete;  ; TGColorFrame & operator= (const TGColorFrame &)=delete;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( ",MatchSource.WIKI,doc/master/classTGColorFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorFrame.html
https://root.cern/doc/master/classTGColorFrame.html:3306,Integrability,message,message,3306,"this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void DrawCopy (Handle_t, Int_t, Int_t);  ; void Dump () const override;  Dump contents of object on stdout. ;  ; virtual Pixel_t GetBackground () const;  ; Int_t GetBorderWidth () const;  ; virtual UInt_t GetDefaultHeight () const;  ; virtual TGDimension GetDefaultSize () const;  std::cout << fWidth << ""x"" << fHeight << std::endl; ;  ; virtual UInt_t GetDefaultWidth () const;  ; virtual TDNDData * GetDNDData (Atom_t);  ; virtual Int_t GetDragType () const;  Returns drag source type. ;  ; virtual Int_t GetDropType () const;  Returns drop target type. ;  ; UInt_t GetEventMask () const;  ; virtual Pixel_t GetForeground () const;  Return frame foreground color. ;  ; TGFrameElement * GetFrameElement () const;  ; virtual TGFrame * GetFrameFromPoint (Int_t x, Int_t y);  ; UInt_t GetHeight () const;  ; UInt_t GetMaxHeight () const;  ; UInt_t GetMaxWidth () const;  ; UInt_t GetMinHeight () const;  ; UInt_t GetMinWidth () const;  ; virtual UInt_t GetOptions () const;  ; TGDimension GetSize () const;  ; UInt_t GetWidth () const;  ; Int_t GetX () const;  ; Int_t GetY () const;  ; virtual Bool_t HandleClientMessage (Event_t *event);  Handle a client message. ;  ; virtual Bool_t HandleColormapChange (Event_t *);  ; virtual Bool_t HandleConfigureNotify (Event_t *event);  This event is generated when the frame is resized. ;  ; virtual Bool_t HandleCrossing (Event_t *);  ; virtual Bool_t HandleDNDDrop (TDNDData *);  ; virtual Atom_t HandleDNDEnter (Atom_t *);  ; virtual Bool_t HandleDNDFinished ();  ; virtual Bool_t HandleDNDLeave ();  ; virtual Atom_t HandleDNDPosition (Int_t, Int_t, Atom_t, Int_t, Int_t);  ; virtual Bool_t HandleDoubleClick (Event_t *);  ; virtual Bool_t HandleDragDrop (TGFrame *, Int_t, Int_t, TGLayoutHints *);  ; virtual Bool_t HandleDragEnter (TGFrame *);  ; virtual Bool_t HandleDragLeave (TGFrame *);  ; virtual Bool_t HandleDragMotion (TGFrame *);  ; Bool_t HandleEvent (Event",MatchSource.WIKI,doc/master/classTGColorFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorFrame.html
https://root.cern/doc/master/classTGColorFrame.html:6146,Integrability,message,message,6146,"ption_t *option="""") const override;  Print window id. ;  ; virtual void ProcessedConfigure (Event_t *event);  ; virtual void ProcessedEvent (Event_t *event);  ; virtual Bool_t ProcessMessage (Longptr_t, Longptr_t, Longptr_t);  ; virtual void ReallyDelete ();  ; void RemoveInput (UInt_t emask);  Remove events specified in emask from the events the frame should handle. ;  ; void ReparentWindow (const TGWindow *p, Int_t x=0, Int_t y=0) override;  Reparent window, make p the new parent and position the window at position (x,y) in new parent. ;  ; virtual void Resize (TGDimension size);  Resize the frame. ;  ; void Resize (UInt_t w=0, UInt_t h=0) override;  Resize the frame. ;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save a frame widget as a C++ statement(s) on output stream out. ;  ; void SaveUserColor (std::ostream &out, Option_t *);  Save a user color in a C++ macro file - used in SavePrimitive(). ;  ; virtual void SendMessage (const TGWindow *w, Longptr_t msg, Longptr_t parm1, Longptr_t parm2);  Send message (i.e. ;  ; void SetBackgroundColor (Pixel_t back) override;  Set background color (override from TGWindow base class). ;  ; virtual void SetCleanup (Int_t=kLocalCleanup);  ; void SetDNDSource (Bool_t onoff);  ; void SetDNDTarget (Bool_t onoff);  ; virtual void SetDragType (Int_t type);  SetDragType. ;  ; void SetDrawOption (Option_t *="""") override;  Set drawing option for object. ;  ; virtual void SetDropType (Int_t type);  SetDropType. ;  ; void SetEditable (Bool_t) override;  ; virtual void SetForegroundColor (Pixel_t);  ; void SetFrameElement (TGFrameElement *fe);  ; virtual void SetHeight (UInt_t h);  ; virtual void SetLayoutBroken (Bool_t=kTRUE);  ; virtual void SetMaxHeight (UInt_t h);  ; virtual void SetMaxWidth (UInt_t w);  ; virtual void SetMinHeight (UInt_t h);  ; virtual void SetMinWidth (UInt_t w);  ; virtual void SetSize (const TGDimension &s);  ; virtual void SetWidth (UInt_t w);  ; virtual void SetX (Int_t x);  ; vi",MatchSource.WIKI,doc/master/classTGColorFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorFrame.html
https://root.cern/doc/master/classTGColorFrame.html:11412,Integrability,message,message,11412,"="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTGColorFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorFrame.html
https://root.cern/doc/master/classTGColorFrame.html:11953,Integrability,message,message,11953,"ject using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t ",MatchSource.WIKI,doc/master/classTGColorFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorFrame.html
https://root.cern/doc/master/classTGColorFrame.html:12914,Integrability,message,message,12914,"t char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessar",MatchSource.WIKI,doc/master/classTGColorFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorFrame.html
https://root.cern/doc/master/classTGColorFrame.html:15567,Integrability,message,message,15567,"sz);  ; void * operator new (size_t sz, void *vp);  ; void * operator new[] (size_t sz);  ; void * operator new[] (size_t sz, void *vp);  ; TObject & operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Paint (Option_t *option="""");  This method must be overridden if a class wants to paint itself. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class s",MatchSource.WIKI,doc/master/classTGColorFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorFrame.html
https://root.cern/doc/master/classTGColorFrame.html:15940,Integrability,message,message,15940," pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from class cls and all its base-classes. ;  ; Bool_t Connect (const char *signal, const char *receiver_class, void *receiver, const char *slot);  Non-static method is used to connect from the signal of this object to the receiver slot. ;  ; virtual void Connected (const char *);  ; virtual void Destroyed ();  ; Bool_t Disconnect (const char *signal=nullptr, voi",MatchSource.WIKI,doc/master/classTGColorFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorFrame.html
https://root.cern/doc/master/classTGColorFrame.html:21693,Integrability,message,messages,21693,"receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Protected Attributes; Bool_t fActive;  kTRUE if this color cell is active ;  ; Pixel_t fColor;  returned color value ;  ; GContext_t fGrayGC;  Shadow GC. ;  ; const TGWindow * fMsgWindow;  window handling container messages ;  ; Pixel_t fPixel;  color value of this cell ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fI",MatchSource.WIKI,doc/master/classTGColorFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorFrame.html
https://root.cern/doc/master/classTGColorFrame.html:30566,Integrability,message,messages,30566,olorFrame::GetColor ; (; ); const. inline . Definition at line 43 of file TGColorSelect.h. ◆ HandleButton(). Bool_t TGColorFrame::HandleButton ; (; Event_t * ; event). overridevirtual . Handle button events in TGColorFrame. ; Reimplemented from TGFrame.; Definition at line 106 of file TGColorSelect.cxx. ◆ IsA(). TClass * TGColorFrame::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 45 of file TGColorSelect.h. ◆ operator=(). TGColorFrame & TGColorFrame::operator= ; (; const TGColorFrame & ; ). privatedelete . ◆ SetActive(). void TGColorFrame::SetActive ; (; Bool_t ; in). inline . Definition at line 42 of file TGColorSelect.h. ◆ Streamer(). void TGColorFrame::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject. ◆ StreamerNVirtual(). void TGColorFrame::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 45 of file TGColorSelect.h. Member Data Documentation. ◆ fActive. Bool_t TGColorFrame::fActive. protected . kTRUE if this color cell is active ; Definition at line 27 of file TGColorSelect.h. ◆ fColor. Pixel_t TGColorFrame::fColor. protected . returned color value ; Definition at line 29 of file TGColorSelect.h. ◆ fGrayGC. GContext_t TGColorFrame::fGrayGC. protected . Shadow GC. ; Definition at line 28 of file TGColorSelect.h. ◆ fMsgWindow. const TGWindow* TGColorFrame::fMsgWindow. protected . window handling container messages ; Definition at line 25 of file TGColorSelect.h. ◆ fPixel. Pixel_t TGColorFrame::fPixel. protected . color value of this cell ; Definition at line 26 of file TGColorSelect.h. Libraries for TGColorFrame:. [legend]; The documentation for this class was generated from the following files:; gui/gui/inc/TGColorSelect.h; gui/gui/src/TGColorSelect.cxx. TGColorFrame. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:42:56 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,doc/master/classTGColorFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorFrame.html
https://root.cern/doc/master/classTGColorFrame.html:1007,Modifiability,inherit,inherited,1007,"  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; Private Member Functions |; List of all members ; TGColorFrame Class ReferenceGUI » Low level GUI widgets. ; A small frame with border showing a specific color. ; Definition at line 22 of file TGColorSelect.h. Public Member Functions;  TGColorFrame (const TGWindow *p=nullptr, Pixel_t c=0, Int_t n=1);  TGColorFrame constructor. ;  ;  ~TGColorFrame () override;  ; void DrawBorder () override;  Draw TGColorFrame border. ;  ; Pixel_t GetColor () const;  ; Bool_t HandleButton (Event_t *event) override;  Handle button events in TGColorFrame. ;  ; TClass * IsA () const override;  ; void SetActive (Bool_t in);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGFrame;  TGFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=0, Pixel_t back=GetDefaultFrameBackground());  Create a TGFrame object. Options is an OR of the EFrameTypes. ;  ;  TGFrame (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a frame using an externally created window. ;  ;  ~TGFrame () override;  Destructor. ;  ; virtual void Activate (Bool_t);  ; void AddInput (UInt_t emask);  Add events specified in the emask to the events the frame should handle. ;  ; virtual void ChangeBackground (Pixel_t back);  Change frame background color. ;  ; virtual void ChangeOptions (UInt_t options);  Change frame options. Options is an OR of the EFrameTypes. ;  ; Bool_t Contains (Int_t x, Int_t y) const;  ; void Delete (Option_t *="""") override;  Delete this object. ;  ; virtual void DeleteWindow ();  Delete window. ;  ; void DrawClass () const override;  Draw class inheritance tree of the class to which this object belongs. ;  ; TObject * DrawClone (Option_t *="""") const overrid",MatchSource.WIKI,doc/master/classTGColorFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorFrame.html
https://root.cern/doc/master/classTGColorFrame.html:1931,Modifiability,inherit,inheritance,1931,"tual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGFrame;  TGFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=0, Pixel_t back=GetDefaultFrameBackground());  Create a TGFrame object. Options is an OR of the EFrameTypes. ;  ;  TGFrame (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a frame using an externally created window. ;  ;  ~TGFrame () override;  Destructor. ;  ; virtual void Activate (Bool_t);  ; void AddInput (UInt_t emask);  Add events specified in the emask to the events the frame should handle. ;  ; virtual void ChangeBackground (Pixel_t back);  Change frame background color. ;  ; virtual void ChangeOptions (UInt_t options);  Change frame options. Options is an OR of the EFrameTypes. ;  ; Bool_t Contains (Int_t x, Int_t y) const;  ; void Delete (Option_t *="""") override;  Delete this object. ;  ; virtual void DeleteWindow ();  Delete window. ;  ; void DrawClass () const override;  Draw class inheritance tree of the class to which this object belongs. ;  ; TObject * DrawClone (Option_t *="""") const override;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void DrawCopy (Handle_t, Int_t, Int_t);  ; void Dump () const override;  Dump contents of object on stdout. ;  ; virtual Pixel_t GetBackground () const;  ; Int_t GetBorderWidth () const;  ; virtual UInt_t GetDefaultHeight () const;  ; virtual TGDimension GetDefaultSize () const;  std::cout << fWidth << ""x"" << fHeight << std::endl; ;  ; virtual UInt_t GetDefaultWidth () const;  ; virtual TDNDData * GetDNDData (Atom_t);  ; virtual Int_t GetDragType () const;  Returns drag source type. ;  ; virtual Int_t GetDropType () const;  Returns drop target type. ;  ; UInt_t GetEventMask () const;  ; virtual Pixel_t GetForeground () const;  Return frame foreground color. ;  ; TGFrameElement * GetFrameElement () const;  ; virtual TGFrame * GetFrameFromPoint (Int_t x, Int_t y);  ; UInt_t G",MatchSource.WIKI,doc/master/classTGColorFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorFrame.html
https://root.cern/doc/master/classTGColorFrame.html:7344,Modifiability,inherit,inherited,7344,"  ; virtual void SetDragType (Int_t type);  SetDragType. ;  ; void SetDrawOption (Option_t *="""") override;  Set drawing option for object. ;  ; virtual void SetDropType (Int_t type);  SetDropType. ;  ; void SetEditable (Bool_t) override;  ; virtual void SetForegroundColor (Pixel_t);  ; void SetFrameElement (TGFrameElement *fe);  ; virtual void SetHeight (UInt_t h);  ; virtual void SetLayoutBroken (Bool_t=kTRUE);  ; virtual void SetMaxHeight (UInt_t h);  ; virtual void SetMaxWidth (UInt_t w);  ; virtual void SetMinHeight (UInt_t h);  ; virtual void SetMinWidth (UInt_t w);  ; virtual void SetSize (const TGDimension &s);  ; virtual void SetWidth (UInt_t w);  ; virtual void SetX (Int_t x);  ; virtual void SetY (Int_t y);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UnmapWindow () override;  unmap window ;  ;  Public Member Functions inherited from TGWindow;  TGWindow (const TGWindow *p=nullptr, Int_t x=0, Int_t y=0, UInt_t w=0, UInt_t h=0, UInt_t border=0, Int_t depth=0, UInt_t clss=0, void *visual=nullptr, SetWindowAttributes_t *attr=nullptr, UInt_t wtype=0);  Create a new window. ;  ;  TGWindow (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a copy of a window. ;  ;  ~TGWindow () override;  Window destructor. Unregisters the window. ;  ; virtual void DestroySubwindows ();  destroy sub windows ;  ; virtual void DestroyWindow ();  destroy window ;  ; virtual UInt_t GetEditDisabled () const;  ; virtual const TGWindow * GetMainFrame () const;  Returns top level main frame. ;  ; const char * GetName () const override;  Return unique name, used in SavePrimitive methods. ;  ; const TGWindow * GetParent () const;  ; virtual Bool_t HandleExpose (Event_t *event);  ; virtual Bool_t HandleIdleEvent (TGIdleHandler *);  ; Bool_t HandleTimer (TTimer *) override;  Execute action in response of a timer timing out. ;  ; virtual void IconifyWindow ();  iconify win",MatchSource.WIKI,doc/master/classTGColorFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorFrame.html
https://root.cern/doc/master/classTGColorFrame.html:9310,Modifiability,inherit,inherited,9310,"nse of a timer timing out. ;  ; virtual void IconifyWindow ();  iconify window ;  ; TClass * IsA () const override;  ; virtual Bool_t IsMapped ();  Returns kTRUE if window is mapped on screen, kFALSE otherwise. ;  ; virtual Bool_t IsMapSubwindows () const;  ; virtual void LowerWindow ();  lower window ;  ; virtual Int_t MustCleanup () const;  ; void Print (Option_t *option="""") const override;  Print window id. ;  ; virtual void RaiseWindow ();  raise window ;  ; virtual void RequestFocus ();  request focus ;  ; virtual void SetBackgroundPixmap (Pixmap_t pixmap);  set background pixmap ;  ; virtual void SetEditDisabled (UInt_t on=kEditDisable);  ; virtual void SetMapSubwindows (Bool_t);  ; virtual void SetName (const char *name);  ; virtual void SetWindowName (const char *name=nullptr);  Set window name. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGObject;  TGObject ();  ;  TGObject (const TGObject &tgo);  ;  ~TGObject () override;  TGObject destructor. ;  ; TGClient * GetClient () const;  ; Handle_t GetId () const;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsEqual (const TObject *obj) const override;  Equal comparison (TGObjects are equal if they have the same window identifier). ;  ; void SaveAs (const char *filename="""", Option_t *option="""") const override;  Write this TGObject to a file using TImage, if filename's extension signals a valid TImage::EImageFileType, as defined by TImage::GetImageFileTypeFromFilename(). ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you d",MatchSource.WIKI,doc/master/classTGColorFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorFrame.html
https://root.cern/doc/master/classTGColorFrame.html:10045,Modifiability,inherit,inherited,10045,"al void SetName (const char *name);  ; virtual void SetWindowName (const char *name=nullptr);  Set window name. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGObject;  TGObject ();  ;  TGObject (const TGObject &tgo);  ;  ~TGObject () override;  TGObject destructor. ;  ; TGClient * GetClient () const;  ; Handle_t GetId () const;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsEqual (const TObject *obj) const override;  Equal comparison (TGObjects are equal if they have the same window identifier). ;  ; void SaveAs (const char *filename="""", Option_t *option="""") const override;  Write this TGObject to a file using TImage, if filename's extension signals a valid TImage::EImageFileType, as defined by TImage::GetImageFileTypeFromFilename(). ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,doc/master/classTGColorFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorFrame.html
https://root.cern/doc/master/classTGColorFrame.html:13012,Modifiability,inherit,inherits,13012,"* FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handl",MatchSource.WIKI,doc/master/classTGColorFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorFrame.html
https://root.cern/doc/master/classTGColorFrame.html:13129,Modifiability,inherit,inherits,13129,"nst TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base implementation is no-op). ;  ; void Obsolete (const char *method, const char *asOfVe",MatchSource.WIKI,doc/master/classTGColorFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorFrame.html
https://root.cern/doc/master/classTGColorFrame.html:16247,Modifiability,inherit,inherited,16247,"f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from class cls and all its base-classes. ;  ; Bool_t Connect (const char *signal, const char *receiver_class, void *receiver, const char *slot);  Non-static method is used to connect from the signal of this object to the receiver slot. ;  ; virtual void Connected (const char *);  ; virtual void Destroyed ();  ; Bool_t Disconnect (const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal of this object from slot of receiver. ;  ; virtual void Disconnected (const char *);  ; void Emit (const char *signal);  Activate signal without args. ;  ; template<typename T > ; void Emit (const char *signal, const T &arg);  Activate signal with single paramet",MatchSource.WIKI,doc/master/classTGColorFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorFrame.html
https://root.cern/doc/master/classTGColorFrame.html:18409,Modifiability,inherit,inherited,18409,"* GetListOfClassSignals () const;  Returns pointer to list of signals of this class. ;  ; TList * GetListOfConnections () const;  ; TList * GetListOfSignals () const;  ; virtual Bool_t HasConnection (const char *signal_name) const;  Return true if there is any object connected to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetBckgndGC ();  Get background color graphics context. ;  ; static const TGGC & GetBlackGC ();  Get black graphics context. ;  ; static Pixel_t GetBlackPixel ();  Get black pixel value. ;  ; static Pixel_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get shadow color graphics context. ;  ; static const TGGC & GetWhiteGC ();  Get white graphics context. ;  ; static Pixel_t GetWhitePixel ();  Get white pixel value. ;  ;  Static Public Member Functions inherited from TGWindow; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Versio",MatchSource.WIKI,doc/master/classTGColorFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorFrame.html
https://root.cern/doc/master/classTGColorFrame.html:19295,Modifiability,inherit,inherited,19295,erited from TGFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetBckgndGC ();  Get background color graphics context. ;  ; static const TGGC & GetBlackGC ();  Get black graphics context. ;  ; static Pixel_t GetBlackPixel ();  Get black pixel value. ;  ; static Pixel_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get shadow color graphics context. ;  ; static const TGGC & GetWhiteGC ();  Get white graphics context. ;  ; static Pixel_t GetWhitePixel ();  Get white pixel value. ;  ;  Static Public Member Functions inherited from TGWindow; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetCounter ();  Return global window counter (total number of created windows). ;  ;  Static Public Member Functions inherited from TGObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true,MatchSource.WIKI,doc/master/classTGColorFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorFrame.html
https://root.cern/doc/master/classTGColorFrame.html:19605,Modifiability,inherit,inherited,19605,"_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get shadow color graphics context. ;  ; static const TGGC & GetWhiteGC ();  Get white graphics context. ;  ; static Pixel_t GetWhitePixel ();  Get white pixel value. ;  ;  Static Public Member Functions inherited from TGWindow; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetCounter ();  Return global window counter (total number of created windows). ;  ;  Static Public Member Functions inherited from TGObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This m",MatchSource.WIKI,doc/master/classTGColorFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorFrame.html
https://root.cern/doc/master/classTGColorFrame.html:19817,Modifiability,inherit,inherited,19817,"_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get shadow color graphics context. ;  ; static const TGGC & GetWhiteGC ();  Get white graphics context. ;  ; static Pixel_t GetWhitePixel ();  Get white pixel value. ;  ;  Static Public Member Functions inherited from TGWindow; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetCounter ();  Return global window counter (total number of created windows). ;  ;  Static Public Member Functions inherited from TGObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This m",MatchSource.WIKI,doc/master/classTGColorFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorFrame.html
https://root.cern/doc/master/classTGColorFrame.html:20335,Modifiability,inherit,inherited,20335," Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetCounter ();  Return global window counter (total number of created windows). ;  ;  Static Public Member Functions inherited from TGObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullpt",MatchSource.WIKI,doc/master/classTGColorFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorFrame.html
https://root.cern/doc/master/classTGColorFrame.html:21776,Modifiability,inherit,inherited,21776,"receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Protected Attributes; Bool_t fActive;  kTRUE if this color cell is active ;  ; Pixel_t fColor;  returned color value ;  ; GContext_t fGrayGC;  Shadow GC. ;  ; const TGWindow * fMsgWindow;  window handling container messages ;  ; Pixel_t fPixel;  color value of this cell ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fI",MatchSource.WIKI,doc/master/classTGColorFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorFrame.html
https://root.cern/doc/master/classTGColorFrame.html:22408,Modifiability,inherit,inherited,22408,"Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Protected Attributes; Bool_t fActive;  kTRUE if this color cell is active ;  ; Pixel_t fColor;  returned color value ;  ; GContext_t fGrayGC;  Shadow GC. ;  ; const TGWindow * fMsgWindow;  window handling container messages ;  ; Pixel_t fPixel;  color value of this cell ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions;  TGColorFrame (const TGColorFrame &)=delete;  ; TGColorFrame & operator= (const TGColorFrame &)=delete;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( ",MatchSource.WIKI,doc/master/classTGColorFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorFrame.html
https://root.cern/doc/master/classTGColorFrame.html:22685,Modifiability,inherit,inherited,22685,"ixel_t fPixel;  color value of this cell ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions;  TGColorFrame (const TGColorFrame &)=delete;  ; TGColorFrame & operator= (const TGColorFrame &)=delete;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inhe",MatchSource.WIKI,doc/master/classTGColorFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorFrame.html
https://root.cern/doc/master/classTGColorFrame.html:22837,Modifiability,inherit,inherited,22837,"DNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions;  TGColorFrame (const TGColorFrame &)=delete;  ; TGColorFrame & operator= (const TGColorFrame &)=delete;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0",MatchSource.WIKI,doc/master/classTGColorFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorFrame.html
https://root.cern/doc/master/classTGColorFrame.html:23198,Modifiability,inherit,inherited,23198,"otected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions;  TGColorFrame (const TGColorFrame &)=delete;  ; TGColorFrame & operator= (const TGColorFrame &)=delete;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindo",MatchSource.WIKI,doc/master/classTGColorFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorFrame.html
https://root.cern/doc/master/classTGColorFrame.html:23705,Modifiability,inherit,inherited,23705,"ay server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions;  TGColorFrame (const TGColorFrame &)=delete;  ; TGColorFrame & operator= (const TGColorFrame &)=delete;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString G",MatchSource.WIKI,doc/master/classTGColorFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorFrame.html
https://root.cern/doc/master/classTGColorFrame.html:24346,Modifiability,inherit,inherited,24346,"DisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void Mak",MatchSource.WIKI,doc/master/classTGColorFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorFrame.html
https://root.cern/doc/master/classTGColorFrame.html:24441,Modifiability,inherit,inherited,24441,"DisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void Mak",MatchSource.WIKI,doc/master/classTGColorFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorFrame.html
https://root.cern/doc/master/classTGColorFrame.html:24540,Modifiability,inherit,inherited,24540,"DisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void Mak",MatchSource.WIKI,doc/master/classTGColorFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorFrame.html
https://root.cern/doc/master/classTGColorFrame.html:25034,Modifiability,inherit,inherited,25034,"Pick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *",MatchSource.WIKI,doc/master/classTGColorFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorFrame.html
https://root.cern/doc/master/classTGColorFrame.html:25198,Modifiability,inherit,inherited,25198,"Pick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *",MatchSource.WIKI,doc/master/classTGColorFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorFrame.html
https://root.cern/doc/master/classTGColorFrame.html:25298,Modifiability,inherit,inherited,25298,"Pick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *",MatchSource.WIKI,doc/master/classTGColorFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorFrame.html
https://root.cern/doc/master/classTGColorFrame.html:25509,Modifiability,inherit,inherited,25509,") override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Stat",MatchSource.WIKI,doc/master/classTGColorFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorFrame.html
https://root.cern/doc/master/classTGColorFrame.html:25622,Modifiability,inherit,inherited,25622,") override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Stat",MatchSource.WIKI,doc/master/classTGColorFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorFrame.html
https://root.cern/doc/master/classTGColorFrame.html:25748,Modifiability,inherit,inherited,25748," const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; s",MatchSource.WIKI,doc/master/classTGColorFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorFrame.html
https://root.cern/doc/master/classTGColorFrame.html:26604,Modifiability,inherit,inherited,26604,"nst"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGColorSelect.h>. Inheritance diagram for TGColorFrame:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGColorFrame() [1/2]. TGColorFrame::TGColorFrame ; (; const TGColorFrame & ; ). privatedelete . ◆ TGColorFrame() [2/2]. TGColorFrame::TGColorFrame ; (; const TGWindow * ; p = nullptr, . Pixel_t ; color = 0, . Int_t ; n = 1 . ). TGColorFrame constructor. ; The TGColorFrame is a small frame with border showing a specific ",MatchSource.WIKI,doc/master/classTGColorFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorFrame.html
https://root.cern/doc/master/classTGColorFrame.html:27273,Modifiability,inherit,inherited,27273,"nst"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGColorSelect.h>. Inheritance diagram for TGColorFrame:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGColorFrame() [1/2]. TGColorFrame::TGColorFrame ; (; const TGColorFrame & ; ). privatedelete . ◆ TGColorFrame() [2/2]. TGColorFrame::TGColorFrame ; (; const TGWindow * ; p = nullptr, . Pixel_t ; color = 0, . Int_t ; n = 1 . ). TGColorFrame constructor. ; The TGColorFrame is a small frame with border showing a specific ",MatchSource.WIKI,doc/master/classTGColorFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorFrame.html
https://root.cern/doc/master/classTGColorFrame.html:27405,Modifiability,inherit,inherited,27405,"nst"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGColorSelect.h>. Inheritance diagram for TGColorFrame:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGColorFrame() [1/2]. TGColorFrame::TGColorFrame ; (; const TGColorFrame & ; ). privatedelete . ◆ TGColorFrame() [2/2]. TGColorFrame::TGColorFrame ; (; const TGWindow * ; p = nullptr, . Pixel_t ; color = 0, . Int_t ; n = 1 . ). TGColorFrame constructor. ; The TGColorFrame is a small frame with border showing a specific ",MatchSource.WIKI,doc/master/classTGColorFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorFrame.html
https://root.cern/doc/master/classTGColorFrame.html:9541,Security,hash,hash,9541,"pped on screen, kFALSE otherwise. ;  ; virtual Bool_t IsMapSubwindows () const;  ; virtual void LowerWindow ();  lower window ;  ; virtual Int_t MustCleanup () const;  ; void Print (Option_t *option="""") const override;  Print window id. ;  ; virtual void RaiseWindow ();  raise window ;  ; virtual void RequestFocus ();  request focus ;  ; virtual void SetBackgroundPixmap (Pixmap_t pixmap);  set background pixmap ;  ; virtual void SetEditDisabled (UInt_t on=kEditDisable);  ; virtual void SetMapSubwindows (Bool_t);  ; virtual void SetName (const char *name);  ; virtual void SetWindowName (const char *name=nullptr);  Set window name. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGObject;  TGObject ();  ;  TGObject (const TGObject &tgo);  ;  ~TGObject () override;  TGObject destructor. ;  ; TGClient * GetClient () const;  ; Handle_t GetId () const;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsEqual (const TObject *obj) const override;  Equal comparison (TGObjects are equal if they have the same window identifier). ;  ; void SaveAs (const char *filename="""", Option_t *option="""") const override;  Write this TGObject to a file using TImage, if filename's extension signals a valid TImage::EImageFileType, as defined by TImage::GetImageFileTypeFromFilename(). ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse ob",MatchSource.WIKI,doc/master/classTGColorFrame.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorFrame.html
https://root.cern/doc/master/classTGColorPalette.html:12074,Availability,error,error,12074,"="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTGColorPalette.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPalette.html
https://root.cern/doc/master/classTGColorPalette.html:12163,Availability,error,error,12163," object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual ",MatchSource.WIKI,doc/master/classTGColorPalette.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPalette.html
https://root.cern/doc/master/classTGColorPalette.html:12318,Availability,error,error,12318,"etup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the uniqu",MatchSource.WIKI,doc/master/classTGColorPalette.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPalette.html
https://root.cern/doc/master/classTGColorPalette.html:12615,Availability,error,error,12615,"ject using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t ",MatchSource.WIKI,doc/master/classTGColorPalette.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPalette.html
https://root.cern/doc/master/classTGColorPalette.html:16229,Availability,error,error,16229,"sz);  ; void * operator new (size_t sz, void *vp);  ; void * operator new[] (size_t sz);  ; void * operator new[] (size_t sz, void *vp);  ; TObject & operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Paint (Option_t *option="""");  This method must be overridden if a class wants to paint itself. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class s",MatchSource.WIKI,doc/master/classTGColorPalette.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPalette.html
https://root.cern/doc/master/classTGColorPalette.html:24990,Availability,mask,mask,24990,"GWidget &tgw);  ; Int_t SetFlags (Int_t flags);  . Protected Attributes; UInt_t fCh;  color cell height ;  ; Int_t fCols;  number of color cell columns ;  ; UInt_t fCw;  color cell width ;  ; Int_t fCx;  x coordinate of currently selected color cell ;  ; Int_t fCy;  y coordinate of currently selected color cell ;  ; TGGC fDrawGC;  graphics context used for drawing ;  ; Pixel_t * fPixels;  pixel value of colors ;  ; Int_t fRows;  number of color cell rows ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Protected Attributes inherited from TGWidget; TString fCommand;  command to be executed ;  ; const TGWindow * fMsgWindow;  window which handles widget events ;  ; Int_t fWidgetFlags;  widget status flags (OR of EWidgetStatus) ;  ; Int_t fWidgetId;  the widget id (used",MatchSource.WIKI,doc/master/classTGColorPalette.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPalette.html
https://root.cern/doc/master/classTGColorPalette.html:4059,Integrability,message,message,4059,"o which this object belongs. ;  ; TObject * DrawClone (Option_t *="""") const override;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void DrawCopy (Handle_t, Int_t, Int_t);  ; void Dump () const override;  Dump contents of object on stdout. ;  ; virtual Pixel_t GetBackground () const;  ; Int_t GetBorderWidth () const;  ; virtual UInt_t GetDefaultHeight () const;  ; virtual UInt_t GetDefaultWidth () const;  ; virtual TDNDData * GetDNDData (Atom_t);  ; virtual Int_t GetDragType () const;  Returns drag source type. ;  ; virtual Int_t GetDropType () const;  Returns drop target type. ;  ; UInt_t GetEventMask () const;  ; virtual Pixel_t GetForeground () const;  Return frame foreground color. ;  ; TGFrameElement * GetFrameElement () const;  ; virtual TGFrame * GetFrameFromPoint (Int_t x, Int_t y);  ; UInt_t GetHeight () const;  ; UInt_t GetMaxHeight () const;  ; UInt_t GetMaxWidth () const;  ; UInt_t GetMinHeight () const;  ; UInt_t GetMinWidth () const;  ; virtual UInt_t GetOptions () const;  ; TGDimension GetSize () const;  ; UInt_t GetWidth () const;  ; Int_t GetX () const;  ; Int_t GetY () const;  ; virtual Bool_t HandleClientMessage (Event_t *event);  Handle a client message. ;  ; virtual Bool_t HandleColormapChange (Event_t *);  ; virtual Bool_t HandleConfigureNotify (Event_t *event);  This event is generated when the frame is resized. ;  ; virtual Bool_t HandleCrossing (Event_t *);  ; virtual Bool_t HandleDNDDrop (TDNDData *);  ; virtual Atom_t HandleDNDEnter (Atom_t *);  ; virtual Bool_t HandleDNDFinished ();  ; virtual Bool_t HandleDNDLeave ();  ; virtual Atom_t HandleDNDPosition (Int_t, Int_t, Atom_t, Int_t, Int_t);  ; virtual Bool_t HandleDoubleClick (Event_t *);  ; virtual Bool_t HandleDragDrop (TGFrame *, Int_t, Int_t, TGLayoutHints *);  ; virtual Bool_t HandleDragEnter (TGFrame *);  ; virtual Bool_t HandleDragLeave (TGFrame *);  ; virtual Bool_t HandleDragMotion (TGFrame *);  ; Bool_t HandleEvent (Event",MatchSource.WIKI,doc/master/classTGColorPalette.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPalette.html
https://root.cern/doc/master/classTGColorPalette.html:6814,Integrability,message,message,6814,"ption_t *option="""") const override;  Print window id. ;  ; virtual void ProcessedConfigure (Event_t *event);  ; virtual void ProcessedEvent (Event_t *event);  ; virtual Bool_t ProcessMessage (Longptr_t, Longptr_t, Longptr_t);  ; virtual void ReallyDelete ();  ; void RemoveInput (UInt_t emask);  Remove events specified in emask from the events the frame should handle. ;  ; void ReparentWindow (const TGWindow *p, Int_t x=0, Int_t y=0) override;  Reparent window, make p the new parent and position the window at position (x,y) in new parent. ;  ; virtual void Resize (TGDimension size);  Resize the frame. ;  ; void Resize (UInt_t w=0, UInt_t h=0) override;  Resize the frame. ;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save a frame widget as a C++ statement(s) on output stream out. ;  ; void SaveUserColor (std::ostream &out, Option_t *);  Save a user color in a C++ macro file - used in SavePrimitive(). ;  ; virtual void SendMessage (const TGWindow *w, Longptr_t msg, Longptr_t parm1, Longptr_t parm2);  Send message (i.e. ;  ; void SetBackgroundColor (Pixel_t back) override;  Set background color (override from TGWindow base class). ;  ; virtual void SetCleanup (Int_t=kLocalCleanup);  ; void SetDNDSource (Bool_t onoff);  ; void SetDNDTarget (Bool_t onoff);  ; virtual void SetDragType (Int_t type);  SetDragType. ;  ; void SetDrawOption (Option_t *="""") override;  Set drawing option for object. ;  ; virtual void SetDropType (Int_t type);  SetDropType. ;  ; void SetEditable (Bool_t) override;  ; virtual void SetForegroundColor (Pixel_t);  ; void SetFrameElement (TGFrameElement *fe);  ; virtual void SetHeight (UInt_t h);  ; virtual void SetLayoutBroken (Bool_t=kTRUE);  ; virtual void SetMaxHeight (UInt_t h);  ; virtual void SetMaxWidth (UInt_t w);  ; virtual void SetMinHeight (UInt_t h);  ; virtual void SetMinWidth (UInt_t w);  ; virtual void SetSize (const TGDimension &s);  ; virtual void SetWidth (UInt_t w);  ; virtual void SetX (Int_t x);  ; vi",MatchSource.WIKI,doc/master/classTGColorPalette.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPalette.html
https://root.cern/doc/master/classTGColorPalette.html:12080,Integrability,message,message,12080,"="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTGColorPalette.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPalette.html
https://root.cern/doc/master/classTGColorPalette.html:12621,Integrability,message,message,12621,"ject using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t ",MatchSource.WIKI,doc/master/classTGColorPalette.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPalette.html
https://root.cern/doc/master/classTGColorPalette.html:13582,Integrability,message,message,13582,"t char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessar",MatchSource.WIKI,doc/master/classTGColorPalette.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPalette.html
https://root.cern/doc/master/classTGColorPalette.html:16235,Integrability,message,message,16235,"sz);  ; void * operator new (size_t sz, void *vp);  ; void * operator new[] (size_t sz);  ; void * operator new[] (size_t sz, void *vp);  ; TObject & operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Paint (Option_t *option="""");  This method must be overridden if a class wants to paint itself. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class s",MatchSource.WIKI,doc/master/classTGColorPalette.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPalette.html
https://root.cern/doc/master/classTGColorPalette.html:16608,Integrability,message,message,16608," pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from class cls and all its base-classes. ;  ; Bool_t Connect (const char *signal, const char *receiver_class, void *receiver, const char *slot);  Non-static method is used to connect from the signal of this object to the receiver slot. ;  ; virtual void Connected (const char *);  ; virtual void Destroyed ();  ; Bool_t Disconnect (const char *signal=nullptr, voi",MatchSource.WIKI,doc/master/classTGColorPalette.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPalette.html
https://root.cern/doc/master/classTGColorPalette.html:1810,Modifiability,inherit,inherited,1810,"etCurrentColor () const;  Return currently selected color value. ;  ; TGDimension GetDefaultSize () const override;  std::cout << fWidth << ""x"" << fHeight << std::endl; ;  ; Bool_t HandleButton (Event_t *event) override;  Handle button events in color palette. ;  ; Bool_t HandleKey (Event_t *event) override;  Handle keyboard events in color palette. ;  ; Bool_t HandleMotion (Event_t *event) override;  Handle mouse motion events in color palette. ;  ; TClass * IsA () const override;  ; void SetCellSize (Int_t w=20, Int_t h=17);  Set color cell size. ;  ; void SetColor (Int_t ix, Pixel_t color);  Set color at index ix of color entries. ;  ; void SetColors (Pixel_t colors[]);  Set color entries in color samples. ;  ; void SetCurrentCellColor (Pixel_t color);  Set current cell color. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGFrame;  TGFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=0, Pixel_t back=GetDefaultFrameBackground());  Create a TGFrame object. Options is an OR of the EFrameTypes. ;  ;  TGFrame (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a frame using an externally created window. ;  ;  ~TGFrame () override;  Destructor. ;  ; virtual void Activate (Bool_t);  ; void AddInput (UInt_t emask);  Add events specified in the emask to the events the frame should handle. ;  ; virtual void ChangeBackground (Pixel_t back);  Change frame background color. ;  ; virtual void ChangeOptions (UInt_t options);  Change frame options. Options is an OR of the EFrameTypes. ;  ; Bool_t Contains (Int_t x, Int_t y) const;  ; void Delete (Option_t *="""") override;  Delete this object. ;  ; virtual void DeleteWindow ();  Delete window. ;  ; virtual void DrawBorder ();  Draw frame border. ;  ; void DrawClass () const override;  Draw class inheritance tree of the class to which this object belongs. ;",MatchSource.WIKI,doc/master/classTGColorPalette.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPalette.html
https://root.cern/doc/master/classTGColorPalette.html:2787,Modifiability,inherit,inheritance,2787,"ic Member Functions inherited from TGFrame;  TGFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=0, Pixel_t back=GetDefaultFrameBackground());  Create a TGFrame object. Options is an OR of the EFrameTypes. ;  ;  TGFrame (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a frame using an externally created window. ;  ;  ~TGFrame () override;  Destructor. ;  ; virtual void Activate (Bool_t);  ; void AddInput (UInt_t emask);  Add events specified in the emask to the events the frame should handle. ;  ; virtual void ChangeBackground (Pixel_t back);  Change frame background color. ;  ; virtual void ChangeOptions (UInt_t options);  Change frame options. Options is an OR of the EFrameTypes. ;  ; Bool_t Contains (Int_t x, Int_t y) const;  ; void Delete (Option_t *="""") override;  Delete this object. ;  ; virtual void DeleteWindow ();  Delete window. ;  ; virtual void DrawBorder ();  Draw frame border. ;  ; void DrawClass () const override;  Draw class inheritance tree of the class to which this object belongs. ;  ; TObject * DrawClone (Option_t *="""") const override;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void DrawCopy (Handle_t, Int_t, Int_t);  ; void Dump () const override;  Dump contents of object on stdout. ;  ; virtual Pixel_t GetBackground () const;  ; Int_t GetBorderWidth () const;  ; virtual UInt_t GetDefaultHeight () const;  ; virtual UInt_t GetDefaultWidth () const;  ; virtual TDNDData * GetDNDData (Atom_t);  ; virtual Int_t GetDragType () const;  Returns drag source type. ;  ; virtual Int_t GetDropType () const;  Returns drop target type. ;  ; UInt_t GetEventMask () const;  ; virtual Pixel_t GetForeground () const;  Return frame foreground color. ;  ; TGFrameElement * GetFrameElement () const;  ; virtual TGFrame * GetFrameFromPoint (Int_t x, Int_t y);  ; UInt_t GetHeight () const;  ; UInt_t GetMaxHeight () const;  ; UInt_t GetMaxWidth () const;  ; UInt_t GetMinHei",MatchSource.WIKI,doc/master/classTGColorPalette.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPalette.html
https://root.cern/doc/master/classTGColorPalette.html:8012,Modifiability,inherit,inherited,8012,"  ; virtual void SetDragType (Int_t type);  SetDragType. ;  ; void SetDrawOption (Option_t *="""") override;  Set drawing option for object. ;  ; virtual void SetDropType (Int_t type);  SetDropType. ;  ; void SetEditable (Bool_t) override;  ; virtual void SetForegroundColor (Pixel_t);  ; void SetFrameElement (TGFrameElement *fe);  ; virtual void SetHeight (UInt_t h);  ; virtual void SetLayoutBroken (Bool_t=kTRUE);  ; virtual void SetMaxHeight (UInt_t h);  ; virtual void SetMaxWidth (UInt_t w);  ; virtual void SetMinHeight (UInt_t h);  ; virtual void SetMinWidth (UInt_t w);  ; virtual void SetSize (const TGDimension &s);  ; virtual void SetWidth (UInt_t w);  ; virtual void SetX (Int_t x);  ; virtual void SetY (Int_t y);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UnmapWindow () override;  unmap window ;  ;  Public Member Functions inherited from TGWindow;  TGWindow (const TGWindow *p=nullptr, Int_t x=0, Int_t y=0, UInt_t w=0, UInt_t h=0, UInt_t border=0, Int_t depth=0, UInt_t clss=0, void *visual=nullptr, SetWindowAttributes_t *attr=nullptr, UInt_t wtype=0);  Create a new window. ;  ;  TGWindow (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a copy of a window. ;  ;  ~TGWindow () override;  Window destructor. Unregisters the window. ;  ; virtual void DestroySubwindows ();  destroy sub windows ;  ; virtual void DestroyWindow ();  destroy window ;  ; virtual UInt_t GetEditDisabled () const;  ; virtual const TGWindow * GetMainFrame () const;  Returns top level main frame. ;  ; const char * GetName () const override;  Return unique name, used in SavePrimitive methods. ;  ; const TGWindow * GetParent () const;  ; virtual Bool_t HandleExpose (Event_t *event);  ; virtual Bool_t HandleIdleEvent (TGIdleHandler *);  ; Bool_t HandleTimer (TTimer *) override;  Execute action in response of a timer timing out. ;  ; virtual void IconifyWindow ();  iconify win",MatchSource.WIKI,doc/master/classTGColorPalette.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPalette.html
https://root.cern/doc/master/classTGColorPalette.html:9978,Modifiability,inherit,inherited,9978,"nse of a timer timing out. ;  ; virtual void IconifyWindow ();  iconify window ;  ; TClass * IsA () const override;  ; virtual Bool_t IsMapped ();  Returns kTRUE if window is mapped on screen, kFALSE otherwise. ;  ; virtual Bool_t IsMapSubwindows () const;  ; virtual void LowerWindow ();  lower window ;  ; virtual Int_t MustCleanup () const;  ; void Print (Option_t *option="""") const override;  Print window id. ;  ; virtual void RaiseWindow ();  raise window ;  ; virtual void RequestFocus ();  request focus ;  ; virtual void SetBackgroundPixmap (Pixmap_t pixmap);  set background pixmap ;  ; virtual void SetEditDisabled (UInt_t on=kEditDisable);  ; virtual void SetMapSubwindows (Bool_t);  ; virtual void SetName (const char *name);  ; virtual void SetWindowName (const char *name=nullptr);  Set window name. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGObject;  TGObject ();  ;  TGObject (const TGObject &tgo);  ;  ~TGObject () override;  TGObject destructor. ;  ; TGClient * GetClient () const;  ; Handle_t GetId () const;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsEqual (const TObject *obj) const override;  Equal comparison (TGObjects are equal if they have the same window identifier). ;  ; void SaveAs (const char *filename="""", Option_t *option="""") const override;  Write this TGObject to a file using TImage, if filename's extension signals a valid TImage::EImageFileType, as defined by TImage::GetImageFileTypeFromFilename(). ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you d",MatchSource.WIKI,doc/master/classTGColorPalette.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPalette.html
https://root.cern/doc/master/classTGColorPalette.html:10713,Modifiability,inherit,inherited,10713,"al void SetName (const char *name);  ; virtual void SetWindowName (const char *name=nullptr);  Set window name. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGObject;  TGObject ();  ;  TGObject (const TGObject &tgo);  ;  ~TGObject () override;  TGObject destructor. ;  ; TGClient * GetClient () const;  ; Handle_t GetId () const;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsEqual (const TObject *obj) const override;  Equal comparison (TGObjects are equal if they have the same window identifier). ;  ; void SaveAs (const char *filename="""", Option_t *option="""") const override;  Write this TGObject to a file using TImage, if filename's extension signals a valid TImage::EImageFileType, as defined by TImage::GetImageFileTypeFromFilename(). ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,doc/master/classTGColorPalette.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPalette.html
https://root.cern/doc/master/classTGColorPalette.html:13680,Modifiability,inherit,inherits,13680,"* FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handl",MatchSource.WIKI,doc/master/classTGColorPalette.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPalette.html
https://root.cern/doc/master/classTGColorPalette.html:13797,Modifiability,inherit,inherits,13797,"nst TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base implementation is no-op). ;  ; void Obsolete (const char *method, const char *asOfVe",MatchSource.WIKI,doc/master/classTGColorPalette.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPalette.html
https://root.cern/doc/master/classTGColorPalette.html:16915,Modifiability,inherit,inherited,16915,"f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from class cls and all its base-classes. ;  ; Bool_t Connect (const char *signal, const char *receiver_class, void *receiver, const char *slot);  Non-static method is used to connect from the signal of this object to the receiver slot. ;  ; virtual void Connected (const char *);  ; virtual void Destroyed ();  ; Bool_t Disconnect (const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal of this object from slot of receiver. ;  ; virtual void Disconnected (const char *);  ; void Emit (const char *signal);  Activate signal without args. ;  ; template<typename T > ; void Emit (const char *signal, const T &arg);  Activate signal with single paramet",MatchSource.WIKI,doc/master/classTGColorPalette.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPalette.html
https://root.cern/doc/master/classTGColorPalette.html:18883,Modifiability,inherit,inherited,18883,"a signal with a varying number of arguments. ;  ; TList * GetListOfClassSignals () const;  Returns pointer to list of signals of this class. ;  ; TList * GetListOfConnections () const;  ; TList * GetListOfSignals () const;  ; virtual Bool_t HasConnection (const char *signal_name) const;  Return true if there is any object connected to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGWidget;  TGWidget ();  ;  TGWidget (Int_t id);  ; virtual ~TGWidget ();  ; virtual void Associate (const TGWindow *w);  ; const char * GetCommand () const;  ; Bool_t HasFocus () const;  ; Bool_t IsEnabled () const;  ; virtual void SetCommand (const char *command);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Bool_t WantFocus () const;  ; Int_t WidgetId () const;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetBckgndGC ();  Get background color graphics context. ;  ; static const TGGC & GetBlackGC ();  Get black graphics context. ;  ; static Pixel_t GetBlackPixel ();  Get black pixel value. ;  ; static Pixel_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get defa",MatchSource.WIKI,doc/master/classTGColorPalette.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPalette.html
https://root.cern/doc/master/classTGColorPalette.html:19510,Modifiability,inherit,inherited,19510,"me, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGWidget;  TGWidget ();  ;  TGWidget (Int_t id);  ; virtual ~TGWidget ();  ; virtual void Associate (const TGWindow *w);  ; const char * GetCommand () const;  ; Bool_t HasFocus () const;  ; Bool_t IsEnabled () const;  ; virtual void SetCommand (const char *command);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Bool_t WantFocus () const;  ; Int_t WidgetId () const;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetBckgndGC ();  Get background color graphics context. ;  ; static const TGGC & GetBlackGC ();  Get black graphics context. ;  ; static Pixel_t GetBlackPixel ();  Get black pixel value. ;  ; static Pixel_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get shadow color graphics context. ;  ; static const TGGC & GetWhiteGC ();  Get white graphics context. ;  ; static Pixel_t GetWhitePixel ();  Get white pixel value. ;  ;  Static Public Member Functions inherited from TGWindow; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Versio",MatchSource.WIKI,doc/master/classTGColorPalette.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPalette.html
https://root.cern/doc/master/classTGColorPalette.html:20396,Modifiability,inherit,inherited,20396,erited from TGFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetBckgndGC ();  Get background color graphics context. ;  ; static const TGGC & GetBlackGC ();  Get black graphics context. ;  ; static Pixel_t GetBlackPixel ();  Get black pixel value. ;  ; static Pixel_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get shadow color graphics context. ;  ; static const TGGC & GetWhiteGC ();  Get white graphics context. ;  ; static Pixel_t GetWhitePixel ();  Get white pixel value. ;  ;  Static Public Member Functions inherited from TGWindow; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetCounter ();  Return global window counter (total number of created windows). ;  ;  Static Public Member Functions inherited from TGObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true,MatchSource.WIKI,doc/master/classTGColorPalette.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPalette.html
https://root.cern/doc/master/classTGColorPalette.html:20706,Modifiability,inherit,inherited,20706,"_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get shadow color graphics context. ;  ; static const TGGC & GetWhiteGC ();  Get white graphics context. ;  ; static Pixel_t GetWhitePixel ();  Get white pixel value. ;  ;  Static Public Member Functions inherited from TGWindow; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetCounter ();  Return global window counter (total number of created windows). ;  ;  Static Public Member Functions inherited from TGObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This m",MatchSource.WIKI,doc/master/classTGColorPalette.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPalette.html
https://root.cern/doc/master/classTGColorPalette.html:20918,Modifiability,inherit,inherited,20918,"_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get shadow color graphics context. ;  ; static const TGGC & GetWhiteGC ();  Get white graphics context. ;  ; static Pixel_t GetWhitePixel ();  Get white pixel value. ;  ;  Static Public Member Functions inherited from TGWindow; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetCounter ();  Return global window counter (total number of created windows). ;  ;  Static Public Member Functions inherited from TGObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This m",MatchSource.WIKI,doc/master/classTGColorPalette.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPalette.html
https://root.cern/doc/master/classTGColorPalette.html:21436,Modifiability,inherit,inherited,21436," Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetCounter ();  Return global window counter (total number of created windows). ;  ;  Static Public Member Functions inherited from TGObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullpt",MatchSource.WIKI,doc/master/classTGColorPalette.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPalette.html
https://root.cern/doc/master/classTGColorPalette.html:22611,Modifiability,inherit,inherited,22611," ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Static Public Member Functions inherited from TGWidget; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; void DoRedraw () override;  Redraw color palette. ;  ; void DrawFocusHilite (Int_t onoff);  Draw a highlight rectangle around cell obtaining focus. ;  ; virtual void GotFocus ();  Add keyboard input. ;  ; virtual void LostFocus ();  Remove keyboard input. ;  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t",MatchSource.WIKI,doc/master/classTGColorPalette.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPalette.html
https://root.cern/doc/master/classTGColorPalette.html:23108,Modifiability,inherit,inherited,23108,"t);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Static Public Member Functions inherited from TGWidget; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; void DoRedraw () override;  Redraw color palette. ;  ; void DrawFocusHilite (Int_t onoff);  Draw a highlight rectangle around cell obtaining focus. ;  ; virtual void GotFocus ();  Add keyboard input. ;  ; virtual void LostFocus ();  Remove keyboard input. ;  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * Get",MatchSource.WIKI,doc/master/classTGColorPalette.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPalette.html
https://root.cern/doc/master/classTGColorPalette.html:23602,Modifiability,inherit,inherited,23602,"tected Member Functions; void DoRedraw () override;  Redraw color palette. ;  ; void DrawFocusHilite (Int_t onoff);  Draw a highlight rectangle around cell obtaining focus. ;  ; virtual void GotFocus ();  Add keyboard input. ;  ; virtual void LostFocus ();  Remove keyboard input. ;  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Protected Member Functions inherited from TGWidget;  TGWidget (const TGWidget &tgw);  ; Int_t ClearFlags (Int_t flags);  ; TGWidget & operator= (const TGWidget &tgw);  ; Int_t SetFlags (Int_t flags);  . Protected Attributes; UInt_t fCh;  color cell height ;  ; Int_t fCols;  number of color cell columns ;  ; UInt_t fCw;  color cell width ;  ; Int_t fCx;  x coordinate of currently selected color cell ;  ; Int_t fCy;  y coordinate of currently selected color cell ;  ; TGGC fDrawGC;  graphics context used for drawing ;  ; Pixel_t * fPixels;  pixel value of colors ;  ; Int_t fRows;  number of color cell rows ;  ;  Protected Attributes ",MatchSource.WIKI,doc/master/classTGColorPalette.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPalette.html
https://root.cern/doc/master/classTGColorPalette.html:23766,Modifiability,inherit,inherited,23766,"tected Member Functions; void DoRedraw () override;  Redraw color palette. ;  ; void DrawFocusHilite (Int_t onoff);  Draw a highlight rectangle around cell obtaining focus. ;  ; virtual void GotFocus ();  Add keyboard input. ;  ; virtual void LostFocus ();  Remove keyboard input. ;  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Protected Member Functions inherited from TGWidget;  TGWidget (const TGWidget &tgw);  ; Int_t ClearFlags (Int_t flags);  ; TGWidget & operator= (const TGWidget &tgw);  ; Int_t SetFlags (Int_t flags);  . Protected Attributes; UInt_t fCh;  color cell height ;  ; Int_t fCols;  number of color cell columns ;  ; UInt_t fCw;  color cell width ;  ; Int_t fCx;  x coordinate of currently selected color cell ;  ; Int_t fCy;  y coordinate of currently selected color cell ;  ; TGGC fDrawGC;  graphics context used for drawing ;  ; Pixel_t * fPixels;  pixel value of colors ;  ; Int_t fRows;  number of color cell rows ;  ;  Protected Attributes ",MatchSource.WIKI,doc/master/classTGColorPalette.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPalette.html
https://root.cern/doc/master/classTGColorPalette.html:23866,Modifiability,inherit,inherited,23866,"tected Member Functions; void DoRedraw () override;  Redraw color palette. ;  ; void DrawFocusHilite (Int_t onoff);  Draw a highlight rectangle around cell obtaining focus. ;  ; virtual void GotFocus ();  Add keyboard input. ;  ; virtual void LostFocus ();  Remove keyboard input. ;  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Protected Member Functions inherited from TGWidget;  TGWidget (const TGWidget &tgw);  ; Int_t ClearFlags (Int_t flags);  ; TGWidget & operator= (const TGWidget &tgw);  ; Int_t SetFlags (Int_t flags);  . Protected Attributes; UInt_t fCh;  color cell height ;  ; Int_t fCols;  number of color cell columns ;  ; UInt_t fCw;  color cell width ;  ; Int_t fCx;  x coordinate of currently selected color cell ;  ; Int_t fCy;  y coordinate of currently selected color cell ;  ; TGGC fDrawGC;  graphics context used for drawing ;  ; Pixel_t * fPixels;  pixel value of colors ;  ; Int_t fRows;  number of color cell rows ;  ;  Protected Attributes ",MatchSource.WIKI,doc/master/classTGColorPalette.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPalette.html
https://root.cern/doc/master/classTGColorPalette.html:24077,Modifiability,inherit,inherited,24077,"l void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Protected Member Functions inherited from TGWidget;  TGWidget (const TGWidget &tgw);  ; Int_t ClearFlags (Int_t flags);  ; TGWidget & operator= (const TGWidget &tgw);  ; Int_t SetFlags (Int_t flags);  . Protected Attributes; UInt_t fCh;  color cell height ;  ; Int_t fCols;  number of color cell columns ;  ; UInt_t fCw;  color cell width ;  ; Int_t fCx;  x coordinate of currently selected color cell ;  ; Int_t fCy;  y coordinate of currently selected color cell ;  ; TGGC fDrawGC;  graphics context used for drawing ;  ; Pixel_t * fPixels;  pixel value of colors ;  ; Int_t fRows;  number of color cell rows ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMin",MatchSource.WIKI,doc/master/classTGColorPalette.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPalette.html
https://root.cern/doc/master/classTGColorPalette.html:24183,Modifiability,inherit,inherited,24183,"l void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Protected Member Functions inherited from TGWidget;  TGWidget (const TGWidget &tgw);  ; Int_t ClearFlags (Int_t flags);  ; TGWidget & operator= (const TGWidget &tgw);  ; Int_t SetFlags (Int_t flags);  . Protected Attributes; UInt_t fCh;  color cell height ;  ; Int_t fCols;  number of color cell columns ;  ; UInt_t fCw;  color cell width ;  ; Int_t fCx;  x coordinate of currently selected color cell ;  ; Int_t fCy;  y coordinate of currently selected color cell ;  ; TGGC fDrawGC;  graphics context used for drawing ;  ; Pixel_t * fPixels;  pixel value of colors ;  ; Int_t fRows;  number of color cell rows ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMin",MatchSource.WIKI,doc/master/classTGColorPalette.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPalette.html
https://root.cern/doc/master/classTGColorPalette.html:24794,Modifiability,inherit,inherited,24794,"dow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Protected Member Functions inherited from TGWidget;  TGWidget (const TGWidget &tgw);  ; Int_t ClearFlags (Int_t flags);  ; TGWidget & operator= (const TGWidget &tgw);  ; Int_t SetFlags (Int_t flags);  . Protected Attributes; UInt_t fCh;  color cell height ;  ; Int_t fCols;  number of color cell columns ;  ; UInt_t fCw;  color cell width ;  ; Int_t fCx;  x coordinate of currently selected color cell ;  ; Int_t fCy;  y coordinate of currently selected color cell ;  ; TGGC fDrawGC;  graphics context used for drawing ;  ; Pixel_t * fPixels;  pixel value of colors ;  ; Int_t fRows;  number of color cell rows ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow *",MatchSource.WIKI,doc/master/classTGColorPalette.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPalette.html
https://root.cern/doc/master/classTGColorPalette.html:25426,Modifiability,inherit,inherited,25426,"GWidget &tgw);  ; Int_t SetFlags (Int_t flags);  . Protected Attributes; UInt_t fCh;  color cell height ;  ; Int_t fCols;  number of color cell columns ;  ; UInt_t fCw;  color cell width ;  ; Int_t fCx;  x coordinate of currently selected color cell ;  ; Int_t fCy;  y coordinate of currently selected color cell ;  ; TGGC fDrawGC;  graphics context used for drawing ;  ; Pixel_t * fPixels;  pixel value of colors ;  ; Int_t fRows;  number of color cell rows ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Protected Attributes inherited from TGWidget; TString fCommand;  command to be executed ;  ; const TGWindow * fMsgWindow;  window which handles widget events ;  ; Int_t fWidgetFlags;  widget status flags (OR of EWidgetStatus) ;  ; Int_t fWidgetId;  the widget id (used",MatchSource.WIKI,doc/master/classTGColorPalette.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPalette.html
https://root.cern/doc/master/classTGColorPalette.html:25703,Modifiability,inherit,inherited,25703," Int_t fRows;  number of color cell rows ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Protected Attributes inherited from TGWidget; TString fCommand;  command to be executed ;  ; const TGWindow * fMsgWindow;  window which handles widget events ;  ; Int_t fWidgetFlags;  widget status flags (OR of EWidgetStatus) ;  ; Int_t fWidgetId;  the widget id (used for event processing) ;  . Private Member Functions;  TGColorPalette (const TGColorPalette &)=delete;  ; TGColorPalette & operator= (const TGColorPalette &)=delete;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1U",MatchSource.WIKI,doc/master/classTGColorPalette.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPalette.html
https://root.cern/doc/master/classTGColorPalette.html:25855,Modifiability,inherit,inherited,25855,"t ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Protected Attributes inherited from TGWidget; TString fCommand;  command to be executed ;  ; const TGWindow * fMsgWindow;  window which handles widget events ;  ; Int_t fWidgetFlags;  widget status flags (OR of EWidgetStatus) ;  ; Int_t fWidgetId;  the widget id (used for event processing) ;  . Private Member Functions;  TGColorPalette (const TGColorPalette &)=delete;  ; TGColorPalette & operator= (const TGColorPalette &)=delete;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x010",MatchSource.WIKI,doc/master/classTGColorPalette.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPalette.html
https://root.cern/doc/master/classTGColorPalette.html:26061,Modifiability,inherit,inherited,26061,"t ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Protected Attributes inherited from TGWidget; TString fCommand;  command to be executed ;  ; const TGWindow * fMsgWindow;  window which handles widget events ;  ; Int_t fWidgetFlags;  widget status flags (OR of EWidgetStatus) ;  ; Int_t fWidgetId;  the widget id (used for event processing) ;  . Private Member Functions;  TGColorPalette (const TGColorPalette &)=delete;  ; TGColorPalette & operator= (const TGColorPalette &)=delete;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x010",MatchSource.WIKI,doc/master/classTGColorPalette.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPalette.html
https://root.cern/doc/master/classTGColorPalette.html:26521,Modifiability,inherit,inherited,26521," from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Protected Attributes inherited from TGWidget; TString fCommand;  command to be executed ;  ; const TGWindow * fMsgWindow;  window which handles widget events ;  ; Int_t fWidgetFlags;  widget status flags (OR of EWidgetStatus) ;  ; Int_t fWidgetId;  the widget id (used for event processing) ;  . Private Member Functions;  TGColorPalette (const TGColorPalette &)=delete;  ; TGColorPalette & operator= (const TGColorPalette &)=delete;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindo",MatchSource.WIKI,doc/master/classTGColorPalette.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPalette.html
https://root.cern/doc/master/classTGColorPalette.html:27028,Modifiability,inherit,inherited,27028,"om TGWidget; TString fCommand;  command to be executed ;  ; const TGWindow * fMsgWindow;  window which handles widget events ;  ; Int_t fWidgetFlags;  widget status flags (OR of EWidgetStatus) ;  ; Int_t fWidgetId;  the widget id (used for event processing) ;  . Private Member Functions;  TGColorPalette (const TGColorPalette &)=delete;  ; TGColorPalette & operator= (const TGColorPalette &)=delete;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TCla",MatchSource.WIKI,doc/master/classTGColorPalette.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPalette.html
https://root.cern/doc/master/classTGColorPalette.html:27669,Modifiability,inherit,inherited,27669,"t = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sen",MatchSource.WIKI,doc/master/classTGColorPalette.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPalette.html
https://root.cern/doc/master/classTGColorPalette.html:27764,Modifiability,inherit,inherited,27764,"t = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sen",MatchSource.WIKI,doc/master/classTGColorPalette.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPalette.html
https://root.cern/doc/master/classTGColorPalette.html:27870,Modifiability,inherit,inherited,27870,"t = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sen",MatchSource.WIKI,doc/master/classTGColorPalette.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPalette.html
https://root.cern/doc/master/classTGColorPalette.html:27996,Modifiability,inherit,inherited,27996,"; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; s",MatchSource.WIKI,doc/master/classTGColorPalette.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPalette.html
https://root.cern/doc/master/classTGColorPalette.html:28852,Modifiability,inherit,inherited,28852,"nst"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGColorDialog.h>. Inheritance diagram for TGColorPalette:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGColorPalette() [1/2]. TGColorPalette::TGColorPalette ; (; const TGColorPalette & ; ). privatedelete . ◆ TGColorPalette() [2/2]. TGColorPalette::TGColorPalette ; (; const TGWindow * ; p = nullptr, . Int_t ; cols = 8, . Int_t ; rows = 8, . Int_t ; id = -1 . ). TGColorPalette widget: this is just a grid of color cells ",MatchSource.WIKI,doc/master/classTGColorPalette.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPalette.html
https://root.cern/doc/master/classTGColorPalette.html:29521,Modifiability,inherit,inherited,29521,"nst"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGColorDialog.h>. Inheritance diagram for TGColorPalette:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGColorPalette() [1/2]. TGColorPalette::TGColorPalette ; (; const TGColorPalette & ; ). privatedelete . ◆ TGColorPalette() [2/2]. TGColorPalette::TGColorPalette ; (; const TGWindow * ; p = nullptr, . Int_t ; cols = 8, . Int_t ; rows = 8, . Int_t ; id = -1 . ). TGColorPalette widget: this is just a grid of color cells ",MatchSource.WIKI,doc/master/classTGColorPalette.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPalette.html
https://root.cern/doc/master/classTGColorPalette.html:29653,Modifiability,inherit,inherited,29653,"nst"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGColorDialog.h>. Inheritance diagram for TGColorPalette:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGColorPalette() [1/2]. TGColorPalette::TGColorPalette ; (; const TGColorPalette & ; ). privatedelete . ◆ TGColorPalette() [2/2]. TGColorPalette::TGColorPalette ; (; const TGWindow * ; p = nullptr, . Int_t ; cols = 8, . Int_t ; rows = 8, . Int_t ; id = -1 . ). TGColorPalette widget: this is just a grid of color cells ",MatchSource.WIKI,doc/master/classTGColorPalette.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPalette.html
https://root.cern/doc/master/classTGColorPalette.html:10209,Security,hash,hash,10209,"pped on screen, kFALSE otherwise. ;  ; virtual Bool_t IsMapSubwindows () const;  ; virtual void LowerWindow ();  lower window ;  ; virtual Int_t MustCleanup () const;  ; void Print (Option_t *option="""") const override;  Print window id. ;  ; virtual void RaiseWindow ();  raise window ;  ; virtual void RequestFocus ();  request focus ;  ; virtual void SetBackgroundPixmap (Pixmap_t pixmap);  set background pixmap ;  ; virtual void SetEditDisabled (UInt_t on=kEditDisable);  ; virtual void SetMapSubwindows (Bool_t);  ; virtual void SetName (const char *name);  ; virtual void SetWindowName (const char *name=nullptr);  Set window name. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGObject;  TGObject ();  ;  TGObject (const TGObject &tgo);  ;  ~TGObject () override;  TGObject destructor. ;  ; TGClient * GetClient () const;  ; Handle_t GetId () const;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsEqual (const TObject *obj) const override;  Equal comparison (TGObjects are equal if they have the same window identifier). ;  ; void SaveAs (const char *filename="""", Option_t *option="""") const override;  Write this TGObject to a file using TImage, if filename's extension signals a valid TImage::EImageFileType, as defined by TImage::GetImageFileTypeFromFilename(). ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse ob",MatchSource.WIKI,doc/master/classTGColorPalette.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPalette.html
https://root.cern/doc/master/classTGColorPick.html:11964,Availability,error,error,11964,"="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTGColorPick.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPick.html
https://root.cern/doc/master/classTGColorPick.html:12053,Availability,error,error,12053," object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual ",MatchSource.WIKI,doc/master/classTGColorPick.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPick.html
https://root.cern/doc/master/classTGColorPick.html:12208,Availability,error,error,12208,"etup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the uniqu",MatchSource.WIKI,doc/master/classTGColorPick.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPick.html
https://root.cern/doc/master/classTGColorPick.html:12505,Availability,error,error,12505,"ject using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t ",MatchSource.WIKI,doc/master/classTGColorPick.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPick.html
https://root.cern/doc/master/classTGColorPick.html:16119,Availability,error,error,16119,"sz);  ; void * operator new (size_t sz, void *vp);  ; void * operator new[] (size_t sz);  ; void * operator new[] (size_t sz, void *vp);  ; TObject & operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Paint (Option_t *option="""");  This method must be overridden if a class wants to paint itself. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class s",MatchSource.WIKI,doc/master/classTGColorPick.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPick.html
https://root.cern/doc/master/classTGColorPick.html:25777,Availability,mask,mask,25777,"_t fCurrentColor;  currently selected color value ;  ; TGGC fCursorGC;  color lightness slider cursor GC ;  ; Int_t fCx;  x position in hs colormap ;  ; Int_t fCy;  y position in hs colormap ;  ; Int_t fCz;  position in lightness slider ;  ; Pixmap_t fHSimage;  hue / saturation colormap pixmap ;  ; Pixmap_t fLimage;  color lightness slider pixmap ;  ; Int_t fNColors;  number of color samples ;  ; Rectangle_t fSliderRect;  color lightness slider rectangle ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Protected Attributes inherited from TGWidget; TString fCommand;  command to be executed ;  ; const TGWindow * fMsgWindow;  window which handles widget events ;  ; Int_t fWidgetFlags;  widget status flags (OR of EWidgetStatus) ;  ; Int_t fWidgetId;  the widget id (used",MatchSource.WIKI,doc/master/classTGColorPick.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPick.html
https://root.cern/doc/master/classTGColorPick.html:32313,Availability,error,error,32313,"void TGColorPick::AllocColors ; (; ). protected . Try to allocate first a palette of 64 colors. ; Used by the dithered version of the color maps. ; Definition at line 541 of file TGColorDialog.cxx. ◆ Class(). static TClass * TGColorPick::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TGColorPick::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TGColorPick::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 131 of file TGColorDialog.h. ◆ ColorSelected(). virtual void TGColorPick::ColorSelected ; (; Pixel_t ; col = 0). inlinevirtual . Definition at line 128 of file TGColorDialog.h. ◆ CreateDitheredImage(). void TGColorPick::CreateDitheredImage ; (; Pixmap_t ; image, . Int_t ; which . ). protected . Create a dithered version of the color map and lightness images for display modes with reduced number of colors. ; The Floyd-Steinberg error diffusion dithering algorithm is used. This routine is called in PseudoColor modes only. ; Definition at line 642 of file TGColorDialog.cxx. ◆ CreateImages(). void TGColorPick::CreateImages ; (; ). protected . Create colormap and color slider images. ; Definition at line 525 of file TGColorDialog.cxx. ◆ DeclFileName(). static const char * TGColorPick::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 131 of file TGColorDialog.h. ◆ DoRedraw(). void TGColorPick::DoRedraw ; (; ). overrideprotectedvirtual . Redraw the color pick widget. ; Reimplemented from TGWindow.; Definition at line 913 of file TGColorDialog.cxx. ◆ DrawHScursor(). void TGColorPick::DrawHScursor ; (; Int_t ; onoff). protected . Draw hue / saturation cursor. ; Definition at line 988 of file TGColorDialog.cxx. ◆ DrawLcursor(). void TGColorPick::DrawLcursor ; (; Int_t ; onoff). protected . Draw lightness slider cursor. ; Definition at line 1033 of file TGColorDialo",MatchSource.WIKI,doc/master/classTGColorPick.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPick.html
https://root.cern/doc/master/classTGColorPick.html:22738,Energy Efficiency,allocate,allocate,22738,"gnal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Static Public Member Functions inherited from TGWidget; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; void AllocColors ();  Try to allocate first a palette of 64 colors. ;  ; void CreateDitheredImage (Pixmap_t image, Int_t which);  Create a dithered version of the color map and lightness images for display modes with reduced number of colors. ;  ; void CreateImages ();  Create colormap and color slider images. ;  ; void DoRedraw () override;  Redraw the color pick widget. ;  ; void DrawHScursor (Int_t onoff);  Draw hue / saturation cursor. ;  ; void DrawLcursor (Int_t onoff);  Draw lightness slider cursor. ;  ; void FreeColors ();  Free allocated colors. ;  ; void InitImages ();  Initialize color palette and slider images. ;  ; void SetHScursor (Int_t x, Int_t y);  Set hue / saturation cursor position. ;  ; void SetLcursor (Int_t z);  Set lightness slider cursor position. ;  ; void SetSliderColor ();  Set slider colors. ;  ; void UpdateCurrentColor ();  Assign the current cursor position as currently selected color. ;  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redr",MatchSource.WIKI,doc/master/classTGColorPick.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPick.html
https://root.cern/doc/master/classTGColorPick.html:22926,Energy Efficiency,reduce,reduced,22926,"me class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Static Public Member Functions inherited from TGWidget; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; void AllocColors ();  Try to allocate first a palette of 64 colors. ;  ; void CreateDitheredImage (Pixmap_t image, Int_t which);  Create a dithered version of the color map and lightness images for display modes with reduced number of colors. ;  ; void CreateImages ();  Create colormap and color slider images. ;  ; void DoRedraw () override;  Redraw the color pick widget. ;  ; void DrawHScursor (Int_t onoff);  Draw hue / saturation cursor. ;  ; void DrawLcursor (Int_t onoff);  Draw lightness slider cursor. ;  ; void FreeColors ();  Free allocated colors. ;  ; void InitImages ();  Initialize color palette and slider images. ;  ; void SetHScursor (Int_t x, Int_t y);  Set hue / saturation cursor position. ;  ; void SetLcursor (Int_t z);  Set lightness slider cursor position. ;  ; void SetSliderColor ();  Set slider colors. ;  ; void UpdateCurrentColor ();  Assign the current cursor position as currently selected color. ;  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame bor",MatchSource.WIKI,doc/master/classTGColorPick.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPick.html
https://root.cern/doc/master/classTGColorPick.html:23252,Energy Efficiency,allocate,allocated,23252,"s ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Static Public Member Functions inherited from TGWidget; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; void AllocColors ();  Try to allocate first a palette of 64 colors. ;  ; void CreateDitheredImage (Pixmap_t image, Int_t which);  Create a dithered version of the color map and lightness images for display modes with reduced number of colors. ;  ; void CreateImages ();  Create colormap and color slider images. ;  ; void DoRedraw () override;  Redraw the color pick widget. ;  ; void DrawHScursor (Int_t onoff);  Draw hue / saturation cursor. ;  ; void DrawLcursor (Int_t onoff);  Draw lightness slider cursor. ;  ; void FreeColors ();  Free allocated colors. ;  ; void InitImages ();  Initialize color palette and slider images. ;  ; void SetHScursor (Int_t x, Int_t y);  Set hue / saturation cursor position. ;  ; void SetLcursor (Int_t z);  Set lightness slider cursor position. ;  ; void SetSliderColor ();  Set slider colors. ;  ; void UpdateCurrentColor ();  Assign the current cursor position as currently selected color. ;  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_",MatchSource.WIKI,doc/master/classTGColorPick.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPick.html
https://root.cern/doc/master/classTGColorPick.html:31380,Energy Efficiency,allocate,allocate,31380," static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGColorDialog.h>. Inheritance diagram for TGColorPick:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGColorPick(). TGColorPick::TGColorPick ; (; const TGWindow * ; p = nullptr, . Int_t ; w = 1, . Int_t ; h = 1, . Int_t ; id = -1 . ). TGColorPick constructor. ; TGColorPick is a widget which allows a color to be picked from HLS space. It consists of two elements: a color map window from where the user can select the hue and saturation level of a color, and a slider to select color's lightness. ; Definition at line 399 of file TGColorDialog.cxx. ◆ ~TGColorPick(). TGColorPick::~TGColorPick ; (; ). override . TGColorPick destructor. ; Definition at line 448 of file TGColorDialog.cxx. Member Function Documentation. ◆ AllocColors(). void TGColorPick::AllocColors ; (; ). protected . Try to allocate first a palette of 64 colors. ; Used by the dithered version of the color maps. ; Definition at line 541 of file TGColorDialog.cxx. ◆ Class(). static TClass * TGColorPick::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TGColorPick::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TGColorPick::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 131 of file TGColorDialog.h. ◆ ColorSelected(). virtual void TGColorPick::ColorSelected ; (; Pixel_t ; col = 0). inlinevirtual . Definition at line 128 of file TGColorDialog.h. ◆ CreateDitheredImage(). void TGColorPick::CreateDitheredImage ; (; Pixmap_t ; image, . Int_t ; which . ). protected . Create a dithered version of the color map and lightness images for display modes with reduced number of colors. ; The Floyd-Steinberg error diffusion dithering algorithm is used. This routine is called in PseudoColor",MatchSource.WIKI,doc/master/classTGColorPick.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPick.html
https://root.cern/doc/master/classTGColorPick.html:32265,Energy Efficiency,reduce,reduced,32265,"on at line 448 of file TGColorDialog.cxx. Member Function Documentation. ◆ AllocColors(). void TGColorPick::AllocColors ; (; ). protected . Try to allocate first a palette of 64 colors. ; Used by the dithered version of the color maps. ; Definition at line 541 of file TGColorDialog.cxx. ◆ Class(). static TClass * TGColorPick::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TGColorPick::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TGColorPick::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 131 of file TGColorDialog.h. ◆ ColorSelected(). virtual void TGColorPick::ColorSelected ; (; Pixel_t ; col = 0). inlinevirtual . Definition at line 128 of file TGColorDialog.h. ◆ CreateDitheredImage(). void TGColorPick::CreateDitheredImage ; (; Pixmap_t ; image, . Int_t ; which . ). protected . Create a dithered version of the color map and lightness images for display modes with reduced number of colors. ; The Floyd-Steinberg error diffusion dithering algorithm is used. This routine is called in PseudoColor modes only. ; Definition at line 642 of file TGColorDialog.cxx. ◆ CreateImages(). void TGColorPick::CreateImages ; (; ). protected . Create colormap and color slider images. ; Definition at line 525 of file TGColorDialog.cxx. ◆ DeclFileName(). static const char * TGColorPick::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 131 of file TGColorDialog.h. ◆ DoRedraw(). void TGColorPick::DoRedraw ; (; ). overrideprotectedvirtual . Redraw the color pick widget. ; Reimplemented from TGWindow.; Definition at line 913 of file TGColorDialog.cxx. ◆ DrawHScursor(). void TGColorPick::DrawHScursor ; (; Int_t ; onoff). protected . Draw hue / saturation cursor. ; Definition at line 988 of file TGColorDialog.cxx. ◆ DrawLcursor(). void TGColorPick::DrawLcursor ; (; Int_t ; onoff)",MatchSource.WIKI,doc/master/classTGColorPick.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPick.html
https://root.cern/doc/master/classTGColorPick.html:33401,Energy Efficiency,allocate,allocated,33401,. ; Definition at line 642 of file TGColorDialog.cxx. ◆ CreateImages(). void TGColorPick::CreateImages ; (; ). protected . Create colormap and color slider images. ; Definition at line 525 of file TGColorDialog.cxx. ◆ DeclFileName(). static const char * TGColorPick::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 131 of file TGColorDialog.h. ◆ DoRedraw(). void TGColorPick::DoRedraw ; (; ). overrideprotectedvirtual . Redraw the color pick widget. ; Reimplemented from TGWindow.; Definition at line 913 of file TGColorDialog.cxx. ◆ DrawHScursor(). void TGColorPick::DrawHScursor ; (; Int_t ; onoff). protected . Draw hue / saturation cursor. ; Definition at line 988 of file TGColorDialog.cxx. ◆ DrawLcursor(). void TGColorPick::DrawLcursor ; (; Int_t ; onoff). protected . Draw lightness slider cursor. ; Definition at line 1033 of file TGColorDialog.cxx. ◆ FreeColors(). void TGColorPick::FreeColors ; (; ). protected . Free allocated colors. ; Definition at line 629 of file TGColorDialog.cxx. ◆ GetCurrentColor(). Pixel_t TGColorPick::GetCurrentColor ; (; ); const. inline . Definition at line 126 of file TGColorDialog.h. ◆ HandleButton(). Bool_t TGColorPick::HandleButton ; (; Event_t * ; event). overridevirtual . Handle mouse button events in color pick widget. ; Reimplemented from TGFrame.; Definition at line 459 of file TGColorDialog.cxx. ◆ HandleMotion(). Bool_t TGColorPick::HandleMotion ; (; Event_t * ; event). overridevirtual . Handle mouse motion events in color pick widget. ; Reimplemented from TGFrame.; Definition at line 494 of file TGColorDialog.cxx. ◆ InitImages(). void TGColorPick::InitImages ; (; ). protected . Initialize color palette and slider images. ; Definition at line 791 of file TGColorDialog.cxx. ◆ IsA(). TClass * TGColorPick::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 131 of file TGColorDialog.h. ◆ Se,MatchSource.WIKI,doc/master/classTGColorPick.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPick.html
https://root.cern/doc/master/classTGColorPick.html:3908,Integrability,message,message,3908,"this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void DrawCopy (Handle_t, Int_t, Int_t);  ; void Dump () const override;  Dump contents of object on stdout. ;  ; virtual Pixel_t GetBackground () const;  ; Int_t GetBorderWidth () const;  ; virtual UInt_t GetDefaultHeight () const;  ; virtual TGDimension GetDefaultSize () const;  std::cout << fWidth << ""x"" << fHeight << std::endl; ;  ; virtual UInt_t GetDefaultWidth () const;  ; virtual TDNDData * GetDNDData (Atom_t);  ; virtual Int_t GetDragType () const;  Returns drag source type. ;  ; virtual Int_t GetDropType () const;  Returns drop target type. ;  ; UInt_t GetEventMask () const;  ; virtual Pixel_t GetForeground () const;  Return frame foreground color. ;  ; TGFrameElement * GetFrameElement () const;  ; virtual TGFrame * GetFrameFromPoint (Int_t x, Int_t y);  ; UInt_t GetHeight () const;  ; UInt_t GetMaxHeight () const;  ; UInt_t GetMaxWidth () const;  ; UInt_t GetMinHeight () const;  ; UInt_t GetMinWidth () const;  ; virtual UInt_t GetOptions () const;  ; TGDimension GetSize () const;  ; UInt_t GetWidth () const;  ; Int_t GetX () const;  ; Int_t GetY () const;  ; virtual Bool_t HandleClientMessage (Event_t *event);  Handle a client message. ;  ; virtual Bool_t HandleColormapChange (Event_t *);  ; virtual Bool_t HandleConfigureNotify (Event_t *event);  This event is generated when the frame is resized. ;  ; virtual Bool_t HandleCrossing (Event_t *);  ; virtual Bool_t HandleDNDDrop (TDNDData *);  ; virtual Atom_t HandleDNDEnter (Atom_t *);  ; virtual Bool_t HandleDNDFinished ();  ; virtual Bool_t HandleDNDLeave ();  ; virtual Atom_t HandleDNDPosition (Int_t, Int_t, Atom_t, Int_t, Int_t);  ; virtual Bool_t HandleDoubleClick (Event_t *);  ; virtual Bool_t HandleDragDrop (TGFrame *, Int_t, Int_t, TGLayoutHints *);  ; virtual Bool_t HandleDragEnter (TGFrame *);  ; virtual Bool_t HandleDragLeave (TGFrame *);  ; virtual Bool_t HandleDragMotion (TGFrame *);  ; Bool_t HandleEvent (Event",MatchSource.WIKI,doc/master/classTGColorPick.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPick.html
https://root.cern/doc/master/classTGColorPick.html:6704,Integrability,message,message,6704,"ption_t *option="""") const override;  Print window id. ;  ; virtual void ProcessedConfigure (Event_t *event);  ; virtual void ProcessedEvent (Event_t *event);  ; virtual Bool_t ProcessMessage (Longptr_t, Longptr_t, Longptr_t);  ; virtual void ReallyDelete ();  ; void RemoveInput (UInt_t emask);  Remove events specified in emask from the events the frame should handle. ;  ; void ReparentWindow (const TGWindow *p, Int_t x=0, Int_t y=0) override;  Reparent window, make p the new parent and position the window at position (x,y) in new parent. ;  ; virtual void Resize (TGDimension size);  Resize the frame. ;  ; void Resize (UInt_t w=0, UInt_t h=0) override;  Resize the frame. ;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save a frame widget as a C++ statement(s) on output stream out. ;  ; void SaveUserColor (std::ostream &out, Option_t *);  Save a user color in a C++ macro file - used in SavePrimitive(). ;  ; virtual void SendMessage (const TGWindow *w, Longptr_t msg, Longptr_t parm1, Longptr_t parm2);  Send message (i.e. ;  ; void SetBackgroundColor (Pixel_t back) override;  Set background color (override from TGWindow base class). ;  ; virtual void SetCleanup (Int_t=kLocalCleanup);  ; void SetDNDSource (Bool_t onoff);  ; void SetDNDTarget (Bool_t onoff);  ; virtual void SetDragType (Int_t type);  SetDragType. ;  ; void SetDrawOption (Option_t *="""") override;  Set drawing option for object. ;  ; virtual void SetDropType (Int_t type);  SetDropType. ;  ; void SetEditable (Bool_t) override;  ; virtual void SetForegroundColor (Pixel_t);  ; void SetFrameElement (TGFrameElement *fe);  ; virtual void SetHeight (UInt_t h);  ; virtual void SetLayoutBroken (Bool_t=kTRUE);  ; virtual void SetMaxHeight (UInt_t h);  ; virtual void SetMaxWidth (UInt_t w);  ; virtual void SetMinHeight (UInt_t h);  ; virtual void SetMinWidth (UInt_t w);  ; virtual void SetSize (const TGDimension &s);  ; virtual void SetWidth (UInt_t w);  ; virtual void SetX (Int_t x);  ; vi",MatchSource.WIKI,doc/master/classTGColorPick.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPick.html
https://root.cern/doc/master/classTGColorPick.html:11970,Integrability,message,message,11970,"="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTGColorPick.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPick.html
https://root.cern/doc/master/classTGColorPick.html:12511,Integrability,message,message,12511,"ject using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t ",MatchSource.WIKI,doc/master/classTGColorPick.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPick.html
https://root.cern/doc/master/classTGColorPick.html:13472,Integrability,message,message,13472,"t char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessar",MatchSource.WIKI,doc/master/classTGColorPick.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPick.html
https://root.cern/doc/master/classTGColorPick.html:16125,Integrability,message,message,16125,"sz);  ; void * operator new (size_t sz, void *vp);  ; void * operator new[] (size_t sz);  ; void * operator new[] (size_t sz, void *vp);  ; TObject & operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Paint (Option_t *option="""");  This method must be overridden if a class wants to paint itself. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class s",MatchSource.WIKI,doc/master/classTGColorPick.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPick.html
https://root.cern/doc/master/classTGColorPick.html:16498,Integrability,message,message,16498," pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from class cls and all its base-classes. ;  ; Bool_t Connect (const char *signal, const char *receiver_class, void *receiver, const char *slot);  Non-static method is used to connect from the signal of this object to the receiver slot. ;  ; virtual void Connected (const char *);  ; virtual void Destroyed ();  ; Bool_t Disconnect (const char *signal=nullptr, voi",MatchSource.WIKI,doc/master/classTGColorPick.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPick.html
https://root.cern/doc/master/classTGColorPick.html:32363,Integrability,rout,routine,32363,"locate first a palette of 64 colors. ; Used by the dithered version of the color maps. ; Definition at line 541 of file TGColorDialog.cxx. ◆ Class(). static TClass * TGColorPick::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TGColorPick::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TGColorPick::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 131 of file TGColorDialog.h. ◆ ColorSelected(). virtual void TGColorPick::ColorSelected ; (; Pixel_t ; col = 0). inlinevirtual . Definition at line 128 of file TGColorDialog.h. ◆ CreateDitheredImage(). void TGColorPick::CreateDitheredImage ; (; Pixmap_t ; image, . Int_t ; which . ). protected . Create a dithered version of the color map and lightness images for display modes with reduced number of colors. ; The Floyd-Steinberg error diffusion dithering algorithm is used. This routine is called in PseudoColor modes only. ; Definition at line 642 of file TGColorDialog.cxx. ◆ CreateImages(). void TGColorPick::CreateImages ; (; ). protected . Create colormap and color slider images. ; Definition at line 525 of file TGColorDialog.cxx. ◆ DeclFileName(). static const char * TGColorPick::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 131 of file TGColorDialog.h. ◆ DoRedraw(). void TGColorPick::DoRedraw ; (; ). overrideprotectedvirtual . Redraw the color pick widget. ; Reimplemented from TGWindow.; Definition at line 913 of file TGColorDialog.cxx. ◆ DrawHScursor(). void TGColorPick::DrawHScursor ; (; Int_t ; onoff). protected . Draw hue / saturation cursor. ; Definition at line 988 of file TGColorDialog.cxx. ◆ DrawLcursor(). void TGColorPick::DrawLcursor ; (; Int_t ; onoff). protected . Draw lightness slider cursor. ; Definition at line 1033 of file TGColorDialog.cxx. ◆ FreeColors(). void TGColorPick::FreeColors ; (; )",MatchSource.WIKI,doc/master/classTGColorPick.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPick.html
https://root.cern/doc/master/classTGColorPick.html:1556,Modifiability,inherit,inherited,1556,"ting a color in these two widgets will generate the event:; kC_COLORSEL, kCOL_CLICK, widget id, 0. and the signal:; ColorSelected(Pixel_t color) . Definition at line 83 of file TGColorDialog.h. Public Member Functions;  TGColorPick (const TGWindow *p=nullptr, Int_t w=1, Int_t h=1, Int_t id=-1);  TGColorPick constructor. ;  ;  ~TGColorPick () override;  TGColorPick destructor. ;  ; virtual void ColorSelected (Pixel_t col=0);  ; Pixel_t GetCurrentColor () const;  ; Bool_t HandleButton (Event_t *event) override;  Handle mouse button events in color pick widget. ;  ; Bool_t HandleMotion (Event_t *event) override;  Handle mouse motion events in color pick widget. ;  ; TClass * IsA () const override;  ; void SetColor (Pixel_t color);  Position the slider cursor on right color position. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGFrame;  TGFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=0, Pixel_t back=GetDefaultFrameBackground());  Create a TGFrame object. Options is an OR of the EFrameTypes. ;  ;  TGFrame (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a frame using an externally created window. ;  ;  ~TGFrame () override;  Destructor. ;  ; virtual void Activate (Bool_t);  ; void AddInput (UInt_t emask);  Add events specified in the emask to the events the frame should handle. ;  ; virtual void ChangeBackground (Pixel_t back);  Change frame background color. ;  ; virtual void ChangeOptions (UInt_t options);  Change frame options. Options is an OR of the EFrameTypes. ;  ; Bool_t Contains (Int_t x, Int_t y) const;  ; void Delete (Option_t *="""") override;  Delete this object. ;  ; virtual void DeleteWindow ();  Delete window. ;  ; virtual void DrawBorder ();  Draw frame border. ;  ; void DrawClass () const override;  Draw class inheritance tree of the class to which this object belongs. ;",MatchSource.WIKI,doc/master/classTGColorPick.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPick.html
https://root.cern/doc/master/classTGColorPick.html:2533,Modifiability,inherit,inheritance,2533,"ic Member Functions inherited from TGFrame;  TGFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=0, Pixel_t back=GetDefaultFrameBackground());  Create a TGFrame object. Options is an OR of the EFrameTypes. ;  ;  TGFrame (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a frame using an externally created window. ;  ;  ~TGFrame () override;  Destructor. ;  ; virtual void Activate (Bool_t);  ; void AddInput (UInt_t emask);  Add events specified in the emask to the events the frame should handle. ;  ; virtual void ChangeBackground (Pixel_t back);  Change frame background color. ;  ; virtual void ChangeOptions (UInt_t options);  Change frame options. Options is an OR of the EFrameTypes. ;  ; Bool_t Contains (Int_t x, Int_t y) const;  ; void Delete (Option_t *="""") override;  Delete this object. ;  ; virtual void DeleteWindow ();  Delete window. ;  ; virtual void DrawBorder ();  Draw frame border. ;  ; void DrawClass () const override;  Draw class inheritance tree of the class to which this object belongs. ;  ; TObject * DrawClone (Option_t *="""") const override;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void DrawCopy (Handle_t, Int_t, Int_t);  ; void Dump () const override;  Dump contents of object on stdout. ;  ; virtual Pixel_t GetBackground () const;  ; Int_t GetBorderWidth () const;  ; virtual UInt_t GetDefaultHeight () const;  ; virtual TGDimension GetDefaultSize () const;  std::cout << fWidth << ""x"" << fHeight << std::endl; ;  ; virtual UInt_t GetDefaultWidth () const;  ; virtual TDNDData * GetDNDData (Atom_t);  ; virtual Int_t GetDragType () const;  Returns drag source type. ;  ; virtual Int_t GetDropType () const;  Returns drop target type. ;  ; UInt_t GetEventMask () const;  ; virtual Pixel_t GetForeground () const;  Return frame foreground color. ;  ; TGFrameElement * GetFrameElement () const;  ; virtual TGFrame * GetFrameFromPoint (Int_t x, Int_t y);  ; UInt_t G",MatchSource.WIKI,doc/master/classTGColorPick.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPick.html
https://root.cern/doc/master/classTGColorPick.html:7902,Modifiability,inherit,inherited,7902,"  ; virtual void SetDragType (Int_t type);  SetDragType. ;  ; void SetDrawOption (Option_t *="""") override;  Set drawing option for object. ;  ; virtual void SetDropType (Int_t type);  SetDropType. ;  ; void SetEditable (Bool_t) override;  ; virtual void SetForegroundColor (Pixel_t);  ; void SetFrameElement (TGFrameElement *fe);  ; virtual void SetHeight (UInt_t h);  ; virtual void SetLayoutBroken (Bool_t=kTRUE);  ; virtual void SetMaxHeight (UInt_t h);  ; virtual void SetMaxWidth (UInt_t w);  ; virtual void SetMinHeight (UInt_t h);  ; virtual void SetMinWidth (UInt_t w);  ; virtual void SetSize (const TGDimension &s);  ; virtual void SetWidth (UInt_t w);  ; virtual void SetX (Int_t x);  ; virtual void SetY (Int_t y);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UnmapWindow () override;  unmap window ;  ;  Public Member Functions inherited from TGWindow;  TGWindow (const TGWindow *p=nullptr, Int_t x=0, Int_t y=0, UInt_t w=0, UInt_t h=0, UInt_t border=0, Int_t depth=0, UInt_t clss=0, void *visual=nullptr, SetWindowAttributes_t *attr=nullptr, UInt_t wtype=0);  Create a new window. ;  ;  TGWindow (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a copy of a window. ;  ;  ~TGWindow () override;  Window destructor. Unregisters the window. ;  ; virtual void DestroySubwindows ();  destroy sub windows ;  ; virtual void DestroyWindow ();  destroy window ;  ; virtual UInt_t GetEditDisabled () const;  ; virtual const TGWindow * GetMainFrame () const;  Returns top level main frame. ;  ; const char * GetName () const override;  Return unique name, used in SavePrimitive methods. ;  ; const TGWindow * GetParent () const;  ; virtual Bool_t HandleExpose (Event_t *event);  ; virtual Bool_t HandleIdleEvent (TGIdleHandler *);  ; Bool_t HandleTimer (TTimer *) override;  Execute action in response of a timer timing out. ;  ; virtual void IconifyWindow ();  iconify win",MatchSource.WIKI,doc/master/classTGColorPick.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPick.html
https://root.cern/doc/master/classTGColorPick.html:9868,Modifiability,inherit,inherited,9868,"nse of a timer timing out. ;  ; virtual void IconifyWindow ();  iconify window ;  ; TClass * IsA () const override;  ; virtual Bool_t IsMapped ();  Returns kTRUE if window is mapped on screen, kFALSE otherwise. ;  ; virtual Bool_t IsMapSubwindows () const;  ; virtual void LowerWindow ();  lower window ;  ; virtual Int_t MustCleanup () const;  ; void Print (Option_t *option="""") const override;  Print window id. ;  ; virtual void RaiseWindow ();  raise window ;  ; virtual void RequestFocus ();  request focus ;  ; virtual void SetBackgroundPixmap (Pixmap_t pixmap);  set background pixmap ;  ; virtual void SetEditDisabled (UInt_t on=kEditDisable);  ; virtual void SetMapSubwindows (Bool_t);  ; virtual void SetName (const char *name);  ; virtual void SetWindowName (const char *name=nullptr);  Set window name. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGObject;  TGObject ();  ;  TGObject (const TGObject &tgo);  ;  ~TGObject () override;  TGObject destructor. ;  ; TGClient * GetClient () const;  ; Handle_t GetId () const;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsEqual (const TObject *obj) const override;  Equal comparison (TGObjects are equal if they have the same window identifier). ;  ; void SaveAs (const char *filename="""", Option_t *option="""") const override;  Write this TGObject to a file using TImage, if filename's extension signals a valid TImage::EImageFileType, as defined by TImage::GetImageFileTypeFromFilename(). ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you d",MatchSource.WIKI,doc/master/classTGColorPick.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPick.html
https://root.cern/doc/master/classTGColorPick.html:10603,Modifiability,inherit,inherited,10603,"al void SetName (const char *name);  ; virtual void SetWindowName (const char *name=nullptr);  Set window name. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGObject;  TGObject ();  ;  TGObject (const TGObject &tgo);  ;  ~TGObject () override;  TGObject destructor. ;  ; TGClient * GetClient () const;  ; Handle_t GetId () const;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsEqual (const TObject *obj) const override;  Equal comparison (TGObjects are equal if they have the same window identifier). ;  ; void SaveAs (const char *filename="""", Option_t *option="""") const override;  Write this TGObject to a file using TImage, if filename's extension signals a valid TImage::EImageFileType, as defined by TImage::GetImageFileTypeFromFilename(). ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,doc/master/classTGColorPick.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPick.html
https://root.cern/doc/master/classTGColorPick.html:13570,Modifiability,inherit,inherits,13570,"* FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handl",MatchSource.WIKI,doc/master/classTGColorPick.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPick.html
https://root.cern/doc/master/classTGColorPick.html:13687,Modifiability,inherit,inherits,13687,"nst TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base implementation is no-op). ;  ; void Obsolete (const char *method, const char *asOfVe",MatchSource.WIKI,doc/master/classTGColorPick.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPick.html
https://root.cern/doc/master/classTGColorPick.html:16805,Modifiability,inherit,inherited,16805,"f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from class cls and all its base-classes. ;  ; Bool_t Connect (const char *signal, const char *receiver_class, void *receiver, const char *slot);  Non-static method is used to connect from the signal of this object to the receiver slot. ;  ; virtual void Connected (const char *);  ; virtual void Destroyed ();  ; Bool_t Disconnect (const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal of this object from slot of receiver. ;  ; virtual void Disconnected (const char *);  ; void Emit (const char *signal);  Activate signal without args. ;  ; template<typename T > ; void Emit (const char *signal, const T &arg);  Activate signal with single paramet",MatchSource.WIKI,doc/master/classTGColorPick.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPick.html
https://root.cern/doc/master/classTGColorPick.html:18773,Modifiability,inherit,inherited,18773,"a signal with a varying number of arguments. ;  ; TList * GetListOfClassSignals () const;  Returns pointer to list of signals of this class. ;  ; TList * GetListOfConnections () const;  ; TList * GetListOfSignals () const;  ; virtual Bool_t HasConnection (const char *signal_name) const;  Return true if there is any object connected to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGWidget;  TGWidget ();  ;  TGWidget (Int_t id);  ; virtual ~TGWidget ();  ; virtual void Associate (const TGWindow *w);  ; const char * GetCommand () const;  ; Bool_t HasFocus () const;  ; Bool_t IsEnabled () const;  ; virtual void SetCommand (const char *command);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Bool_t WantFocus () const;  ; Int_t WidgetId () const;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetBckgndGC ();  Get background color graphics context. ;  ; static const TGGC & GetBlackGC ();  Get black graphics context. ;  ; static Pixel_t GetBlackPixel ();  Get black pixel value. ;  ; static Pixel_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get defa",MatchSource.WIKI,doc/master/classTGColorPick.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPick.html
https://root.cern/doc/master/classTGColorPick.html:19400,Modifiability,inherit,inherited,19400,"me, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGWidget;  TGWidget ();  ;  TGWidget (Int_t id);  ; virtual ~TGWidget ();  ; virtual void Associate (const TGWindow *w);  ; const char * GetCommand () const;  ; Bool_t HasFocus () const;  ; Bool_t IsEnabled () const;  ; virtual void SetCommand (const char *command);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Bool_t WantFocus () const;  ; Int_t WidgetId () const;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetBckgndGC ();  Get background color graphics context. ;  ; static const TGGC & GetBlackGC ();  Get black graphics context. ;  ; static Pixel_t GetBlackPixel ();  Get black pixel value. ;  ; static Pixel_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get shadow color graphics context. ;  ; static const TGGC & GetWhiteGC ();  Get white graphics context. ;  ; static Pixel_t GetWhitePixel ();  Get white pixel value. ;  ;  Static Public Member Functions inherited from TGWindow; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Versio",MatchSource.WIKI,doc/master/classTGColorPick.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPick.html
https://root.cern/doc/master/classTGColorPick.html:20286,Modifiability,inherit,inherited,20286,erited from TGFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetBckgndGC ();  Get background color graphics context. ;  ; static const TGGC & GetBlackGC ();  Get black graphics context. ;  ; static Pixel_t GetBlackPixel ();  Get black pixel value. ;  ; static Pixel_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get shadow color graphics context. ;  ; static const TGGC & GetWhiteGC ();  Get white graphics context. ;  ; static Pixel_t GetWhitePixel ();  Get white pixel value. ;  ;  Static Public Member Functions inherited from TGWindow; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetCounter ();  Return global window counter (total number of created windows). ;  ;  Static Public Member Functions inherited from TGObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true,MatchSource.WIKI,doc/master/classTGColorPick.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPick.html
https://root.cern/doc/master/classTGColorPick.html:20596,Modifiability,inherit,inherited,20596,"_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get shadow color graphics context. ;  ; static const TGGC & GetWhiteGC ();  Get white graphics context. ;  ; static Pixel_t GetWhitePixel ();  Get white pixel value. ;  ;  Static Public Member Functions inherited from TGWindow; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetCounter ();  Return global window counter (total number of created windows). ;  ;  Static Public Member Functions inherited from TGObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This m",MatchSource.WIKI,doc/master/classTGColorPick.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPick.html
https://root.cern/doc/master/classTGColorPick.html:20808,Modifiability,inherit,inherited,20808,"_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get shadow color graphics context. ;  ; static const TGGC & GetWhiteGC ();  Get white graphics context. ;  ; static Pixel_t GetWhitePixel ();  Get white pixel value. ;  ;  Static Public Member Functions inherited from TGWindow; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetCounter ();  Return global window counter (total number of created windows). ;  ;  Static Public Member Functions inherited from TGObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This m",MatchSource.WIKI,doc/master/classTGColorPick.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPick.html
https://root.cern/doc/master/classTGColorPick.html:21326,Modifiability,inherit,inherited,21326," Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetCounter ();  Return global window counter (total number of created windows). ;  ;  Static Public Member Functions inherited from TGObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullpt",MatchSource.WIKI,doc/master/classTGColorPick.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPick.html
https://root.cern/doc/master/classTGColorPick.html:22501,Modifiability,inherit,inherited,22501," ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Static Public Member Functions inherited from TGWidget; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; void AllocColors ();  Try to allocate first a palette of 64 colors. ;  ; void CreateDitheredImage (Pixmap_t image, Int_t which);  Create a dithered version of the color map and lightness images for display modes with reduced number of colors. ;  ; void CreateImages ();  Create colormap and color slider images. ;  ; void DoRedraw () override;  Redraw the color pick widget. ;  ; void DrawHScursor (Int_t onoff);  Draw hue / saturation cursor. ;  ; void DrawLcursor (Int_t onoff);  Draw lightness slider cursor. ;  ; void FreeColors ();  Free allocated colors. ;  ; void InitImages ();  Initialize color palette and slider images. ;  ; void SetHScursor (Int_t x, Int_t y);  Set hue / saturation cursor position. ;  ; void SetLcursor (Int_t z);  Set lightness slider cursor position. ;  ; void SetSliderColor ();  Set slider colors. ;  ; void UpdateCurrentColor ()",MatchSource.WIKI,doc/master/classTGColorPick.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPick.html
https://root.cern/doc/master/classTGColorPick.html:23672,Modifiability,inherit,inherited,23672,"d Member Functions; void AllocColors ();  Try to allocate first a palette of 64 colors. ;  ; void CreateDitheredImage (Pixmap_t image, Int_t which);  Create a dithered version of the color map and lightness images for display modes with reduced number of colors. ;  ; void CreateImages ();  Create colormap and color slider images. ;  ; void DoRedraw () override;  Redraw the color pick widget. ;  ; void DrawHScursor (Int_t onoff);  Draw hue / saturation cursor. ;  ; void DrawLcursor (Int_t onoff);  Draw lightness slider cursor. ;  ; void FreeColors ();  Free allocated colors. ;  ; void InitImages ();  Initialize color palette and slider images. ;  ; void SetHScursor (Int_t x, Int_t y);  Set hue / saturation cursor position. ;  ; void SetLcursor (Int_t z);  Set lightness slider cursor position. ;  ; void SetSliderColor ();  Set slider colors. ;  ; void UpdateCurrentColor ();  Assign the current cursor position as currently selected color. ;  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * Get",MatchSource.WIKI,doc/master/classTGColorPick.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPick.html
https://root.cern/doc/master/classTGColorPick.html:24166,Modifiability,inherit,inherited,24166,"sor (Int_t x, Int_t y);  Set hue / saturation cursor position. ;  ; void SetLcursor (Int_t z);  Set lightness slider cursor position. ;  ; void SetSliderColor ();  Set slider colors. ;  ; void UpdateCurrentColor ();  Assign the current cursor position as currently selected color. ;  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Protected Member Functions inherited from TGWidget;  TGWidget (const TGWidget &tgw);  ; Int_t ClearFlags (Int_t flags);  ; TGWidget & operator= (const TGWidget &tgw);  ; Int_t SetFlags (Int_t flags);  . Protected Attributes; Int_t fClick;  mouse click location (kCLICK_NONE, kCLICK_HS, kCLICK_L) ;  ; Rectangle_t fColormapRect;  hue / saturation colormap rectangle ;  ; Pixel_t fCurrentColor;  currently selected color value ;  ; TGGC fCursorGC;  color lightness slider cursor GC ;  ; Int_t fCx;  x position in hs colormap ;  ; Int_t fCy;  y position in hs colormap ;  ; Int_t fCz;  position in lightness slider ;  ; Pixmap_t fHSimage;  h",MatchSource.WIKI,doc/master/classTGColorPick.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPick.html
https://root.cern/doc/master/classTGColorPick.html:24330,Modifiability,inherit,inherited,24330,"sor (Int_t x, Int_t y);  Set hue / saturation cursor position. ;  ; void SetLcursor (Int_t z);  Set lightness slider cursor position. ;  ; void SetSliderColor ();  Set slider colors. ;  ; void UpdateCurrentColor ();  Assign the current cursor position as currently selected color. ;  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Protected Member Functions inherited from TGWidget;  TGWidget (const TGWidget &tgw);  ; Int_t ClearFlags (Int_t flags);  ; TGWidget & operator= (const TGWidget &tgw);  ; Int_t SetFlags (Int_t flags);  . Protected Attributes; Int_t fClick;  mouse click location (kCLICK_NONE, kCLICK_HS, kCLICK_L) ;  ; Rectangle_t fColormapRect;  hue / saturation colormap rectangle ;  ; Pixel_t fCurrentColor;  currently selected color value ;  ; TGGC fCursorGC;  color lightness slider cursor GC ;  ; Int_t fCx;  x position in hs colormap ;  ; Int_t fCy;  y position in hs colormap ;  ; Int_t fCz;  position in lightness slider ;  ; Pixmap_t fHSimage;  h",MatchSource.WIKI,doc/master/classTGColorPick.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPick.html
https://root.cern/doc/master/classTGColorPick.html:24430,Modifiability,inherit,inherited,24430,"sor (Int_t x, Int_t y);  Set hue / saturation cursor position. ;  ; void SetLcursor (Int_t z);  Set lightness slider cursor position. ;  ; void SetSliderColor ();  Set slider colors. ;  ; void UpdateCurrentColor ();  Assign the current cursor position as currently selected color. ;  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Protected Member Functions inherited from TGWidget;  TGWidget (const TGWidget &tgw);  ; Int_t ClearFlags (Int_t flags);  ; TGWidget & operator= (const TGWidget &tgw);  ; Int_t SetFlags (Int_t flags);  . Protected Attributes; Int_t fClick;  mouse click location (kCLICK_NONE, kCLICK_HS, kCLICK_L) ;  ; Rectangle_t fColormapRect;  hue / saturation colormap rectangle ;  ; Pixel_t fCurrentColor;  currently selected color value ;  ; TGGC fCursorGC;  color lightness slider cursor GC ;  ; Int_t fCx;  x position in hs colormap ;  ; Int_t fCy;  y position in hs colormap ;  ; Int_t fCz;  position in lightness slider ;  ; Pixmap_t fHSimage;  h",MatchSource.WIKI,doc/master/classTGColorPick.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPick.html
https://root.cern/doc/master/classTGColorPick.html:24641,Modifiability,inherit,inherited,24641,"l void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Protected Member Functions inherited from TGWidget;  TGWidget (const TGWidget &tgw);  ; Int_t ClearFlags (Int_t flags);  ; TGWidget & operator= (const TGWidget &tgw);  ; Int_t SetFlags (Int_t flags);  . Protected Attributes; Int_t fClick;  mouse click location (kCLICK_NONE, kCLICK_HS, kCLICK_L) ;  ; Rectangle_t fColormapRect;  hue / saturation colormap rectangle ;  ; Pixel_t fCurrentColor;  currently selected color value ;  ; TGGC fCursorGC;  color lightness slider cursor GC ;  ; Int_t fCx;  x position in hs colormap ;  ; Int_t fCy;  y position in hs colormap ;  ; Int_t fCz;  position in lightness slider ;  ; Pixmap_t fHSimage;  hue / saturation colormap pixmap ;  ; Pixmap_t fLimage;  color lightness slider pixmap ;  ; Int_t fNColors;  number of color samples ;  ; Rectangle_t fSliderRect;  color lightness slider rectangle ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask; ",MatchSource.WIKI,doc/master/classTGColorPick.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPick.html
https://root.cern/doc/master/classTGColorPick.html:24747,Modifiability,inherit,inherited,24747,"l void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Protected Member Functions inherited from TGWidget;  TGWidget (const TGWidget &tgw);  ; Int_t ClearFlags (Int_t flags);  ; TGWidget & operator= (const TGWidget &tgw);  ; Int_t SetFlags (Int_t flags);  . Protected Attributes; Int_t fClick;  mouse click location (kCLICK_NONE, kCLICK_HS, kCLICK_L) ;  ; Rectangle_t fColormapRect;  hue / saturation colormap rectangle ;  ; Pixel_t fCurrentColor;  currently selected color value ;  ; TGGC fCursorGC;  color lightness slider cursor GC ;  ; Int_t fCx;  x position in hs colormap ;  ; Int_t fCy;  y position in hs colormap ;  ; Int_t fCz;  position in lightness slider ;  ; Pixmap_t fHSimage;  hue / saturation colormap pixmap ;  ; Pixmap_t fLimage;  color lightness slider pixmap ;  ; Int_t fNColors;  number of color samples ;  ; Rectangle_t fSliderRect;  color lightness slider rectangle ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask; ",MatchSource.WIKI,doc/master/classTGColorPick.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPick.html
https://root.cern/doc/master/classTGColorPick.html:25581,Modifiability,inherit,inherited,25581,"ions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Protected Member Functions inherited from TGWidget;  TGWidget (const TGWidget &tgw);  ; Int_t ClearFlags (Int_t flags);  ; TGWidget & operator= (const TGWidget &tgw);  ; Int_t SetFlags (Int_t flags);  . Protected Attributes; Int_t fClick;  mouse click location (kCLICK_NONE, kCLICK_HS, kCLICK_L) ;  ; Rectangle_t fColormapRect;  hue / saturation colormap rectangle ;  ; Pixel_t fCurrentColor;  currently selected color value ;  ; TGGC fCursorGC;  color lightness slider cursor GC ;  ; Int_t fCx;  x position in hs colormap ;  ; Int_t fCy;  y position in hs colormap ;  ; Int_t fCz;  position in lightness slider ;  ; Pixmap_t fHSimage;  hue / saturation colormap pixmap ;  ; Pixmap_t fLimage;  color lightness slider pixmap ;  ; Int_t fNColors;  number of color samples ;  ; Rectangle_t fSliderRect;  color lightness slider rectangle ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the wi",MatchSource.WIKI,doc/master/classTGColorPick.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPick.html
https://root.cern/doc/master/classTGColorPick.html:26213,Modifiability,inherit,inherited,26213,"_t fCurrentColor;  currently selected color value ;  ; TGGC fCursorGC;  color lightness slider cursor GC ;  ; Int_t fCx;  x position in hs colormap ;  ; Int_t fCy;  y position in hs colormap ;  ; Int_t fCz;  position in lightness slider ;  ; Pixmap_t fHSimage;  hue / saturation colormap pixmap ;  ; Pixmap_t fLimage;  color lightness slider pixmap ;  ; Int_t fNColors;  number of color samples ;  ; Rectangle_t fSliderRect;  color lightness slider rectangle ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Protected Attributes inherited from TGWidget; TString fCommand;  command to be executed ;  ; const TGWindow * fMsgWindow;  window which handles widget events ;  ; Int_t fWidgetFlags;  widget status flags (OR of EWidgetStatus) ;  ; Int_t fWidgetId;  the widget id (used",MatchSource.WIKI,doc/master/classTGColorPick.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPick.html
https://root.cern/doc/master/classTGColorPick.html:26490,Modifiability,inherit,inherited,26490,"rRect;  color lightness slider rectangle ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Protected Attributes inherited from TGWidget; TString fCommand;  command to be executed ;  ; const TGWindow * fMsgWindow;  window which handles widget events ;  ; Int_t fWidgetFlags;  widget status flags (OR of EWidgetStatus) ;  ; Int_t fWidgetId;  the widget id (used for event processing) ;  . Private Attributes; Int_t fColormap [64][3];  ; Pixel_t fPixel [64];  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableH",MatchSource.WIKI,doc/master/classTGColorPick.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPick.html
https://root.cern/doc/master/classTGColorPick.html:26642,Modifiability,inherit,inherited,26642,"t ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Protected Attributes inherited from TGWidget; TString fCommand;  command to be executed ;  ; const TGWindow * fMsgWindow;  window which handles widget events ;  ; Int_t fWidgetFlags;  widget status flags (OR of EWidgetStatus) ;  ; Int_t fWidgetId;  the widget id (used for event processing) ;  . Private Attributes; Int_t fColormap [64][3];  ; Pixel_t fPixel [64];  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsi",MatchSource.WIKI,doc/master/classTGColorPick.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPick.html
https://root.cern/doc/master/classTGColorPick.html:26848,Modifiability,inherit,inherited,26848,"t ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Protected Attributes inherited from TGWidget; TString fCommand;  command to be executed ;  ; const TGWindow * fMsgWindow;  window which handles widget events ;  ; Int_t fWidgetFlags;  widget status flags (OR of EWidgetStatus) ;  ; Int_t fWidgetId;  the widget id (used for event processing) ;  . Private Attributes; Int_t fColormap [64][3];  ; Pixel_t fPixel [64];  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsi",MatchSource.WIKI,doc/master/classTGColorPick.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPick.html
https://root.cern/doc/master/classTGColorPick.html:27239,Modifiability,inherit,inherited,27239,"indow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Protected Attributes inherited from TGWidget; TString fCommand;  command to be executed ;  ; const TGWindow * fMsgWindow;  window which handles widget events ;  ; Int_t fWidgetFlags;  widget status flags (OR of EWidgetStatus) ;  ; Int_t fWidgetId;  the widget id (used for event processing) ;  . Private Attributes; Int_t fColormap [64][3];  ; Pixel_t fPixel [64];  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindo",MatchSource.WIKI,doc/master/classTGColorPick.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPick.html
https://root.cern/doc/master/classTGColorPick.html:27746,Modifiability,inherit,inherited,27746,"of connections to this object ;  ;  Protected Attributes inherited from TGWidget; TString fCommand;  command to be executed ;  ; const TGWindow * fMsgWindow;  window which handles widget events ;  ; Int_t fWidgetFlags;  widget status flags (OR of EWidgetStatus) ;  ; Int_t fWidgetId;  the widget id (used for event processing) ;  . Private Attributes; Int_t fColormap [64][3];  ; Pixel_t fPixel [64];  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TCla",MatchSource.WIKI,doc/master/classTGColorPick.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPick.html
https://root.cern/doc/master/classTGColorPick.html:28387,Modifiability,inherit,inherited,28387,"t = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sen",MatchSource.WIKI,doc/master/classTGColorPick.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPick.html
https://root.cern/doc/master/classTGColorPick.html:28482,Modifiability,inherit,inherited,28482,"t = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sen",MatchSource.WIKI,doc/master/classTGColorPick.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPick.html
https://root.cern/doc/master/classTGColorPick.html:28588,Modifiability,inherit,inherited,28588,"t = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sen",MatchSource.WIKI,doc/master/classTGColorPick.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPick.html
https://root.cern/doc/master/classTGColorPick.html:28714,Modifiability,inherit,inherited,28714,"; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; s",MatchSource.WIKI,doc/master/classTGColorPick.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPick.html
https://root.cern/doc/master/classTGColorPick.html:29570,Modifiability,inherit,inherited,29570,"nst"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGColorDialog.h>. Inheritance diagram for TGColorPick:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGColorPick(). TGColorPick::TGColorPick ; (; const TGWindow * ; p = nullptr, . Int_t ; w = 1, . Int_t ; h = 1, . Int_t ; id = -1 . ). TGColorPick constructor. ; TGColorPick is a widget which allows a color to be picked from HLS space. It consists of two elements: a color map window from where the user can select the hue ",MatchSource.WIKI,doc/master/classTGColorPick.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPick.html
https://root.cern/doc/master/classTGColorPick.html:30239,Modifiability,inherit,inherited,30239,"nst"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGColorDialog.h>. Inheritance diagram for TGColorPick:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGColorPick(). TGColorPick::TGColorPick ; (; const TGWindow * ; p = nullptr, . Int_t ; w = 1, . Int_t ; h = 1, . Int_t ; id = -1 . ). TGColorPick constructor. ; TGColorPick is a widget which allows a color to be picked from HLS space. It consists of two elements: a color map window from where the user can select the hue ",MatchSource.WIKI,doc/master/classTGColorPick.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPick.html
https://root.cern/doc/master/classTGColorPick.html:30371,Modifiability,inherit,inherited,30371,"nst"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGColorDialog.h>. Inheritance diagram for TGColorPick:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGColorPick(). TGColorPick::TGColorPick ; (; const TGWindow * ; p = nullptr, . Int_t ; w = 1, . Int_t ; h = 1, . Int_t ; id = -1 . ). TGColorPick constructor. ; TGColorPick is a widget which allows a color to be picked from HLS space. It consists of two elements: a color map window from where the user can select the hue ",MatchSource.WIKI,doc/master/classTGColorPick.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPick.html
https://root.cern/doc/master/classTGColorPick.html:10099,Security,hash,hash,10099,"pped on screen, kFALSE otherwise. ;  ; virtual Bool_t IsMapSubwindows () const;  ; virtual void LowerWindow ();  lower window ;  ; virtual Int_t MustCleanup () const;  ; void Print (Option_t *option="""") const override;  Print window id. ;  ; virtual void RaiseWindow ();  raise window ;  ; virtual void RequestFocus ();  request focus ;  ; virtual void SetBackgroundPixmap (Pixmap_t pixmap);  set background pixmap ;  ; virtual void SetEditDisabled (UInt_t on=kEditDisable);  ; virtual void SetMapSubwindows (Bool_t);  ; virtual void SetName (const char *name);  ; virtual void SetWindowName (const char *name=nullptr);  Set window name. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGObject;  TGObject ();  ;  TGObject (const TGObject &tgo);  ;  ~TGObject () override;  TGObject destructor. ;  ; TGClient * GetClient () const;  ; Handle_t GetId () const;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsEqual (const TObject *obj) const override;  Equal comparison (TGObjects are equal if they have the same window identifier). ;  ; void SaveAs (const char *filename="""", Option_t *option="""") const override;  Write this TGObject to a file using TImage, if filename's extension signals a valid TImage::EImageFileType, as defined by TImage::GetImageFileTypeFromFilename(). ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse ob",MatchSource.WIKI,doc/master/classTGColorPick.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPick.html
https://root.cern/doc/master/classTGColorPopup.html:14935,Availability,error,error,14935,"="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTGColorPopup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPopup.html
https://root.cern/doc/master/classTGColorPopup.html:15024,Availability,error,error,15024," object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual ",MatchSource.WIKI,doc/master/classTGColorPopup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPopup.html
https://root.cern/doc/master/classTGColorPopup.html:15179,Availability,error,error,15179,"etup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the uniqu",MatchSource.WIKI,doc/master/classTGColorPopup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPopup.html
https://root.cern/doc/master/classTGColorPopup.html:15476,Availability,error,error,15476,"ject using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t ",MatchSource.WIKI,doc/master/classTGColorPopup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPopup.html
https://root.cern/doc/master/classTGColorPopup.html:19090,Availability,error,error,19090,"sz);  ; void * operator new (size_t sz, void *vp);  ; void * operator new[] (size_t sz);  ; void * operator new[] (size_t sz, void *vp);  ; TObject & operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Paint (Option_t *option="""");  This method must be overridden if a class wants to paint itself. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class s",MatchSource.WIKI,doc/master/classTGColorPopup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPopup.html
https://root.cern/doc/master/classTGColorPopup.html:26025,Availability,mask,mask,26025," ;  ; Int_t fLaunchDialog;  flag used for launching color dialog ;  ; const TGWindow * fMsgWindow;  window handling container messages ;  ;  Protected Attributes inherited from TGCompositeFrame; Bool_t fLayoutBroken;  no layout manager is used ;  ; TGLayoutManager * fLayoutManager;  layout manager ;  ; TList * fList;  container of frame elements ;  ; Bool_t fMapSubwindows;  kTRUE - map subwindows ;  ; Int_t fMustCleanup;  cleanup mode (see EFrameCleanup) ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions;  TGColorPopup (const TGColorPopup &)=delete;  ; TGColorPopup & operator= (const TGColorPopup &)=delete;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( ",MatchSource.WIKI,doc/master/classTGColorPopup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPopup.html
https://root.cern/doc/master/classTGColorPopup.html:1244,Integrability,message,messages,1244,"cted Attributes |; Private Member Functions |; List of all members ; TGColorPopup Class ReferenceGUI » Low level GUI widgets. ; A popup containing a TG16ColorSelector and a ""More..."" button which popups up a TGColorDialog allowing custom color selection. ; Definition at line 75 of file TGColorSelect.h. Public Member Functions;  TGColorPopup (const TGWindow *p=nullptr, const TGWindow *m=nullptr, Pixel_t color=0);  TGColorPopup constructor. ;  ;  ~TGColorPopup () override;  TGColorPopup destructor. ;  ; void EndPopup ();  Ungrab pointer and unmap window. ;  ; Bool_t HandleButton (Event_t *event) override;  Handle mouse button events for TGColorPopup. ;  ; TClass * IsA () const override;  ; void PlacePopup (Int_t x, Int_t y, UInt_t w, UInt_t h);  Popup TGColorPopup at x,y position. ;  ; void PreviewAlphaColor (ULongptr_t color);  Emit a signal to see preview. ;  ; void PreviewColor (Pixel_t color);  Emit a signal to see preview. ;  ; Bool_t ProcessMessage (Longptr_t msg, Longptr_t parm1, Longptr_t parm2) override;  Process messages for TGColorPopup. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGCompositeFrame;  TGCompositeFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=0, Pixel_t back=GetDefaultFrameBackground());  Create a composite frame. ;  ;  TGCompositeFrame (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a frame using an externally created window. ;  ;  ~TGCompositeFrame () override;  Delete a composite frame. ;  ; virtual void AddFrame (TGFrame *f, TGLayoutHints *l=nullptr);  Add frame to the composite frame using the specified layout hints. ;  ; void ChangeOptions (UInt_t options) override;  Change composite frame options. Options is an OR of the EFrameTypes. ;  ; virtual void ChangeSubframesBackground (Pixel_t back);  Change background color for this frame and all subframes. ;",MatchSource.WIKI,doc/master/classTGColorPopup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPopup.html
https://root.cern/doc/master/classTGColorPopup.html:7790,Integrability,message,message,7790,"d DrawBorder ();  Draw frame border. ;  ; void DrawClass () const override;  Draw class inheritance tree of the class to which this object belongs. ;  ; TObject * DrawClone (Option_t *="""") const override;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void DrawCopy (Handle_t, Int_t, Int_t);  ; void Dump () const override;  Dump contents of object on stdout. ;  ; virtual Pixel_t GetBackground () const;  ; Int_t GetBorderWidth () const;  ; virtual TDNDData * GetDNDData (Atom_t);  ; virtual Int_t GetDragType () const;  Returns drag source type. ;  ; virtual Int_t GetDropType () const;  Returns drop target type. ;  ; UInt_t GetEventMask () const;  ; virtual Pixel_t GetForeground () const;  Return frame foreground color. ;  ; TGFrameElement * GetFrameElement () const;  ; UInt_t GetHeight () const;  ; UInt_t GetMaxHeight () const;  ; UInt_t GetMaxWidth () const;  ; UInt_t GetMinHeight () const;  ; UInt_t GetMinWidth () const;  ; virtual UInt_t GetOptions () const;  ; TGDimension GetSize () const;  ; UInt_t GetWidth () const;  ; Int_t GetX () const;  ; Int_t GetY () const;  ; virtual Bool_t HandleClientMessage (Event_t *event);  Handle a client message. ;  ; virtual Bool_t HandleColormapChange (Event_t *);  ; virtual Bool_t HandleConfigureNotify (Event_t *event);  This event is generated when the frame is resized. ;  ; virtual Bool_t HandleDNDDrop (TDNDData *);  ; virtual Atom_t HandleDNDEnter (Atom_t *);  ; virtual Bool_t HandleDNDFinished ();  ; virtual Bool_t HandleDNDLeave ();  ; virtual Atom_t HandleDNDPosition (Int_t, Int_t, Atom_t, Int_t, Int_t);  ; Bool_t HandleEvent (Event_t *event) override;  Handle all frame events. ;  ; virtual Bool_t HandleSelectionClear (Event_t *);  ; virtual Bool_t HandleSelectionRequest (Event_t *);  ; void Inspect () const override;  Dump contents of this object in a graphics canvas. ;  ; TClass * IsA () const override;  ; virtual Bool_t IsActive () const;  ; Bool_t IsDNDSource () con",MatchSource.WIKI,doc/master/classTGColorPopup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPopup.html
https://root.cern/doc/master/classTGColorPopup.html:9957,Integrability,message,message,9957,"t_t h=0) override;  Move and/or resize the frame. ;  ; void Print (Option_t *option="""") const override;  Print window id. ;  ; virtual void ProcessedConfigure (Event_t *event);  ; virtual void ProcessedEvent (Event_t *event);  ; virtual void ReallyDelete ();  ; void RemoveInput (UInt_t emask);  Remove events specified in emask from the events the frame should handle. ;  ; void ReparentWindow (const TGWindow *p, Int_t x=0, Int_t y=0) override;  Reparent window, make p the new parent and position the window at position (x,y) in new parent. ;  ; virtual void Resize (TGDimension size);  Resize the frame. ;  ; void Resize (UInt_t w=0, UInt_t h=0) override;  Resize the frame. ;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save a frame widget as a C++ statement(s) on output stream out. ;  ; void SaveUserColor (std::ostream &out, Option_t *);  Save a user color in a C++ macro file - used in SavePrimitive(). ;  ; virtual void SendMessage (const TGWindow *w, Longptr_t msg, Longptr_t parm1, Longptr_t parm2);  Send message (i.e. ;  ; void SetBackgroundColor (Pixel_t back) override;  Set background color (override from TGWindow base class). ;  ; void SetDNDSource (Bool_t onoff);  ; void SetDNDTarget (Bool_t onoff);  ; virtual void SetDragType (Int_t type);  SetDragType. ;  ; void SetDrawOption (Option_t *="""") override;  Set drawing option for object. ;  ; virtual void SetDropType (Int_t type);  SetDropType. ;  ; void SetEditable (Bool_t) override;  ; virtual void SetForegroundColor (Pixel_t);  ; void SetFrameElement (TGFrameElement *fe);  ; virtual void SetHeight (UInt_t h);  ; virtual void SetMaxHeight (UInt_t h);  ; virtual void SetMaxWidth (UInt_t w);  ; virtual void SetMinHeight (UInt_t h);  ; virtual void SetMinWidth (UInt_t w);  ; virtual void SetSize (const TGDimension &s);  ; virtual void SetWidth (UInt_t w);  ; virtual void SetX (Int_t x);  ; virtual void SetY (Int_t y);  ; void Streamer (TBuffer &) override;  Stream an object of class TObje",MatchSource.WIKI,doc/master/classTGColorPopup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPopup.html
https://root.cern/doc/master/classTGColorPopup.html:14941,Integrability,message,message,14941,"="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTGColorPopup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPopup.html
https://root.cern/doc/master/classTGColorPopup.html:15482,Integrability,message,message,15482,"ject using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t ",MatchSource.WIKI,doc/master/classTGColorPopup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPopup.html
https://root.cern/doc/master/classTGColorPopup.html:16443,Integrability,message,message,16443,"t char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessar",MatchSource.WIKI,doc/master/classTGColorPopup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPopup.html
https://root.cern/doc/master/classTGColorPopup.html:19096,Integrability,message,message,19096,"sz);  ; void * operator new (size_t sz, void *vp);  ; void * operator new[] (size_t sz);  ; void * operator new[] (size_t sz, void *vp);  ; TObject & operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Paint (Option_t *option="""");  This method must be overridden if a class wants to paint itself. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class s",MatchSource.WIKI,doc/master/classTGColorPopup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPopup.html
https://root.cern/doc/master/classTGColorPopup.html:19469,Integrability,message,message,19469," pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from class cls and all its base-classes. ;  ; Bool_t Connect (const char *signal, const char *receiver_class, void *receiver, const char *slot);  Non-static method is used to connect from the signal of this object to the receiver slot. ;  ; virtual void Connected (const char *);  ; virtual void Destroyed ();  ; Bool_t Disconnect (const char *signal=nullptr, voi",MatchSource.WIKI,doc/master/classTGColorPopup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPopup.html
https://root.cern/doc/master/classTGColorPopup.html:25469,Integrability,message,messages,25469,"any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Protected Attributes; Int_t fActive;  active color index ;  ; Pixel_t fCurrentColor;  currently selected color value ;  ; Int_t fLaunchDialog;  flag used for launching color dialog ;  ; const TGWindow * fMsgWindow;  window handling container messages ;  ;  Protected Attributes inherited from TGCompositeFrame; Bool_t fLayoutBroken;  no layout manager is used ;  ; TGLayoutManager * fLayoutManager;  layout manager ;  ; TList * fList;  container of frame elements ;  ; Bool_t fMapSubwindows;  kTRUE - map subwindows ;  ; Int_t fMustCleanup;  cleanup mode (see EFrameCleanup) ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive()",MatchSource.WIKI,doc/master/classTGColorPopup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPopup.html
https://root.cern/doc/master/classTGColorPopup.html:34439,Integrability,message,messages,34439,"28 of file TGColorSelect.cxx. ◆ IsA(). TClass * TGColorPopup::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 99 of file TGColorSelect.h. ◆ operator=(). TGColorPopup & TGColorPopup::operator= ; (; const TGColorPopup & ; ). privatedelete . ◆ PlacePopup(). void TGColorPopup::PlacePopup ; (; Int_t ; x, . Int_t ; y, . UInt_t ; w, . UInt_t ; h . ). Popup TGColorPopup at x,y position. ; Definition at line 276 of file TGColorSelect.cxx. ◆ PreviewAlphaColor(). void TGColorPopup::PreviewAlphaColor ; (; ULongptr_t ; color). Emit a signal to see preview. ; Definition at line 391 of file TGColorSelect.cxx. ◆ PreviewColor(). void TGColorPopup::PreviewColor ; (; Pixel_t ; color). Emit a signal to see preview. ; Definition at line 380 of file TGColorSelect.cxx. ◆ ProcessMessage(). Bool_t TGColorPopup::ProcessMessage ; (; Longptr_t ; msg, . Longptr_t ; parm1, . Longptr_t ; parm2 . ). overridevirtual . Process messages for TGColorPopup. ; Reimplemented from TGFrame.; Definition at line 347 of file TGColorSelect.cxx. ◆ Streamer(). void TGColorPopup::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject. ◆ StreamerNVirtual(). void TGColorPopup::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 99 of file TGColorSelect.h. Member Data Documentation. ◆ fActive. Int_t TGColorPopup::fActive. protected . active color index ; Definition at line 78 of file TGColorSelect.h. ◆ fCurrentColor. Pixel_t TGColorPopup::fCurrentColor. protected . currently selected color value ; Definition at line 81 of file TGColorSelect.h. ◆ fLaunchDialog. Int_t TGColorPopup::fLaunchDialog. protected . flag used for launching color dialog ; Definition at line 79 of file TGColorSelect.h. ◆ fMsgWindow. const TGWindow* TGColorPopup::fMsgWindow. protected . window handling container messages ; Definition at line 80 of file TGColorSelect",MatchSource.WIKI,doc/master/classTGColorPopup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPopup.html
https://root.cern/doc/master/classTGColorPopup.html:35394,Integrability,message,messages,35394,"opup & ; ). privatedelete . ◆ PlacePopup(). void TGColorPopup::PlacePopup ; (; Int_t ; x, . Int_t ; y, . UInt_t ; w, . UInt_t ; h . ). Popup TGColorPopup at x,y position. ; Definition at line 276 of file TGColorSelect.cxx. ◆ PreviewAlphaColor(). void TGColorPopup::PreviewAlphaColor ; (; ULongptr_t ; color). Emit a signal to see preview. ; Definition at line 391 of file TGColorSelect.cxx. ◆ PreviewColor(). void TGColorPopup::PreviewColor ; (; Pixel_t ; color). Emit a signal to see preview. ; Definition at line 380 of file TGColorSelect.cxx. ◆ ProcessMessage(). Bool_t TGColorPopup::ProcessMessage ; (; Longptr_t ; msg, . Longptr_t ; parm1, . Longptr_t ; parm2 . ). overridevirtual . Process messages for TGColorPopup. ; Reimplemented from TGFrame.; Definition at line 347 of file TGColorSelect.cxx. ◆ Streamer(). void TGColorPopup::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject. ◆ StreamerNVirtual(). void TGColorPopup::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 99 of file TGColorSelect.h. Member Data Documentation. ◆ fActive. Int_t TGColorPopup::fActive. protected . active color index ; Definition at line 78 of file TGColorSelect.h. ◆ fCurrentColor. Pixel_t TGColorPopup::fCurrentColor. protected . currently selected color value ; Definition at line 81 of file TGColorSelect.h. ◆ fLaunchDialog. Int_t TGColorPopup::fLaunchDialog. protected . flag used for launching color dialog ; Definition at line 79 of file TGColorSelect.h. ◆ fMsgWindow. const TGWindow* TGColorPopup::fMsgWindow. protected . window handling container messages ; Definition at line 80 of file TGColorSelect.h. Libraries for TGColorPopup:. [legend]; The documentation for this class was generated from the following files:; gui/gui/inc/TGColorSelect.h; gui/gui/src/TGColorSelect.cxx. TGColorPopup. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:42:56 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/classTGColorPopup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPopup.html
https://root.cern/doc/master/classTGColorPopup.html:1443,Modifiability,inherit,inherited,1443,"file TGColorSelect.h. Public Member Functions;  TGColorPopup (const TGWindow *p=nullptr, const TGWindow *m=nullptr, Pixel_t color=0);  TGColorPopup constructor. ;  ;  ~TGColorPopup () override;  TGColorPopup destructor. ;  ; void EndPopup ();  Ungrab pointer and unmap window. ;  ; Bool_t HandleButton (Event_t *event) override;  Handle mouse button events for TGColorPopup. ;  ; TClass * IsA () const override;  ; void PlacePopup (Int_t x, Int_t y, UInt_t w, UInt_t h);  Popup TGColorPopup at x,y position. ;  ; void PreviewAlphaColor (ULongptr_t color);  Emit a signal to see preview. ;  ; void PreviewColor (Pixel_t color);  Emit a signal to see preview. ;  ; Bool_t ProcessMessage (Longptr_t msg, Longptr_t parm1, Longptr_t parm2) override;  Process messages for TGColorPopup. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGCompositeFrame;  TGCompositeFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=0, Pixel_t back=GetDefaultFrameBackground());  Create a composite frame. ;  ;  TGCompositeFrame (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a frame using an externally created window. ;  ;  ~TGCompositeFrame () override;  Delete a composite frame. ;  ; virtual void AddFrame (TGFrame *f, TGLayoutHints *l=nullptr);  Add frame to the composite frame using the specified layout hints. ;  ; void ChangeOptions (UInt_t options) override;  Change composite frame options. Options is an OR of the EFrameTypes. ;  ; virtual void ChangeSubframesBackground (Pixel_t back);  Change background color for this frame and all subframes. ;  ; virtual void Cleanup ();  Cleanup and delete all objects contained in this composite frame. ;  ; virtual TGFrameElement * FindFrameElement (TGFrame *f) const;  Find frame-element holding frame f. ;  ; UInt_t GetDefaultHeight () const override;  ; TGDimension GetDefaultSize () ",MatchSource.WIKI,doc/master/classTGColorPopup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPopup.html
https://root.cern/doc/master/classTGColorPopup.html:5799,Modifiability,inherit,inherited,5799," save subframes. ;  ; void SetCleanup (Int_t mode=kLocalCleanup) override;  Turn on automatic cleanup of child frames in dtor. ;  ; void SetEditable (Bool_t on=kTRUE) override;  Switch ON/OFF edit mode. ;  ; void SetEditDisabled (UInt_t on=1) override;  Set edit disable flag for this frame and subframes. ;  ; void SetLayoutBroken (Bool_t on=kTRUE) override;  Set broken layout. No Layout method is called. ;  ; virtual void SetLayoutManager (TGLayoutManager *l);  Set the layout manager for the composite frame. ;  ; void SetMapSubwindows (Bool_t on) override;  ; virtual void ShowFrame (TGFrame *f);  Show sub frame. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual Bool_t TranslateCoordinates (TGFrame *child, Int_t x, Int_t y, Int_t &fx, Int_t &fy);  Translate coordinates to child frame. ;  ;  Public Member Functions inherited from TGFrame;  TGFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=0, Pixel_t back=GetDefaultFrameBackground());  Create a TGFrame object. Options is an OR of the EFrameTypes. ;  ;  TGFrame (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a frame using an externally created window. ;  ;  ~TGFrame () override;  Destructor. ;  ; virtual void Activate (Bool_t);  ; void AddInput (UInt_t emask);  Add events specified in the emask to the events the frame should handle. ;  ; virtual void ChangeBackground (Pixel_t back);  Change frame background color. ;  ; Bool_t Contains (Int_t x, Int_t y) const;  ; void Delete (Option_t *="""") override;  Delete this object. ;  ; virtual void DeleteWindow ();  Delete window. ;  ; virtual void DrawBorder ();  Draw frame border. ;  ; void DrawClass () const override;  Draw class inheritance tree of the class to which this object belongs. ;  ; TObject * DrawClone (Option_t *="""") const override;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c",MatchSource.WIKI,doc/master/classTGColorPopup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPopup.html
https://root.cern/doc/master/classTGColorPopup.html:6666,Modifiability,inherit,inheritance,6666,"es (TGFrame *child, Int_t x, Int_t y, Int_t &fx, Int_t &fy);  Translate coordinates to child frame. ;  ;  Public Member Functions inherited from TGFrame;  TGFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=0, Pixel_t back=GetDefaultFrameBackground());  Create a TGFrame object. Options is an OR of the EFrameTypes. ;  ;  TGFrame (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a frame using an externally created window. ;  ;  ~TGFrame () override;  Destructor. ;  ; virtual void Activate (Bool_t);  ; void AddInput (UInt_t emask);  Add events specified in the emask to the events the frame should handle. ;  ; virtual void ChangeBackground (Pixel_t back);  Change frame background color. ;  ; Bool_t Contains (Int_t x, Int_t y) const;  ; void Delete (Option_t *="""") override;  Delete this object. ;  ; virtual void DeleteWindow ();  Delete window. ;  ; virtual void DrawBorder ();  Draw frame border. ;  ; void DrawClass () const override;  Draw class inheritance tree of the class to which this object belongs. ;  ; TObject * DrawClone (Option_t *="""") const override;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void DrawCopy (Handle_t, Int_t, Int_t);  ; void Dump () const override;  Dump contents of object on stdout. ;  ; virtual Pixel_t GetBackground () const;  ; Int_t GetBorderWidth () const;  ; virtual TDNDData * GetDNDData (Atom_t);  ; virtual Int_t GetDragType () const;  Returns drag source type. ;  ; virtual Int_t GetDropType () const;  Returns drop target type. ;  ; UInt_t GetEventMask () const;  ; virtual Pixel_t GetForeground () const;  Return frame foreground color. ;  ; TGFrameElement * GetFrameElement () const;  ; UInt_t GetHeight () const;  ; UInt_t GetMaxHeight () const;  ; UInt_t GetMaxWidth () const;  ; UInt_t GetMinHeight () const;  ; UInt_t GetMinWidth () const;  ; virtual UInt_t GetOptions () const;  ; TGDimension GetSize () const;  ; UInt_t GetWidth () const;  ",MatchSource.WIKI,doc/master/classTGColorPopup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPopup.html
https://root.cern/doc/master/classTGColorPopup.html:11057,Modifiability,inherit,inherited,11057,"l_t onoff);  ; void SetDNDTarget (Bool_t onoff);  ; virtual void SetDragType (Int_t type);  SetDragType. ;  ; void SetDrawOption (Option_t *="""") override;  Set drawing option for object. ;  ; virtual void SetDropType (Int_t type);  SetDropType. ;  ; void SetEditable (Bool_t) override;  ; virtual void SetForegroundColor (Pixel_t);  ; void SetFrameElement (TGFrameElement *fe);  ; virtual void SetHeight (UInt_t h);  ; virtual void SetMaxHeight (UInt_t h);  ; virtual void SetMaxWidth (UInt_t w);  ; virtual void SetMinHeight (UInt_t h);  ; virtual void SetMinWidth (UInt_t w);  ; virtual void SetSize (const TGDimension &s);  ; virtual void SetWidth (UInt_t w);  ; virtual void SetX (Int_t x);  ; virtual void SetY (Int_t y);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UnmapWindow () override;  unmap window ;  ;  Public Member Functions inherited from TGWindow;  TGWindow (const TGWindow *p=nullptr, Int_t x=0, Int_t y=0, UInt_t w=0, UInt_t h=0, UInt_t border=0, Int_t depth=0, UInt_t clss=0, void *visual=nullptr, SetWindowAttributes_t *attr=nullptr, UInt_t wtype=0);  Create a new window. ;  ;  TGWindow (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a copy of a window. ;  ;  ~TGWindow () override;  Window destructor. Unregisters the window. ;  ; virtual void DestroySubwindows ();  destroy sub windows ;  ; virtual void DestroyWindow ();  destroy window ;  ; virtual UInt_t GetEditDisabled () const;  ; virtual const TGWindow * GetMainFrame () const;  Returns top level main frame. ;  ; const char * GetName () const override;  Return unique name, used in SavePrimitive methods. ;  ; const TGWindow * GetParent () const;  ; virtual Bool_t HandleExpose (Event_t *event);  ; virtual Bool_t HandleIdleEvent (TGIdleHandler *);  ; Bool_t HandleTimer (TTimer *) override;  Execute action in response of a timer timing out. ;  ; virtual void IconifyWindow ();  iconify win",MatchSource.WIKI,doc/master/classTGColorPopup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPopup.html
https://root.cern/doc/master/classTGColorPopup.html:12839,Modifiability,inherit,inherited,12839,"rent () const;  ; virtual Bool_t HandleExpose (Event_t *event);  ; virtual Bool_t HandleIdleEvent (TGIdleHandler *);  ; Bool_t HandleTimer (TTimer *) override;  Execute action in response of a timer timing out. ;  ; virtual void IconifyWindow ();  iconify window ;  ; TClass * IsA () const override;  ; virtual Bool_t IsMapped ();  Returns kTRUE if window is mapped on screen, kFALSE otherwise. ;  ; virtual void LowerWindow ();  lower window ;  ; void Print (Option_t *option="""") const override;  Print window id. ;  ; virtual void RaiseWindow ();  raise window ;  ; virtual void RequestFocus ();  request focus ;  ; virtual void SetBackgroundPixmap (Pixmap_t pixmap);  set background pixmap ;  ; virtual void SetName (const char *name);  ; virtual void SetWindowName (const char *name=nullptr);  Set window name. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGObject;  TGObject ();  ;  TGObject (const TGObject &tgo);  ;  ~TGObject () override;  TGObject destructor. ;  ; TGClient * GetClient () const;  ; Handle_t GetId () const;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsEqual (const TObject *obj) const override;  Equal comparison (TGObjects are equal if they have the same window identifier). ;  ; void SaveAs (const char *filename="""", Option_t *option="""") const override;  Write this TGObject to a file using TImage, if filename's extension signals a valid TImage::EImageFileType, as defined by TImage::GetImageFileTypeFromFilename(). ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you d",MatchSource.WIKI,doc/master/classTGColorPopup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPopup.html
https://root.cern/doc/master/classTGColorPopup.html:13574,Modifiability,inherit,inherited,13574,"al void SetName (const char *name);  ; virtual void SetWindowName (const char *name=nullptr);  Set window name. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGObject;  TGObject ();  ;  TGObject (const TGObject &tgo);  ;  ~TGObject () override;  TGObject destructor. ;  ; TGClient * GetClient () const;  ; Handle_t GetId () const;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsEqual (const TObject *obj) const override;  Equal comparison (TGObjects are equal if they have the same window identifier). ;  ; void SaveAs (const char *filename="""", Option_t *option="""") const override;  Write this TGObject to a file using TImage, if filename's extension signals a valid TImage::EImageFileType, as defined by TImage::GetImageFileTypeFromFilename(). ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,doc/master/classTGColorPopup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPopup.html
https://root.cern/doc/master/classTGColorPopup.html:16541,Modifiability,inherit,inherits,16541,"* FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handl",MatchSource.WIKI,doc/master/classTGColorPopup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPopup.html
https://root.cern/doc/master/classTGColorPopup.html:16658,Modifiability,inherit,inherits,16658,"nst TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base implementation is no-op). ;  ; void Obsolete (const char *method, const char *asOfVe",MatchSource.WIKI,doc/master/classTGColorPopup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPopup.html
https://root.cern/doc/master/classTGColorPopup.html:19776,Modifiability,inherit,inherited,19776,"f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from class cls and all its base-classes. ;  ; Bool_t Connect (const char *signal, const char *receiver_class, void *receiver, const char *slot);  Non-static method is used to connect from the signal of this object to the receiver slot. ;  ; virtual void Connected (const char *);  ; virtual void Destroyed ();  ; Bool_t Disconnect (const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal of this object from slot of receiver. ;  ; virtual void Disconnected (const char *);  ; void Emit (const char *signal);  Activate signal without args. ;  ; template<typename T > ; void Emit (const char *signal, const T &arg);  Activate signal with single paramet",MatchSource.WIKI,doc/master/classTGColorPopup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPopup.html
https://root.cern/doc/master/classTGColorPopup.html:21938,Modifiability,inherit,inherited,21938,"nections () const;  ; TList * GetListOfSignals () const;  ; virtual Bool_t HasConnection (const char *signal_name) const;  Return true if there is any object connected to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGCompositeFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetBckgndGC ();  Get background color graphics context. ;  ; static const TGGC & GetBlackGC ();  Get black graphics context. ;  ; static Pixel_t GetBlackPixel ();  Get black pixel value. ;  ; static Pixel_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get shadow color graphics context. ;  ; static const TGGC & GetWhiteGC ();  Get white graphics context. ;  ; static Pixel_t GetWhitePixel ();  Get white pixel value. ;  ;  Static Public Member Functions inherited from TGWind",MatchSource.WIKI,doc/master/classTGColorPopup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPopup.html
https://root.cern/doc/master/classTGColorPopup.html:22158,Modifiability,inherit,inherited,22158,"nections () const;  ; TList * GetListOfSignals () const;  ; virtual Bool_t HasConnection (const char *signal_name) const;  Return true if there is any object connected to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGCompositeFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetBckgndGC ();  Get background color graphics context. ;  ; static const TGGC & GetBlackGC ();  Get black graphics context. ;  ; static Pixel_t GetBlackPixel ();  Get black pixel value. ;  ; static Pixel_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get shadow color graphics context. ;  ; static const TGGC & GetWhiteGC ();  Get white graphics context. ;  ; static Pixel_t GetWhitePixel ();  Get white pixel value. ;  ;  Static Public Member Functions inherited from TGWind",MatchSource.WIKI,doc/master/classTGColorPopup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPopup.html
https://root.cern/doc/master/classTGColorPopup.html:23044,Modifiability,inherit,inherited,23044,erited from TGFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetBckgndGC ();  Get background color graphics context. ;  ; static const TGGC & GetBlackGC ();  Get black graphics context. ;  ; static Pixel_t GetBlackPixel ();  Get black pixel value. ;  ; static Pixel_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get shadow color graphics context. ;  ; static const TGGC & GetWhiteGC ();  Get white graphics context. ;  ; static Pixel_t GetWhitePixel ();  Get white pixel value. ;  ;  Static Public Member Functions inherited from TGWindow; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetCounter ();  Return global window counter (total number of created windows). ;  ;  Static Public Member Functions inherited from TGObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true,MatchSource.WIKI,doc/master/classTGColorPopup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPopup.html
https://root.cern/doc/master/classTGColorPopup.html:23354,Modifiability,inherit,inherited,23354,"_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get shadow color graphics context. ;  ; static const TGGC & GetWhiteGC ();  Get white graphics context. ;  ; static Pixel_t GetWhitePixel ();  Get white pixel value. ;  ;  Static Public Member Functions inherited from TGWindow; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetCounter ();  Return global window counter (total number of created windows). ;  ;  Static Public Member Functions inherited from TGObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This m",MatchSource.WIKI,doc/master/classTGColorPopup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPopup.html
https://root.cern/doc/master/classTGColorPopup.html:23566,Modifiability,inherit,inherited,23566,"_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get shadow color graphics context. ;  ; static const TGGC & GetWhiteGC ();  Get white graphics context. ;  ; static Pixel_t GetWhitePixel ();  Get white pixel value. ;  ;  Static Public Member Functions inherited from TGWindow; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetCounter ();  Return global window counter (total number of created windows). ;  ;  Static Public Member Functions inherited from TGObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This m",MatchSource.WIKI,doc/master/classTGColorPopup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPopup.html
https://root.cern/doc/master/classTGColorPopup.html:24084,Modifiability,inherit,inherited,24084," Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetCounter ();  Return global window counter (total number of created windows). ;  ;  Static Public Member Functions inherited from TGObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullpt",MatchSource.WIKI,doc/master/classTGColorPopup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPopup.html
https://root.cern/doc/master/classTGColorPopup.html:25505,Modifiability,inherit,inherited,25505,"any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Protected Attributes; Int_t fActive;  active color index ;  ; Pixel_t fCurrentColor;  currently selected color value ;  ; Int_t fLaunchDialog;  flag used for launching color dialog ;  ; const TGWindow * fMsgWindow;  window handling container messages ;  ;  Protected Attributes inherited from TGCompositeFrame; Bool_t fLayoutBroken;  no layout manager is used ;  ; TGLayoutManager * fLayoutManager;  layout manager ;  ; TList * fList;  container of frame elements ;  ; Bool_t fMapSubwindows;  kTRUE - map subwindows ;  ; Int_t fMustCleanup;  cleanup mode (see EFrameCleanup) ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive()",MatchSource.WIKI,doc/master/classTGColorPopup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPopup.html
https://root.cern/doc/master/classTGColorPopup.html:25829,Modifiability,inherit,inherited,25829,"any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Protected Attributes; Int_t fActive;  active color index ;  ; Pixel_t fCurrentColor;  currently selected color value ;  ; Int_t fLaunchDialog;  flag used for launching color dialog ;  ; const TGWindow * fMsgWindow;  window handling container messages ;  ;  Protected Attributes inherited from TGCompositeFrame; Bool_t fLayoutBroken;  no layout manager is used ;  ; TGLayoutManager * fLayoutManager;  layout manager ;  ; TList * fList;  container of frame elements ;  ; Bool_t fMapSubwindows;  kTRUE - map subwindows ;  ; Int_t fMustCleanup;  cleanup mode (see EFrameCleanup) ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive()",MatchSource.WIKI,doc/master/classTGColorPopup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPopup.html
https://root.cern/doc/master/classTGColorPopup.html:26461,Modifiability,inherit,inherited,26461," ;  ; Int_t fLaunchDialog;  flag used for launching color dialog ;  ; const TGWindow * fMsgWindow;  window handling container messages ;  ;  Protected Attributes inherited from TGCompositeFrame; Bool_t fLayoutBroken;  no layout manager is used ;  ; TGLayoutManager * fLayoutManager;  layout manager ;  ; TList * fList;  container of frame elements ;  ; Bool_t fMapSubwindows;  kTRUE - map subwindows ;  ; Int_t fMustCleanup;  cleanup mode (see EFrameCleanup) ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions;  TGColorPopup (const TGColorPopup &)=delete;  ; TGColorPopup & operator= (const TGColorPopup &)=delete;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( ",MatchSource.WIKI,doc/master/classTGColorPopup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPopup.html
https://root.cern/doc/master/classTGColorPopup.html:26738,Modifiability,inherit,inherited,26738,"eanup;  cleanup mode (see EFrameCleanup) ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions;  TGColorPopup (const TGColorPopup &)=delete;  ; TGColorPopup & operator= (const TGColorPopup &)=delete;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inhe",MatchSource.WIKI,doc/master/classTGColorPopup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPopup.html
https://root.cern/doc/master/classTGColorPopup.html:26890,Modifiability,inherit,inherited,26890,"DNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions;  TGColorPopup (const TGColorPopup &)=delete;  ; TGColorPopup & operator= (const TGColorPopup &)=delete;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0",MatchSource.WIKI,doc/master/classTGColorPopup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPopup.html
https://root.cern/doc/master/classTGColorPopup.html:27251,Modifiability,inherit,inherited,27251,"otected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions;  TGColorPopup (const TGColorPopup &)=delete;  ; TGColorPopup & operator= (const TGColorPopup &)=delete;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindo",MatchSource.WIKI,doc/master/classTGColorPopup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPopup.html
https://root.cern/doc/master/classTGColorPopup.html:27758,Modifiability,inherit,inherited,27758,"ay server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions;  TGColorPopup (const TGColorPopup &)=delete;  ; TGColorPopup & operator= (const TGColorPopup &)=delete;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString G",MatchSource.WIKI,doc/master/classTGColorPopup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPopup.html
https://root.cern/doc/master/classTGColorPopup.html:28399,Modifiability,inherit,inherited,28399,"DisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void Mak",MatchSource.WIKI,doc/master/classTGColorPopup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPopup.html
https://root.cern/doc/master/classTGColorPopup.html:28494,Modifiability,inherit,inherited,28494,"DisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void Mak",MatchSource.WIKI,doc/master/classTGColorPopup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPopup.html
https://root.cern/doc/master/classTGColorPopup.html:28593,Modifiability,inherit,inherited,28593,"DisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void Mak",MatchSource.WIKI,doc/master/classTGColorPopup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPopup.html
https://root.cern/doc/master/classTGColorPopup.html:29087,Modifiability,inherit,inherited,29087,"Pick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *",MatchSource.WIKI,doc/master/classTGColorPopup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPopup.html
https://root.cern/doc/master/classTGColorPopup.html:29251,Modifiability,inherit,inherited,29251,"Pick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *",MatchSource.WIKI,doc/master/classTGColorPopup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPopup.html
https://root.cern/doc/master/classTGColorPopup.html:29351,Modifiability,inherit,inherited,29351,"Pick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *",MatchSource.WIKI,doc/master/classTGColorPopup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPopup.html
https://root.cern/doc/master/classTGColorPopup.html:29562,Modifiability,inherit,inherited,29562,") override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Stat",MatchSource.WIKI,doc/master/classTGColorPopup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPopup.html
https://root.cern/doc/master/classTGColorPopup.html:29675,Modifiability,inherit,inherited,29675,") override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Stat",MatchSource.WIKI,doc/master/classTGColorPopup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPopup.html
https://root.cern/doc/master/classTGColorPopup.html:29801,Modifiability,inherit,inherited,29801," const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static ",MatchSource.WIKI,doc/master/classTGColorPopup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPopup.html
https://root.cern/doc/master/classTGColorPopup.html:30657,Modifiability,inherit,inherited,30657,"ame and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGColorSelect.h>. Inheritance diagram for TGColorPopup:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGColorPopup() [1/2]. TGColorPopup::TGColorPopup ; (; const TGColorPopup & ; ). privatedelete . ◆ TGColorPopup() [2/2]. TGColorPopup::TGColorPopup ; (; const TGWindow * ; p = nullptr, . const TGWindow * ; m = nullptr, . Pixel_t ; color = 0 . ). TGColorPopup constr",MatchSource.WIKI,doc/master/classTGColorPopup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPopup.html
https://root.cern/doc/master/classTGColorPopup.html:30771,Modifiability,inherit,inherited,30771,"ame and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGColorSelect.h>. Inheritance diagram for TGColorPopup:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGColorPopup() [1/2]. TGColorPopup::TGColorPopup ; (; const TGColorPopup & ; ). privatedelete . ◆ TGColorPopup() [2/2]. TGColorPopup::TGColorPopup ; (; const TGWindow * ; p = nullptr, . const TGWindow * ; m = nullptr, . Pixel_t ; color = 0 . ). TGColorPopup constr",MatchSource.WIKI,doc/master/classTGColorPopup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPopup.html
https://root.cern/doc/master/classTGColorPopup.html:31440,Modifiability,inherit,inherited,31440,"ame and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGColorSelect.h>. Inheritance diagram for TGColorPopup:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGColorPopup() [1/2]. TGColorPopup::TGColorPopup ; (; const TGColorPopup & ; ). privatedelete . ◆ TGColorPopup() [2/2]. TGColorPopup::TGColorPopup ; (; const TGWindow * ; p = nullptr, . const TGWindow * ; m = nullptr, . Pixel_t ; color = 0 . ). TGColorPopup constr",MatchSource.WIKI,doc/master/classTGColorPopup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPopup.html
https://root.cern/doc/master/classTGColorPopup.html:31572,Modifiability,inherit,inherited,31572,"ame and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGColorSelect.h>. Inheritance diagram for TGColorPopup:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGColorPopup() [1/2]. TGColorPopup::TGColorPopup ; (; const TGColorPopup & ; ). privatedelete . ◆ TGColorPopup() [2/2]. TGColorPopup::TGColorPopup ; (; const TGWindow * ; p = nullptr, . const TGWindow * ; m = nullptr, . Pixel_t ; color = 0 . ). TGColorPopup constr",MatchSource.WIKI,doc/master/classTGColorPopup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPopup.html
https://root.cern/doc/master/classTGColorPopup.html:13070,Security,hash,hash,13070,"n response of a timer timing out. ;  ; virtual void IconifyWindow ();  iconify window ;  ; TClass * IsA () const override;  ; virtual Bool_t IsMapped ();  Returns kTRUE if window is mapped on screen, kFALSE otherwise. ;  ; virtual void LowerWindow ();  lower window ;  ; void Print (Option_t *option="""") const override;  Print window id. ;  ; virtual void RaiseWindow ();  raise window ;  ; virtual void RequestFocus ();  request focus ;  ; virtual void SetBackgroundPixmap (Pixmap_t pixmap);  set background pixmap ;  ; virtual void SetName (const char *name);  ; virtual void SetWindowName (const char *name=nullptr);  Set window name. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGObject;  TGObject ();  ;  TGObject (const TGObject &tgo);  ;  ~TGObject () override;  TGObject destructor. ;  ; TGClient * GetClient () const;  ; Handle_t GetId () const;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsEqual (const TObject *obj) const override;  Equal comparison (TGObjects are equal if they have the same window identifier). ;  ; void SaveAs (const char *filename="""", Option_t *option="""") const override;  Write this TGObject to a file using TImage, if filename's extension signals a valid TImage::EImageFileType, as defined by TImage::GetImageFileTypeFromFilename(). ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse ob",MatchSource.WIKI,doc/master/classTGColorPopup.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorPopup.html
https://root.cern/doc/master/classTGColorSelect.html:451,Availability,down,down,451,". ROOT: TGColorSelect Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; Private Member Functions |; List of all members ; TGColorSelect Class ReferenceGUI » Low level GUI widgets. ; Like a checkbutton but instead of the check mark there is color area with a little down arrow. ; When clicked on the arrow the TGColorPopup pops up.; Selecting a color in this widget will generate the event:; kC_COLORSEL, kCOL_SELCHANGED, widget id, pixel. and the signal:. ColorSelected(Pixel_t color) . Definition at line 104 of file TGColorSelect.h. Public Member Functions;  TGColorSelect (const TGWindow *p=nullptr, Pixel_t color=0, Int_t id=-1);  TGColorSelect constructor. ;  ;  ~TGColorSelect () override;  TGColorSelect destructor. ;  ; virtual void AlphaColorSelected (ULong_t colptr=0);  ; virtual void ColorSelected (Pixel_t color=0);  ; void Disable ();  Set state of widget as disabled. ;  ; void Enable (Bool_t on=kTRUE);  Set state of widget as enabled. ;  ; Pixel_t GetColor () const;  ; TGDimension GetDefaultSize () const override;  default size ;  ; Bool_t HandleButton (Event_t *event) override;  Handle button events for TGColorSelect. ;  ; TClass * IsA () const override;  ; Bool_t ProcessMessage (Longptr_t msg, Longptr_t parm1, Longptr_t parm2) override;  Process messages for TGColorSelect. ;  ; void Rename (const char *title);  ; void SavePrimitive (std::ostream &out, Option_t *="""") override;  Save a color select widget as a C++ statement(s) on output stream out. ;  ; void SetAlphaColor (ULong_t color, Bool_t emit=kTRUE);  Set color. ;  ; void SetColor (Pixel_t color, Bool_t emit=kTRUE);  Set color. ;  ; void SetDown (Bool_t on=kTRUE, Bool_t emit=kFALSE) override;  ; void SetEnabled (Bool_t e=kTRUE) override;  Set enabled or disabled state of button. ;  ; void Streamer (TBuffer &) override;  Stre",MatchSource.WIKI,doc/master/classTGColorSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorSelect.html
https://root.cern/doc/master/classTGColorSelect.html:17536,Availability,error,error,17536,"="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTGColorSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorSelect.html
https://root.cern/doc/master/classTGColorSelect.html:17625,Availability,error,error,17625," object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual ",MatchSource.WIKI,doc/master/classTGColorSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorSelect.html
https://root.cern/doc/master/classTGColorSelect.html:17780,Availability,error,error,17780,"etup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; Bool_t HasInconsistentHash () const;  Return true is ",MatchSource.WIKI,doc/master/classTGColorSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorSelect.html
https://root.cern/doc/master/classTGColorSelect.html:18077,Availability,error,error,18077,"ject using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object in",MatchSource.WIKI,doc/master/classTGColorSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorSelect.html
https://root.cern/doc/master/classTGColorSelect.html:21620,Availability,error,error,21620,"sz);  ; void * operator new (size_t sz, void *vp);  ; void * operator new[] (size_t sz);  ; void * operator new[] (size_t sz, void *vp);  ; TObject & operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Paint (Option_t *option="""");  This method must be overridden if a class wants to paint itself. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class s",MatchSource.WIKI,doc/master/classTGColorSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorSelect.html
https://root.cern/doc/master/classTGColorSelect.html:32486,Availability,down,down,32486,rom TGWidget;  TGWidget (const TGWidget &tgw);  ; Int_t ClearFlags (Int_t flags);  ; TGWidget & operator= (const TGWidget &tgw);  ; Int_t SetFlags (Int_t flags);  . Protected Attributes; Pixel_t fColor;  color value of the button ;  ; TGColorPopup * fColorPopup;  color popup associated ;  ; TGGC fDrawGC;  drawing GC ;  ; TGPosition fPressPos;  position of frame on button press event ;  ;  Protected Attributes inherited from TGCheckButton; const TGPicture * fDisOff;  button disabled and was OFF picture ;  ; const TGPicture * fDisOn;  button disabled and was ON picture ;  ; const TGPicture * fOff;  button OFF picture ;  ; const TGPicture * fOn;  button ON picture ;  ; EButtonState fPrevState;  previous check button state ;  ;  Protected Attributes inherited from TGTextButton; FontStruct_t fFontStruct;  ; Bool_t fHasOwnFont;  ; Int_t fHKeycode;  ; TGHotString * fLabel;  ; Int_t fMBottom;  ; Int_t fMLeft;  ; Int_t fMRight;  ; Int_t fMTop;  ; Bool_t fPrevStateOn;  ; Bool_t fStateOn;  ; TGTextLayout * fTLayout;  ; Int_t fTMode;  ; Int_t fWrapLength;  ;  Protected Attributes inherited from TGButton; Pixel_t fBgndColor;  actual background color ;  ; TGButtonGroup * fGroup;  button group this button belongs to ;  ; Pixel_t fHighColor;  highlight color ;  ; GContext_t fNormGC;  graphics context used for drawing button ;  ; EButtonState fState;  button state ;  ; Bool_t fStayDown;  true if button has to stay down ;  ; UInt_t fStyle;  button style (modern or classic) ;  ; UInt_t fTHeight;  button height ;  ; TGToolTip * fTip;  tool tip associated with button ;  ; UInt_t fTWidth;  button width ;  ; void * fUserData;  pointer to user data structure ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight,MatchSource.WIKI,doc/master/classTGColorSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorSelect.html
https://root.cern/doc/master/classTGColorSelect.html:32951,Availability,mask,mask,32951,"utton belongs to ;  ; Pixel_t fHighColor;  highlight color ;  ; GContext_t fNormGC;  graphics context used for drawing button ;  ; EButtonState fState;  button state ;  ; Bool_t fStayDown;  true if button has to stay down ;  ; UInt_t fStyle;  button style (modern or classic) ;  ; UInt_t fTHeight;  button height ;  ; TGToolTip * fTip;  tool tip associated with button ;  ; UInt_t fTWidth;  button width ;  ; void * fUserData;  pointer to user data structure ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Protected Attributes inherited from TGWidget; TString fCommand;  command to be executed ;  ; const TGWindow * fMsgWindow;  window which handles widget events ;  ; Int_t fWidgetFlags;  widget status flags (OR of EWidgetStatus) ;  ; Int_t fWidgetId;  the widget id (used",MatchSource.WIKI,doc/master/classTGColorSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorSelect.html
https://root.cern/doc/master/classTGColorSelect.html:38752,Availability,down,down,38752," ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGColorSelect.h>. Inheritance diagram for TGColorSelect:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGColorSelect() [1/2]. TGColorSelect::TGColorSelect ; (; const TGColorSelect & ; ). privatedelete . ◆ TGColorSelect() [2/2]. TGColorSelect::TGColorSelect ; (; const TGWindow * ; p = nullptr, . Pixel_t ; color = 0, . Int_t ; id = -1 . ). TGColorSelect constructor. ; The TGColorSelect widget is like a checkbutton but instead of the check mark there is color area with a little down arrow. When clicked on the arrow the TGColorPopup pops up. ; Definition at line 406 of file TGColorSelect.cxx. ◆ ~TGColorSelect(). TGColorSelect::~TGColorSelect ; (; ). override . TGColorSelect destructor. ; Definition at line 428 of file TGColorSelect.cxx. Member Function Documentation. ◆ AlphaColorSelected(). virtual void TGColorSelect::AlphaColorSelected ; (; ULong_t ; colptr = 0). inlinevirtual . Definition at line 144 of file TGColorSelect.h. ◆ Class(). static TClass * TGColorSelect::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TGColorSelect::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TGColorSelect::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 147 of file TGColorSelect.h. ◆ ColorSelected(). virtual void TGColorSelect::ColorSelected ; (; Pixel_t ; color = 0). inlinevi",MatchSource.WIKI,doc/master/classTGColorSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorSelect.html
https://root.cern/doc/master/classTGColorSelect.html:1457,Integrability,message,messages,1457,"e check mark there is color area with a little down arrow. ; When clicked on the arrow the TGColorPopup pops up.; Selecting a color in this widget will generate the event:; kC_COLORSEL, kCOL_SELCHANGED, widget id, pixel. and the signal:. ColorSelected(Pixel_t color) . Definition at line 104 of file TGColorSelect.h. Public Member Functions;  TGColorSelect (const TGWindow *p=nullptr, Pixel_t color=0, Int_t id=-1);  TGColorSelect constructor. ;  ;  ~TGColorSelect () override;  TGColorSelect destructor. ;  ; virtual void AlphaColorSelected (ULong_t colptr=0);  ; virtual void ColorSelected (Pixel_t color=0);  ; void Disable ();  Set state of widget as disabled. ;  ; void Enable (Bool_t on=kTRUE);  Set state of widget as enabled. ;  ; Pixel_t GetColor () const;  ; TGDimension GetDefaultSize () const override;  default size ;  ; Bool_t HandleButton (Event_t *event) override;  Handle button events for TGColorSelect. ;  ; TClass * IsA () const override;  ; Bool_t ProcessMessage (Longptr_t msg, Longptr_t parm1, Longptr_t parm2) override;  Process messages for TGColorSelect. ;  ; void Rename (const char *title);  ; void SavePrimitive (std::ostream &out, Option_t *="""") override;  Save a color select widget as a C++ statement(s) on output stream out. ;  ; void SetAlphaColor (ULong_t color, Bool_t emit=kTRUE);  Set color. ;  ; void SetColor (Pixel_t color, Bool_t emit=kTRUE);  Set color. ;  ; void SetDown (Bool_t on=kTRUE, Bool_t emit=kFALSE) override;  ; void SetEnabled (Bool_t e=kTRUE) override;  Set enabled or disabled state of button. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGCheckButton;  TGCheckButton (const TGWindow *p, const char *s, const char *cmd, Int_t id=-1, GContext_t norm=GetDefaultGC()(), FontStruct_t font=GetDefaultFontStruct(), UInt_t option=0);  Create a check button widget. ;  ;  TGCheckButton (const TGWindow *p, TGH",MatchSource.WIKI,doc/master/classTGColorSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorSelect.html
https://root.cern/doc/master/classTGColorSelect.html:9916,Integrability,message,message,9916,"o which this object belongs. ;  ; TObject * DrawClone (Option_t *="""") const override;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void DrawCopy (Handle_t, Int_t, Int_t);  ; void Dump () const override;  Dump contents of object on stdout. ;  ; virtual Pixel_t GetBackground () const;  ; Int_t GetBorderWidth () const;  ; virtual UInt_t GetDefaultHeight () const;  ; virtual UInt_t GetDefaultWidth () const;  ; virtual TDNDData * GetDNDData (Atom_t);  ; virtual Int_t GetDragType () const;  Returns drag source type. ;  ; virtual Int_t GetDropType () const;  Returns drop target type. ;  ; UInt_t GetEventMask () const;  ; virtual Pixel_t GetForeground () const;  Return frame foreground color. ;  ; TGFrameElement * GetFrameElement () const;  ; virtual TGFrame * GetFrameFromPoint (Int_t x, Int_t y);  ; UInt_t GetHeight () const;  ; UInt_t GetMaxHeight () const;  ; UInt_t GetMaxWidth () const;  ; UInt_t GetMinHeight () const;  ; UInt_t GetMinWidth () const;  ; virtual UInt_t GetOptions () const;  ; TGDimension GetSize () const;  ; UInt_t GetWidth () const;  ; Int_t GetX () const;  ; Int_t GetY () const;  ; virtual Bool_t HandleClientMessage (Event_t *event);  Handle a client message. ;  ; virtual Bool_t HandleColormapChange (Event_t *);  ; virtual Bool_t HandleConfigureNotify (Event_t *event);  This event is generated when the frame is resized. ;  ; virtual Bool_t HandleDNDDrop (TDNDData *);  ; virtual Atom_t HandleDNDEnter (Atom_t *);  ; virtual Bool_t HandleDNDFinished ();  ; virtual Bool_t HandleDNDLeave ();  ; virtual Atom_t HandleDNDPosition (Int_t, Int_t, Atom_t, Int_t, Int_t);  ; virtual Bool_t HandleDoubleClick (Event_t *);  ; virtual Bool_t HandleDragDrop (TGFrame *, Int_t, Int_t, TGLayoutHints *);  ; virtual Bool_t HandleDragEnter (TGFrame *);  ; virtual Bool_t HandleDragLeave (TGFrame *);  ; virtual Bool_t HandleDragMotion (TGFrame *);  ; Bool_t HandleEvent (Event_t *event) override;  Handle all frame events.",MatchSource.WIKI,doc/master/classTGColorSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorSelect.html
https://root.cern/doc/master/classTGColorSelect.html:12399,Integrability,message,message,12399,"ow () override;  map window ;  ; void Move (Int_t x, Int_t y) override;  Move frame. ;  ; void MoveResize (Int_t x, Int_t y, UInt_t w=0, UInt_t h=0) override;  Move and/or resize the frame. ;  ; void Print (Option_t *option="""") const override;  Print window id. ;  ; virtual void ProcessedConfigure (Event_t *event);  ; virtual void ProcessedEvent (Event_t *event);  ; virtual void ReallyDelete ();  ; void RemoveInput (UInt_t emask);  Remove events specified in emask from the events the frame should handle. ;  ; void ReparentWindow (const TGWindow *p, Int_t x=0, Int_t y=0) override;  Reparent window, make p the new parent and position the window at position (x,y) in new parent. ;  ; virtual void Resize (TGDimension size);  Resize the frame. ;  ; void Resize (UInt_t w=0, UInt_t h=0) override;  Resize the frame. ;  ; void SaveUserColor (std::ostream &out, Option_t *);  Save a user color in a C++ macro file - used in SavePrimitive(). ;  ; virtual void SendMessage (const TGWindow *w, Longptr_t msg, Longptr_t parm1, Longptr_t parm2);  Send message (i.e. ;  ; void SetBackgroundColor (Pixel_t back) override;  Set background color (override from TGWindow base class). ;  ; virtual void SetCleanup (Int_t=kLocalCleanup);  ; void SetDNDSource (Bool_t onoff);  ; void SetDNDTarget (Bool_t onoff);  ; virtual void SetDragType (Int_t type);  SetDragType. ;  ; void SetDrawOption (Option_t *="""") override;  Set drawing option for object. ;  ; virtual void SetDropType (Int_t type);  SetDropType. ;  ; void SetEditable (Bool_t) override;  ; void SetFrameElement (TGFrameElement *fe);  ; virtual void SetHeight (UInt_t h);  ; virtual void SetLayoutBroken (Bool_t=kTRUE);  ; virtual void SetMaxHeight (UInt_t h);  ; virtual void SetMaxWidth (UInt_t w);  ; virtual void SetMinHeight (UInt_t h);  ; virtual void SetMinWidth (UInt_t w);  ; virtual void SetSize (const TGDimension &s);  ; virtual void SetWidth (UInt_t w);  ; virtual void SetX (Int_t x);  ; virtual void SetY (Int_t y);  ; void StreamerNVi",MatchSource.WIKI,doc/master/classTGColorSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorSelect.html
https://root.cern/doc/master/classTGColorSelect.html:17542,Integrability,message,message,17542,"="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTGColorSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorSelect.html
https://root.cern/doc/master/classTGColorSelect.html:18083,Integrability,message,message,18083,"ject using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object in",MatchSource.WIKI,doc/master/classTGColorSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorSelect.html
https://root.cern/doc/master/classTGColorSelect.html:18973,Integrability,message,message,18973," an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessar",MatchSource.WIKI,doc/master/classTGColorSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorSelect.html
https://root.cern/doc/master/classTGColorSelect.html:21626,Integrability,message,message,21626,"sz);  ; void * operator new (size_t sz, void *vp);  ; void * operator new[] (size_t sz);  ; void * operator new[] (size_t sz, void *vp);  ; TObject & operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Paint (Option_t *option="""");  This method must be overridden if a class wants to paint itself. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class s",MatchSource.WIKI,doc/master/classTGColorSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorSelect.html
https://root.cern/doc/master/classTGColorSelect.html:21999,Integrability,message,message,21999," pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from class cls and all its base-classes. ;  ; Bool_t Connect (const char *signal, const char *receiver_class, void *receiver, const char *slot);  Non-static method is used to connect from the signal of this object to the receiver slot. ;  ; virtual void Connected (const char *);  ; virtual void Destroyed ();  ; Bool_t Disconnect (const char *signal=nullptr, voi",MatchSource.WIKI,doc/master/classTGColorSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorSelect.html
https://root.cern/doc/master/classTGColorSelect.html:41662,Integrability,message,messages,41662,"Color(). Pixel_t TGColorSelect::GetColor ; (; ); const. inline . Definition at line 130 of file TGColorSelect.h. ◆ GetDefaultSize(). TGDimension TGColorSelect::GetDefaultSize ; (; ); const. inlineoverridevirtual . default size ; Reimplemented from TGCheckButton.; Definition at line 139 of file TGColorSelect.h. ◆ HandleButton(). Bool_t TGColorSelect::HandleButton ; (; Event_t * ; event). overridevirtual . Handle button events for TGColorSelect. ; Reimplemented from TGCheckButton.; Definition at line 469 of file TGColorSelect.cxx. ◆ IsA(). TClass * TGColorSelect::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TGCheckButton.; Definition at line 147 of file TGColorSelect.h. ◆ operator=(). TGColorSelect & TGColorSelect::operator= ; (; const TGColorSelect & ; ). privatedelete . ◆ ProcessMessage(). Bool_t TGColorSelect::ProcessMessage ; (; Longptr_t ; msg, . Longptr_t ; parm1, . Longptr_t ; parm2 . ). overridevirtual . Process messages for TGColorSelect. ; Reimplemented from TGFrame.; Definition at line 436 of file TGColorSelect.cxx. ◆ Rename(). void TGColorSelect::Rename ; (; const char * ; title). inline . Definition at line 136 of file TGColorSelect.h. ◆ SavePrimitive(). void TGColorSelect::SavePrimitive ; (; std::ostream & ; out, . Option_t * ; option = """" . ). overridevirtual . Save a color select widget as a C++ statement(s) on output stream out. ; Reimplemented from TGCheckButton.; Definition at line 677 of file TGColorSelect.cxx. ◆ SetAlphaColor(). void TGColorSelect::SetAlphaColor ; (; ULong_t ; color, . Bool_t ; emit = kTRUE . ). Set color. ; Definition at line 666 of file TGColorSelect.cxx. ◆ SetColor(). void TGColorSelect::SetColor ; (; Pixel_t ; color, . Bool_t ; emit = kTRUE . ). Set color. ; Definition at line 654 of file TGColorSelect.cxx. ◆ SetDown(). void TGColorSelect::SetDown ; (; Bool_t ; on = kTRUE, . Bool_t ; emit = kFALSE . ). inlineoverridevirtual . Reimplemented from TGButton.; Definition at",MatchSource.WIKI,doc/master/classTGColorSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorSelect.html
https://root.cern/doc/master/classTGColorSelect.html:2127,Modifiability,inherit,inherited,2127,"ize () const override;  default size ;  ; Bool_t HandleButton (Event_t *event) override;  Handle button events for TGColorSelect. ;  ; TClass * IsA () const override;  ; Bool_t ProcessMessage (Longptr_t msg, Longptr_t parm1, Longptr_t parm2) override;  Process messages for TGColorSelect. ;  ; void Rename (const char *title);  ; void SavePrimitive (std::ostream &out, Option_t *="""") override;  Save a color select widget as a C++ statement(s) on output stream out. ;  ; void SetAlphaColor (ULong_t color, Bool_t emit=kTRUE);  Set color. ;  ; void SetColor (Pixel_t color, Bool_t emit=kTRUE);  Set color. ;  ; void SetDown (Bool_t on=kTRUE, Bool_t emit=kFALSE) override;  ; void SetEnabled (Bool_t e=kTRUE) override;  Set enabled or disabled state of button. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGCheckButton;  TGCheckButton (const TGWindow *p, const char *s, const char *cmd, Int_t id=-1, GContext_t norm=GetDefaultGC()(), FontStruct_t font=GetDefaultFontStruct(), UInt_t option=0);  Create a check button widget. ;  ;  TGCheckButton (const TGWindow *p, TGHotString *s, Int_t id=-1, GContext_t norm=GetDefaultGC()(), FontStruct_t font=GetDefaultFontStruct(), UInt_t option=0);  Create a check button widget. ;  ;  TGCheckButton (const TGWindow *p=nullptr, const char *s=nullptr, Int_t id=-1, GContext_t norm=GetDefaultGC()(), FontStruct_t font=GetDefaultFontStruct(), UInt_t option=0);  Create a check button widget. ;  ;  ~TGCheckButton () override;  Delete a check button. ;  ; Bool_t HandleCrossing (Event_t *event) override;  Handle mouse crossing event. ;  ; Bool_t HandleKey (Event_t *event) override;  Handle key event. This function will be called when the hotkey is hit. ;  ; virtual Bool_t IsDisabledAndSelected () const;  ; Bool_t IsDown () const override;  ; Bool_t IsOn () const override;  ; Bool_t IsToggleButton () const override;  ;",MatchSource.WIKI,doc/master/classTGColorSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorSelect.html
https://root.cern/doc/master/classTGColorSelect.html:3500,Modifiability,inherit,inherited,3500,"ullptr, const char *s=nullptr, Int_t id=-1, GContext_t norm=GetDefaultGC()(), FontStruct_t font=GetDefaultFontStruct(), UInt_t option=0);  Create a check button widget. ;  ;  ~TGCheckButton () override;  Delete a check button. ;  ; Bool_t HandleCrossing (Event_t *event) override;  Handle mouse crossing event. ;  ; Bool_t HandleKey (Event_t *event) override;  Handle key event. This function will be called when the hotkey is hit. ;  ; virtual Bool_t IsDisabledAndSelected () const;  ; Bool_t IsDown () const override;  ; Bool_t IsOn () const override;  ; Bool_t IsToggleButton () const override;  ; virtual void SetDisabledAndSelected (Bool_t);  Set the state of a check button to disabled and either on or off. ;  ; void SetState (EButtonState state, Bool_t emit=kFALSE) override;  Set check button state. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGTextButton;  TGTextButton (const TGWindow *p, const char *s, const char *cmd, Int_t id=-1, GContext_t norm=GetDefaultGC()(), FontStruct_t font=GetDefaultFontStruct(), UInt_t option=kRaisedFrame|kDoubleBorder);  Create a text button widget and set cmd string at same time. ;  ;  TGTextButton (const TGWindow *p, TGHotString *s, Int_t id=-1, GContext_t norm=GetDefaultGC()(), FontStruct_t font=GetDefaultFontStruct(), UInt_t option=kRaisedFrame|kDoubleBorder);  Create a text button widget. ;  ;  TGTextButton (const TGWindow *p=nullptr, const char *s=nullptr, Int_t id=-1, GContext_t norm=GetDefaultGC()(), FontStruct_t font=GetDefaultFontStruct(), UInt_t option=kRaisedFrame|kDoubleBorder);  Create a text button widget. ;  ;  ~TGTextButton () override;  Delete a text button widget. ;  ; void ChangeText (const char *title);  ; Int_t GetBottomMargin () const;  ; TGDimension GetDefaultSize () const override;  returns default size ;  ; FontStruct_t GetFontStruct () const;  ; Int_t GetLeftMargin () const;  ; Int_t GetRightMargin () const;  ; TString GetString () const;  ; cons",MatchSource.WIKI,doc/master/classTGColorSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorSelect.html
https://root.cern/doc/master/classTGColorSelect.html:6355,Modifiability,inherit,inherited,6355,");  Changes text font specified by name. ;  ; virtual void SetFont (FontStruct_t font, Bool_t global=kFALSE);  Changes text font. ;  ; void SetForegroundColor (Pixel_t fore) override;  ; virtual void SetLeftMargin (Int_t val);  ; void SetMargins (Int_t left=0, Int_t right=0, Int_t top=0, Int_t bottom=0);  ; virtual void SetRightMargin (Int_t val);  ; virtual void SetText (const TString &new_label);  Set new button text. ;  ; virtual void SetText (TGHotString *new_label);  Set new button text. ;  ; virtual void SetTextColor (Pixel_t color, Bool_t global=kFALSE);  Changes text color. ;  ; virtual void SetTextJustify (Int_t tmode);  Set text justification. ;  ; virtual void SetTitle (const char *label);  ; virtual void SetTopMargin (Int_t val);  ; void SetWrapLength (Int_t wl);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGButton;  TGButton (const TGWindow *p=nullptr, Int_t id=-1, GContext_t norm=GetDefaultGC()(), UInt_t option=kRaisedFrame|kDoubleBorder);  Create button base class part. ;  ;  ~TGButton () override;  Delete button. ;  ; virtual void AllowStayDown (Bool_t a);  ; virtual void Clicked ();  ; TGButtonGroup * GetGroup () const;  ; GContext_t GetNormGC () const;  ; virtual EButtonState GetState () const;  ; virtual UInt_t GetStyle () const;  ; virtual TGToolTip * GetToolTip () const;  ; virtual void * GetUserData () const;  ; virtual Bool_t IsExclusiveToggle () const;  ; virtual void Pressed ();  ; virtual void Released ();  ; virtual void SetGroup (TGButtonGroup *gr);  Sets new button-group for this button. ;  ; virtual void SetOn (Bool_t on=kTRUE, Bool_t emit=kFALSE);  ; virtual void SetStyle (const char *style);  Set the button style (modern or classic). ;  ; virtual void SetStyle (UInt_t newstyle);  Set the button style (modern or classic). ;  ; virtual void SetToolTipText (const char *text, Long_t delayms=400);  Se",MatchSource.WIKI,doc/master/classTGColorSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorSelect.html
https://root.cern/doc/master/classTGColorSelect.html:7667,Modifiability,inherit,inherited,7667,"void Clicked ();  ; TGButtonGroup * GetGroup () const;  ; GContext_t GetNormGC () const;  ; virtual EButtonState GetState () const;  ; virtual UInt_t GetStyle () const;  ; virtual TGToolTip * GetToolTip () const;  ; virtual void * GetUserData () const;  ; virtual Bool_t IsExclusiveToggle () const;  ; virtual void Pressed ();  ; virtual void Released ();  ; virtual void SetGroup (TGButtonGroup *gr);  Sets new button-group for this button. ;  ; virtual void SetOn (Bool_t on=kTRUE, Bool_t emit=kFALSE);  ; virtual void SetStyle (const char *style);  Set the button style (modern or classic). ;  ; virtual void SetStyle (UInt_t newstyle);  Set the button style (modern or classic). ;  ; virtual void SetToolTipText (const char *text, Long_t delayms=400);  Set tool tip text associated with this button. ;  ; virtual void SetUserData (void *userData);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void Toggle (Bool_t emit=kFALSE);  ; virtual void Toggled (Bool_t on);  ;  Public Member Functions inherited from TGFrame;  TGFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=0, Pixel_t back=GetDefaultFrameBackground());  Create a TGFrame object. Options is an OR of the EFrameTypes. ;  ;  TGFrame (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a frame using an externally created window. ;  ;  ~TGFrame () override;  Destructor. ;  ; virtual void Activate (Bool_t);  ; void AddInput (UInt_t emask);  Add events specified in the emask to the events the frame should handle. ;  ; virtual void ChangeBackground (Pixel_t back);  Change frame background color. ;  ; virtual void ChangeOptions (UInt_t options);  Change frame options. Options is an OR of the EFrameTypes. ;  ; Bool_t Contains (Int_t x, Int_t y) const;  ; void Delete (Option_t *="""") override;  Delete this object. ;  ; virtual void DeleteWindow ();  Delete window. ;  ; virtual void DrawBorder ();  Draw frame border. ;  ; void DrawClass () const override;  Draw cla",MatchSource.WIKI,doc/master/classTGColorSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorSelect.html
https://root.cern/doc/master/classTGColorSelect.html:8644,Modifiability,inherit,inheritance,8644,"ic Member Functions inherited from TGFrame;  TGFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=0, Pixel_t back=GetDefaultFrameBackground());  Create a TGFrame object. Options is an OR of the EFrameTypes. ;  ;  TGFrame (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a frame using an externally created window. ;  ;  ~TGFrame () override;  Destructor. ;  ; virtual void Activate (Bool_t);  ; void AddInput (UInt_t emask);  Add events specified in the emask to the events the frame should handle. ;  ; virtual void ChangeBackground (Pixel_t back);  Change frame background color. ;  ; virtual void ChangeOptions (UInt_t options);  Change frame options. Options is an OR of the EFrameTypes. ;  ; Bool_t Contains (Int_t x, Int_t y) const;  ; void Delete (Option_t *="""") override;  Delete this object. ;  ; virtual void DeleteWindow ();  Delete window. ;  ; virtual void DrawBorder ();  Draw frame border. ;  ; void DrawClass () const override;  Draw class inheritance tree of the class to which this object belongs. ;  ; TObject * DrawClone (Option_t *="""") const override;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void DrawCopy (Handle_t, Int_t, Int_t);  ; void Dump () const override;  Dump contents of object on stdout. ;  ; virtual Pixel_t GetBackground () const;  ; Int_t GetBorderWidth () const;  ; virtual UInt_t GetDefaultHeight () const;  ; virtual UInt_t GetDefaultWidth () const;  ; virtual TDNDData * GetDNDData (Atom_t);  ; virtual Int_t GetDragType () const;  Returns drag source type. ;  ; virtual Int_t GetDropType () const;  Returns drop target type. ;  ; UInt_t GetEventMask () const;  ; virtual Pixel_t GetForeground () const;  Return frame foreground color. ;  ; TGFrameElement * GetFrameElement () const;  ; virtual TGFrame * GetFrameFromPoint (Int_t x, Int_t y);  ; UInt_t GetHeight () const;  ; UInt_t GetMaxHeight () const;  ; UInt_t GetMaxWidth () const;  ; UInt_t GetMinHei",MatchSource.WIKI,doc/master/classTGColorSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorSelect.html
https://root.cern/doc/master/classTGColorSelect.html:13474,Modifiability,inherit,inherited,13474,"ve(). ;  ; virtual void SendMessage (const TGWindow *w, Longptr_t msg, Longptr_t parm1, Longptr_t parm2);  Send message (i.e. ;  ; void SetBackgroundColor (Pixel_t back) override;  Set background color (override from TGWindow base class). ;  ; virtual void SetCleanup (Int_t=kLocalCleanup);  ; void SetDNDSource (Bool_t onoff);  ; void SetDNDTarget (Bool_t onoff);  ; virtual void SetDragType (Int_t type);  SetDragType. ;  ; void SetDrawOption (Option_t *="""") override;  Set drawing option for object. ;  ; virtual void SetDropType (Int_t type);  SetDropType. ;  ; void SetEditable (Bool_t) override;  ; void SetFrameElement (TGFrameElement *fe);  ; virtual void SetHeight (UInt_t h);  ; virtual void SetLayoutBroken (Bool_t=kTRUE);  ; virtual void SetMaxHeight (UInt_t h);  ; virtual void SetMaxWidth (UInt_t w);  ; virtual void SetMinHeight (UInt_t h);  ; virtual void SetMinWidth (UInt_t w);  ; virtual void SetSize (const TGDimension &s);  ; virtual void SetWidth (UInt_t w);  ; virtual void SetX (Int_t x);  ; virtual void SetY (Int_t y);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UnmapWindow () override;  unmap window ;  ;  Public Member Functions inherited from TGWindow;  TGWindow (const TGWindow *p=nullptr, Int_t x=0, Int_t y=0, UInt_t w=0, UInt_t h=0, UInt_t border=0, Int_t depth=0, UInt_t clss=0, void *visual=nullptr, SetWindowAttributes_t *attr=nullptr, UInt_t wtype=0);  Create a new window. ;  ;  TGWindow (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a copy of a window. ;  ;  ~TGWindow () override;  Window destructor. Unregisters the window. ;  ; virtual void DestroySubwindows ();  destroy sub windows ;  ; virtual void DestroyWindow ();  destroy window ;  ; virtual UInt_t GetEditDisabled () const;  ; virtual const TGWindow * GetMainFrame () const;  Returns top level main frame. ;  ; const char * GetName () const override;  Return unique name, used in SavePrimitive methods. ;  ; const TGWindow * GetParent () const;  ; ",MatchSource.WIKI,doc/master/classTGColorSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorSelect.html
https://root.cern/doc/master/classTGColorSelect.html:15440,Modifiability,inherit,inherited,15440,"nse of a timer timing out. ;  ; virtual void IconifyWindow ();  iconify window ;  ; TClass * IsA () const override;  ; virtual Bool_t IsMapped ();  Returns kTRUE if window is mapped on screen, kFALSE otherwise. ;  ; virtual Bool_t IsMapSubwindows () const;  ; virtual void LowerWindow ();  lower window ;  ; virtual Int_t MustCleanup () const;  ; void Print (Option_t *option="""") const override;  Print window id. ;  ; virtual void RaiseWindow ();  raise window ;  ; virtual void RequestFocus ();  request focus ;  ; virtual void SetBackgroundPixmap (Pixmap_t pixmap);  set background pixmap ;  ; virtual void SetEditDisabled (UInt_t on=kEditDisable);  ; virtual void SetMapSubwindows (Bool_t);  ; virtual void SetName (const char *name);  ; virtual void SetWindowName (const char *name=nullptr);  Set window name. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGObject;  TGObject ();  ;  TGObject (const TGObject &tgo);  ;  ~TGObject () override;  TGObject destructor. ;  ; TGClient * GetClient () const;  ; Handle_t GetId () const;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsEqual (const TObject *obj) const override;  Equal comparison (TGObjects are equal if they have the same window identifier). ;  ; void SaveAs (const char *filename="""", Option_t *option="""") const override;  Write this TGObject to a file using TImage, if filename's extension signals a valid TImage::EImageFileType, as defined by TImage::GetImageFileTypeFromFilename(). ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you d",MatchSource.WIKI,doc/master/classTGColorSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorSelect.html
https://root.cern/doc/master/classTGColorSelect.html:16175,Modifiability,inherit,inherited,16175,"al void SetName (const char *name);  ; virtual void SetWindowName (const char *name=nullptr);  Set window name. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGObject;  TGObject ();  ;  TGObject (const TGObject &tgo);  ;  ~TGObject () override;  TGObject destructor. ;  ; TGClient * GetClient () const;  ; Handle_t GetId () const;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsEqual (const TObject *obj) const override;  Equal comparison (TGObjects are equal if they have the same window identifier). ;  ; void SaveAs (const char *filename="""", Option_t *option="""") const override;  Write this TGObject to a file using TImage, if filename's extension signals a valid TImage::EImageFileType, as defined by TImage::GetImageFileTypeFromFilename(). ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,doc/master/classTGColorSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorSelect.html
https://root.cern/doc/master/classTGColorSelect.html:19071,Modifiability,inherit,inherits,19071,"r *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handl",MatchSource.WIKI,doc/master/classTGColorSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorSelect.html
https://root.cern/doc/master/classTGColorSelect.html:19188,Modifiability,inherit,inherits,19188," be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base implementation is no-op). ;  ; void Obsolete (const char *method, const char *asOfVe",MatchSource.WIKI,doc/master/classTGColorSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorSelect.html
https://root.cern/doc/master/classTGColorSelect.html:22306,Modifiability,inherit,inherited,22306,"f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from class cls and all its base-classes. ;  ; Bool_t Connect (const char *signal, const char *receiver_class, void *receiver, const char *slot);  Non-static method is used to connect from the signal of this object to the receiver slot. ;  ; virtual void Connected (const char *);  ; virtual void Destroyed ();  ; Bool_t Disconnect (const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal of this object from slot of receiver. ;  ; virtual void Disconnected (const char *);  ; void Emit (const char *signal);  Activate signal without args. ;  ; template<typename T > ; void Emit (const char *signal, const T &arg);  Activate signal with single paramet",MatchSource.WIKI,doc/master/classTGColorSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorSelect.html
https://root.cern/doc/master/classTGColorSelect.html:24274,Modifiability,inherit,inherited,24274,"a signal with a varying number of arguments. ;  ; TList * GetListOfClassSignals () const;  Returns pointer to list of signals of this class. ;  ; TList * GetListOfConnections () const;  ; TList * GetListOfSignals () const;  ; virtual Bool_t HasConnection (const char *signal_name) const;  Return true if there is any object connected to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGWidget;  TGWidget ();  ;  TGWidget (Int_t id);  ; virtual ~TGWidget ();  ; virtual void Associate (const TGWindow *w);  ; const char * GetCommand () const;  ; Bool_t HasFocus () const;  ; Bool_t IsEnabled () const;  ; virtual void SetCommand (const char *command);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Bool_t WantFocus () const;  ; Int_t WidgetId () const;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGCheckButton; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static FontStruct_t GetDefaultFontStruct ();  Return default font structure. ;  ; static const TGGC & GetDefaultGC ();  Return default graphics context. ;  ;  Static Public Member Functions inherited from TGTextButton; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static con",MatchSource.WIKI,doc/master/classTGColorSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorSelect.html
https://root.cern/doc/master/classTGColorSelect.html:24901,Modifiability,inherit,inherited,24901, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGWidget;  TGWidget ();  ;  TGWidget (Int_t id);  ; virtual ~TGWidget ();  ; virtual void Associate (const TGWindow *w);  ; const char * GetCommand () const;  ; Bool_t HasFocus () const;  ; Bool_t IsEnabled () const;  ; virtual void SetCommand (const char *command);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Bool_t WantFocus () const;  ; Int_t WidgetId () const;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGCheckButton; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static FontStruct_t GetDefaultFontStruct ();  Return default font structure. ;  ; static const TGGC & GetDefaultGC ();  Return default graphics context. ;  ;  Static Public Member Functions inherited from TGTextButton; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static FontStruct_t GetDefaultFontStruct ();  Return default font structure. ;  ;  Static Public Member Functions inherited from TGButton; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetDefaultGC ();  Return default graphics context. ;  ; static const TGGC & GetHibckgndGC ();  Return graphics context for highlighted frame backgro,MatchSource.WIKI,doc/master/classTGColorSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorSelect.html
https://root.cern/doc/master/classTGColorSelect.html:25276,Modifiability,inherit,inherited,25276,e (const TGWindow *w);  ; const char * GetCommand () const;  ; Bool_t HasFocus () const;  ; Bool_t IsEnabled () const;  ; virtual void SetCommand (const char *command);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Bool_t WantFocus () const;  ; Int_t WidgetId () const;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGCheckButton; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static FontStruct_t GetDefaultFontStruct ();  Return default font structure. ;  ; static const TGGC & GetDefaultGC ();  Return default graphics context. ;  ;  Static Public Member Functions inherited from TGTextButton; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static FontStruct_t GetDefaultFontStruct ();  Return default font structure. ;  ;  Static Public Member Functions inherited from TGButton; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetDefaultGC ();  Return default graphics context. ;  ; static const TGGC & GetHibckgndGC ();  Return graphics context for highlighted frame background. ;  ;  Static Public Member Functions inherited from TGFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetBckgndGC ();  Get background color graphics context. ;  ; static const TGGC & GetBlackGC ();  Get black graphics context. ;  ; static Pixel_t GetBlackPixel ();  Get black pixel value. ;  ; static Pixel_t GetDefaultFrameBa,MatchSource.WIKI,doc/master/classTGColorSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorSelect.html
https://root.cern/doc/master/classTGColorSelect.html:25574,Modifiability,inherit,inherited,25574,. Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGCheckButton; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static FontStruct_t GetDefaultFontStruct ();  Return default font structure. ;  ; static const TGGC & GetDefaultGC ();  Return default graphics context. ;  ;  Static Public Member Functions inherited from TGTextButton; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static FontStruct_t GetDefaultFontStruct ();  Return default font structure. ;  ;  Static Public Member Functions inherited from TGButton; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetDefaultGC ();  Return default graphics context. ;  ; static const TGGC & GetHibckgndGC ();  Return graphics context for highlighted frame background. ;  ;  Static Public Member Functions inherited from TGFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetBckgndGC ();  Get background color graphics context. ;  ; static const TGGC & GetBlackGC ();  Get black graphics context. ;  ; static Pixel_t GetBlackPixel ();  Get black pixel value. ;  ; static Pixel_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get shadow color graphics context,MatchSource.WIKI,doc/master/classTGColorSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorSelect.html
https://root.cern/doc/master/classTGColorSelect.html:25964,Modifiability,inherit,inherited,25964,leName ();  ; static FontStruct_t GetDefaultFontStruct ();  Return default font structure. ;  ; static const TGGC & GetDefaultGC ();  Return default graphics context. ;  ;  Static Public Member Functions inherited from TGTextButton; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static FontStruct_t GetDefaultFontStruct ();  Return default font structure. ;  ;  Static Public Member Functions inherited from TGButton; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetDefaultGC ();  Return default graphics context. ;  ; static const TGGC & GetHibckgndGC ();  Return graphics context for highlighted frame background. ;  ;  Static Public Member Functions inherited from TGFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetBckgndGC ();  Get background color graphics context. ;  ; static const TGGC & GetBlackGC ();  Get black graphics context. ;  ; static Pixel_t GetBlackPixel ();  Get black pixel value. ;  ; static Pixel_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get shadow color graphics context. ;  ; static const TGGC & GetWhiteGC ();  Get white graphics context. ;  ; static Pixel_t GetWhitePixel ();  Get white pixel value. ;  ;  Static Public Member Functions inherited from TGWindow; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetCounter ();  Return global,MatchSource.WIKI,doc/master/classTGColorSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorSelect.html
https://root.cern/doc/master/classTGColorSelect.html:26850,Modifiability,inherit,inherited,26850,erited from TGFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetBckgndGC ();  Get background color graphics context. ;  ; static const TGGC & GetBlackGC ();  Get black graphics context. ;  ; static Pixel_t GetBlackPixel ();  Get black pixel value. ;  ; static Pixel_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get shadow color graphics context. ;  ; static const TGGC & GetWhiteGC ();  Get white graphics context. ;  ; static Pixel_t GetWhitePixel ();  Get white pixel value. ;  ;  Static Public Member Functions inherited from TGWindow; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetCounter ();  Return global window counter (total number of created windows). ;  ;  Static Public Member Functions inherited from TGObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true,MatchSource.WIKI,doc/master/classTGColorSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorSelect.html
https://root.cern/doc/master/classTGColorSelect.html:27160,Modifiability,inherit,inherited,27160,"_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get shadow color graphics context. ;  ; static const TGGC & GetWhiteGC ();  Get white graphics context. ;  ; static Pixel_t GetWhitePixel ();  Get white pixel value. ;  ;  Static Public Member Functions inherited from TGWindow; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetCounter ();  Return global window counter (total number of created windows). ;  ;  Static Public Member Functions inherited from TGObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This m",MatchSource.WIKI,doc/master/classTGColorSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorSelect.html
https://root.cern/doc/master/classTGColorSelect.html:27372,Modifiability,inherit,inherited,27372,"_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get shadow color graphics context. ;  ; static const TGGC & GetWhiteGC ();  Get white graphics context. ;  ; static Pixel_t GetWhitePixel ();  Get white pixel value. ;  ;  Static Public Member Functions inherited from TGWindow; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetCounter ();  Return global window counter (total number of created windows). ;  ;  Static Public Member Functions inherited from TGObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This m",MatchSource.WIKI,doc/master/classTGColorSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorSelect.html
https://root.cern/doc/master/classTGColorSelect.html:27890,Modifiability,inherit,inherited,27890," Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetCounter ();  Return global window counter (total number of created windows). ;  ;  Static Public Member Functions inherited from TGObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullpt",MatchSource.WIKI,doc/master/classTGColorSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorSelect.html
https://root.cern/doc/master/classTGColorSelect.html:29065,Modifiability,inherit,inherited,29065," ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Static Public Member Functions inherited from TGWidget; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; void DoRedraw () override;  Redraw TGColorSelect widget. ;  ; void DrawTriangle (GContext_t gc, Int_t x, Int_t y);  Draw triangle (arrow) on which user can click to open TGColorPopup. ;  ;  Protected Member Functions inherited from TGCheckButton; void EmitSignals (Bool_t wasUp=kTRUE) override;  Emit signals. ;  ; void Init ();  Common check button initialization. ;  ; void PSetState (EButtonState state, Bool_t emit);  Set check button state. ;  ;  Protected Member Functions inherited from TGTextButton; void DoRedraw () override;  Draw the text button. ;  ; void Init ();  Common initialization used by the different ctors. ;  ;  Protected Member Functions inherited from TGButton; virtual void SetToggleButton (Bool_t);  ;  Protected Member Functions inherited from TGFrame; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h); ",MatchSource.WIKI,doc/master/classTGColorSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorSelect.html
https://root.cern/doc/master/classTGColorSelect.html:29490,Modifiability,inherit,inherited,29490," const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Static Public Member Functions inherited from TGWidget; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; void DoRedraw () override;  Redraw TGColorSelect widget. ;  ; void DrawTriangle (GContext_t gc, Int_t x, Int_t y);  Draw triangle (arrow) on which user can click to open TGColorPopup. ;  ;  Protected Member Functions inherited from TGCheckButton; void EmitSignals (Bool_t wasUp=kTRUE) override;  Emit signals. ;  ; void Init ();  Common check button initialization. ;  ; void PSetState (EButtonState state, Bool_t emit);  Set check button state. ;  ;  Protected Member Functions inherited from TGTextButton; void DoRedraw () override;  Draw the text button. ;  ; void Init ();  Common initialization used by the different ctors. ;  ;  Protected Member Functions inherited from TGButton; virtual void SetToggleButton (Bool_t);  ;  Protected Member Functions inherited from TGFrame; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWi",MatchSource.WIKI,doc/master/classTGColorSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorSelect.html
https://root.cern/doc/master/classTGColorSelect.html:29752,Modifiability,inherit,inherited,29752,"t char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Static Public Member Functions inherited from TGWidget; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; void DoRedraw () override;  Redraw TGColorSelect widget. ;  ; void DrawTriangle (GContext_t gc, Int_t x, Int_t y);  Draw triangle (arrow) on which user can click to open TGColorPopup. ;  ;  Protected Member Functions inherited from TGCheckButton; void EmitSignals (Bool_t wasUp=kTRUE) override;  Emit signals. ;  ; void Init ();  Common check button initialization. ;  ; void PSetState (EButtonState state, Bool_t emit);  Set check button state. ;  ;  Protected Member Functions inherited from TGTextButton; void DoRedraw () override;  Draw the text button. ;  ; void Init ();  Common initialization used by the different ctors. ;  ;  Protected Member Functions inherited from TGButton; virtual void SetToggleButton (Bool_t);  ;  Protected Member Functions inherited from TGFrame; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void ",MatchSource.WIKI,doc/master/classTGColorSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorSelect.html
https://root.cern/doc/master/classTGColorSelect.html:29935,Modifiability,inherit,inherited,29935,"ic Public Member Functions inherited from TGWidget; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; void DoRedraw () override;  Redraw TGColorSelect widget. ;  ; void DrawTriangle (GContext_t gc, Int_t x, Int_t y);  Draw triangle (arrow) on which user can click to open TGColorPopup. ;  ;  Protected Member Functions inherited from TGCheckButton; void EmitSignals (Bool_t wasUp=kTRUE) override;  Emit signals. ;  ; void Init ();  Common check button initialization. ;  ; void PSetState (EButtonState state, Bool_t emit);  Set check button state. ;  ;  Protected Member Functions inherited from TGTextButton; void DoRedraw () override;  Draw the text button. ;  ; void Init ();  Common initialization used by the different ctors. ;  ;  Protected Member Functions inherited from TGButton; virtual void SetToggleButton (Bool_t);  ;  Protected Member Functions inherited from TGFrame; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Protected M",MatchSource.WIKI,doc/master/classTGColorSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorSelect.html
https://root.cern/doc/master/classTGColorSelect.html:30030,Modifiability,inherit,inherited,30030,"ic Public Member Functions inherited from TGWidget; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; void DoRedraw () override;  Redraw TGColorSelect widget. ;  ; void DrawTriangle (GContext_t gc, Int_t x, Int_t y);  Draw triangle (arrow) on which user can click to open TGColorPopup. ;  ;  Protected Member Functions inherited from TGCheckButton; void EmitSignals (Bool_t wasUp=kTRUE) override;  Emit signals. ;  ; void Init ();  Common check button initialization. ;  ; void PSetState (EButtonState state, Bool_t emit);  Set check button state. ;  ;  Protected Member Functions inherited from TGTextButton; void DoRedraw () override;  Draw the text button. ;  ; void Init ();  Common initialization used by the different ctors. ;  ;  Protected Member Functions inherited from TGButton; virtual void SetToggleButton (Bool_t);  ;  Protected Member Functions inherited from TGFrame; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Protected M",MatchSource.WIKI,doc/master/classTGColorSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorSelect.html
https://root.cern/doc/master/classTGColorSelect.html:30473,Modifiability,inherit,inherited,30473,"onState state, Bool_t emit);  Set check button state. ;  ;  Protected Member Functions inherited from TGTextButton; void DoRedraw () override;  Draw the text button. ;  ; void Init ();  Common initialization used by the different ctors. ;  ;  Protected Member Functions inherited from TGButton; virtual void SetToggleButton (Bool_t);  ;  Protected Member Functions inherited from TGFrame; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Protected Member Functions inherited from TGWidget;  TGWidget (const TGWidget &tgw);  ; Int_t ClearFlags (Int_t flags);  ; TGWidget & operator= (const TGWidget &tgw);  ; Int_t SetFlags (Int_t flags);  . Protected Attributes; Pixel_t fColor;  color value of the button ;  ; TGColorPopup * fColorPopup;  color popup associated ;  ; TGGC fDrawGC;  drawing GC ;  ; TGPosition fPressPos;  position of frame on button press event ;  ;  Protected Attributes inherited from TGCheckButton; const TGPicture * fDisOff;  button disabled and was OFF picture ;  ; const TGPicture * fDisOn;  button disabled and was ON picture ;  ; const TGPicture * fOf",MatchSource.WIKI,doc/master/classTGColorSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorSelect.html
https://root.cern/doc/master/classTGColorSelect.html:30637,Modifiability,inherit,inherited,30637,"onState state, Bool_t emit);  Set check button state. ;  ;  Protected Member Functions inherited from TGTextButton; void DoRedraw () override;  Draw the text button. ;  ; void Init ();  Common initialization used by the different ctors. ;  ;  Protected Member Functions inherited from TGButton; virtual void SetToggleButton (Bool_t);  ;  Protected Member Functions inherited from TGFrame; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Protected Member Functions inherited from TGWidget;  TGWidget (const TGWidget &tgw);  ; Int_t ClearFlags (Int_t flags);  ; TGWidget & operator= (const TGWidget &tgw);  ; Int_t SetFlags (Int_t flags);  . Protected Attributes; Pixel_t fColor;  color value of the button ;  ; TGColorPopup * fColorPopup;  color popup associated ;  ; TGGC fDrawGC;  drawing GC ;  ; TGPosition fPressPos;  position of frame on button press event ;  ;  Protected Attributes inherited from TGCheckButton; const TGPicture * fDisOff;  button disabled and was OFF picture ;  ; const TGPicture * fDisOn;  button disabled and was ON picture ;  ; const TGPicture * fOf",MatchSource.WIKI,doc/master/classTGColorSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorSelect.html
https://root.cern/doc/master/classTGColorSelect.html:30737,Modifiability,inherit,inherited,30737,"onState state, Bool_t emit);  Set check button state. ;  ;  Protected Member Functions inherited from TGTextButton; void DoRedraw () override;  Draw the text button. ;  ; void Init ();  Common initialization used by the different ctors. ;  ;  Protected Member Functions inherited from TGButton; virtual void SetToggleButton (Bool_t);  ;  Protected Member Functions inherited from TGFrame; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Protected Member Functions inherited from TGWidget;  TGWidget (const TGWidget &tgw);  ; Int_t ClearFlags (Int_t flags);  ; TGWidget & operator= (const TGWidget &tgw);  ; Int_t SetFlags (Int_t flags);  . Protected Attributes; Pixel_t fColor;  color value of the button ;  ; TGColorPopup * fColorPopup;  color popup associated ;  ; TGGC fDrawGC;  drawing GC ;  ; TGPosition fPressPos;  position of frame on button press event ;  ;  Protected Attributes inherited from TGCheckButton; const TGPicture * fDisOff;  button disabled and was OFF picture ;  ; const TGPicture * fDisOn;  button disabled and was ON picture ;  ; const TGPicture * fOf",MatchSource.WIKI,doc/master/classTGColorSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorSelect.html
https://root.cern/doc/master/classTGColorSelect.html:30948,Modifiability,inherit,inherited,30948,"l void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Protected Member Functions inherited from TGWidget;  TGWidget (const TGWidget &tgw);  ; Int_t ClearFlags (Int_t flags);  ; TGWidget & operator= (const TGWidget &tgw);  ; Int_t SetFlags (Int_t flags);  . Protected Attributes; Pixel_t fColor;  color value of the button ;  ; TGColorPopup * fColorPopup;  color popup associated ;  ; TGGC fDrawGC;  drawing GC ;  ; TGPosition fPressPos;  position of frame on button press event ;  ;  Protected Attributes inherited from TGCheckButton; const TGPicture * fDisOff;  button disabled and was OFF picture ;  ; const TGPicture * fDisOn;  button disabled and was ON picture ;  ; const TGPicture * fOff;  button OFF picture ;  ; const TGPicture * fOn;  button ON picture ;  ; EButtonState fPrevState;  previous check button state ;  ;  Protected Attributes inherited from TGTextButton; FontStruct_t fFontStruct;  ; Bool_t fHasOwnFont;  ; Int_t fHKeycode;  ; TGHotString * fLabel;  ; Int_t fMBottom;  ; Int_t fMLeft;  ; Int_t fMRight;  ; Int_t fMTop;  ; Bool_t fPrevStateOn;  ; Bool_t fStateOn;  ;",MatchSource.WIKI,doc/master/classTGColorSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorSelect.html
https://root.cern/doc/master/classTGColorSelect.html:31054,Modifiability,inherit,inherited,31054,"l void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Protected Member Functions inherited from TGWidget;  TGWidget (const TGWidget &tgw);  ; Int_t ClearFlags (Int_t flags);  ; TGWidget & operator= (const TGWidget &tgw);  ; Int_t SetFlags (Int_t flags);  . Protected Attributes; Pixel_t fColor;  color value of the button ;  ; TGColorPopup * fColorPopup;  color popup associated ;  ; TGGC fDrawGC;  drawing GC ;  ; TGPosition fPressPos;  position of frame on button press event ;  ;  Protected Attributes inherited from TGCheckButton; const TGPicture * fDisOff;  button disabled and was OFF picture ;  ; const TGPicture * fDisOn;  button disabled and was ON picture ;  ; const TGPicture * fOff;  button OFF picture ;  ; const TGPicture * fOn;  button ON picture ;  ; EButtonState fPrevState;  previous check button state ;  ;  Protected Attributes inherited from TGTextButton; FontStruct_t fFontStruct;  ; Bool_t fHasOwnFont;  ; Int_t fHKeycode;  ; TGHotString * fLabel;  ; Int_t fMBottom;  ; Int_t fMLeft;  ; Int_t fMRight;  ; Int_t fMTop;  ; Bool_t fPrevStateOn;  ; Bool_t fStateOn;  ;",MatchSource.WIKI,doc/master/classTGColorSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorSelect.html
https://root.cern/doc/master/classTGColorSelect.html:31478,Modifiability,inherit,inherited,31478,rom TGWidget;  TGWidget (const TGWidget &tgw);  ; Int_t ClearFlags (Int_t flags);  ; TGWidget & operator= (const TGWidget &tgw);  ; Int_t SetFlags (Int_t flags);  . Protected Attributes; Pixel_t fColor;  color value of the button ;  ; TGColorPopup * fColorPopup;  color popup associated ;  ; TGGC fDrawGC;  drawing GC ;  ; TGPosition fPressPos;  position of frame on button press event ;  ;  Protected Attributes inherited from TGCheckButton; const TGPicture * fDisOff;  button disabled and was OFF picture ;  ; const TGPicture * fDisOn;  button disabled and was ON picture ;  ; const TGPicture * fOff;  button OFF picture ;  ; const TGPicture * fOn;  button ON picture ;  ; EButtonState fPrevState;  previous check button state ;  ;  Protected Attributes inherited from TGTextButton; FontStruct_t fFontStruct;  ; Bool_t fHasOwnFont;  ; Int_t fHKeycode;  ; TGHotString * fLabel;  ; Int_t fMBottom;  ; Int_t fMLeft;  ; Int_t fMRight;  ; Int_t fMTop;  ; Bool_t fPrevStateOn;  ; Bool_t fStateOn;  ; TGTextLayout * fTLayout;  ; Int_t fTMode;  ; Int_t fWrapLength;  ;  Protected Attributes inherited from TGButton; Pixel_t fBgndColor;  actual background color ;  ; TGButtonGroup * fGroup;  button group this button belongs to ;  ; Pixel_t fHighColor;  highlight color ;  ; GContext_t fNormGC;  graphics context used for drawing button ;  ; EButtonState fState;  button state ;  ; Bool_t fStayDown;  true if button has to stay down ;  ; UInt_t fStyle;  button style (modern or classic) ;  ; UInt_t fTHeight;  button height ;  ; TGToolTip * fTip;  tool tip associated with button ;  ; UInt_t fTWidth;  button width ;  ; void * fUserData;  pointer to user data structure ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight,MatchSource.WIKI,doc/master/classTGColorSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorSelect.html
https://root.cern/doc/master/classTGColorSelect.html:31821,Modifiability,inherit,inherited,31821,rom TGWidget;  TGWidget (const TGWidget &tgw);  ; Int_t ClearFlags (Int_t flags);  ; TGWidget & operator= (const TGWidget &tgw);  ; Int_t SetFlags (Int_t flags);  . Protected Attributes; Pixel_t fColor;  color value of the button ;  ; TGColorPopup * fColorPopup;  color popup associated ;  ; TGGC fDrawGC;  drawing GC ;  ; TGPosition fPressPos;  position of frame on button press event ;  ;  Protected Attributes inherited from TGCheckButton; const TGPicture * fDisOff;  button disabled and was OFF picture ;  ; const TGPicture * fDisOn;  button disabled and was ON picture ;  ; const TGPicture * fOff;  button OFF picture ;  ; const TGPicture * fOn;  button ON picture ;  ; EButtonState fPrevState;  previous check button state ;  ;  Protected Attributes inherited from TGTextButton; FontStruct_t fFontStruct;  ; Bool_t fHasOwnFont;  ; Int_t fHKeycode;  ; TGHotString * fLabel;  ; Int_t fMBottom;  ; Int_t fMLeft;  ; Int_t fMRight;  ; Int_t fMTop;  ; Bool_t fPrevStateOn;  ; Bool_t fStateOn;  ; TGTextLayout * fTLayout;  ; Int_t fTMode;  ; Int_t fWrapLength;  ;  Protected Attributes inherited from TGButton; Pixel_t fBgndColor;  actual background color ;  ; TGButtonGroup * fGroup;  button group this button belongs to ;  ; Pixel_t fHighColor;  highlight color ;  ; GContext_t fNormGC;  graphics context used for drawing button ;  ; EButtonState fState;  button state ;  ; Bool_t fStayDown;  true if button has to stay down ;  ; UInt_t fStyle;  button style (modern or classic) ;  ; UInt_t fTHeight;  button height ;  ; TGToolTip * fTip;  tool tip associated with button ;  ; UInt_t fTWidth;  button width ;  ; void * fUserData;  pointer to user data structure ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight,MatchSource.WIKI,doc/master/classTGColorSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorSelect.html
https://root.cern/doc/master/classTGColorSelect.html:32150,Modifiability,inherit,inherited,32150,rom TGWidget;  TGWidget (const TGWidget &tgw);  ; Int_t ClearFlags (Int_t flags);  ; TGWidget & operator= (const TGWidget &tgw);  ; Int_t SetFlags (Int_t flags);  . Protected Attributes; Pixel_t fColor;  color value of the button ;  ; TGColorPopup * fColorPopup;  color popup associated ;  ; TGGC fDrawGC;  drawing GC ;  ; TGPosition fPressPos;  position of frame on button press event ;  ;  Protected Attributes inherited from TGCheckButton; const TGPicture * fDisOff;  button disabled and was OFF picture ;  ; const TGPicture * fDisOn;  button disabled and was ON picture ;  ; const TGPicture * fOff;  button OFF picture ;  ; const TGPicture * fOn;  button ON picture ;  ; EButtonState fPrevState;  previous check button state ;  ;  Protected Attributes inherited from TGTextButton; FontStruct_t fFontStruct;  ; Bool_t fHasOwnFont;  ; Int_t fHKeycode;  ; TGHotString * fLabel;  ; Int_t fMBottom;  ; Int_t fMLeft;  ; Int_t fMRight;  ; Int_t fMTop;  ; Bool_t fPrevStateOn;  ; Bool_t fStateOn;  ; TGTextLayout * fTLayout;  ; Int_t fTMode;  ; Int_t fWrapLength;  ;  Protected Attributes inherited from TGButton; Pixel_t fBgndColor;  actual background color ;  ; TGButtonGroup * fGroup;  button group this button belongs to ;  ; Pixel_t fHighColor;  highlight color ;  ; GContext_t fNormGC;  graphics context used for drawing button ;  ; EButtonState fState;  button state ;  ; Bool_t fStayDown;  true if button has to stay down ;  ; UInt_t fStyle;  button style (modern or classic) ;  ; UInt_t fTHeight;  button height ;  ; TGToolTip * fTip;  tool tip associated with button ;  ; UInt_t fTWidth;  button width ;  ; void * fUserData;  pointer to user data structure ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight,MatchSource.WIKI,doc/master/classTGColorSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorSelect.html
https://root.cern/doc/master/classTGColorSelect.html:32755,Modifiability,inherit,inherited,32755,rom TGWidget;  TGWidget (const TGWidget &tgw);  ; Int_t ClearFlags (Int_t flags);  ; TGWidget & operator= (const TGWidget &tgw);  ; Int_t SetFlags (Int_t flags);  . Protected Attributes; Pixel_t fColor;  color value of the button ;  ; TGColorPopup * fColorPopup;  color popup associated ;  ; TGGC fDrawGC;  drawing GC ;  ; TGPosition fPressPos;  position of frame on button press event ;  ;  Protected Attributes inherited from TGCheckButton; const TGPicture * fDisOff;  button disabled and was OFF picture ;  ; const TGPicture * fDisOn;  button disabled and was ON picture ;  ; const TGPicture * fOff;  button OFF picture ;  ; const TGPicture * fOn;  button ON picture ;  ; EButtonState fPrevState;  previous check button state ;  ;  Protected Attributes inherited from TGTextButton; FontStruct_t fFontStruct;  ; Bool_t fHasOwnFont;  ; Int_t fHKeycode;  ; TGHotString * fLabel;  ; Int_t fMBottom;  ; Int_t fMLeft;  ; Int_t fMRight;  ; Int_t fMTop;  ; Bool_t fPrevStateOn;  ; Bool_t fStateOn;  ; TGTextLayout * fTLayout;  ; Int_t fTMode;  ; Int_t fWrapLength;  ;  Protected Attributes inherited from TGButton; Pixel_t fBgndColor;  actual background color ;  ; TGButtonGroup * fGroup;  button group this button belongs to ;  ; Pixel_t fHighColor;  highlight color ;  ; GContext_t fNormGC;  graphics context used for drawing button ;  ; EButtonState fState;  button state ;  ; Bool_t fStayDown;  true if button has to stay down ;  ; UInt_t fStyle;  button style (modern or classic) ;  ; UInt_t fTHeight;  button height ;  ; TGToolTip * fTip;  tool tip associated with button ;  ; UInt_t fTWidth;  button width ;  ; void * fUserData;  pointer to user data structure ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight,MatchSource.WIKI,doc/master/classTGColorSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorSelect.html
https://root.cern/doc/master/classTGColorSelect.html:33387,Modifiability,inherit,inherited,33387,"utton belongs to ;  ; Pixel_t fHighColor;  highlight color ;  ; GContext_t fNormGC;  graphics context used for drawing button ;  ; EButtonState fState;  button state ;  ; Bool_t fStayDown;  true if button has to stay down ;  ; UInt_t fStyle;  button style (modern or classic) ;  ; UInt_t fTHeight;  button height ;  ; TGToolTip * fTip;  tool tip associated with button ;  ; UInt_t fTWidth;  button width ;  ; void * fUserData;  pointer to user data structure ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Protected Attributes inherited from TGWidget; TString fCommand;  command to be executed ;  ; const TGWindow * fMsgWindow;  window which handles widget events ;  ; Int_t fWidgetFlags;  widget status flags (OR of EWidgetStatus) ;  ; Int_t fWidgetId;  the widget id (used",MatchSource.WIKI,doc/master/classTGColorSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorSelect.html
https://root.cern/doc/master/classTGColorSelect.html:33664,Modifiability,inherit,inherited,33664,"serData;  pointer to user data structure ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Protected Attributes inherited from TGWidget; TString fCommand;  command to be executed ;  ; const TGWindow * fMsgWindow;  window which handles widget events ;  ; Int_t fWidgetFlags;  widget status flags (OR of EWidgetStatus) ;  ; Int_t fWidgetId;  the widget id (used for event processing) ;  . Private Member Functions;  TGColorSelect (const TGColorSelect &)=delete;  ; TGColorSelect & operator= (const TGColorSelect &)=delete;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL <",MatchSource.WIKI,doc/master/classTGColorSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorSelect.html
https://root.cern/doc/master/classTGColorSelect.html:33816,Modifiability,inherit,inherited,33816,"t ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Protected Attributes inherited from TGWidget; TString fCommand;  command to be executed ;  ; const TGWindow * fMsgWindow;  window which handles widget events ;  ; Int_t fWidgetFlags;  widget status flags (OR of EWidgetStatus) ;  ; Int_t fWidgetId;  the widget id (used for event processing) ;  . Private Member Functions;  TGColorSelect (const TGColorSelect &)=delete;  ; TGColorSelect & operator= (const TGColorSelect &)=delete;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x0100000",MatchSource.WIKI,doc/master/classTGColorSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorSelect.html
https://root.cern/doc/master/classTGColorSelect.html:34022,Modifiability,inherit,inherited,34022,"t ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Protected Attributes inherited from TGWidget; TString fCommand;  command to be executed ;  ; const TGWindow * fMsgWindow;  window which handles widget events ;  ; Int_t fWidgetFlags;  widget status flags (OR of EWidgetStatus) ;  ; Int_t fWidgetId;  the widget id (used for event processing) ;  . Private Member Functions;  TGColorSelect (const TGColorSelect &)=delete;  ; TGColorSelect & operator= (const TGColorSelect &)=delete;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x0100000",MatchSource.WIKI,doc/master/classTGColorSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorSelect.html
https://root.cern/doc/master/classTGColorSelect.html:34478,Modifiability,inherit,inherited,34478,"ited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Protected Attributes inherited from TGWidget; TString fCommand;  command to be executed ;  ; const TGWindow * fMsgWindow;  window which handles widget events ;  ; Int_t fWidgetFlags;  widget status flags (OR of EWidgetStatus) ;  ; Int_t fWidgetId;  the widget id (used for event processing) ;  . Private Member Functions;  TGColorSelect (const TGColorSelect &)=delete;  ; TGColorSelect & operator= (const TGColorSelect &)=delete;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindo",MatchSource.WIKI,doc/master/classTGColorSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorSelect.html
https://root.cern/doc/master/classTGColorSelect.html:34985,Modifiability,inherit,inherited,34985,"d from TGWidget; TString fCommand;  command to be executed ;  ; const TGWindow * fMsgWindow;  window which handles widget events ;  ; Int_t fWidgetFlags;  widget status flags (OR of EWidgetStatus) ;  ; Int_t fWidgetId;  the widget id (used for event processing) ;  . Private Member Functions;  TGColorSelect (const TGColorSelect &)=delete;  ; TGColorSelect & operator= (const TGColorSelect &)=delete;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TCla",MatchSource.WIKI,doc/master/classTGColorSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorSelect.html
https://root.cern/doc/master/classTGColorSelect.html:35626,Modifiability,inherit,inherited,35626,"t = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sen",MatchSource.WIKI,doc/master/classTGColorSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorSelect.html
https://root.cern/doc/master/classTGColorSelect.html:35721,Modifiability,inherit,inherited,35721,"t = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sen",MatchSource.WIKI,doc/master/classTGColorSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorSelect.html
https://root.cern/doc/master/classTGColorSelect.html:35827,Modifiability,inherit,inherited,35827,"t = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sen",MatchSource.WIKI,doc/master/classTGColorSelect.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTGColorSelect.html
