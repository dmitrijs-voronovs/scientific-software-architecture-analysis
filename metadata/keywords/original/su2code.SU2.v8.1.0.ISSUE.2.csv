id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/su2code/SU2/pull/840:308,Integrability,rout,routine,308,"## Proposed Changes. This is a very small fix for periodic boundary conditions. In the MatchPeriodic routine, there is a check to make sure we never map to the same point when finding periodic pairs. However, if a node lies on the axis of rotation it has to map on to itself. The checks in the MatchPeriodic routine does not allow for this possibility and this node would end up getting mapped to the nearest neighbor which will lead to wrong results. . This PR introduces a small modification to the MatchPeriodic routine that will allow nodes on the axis to map onto themselves. . ## Related Work. As a test, consider the dummy geometry below. The domain is periodic about the Z-axis. I added a wall BC in the middle of the domain and the flow is supposed to separate at that point. This case is not very realistic but the main idea was to have periodic boundaries with points on the axis of rotation. The domain and the boundary conditions are similar to what we typically have when solving turbine blades. I wasn't sure if I can share the geometry, so I made this dummy test case. This case diverges with the develop branch. The image is from an intermediate result using the fix.; ![sample_test_case_fix](https://user-images.githubusercontent.com/28007882/70721921-b4425500-1cf6-11ea-829c-7d91ca8bb1ef.jpeg). A quick way to verify if the nodes are matched properly is to check the velocity on the nodes that lie on the axis of rotation. Due to the periodicity constraint, the velocities must be aligned with the axis (here the Z-axis) which can be seen here as well. ![vel](https://user-images.githubusercontent.com/28007882/70722647-eef8bd00-1cf7-11ea-9b25-971f9718e151.jpeg). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X] I am submitting my contribution to the develop branch.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/840
https://github.com/su2code/SU2/pull/840:515,Integrability,rout,routine,515,"## Proposed Changes. This is a very small fix for periodic boundary conditions. In the MatchPeriodic routine, there is a check to make sure we never map to the same point when finding periodic pairs. However, if a node lies on the axis of rotation it has to map on to itself. The checks in the MatchPeriodic routine does not allow for this possibility and this node would end up getting mapped to the nearest neighbor which will lead to wrong results. . This PR introduces a small modification to the MatchPeriodic routine that will allow nodes on the axis to map onto themselves. . ## Related Work. As a test, consider the dummy geometry below. The domain is periodic about the Z-axis. I added a wall BC in the middle of the domain and the flow is supposed to separate at that point. This case is not very realistic but the main idea was to have periodic boundaries with points on the axis of rotation. The domain and the boundary conditions are similar to what we typically have when solving turbine blades. I wasn't sure if I can share the geometry, so I made this dummy test case. This case diverges with the develop branch. The image is from an intermediate result using the fix.; ![sample_test_case_fix](https://user-images.githubusercontent.com/28007882/70721921-b4425500-1cf6-11ea-829c-7d91ca8bb1ef.jpeg). A quick way to verify if the nodes are matched properly is to check the velocity on the nodes that lie on the axis of rotation. Due to the periodicity constraint, the velocities must be aligned with the axis (here the Z-axis) which can be seen here as well. ![vel](https://user-images.githubusercontent.com/28007882/70722647-eef8bd00-1cf7-11ea-9b25-971f9718e151.jpeg). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X] I am submitting my contribution to the develop branch.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/840
https://github.com/su2code/SU2/pull/840:605,Testability,test,test,605,"## Proposed Changes. This is a very small fix for periodic boundary conditions. In the MatchPeriodic routine, there is a check to make sure we never map to the same point when finding periodic pairs. However, if a node lies on the axis of rotation it has to map on to itself. The checks in the MatchPeriodic routine does not allow for this possibility and this node would end up getting mapped to the nearest neighbor which will lead to wrong results. . This PR introduces a small modification to the MatchPeriodic routine that will allow nodes on the axis to map onto themselves. . ## Related Work. As a test, consider the dummy geometry below. The domain is periodic about the Z-axis. I added a wall BC in the middle of the domain and the flow is supposed to separate at that point. This case is not very realistic but the main idea was to have periodic boundaries with points on the axis of rotation. The domain and the boundary conditions are similar to what we typically have when solving turbine blades. I wasn't sure if I can share the geometry, so I made this dummy test case. This case diverges with the develop branch. The image is from an intermediate result using the fix.; ![sample_test_case_fix](https://user-images.githubusercontent.com/28007882/70721921-b4425500-1cf6-11ea-829c-7d91ca8bb1ef.jpeg). A quick way to verify if the nodes are matched properly is to check the velocity on the nodes that lie on the axis of rotation. Due to the periodicity constraint, the velocities must be aligned with the axis (here the Z-axis) which can be seen here as well. ![vel](https://user-images.githubusercontent.com/28007882/70722647-eef8bd00-1cf7-11ea-9b25-971f9718e151.jpeg). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X] I am submitting my contribution to the develop branch.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/840
https://github.com/su2code/SU2/pull/840:1074,Testability,test,test,1074,"for periodic boundary conditions. In the MatchPeriodic routine, there is a check to make sure we never map to the same point when finding periodic pairs. However, if a node lies on the axis of rotation it has to map on to itself. The checks in the MatchPeriodic routine does not allow for this possibility and this node would end up getting mapped to the nearest neighbor which will lead to wrong results. . This PR introduces a small modification to the MatchPeriodic routine that will allow nodes on the axis to map onto themselves. . ## Related Work. As a test, consider the dummy geometry below. The domain is periodic about the Z-axis. I added a wall BC in the middle of the domain and the flow is supposed to separate at that point. This case is not very realistic but the main idea was to have periodic boundaries with points on the axis of rotation. The domain and the boundary conditions are similar to what we typically have when solving turbine blades. I wasn't sure if I can share the geometry, so I made this dummy test case. This case diverges with the develop branch. The image is from an intermediate result using the fix.; ![sample_test_case_fix](https://user-images.githubusercontent.com/28007882/70721921-b4425500-1cf6-11ea-829c-7d91ca8bb1ef.jpeg). A quick way to verify if the nodes are matched properly is to check the velocity on the nodes that lie on the axis of rotation. Due to the periodicity constraint, the velocities must be aligned with the axis (here the Z-axis) which can be seen here as well. ![vel](https://user-images.githubusercontent.com/28007882/70722647-eef8bd00-1cf7-11ea-9b25-971f9718e151.jpeg). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X] I am submitting my contribution to the develop branch.; - [ X] My contribution generates no new comp",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/840
https://github.com/su2code/SU2/pull/840:2236,Testability,test,test,2236,"earest neighbor which will lead to wrong results. . This PR introduces a small modification to the MatchPeriodic routine that will allow nodes on the axis to map onto themselves. . ## Related Work. As a test, consider the dummy geometry below. The domain is periodic about the Z-axis. I added a wall BC in the middle of the domain and the flow is supposed to separate at that point. This case is not very realistic but the main idea was to have periodic boundaries with points on the axis of rotation. The domain and the boundary conditions are similar to what we typically have when solving turbine blades. I wasn't sure if I can share the geometry, so I made this dummy test case. This case diverges with the develop branch. The image is from an intermediate result using the fix.; ![sample_test_case_fix](https://user-images.githubusercontent.com/28007882/70721921-b4425500-1cf6-11ea-829c-7d91ca8bb1ef.jpeg). A quick way to verify if the nodes are matched properly is to check the velocity on the nodes that lie on the axis of rotation. Due to the periodicity constraint, the velocities must be aligned with the axis (here the Z-axis) which can be seen here as well. ![vel](https://user-images.githubusercontent.com/28007882/70722647-eef8bd00-1cf7-11ea-9b25-971f9718e151.jpeg). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X] I am submitting my contribution to the develop branch.; - [ X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/840
https://github.com/su2code/SU2/pull/840:1855,Usability,guid,guide,1855,"earest neighbor which will lead to wrong results. . This PR introduces a small modification to the MatchPeriodic routine that will allow nodes on the axis to map onto themselves. . ## Related Work. As a test, consider the dummy geometry below. The domain is periodic about the Z-axis. I added a wall BC in the middle of the domain and the flow is supposed to separate at that point. This case is not very realistic but the main idea was to have periodic boundaries with points on the axis of rotation. The domain and the boundary conditions are similar to what we typically have when solving turbine blades. I wasn't sure if I can share the geometry, so I made this dummy test case. This case diverges with the develop branch. The image is from an intermediate result using the fix.; ![sample_test_case_fix](https://user-images.githubusercontent.com/28007882/70721921-b4425500-1cf6-11ea-829c-7d91ca8bb1ef.jpeg). A quick way to verify if the nodes are matched properly is to check the velocity on the nodes that lie on the axis of rotation. Due to the periodicity constraint, the velocities must be aligned with the axis (here the Z-axis) which can be seen here as well. ![vel](https://user-images.githubusercontent.com/28007882/70722647-eef8bd00-1cf7-11ea-9b25-971f9718e151.jpeg). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X] I am submitting my contribution to the develop branch.; - [ X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/840
https://github.com/su2code/SU2/issues/841:991,Energy Efficiency,Monitor,Monitor,991,"be the bug**. If I set EQUIV_AREA to YES and prepare necessary near-field boundary marker in version 6.2.0, nearfield_flow.dat and Equivalent_Area.dat are output but not in version 7.0.0 anymore. I did some investigation in the code. nearfield_flow.dat and Equivalent_Area.dat seem to be output by the code below in output_structure_legacy.cpp.; `void COutputLegacy::SpecialOutput_SonicBoom`. It is called out in `void COutputLegacy::SetConvHistory_Body` in output_structure_legacy.cpp. It is then called out in the following lines in CDriver.cpp but none of them seems to be for sonicboom case, which I think is the cause for this bug.; `output_legacy->SetConvHistory_Body(&ConvHist_file[iZone][iInst], geometry_container, solver_container,`; `output_legacy->SetConvHistory_Body(&ConvHist_file[iZone][iInst], geometry_container, solver_container,`; `output_legacy->SetConvHistory_Body(NULL, geometry_container, solver_container, config_container,`. In version 6.2.0, `bool CDriver::Monitor(unsigned long ExtIter)` in driver_structure.cpp had `output->SetConvHistory_Body` and I think this was eventually calling out `SpecialOutput_SonicBoom`. I think this function has been accidentally removed by the change below but I'm not sure how to fix it.; https://github.com/su2code/SU2/pull/724 . It would be great if sonicboom case is included in the regression test of test cases. ""biparabolic"" uses this feature but does not seem to be included in the regression test. This test case does not converge at least on my computer though. **To Reproduce**. [v7_sonicboom.zip](https://github.com/su2code/SU2/files/3968025/v7_sonicboom.zip); NACA64206_sonicboom_v6.cfg is a config file for version 6.; NACA64206_sonicboom_v7.cfg is a config file for version 7.; The mesh file is common for both cases. **Desktop (please complete the following information):**; - OS: Linux (Ubuntu 18.04.3 LTS); - C++ compiler and version: g++ 7.4.0; - MPI implementation and version: OpenMPI 2.1.1; - SU2 Version: v6.2.0 and v7",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/841
https://github.com/su2code/SU2/issues/841:1672,Modifiability,config,config,1672,"and prepare necessary near-field boundary marker in version 6.2.0, nearfield_flow.dat and Equivalent_Area.dat are output but not in version 7.0.0 anymore. I did some investigation in the code. nearfield_flow.dat and Equivalent_Area.dat seem to be output by the code below in output_structure_legacy.cpp.; `void COutputLegacy::SpecialOutput_SonicBoom`. It is called out in `void COutputLegacy::SetConvHistory_Body` in output_structure_legacy.cpp. It is then called out in the following lines in CDriver.cpp but none of them seems to be for sonicboom case, which I think is the cause for this bug.; `output_legacy->SetConvHistory_Body(&ConvHist_file[iZone][iInst], geometry_container, solver_container,`; `output_legacy->SetConvHistory_Body(&ConvHist_file[iZone][iInst], geometry_container, solver_container,`; `output_legacy->SetConvHistory_Body(NULL, geometry_container, solver_container, config_container,`. In version 6.2.0, `bool CDriver::Monitor(unsigned long ExtIter)` in driver_structure.cpp had `output->SetConvHistory_Body` and I think this was eventually calling out `SpecialOutput_SonicBoom`. I think this function has been accidentally removed by the change below but I'm not sure how to fix it.; https://github.com/su2code/SU2/pull/724 . It would be great if sonicboom case is included in the regression test of test cases. ""biparabolic"" uses this feature but does not seem to be included in the regression test. This test case does not converge at least on my computer though. **To Reproduce**. [v7_sonicboom.zip](https://github.com/su2code/SU2/files/3968025/v7_sonicboom.zip); NACA64206_sonicboom_v6.cfg is a config file for version 6.; NACA64206_sonicboom_v7.cfg is a config file for version 7.; The mesh file is common for both cases. **Desktop (please complete the following information):**; - OS: Linux (Ubuntu 18.04.3 LTS); - C++ compiler and version: g++ 7.4.0; - MPI implementation and version: OpenMPI 2.1.1; - SU2 Version: v6.2.0 and v7.0.0. Thank you in advance for your help.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/841
https://github.com/su2code/SU2/issues/841:1732,Modifiability,config,config,1732,"and prepare necessary near-field boundary marker in version 6.2.0, nearfield_flow.dat and Equivalent_Area.dat are output but not in version 7.0.0 anymore. I did some investigation in the code. nearfield_flow.dat and Equivalent_Area.dat seem to be output by the code below in output_structure_legacy.cpp.; `void COutputLegacy::SpecialOutput_SonicBoom`. It is called out in `void COutputLegacy::SetConvHistory_Body` in output_structure_legacy.cpp. It is then called out in the following lines in CDriver.cpp but none of them seems to be for sonicboom case, which I think is the cause for this bug.; `output_legacy->SetConvHistory_Body(&ConvHist_file[iZone][iInst], geometry_container, solver_container,`; `output_legacy->SetConvHistory_Body(&ConvHist_file[iZone][iInst], geometry_container, solver_container,`; `output_legacy->SetConvHistory_Body(NULL, geometry_container, solver_container, config_container,`. In version 6.2.0, `bool CDriver::Monitor(unsigned long ExtIter)` in driver_structure.cpp had `output->SetConvHistory_Body` and I think this was eventually calling out `SpecialOutput_SonicBoom`. I think this function has been accidentally removed by the change below but I'm not sure how to fix it.; https://github.com/su2code/SU2/pull/724 . It would be great if sonicboom case is included in the regression test of test cases. ""biparabolic"" uses this feature but does not seem to be included in the regression test. This test case does not converge at least on my computer though. **To Reproduce**. [v7_sonicboom.zip](https://github.com/su2code/SU2/files/3968025/v7_sonicboom.zip); NACA64206_sonicboom_v6.cfg is a config file for version 6.; NACA64206_sonicboom_v7.cfg is a config file for version 7.; The mesh file is common for both cases. **Desktop (please complete the following information):**; - OS: Linux (Ubuntu 18.04.3 LTS); - C++ compiler and version: g++ 7.4.0; - MPI implementation and version: OpenMPI 2.1.1; - SU2 Version: v6.2.0 and v7.0.0. Thank you in advance for your help.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/841
https://github.com/su2code/SU2/issues/841:1365,Testability,test,test,1365,"and prepare necessary near-field boundary marker in version 6.2.0, nearfield_flow.dat and Equivalent_Area.dat are output but not in version 7.0.0 anymore. I did some investigation in the code. nearfield_flow.dat and Equivalent_Area.dat seem to be output by the code below in output_structure_legacy.cpp.; `void COutputLegacy::SpecialOutput_SonicBoom`. It is called out in `void COutputLegacy::SetConvHistory_Body` in output_structure_legacy.cpp. It is then called out in the following lines in CDriver.cpp but none of them seems to be for sonicboom case, which I think is the cause for this bug.; `output_legacy->SetConvHistory_Body(&ConvHist_file[iZone][iInst], geometry_container, solver_container,`; `output_legacy->SetConvHistory_Body(&ConvHist_file[iZone][iInst], geometry_container, solver_container,`; `output_legacy->SetConvHistory_Body(NULL, geometry_container, solver_container, config_container,`. In version 6.2.0, `bool CDriver::Monitor(unsigned long ExtIter)` in driver_structure.cpp had `output->SetConvHistory_Body` and I think this was eventually calling out `SpecialOutput_SonicBoom`. I think this function has been accidentally removed by the change below but I'm not sure how to fix it.; https://github.com/su2code/SU2/pull/724 . It would be great if sonicboom case is included in the regression test of test cases. ""biparabolic"" uses this feature but does not seem to be included in the regression test. This test case does not converge at least on my computer though. **To Reproduce**. [v7_sonicboom.zip](https://github.com/su2code/SU2/files/3968025/v7_sonicboom.zip); NACA64206_sonicboom_v6.cfg is a config file for version 6.; NACA64206_sonicboom_v7.cfg is a config file for version 7.; The mesh file is common for both cases. **Desktop (please complete the following information):**; - OS: Linux (Ubuntu 18.04.3 LTS); - C++ compiler and version: g++ 7.4.0; - MPI implementation and version: OpenMPI 2.1.1; - SU2 Version: v6.2.0 and v7.0.0. Thank you in advance for your help.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/841
https://github.com/su2code/SU2/issues/841:1373,Testability,test,test,1373,"and prepare necessary near-field boundary marker in version 6.2.0, nearfield_flow.dat and Equivalent_Area.dat are output but not in version 7.0.0 anymore. I did some investigation in the code. nearfield_flow.dat and Equivalent_Area.dat seem to be output by the code below in output_structure_legacy.cpp.; `void COutputLegacy::SpecialOutput_SonicBoom`. It is called out in `void COutputLegacy::SetConvHistory_Body` in output_structure_legacy.cpp. It is then called out in the following lines in CDriver.cpp but none of them seems to be for sonicboom case, which I think is the cause for this bug.; `output_legacy->SetConvHistory_Body(&ConvHist_file[iZone][iInst], geometry_container, solver_container,`; `output_legacy->SetConvHistory_Body(&ConvHist_file[iZone][iInst], geometry_container, solver_container,`; `output_legacy->SetConvHistory_Body(NULL, geometry_container, solver_container, config_container,`. In version 6.2.0, `bool CDriver::Monitor(unsigned long ExtIter)` in driver_structure.cpp had `output->SetConvHistory_Body` and I think this was eventually calling out `SpecialOutput_SonicBoom`. I think this function has been accidentally removed by the change below but I'm not sure how to fix it.; https://github.com/su2code/SU2/pull/724 . It would be great if sonicboom case is included in the regression test of test cases. ""biparabolic"" uses this feature but does not seem to be included in the regression test. This test case does not converge at least on my computer though. **To Reproduce**. [v7_sonicboom.zip](https://github.com/su2code/SU2/files/3968025/v7_sonicboom.zip); NACA64206_sonicboom_v6.cfg is a config file for version 6.; NACA64206_sonicboom_v7.cfg is a config file for version 7.; The mesh file is common for both cases. **Desktop (please complete the following information):**; - OS: Linux (Ubuntu 18.04.3 LTS); - C++ compiler and version: g++ 7.4.0; - MPI implementation and version: OpenMPI 2.1.1; - SU2 Version: v6.2.0 and v7.0.0. Thank you in advance for your help.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/841
https://github.com/su2code/SU2/issues/841:1468,Testability,test,test,1468,"and prepare necessary near-field boundary marker in version 6.2.0, nearfield_flow.dat and Equivalent_Area.dat are output but not in version 7.0.0 anymore. I did some investigation in the code. nearfield_flow.dat and Equivalent_Area.dat seem to be output by the code below in output_structure_legacy.cpp.; `void COutputLegacy::SpecialOutput_SonicBoom`. It is called out in `void COutputLegacy::SetConvHistory_Body` in output_structure_legacy.cpp. It is then called out in the following lines in CDriver.cpp but none of them seems to be for sonicboom case, which I think is the cause for this bug.; `output_legacy->SetConvHistory_Body(&ConvHist_file[iZone][iInst], geometry_container, solver_container,`; `output_legacy->SetConvHistory_Body(&ConvHist_file[iZone][iInst], geometry_container, solver_container,`; `output_legacy->SetConvHistory_Body(NULL, geometry_container, solver_container, config_container,`. In version 6.2.0, `bool CDriver::Monitor(unsigned long ExtIter)` in driver_structure.cpp had `output->SetConvHistory_Body` and I think this was eventually calling out `SpecialOutput_SonicBoom`. I think this function has been accidentally removed by the change below but I'm not sure how to fix it.; https://github.com/su2code/SU2/pull/724 . It would be great if sonicboom case is included in the regression test of test cases. ""biparabolic"" uses this feature but does not seem to be included in the regression test. This test case does not converge at least on my computer though. **To Reproduce**. [v7_sonicboom.zip](https://github.com/su2code/SU2/files/3968025/v7_sonicboom.zip); NACA64206_sonicboom_v6.cfg is a config file for version 6.; NACA64206_sonicboom_v7.cfg is a config file for version 7.; The mesh file is common for both cases. **Desktop (please complete the following information):**; - OS: Linux (Ubuntu 18.04.3 LTS); - C++ compiler and version: g++ 7.4.0; - MPI implementation and version: OpenMPI 2.1.1; - SU2 Version: v6.2.0 and v7.0.0. Thank you in advance for your help.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/841
https://github.com/su2code/SU2/issues/841:1479,Testability,test,test,1479,"and prepare necessary near-field boundary marker in version 6.2.0, nearfield_flow.dat and Equivalent_Area.dat are output but not in version 7.0.0 anymore. I did some investigation in the code. nearfield_flow.dat and Equivalent_Area.dat seem to be output by the code below in output_structure_legacy.cpp.; `void COutputLegacy::SpecialOutput_SonicBoom`. It is called out in `void COutputLegacy::SetConvHistory_Body` in output_structure_legacy.cpp. It is then called out in the following lines in CDriver.cpp but none of them seems to be for sonicboom case, which I think is the cause for this bug.; `output_legacy->SetConvHistory_Body(&ConvHist_file[iZone][iInst], geometry_container, solver_container,`; `output_legacy->SetConvHistory_Body(&ConvHist_file[iZone][iInst], geometry_container, solver_container,`; `output_legacy->SetConvHistory_Body(NULL, geometry_container, solver_container, config_container,`. In version 6.2.0, `bool CDriver::Monitor(unsigned long ExtIter)` in driver_structure.cpp had `output->SetConvHistory_Body` and I think this was eventually calling out `SpecialOutput_SonicBoom`. I think this function has been accidentally removed by the change below but I'm not sure how to fix it.; https://github.com/su2code/SU2/pull/724 . It would be great if sonicboom case is included in the regression test of test cases. ""biparabolic"" uses this feature but does not seem to be included in the regression test. This test case does not converge at least on my computer though. **To Reproduce**. [v7_sonicboom.zip](https://github.com/su2code/SU2/files/3968025/v7_sonicboom.zip); NACA64206_sonicboom_v6.cfg is a config file for version 6.; NACA64206_sonicboom_v7.cfg is a config file for version 7.; The mesh file is common for both cases. **Desktop (please complete the following information):**; - OS: Linux (Ubuntu 18.04.3 LTS); - C++ compiler and version: g++ 7.4.0; - MPI implementation and version: OpenMPI 2.1.1; - SU2 Version: v6.2.0 and v7.0.0. Thank you in advance for your help.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/841
https://github.com/su2code/SU2/issues/842:407,Availability,error,error,407,"I just managed to run my first SU2 CFD simulation, however it took me a few days to get it to work. ""SU2_CFD.exe"" was always crashing right after ""Begin solver"". It took me quite a while to figure out that I was missing some required inputs in the "".cfg"" file (for example CONV_NUM_METHOD_FLOW), especially because this isn't mentioned clearly on the website. I would suggest the following solutions:. - An error message telling which required input is missing in the .cfg to help beginners with debugging.; - A simple list with all the required inputs, i.e. those which don't have a default value, for instance on the website.; - An example of a minimal working .cfg file, basically the opposite of [this one](https://github.com/su2code/SU2/blob/master/config_template.cfg). (This is my first time opening a feature request on Github, I hope I did everything right)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/842
https://github.com/su2code/SU2/issues/842:413,Integrability,message,message,413,"I just managed to run my first SU2 CFD simulation, however it took me a few days to get it to work. ""SU2_CFD.exe"" was always crashing right after ""Begin solver"". It took me quite a while to figure out that I was missing some required inputs in the "".cfg"" file (for example CONV_NUM_METHOD_FLOW), especially because this isn't mentioned clearly on the website. I would suggest the following solutions:. - An error message telling which required input is missing in the .cfg to help beginners with debugging.; - A simple list with all the required inputs, i.e. those which don't have a default value, for instance on the website.; - An example of a minimal working .cfg file, basically the opposite of [this one](https://github.com/su2code/SU2/blob/master/config_template.cfg). (This is my first time opening a feature request on Github, I hope I did everything right)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/842
https://github.com/su2code/SU2/issues/842:336,Usability,clear,clearly,336,"I just managed to run my first SU2 CFD simulation, however it took me a few days to get it to work. ""SU2_CFD.exe"" was always crashing right after ""Begin solver"". It took me quite a while to figure out that I was missing some required inputs in the "".cfg"" file (for example CONV_NUM_METHOD_FLOW), especially because this isn't mentioned clearly on the website. I would suggest the following solutions:. - An error message telling which required input is missing in the .cfg to help beginners with debugging.; - A simple list with all the required inputs, i.e. those which don't have a default value, for instance on the website.; - An example of a minimal working .cfg file, basically the opposite of [this one](https://github.com/su2code/SU2/blob/master/config_template.cfg). (This is my first time opening a feature request on Github, I hope I did everything right)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/842
https://github.com/su2code/SU2/issues/842:512,Usability,simpl,simple,512,"I just managed to run my first SU2 CFD simulation, however it took me a few days to get it to work. ""SU2_CFD.exe"" was always crashing right after ""Begin solver"". It took me quite a while to figure out that I was missing some required inputs in the "".cfg"" file (for example CONV_NUM_METHOD_FLOW), especially because this isn't mentioned clearly on the website. I would suggest the following solutions:. - An error message telling which required input is missing in the .cfg to help beginners with debugging.; - A simple list with all the required inputs, i.e. those which don't have a default value, for instance on the website.; - An example of a minimal working .cfg file, basically the opposite of [this one](https://github.com/su2code/SU2/blob/master/config_template.cfg). (This is my first time opening a feature request on Github, I hope I did everything right)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/842
https://github.com/su2code/SU2/pull/843:1040,Deployability,update,updated,1040,"## Proposed Changes; Another snapshot from #824.; All major routines of CFEASolver (and by association CMeshSolver) now use OpenMP directives.; Parallelization is at the level of each individual routine, i.e. threads are ""started"" locally.; This required avoiding the use of small auxiliary array member variables, as that is not thread safe (multiple threads cannot write to the same location) In doing that I ended up doing some cleanup and so I thought it would be better to move the files, strip spaces, etc., it should make the review easier actually.; I will document to the major changes below. ## Related Work; #824 #789 ; Depends on #834 and #830. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/843
https://github.com/su2code/SU2/pull/843:60,Integrability,rout,routines,60,"## Proposed Changes; Another snapshot from #824.; All major routines of CFEASolver (and by association CMeshSolver) now use OpenMP directives.; Parallelization is at the level of each individual routine, i.e. threads are ""started"" locally.; This required avoiding the use of small auxiliary array member variables, as that is not thread safe (multiple threads cannot write to the same location) In doing that I ended up doing some cleanup and so I thought it would be better to move the files, strip spaces, etc., it should make the review easier actually.; I will document to the major changes below. ## Related Work; #824 #789 ; Depends on #834 and #830. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/843
https://github.com/su2code/SU2/pull/843:195,Integrability,rout,routine,195,"## Proposed Changes; Another snapshot from #824.; All major routines of CFEASolver (and by association CMeshSolver) now use OpenMP directives.; Parallelization is at the level of each individual routine, i.e. threads are ""started"" locally.; This required avoiding the use of small auxiliary array member variables, as that is not thread safe (multiple threads cannot write to the same location) In doing that I ended up doing some cleanup and so I thought it would be better to move the files, strip spaces, etc., it should make the review easier actually.; I will document to the major changes below. ## Related Work; #824 #789 ; Depends on #834 and #830. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/843
https://github.com/su2code/SU2/pull/843:631,Integrability,Depend,Depends,631,"## Proposed Changes; Another snapshot from #824.; All major routines of CFEASolver (and by association CMeshSolver) now use OpenMP directives.; Parallelization is at the level of each individual routine, i.e. threads are ""started"" locally.; This required avoiding the use of small auxiliary array member variables, as that is not thread safe (multiple threads cannot write to the same location) In doing that I ended up doing some cleanup and so I thought it would be better to move the files, strip spaces, etc., it should make the review easier actually.; I will document to the major changes below. ## Related Work; #824 #789 ; Depends on #834 and #830. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/843
https://github.com/su2code/SU2/pull/843:304,Modifiability,variab,variables,304,"## Proposed Changes; Another snapshot from #824.; All major routines of CFEASolver (and by association CMeshSolver) now use OpenMP directives.; Parallelization is at the level of each individual routine, i.e. threads are ""started"" locally.; This required avoiding the use of small auxiliary array member variables, as that is not thread safe (multiple threads cannot write to the same location) In doing that I ended up doing some cleanup and so I thought it would be better to move the files, strip spaces, etc., it should make the review easier actually.; I will document to the major changes below. ## Related Work; #824 #789 ; Depends on #834 and #830. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/843
https://github.com/su2code/SU2/pull/843:255,Safety,avoid,avoiding,255,"## Proposed Changes; Another snapshot from #824.; All major routines of CFEASolver (and by association CMeshSolver) now use OpenMP directives.; Parallelization is at the level of each individual routine, i.e. threads are ""started"" locally.; This required avoiding the use of small auxiliary array member variables, as that is not thread safe (multiple threads cannot write to the same location) In doing that I ended up doing some cleanup and so I thought it would be better to move the files, strip spaces, etc., it should make the review easier actually.; I will document to the major changes below. ## Related Work; #824 #789 ; Depends on #834 and #830. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/843
https://github.com/su2code/SU2/pull/843:337,Safety,safe,safe,337,"## Proposed Changes; Another snapshot from #824.; All major routines of CFEASolver (and by association CMeshSolver) now use OpenMP directives.; Parallelization is at the level of each individual routine, i.e. threads are ""started"" locally.; This required avoiding the use of small auxiliary array member variables, as that is not thread safe (multiple threads cannot write to the same location) In doing that I ended up doing some cleanup and so I thought it would be better to move the files, strip spaces, etc., it should make the review easier actually.; I will document to the major changes below. ## Related Work; #824 #789 ; Depends on #834 and #830. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/843
https://github.com/su2code/SU2/pull/843:967,Testability,test,test,967,"## Proposed Changes; Another snapshot from #824.; All major routines of CFEASolver (and by association CMeshSolver) now use OpenMP directives.; Parallelization is at the level of each individual routine, i.e. threads are ""started"" locally.; This required avoiding the use of small auxiliary array member variables, as that is not thread safe (multiple threads cannot write to the same location) In doing that I ended up doing some cleanup and so I thought it would be better to move the files, strip spaces, etc., it should make the review easier actually.; I will document to the major changes below. ## Related Work; #824 #789 ; Depends on #834 and #830. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/843
https://github.com/su2code/SU2/pull/845:1891,Deployability,update,updated,1891,"## Proposed Changes; I added new output file formats. First of all support for the VTK XML file format ([see this pdf](https://vtk.org/wp-content/uploads/2015/04/file-formats.pdf)) (file ending *.vtu). This adds support for possible compression, portable binary encoding, random access, big endian and little endian byte order, multiple file representation of piece data. I made this the new default format if `PARAVIEW` has been added to `OUTPUT_FILES`. The old *.vtk format can still be used with `PARAVIEW_LEGACY`. However, the main reason for this new format is that it is required for new Multiblock file (*.vtm) output. This file is a simple XML file which defines a data hierarchy in order to represent individual parts of the domain (which are stored as *.vtu files). With this it is possible to directly select and visualize the solution in individual zones and/or on boundaries. This new format can be enabled with `PARAVIEW_MULTIBLOCK` as value for `OUTPUT_FILES`. At the moment all boundaries are written, I might add an option to disable/enable some of them (maybe re-using the `MARKER_PLOTTING` option). In order not to cluster the working directory, the individual *.vtu files are placed in subfolders, since they are more or less opaque to the user. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/845
https://github.com/su2code/SU2/pull/845:246,Modifiability,portab,portable,246,"## Proposed Changes; I added new output file formats. First of all support for the VTK XML file format ([see this pdf](https://vtk.org/wp-content/uploads/2015/04/file-formats.pdf)) (file ending *.vtu). This adds support for possible compression, portable binary encoding, random access, big endian and little endian byte order, multiple file representation of piece data. I made this the new default format if `PARAVIEW` has been added to `OUTPUT_FILES`. The old *.vtk format can still be used with `PARAVIEW_LEGACY`. However, the main reason for this new format is that it is required for new Multiblock file (*.vtm) output. This file is a simple XML file which defines a data hierarchy in order to represent individual parts of the domain (which are stored as *.vtu files). With this it is possible to directly select and visualize the solution in individual zones and/or on boundaries. This new format can be enabled with `PARAVIEW_MULTIBLOCK` as value for `OUTPUT_FILES`. At the moment all boundaries are written, I might add an option to disable/enable some of them (maybe re-using the `MARKER_PLOTTING` option). In order not to cluster the working directory, the individual *.vtu files are placed in subfolders, since they are more or less opaque to the user. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/845
https://github.com/su2code/SU2/pull/845:279,Security,access,access,279,"## Proposed Changes; I added new output file formats. First of all support for the VTK XML file format ([see this pdf](https://vtk.org/wp-content/uploads/2015/04/file-formats.pdf)) (file ending *.vtu). This adds support for possible compression, portable binary encoding, random access, big endian and little endian byte order, multiple file representation of piece data. I made this the new default format if `PARAVIEW` has been added to `OUTPUT_FILES`. The old *.vtk format can still be used with `PARAVIEW_LEGACY`. However, the main reason for this new format is that it is required for new Multiblock file (*.vtm) output. This file is a simple XML file which defines a data hierarchy in order to represent individual parts of the domain (which are stored as *.vtu files). With this it is possible to directly select and visualize the solution in individual zones and/or on boundaries. This new format can be enabled with `PARAVIEW_MULTIBLOCK` as value for `OUTPUT_FILES`. At the moment all boundaries are written, I might add an option to disable/enable some of them (maybe re-using the `MARKER_PLOTTING` option). In order not to cluster the working directory, the individual *.vtu files are placed in subfolders, since they are more or less opaque to the user. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/845
https://github.com/su2code/SU2/pull/845:1818,Testability,test,test,1818,"## Proposed Changes; I added new output file formats. First of all support for the VTK XML file format ([see this pdf](https://vtk.org/wp-content/uploads/2015/04/file-formats.pdf)) (file ending *.vtu). This adds support for possible compression, portable binary encoding, random access, big endian and little endian byte order, multiple file representation of piece data. I made this the new default format if `PARAVIEW` has been added to `OUTPUT_FILES`. The old *.vtk format can still be used with `PARAVIEW_LEGACY`. However, the main reason for this new format is that it is required for new Multiblock file (*.vtm) output. This file is a simple XML file which defines a data hierarchy in order to represent individual parts of the domain (which are stored as *.vtu files). With this it is possible to directly select and visualize the solution in individual zones and/or on boundaries. This new format can be enabled with `PARAVIEW_MULTIBLOCK` as value for `OUTPUT_FILES`. At the moment all boundaries are written, I might add an option to disable/enable some of them (maybe re-using the `MARKER_PLOTTING` option). In order not to cluster the working directory, the individual *.vtu files are placed in subfolders, since they are more or less opaque to the user. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/845
https://github.com/su2code/SU2/pull/845:641,Usability,simpl,simple,641,"## Proposed Changes; I added new output file formats. First of all support for the VTK XML file format ([see this pdf](https://vtk.org/wp-content/uploads/2015/04/file-formats.pdf)) (file ending *.vtu). This adds support for possible compression, portable binary encoding, random access, big endian and little endian byte order, multiple file representation of piece data. I made this the new default format if `PARAVIEW` has been added to `OUTPUT_FILES`. The old *.vtk format can still be used with `PARAVIEW_LEGACY`. However, the main reason for this new format is that it is required for new Multiblock file (*.vtm) output. This file is a simple XML file which defines a data hierarchy in order to represent individual parts of the domain (which are stored as *.vtu files). With this it is possible to directly select and visualize the solution in individual zones and/or on boundaries. This new format can be enabled with `PARAVIEW_MULTIBLOCK` as value for `OUTPUT_FILES`. At the moment all boundaries are written, I might add an option to disable/enable some of them (maybe re-using the `MARKER_PLOTTING` option). In order not to cluster the working directory, the individual *.vtu files are placed in subfolders, since they are more or less opaque to the user. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/845
https://github.com/su2code/SU2/pull/845:1440,Usability,guid,guide,1440,"## Proposed Changes; I added new output file formats. First of all support for the VTK XML file format ([see this pdf](https://vtk.org/wp-content/uploads/2015/04/file-formats.pdf)) (file ending *.vtu). This adds support for possible compression, portable binary encoding, random access, big endian and little endian byte order, multiple file representation of piece data. I made this the new default format if `PARAVIEW` has been added to `OUTPUT_FILES`. The old *.vtk format can still be used with `PARAVIEW_LEGACY`. However, the main reason for this new format is that it is required for new Multiblock file (*.vtm) output. This file is a simple XML file which defines a data hierarchy in order to represent individual parts of the domain (which are stored as *.vtu files). With this it is possible to directly select and visualize the solution in individual zones and/or on boundaries. This new format can be enabled with `PARAVIEW_MULTIBLOCK` as value for `OUTPUT_FILES`. At the moment all boundaries are written, I might add an option to disable/enable some of them (maybe re-using the `MARKER_PLOTTING` option). In order not to cluster the working directory, the individual *.vtu files are placed in subfolders, since they are more or less opaque to the user. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/845
https://github.com/su2code/SU2/issues/846:73,Energy Efficiency,power,powerful,73,"Hi,. first of all thanks for your continuing effort in developing a very powerful CFD software. I noticed a mistake in the implementation of a part of the screen output in ""confing_structure.cpp"" in SU2-7.0.0. In the ""Physical Case Definition"" there are no cases for""Kind_Solver"" as ""INC_EULER"", ""INC_NAVIER_STOKES"" or ""INC_RANS"" and therefore there is no screen output stating which equations are going to be used in the computation. This leaves uncertainty on whether or not the set of equations chosen in the config file is actually implemented. For example in my case I would like to use SA_DDES with INC_RANS but I don't know if this combination is not implemented or just not visible in the screen output due to the mistake I mentioned before (looking at the source code it seems like it is implemented but I may missing something and fixing the screen output would help non expert users). Thanks for your time.; With Best Regards.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/846
https://github.com/su2code/SU2/issues/846:512,Modifiability,config,config,512,"Hi,. first of all thanks for your continuing effort in developing a very powerful CFD software. I noticed a mistake in the implementation of a part of the screen output in ""confing_structure.cpp"" in SU2-7.0.0. In the ""Physical Case Definition"" there are no cases for""Kind_Solver"" as ""INC_EULER"", ""INC_NAVIER_STOKES"" or ""INC_RANS"" and therefore there is no screen output stating which equations are going to be used in the computation. This leaves uncertainty on whether or not the set of equations chosen in the config file is actually implemented. For example in my case I would like to use SA_DDES with INC_RANS but I don't know if this combination is not implemented or just not visible in the screen output due to the mistake I mentioned before (looking at the source code it seems like it is implemented but I may missing something and fixing the screen output would help non expert users). Thanks for your time.; With Best Regards.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/846
https://github.com/su2code/SU2/pull/847:323,Availability,avail,available,323,"## Proposed Changes; Hi all,. This PR adds the possibility to write ASCII STL files. Example usage:; `OUTPUT_FILES= (RESTART,PARAVIEW, STL, ...)`; All surfaces in `MARKER_PLOTTING` will be used, just like the surface files. The major problem was to re-process the element connectivity for parallel cases from what the data available after the parallel data sorter does its thing. You'll notice that in the `CSTLFileWriter.cpp` : Part of the code was copied over from the TecIO stuff and modified to our needs. The code probably could be nicer and it could be better documented, but I already forgot some details and it most likely would still be a mess to understand. Big thanks to @talbring for making this code work. I added a simple regression test by `diff`ing against a reference stl-file from in the Testcases repo. I'll add that information [on the website here](https://su2code.github.io/docs_v7/Custom-Output/) once this PR is merged. ## Related Work; Resolves issue #694 (which was marked stale and was closed in the meantime). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/847
https://github.com/su2code/SU2/pull/847:1661,Deployability,update,updated,1661,"## Proposed Changes; Hi all,. This PR adds the possibility to write ASCII STL files. Example usage:; `OUTPUT_FILES= (RESTART,PARAVIEW, STL, ...)`; All surfaces in `MARKER_PLOTTING` will be used, just like the surface files. The major problem was to re-process the element connectivity for parallel cases from what the data available after the parallel data sorter does its thing. You'll notice that in the `CSTLFileWriter.cpp` : Part of the code was copied over from the TecIO stuff and modified to our needs. The code probably could be nicer and it could be better documented, but I already forgot some details and it most likely would still be a mess to understand. Big thanks to @talbring for making this code work. I added a simple regression test by `diff`ing against a reference stl-file from in the Testcases repo. I'll add that information [on the website here](https://su2code.github.io/docs_v7/Custom-Output/) once this PR is merged. ## Related Work; Resolves issue #694 (which was marked stale and was closed in the meantime). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/847
https://github.com/su2code/SU2/pull/847:747,Testability,test,test,747,"## Proposed Changes; Hi all,. This PR adds the possibility to write ASCII STL files. Example usage:; `OUTPUT_FILES= (RESTART,PARAVIEW, STL, ...)`; All surfaces in `MARKER_PLOTTING` will be used, just like the surface files. The major problem was to re-process the element connectivity for parallel cases from what the data available after the parallel data sorter does its thing. You'll notice that in the `CSTLFileWriter.cpp` : Part of the code was copied over from the TecIO stuff and modified to our needs. The code probably could be nicer and it could be better documented, but I already forgot some details and it most likely would still be a mess to understand. Big thanks to @talbring for making this code work. I added a simple regression test by `diff`ing against a reference stl-file from in the Testcases repo. I'll add that information [on the website here](https://su2code.github.io/docs_v7/Custom-Output/) once this PR is merged. ## Related Work; Resolves issue #694 (which was marked stale and was closed in the meantime). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/847
https://github.com/su2code/SU2/pull/847:806,Testability,Test,Testcases,806,"## Proposed Changes; Hi all,. This PR adds the possibility to write ASCII STL files. Example usage:; `OUTPUT_FILES= (RESTART,PARAVIEW, STL, ...)`; All surfaces in `MARKER_PLOTTING` will be used, just like the surface files. The major problem was to re-process the element connectivity for parallel cases from what the data available after the parallel data sorter does its thing. You'll notice that in the `CSTLFileWriter.cpp` : Part of the code was copied over from the TecIO stuff and modified to our needs. The code probably could be nicer and it could be better documented, but I already forgot some details and it most likely would still be a mess to understand. Big thanks to @talbring for making this code work. I added a simple regression test by `diff`ing against a reference stl-file from in the Testcases repo. I'll add that information [on the website here](https://su2code.github.io/docs_v7/Custom-Output/) once this PR is merged. ## Related Work; Resolves issue #694 (which was marked stale and was closed in the meantime). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/847
https://github.com/su2code/SU2/pull/847:1588,Testability,test,test,1588,"## Proposed Changes; Hi all,. This PR adds the possibility to write ASCII STL files. Example usage:; `OUTPUT_FILES= (RESTART,PARAVIEW, STL, ...)`; All surfaces in `MARKER_PLOTTING` will be used, just like the surface files. The major problem was to re-process the element connectivity for parallel cases from what the data available after the parallel data sorter does its thing. You'll notice that in the `CSTLFileWriter.cpp` : Part of the code was copied over from the TecIO stuff and modified to our needs. The code probably could be nicer and it could be better documented, but I already forgot some details and it most likely would still be a mess to understand. Big thanks to @talbring for making this code work. I added a simple regression test by `diff`ing against a reference stl-file from in the Testcases repo. I'll add that information [on the website here](https://su2code.github.io/docs_v7/Custom-Output/) once this PR is merged. ## Related Work; Resolves issue #694 (which was marked stale and was closed in the meantime). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/847
https://github.com/su2code/SU2/pull/847:729,Usability,simpl,simple,729,"## Proposed Changes; Hi all,. This PR adds the possibility to write ASCII STL files. Example usage:; `OUTPUT_FILES= (RESTART,PARAVIEW, STL, ...)`; All surfaces in `MARKER_PLOTTING` will be used, just like the surface files. The major problem was to re-process the element connectivity for parallel cases from what the data available after the parallel data sorter does its thing. You'll notice that in the `CSTLFileWriter.cpp` : Part of the code was copied over from the TecIO stuff and modified to our needs. The code probably could be nicer and it could be better documented, but I already forgot some details and it most likely would still be a mess to understand. Big thanks to @talbring for making this code work. I added a simple regression test by `diff`ing against a reference stl-file from in the Testcases repo. I'll add that information [on the website here](https://su2code.github.io/docs_v7/Custom-Output/) once this PR is merged. ## Related Work; Resolves issue #694 (which was marked stale and was closed in the meantime). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/847
https://github.com/su2code/SU2/pull/847:1210,Usability,guid,guide,1210,"## Proposed Changes; Hi all,. This PR adds the possibility to write ASCII STL files. Example usage:; `OUTPUT_FILES= (RESTART,PARAVIEW, STL, ...)`; All surfaces in `MARKER_PLOTTING` will be used, just like the surface files. The major problem was to re-process the element connectivity for parallel cases from what the data available after the parallel data sorter does its thing. You'll notice that in the `CSTLFileWriter.cpp` : Part of the code was copied over from the TecIO stuff and modified to our needs. The code probably could be nicer and it could be better documented, but I already forgot some details and it most likely would still be a mess to understand. Big thanks to @talbring for making this code work. I added a simple regression test by `diff`ing against a reference stl-file from in the Testcases repo. I'll add that information [on the website here](https://su2code.github.io/docs_v7/Custom-Output/) once this PR is merged. ## Related Work; Resolves issue #694 (which was marked stale and was closed in the meantime). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/847
https://github.com/su2code/SU2/pull/848:977,Deployability,update,updated,977,"## Proposed Changes; This is further step in restructuring the files. In this PR I splitted the primal_grid_structure and dual_grid_structure. Further I moved the mesh readers in to a separate directory. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/848
https://github.com/su2code/SU2/pull/848:904,Testability,test,test,904,"## Proposed Changes; This is further step in restructuring the files. In this PR I splitted the primal_grid_structure and dual_grid_structure. Further I moved the mesh readers in to a separate directory. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/848
https://github.com/su2code/SU2/pull/848:526,Usability,guid,guide,526,"## Proposed Changes; This is further step in restructuring the files. In this PR I splitted the primal_grid_structure and dual_grid_structure. Further I moved the mesh readers in to a separate directory. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/848
https://github.com/su2code/SU2/pull/849:1550,Deployability,update,updated,1550,"## Proposed Changes; This is a restructuring of the solver classes in the fashion of what has been done for variable classes, output classes etc. Changes include:. - Moving all solver .hpp and .cpp files into individual class specific files; - Moving all inline functions into the header files ; - Some bits of code cleanup. Things still left to be done: . - Updating the IDE files; - Any other things that might come up in the review process. This has mostly just been copying and pasting things around. If there any thing else to address in the solver classes (menial or significant) that would be appropriate to include in this restructuring, let me know in the comments!. ## Related Work; @pcarruscag is already working on the CFEASolver in #843. I have split the files here as well since it was already automated. But I can just merge with his branch in the likely case that his PR is ready for merging before this one. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/849
https://github.com/su2code/SU2/pull/849:108,Modifiability,variab,variable,108,"## Proposed Changes; This is a restructuring of the solver classes in the fashion of what has been done for variable classes, output classes etc. Changes include:. - Moving all solver .hpp and .cpp files into individual class specific files; - Moving all inline functions into the header files ; - Some bits of code cleanup. Things still left to be done: . - Updating the IDE files; - Any other things that might come up in the review process. This has mostly just been copying and pasting things around. If there any thing else to address in the solver classes (menial or significant) that would be appropriate to include in this restructuring, let me know in the comments!. ## Related Work; @pcarruscag is already working on the CFEASolver in #843. I have split the files here as well since it was already automated. But I can just merge with his branch in the likely case that his PR is ready for merging before this one. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/849
https://github.com/su2code/SU2/pull/849:1477,Testability,test,test,1477,"## Proposed Changes; This is a restructuring of the solver classes in the fashion of what has been done for variable classes, output classes etc. Changes include:. - Moving all solver .hpp and .cpp files into individual class specific files; - Moving all inline functions into the header files ; - Some bits of code cleanup. Things still left to be done: . - Updating the IDE files; - Any other things that might come up in the review process. This has mostly just been copying and pasting things around. If there any thing else to address in the solver classes (menial or significant) that would be appropriate to include in this restructuring, let me know in the comments!. ## Related Work; @pcarruscag is already working on the CFEASolver in #843. I have split the files here as well since it was already automated. But I can just merge with his branch in the likely case that his PR is ready for merging before this one. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/849
https://github.com/su2code/SU2/pull/849:1099,Usability,guid,guide,1099,"## Proposed Changes; This is a restructuring of the solver classes in the fashion of what has been done for variable classes, output classes etc. Changes include:. - Moving all solver .hpp and .cpp files into individual class specific files; - Moving all inline functions into the header files ; - Some bits of code cleanup. Things still left to be done: . - Updating the IDE files; - Any other things that might come up in the review process. This has mostly just been copying and pasting things around. If there any thing else to address in the solver classes (menial or significant) that would be appropriate to include in this restructuring, let me know in the comments!. ## Related Work; @pcarruscag is already working on the CFEASolver in #843. I have split the files here as well since it was already automated. But I can just merge with his branch in the likely case that his PR is ready for merging before this one. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/849
https://github.com/su2code/SU2/pull/850:407,Availability,mainten,maintenance,407,"## Proposed Changes. This is intended to be a small PR, but a big design shift. As discussed in issue #698, unit tests can serve an important role in software development. They complement, rather than replace, validation and verification tests. They are most useful when you want to isolate a specific behavior. Unit-testing increases development time, but improves the quality of the code and reduces code-maintenance time \[[source](https://collaboration.csc.ncsu.edu/laurie/Papers/TDDpaperv8.pdf)\]. ### Vision. In my mind, the most efficient way to proceed is to add unit tests as new behaviors are added and bugs are fixed. With each new PR, we should ask ""Should this have a unit test to verify this behavior?"" Unit tests will provide a clear way to show that each PR does what the developer promises it will do. This will require refactoring some of the code. Some parts of the code, like the CConfig class, are not unit-testing friendly. Unit testing is hard when you have God-classes and ""do-it-all"" functions. The hope is that refactoring these classes will lead to more modular and easier-to-maintain code. ### Decision to use Catch2. Catch2 was chosen for the unit testing library for the following reasons:. + It can be included as a header-only library.; + It has a very clean, easy-to-use syntax; + It has widespread use, including the FEniCS library. ### Design choices. The following design choices are in place. If you disagree with them, then please start a discussion here:. + All tests are placed in a root-level directory named `UnitTests`. Inside this directory is a structure just like the existing folder structure (e.g. `SU2_CFD/numerics`), except that there are not separate `src` and `include` folders.; + Tests are grouped by class, and put in files such as `CNumerics_tests.cpp`.; + A single test executable is compiled and run, as opposed to a separate test executable for each group of tests. With the single test executable, you can always filter down to groups of tes",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/850
https://github.com/su2code/SU2/pull/850:1980,Availability,down,down,1980,"u have God-classes and ""do-it-all"" functions. The hope is that refactoring these classes will lead to more modular and easier-to-maintain code. ### Decision to use Catch2. Catch2 was chosen for the unit testing library for the following reasons:. + It can be included as a header-only library.; + It has a very clean, easy-to-use syntax; + It has widespread use, including the FEniCS library. ### Design choices. The following design choices are in place. If you disagree with them, then please start a discussion here:. + All tests are placed in a root-level directory named `UnitTests`. Inside this directory is a structure just like the existing folder structure (e.g. `SU2_CFD/numerics`), except that there are not separate `src` and `include` folders.; + Tests are grouped by class, and put in files such as `CNumerics_tests.cpp`.; + A single test executable is compiled and run, as opposed to a separate test executable for each group of tests. With the single test executable, you can always filter down to groups of tests or individual tests.; + When `ninja test` or `meson test` is run, the test executable is only run once, sweeping through all the unit tests. The result only shows a single failure or a single success. If more detail is desired, then the test executable can be run manually.; + The relevant SU2 code is compiled as a library (e.g. `libSU2core`) and then linked into both the main executable (`SU2_CFD`) and the test program (`test_driver`). ### How to Run Unit Tests. If you compile SU2 using `ninja -C builddir`, then the test executable will automatically be compiled. You then have three options for running the tests:. + `meson test` (see documentation [here](https://mesonbuild.com/Unit-tests.html)); + `ninja test`; + Run the exectuable manually: `./UnitTests/test_driver`. When running the executable manually, there are many customization options. Run `./UnitTests/test_driver --help` to see them all. ### How to add unit tests. I have already included a single u",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/850
https://github.com/su2code/SU2/pull/850:2176,Availability,failure,failure,2176,"it testing library for the following reasons:. + It can be included as a header-only library.; + It has a very clean, easy-to-use syntax; + It has widespread use, including the FEniCS library. ### Design choices. The following design choices are in place. If you disagree with them, then please start a discussion here:. + All tests are placed in a root-level directory named `UnitTests`. Inside this directory is a structure just like the existing folder structure (e.g. `SU2_CFD/numerics`), except that there are not separate `src` and `include` folders.; + Tests are grouped by class, and put in files such as `CNumerics_tests.cpp`.; + A single test executable is compiled and run, as opposed to a separate test executable for each group of tests. With the single test executable, you can always filter down to groups of tests or individual tests.; + When `ninja test` or `meson test` is run, the test executable is only run once, sweeping through all the unit tests. The result only shows a single failure or a single success. If more detail is desired, then the test executable can be run manually.; + The relevant SU2 code is compiled as a library (e.g. `libSU2core`) and then linked into both the main executable (`SU2_CFD`) and the test program (`test_driver`). ### How to Run Unit Tests. If you compile SU2 using `ninja -C builddir`, then the test executable will automatically be compiled. You then have three options for running the tests:. + `meson test` (see documentation [here](https://mesonbuild.com/Unit-tests.html)); + `ninja test`; + Run the exectuable manually: `./UnitTests/test_driver`. When running the executable manually, there are many customization options. Run `./UnitTests/test_driver --help` to see them all. ### How to add unit tests. I have already included a single unit-test example (`UnitTests/SU2_CFD/src/numerics/CNumerics_tests.cpp`). Aside from the headaches with CConfig, this example should be clear. If not, raise questions and I will answer them. ~~I plan o",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/850
https://github.com/su2code/SU2/pull/850:4373,Deployability,update,updated,4373,"sts. If you compile SU2 using `ninja -C builddir`, then the test executable will automatically be compiled. You then have three options for running the tests:. + `meson test` (see documentation [here](https://mesonbuild.com/Unit-tests.html)); + `ninja test`; + Run the exectuable manually: `./UnitTests/test_driver`. When running the executable manually, there are many customization options. Run `./UnitTests/test_driver --help` to see them all. ### How to add unit tests. I have already included a single unit-test example (`UnitTests/SU2_CFD/src/numerics/CNumerics_tests.cpp`). Aside from the headaches with CConfig, this example should be clear. If not, raise questions and I will answer them. ~~I plan on adding a few more example tests, as well as a ""How-To"" page on the website.~~ Please see the PR on the website repo for more documentation. To learn more, check out the [great tutorial](https://github.com/catchorg/Catch2/blob/master/docs/tutorial.md) for Catch2. You can also find more in-depth documentation there. ### I still don't understand unit tests. Where can I learn more?. I highly recommend reading at least one of these two books:. + ""Working Effectively with Legacy Code,"" by Michael Feathers; + ""Modern C++ Programming with Test-Driven Development,"" by Jeff Langr. ## Remaining work. + ~~Add unit-testing to Travis CI~~; + ~~Add support for unit testing in AD builds~~; + ~~Add more examples of unit tests~~; + ~~Add ""How-To Add Unit Tests"" documentation~~. ## Related Work; This resolves issue #698. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/850
https://github.com/su2code/SU2/pull/850:394,Energy Efficiency,reduce,reduces,394,"## Proposed Changes. This is intended to be a small PR, but a big design shift. As discussed in issue #698, unit tests can serve an important role in software development. They complement, rather than replace, validation and verification tests. They are most useful when you want to isolate a specific behavior. Unit-testing increases development time, but improves the quality of the code and reduces code-maintenance time \[[source](https://collaboration.csc.ncsu.edu/laurie/Papers/TDDpaperv8.pdf)\]. ### Vision. In my mind, the most efficient way to proceed is to add unit tests as new behaviors are added and bugs are fixed. With each new PR, we should ask ""Should this have a unit test to verify this behavior?"" Unit tests will provide a clear way to show that each PR does what the developer promises it will do. This will require refactoring some of the code. Some parts of the code, like the CConfig class, are not unit-testing friendly. Unit testing is hard when you have God-classes and ""do-it-all"" functions. The hope is that refactoring these classes will lead to more modular and easier-to-maintain code. ### Decision to use Catch2. Catch2 was chosen for the unit testing library for the following reasons:. + It can be included as a header-only library.; + It has a very clean, easy-to-use syntax; + It has widespread use, including the FEniCS library. ### Design choices. The following design choices are in place. If you disagree with them, then please start a discussion here:. + All tests are placed in a root-level directory named `UnitTests`. Inside this directory is a structure just like the existing folder structure (e.g. `SU2_CFD/numerics`), except that there are not separate `src` and `include` folders.; + Tests are grouped by class, and put in files such as `CNumerics_tests.cpp`.; + A single test executable is compiled and run, as opposed to a separate test executable for each group of tests. With the single test executable, you can always filter down to groups of tes",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/850
https://github.com/su2code/SU2/pull/850:536,Energy Efficiency,efficient,efficient,536,"## Proposed Changes. This is intended to be a small PR, but a big design shift. As discussed in issue #698, unit tests can serve an important role in software development. They complement, rather than replace, validation and verification tests. They are most useful when you want to isolate a specific behavior. Unit-testing increases development time, but improves the quality of the code and reduces code-maintenance time \[[source](https://collaboration.csc.ncsu.edu/laurie/Papers/TDDpaperv8.pdf)\]. ### Vision. In my mind, the most efficient way to proceed is to add unit tests as new behaviors are added and bugs are fixed. With each new PR, we should ask ""Should this have a unit test to verify this behavior?"" Unit tests will provide a clear way to show that each PR does what the developer promises it will do. This will require refactoring some of the code. Some parts of the code, like the CConfig class, are not unit-testing friendly. Unit testing is hard when you have God-classes and ""do-it-all"" functions. The hope is that refactoring these classes will lead to more modular and easier-to-maintain code. ### Decision to use Catch2. Catch2 was chosen for the unit testing library for the following reasons:. + It can be included as a header-only library.; + It has a very clean, easy-to-use syntax; + It has widespread use, including the FEniCS library. ### Design choices. The following design choices are in place. If you disagree with them, then please start a discussion here:. + All tests are placed in a root-level directory named `UnitTests`. Inside this directory is a structure just like the existing folder structure (e.g. `SU2_CFD/numerics`), except that there are not separate `src` and `include` folders.; + Tests are grouped by class, and put in files such as `CNumerics_tests.cpp`.; + A single test executable is compiled and run, as opposed to a separate test executable for each group of tests. With the single test executable, you can always filter down to groups of tes",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/850
https://github.com/su2code/SU2/pull/850:837,Modifiability,refactor,refactoring,837,"## Proposed Changes. This is intended to be a small PR, but a big design shift. As discussed in issue #698, unit tests can serve an important role in software development. They complement, rather than replace, validation and verification tests. They are most useful when you want to isolate a specific behavior. Unit-testing increases development time, but improves the quality of the code and reduces code-maintenance time \[[source](https://collaboration.csc.ncsu.edu/laurie/Papers/TDDpaperv8.pdf)\]. ### Vision. In my mind, the most efficient way to proceed is to add unit tests as new behaviors are added and bugs are fixed. With each new PR, we should ask ""Should this have a unit test to verify this behavior?"" Unit tests will provide a clear way to show that each PR does what the developer promises it will do. This will require refactoring some of the code. Some parts of the code, like the CConfig class, are not unit-testing friendly. Unit testing is hard when you have God-classes and ""do-it-all"" functions. The hope is that refactoring these classes will lead to more modular and easier-to-maintain code. ### Decision to use Catch2. Catch2 was chosen for the unit testing library for the following reasons:. + It can be included as a header-only library.; + It has a very clean, easy-to-use syntax; + It has widespread use, including the FEniCS library. ### Design choices. The following design choices are in place. If you disagree with them, then please start a discussion here:. + All tests are placed in a root-level directory named `UnitTests`. Inside this directory is a structure just like the existing folder structure (e.g. `SU2_CFD/numerics`), except that there are not separate `src` and `include` folders.; + Tests are grouped by class, and put in files such as `CNumerics_tests.cpp`.; + A single test executable is compiled and run, as opposed to a separate test executable for each group of tests. With the single test executable, you can always filter down to groups of tes",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/850
https://github.com/su2code/SU2/pull/850:1037,Modifiability,refactor,refactoring,1037,"sign shift. As discussed in issue #698, unit tests can serve an important role in software development. They complement, rather than replace, validation and verification tests. They are most useful when you want to isolate a specific behavior. Unit-testing increases development time, but improves the quality of the code and reduces code-maintenance time \[[source](https://collaboration.csc.ncsu.edu/laurie/Papers/TDDpaperv8.pdf)\]. ### Vision. In my mind, the most efficient way to proceed is to add unit tests as new behaviors are added and bugs are fixed. With each new PR, we should ask ""Should this have a unit test to verify this behavior?"" Unit tests will provide a clear way to show that each PR does what the developer promises it will do. This will require refactoring some of the code. Some parts of the code, like the CConfig class, are not unit-testing friendly. Unit testing is hard when you have God-classes and ""do-it-all"" functions. The hope is that refactoring these classes will lead to more modular and easier-to-maintain code. ### Decision to use Catch2. Catch2 was chosen for the unit testing library for the following reasons:. + It can be included as a header-only library.; + It has a very clean, easy-to-use syntax; + It has widespread use, including the FEniCS library. ### Design choices. The following design choices are in place. If you disagree with them, then please start a discussion here:. + All tests are placed in a root-level directory named `UnitTests`. Inside this directory is a structure just like the existing folder structure (e.g. `SU2_CFD/numerics`), except that there are not separate `src` and `include` folders.; + Tests are grouped by class, and put in files such as `CNumerics_tests.cpp`.; + A single test executable is compiled and run, as opposed to a separate test executable for each group of tests. With the single test executable, you can always filter down to groups of tests or individual tests.; + When `ninja test` or `meson test` is run",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/850
https://github.com/su2code/SU2/pull/850:210,Security,validat,validation,210,"## Proposed Changes. This is intended to be a small PR, but a big design shift. As discussed in issue #698, unit tests can serve an important role in software development. They complement, rather than replace, validation and verification tests. They are most useful when you want to isolate a specific behavior. Unit-testing increases development time, but improves the quality of the code and reduces code-maintenance time \[[source](https://collaboration.csc.ncsu.edu/laurie/Papers/TDDpaperv8.pdf)\]. ### Vision. In my mind, the most efficient way to proceed is to add unit tests as new behaviors are added and bugs are fixed. With each new PR, we should ask ""Should this have a unit test to verify this behavior?"" Unit tests will provide a clear way to show that each PR does what the developer promises it will do. This will require refactoring some of the code. Some parts of the code, like the CConfig class, are not unit-testing friendly. Unit testing is hard when you have God-classes and ""do-it-all"" functions. The hope is that refactoring these classes will lead to more modular and easier-to-maintain code. ### Decision to use Catch2. Catch2 was chosen for the unit testing library for the following reasons:. + It can be included as a header-only library.; + It has a very clean, easy-to-use syntax; + It has widespread use, including the FEniCS library. ### Design choices. The following design choices are in place. If you disagree with them, then please start a discussion here:. + All tests are placed in a root-level directory named `UnitTests`. Inside this directory is a structure just like the existing folder structure (e.g. `SU2_CFD/numerics`), except that there are not separate `src` and `include` folders.; + Tests are grouped by class, and put in files such as `CNumerics_tests.cpp`.; + A single test executable is compiled and run, as opposed to a separate test executable for each group of tests. With the single test executable, you can always filter down to groups of tes",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/850
https://github.com/su2code/SU2/pull/850:113,Testability,test,tests,113,"## Proposed Changes. This is intended to be a small PR, but a big design shift. As discussed in issue #698, unit tests can serve an important role in software development. They complement, rather than replace, validation and verification tests. They are most useful when you want to isolate a specific behavior. Unit-testing increases development time, but improves the quality of the code and reduces code-maintenance time \[[source](https://collaboration.csc.ncsu.edu/laurie/Papers/TDDpaperv8.pdf)\]. ### Vision. In my mind, the most efficient way to proceed is to add unit tests as new behaviors are added and bugs are fixed. With each new PR, we should ask ""Should this have a unit test to verify this behavior?"" Unit tests will provide a clear way to show that each PR does what the developer promises it will do. This will require refactoring some of the code. Some parts of the code, like the CConfig class, are not unit-testing friendly. Unit testing is hard when you have God-classes and ""do-it-all"" functions. The hope is that refactoring these classes will lead to more modular and easier-to-maintain code. ### Decision to use Catch2. Catch2 was chosen for the unit testing library for the following reasons:. + It can be included as a header-only library.; + It has a very clean, easy-to-use syntax; + It has widespread use, including the FEniCS library. ### Design choices. The following design choices are in place. If you disagree with them, then please start a discussion here:. + All tests are placed in a root-level directory named `UnitTests`. Inside this directory is a structure just like the existing folder structure (e.g. `SU2_CFD/numerics`), except that there are not separate `src` and `include` folders.; + Tests are grouped by class, and put in files such as `CNumerics_tests.cpp`.; + A single test executable is compiled and run, as opposed to a separate test executable for each group of tests. With the single test executable, you can always filter down to groups of tes",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/850
https://github.com/su2code/SU2/pull/850:238,Testability,test,tests,238,"## Proposed Changes. This is intended to be a small PR, but a big design shift. As discussed in issue #698, unit tests can serve an important role in software development. They complement, rather than replace, validation and verification tests. They are most useful when you want to isolate a specific behavior. Unit-testing increases development time, but improves the quality of the code and reduces code-maintenance time \[[source](https://collaboration.csc.ncsu.edu/laurie/Papers/TDDpaperv8.pdf)\]. ### Vision. In my mind, the most efficient way to proceed is to add unit tests as new behaviors are added and bugs are fixed. With each new PR, we should ask ""Should this have a unit test to verify this behavior?"" Unit tests will provide a clear way to show that each PR does what the developer promises it will do. This will require refactoring some of the code. Some parts of the code, like the CConfig class, are not unit-testing friendly. Unit testing is hard when you have God-classes and ""do-it-all"" functions. The hope is that refactoring these classes will lead to more modular and easier-to-maintain code. ### Decision to use Catch2. Catch2 was chosen for the unit testing library for the following reasons:. + It can be included as a header-only library.; + It has a very clean, easy-to-use syntax; + It has widespread use, including the FEniCS library. ### Design choices. The following design choices are in place. If you disagree with them, then please start a discussion here:. + All tests are placed in a root-level directory named `UnitTests`. Inside this directory is a structure just like the existing folder structure (e.g. `SU2_CFD/numerics`), except that there are not separate `src` and `include` folders.; + Tests are grouped by class, and put in files such as `CNumerics_tests.cpp`.; + A single test executable is compiled and run, as opposed to a separate test executable for each group of tests. With the single test executable, you can always filter down to groups of tes",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/850
https://github.com/su2code/SU2/pull/850:317,Testability,test,testing,317,"## Proposed Changes. This is intended to be a small PR, but a big design shift. As discussed in issue #698, unit tests can serve an important role in software development. They complement, rather than replace, validation and verification tests. They are most useful when you want to isolate a specific behavior. Unit-testing increases development time, but improves the quality of the code and reduces code-maintenance time \[[source](https://collaboration.csc.ncsu.edu/laurie/Papers/TDDpaperv8.pdf)\]. ### Vision. In my mind, the most efficient way to proceed is to add unit tests as new behaviors are added and bugs are fixed. With each new PR, we should ask ""Should this have a unit test to verify this behavior?"" Unit tests will provide a clear way to show that each PR does what the developer promises it will do. This will require refactoring some of the code. Some parts of the code, like the CConfig class, are not unit-testing friendly. Unit testing is hard when you have God-classes and ""do-it-all"" functions. The hope is that refactoring these classes will lead to more modular and easier-to-maintain code. ### Decision to use Catch2. Catch2 was chosen for the unit testing library for the following reasons:. + It can be included as a header-only library.; + It has a very clean, easy-to-use syntax; + It has widespread use, including the FEniCS library. ### Design choices. The following design choices are in place. If you disagree with them, then please start a discussion here:. + All tests are placed in a root-level directory named `UnitTests`. Inside this directory is a structure just like the existing folder structure (e.g. `SU2_CFD/numerics`), except that there are not separate `src` and `include` folders.; + Tests are grouped by class, and put in files such as `CNumerics_tests.cpp`.; + A single test executable is compiled and run, as opposed to a separate test executable for each group of tests. With the single test executable, you can always filter down to groups of tes",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/850
https://github.com/su2code/SU2/pull/850:576,Testability,test,tests,576,"## Proposed Changes. This is intended to be a small PR, but a big design shift. As discussed in issue #698, unit tests can serve an important role in software development. They complement, rather than replace, validation and verification tests. They are most useful when you want to isolate a specific behavior. Unit-testing increases development time, but improves the quality of the code and reduces code-maintenance time \[[source](https://collaboration.csc.ncsu.edu/laurie/Papers/TDDpaperv8.pdf)\]. ### Vision. In my mind, the most efficient way to proceed is to add unit tests as new behaviors are added and bugs are fixed. With each new PR, we should ask ""Should this have a unit test to verify this behavior?"" Unit tests will provide a clear way to show that each PR does what the developer promises it will do. This will require refactoring some of the code. Some parts of the code, like the CConfig class, are not unit-testing friendly. Unit testing is hard when you have God-classes and ""do-it-all"" functions. The hope is that refactoring these classes will lead to more modular and easier-to-maintain code. ### Decision to use Catch2. Catch2 was chosen for the unit testing library for the following reasons:. + It can be included as a header-only library.; + It has a very clean, easy-to-use syntax; + It has widespread use, including the FEniCS library. ### Design choices. The following design choices are in place. If you disagree with them, then please start a discussion here:. + All tests are placed in a root-level directory named `UnitTests`. Inside this directory is a structure just like the existing folder structure (e.g. `SU2_CFD/numerics`), except that there are not separate `src` and `include` folders.; + Tests are grouped by class, and put in files such as `CNumerics_tests.cpp`.; + A single test executable is compiled and run, as opposed to a separate test executable for each group of tests. With the single test executable, you can always filter down to groups of tes",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/850
https://github.com/su2code/SU2/pull/850:686,Testability,test,test,686,"## Proposed Changes. This is intended to be a small PR, but a big design shift. As discussed in issue #698, unit tests can serve an important role in software development. They complement, rather than replace, validation and verification tests. They are most useful when you want to isolate a specific behavior. Unit-testing increases development time, but improves the quality of the code and reduces code-maintenance time \[[source](https://collaboration.csc.ncsu.edu/laurie/Papers/TDDpaperv8.pdf)\]. ### Vision. In my mind, the most efficient way to proceed is to add unit tests as new behaviors are added and bugs are fixed. With each new PR, we should ask ""Should this have a unit test to verify this behavior?"" Unit tests will provide a clear way to show that each PR does what the developer promises it will do. This will require refactoring some of the code. Some parts of the code, like the CConfig class, are not unit-testing friendly. Unit testing is hard when you have God-classes and ""do-it-all"" functions. The hope is that refactoring these classes will lead to more modular and easier-to-maintain code. ### Decision to use Catch2. Catch2 was chosen for the unit testing library for the following reasons:. + It can be included as a header-only library.; + It has a very clean, easy-to-use syntax; + It has widespread use, including the FEniCS library. ### Design choices. The following design choices are in place. If you disagree with them, then please start a discussion here:. + All tests are placed in a root-level directory named `UnitTests`. Inside this directory is a structure just like the existing folder structure (e.g. `SU2_CFD/numerics`), except that there are not separate `src` and `include` folders.; + Tests are grouped by class, and put in files such as `CNumerics_tests.cpp`.; + A single test executable is compiled and run, as opposed to a separate test executable for each group of tests. With the single test executable, you can always filter down to groups of tes",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/850
https://github.com/su2code/SU2/pull/850:722,Testability,test,tests,722,"## Proposed Changes. This is intended to be a small PR, but a big design shift. As discussed in issue #698, unit tests can serve an important role in software development. They complement, rather than replace, validation and verification tests. They are most useful when you want to isolate a specific behavior. Unit-testing increases development time, but improves the quality of the code and reduces code-maintenance time \[[source](https://collaboration.csc.ncsu.edu/laurie/Papers/TDDpaperv8.pdf)\]. ### Vision. In my mind, the most efficient way to proceed is to add unit tests as new behaviors are added and bugs are fixed. With each new PR, we should ask ""Should this have a unit test to verify this behavior?"" Unit tests will provide a clear way to show that each PR does what the developer promises it will do. This will require refactoring some of the code. Some parts of the code, like the CConfig class, are not unit-testing friendly. Unit testing is hard when you have God-classes and ""do-it-all"" functions. The hope is that refactoring these classes will lead to more modular and easier-to-maintain code. ### Decision to use Catch2. Catch2 was chosen for the unit testing library for the following reasons:. + It can be included as a header-only library.; + It has a very clean, easy-to-use syntax; + It has widespread use, including the FEniCS library. ### Design choices. The following design choices are in place. If you disagree with them, then please start a discussion here:. + All tests are placed in a root-level directory named `UnitTests`. Inside this directory is a structure just like the existing folder structure (e.g. `SU2_CFD/numerics`), except that there are not separate `src` and `include` folders.; + Tests are grouped by class, and put in files such as `CNumerics_tests.cpp`.; + A single test executable is compiled and run, as opposed to a separate test executable for each group of tests. With the single test executable, you can always filter down to groups of tes",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/850
https://github.com/su2code/SU2/pull/850:928,Testability,test,testing,928,"## Proposed Changes. This is intended to be a small PR, but a big design shift. As discussed in issue #698, unit tests can serve an important role in software development. They complement, rather than replace, validation and verification tests. They are most useful when you want to isolate a specific behavior. Unit-testing increases development time, but improves the quality of the code and reduces code-maintenance time \[[source](https://collaboration.csc.ncsu.edu/laurie/Papers/TDDpaperv8.pdf)\]. ### Vision. In my mind, the most efficient way to proceed is to add unit tests as new behaviors are added and bugs are fixed. With each new PR, we should ask ""Should this have a unit test to verify this behavior?"" Unit tests will provide a clear way to show that each PR does what the developer promises it will do. This will require refactoring some of the code. Some parts of the code, like the CConfig class, are not unit-testing friendly. Unit testing is hard when you have God-classes and ""do-it-all"" functions. The hope is that refactoring these classes will lead to more modular and easier-to-maintain code. ### Decision to use Catch2. Catch2 was chosen for the unit testing library for the following reasons:. + It can be included as a header-only library.; + It has a very clean, easy-to-use syntax; + It has widespread use, including the FEniCS library. ### Design choices. The following design choices are in place. If you disagree with them, then please start a discussion here:. + All tests are placed in a root-level directory named `UnitTests`. Inside this directory is a structure just like the existing folder structure (e.g. `SU2_CFD/numerics`), except that there are not separate `src` and `include` folders.; + Tests are grouped by class, and put in files such as `CNumerics_tests.cpp`.; + A single test executable is compiled and run, as opposed to a separate test executable for each group of tests. With the single test executable, you can always filter down to groups of tes",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/850
https://github.com/su2code/SU2/pull/850:951,Testability,test,testing,951,"## Proposed Changes. This is intended to be a small PR, but a big design shift. As discussed in issue #698, unit tests can serve an important role in software development. They complement, rather than replace, validation and verification tests. They are most useful when you want to isolate a specific behavior. Unit-testing increases development time, but improves the quality of the code and reduces code-maintenance time \[[source](https://collaboration.csc.ncsu.edu/laurie/Papers/TDDpaperv8.pdf)\]. ### Vision. In my mind, the most efficient way to proceed is to add unit tests as new behaviors are added and bugs are fixed. With each new PR, we should ask ""Should this have a unit test to verify this behavior?"" Unit tests will provide a clear way to show that each PR does what the developer promises it will do. This will require refactoring some of the code. Some parts of the code, like the CConfig class, are not unit-testing friendly. Unit testing is hard when you have God-classes and ""do-it-all"" functions. The hope is that refactoring these classes will lead to more modular and easier-to-maintain code. ### Decision to use Catch2. Catch2 was chosen for the unit testing library for the following reasons:. + It can be included as a header-only library.; + It has a very clean, easy-to-use syntax; + It has widespread use, including the FEniCS library. ### Design choices. The following design choices are in place. If you disagree with them, then please start a discussion here:. + All tests are placed in a root-level directory named `UnitTests`. Inside this directory is a structure just like the existing folder structure (e.g. `SU2_CFD/numerics`), except that there are not separate `src` and `include` folders.; + Tests are grouped by class, and put in files such as `CNumerics_tests.cpp`.; + A single test executable is compiled and run, as opposed to a separate test executable for each group of tests. With the single test executable, you can always filter down to groups of tes",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/850
https://github.com/su2code/SU2/pull/850:1177,Testability,test,testing,1177,"ement, rather than replace, validation and verification tests. They are most useful when you want to isolate a specific behavior. Unit-testing increases development time, but improves the quality of the code and reduces code-maintenance time \[[source](https://collaboration.csc.ncsu.edu/laurie/Papers/TDDpaperv8.pdf)\]. ### Vision. In my mind, the most efficient way to proceed is to add unit tests as new behaviors are added and bugs are fixed. With each new PR, we should ask ""Should this have a unit test to verify this behavior?"" Unit tests will provide a clear way to show that each PR does what the developer promises it will do. This will require refactoring some of the code. Some parts of the code, like the CConfig class, are not unit-testing friendly. Unit testing is hard when you have God-classes and ""do-it-all"" functions. The hope is that refactoring these classes will lead to more modular and easier-to-maintain code. ### Decision to use Catch2. Catch2 was chosen for the unit testing library for the following reasons:. + It can be included as a header-only library.; + It has a very clean, easy-to-use syntax; + It has widespread use, including the FEniCS library. ### Design choices. The following design choices are in place. If you disagree with them, then please start a discussion here:. + All tests are placed in a root-level directory named `UnitTests`. Inside this directory is a structure just like the existing folder structure (e.g. `SU2_CFD/numerics`), except that there are not separate `src` and `include` folders.; + Tests are grouped by class, and put in files such as `CNumerics_tests.cpp`.; + A single test executable is compiled and run, as opposed to a separate test executable for each group of tests. With the single test executable, you can always filter down to groups of tests or individual tests.; + When `ninja test` or `meson test` is run, the test executable is only run once, sweeping through all the unit tests. The result only shows a single failure",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/850
https://github.com/su2code/SU2/pull/850:1501,Testability,test,tests,1501,"he most efficient way to proceed is to add unit tests as new behaviors are added and bugs are fixed. With each new PR, we should ask ""Should this have a unit test to verify this behavior?"" Unit tests will provide a clear way to show that each PR does what the developer promises it will do. This will require refactoring some of the code. Some parts of the code, like the CConfig class, are not unit-testing friendly. Unit testing is hard when you have God-classes and ""do-it-all"" functions. The hope is that refactoring these classes will lead to more modular and easier-to-maintain code. ### Decision to use Catch2. Catch2 was chosen for the unit testing library for the following reasons:. + It can be included as a header-only library.; + It has a very clean, easy-to-use syntax; + It has widespread use, including the FEniCS library. ### Design choices. The following design choices are in place. If you disagree with them, then please start a discussion here:. + All tests are placed in a root-level directory named `UnitTests`. Inside this directory is a structure just like the existing folder structure (e.g. `SU2_CFD/numerics`), except that there are not separate `src` and `include` folders.; + Tests are grouped by class, and put in files such as `CNumerics_tests.cpp`.; + A single test executable is compiled and run, as opposed to a separate test executable for each group of tests. With the single test executable, you can always filter down to groups of tests or individual tests.; + When `ninja test` or `meson test` is run, the test executable is only run once, sweeping through all the unit tests. The result only shows a single failure or a single success. If more detail is desired, then the test executable can be run manually.; + The relevant SU2 code is compiled as a library (e.g. `libSU2core`) and then linked into both the main executable (`SU2_CFD`) and the test program (`test_driver`). ### How to Run Unit Tests. If you compile SU2 using `ninja -C builddir`, then the te",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/850
https://github.com/su2code/SU2/pull/850:1734,Testability,Test,Tests,1734,"ach PR does what the developer promises it will do. This will require refactoring some of the code. Some parts of the code, like the CConfig class, are not unit-testing friendly. Unit testing is hard when you have God-classes and ""do-it-all"" functions. The hope is that refactoring these classes will lead to more modular and easier-to-maintain code. ### Decision to use Catch2. Catch2 was chosen for the unit testing library for the following reasons:. + It can be included as a header-only library.; + It has a very clean, easy-to-use syntax; + It has widespread use, including the FEniCS library. ### Design choices. The following design choices are in place. If you disagree with them, then please start a discussion here:. + All tests are placed in a root-level directory named `UnitTests`. Inside this directory is a structure just like the existing folder structure (e.g. `SU2_CFD/numerics`), except that there are not separate `src` and `include` folders.; + Tests are grouped by class, and put in files such as `CNumerics_tests.cpp`.; + A single test executable is compiled and run, as opposed to a separate test executable for each group of tests. With the single test executable, you can always filter down to groups of tests or individual tests.; + When `ninja test` or `meson test` is run, the test executable is only run once, sweeping through all the unit tests. The result only shows a single failure or a single success. If more detail is desired, then the test executable can be run manually.; + The relevant SU2 code is compiled as a library (e.g. `libSU2core`) and then linked into both the main executable (`SU2_CFD`) and the test program (`test_driver`). ### How to Run Unit Tests. If you compile SU2 using `ninja -C builddir`, then the test executable will automatically be compiled. You then have three options for running the tests:. + `meson test` (see documentation [here](https://mesonbuild.com/Unit-tests.html)); + `ninja test`; + Run the exectuable manually: `./UnitTest",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/850
https://github.com/su2code/SU2/pull/850:1822,Testability,test,test,1822," Some parts of the code, like the CConfig class, are not unit-testing friendly. Unit testing is hard when you have God-classes and ""do-it-all"" functions. The hope is that refactoring these classes will lead to more modular and easier-to-maintain code. ### Decision to use Catch2. Catch2 was chosen for the unit testing library for the following reasons:. + It can be included as a header-only library.; + It has a very clean, easy-to-use syntax; + It has widespread use, including the FEniCS library. ### Design choices. The following design choices are in place. If you disagree with them, then please start a discussion here:. + All tests are placed in a root-level directory named `UnitTests`. Inside this directory is a structure just like the existing folder structure (e.g. `SU2_CFD/numerics`), except that there are not separate `src` and `include` folders.; + Tests are grouped by class, and put in files such as `CNumerics_tests.cpp`.; + A single test executable is compiled and run, as opposed to a separate test executable for each group of tests. With the single test executable, you can always filter down to groups of tests or individual tests.; + When `ninja test` or `meson test` is run, the test executable is only run once, sweeping through all the unit tests. The result only shows a single failure or a single success. If more detail is desired, then the test executable can be run manually.; + The relevant SU2 code is compiled as a library (e.g. `libSU2core`) and then linked into both the main executable (`SU2_CFD`) and the test program (`test_driver`). ### How to Run Unit Tests. If you compile SU2 using `ninja -C builddir`, then the test executable will automatically be compiled. You then have three options for running the tests:. + `meson test` (see documentation [here](https://mesonbuild.com/Unit-tests.html)); + `ninja test`; + Run the exectuable manually: `./UnitTests/test_driver`. When running the executable manually, there are many customization options. Run `./U",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/850
https://github.com/su2code/SU2/pull/850:1884,Testability,test,test,1884," Some parts of the code, like the CConfig class, are not unit-testing friendly. Unit testing is hard when you have God-classes and ""do-it-all"" functions. The hope is that refactoring these classes will lead to more modular and easier-to-maintain code. ### Decision to use Catch2. Catch2 was chosen for the unit testing library for the following reasons:. + It can be included as a header-only library.; + It has a very clean, easy-to-use syntax; + It has widespread use, including the FEniCS library. ### Design choices. The following design choices are in place. If you disagree with them, then please start a discussion here:. + All tests are placed in a root-level directory named `UnitTests`. Inside this directory is a structure just like the existing folder structure (e.g. `SU2_CFD/numerics`), except that there are not separate `src` and `include` folders.; + Tests are grouped by class, and put in files such as `CNumerics_tests.cpp`.; + A single test executable is compiled and run, as opposed to a separate test executable for each group of tests. With the single test executable, you can always filter down to groups of tests or individual tests.; + When `ninja test` or `meson test` is run, the test executable is only run once, sweeping through all the unit tests. The result only shows a single failure or a single success. If more detail is desired, then the test executable can be run manually.; + The relevant SU2 code is compiled as a library (e.g. `libSU2core`) and then linked into both the main executable (`SU2_CFD`) and the test program (`test_driver`). ### How to Run Unit Tests. If you compile SU2 using `ninja -C builddir`, then the test executable will automatically be compiled. You then have three options for running the tests:. + `meson test` (see documentation [here](https://mesonbuild.com/Unit-tests.html)); + `ninja test`; + Run the exectuable manually: `./UnitTests/test_driver`. When running the executable manually, there are many customization options. Run `./U",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/850
https://github.com/su2code/SU2/pull/850:1918,Testability,test,tests,1918," Some parts of the code, like the CConfig class, are not unit-testing friendly. Unit testing is hard when you have God-classes and ""do-it-all"" functions. The hope is that refactoring these classes will lead to more modular and easier-to-maintain code. ### Decision to use Catch2. Catch2 was chosen for the unit testing library for the following reasons:. + It can be included as a header-only library.; + It has a very clean, easy-to-use syntax; + It has widespread use, including the FEniCS library. ### Design choices. The following design choices are in place. If you disagree with them, then please start a discussion here:. + All tests are placed in a root-level directory named `UnitTests`. Inside this directory is a structure just like the existing folder structure (e.g. `SU2_CFD/numerics`), except that there are not separate `src` and `include` folders.; + Tests are grouped by class, and put in files such as `CNumerics_tests.cpp`.; + A single test executable is compiled and run, as opposed to a separate test executable for each group of tests. With the single test executable, you can always filter down to groups of tests or individual tests.; + When `ninja test` or `meson test` is run, the test executable is only run once, sweeping through all the unit tests. The result only shows a single failure or a single success. If more detail is desired, then the test executable can be run manually.; + The relevant SU2 code is compiled as a library (e.g. `libSU2core`) and then linked into both the main executable (`SU2_CFD`) and the test program (`test_driver`). ### How to Run Unit Tests. If you compile SU2 using `ninja -C builddir`, then the test executable will automatically be compiled. You then have three options for running the tests:. + `meson test` (see documentation [here](https://mesonbuild.com/Unit-tests.html)); + `ninja test`; + Run the exectuable manually: `./UnitTests/test_driver`. When running the executable manually, there are many customization options. Run `./U",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/850
https://github.com/su2code/SU2/pull/850:1941,Testability,test,test,1941,"u have God-classes and ""do-it-all"" functions. The hope is that refactoring these classes will lead to more modular and easier-to-maintain code. ### Decision to use Catch2. Catch2 was chosen for the unit testing library for the following reasons:. + It can be included as a header-only library.; + It has a very clean, easy-to-use syntax; + It has widespread use, including the FEniCS library. ### Design choices. The following design choices are in place. If you disagree with them, then please start a discussion here:. + All tests are placed in a root-level directory named `UnitTests`. Inside this directory is a structure just like the existing folder structure (e.g. `SU2_CFD/numerics`), except that there are not separate `src` and `include` folders.; + Tests are grouped by class, and put in files such as `CNumerics_tests.cpp`.; + A single test executable is compiled and run, as opposed to a separate test executable for each group of tests. With the single test executable, you can always filter down to groups of tests or individual tests.; + When `ninja test` or `meson test` is run, the test executable is only run once, sweeping through all the unit tests. The result only shows a single failure or a single success. If more detail is desired, then the test executable can be run manually.; + The relevant SU2 code is compiled as a library (e.g. `libSU2core`) and then linked into both the main executable (`SU2_CFD`) and the test program (`test_driver`). ### How to Run Unit Tests. If you compile SU2 using `ninja -C builddir`, then the test executable will automatically be compiled. You then have three options for running the tests:. + `meson test` (see documentation [here](https://mesonbuild.com/Unit-tests.html)); + `ninja test`; + Run the exectuable manually: `./UnitTests/test_driver`. When running the executable manually, there are many customization options. Run `./UnitTests/test_driver --help` to see them all. ### How to add unit tests. I have already included a single u",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/850
https://github.com/su2code/SU2/pull/850:1998,Testability,test,tests,1998,"u have God-classes and ""do-it-all"" functions. The hope is that refactoring these classes will lead to more modular and easier-to-maintain code. ### Decision to use Catch2. Catch2 was chosen for the unit testing library for the following reasons:. + It can be included as a header-only library.; + It has a very clean, easy-to-use syntax; + It has widespread use, including the FEniCS library. ### Design choices. The following design choices are in place. If you disagree with them, then please start a discussion here:. + All tests are placed in a root-level directory named `UnitTests`. Inside this directory is a structure just like the existing folder structure (e.g. `SU2_CFD/numerics`), except that there are not separate `src` and `include` folders.; + Tests are grouped by class, and put in files such as `CNumerics_tests.cpp`.; + A single test executable is compiled and run, as opposed to a separate test executable for each group of tests. With the single test executable, you can always filter down to groups of tests or individual tests.; + When `ninja test` or `meson test` is run, the test executable is only run once, sweeping through all the unit tests. The result only shows a single failure or a single success. If more detail is desired, then the test executable can be run manually.; + The relevant SU2 code is compiled as a library (e.g. `libSU2core`) and then linked into both the main executable (`SU2_CFD`) and the test program (`test_driver`). ### How to Run Unit Tests. If you compile SU2 using `ninja -C builddir`, then the test executable will automatically be compiled. You then have three options for running the tests:. + `meson test` (see documentation [here](https://mesonbuild.com/Unit-tests.html)); + `ninja test`; + Run the exectuable manually: `./UnitTests/test_driver`. When running the executable manually, there are many customization options. Run `./UnitTests/test_driver --help` to see them all. ### How to add unit tests. I have already included a single u",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/850
https://github.com/su2code/SU2/pull/850:2018,Testability,test,tests,2018,"u have God-classes and ""do-it-all"" functions. The hope is that refactoring these classes will lead to more modular and easier-to-maintain code. ### Decision to use Catch2. Catch2 was chosen for the unit testing library for the following reasons:. + It can be included as a header-only library.; + It has a very clean, easy-to-use syntax; + It has widespread use, including the FEniCS library. ### Design choices. The following design choices are in place. If you disagree with them, then please start a discussion here:. + All tests are placed in a root-level directory named `UnitTests`. Inside this directory is a structure just like the existing folder structure (e.g. `SU2_CFD/numerics`), except that there are not separate `src` and `include` folders.; + Tests are grouped by class, and put in files such as `CNumerics_tests.cpp`.; + A single test executable is compiled and run, as opposed to a separate test executable for each group of tests. With the single test executable, you can always filter down to groups of tests or individual tests.; + When `ninja test` or `meson test` is run, the test executable is only run once, sweeping through all the unit tests. The result only shows a single failure or a single success. If more detail is desired, then the test executable can be run manually.; + The relevant SU2 code is compiled as a library (e.g. `libSU2core`) and then linked into both the main executable (`SU2_CFD`) and the test program (`test_driver`). ### How to Run Unit Tests. If you compile SU2 using `ninja -C builddir`, then the test executable will automatically be compiled. You then have three options for running the tests:. + `meson test` (see documentation [here](https://mesonbuild.com/Unit-tests.html)); + `ninja test`; + Run the exectuable manually: `./UnitTests/test_driver`. When running the executable manually, there are many customization options. Run `./UnitTests/test_driver --help` to see them all. ### How to add unit tests. I have already included a single u",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/850
https://github.com/su2code/SU2/pull/850:2040,Testability,test,test,2040,"ular and easier-to-maintain code. ### Decision to use Catch2. Catch2 was chosen for the unit testing library for the following reasons:. + It can be included as a header-only library.; + It has a very clean, easy-to-use syntax; + It has widespread use, including the FEniCS library. ### Design choices. The following design choices are in place. If you disagree with them, then please start a discussion here:. + All tests are placed in a root-level directory named `UnitTests`. Inside this directory is a structure just like the existing folder structure (e.g. `SU2_CFD/numerics`), except that there are not separate `src` and `include` folders.; + Tests are grouped by class, and put in files such as `CNumerics_tests.cpp`.; + A single test executable is compiled and run, as opposed to a separate test executable for each group of tests. With the single test executable, you can always filter down to groups of tests or individual tests.; + When `ninja test` or `meson test` is run, the test executable is only run once, sweeping through all the unit tests. The result only shows a single failure or a single success. If more detail is desired, then the test executable can be run manually.; + The relevant SU2 code is compiled as a library (e.g. `libSU2core`) and then linked into both the main executable (`SU2_CFD`) and the test program (`test_driver`). ### How to Run Unit Tests. If you compile SU2 using `ninja -C builddir`, then the test executable will automatically be compiled. You then have three options for running the tests:. + `meson test` (see documentation [here](https://mesonbuild.com/Unit-tests.html)); + `ninja test`; + Run the exectuable manually: `./UnitTests/test_driver`. When running the executable manually, there are many customization options. Run `./UnitTests/test_driver --help` to see them all. ### How to add unit tests. I have already included a single unit-test example (`UnitTests/SU2_CFD/src/numerics/CNumerics_tests.cpp`). Aside from the headaches with CConfig",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/850
https://github.com/su2code/SU2/pull/850:2056,Testability,test,test,2056,"ular and easier-to-maintain code. ### Decision to use Catch2. Catch2 was chosen for the unit testing library for the following reasons:. + It can be included as a header-only library.; + It has a very clean, easy-to-use syntax; + It has widespread use, including the FEniCS library. ### Design choices. The following design choices are in place. If you disagree with them, then please start a discussion here:. + All tests are placed in a root-level directory named `UnitTests`. Inside this directory is a structure just like the existing folder structure (e.g. `SU2_CFD/numerics`), except that there are not separate `src` and `include` folders.; + Tests are grouped by class, and put in files such as `CNumerics_tests.cpp`.; + A single test executable is compiled and run, as opposed to a separate test executable for each group of tests. With the single test executable, you can always filter down to groups of tests or individual tests.; + When `ninja test` or `meson test` is run, the test executable is only run once, sweeping through all the unit tests. The result only shows a single failure or a single success. If more detail is desired, then the test executable can be run manually.; + The relevant SU2 code is compiled as a library (e.g. `libSU2core`) and then linked into both the main executable (`SU2_CFD`) and the test program (`test_driver`). ### How to Run Unit Tests. If you compile SU2 using `ninja -C builddir`, then the test executable will automatically be compiled. You then have three options for running the tests:. + `meson test` (see documentation [here](https://mesonbuild.com/Unit-tests.html)); + `ninja test`; + Run the exectuable manually: `./UnitTests/test_driver`. When running the executable manually, there are many customization options. Run `./UnitTests/test_driver --help` to see them all. ### How to add unit tests. I have already included a single unit-test example (`UnitTests/SU2_CFD/src/numerics/CNumerics_tests.cpp`). Aside from the headaches with CConfig",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/850
https://github.com/su2code/SU2/pull/850:2074,Testability,test,test,2074,"ular and easier-to-maintain code. ### Decision to use Catch2. Catch2 was chosen for the unit testing library for the following reasons:. + It can be included as a header-only library.; + It has a very clean, easy-to-use syntax; + It has widespread use, including the FEniCS library. ### Design choices. The following design choices are in place. If you disagree with them, then please start a discussion here:. + All tests are placed in a root-level directory named `UnitTests`. Inside this directory is a structure just like the existing folder structure (e.g. `SU2_CFD/numerics`), except that there are not separate `src` and `include` folders.; + Tests are grouped by class, and put in files such as `CNumerics_tests.cpp`.; + A single test executable is compiled and run, as opposed to a separate test executable for each group of tests. With the single test executable, you can always filter down to groups of tests or individual tests.; + When `ninja test` or `meson test` is run, the test executable is only run once, sweeping through all the unit tests. The result only shows a single failure or a single success. If more detail is desired, then the test executable can be run manually.; + The relevant SU2 code is compiled as a library (e.g. `libSU2core`) and then linked into both the main executable (`SU2_CFD`) and the test program (`test_driver`). ### How to Run Unit Tests. If you compile SU2 using `ninja -C builddir`, then the test executable will automatically be compiled. You then have three options for running the tests:. + `meson test` (see documentation [here](https://mesonbuild.com/Unit-tests.html)); + `ninja test`; + Run the exectuable manually: `./UnitTests/test_driver`. When running the executable manually, there are many customization options. Run `./UnitTests/test_driver --help` to see them all. ### How to add unit tests. I have already included a single unit-test example (`UnitTests/SU2_CFD/src/numerics/CNumerics_tests.cpp`). Aside from the headaches with CConfig",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/850
https://github.com/su2code/SU2/pull/850:2138,Testability,test,tests,2138,"ular and easier-to-maintain code. ### Decision to use Catch2. Catch2 was chosen for the unit testing library for the following reasons:. + It can be included as a header-only library.; + It has a very clean, easy-to-use syntax; + It has widespread use, including the FEniCS library. ### Design choices. The following design choices are in place. If you disagree with them, then please start a discussion here:. + All tests are placed in a root-level directory named `UnitTests`. Inside this directory is a structure just like the existing folder structure (e.g. `SU2_CFD/numerics`), except that there are not separate `src` and `include` folders.; + Tests are grouped by class, and put in files such as `CNumerics_tests.cpp`.; + A single test executable is compiled and run, as opposed to a separate test executable for each group of tests. With the single test executable, you can always filter down to groups of tests or individual tests.; + When `ninja test` or `meson test` is run, the test executable is only run once, sweeping through all the unit tests. The result only shows a single failure or a single success. If more detail is desired, then the test executable can be run manually.; + The relevant SU2 code is compiled as a library (e.g. `libSU2core`) and then linked into both the main executable (`SU2_CFD`) and the test program (`test_driver`). ### How to Run Unit Tests. If you compile SU2 using `ninja -C builddir`, then the test executable will automatically be compiled. You then have three options for running the tests:. + `meson test` (see documentation [here](https://mesonbuild.com/Unit-tests.html)); + `ninja test`; + Run the exectuable manually: `./UnitTests/test_driver`. When running the executable manually, there are many customization options. Run `./UnitTests/test_driver --help` to see them all. ### How to add unit tests. I have already included a single unit-test example (`UnitTests/SU2_CFD/src/numerics/CNumerics_tests.cpp`). Aside from the headaches with CConfig",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/850
https://github.com/su2code/SU2/pull/850:2241,Testability,test,test,2241,"d as a header-only library.; + It has a very clean, easy-to-use syntax; + It has widespread use, including the FEniCS library. ### Design choices. The following design choices are in place. If you disagree with them, then please start a discussion here:. + All tests are placed in a root-level directory named `UnitTests`. Inside this directory is a structure just like the existing folder structure (e.g. `SU2_CFD/numerics`), except that there are not separate `src` and `include` folders.; + Tests are grouped by class, and put in files such as `CNumerics_tests.cpp`.; + A single test executable is compiled and run, as opposed to a separate test executable for each group of tests. With the single test executable, you can always filter down to groups of tests or individual tests.; + When `ninja test` or `meson test` is run, the test executable is only run once, sweeping through all the unit tests. The result only shows a single failure or a single success. If more detail is desired, then the test executable can be run manually.; + The relevant SU2 code is compiled as a library (e.g. `libSU2core`) and then linked into both the main executable (`SU2_CFD`) and the test program (`test_driver`). ### How to Run Unit Tests. If you compile SU2 using `ninja -C builddir`, then the test executable will automatically be compiled. You then have three options for running the tests:. + `meson test` (see documentation [here](https://mesonbuild.com/Unit-tests.html)); + `ninja test`; + Run the exectuable manually: `./UnitTests/test_driver`. When running the executable manually, there are many customization options. Run `./UnitTests/test_driver --help` to see them all. ### How to add unit tests. I have already included a single unit-test example (`UnitTests/SU2_CFD/src/numerics/CNumerics_tests.cpp`). Aside from the headaches with CConfig, this example should be clear. If not, raise questions and I will answer them. ~~I plan on adding a few more example tests, as well as a ""How-To"" page on th",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/850
https://github.com/su2code/SU2/pull/850:2414,Testability,test,test,2414,"he following design choices are in place. If you disagree with them, then please start a discussion here:. + All tests are placed in a root-level directory named `UnitTests`. Inside this directory is a structure just like the existing folder structure (e.g. `SU2_CFD/numerics`), except that there are not separate `src` and `include` folders.; + Tests are grouped by class, and put in files such as `CNumerics_tests.cpp`.; + A single test executable is compiled and run, as opposed to a separate test executable for each group of tests. With the single test executable, you can always filter down to groups of tests or individual tests.; + When `ninja test` or `meson test` is run, the test executable is only run once, sweeping through all the unit tests. The result only shows a single failure or a single success. If more detail is desired, then the test executable can be run manually.; + The relevant SU2 code is compiled as a library (e.g. `libSU2core`) and then linked into both the main executable (`SU2_CFD`) and the test program (`test_driver`). ### How to Run Unit Tests. If you compile SU2 using `ninja -C builddir`, then the test executable will automatically be compiled. You then have three options for running the tests:. + `meson test` (see documentation [here](https://mesonbuild.com/Unit-tests.html)); + `ninja test`; + Run the exectuable manually: `./UnitTests/test_driver`. When running the executable manually, there are many customization options. Run `./UnitTests/test_driver --help` to see them all. ### How to add unit tests. I have already included a single unit-test example (`UnitTests/SU2_CFD/src/numerics/CNumerics_tests.cpp`). Aside from the headaches with CConfig, this example should be clear. If not, raise questions and I will answer them. ~~I plan on adding a few more example tests, as well as a ""How-To"" page on the website.~~ Please see the PR on the website repo for more documentation. To learn more, check out the [great tutorial](https://github.com/catchor",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/850
https://github.com/su2code/SU2/pull/850:2464,Testability,Test,Tests,2464," then please start a discussion here:. + All tests are placed in a root-level directory named `UnitTests`. Inside this directory is a structure just like the existing folder structure (e.g. `SU2_CFD/numerics`), except that there are not separate `src` and `include` folders.; + Tests are grouped by class, and put in files such as `CNumerics_tests.cpp`.; + A single test executable is compiled and run, as opposed to a separate test executable for each group of tests. With the single test executable, you can always filter down to groups of tests or individual tests.; + When `ninja test` or `meson test` is run, the test executable is only run once, sweeping through all the unit tests. The result only shows a single failure or a single success. If more detail is desired, then the test executable can be run manually.; + The relevant SU2 code is compiled as a library (e.g. `libSU2core`) and then linked into both the main executable (`SU2_CFD`) and the test program (`test_driver`). ### How to Run Unit Tests. If you compile SU2 using `ninja -C builddir`, then the test executable will automatically be compiled. You then have three options for running the tests:. + `meson test` (see documentation [here](https://mesonbuild.com/Unit-tests.html)); + `ninja test`; + Run the exectuable manually: `./UnitTests/test_driver`. When running the executable manually, there are many customization options. Run `./UnitTests/test_driver --help` to see them all. ### How to add unit tests. I have already included a single unit-test example (`UnitTests/SU2_CFD/src/numerics/CNumerics_tests.cpp`). Aside from the headaches with CConfig, this example should be clear. If not, raise questions and I will answer them. ~~I plan on adding a few more example tests, as well as a ""How-To"" page on the website.~~ Please see the PR on the website repo for more documentation. To learn more, check out the [great tutorial](https://github.com/catchorg/Catch2/blob/master/docs/tutorial.md) for Catch2. You can also find ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/850
https://github.com/su2code/SU2/pull/850:2526,Testability,test,test,2526,"a root-level directory named `UnitTests`. Inside this directory is a structure just like the existing folder structure (e.g. `SU2_CFD/numerics`), except that there are not separate `src` and `include` folders.; + Tests are grouped by class, and put in files such as `CNumerics_tests.cpp`.; + A single test executable is compiled and run, as opposed to a separate test executable for each group of tests. With the single test executable, you can always filter down to groups of tests or individual tests.; + When `ninja test` or `meson test` is run, the test executable is only run once, sweeping through all the unit tests. The result only shows a single failure or a single success. If more detail is desired, then the test executable can be run manually.; + The relevant SU2 code is compiled as a library (e.g. `libSU2core`) and then linked into both the main executable (`SU2_CFD`) and the test program (`test_driver`). ### How to Run Unit Tests. If you compile SU2 using `ninja -C builddir`, then the test executable will automatically be compiled. You then have three options for running the tests:. + `meson test` (see documentation [here](https://mesonbuild.com/Unit-tests.html)); + `ninja test`; + Run the exectuable manually: `./UnitTests/test_driver`. When running the executable manually, there are many customization options. Run `./UnitTests/test_driver --help` to see them all. ### How to add unit tests. I have already included a single unit-test example (`UnitTests/SU2_CFD/src/numerics/CNumerics_tests.cpp`). Aside from the headaches with CConfig, this example should be clear. If not, raise questions and I will answer them. ~~I plan on adding a few more example tests, as well as a ""How-To"" page on the website.~~ Please see the PR on the website repo for more documentation. To learn more, check out the [great tutorial](https://github.com/catchorg/Catch2/blob/master/docs/tutorial.md) for Catch2. You can also find more in-depth documentation there. ### I still don't understand u",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/850
https://github.com/su2code/SU2/pull/850:2618,Testability,test,tests,2618," just like the existing folder structure (e.g. `SU2_CFD/numerics`), except that there are not separate `src` and `include` folders.; + Tests are grouped by class, and put in files such as `CNumerics_tests.cpp`.; + A single test executable is compiled and run, as opposed to a separate test executable for each group of tests. With the single test executable, you can always filter down to groups of tests or individual tests.; + When `ninja test` or `meson test` is run, the test executable is only run once, sweeping through all the unit tests. The result only shows a single failure or a single success. If more detail is desired, then the test executable can be run manually.; + The relevant SU2 code is compiled as a library (e.g. `libSU2core`) and then linked into both the main executable (`SU2_CFD`) and the test program (`test_driver`). ### How to Run Unit Tests. If you compile SU2 using `ninja -C builddir`, then the test executable will automatically be compiled. You then have three options for running the tests:. + `meson test` (see documentation [here](https://mesonbuild.com/Unit-tests.html)); + `ninja test`; + Run the exectuable manually: `./UnitTests/test_driver`. When running the executable manually, there are many customization options. Run `./UnitTests/test_driver --help` to see them all. ### How to add unit tests. I have already included a single unit-test example (`UnitTests/SU2_CFD/src/numerics/CNumerics_tests.cpp`). Aside from the headaches with CConfig, this example should be clear. If not, raise questions and I will answer them. ~~I plan on adding a few more example tests, as well as a ""How-To"" page on the website.~~ Please see the PR on the website repo for more documentation. To learn more, check out the [great tutorial](https://github.com/catchorg/Catch2/blob/master/docs/tutorial.md) for Catch2. You can also find more in-depth documentation there. ### I still don't understand unit tests. Where can I learn more?. I highly recommend reading at least one o",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/850
https://github.com/su2code/SU2/pull/850:2635,Testability,test,test,2635,"numerics`), except that there are not separate `src` and `include` folders.; + Tests are grouped by class, and put in files such as `CNumerics_tests.cpp`.; + A single test executable is compiled and run, as opposed to a separate test executable for each group of tests. With the single test executable, you can always filter down to groups of tests or individual tests.; + When `ninja test` or `meson test` is run, the test executable is only run once, sweeping through all the unit tests. The result only shows a single failure or a single success. If more detail is desired, then the test executable can be run manually.; + The relevant SU2 code is compiled as a library (e.g. `libSU2core`) and then linked into both the main executable (`SU2_CFD`) and the test program (`test_driver`). ### How to Run Unit Tests. If you compile SU2 using `ninja -C builddir`, then the test executable will automatically be compiled. You then have three options for running the tests:. + `meson test` (see documentation [here](https://mesonbuild.com/Unit-tests.html)); + `ninja test`; + Run the exectuable manually: `./UnitTests/test_driver`. When running the executable manually, there are many customization options. Run `./UnitTests/test_driver --help` to see them all. ### How to add unit tests. I have already included a single unit-test example (`UnitTests/SU2_CFD/src/numerics/CNumerics_tests.cpp`). Aside from the headaches with CConfig, this example should be clear. If not, raise questions and I will answer them. ~~I plan on adding a few more example tests, as well as a ""How-To"" page on the website.~~ Please see the PR on the website repo for more documentation. To learn more, check out the [great tutorial](https://github.com/catchorg/Catch2/blob/master/docs/tutorial.md) for Catch2. You can also find more in-depth documentation there. ### I still don't understand unit tests. Where can I learn more?. I highly recommend reading at least one of these two books:. + ""Working Effectively with Legacy Co",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/850
https://github.com/su2code/SU2/pull/850:2695,Testability,test,tests,2695,"separate `src` and `include` folders.; + Tests are grouped by class, and put in files such as `CNumerics_tests.cpp`.; + A single test executable is compiled and run, as opposed to a separate test executable for each group of tests. With the single test executable, you can always filter down to groups of tests or individual tests.; + When `ninja test` or `meson test` is run, the test executable is only run once, sweeping through all the unit tests. The result only shows a single failure or a single success. If more detail is desired, then the test executable can be run manually.; + The relevant SU2 code is compiled as a library (e.g. `libSU2core`) and then linked into both the main executable (`SU2_CFD`) and the test program (`test_driver`). ### How to Run Unit Tests. If you compile SU2 using `ninja -C builddir`, then the test executable will automatically be compiled. You then have three options for running the tests:. + `meson test` (see documentation [here](https://mesonbuild.com/Unit-tests.html)); + `ninja test`; + Run the exectuable manually: `./UnitTests/test_driver`. When running the executable manually, there are many customization options. Run `./UnitTests/test_driver --help` to see them all. ### How to add unit tests. I have already included a single unit-test example (`UnitTests/SU2_CFD/src/numerics/CNumerics_tests.cpp`). Aside from the headaches with CConfig, this example should be clear. If not, raise questions and I will answer them. ~~I plan on adding a few more example tests, as well as a ""How-To"" page on the website.~~ Please see the PR on the website repo for more documentation. To learn more, check out the [great tutorial](https://github.com/catchorg/Catch2/blob/master/docs/tutorial.md) for Catch2. You can also find more in-depth documentation there. ### I still don't understand unit tests. Where can I learn more?. I highly recommend reading at least one of these two books:. + ""Working Effectively with Legacy Code,"" by Michael Feathers; + ""Modern C+",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/850
https://github.com/su2code/SU2/pull/850:2718,Testability,test,test,2718,".; + Tests are grouped by class, and put in files such as `CNumerics_tests.cpp`.; + A single test executable is compiled and run, as opposed to a separate test executable for each group of tests. With the single test executable, you can always filter down to groups of tests or individual tests.; + When `ninja test` or `meson test` is run, the test executable is only run once, sweeping through all the unit tests. The result only shows a single failure or a single success. If more detail is desired, then the test executable can be run manually.; + The relevant SU2 code is compiled as a library (e.g. `libSU2core`) and then linked into both the main executable (`SU2_CFD`) and the test program (`test_driver`). ### How to Run Unit Tests. If you compile SU2 using `ninja -C builddir`, then the test executable will automatically be compiled. You then have three options for running the tests:. + `meson test` (see documentation [here](https://mesonbuild.com/Unit-tests.html)); + `ninja test`; + Run the exectuable manually: `./UnitTests/test_driver`. When running the executable manually, there are many customization options. Run `./UnitTests/test_driver --help` to see them all. ### How to add unit tests. I have already included a single unit-test example (`UnitTests/SU2_CFD/src/numerics/CNumerics_tests.cpp`). Aside from the headaches with CConfig, this example should be clear. If not, raise questions and I will answer them. ~~I plan on adding a few more example tests, as well as a ""How-To"" page on the website.~~ Please see the PR on the website repo for more documentation. To learn more, check out the [great tutorial](https://github.com/catchorg/Catch2/blob/master/docs/tutorial.md) for Catch2. You can also find more in-depth documentation there. ### I still don't understand unit tests. Where can I learn more?. I highly recommend reading at least one of these two books:. + ""Working Effectively with Legacy Code,"" by Michael Feathers; + ""Modern C++ Programming with Test-Driven Devel",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/850
https://github.com/su2code/SU2/pull/850:2933,Testability,test,tests,2933,"With the single test executable, you can always filter down to groups of tests or individual tests.; + When `ninja test` or `meson test` is run, the test executable is only run once, sweeping through all the unit tests. The result only shows a single failure or a single success. If more detail is desired, then the test executable can be run manually.; + The relevant SU2 code is compiled as a library (e.g. `libSU2core`) and then linked into both the main executable (`SU2_CFD`) and the test program (`test_driver`). ### How to Run Unit Tests. If you compile SU2 using `ninja -C builddir`, then the test executable will automatically be compiled. You then have three options for running the tests:. + `meson test` (see documentation [here](https://mesonbuild.com/Unit-tests.html)); + `ninja test`; + Run the exectuable manually: `./UnitTests/test_driver`. When running the executable manually, there are many customization options. Run `./UnitTests/test_driver --help` to see them all. ### How to add unit tests. I have already included a single unit-test example (`UnitTests/SU2_CFD/src/numerics/CNumerics_tests.cpp`). Aside from the headaches with CConfig, this example should be clear. If not, raise questions and I will answer them. ~~I plan on adding a few more example tests, as well as a ""How-To"" page on the website.~~ Please see the PR on the website repo for more documentation. To learn more, check out the [great tutorial](https://github.com/catchorg/Catch2/blob/master/docs/tutorial.md) for Catch2. You can also find more in-depth documentation there. ### I still don't understand unit tests. Where can I learn more?. I highly recommend reading at least one of these two books:. + ""Working Effectively with Legacy Code,"" by Michael Feathers; + ""Modern C++ Programming with Test-Driven Development,"" by Jeff Langr. ## Remaining work. + ~~Add unit-testing to Travis CI~~; + ~~Add support for unit testing in AD builds~~; + ~~Add more examples of unit tests~~; + ~~Add ""How-To Add Unit Tes",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/850
https://github.com/su2code/SU2/pull/850:2978,Testability,test,test,2978,"roups of tests or individual tests.; + When `ninja test` or `meson test` is run, the test executable is only run once, sweeping through all the unit tests. The result only shows a single failure or a single success. If more detail is desired, then the test executable can be run manually.; + The relevant SU2 code is compiled as a library (e.g. `libSU2core`) and then linked into both the main executable (`SU2_CFD`) and the test program (`test_driver`). ### How to Run Unit Tests. If you compile SU2 using `ninja -C builddir`, then the test executable will automatically be compiled. You then have three options for running the tests:. + `meson test` (see documentation [here](https://mesonbuild.com/Unit-tests.html)); + `ninja test`; + Run the exectuable manually: `./UnitTests/test_driver`. When running the executable manually, there are many customization options. Run `./UnitTests/test_driver --help` to see them all. ### How to add unit tests. I have already included a single unit-test example (`UnitTests/SU2_CFD/src/numerics/CNumerics_tests.cpp`). Aside from the headaches with CConfig, this example should be clear. If not, raise questions and I will answer them. ~~I plan on adding a few more example tests, as well as a ""How-To"" page on the website.~~ Please see the PR on the website repo for more documentation. To learn more, check out the [great tutorial](https://github.com/catchorg/Catch2/blob/master/docs/tutorial.md) for Catch2. You can also find more in-depth documentation there. ### I still don't understand unit tests. Where can I learn more?. I highly recommend reading at least one of these two books:. + ""Working Effectively with Legacy Code,"" by Michael Feathers; + ""Modern C++ Programming with Test-Driven Development,"" by Jeff Langr. ## Remaining work. + ~~Add unit-testing to Travis CI~~; + ~~Add support for unit testing in AD builds~~; + ~~Add more examples of unit tests~~; + ~~Add ""How-To Add Unit Tests"" documentation~~. ## Related Work; This resolves issue #698. ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/850
https://github.com/su2code/SU2/pull/850:3202,Testability,test,tests,3202," more detail is desired, then the test executable can be run manually.; + The relevant SU2 code is compiled as a library (e.g. `libSU2core`) and then linked into both the main executable (`SU2_CFD`) and the test program (`test_driver`). ### How to Run Unit Tests. If you compile SU2 using `ninja -C builddir`, then the test executable will automatically be compiled. You then have three options for running the tests:. + `meson test` (see documentation [here](https://mesonbuild.com/Unit-tests.html)); + `ninja test`; + Run the exectuable manually: `./UnitTests/test_driver`. When running the executable manually, there are many customization options. Run `./UnitTests/test_driver --help` to see them all. ### How to add unit tests. I have already included a single unit-test example (`UnitTests/SU2_CFD/src/numerics/CNumerics_tests.cpp`). Aside from the headaches with CConfig, this example should be clear. If not, raise questions and I will answer them. ~~I plan on adding a few more example tests, as well as a ""How-To"" page on the website.~~ Please see the PR on the website repo for more documentation. To learn more, check out the [great tutorial](https://github.com/catchorg/Catch2/blob/master/docs/tutorial.md) for Catch2. You can also find more in-depth documentation there. ### I still don't understand unit tests. Where can I learn more?. I highly recommend reading at least one of these two books:. + ""Working Effectively with Legacy Code,"" by Michael Feathers; + ""Modern C++ Programming with Test-Driven Development,"" by Jeff Langr. ## Remaining work. + ~~Add unit-testing to Travis CI~~; + ~~Add support for unit testing in AD builds~~; + ~~Add more examples of unit tests~~; + ~~Add ""How-To Add Unit Tests"" documentation~~. ## Related Work; This resolves issue #698. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flag",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/850
https://github.com/su2code/SU2/pull/850:3526,Testability,test,tests,3526,"sts. If you compile SU2 using `ninja -C builddir`, then the test executable will automatically be compiled. You then have three options for running the tests:. + `meson test` (see documentation [here](https://mesonbuild.com/Unit-tests.html)); + `ninja test`; + Run the exectuable manually: `./UnitTests/test_driver`. When running the executable manually, there are many customization options. Run `./UnitTests/test_driver --help` to see them all. ### How to add unit tests. I have already included a single unit-test example (`UnitTests/SU2_CFD/src/numerics/CNumerics_tests.cpp`). Aside from the headaches with CConfig, this example should be clear. If not, raise questions and I will answer them. ~~I plan on adding a few more example tests, as well as a ""How-To"" page on the website.~~ Please see the PR on the website repo for more documentation. To learn more, check out the [great tutorial](https://github.com/catchorg/Catch2/blob/master/docs/tutorial.md) for Catch2. You can also find more in-depth documentation there. ### I still don't understand unit tests. Where can I learn more?. I highly recommend reading at least one of these two books:. + ""Working Effectively with Legacy Code,"" by Michael Feathers; + ""Modern C++ Programming with Test-Driven Development,"" by Jeff Langr. ## Remaining work. + ~~Add unit-testing to Travis CI~~; + ~~Add support for unit testing in AD builds~~; + ~~Add more examples of unit tests~~; + ~~Add ""How-To Add Unit Tests"" documentation~~. ## Related Work; This resolves issue #698. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/850
https://github.com/su2code/SU2/pull/850:3713,Testability,Test,Test-Driven,3713,"sts. If you compile SU2 using `ninja -C builddir`, then the test executable will automatically be compiled. You then have three options for running the tests:. + `meson test` (see documentation [here](https://mesonbuild.com/Unit-tests.html)); + `ninja test`; + Run the exectuable manually: `./UnitTests/test_driver`. When running the executable manually, there are many customization options. Run `./UnitTests/test_driver --help` to see them all. ### How to add unit tests. I have already included a single unit-test example (`UnitTests/SU2_CFD/src/numerics/CNumerics_tests.cpp`). Aside from the headaches with CConfig, this example should be clear. If not, raise questions and I will answer them. ~~I plan on adding a few more example tests, as well as a ""How-To"" page on the website.~~ Please see the PR on the website repo for more documentation. To learn more, check out the [great tutorial](https://github.com/catchorg/Catch2/blob/master/docs/tutorial.md) for Catch2. You can also find more in-depth documentation there. ### I still don't understand unit tests. Where can I learn more?. I highly recommend reading at least one of these two books:. + ""Working Effectively with Legacy Code,"" by Michael Feathers; + ""Modern C++ Programming with Test-Driven Development,"" by Jeff Langr. ## Remaining work. + ~~Add unit-testing to Travis CI~~; + ~~Add support for unit testing in AD builds~~; + ~~Add more examples of unit tests~~; + ~~Add ""How-To Add Unit Tests"" documentation~~. ## Related Work; This resolves issue #698. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/850
https://github.com/su2code/SU2/pull/850:3786,Testability,test,testing,3786,"sts. If you compile SU2 using `ninja -C builddir`, then the test executable will automatically be compiled. You then have three options for running the tests:. + `meson test` (see documentation [here](https://mesonbuild.com/Unit-tests.html)); + `ninja test`; + Run the exectuable manually: `./UnitTests/test_driver`. When running the executable manually, there are many customization options. Run `./UnitTests/test_driver --help` to see them all. ### How to add unit tests. I have already included a single unit-test example (`UnitTests/SU2_CFD/src/numerics/CNumerics_tests.cpp`). Aside from the headaches with CConfig, this example should be clear. If not, raise questions and I will answer them. ~~I plan on adding a few more example tests, as well as a ""How-To"" page on the website.~~ Please see the PR on the website repo for more documentation. To learn more, check out the [great tutorial](https://github.com/catchorg/Catch2/blob/master/docs/tutorial.md) for Catch2. You can also find more in-depth documentation there. ### I still don't understand unit tests. Where can I learn more?. I highly recommend reading at least one of these two books:. + ""Working Effectively with Legacy Code,"" by Michael Feathers; + ""Modern C++ Programming with Test-Driven Development,"" by Jeff Langr. ## Remaining work. + ~~Add unit-testing to Travis CI~~; + ~~Add support for unit testing in AD builds~~; + ~~Add more examples of unit tests~~; + ~~Add ""How-To Add Unit Tests"" documentation~~. ## Related Work; This resolves issue #698. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/850
https://github.com/su2code/SU2/pull/850:3835,Testability,test,testing,3835,"sts. If you compile SU2 using `ninja -C builddir`, then the test executable will automatically be compiled. You then have three options for running the tests:. + `meson test` (see documentation [here](https://mesonbuild.com/Unit-tests.html)); + `ninja test`; + Run the exectuable manually: `./UnitTests/test_driver`. When running the executable manually, there are many customization options. Run `./UnitTests/test_driver --help` to see them all. ### How to add unit tests. I have already included a single unit-test example (`UnitTests/SU2_CFD/src/numerics/CNumerics_tests.cpp`). Aside from the headaches with CConfig, this example should be clear. If not, raise questions and I will answer them. ~~I plan on adding a few more example tests, as well as a ""How-To"" page on the website.~~ Please see the PR on the website repo for more documentation. To learn more, check out the [great tutorial](https://github.com/catchorg/Catch2/blob/master/docs/tutorial.md) for Catch2. You can also find more in-depth documentation there. ### I still don't understand unit tests. Where can I learn more?. I highly recommend reading at least one of these two books:. + ""Working Effectively with Legacy Code,"" by Michael Feathers; + ""Modern C++ Programming with Test-Driven Development,"" by Jeff Langr. ## Remaining work. + ~~Add unit-testing to Travis CI~~; + ~~Add support for unit testing in AD builds~~; + ~~Add more examples of unit tests~~; + ~~Add ""How-To Add Unit Tests"" documentation~~. ## Related Work; This resolves issue #698. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/850
https://github.com/su2code/SU2/pull/850:3889,Testability,test,tests,3889,"sts. If you compile SU2 using `ninja -C builddir`, then the test executable will automatically be compiled. You then have three options for running the tests:. + `meson test` (see documentation [here](https://mesonbuild.com/Unit-tests.html)); + `ninja test`; + Run the exectuable manually: `./UnitTests/test_driver`. When running the executable manually, there are many customization options. Run `./UnitTests/test_driver --help` to see them all. ### How to add unit tests. I have already included a single unit-test example (`UnitTests/SU2_CFD/src/numerics/CNumerics_tests.cpp`). Aside from the headaches with CConfig, this example should be clear. If not, raise questions and I will answer them. ~~I plan on adding a few more example tests, as well as a ""How-To"" page on the website.~~ Please see the PR on the website repo for more documentation. To learn more, check out the [great tutorial](https://github.com/catchorg/Catch2/blob/master/docs/tutorial.md) for Catch2. You can also find more in-depth documentation there. ### I still don't understand unit tests. Where can I learn more?. I highly recommend reading at least one of these two books:. + ""Working Effectively with Legacy Code,"" by Michael Feathers; + ""Modern C++ Programming with Test-Driven Development,"" by Jeff Langr. ## Remaining work. + ~~Add unit-testing to Travis CI~~; + ~~Add support for unit testing in AD builds~~; + ~~Add more examples of unit tests~~; + ~~Add ""How-To Add Unit Tests"" documentation~~. ## Related Work; This resolves issue #698. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/850
https://github.com/su2code/SU2/pull/850:3923,Testability,Test,Tests,3923,"sts. If you compile SU2 using `ninja -C builddir`, then the test executable will automatically be compiled. You then have three options for running the tests:. + `meson test` (see documentation [here](https://mesonbuild.com/Unit-tests.html)); + `ninja test`; + Run the exectuable manually: `./UnitTests/test_driver`. When running the executable manually, there are many customization options. Run `./UnitTests/test_driver --help` to see them all. ### How to add unit tests. I have already included a single unit-test example (`UnitTests/SU2_CFD/src/numerics/CNumerics_tests.cpp`). Aside from the headaches with CConfig, this example should be clear. If not, raise questions and I will answer them. ~~I plan on adding a few more example tests, as well as a ""How-To"" page on the website.~~ Please see the PR on the website repo for more documentation. To learn more, check out the [great tutorial](https://github.com/catchorg/Catch2/blob/master/docs/tutorial.md) for Catch2. You can also find more in-depth documentation there. ### I still don't understand unit tests. Where can I learn more?. I highly recommend reading at least one of these two books:. + ""Working Effectively with Legacy Code,"" by Michael Feathers; + ""Modern C++ Programming with Test-Driven Development,"" by Jeff Langr. ## Remaining work. + ~~Add unit-testing to Travis CI~~; + ~~Add support for unit testing in AD builds~~; + ~~Add more examples of unit tests~~; + ~~Add ""How-To Add Unit Tests"" documentation~~. ## Related Work; This resolves issue #698. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/850
https://github.com/su2code/SU2/pull/850:4300,Testability,test,test,4300,"sts. If you compile SU2 using `ninja -C builddir`, then the test executable will automatically be compiled. You then have three options for running the tests:. + `meson test` (see documentation [here](https://mesonbuild.com/Unit-tests.html)); + `ninja test`; + Run the exectuable manually: `./UnitTests/test_driver`. When running the executable manually, there are many customization options. Run `./UnitTests/test_driver --help` to see them all. ### How to add unit tests. I have already included a single unit-test example (`UnitTests/SU2_CFD/src/numerics/CNumerics_tests.cpp`). Aside from the headaches with CConfig, this example should be clear. If not, raise questions and I will answer them. ~~I plan on adding a few more example tests, as well as a ""How-To"" page on the website.~~ Please see the PR on the website repo for more documentation. To learn more, check out the [great tutorial](https://github.com/catchorg/Catch2/blob/master/docs/tutorial.md) for Catch2. You can also find more in-depth documentation there. ### I still don't understand unit tests. Where can I learn more?. I highly recommend reading at least one of these two books:. + ""Working Effectively with Legacy Code,"" by Michael Feathers; + ""Modern C++ Programming with Test-Driven Development,"" by Jeff Langr. ## Remaining work. + ~~Add unit-testing to Travis CI~~; + ~~Add support for unit testing in AD builds~~; + ~~Add more examples of unit tests~~; + ~~Add ""How-To Add Unit Tests"" documentation~~. ## Related Work; This resolves issue #698. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/850
https://github.com/su2code/SU2/pull/850:743,Usability,clear,clear,743,"## Proposed Changes. This is intended to be a small PR, but a big design shift. As discussed in issue #698, unit tests can serve an important role in software development. They complement, rather than replace, validation and verification tests. They are most useful when you want to isolate a specific behavior. Unit-testing increases development time, but improves the quality of the code and reduces code-maintenance time \[[source](https://collaboration.csc.ncsu.edu/laurie/Papers/TDDpaperv8.pdf)\]. ### Vision. In my mind, the most efficient way to proceed is to add unit tests as new behaviors are added and bugs are fixed. With each new PR, we should ask ""Should this have a unit test to verify this behavior?"" Unit tests will provide a clear way to show that each PR does what the developer promises it will do. This will require refactoring some of the code. Some parts of the code, like the CConfig class, are not unit-testing friendly. Unit testing is hard when you have God-classes and ""do-it-all"" functions. The hope is that refactoring these classes will lead to more modular and easier-to-maintain code. ### Decision to use Catch2. Catch2 was chosen for the unit testing library for the following reasons:. + It can be included as a header-only library.; + It has a very clean, easy-to-use syntax; + It has widespread use, including the FEniCS library. ### Design choices. The following design choices are in place. If you disagree with them, then please start a discussion here:. + All tests are placed in a root-level directory named `UnitTests`. Inside this directory is a structure just like the existing folder structure (e.g. `SU2_CFD/numerics`), except that there are not separate `src` and `include` folders.; + Tests are grouped by class, and put in files such as `CNumerics_tests.cpp`.; + A single test executable is compiled and run, as opposed to a separate test executable for each group of tests. With the single test executable, you can always filter down to groups of tes",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/850
https://github.com/su2code/SU2/pull/850:3109,Usability,clear,clear,3109,"xecutable is only run once, sweeping through all the unit tests. The result only shows a single failure or a single success. If more detail is desired, then the test executable can be run manually.; + The relevant SU2 code is compiled as a library (e.g. `libSU2core`) and then linked into both the main executable (`SU2_CFD`) and the test program (`test_driver`). ### How to Run Unit Tests. If you compile SU2 using `ninja -C builddir`, then the test executable will automatically be compiled. You then have three options for running the tests:. + `meson test` (see documentation [here](https://mesonbuild.com/Unit-tests.html)); + `ninja test`; + Run the exectuable manually: `./UnitTests/test_driver`. When running the executable manually, there are many customization options. Run `./UnitTests/test_driver --help` to see them all. ### How to add unit tests. I have already included a single unit-test example (`UnitTests/SU2_CFD/src/numerics/CNumerics_tests.cpp`). Aside from the headaches with CConfig, this example should be clear. If not, raise questions and I will answer them. ~~I plan on adding a few more example tests, as well as a ""How-To"" page on the website.~~ Please see the PR on the website repo for more documentation. To learn more, check out the [great tutorial](https://github.com/catchorg/Catch2/blob/master/docs/tutorial.md) for Catch2. You can also find more in-depth documentation there. ### I still don't understand unit tests. Where can I learn more?. I highly recommend reading at least one of these two books:. + ""Working Effectively with Legacy Code,"" by Michael Feathers; + ""Modern C++ Programming with Test-Driven Development,"" by Jeff Langr. ## Remaining work. + ~~Add unit-testing to Travis CI~~; + ~~Add support for unit testing in AD builds~~; + ~~Add more examples of unit tests~~; + ~~Add ""How-To Add Unit Tests"" documentation~~. ## Related Work; This resolves issue #698. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My con",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/850
https://github.com/su2code/SU2/pull/850:3319,Usability,learn,learn,3319,") and then linked into both the main executable (`SU2_CFD`) and the test program (`test_driver`). ### How to Run Unit Tests. If you compile SU2 using `ninja -C builddir`, then the test executable will automatically be compiled. You then have three options for running the tests:. + `meson test` (see documentation [here](https://mesonbuild.com/Unit-tests.html)); + `ninja test`; + Run the exectuable manually: `./UnitTests/test_driver`. When running the executable manually, there are many customization options. Run `./UnitTests/test_driver --help` to see them all. ### How to add unit tests. I have already included a single unit-test example (`UnitTests/SU2_CFD/src/numerics/CNumerics_tests.cpp`). Aside from the headaches with CConfig, this example should be clear. If not, raise questions and I will answer them. ~~I plan on adding a few more example tests, as well as a ""How-To"" page on the website.~~ Please see the PR on the website repo for more documentation. To learn more, check out the [great tutorial](https://github.com/catchorg/Catch2/blob/master/docs/tutorial.md) for Catch2. You can also find more in-depth documentation there. ### I still don't understand unit tests. Where can I learn more?. I highly recommend reading at least one of these two books:. + ""Working Effectively with Legacy Code,"" by Michael Feathers; + ""Modern C++ Programming with Test-Driven Development,"" by Jeff Langr. ## Remaining work. + ~~Add unit-testing to Travis CI~~; + ~~Add support for unit testing in AD builds~~; + ~~Add more examples of unit tests~~; + ~~Add ""How-To Add Unit Tests"" documentation~~. ## Related Work; This resolves issue #698. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, i",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/850
https://github.com/su2code/SU2/pull/850:3545,Usability,learn,learn,3545,"sts. If you compile SU2 using `ninja -C builddir`, then the test executable will automatically be compiled. You then have three options for running the tests:. + `meson test` (see documentation [here](https://mesonbuild.com/Unit-tests.html)); + `ninja test`; + Run the exectuable manually: `./UnitTests/test_driver`. When running the executable manually, there are many customization options. Run `./UnitTests/test_driver --help` to see them all. ### How to add unit tests. I have already included a single unit-test example (`UnitTests/SU2_CFD/src/numerics/CNumerics_tests.cpp`). Aside from the headaches with CConfig, this example should be clear. If not, raise questions and I will answer them. ~~I plan on adding a few more example tests, as well as a ""How-To"" page on the website.~~ Please see the PR on the website repo for more documentation. To learn more, check out the [great tutorial](https://github.com/catchorg/Catch2/blob/master/docs/tutorial.md) for Catch2. You can also find more in-depth documentation there. ### I still don't understand unit tests. Where can I learn more?. I highly recommend reading at least one of these two books:. + ""Working Effectively with Legacy Code,"" by Michael Feathers; + ""Modern C++ Programming with Test-Driven Development,"" by Jeff Langr. ## Remaining work. + ~~Add unit-testing to Travis CI~~; + ~~Add support for unit testing in AD builds~~; + ~~Add more examples of unit tests~~; + ~~Add ""How-To Add Unit Tests"" documentation~~. ## Related Work; This resolves issue #698. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/850
https://github.com/su2code/SU2/issues/851:186,Deployability,Update,Updated,186,Some small issues resulting from recent file restructurings and PR's are **already** fixed in #824 and can be merged with #843 and #849 (no need for anyone else to fix them). Namely:; - Updated legacy build system;; - Meson with cgns disabled;; - IDE-friendly include paths (with all the `../` required);; - Compiler warnings addressed.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/851
https://github.com/su2code/SU2/pull/853:976,Deployability,update,updated,976,"## Proposed Changes; Addresses the compilation time issue (#851) in the way discussed with @talbring in #824.; Plus, I think it is time to bite the bullet and cleanup CConfig, no more .inl, tabs replaced (but the comments still look ok-ish), methods made const when possible.; This will probably cause you issues, but the changes to these files are usually very linear and so, easy to re-apply.; There is no more CCreateMap function, in C++11 braced initialization can be used instead e.g.:; `map<string, string> AverageGroupName = {{""BGS_RES"", ""bgs""},{""RMS_RES"",""rms""},{""MAX_RES"", ""max""}};`. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/853
https://github.com/su2code/SU2/pull/853:903,Testability,test,test,903,"## Proposed Changes; Addresses the compilation time issue (#851) in the way discussed with @talbring in #824.; Plus, I think it is time to bite the bullet and cleanup CConfig, no more .inl, tabs replaced (but the comments still look ok-ish), methods made const when possible.; This will probably cause you issues, but the changes to these files are usually very linear and so, easy to re-apply.; There is no more CCreateMap function, in C++11 braced initialization can be used instead e.g.:; `map<string, string> AverageGroupName = {{""BGS_RES"", ""bgs""},{""RMS_RES"",""rms""},{""MAX_RES"", ""max""}};`. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/853
https://github.com/su2code/SU2/pull/854:1155,Deployability,update,updated,1155,"## Proposed Changes; These are rather smaller changes and fixes so that the unsteady multizone framework can be used for CHT. A test case together with a tutorial (mainly on how - and how easy it is - to turn a steady simulation into an unsteady one) will be added. ## Related Work; [Tutorial](https://github.com/su2code/su2code.github.io/pull/26); [Trailer on Youtube ;-)](https://www.youtube.com/watch?v=MqN8GalSyzk). @TobiKattmann @ScSteffen Please follow this so that we can set up Unsteady Adjoint CHT computations afterwards. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/854
https://github.com/su2code/SU2/pull/854:128,Testability,test,test,128,"## Proposed Changes; These are rather smaller changes and fixes so that the unsteady multizone framework can be used for CHT. A test case together with a tutorial (mainly on how - and how easy it is - to turn a steady simulation into an unsteady one) will be added. ## Related Work; [Tutorial](https://github.com/su2code/su2code.github.io/pull/26); [Trailer on Youtube ;-)](https://www.youtube.com/watch?v=MqN8GalSyzk). @TobiKattmann @ScSteffen Please follow this so that we can set up Unsteady Adjoint CHT computations afterwards. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/854
https://github.com/su2code/SU2/pull/854:1082,Testability,test,test,1082,"## Proposed Changes; These are rather smaller changes and fixes so that the unsteady multizone framework can be used for CHT. A test case together with a tutorial (mainly on how - and how easy it is - to turn a steady simulation into an unsteady one) will be added. ## Related Work; [Tutorial](https://github.com/su2code/su2code.github.io/pull/26); [Trailer on Youtube ;-)](https://www.youtube.com/watch?v=MqN8GalSyzk). @TobiKattmann @ScSteffen Please follow this so that we can set up Unsteady Adjoint CHT computations afterwards. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/854
https://github.com/su2code/SU2/pull/854:704,Usability,guid,guide,704,"## Proposed Changes; These are rather smaller changes and fixes so that the unsteady multizone framework can be used for CHT. A test case together with a tutorial (mainly on how - and how easy it is - to turn a steady simulation into an unsteady one) will be added. ## Related Work; [Tutorial](https://github.com/su2code/su2code.github.io/pull/26); [Trailer on Youtube ;-)](https://www.youtube.com/watch?v=MqN8GalSyzk). @TobiKattmann @ScSteffen Please follow this so that we can set up Unsteady Adjoint CHT computations afterwards. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/854
https://github.com/su2code/SU2/issues/855:221,Modifiability,config,config,221,"**Describe the bug**; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*. **Desktop (please complete the following information):**; - OS: [e.g., Linux (Redhat 6.6)]; - C++ compiler and version: [e.g., g++ (GCC) 4.8.5]; - MPI implementation and version: [e.g., OpenMPI 3.0.0]; - SU2 Version: [e.g., v6.2.0]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/855
https://github.com/su2code/SU2/issues/855:25,Usability,clear,clear,25,"**Describe the bug**; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*. **Desktop (please complete the following information):**; - OS: [e.g., Linux (Redhat 6.6)]; - C++ compiler and version: [e.g., g++ (GCC) 4.8.5]; - MPI implementation and version: [e.g., OpenMPI 3.0.0]; - SU2 Version: [e.g., v6.2.0]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/855
https://github.com/su2code/SU2/pull/856:865,Deployability,update,updated,865,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/856
https://github.com/su2code/SU2/pull/856:792,Testability,test,test,792,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/856
https://github.com/su2code/SU2/pull/856:414,Usability,guid,guide,414,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/856
https://github.com/su2code/SU2/issues/857:1112,Deployability,hotfix,hotfix,1112,"**Describe the bug**; When running any dry run in the form; `SU2_CFD -d <configname>.cfg`; an integer divide by zero (`Floating point exception: integer divide by zero`) happens. A backtrace pointed me towards `roundUpDiv (numerator=0, denominator=0)` in `omp_structure.hpp` +104 and further up `computeStaticChunkSize (totalWork=0, numThreads=1, maxChunkSize=4096)`. I guess one might check somewhere along the line whether there is even work to do, i.e. wrap the `*.Initialize(nPoint,...)` in `C<Inc>EulerSolver` etc in `if (nPoint != 0)` conditionals (that got the Quickstart working again for me). But maybe there is a better more elegant solution without too much overhead. I would like @pcarruscag to take a look as the omp stuff is involved :). **To Reproduce**; Every dryrun I tried, using Quickstart should be enough to understand the problem. **Desktop (please complete the following information):**; - OS: Red Hat Enterprise Linux 7.6; - C++ compiler and version: GCC 4.8.5; - MPI implementation and version: openMPI 3.1.2; - SU2 Version: latest develop, but this probably affects 7.0.1 as well, i.e. hotfix time 🕙",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/857
https://github.com/su2code/SU2/issues/857:456,Integrability,wrap,wrap,456,"**Describe the bug**; When running any dry run in the form; `SU2_CFD -d <configname>.cfg`; an integer divide by zero (`Floating point exception: integer divide by zero`) happens. A backtrace pointed me towards `roundUpDiv (numerator=0, denominator=0)` in `omp_structure.hpp` +104 and further up `computeStaticChunkSize (totalWork=0, numThreads=1, maxChunkSize=4096)`. I guess one might check somewhere along the line whether there is even work to do, i.e. wrap the `*.Initialize(nPoint,...)` in `C<Inc>EulerSolver` etc in `if (nPoint != 0)` conditionals (that got the Quickstart working again for me). But maybe there is a better more elegant solution without too much overhead. I would like @pcarruscag to take a look as the omp stuff is involved :). **To Reproduce**; Every dryrun I tried, using Quickstart should be enough to understand the problem. **Desktop (please complete the following information):**; - OS: Red Hat Enterprise Linux 7.6; - C++ compiler and version: GCC 4.8.5; - MPI implementation and version: openMPI 3.1.2; - SU2 Version: latest develop, but this probably affects 7.0.1 as well, i.e. hotfix time 🕙",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/857
https://github.com/su2code/SU2/issues/857:73,Modifiability,config,configname,73,"**Describe the bug**; When running any dry run in the form; `SU2_CFD -d <configname>.cfg`; an integer divide by zero (`Floating point exception: integer divide by zero`) happens. A backtrace pointed me towards `roundUpDiv (numerator=0, denominator=0)` in `omp_structure.hpp` +104 and further up `computeStaticChunkSize (totalWork=0, numThreads=1, maxChunkSize=4096)`. I guess one might check somewhere along the line whether there is even work to do, i.e. wrap the `*.Initialize(nPoint,...)` in `C<Inc>EulerSolver` etc in `if (nPoint != 0)` conditionals (that got the Quickstart working again for me). But maybe there is a better more elegant solution without too much overhead. I would like @pcarruscag to take a look as the omp stuff is involved :). **To Reproduce**; Every dryrun I tried, using Quickstart should be enough to understand the problem. **Desktop (please complete the following information):**; - OS: Red Hat Enterprise Linux 7.6; - C++ compiler and version: GCC 4.8.5; - MPI implementation and version: openMPI 3.1.2; - SU2 Version: latest develop, but this probably affects 7.0.1 as well, i.e. hotfix time 🕙",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/857
https://github.com/su2code/SU2/pull/858:36,Availability,error,error,36,"## Proposed Changes; Fixes #857, an error during dry-run. I know @pcarruscag added the fixing commit to his PR #824 already and mentioned it below the issue, i.e. all kudos regarding the first commit go to him. I only changed the omp_structure.hpp of ded9c08e90496634a38b4998d9fe7aa5b72cdcc3 as I guess that bit is enough for this PR. ; Additionally I hinder the dry-run to overwrite the history files, which is kind of annoying. If anyone as an elegant solution to simply check for EXIT_SUCCES in the regression test one could add some dry_run regression tests. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/858
https://github.com/su2code/SU2/pull/858:946,Deployability,update,updated,946,"## Proposed Changes; Fixes #857, an error during dry-run. I know @pcarruscag added the fixing commit to his PR #824 already and mentioned it below the issue, i.e. all kudos regarding the first commit go to him. I only changed the omp_structure.hpp of ded9c08e90496634a38b4998d9fe7aa5b72cdcc3 as I guess that bit is enough for this PR. ; Additionally I hinder the dry-run to overwrite the history files, which is kind of annoying. If anyone as an elegant solution to simply check for EXIT_SUCCES in the regression test one could add some dry_run regression tests. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/858
https://github.com/su2code/SU2/pull/858:513,Testability,test,test,513,"## Proposed Changes; Fixes #857, an error during dry-run. I know @pcarruscag added the fixing commit to his PR #824 already and mentioned it below the issue, i.e. all kudos regarding the first commit go to him. I only changed the omp_structure.hpp of ded9c08e90496634a38b4998d9fe7aa5b72cdcc3 as I guess that bit is enough for this PR. ; Additionally I hinder the dry-run to overwrite the history files, which is kind of annoying. If anyone as an elegant solution to simply check for EXIT_SUCCES in the regression test one could add some dry_run regression tests. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/858
https://github.com/su2code/SU2/pull/858:556,Testability,test,tests,556,"## Proposed Changes; Fixes #857, an error during dry-run. I know @pcarruscag added the fixing commit to his PR #824 already and mentioned it below the issue, i.e. all kudos regarding the first commit go to him. I only changed the omp_structure.hpp of ded9c08e90496634a38b4998d9fe7aa5b72cdcc3 as I guess that bit is enough for this PR. ; Additionally I hinder the dry-run to overwrite the history files, which is kind of annoying. If anyone as an elegant solution to simply check for EXIT_SUCCES in the regression test one could add some dry_run regression tests. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/858
https://github.com/su2code/SU2/pull/858:873,Testability,test,test,873,"## Proposed Changes; Fixes #857, an error during dry-run. I know @pcarruscag added the fixing commit to his PR #824 already and mentioned it below the issue, i.e. all kudos regarding the first commit go to him. I only changed the omp_structure.hpp of ded9c08e90496634a38b4998d9fe7aa5b72cdcc3 as I guess that bit is enough for this PR. ; Additionally I hinder the dry-run to overwrite the history files, which is kind of annoying. If anyone as an elegant solution to simply check for EXIT_SUCCES in the regression test one could add some dry_run regression tests. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/858
https://github.com/su2code/SU2/pull/858:466,Usability,simpl,simply,466,"## Proposed Changes; Fixes #857, an error during dry-run. I know @pcarruscag added the fixing commit to his PR #824 already and mentioned it below the issue, i.e. all kudos regarding the first commit go to him. I only changed the omp_structure.hpp of ded9c08e90496634a38b4998d9fe7aa5b72cdcc3 as I guess that bit is enough for this PR. ; Additionally I hinder the dry-run to overwrite the history files, which is kind of annoying. If anyone as an elegant solution to simply check for EXIT_SUCCES in the regression test one could add some dry_run regression tests. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/858
https://github.com/su2code/SU2/pull/859:865,Deployability,update,updated,865,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/859
https://github.com/su2code/SU2/pull/859:792,Testability,test,test,792,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/859
https://github.com/su2code/SU2/pull/859:414,Usability,guid,guide,414,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/859
https://github.com/su2code/SU2/issues/860:113,Availability,error,error,113,"**Describe the bug**; The rotating frame grid velocities are not set properly if used in 2-D. This is due to the error in SetRotationalVelocity routine in CGeomtery class (Cgeometry.cpp line 3881). The loop counter to find the Omega only goes upto nDim and in 2-D any rotation about the Z-axis is not considered. . **To Reproduce**; https://github.com/su2code/SU2/tree/master/TestCases/turbomachinery/centrifugal_blade is an example of a test case using rotating frame simulations in 2-D. Some of the turbomachinery options did not work for me, so I changed the turbomachinery markers to simple inlet and outlet just to get something running in this [config file.](https://github.com/su2code/SU2/files/4158761/centrifugal_blade.txt). The fix is fairly straightforward to change the loop counter to 3 in line 3891, but I wasn't sure if it is appropriate to make a PR for just this. Is it possible to add it into one of the existing ones?. Regards,; Akshay",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/860
https://github.com/su2code/SU2/issues/860:144,Integrability,rout,routine,144,"**Describe the bug**; The rotating frame grid velocities are not set properly if used in 2-D. This is due to the error in SetRotationalVelocity routine in CGeomtery class (Cgeometry.cpp line 3881). The loop counter to find the Omega only goes upto nDim and in 2-D any rotation about the Z-axis is not considered. . **To Reproduce**; https://github.com/su2code/SU2/tree/master/TestCases/turbomachinery/centrifugal_blade is an example of a test case using rotating frame simulations in 2-D. Some of the turbomachinery options did not work for me, so I changed the turbomachinery markers to simple inlet and outlet just to get something running in this [config file.](https://github.com/su2code/SU2/files/4158761/centrifugal_blade.txt). The fix is fairly straightforward to change the loop counter to 3 in line 3891, but I wasn't sure if it is appropriate to make a PR for just this. Is it possible to add it into one of the existing ones?. Regards,; Akshay",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/860
https://github.com/su2code/SU2/issues/860:651,Modifiability,config,config,651,"**Describe the bug**; The rotating frame grid velocities are not set properly if used in 2-D. This is due to the error in SetRotationalVelocity routine in CGeomtery class (Cgeometry.cpp line 3881). The loop counter to find the Omega only goes upto nDim and in 2-D any rotation about the Z-axis is not considered. . **To Reproduce**; https://github.com/su2code/SU2/tree/master/TestCases/turbomachinery/centrifugal_blade is an example of a test case using rotating frame simulations in 2-D. Some of the turbomachinery options did not work for me, so I changed the turbomachinery markers to simple inlet and outlet just to get something running in this [config file.](https://github.com/su2code/SU2/files/4158761/centrifugal_blade.txt). The fix is fairly straightforward to change the loop counter to 3 in line 3891, but I wasn't sure if it is appropriate to make a PR for just this. Is it possible to add it into one of the existing ones?. Regards,; Akshay",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/860
https://github.com/su2code/SU2/issues/860:376,Testability,Test,TestCases,376,"**Describe the bug**; The rotating frame grid velocities are not set properly if used in 2-D. This is due to the error in SetRotationalVelocity routine in CGeomtery class (Cgeometry.cpp line 3881). The loop counter to find the Omega only goes upto nDim and in 2-D any rotation about the Z-axis is not considered. . **To Reproduce**; https://github.com/su2code/SU2/tree/master/TestCases/turbomachinery/centrifugal_blade is an example of a test case using rotating frame simulations in 2-D. Some of the turbomachinery options did not work for me, so I changed the turbomachinery markers to simple inlet and outlet just to get something running in this [config file.](https://github.com/su2code/SU2/files/4158761/centrifugal_blade.txt). The fix is fairly straightforward to change the loop counter to 3 in line 3891, but I wasn't sure if it is appropriate to make a PR for just this. Is it possible to add it into one of the existing ones?. Regards,; Akshay",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/860
https://github.com/su2code/SU2/issues/860:438,Testability,test,test,438,"**Describe the bug**; The rotating frame grid velocities are not set properly if used in 2-D. This is due to the error in SetRotationalVelocity routine in CGeomtery class (Cgeometry.cpp line 3881). The loop counter to find the Omega only goes upto nDim and in 2-D any rotation about the Z-axis is not considered. . **To Reproduce**; https://github.com/su2code/SU2/tree/master/TestCases/turbomachinery/centrifugal_blade is an example of a test case using rotating frame simulations in 2-D. Some of the turbomachinery options did not work for me, so I changed the turbomachinery markers to simple inlet and outlet just to get something running in this [config file.](https://github.com/su2code/SU2/files/4158761/centrifugal_blade.txt). The fix is fairly straightforward to change the loop counter to 3 in line 3891, but I wasn't sure if it is appropriate to make a PR for just this. Is it possible to add it into one of the existing ones?. Regards,; Akshay",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/860
https://github.com/su2code/SU2/issues/860:588,Usability,simpl,simple,588,"**Describe the bug**; The rotating frame grid velocities are not set properly if used in 2-D. This is due to the error in SetRotationalVelocity routine in CGeomtery class (Cgeometry.cpp line 3881). The loop counter to find the Omega only goes upto nDim and in 2-D any rotation about the Z-axis is not considered. . **To Reproduce**; https://github.com/su2code/SU2/tree/master/TestCases/turbomachinery/centrifugal_blade is an example of a test case using rotating frame simulations in 2-D. Some of the turbomachinery options did not work for me, so I changed the turbomachinery markers to simple inlet and outlet just to get something running in this [config file.](https://github.com/su2code/SU2/files/4158761/centrifugal_blade.txt). The fix is fairly straightforward to change the loop counter to 3 in line 3891, but I wasn't sure if it is appropriate to make a PR for just this. Is it possible to add it into one of the existing ones?. Regards,; Akshay",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/860
https://github.com/su2code/SU2/pull/861:1339,Deployability,update,update,1339,"## Proposed Changes; Extend the MPI+Threads framework to CEulerSolver, CNSSolver and the CTurb***Solver(s).; I can finally start showing what this effort is about in pictures, this is how the relatively small benchmark case from #716 scales on Imperial's cluster:; ![image](https://user-images.githubusercontent.com/38071223/73931463-410d2780-48d0-11ea-855e-8dc87be153f1.png); **C** is for cores, **R** for MPI ranks, and **T** for OpenMP threads per rank. It may not look like much close to the ideal scaling but on 192 cores there are only 2.7k cells per core, and at different level of ""hybridisation"" this is what you get:; ![image](https://user-images.githubusercontent.com/38071223/73931985-3bfca800-48d1-11ea-8676-acef927a1ab5.png). As mentioned in #789 this behaviour is due to the worse quality / quantity of coarse grids that can be generated as the domain is decomposed further and further. **EDIT**; This is **finished for now**, apart from the odd routine that I will document below (and all the boundary conditions) every method called in `SingleGrid_Iteration` and `MultiGrid_Iteration` (including prolongations, smoothings and whatnot) is hybrid parallel.; Threads are started in those functions which means that for a RANS case we enter parallel regions only twice per iteration, this should give minimal overhead, I will update the scalability results once they converge (statistically :) ). I will document the changes by ""themes"" below. ## Related Work; Another snapshot of #824. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/861
https://github.com/su2code/SU2/pull/861:1883,Deployability,update,updated,1883,"## Proposed Changes; Extend the MPI+Threads framework to CEulerSolver, CNSSolver and the CTurb***Solver(s).; I can finally start showing what this effort is about in pictures, this is how the relatively small benchmark case from #716 scales on Imperial's cluster:; ![image](https://user-images.githubusercontent.com/38071223/73931463-410d2780-48d0-11ea-855e-8dc87be153f1.png); **C** is for cores, **R** for MPI ranks, and **T** for OpenMP threads per rank. It may not look like much close to the ideal scaling but on 192 cores there are only 2.7k cells per core, and at different level of ""hybridisation"" this is what you get:; ![image](https://user-images.githubusercontent.com/38071223/73931985-3bfca800-48d1-11ea-8676-acef927a1ab5.png). As mentioned in #789 this behaviour is due to the worse quality / quantity of coarse grids that can be generated as the domain is decomposed further and further. **EDIT**; This is **finished for now**, apart from the odd routine that I will document below (and all the boundary conditions) every method called in `SingleGrid_Iteration` and `MultiGrid_Iteration` (including prolongations, smoothings and whatnot) is hybrid parallel.; Threads are started in those functions which means that for a RANS case we enter parallel regions only twice per iteration, this should give minimal overhead, I will update the scalability results once they converge (statistically :) ). I will document the changes by ""themes"" below. ## Related Work; Another snapshot of #824. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/861
https://github.com/su2code/SU2/pull/861:961,Integrability,rout,routine,961,"## Proposed Changes; Extend the MPI+Threads framework to CEulerSolver, CNSSolver and the CTurb***Solver(s).; I can finally start showing what this effort is about in pictures, this is how the relatively small benchmark case from #716 scales on Imperial's cluster:; ![image](https://user-images.githubusercontent.com/38071223/73931463-410d2780-48d0-11ea-855e-8dc87be153f1.png); **C** is for cores, **R** for MPI ranks, and **T** for OpenMP threads per rank. It may not look like much close to the ideal scaling but on 192 cores there are only 2.7k cells per core, and at different level of ""hybridisation"" this is what you get:; ![image](https://user-images.githubusercontent.com/38071223/73931985-3bfca800-48d1-11ea-8676-acef927a1ab5.png). As mentioned in #789 this behaviour is due to the worse quality / quantity of coarse grids that can be generated as the domain is decomposed further and further. **EDIT**; This is **finished for now**, apart from the odd routine that I will document below (and all the boundary conditions) every method called in `SingleGrid_Iteration` and `MultiGrid_Iteration` (including prolongations, smoothings and whatnot) is hybrid parallel.; Threads are started in those functions which means that for a RANS case we enter parallel regions only twice per iteration, this should give minimal overhead, I will update the scalability results once they converge (statistically :) ). I will document the changes by ""themes"" below. ## Related Work; Another snapshot of #824. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/861
https://github.com/su2code/SU2/pull/861:21,Modifiability,Extend,Extend,21,"## Proposed Changes; Extend the MPI+Threads framework to CEulerSolver, CNSSolver and the CTurb***Solver(s).; I can finally start showing what this effort is about in pictures, this is how the relatively small benchmark case from #716 scales on Imperial's cluster:; ![image](https://user-images.githubusercontent.com/38071223/73931463-410d2780-48d0-11ea-855e-8dc87be153f1.png); **C** is for cores, **R** for MPI ranks, and **T** for OpenMP threads per rank. It may not look like much close to the ideal scaling but on 192 cores there are only 2.7k cells per core, and at different level of ""hybridisation"" this is what you get:; ![image](https://user-images.githubusercontent.com/38071223/73931985-3bfca800-48d1-11ea-8676-acef927a1ab5.png). As mentioned in #789 this behaviour is due to the worse quality / quantity of coarse grids that can be generated as the domain is decomposed further and further. **EDIT**; This is **finished for now**, apart from the odd routine that I will document below (and all the boundary conditions) every method called in `SingleGrid_Iteration` and `MultiGrid_Iteration` (including prolongations, smoothings and whatnot) is hybrid parallel.; Threads are started in those functions which means that for a RANS case we enter parallel regions only twice per iteration, this should give minimal overhead, I will update the scalability results once they converge (statistically :) ). I will document the changes by ""themes"" below. ## Related Work; Another snapshot of #824. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/861
https://github.com/su2code/SU2/pull/861:1350,Performance,scalab,scalability,1350,"## Proposed Changes; Extend the MPI+Threads framework to CEulerSolver, CNSSolver and the CTurb***Solver(s).; I can finally start showing what this effort is about in pictures, this is how the relatively small benchmark case from #716 scales on Imperial's cluster:; ![image](https://user-images.githubusercontent.com/38071223/73931463-410d2780-48d0-11ea-855e-8dc87be153f1.png); **C** is for cores, **R** for MPI ranks, and **T** for OpenMP threads per rank. It may not look like much close to the ideal scaling but on 192 cores there are only 2.7k cells per core, and at different level of ""hybridisation"" this is what you get:; ![image](https://user-images.githubusercontent.com/38071223/73931985-3bfca800-48d1-11ea-8676-acef927a1ab5.png). As mentioned in #789 this behaviour is due to the worse quality / quantity of coarse grids that can be generated as the domain is decomposed further and further. **EDIT**; This is **finished for now**, apart from the odd routine that I will document below (and all the boundary conditions) every method called in `SingleGrid_Iteration` and `MultiGrid_Iteration` (including prolongations, smoothings and whatnot) is hybrid parallel.; Threads are started in those functions which means that for a RANS case we enter parallel regions only twice per iteration, this should give minimal overhead, I will update the scalability results once they converge (statistically :) ). I will document the changes by ""themes"" below. ## Related Work; Another snapshot of #824. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/861
https://github.com/su2code/SU2/pull/861:209,Testability,benchmark,benchmark,209,"## Proposed Changes; Extend the MPI+Threads framework to CEulerSolver, CNSSolver and the CTurb***Solver(s).; I can finally start showing what this effort is about in pictures, this is how the relatively small benchmark case from #716 scales on Imperial's cluster:; ![image](https://user-images.githubusercontent.com/38071223/73931463-410d2780-48d0-11ea-855e-8dc87be153f1.png); **C** is for cores, **R** for MPI ranks, and **T** for OpenMP threads per rank. It may not look like much close to the ideal scaling but on 192 cores there are only 2.7k cells per core, and at different level of ""hybridisation"" this is what you get:; ![image](https://user-images.githubusercontent.com/38071223/73931985-3bfca800-48d1-11ea-8676-acef927a1ab5.png). As mentioned in #789 this behaviour is due to the worse quality / quantity of coarse grids that can be generated as the domain is decomposed further and further. **EDIT**; This is **finished for now**, apart from the odd routine that I will document below (and all the boundary conditions) every method called in `SingleGrid_Iteration` and `MultiGrid_Iteration` (including prolongations, smoothings and whatnot) is hybrid parallel.; Threads are started in those functions which means that for a RANS case we enter parallel regions only twice per iteration, this should give minimal overhead, I will update the scalability results once they converge (statistically :) ). I will document the changes by ""themes"" below. ## Related Work; Another snapshot of #824. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/861
https://github.com/su2code/SU2/pull/861:1810,Testability,test,test,1810,"## Proposed Changes; Extend the MPI+Threads framework to CEulerSolver, CNSSolver and the CTurb***Solver(s).; I can finally start showing what this effort is about in pictures, this is how the relatively small benchmark case from #716 scales on Imperial's cluster:; ![image](https://user-images.githubusercontent.com/38071223/73931463-410d2780-48d0-11ea-855e-8dc87be153f1.png); **C** is for cores, **R** for MPI ranks, and **T** for OpenMP threads per rank. It may not look like much close to the ideal scaling but on 192 cores there are only 2.7k cells per core, and at different level of ""hybridisation"" this is what you get:; ![image](https://user-images.githubusercontent.com/38071223/73931985-3bfca800-48d1-11ea-8676-acef927a1ab5.png). As mentioned in #789 this behaviour is due to the worse quality / quantity of coarse grids that can be generated as the domain is decomposed further and further. **EDIT**; This is **finished for now**, apart from the odd routine that I will document below (and all the boundary conditions) every method called in `SingleGrid_Iteration` and `MultiGrid_Iteration` (including prolongations, smoothings and whatnot) is hybrid parallel.; Threads are started in those functions which means that for a RANS case we enter parallel regions only twice per iteration, this should give minimal overhead, I will update the scalability results once they converge (statistically :) ). I will document the changes by ""themes"" below. ## Related Work; Another snapshot of #824. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/861
https://github.com/su2code/SU2/pull/862:935,Deployability,update,updated,935,"## Proposed Changes; This is a bugfix for the mesh writer, which was outputting the wrong number of elements when run in parallel. . ## Related Work; [Post on CFD online](https://www.cfd-online.com/Forums/su2-shape-design/224088-segfault-second-dsn-iteration.html#post757055) that made me aware of that problem. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/862
https://github.com/su2code/SU2/pull/862:862,Testability,test,test,862,"## Proposed Changes; This is a bugfix for the mesh writer, which was outputting the wrong number of elements when run in parallel. . ## Related Work; [Post on CFD online](https://www.cfd-online.com/Forums/su2-shape-design/224088-segfault-second-dsn-iteration.html#post757055) that made me aware of that problem. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/862
https://github.com/su2code/SU2/pull/862:484,Usability,guid,guide,484,"## Proposed Changes; This is a bugfix for the mesh writer, which was outputting the wrong number of elements when run in parallel. . ## Related Work; [Post on CFD online](https://www.cfd-online.com/Forums/su2-shape-design/224088-segfault-second-dsn-iteration.html#post757055) that made me aware of that problem. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/862
https://github.com/su2code/SU2/pull/863:865,Deployability,update,updated,865,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/863
https://github.com/su2code/SU2/pull/863:792,Testability,test,test,792,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/863
https://github.com/su2code/SU2/pull/863:414,Usability,guid,guide,414,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/863
https://github.com/su2code/SU2/pull/864:865,Deployability,update,updated,865,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/864
https://github.com/su2code/SU2/pull/864:792,Testability,test,test,792,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/864
https://github.com/su2code/SU2/pull/864:414,Usability,guid,guide,414,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/864
https://github.com/su2code/SU2/pull/865:865,Deployability,update,updated,865,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/865
https://github.com/su2code/SU2/pull/865:792,Testability,test,test,792,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/865
https://github.com/su2code/SU2/pull/865:414,Usability,guid,guide,414,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/865
https://github.com/su2code/SU2/pull/866:301,Energy Efficiency,Adapt,Adapt,301,"## Proposed Changes; This PR is a preparatory step to reintegrate all the turbo-machinery features with the current develop.; In this first step, I have restructured the single-zone turbomachinery problem to run using both the SingleZoneDriver and the FluidIteration. ; The Next steps will be . - [x] Adapt the turbomachinery output with the new Output structure. ; - [ ] Fix the Multizone steady turbomachinery problem to run with the MultizoneDriver.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/866
https://github.com/su2code/SU2/pull/866:301,Modifiability,Adapt,Adapt,301,"## Proposed Changes; This PR is a preparatory step to reintegrate all the turbo-machinery features with the current develop.; In this first step, I have restructured the single-zone turbomachinery problem to run using both the SingleZoneDriver and the FluidIteration. ; The Next steps will be . - [x] Adapt the turbomachinery output with the new Output structure. ; - [ ] Fix the Multizone steady turbomachinery problem to run with the MultizoneDriver.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/866
https://github.com/su2code/SU2/issues/867:74,Deployability,install,installed,74,"**Describe the bug**; I'm trying to build SU2 with OpenMPI 4.0.2, which I installed as static only. The SU2 build fails when it tries to link an executable, because it links with libmpi.a, but it doesn't link with `-lopen-pal -lopen-rte -lz` which are required by OpenMPI (as correctly stated in the pkgconfig files that were created when compiling OpenMPI, but that are ignored by the SU2 build system). If I go to the build directory and try to link the executable manually, adding `-lopen-pal -lopen-rte -lz` at the end of the link line, it works, but then when running ninja again, it wants to relink it again (I hate it when build tools don't let you to do tricks :wink: ) so I get stuck and I cannot proceed beyond this point. **To Reproduce**; Just try to build with `./meson.py builddir --prefix=myinstalldir -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true -Denable-cgns=true -Denable-openblas=true` provided that you previously installed OpenMPI as static only. **Desktop (please complete the following information):**; - MacOS Sierra; - LLVM 7.0.0 (custom build); - OpenMPI 4.0.2; - SU2 7.0.1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/867
https://github.com/su2code/SU2/issues/867:961,Deployability,install,installed,961,"**Describe the bug**; I'm trying to build SU2 with OpenMPI 4.0.2, which I installed as static only. The SU2 build fails when it tries to link an executable, because it links with libmpi.a, but it doesn't link with `-lopen-pal -lopen-rte -lz` which are required by OpenMPI (as correctly stated in the pkgconfig files that were created when compiling OpenMPI, but that are ignored by the SU2 build system). If I go to the build directory and try to link the executable manually, adding `-lopen-pal -lopen-rte -lz` at the end of the link line, it works, but then when running ninja again, it wants to relink it again (I hate it when build tools don't let you to do tricks :wink: ) so I get stuck and I cannot proceed beyond this point. **To Reproduce**; Just try to build with `./meson.py builddir --prefix=myinstalldir -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true -Denable-cgns=true -Denable-openblas=true` provided that you previously installed OpenMPI as static only. **Desktop (please complete the following information):**; - MacOS Sierra; - LLVM 7.0.0 (custom build); - OpenMPI 4.0.2; - SU2 7.0.1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/867
https://github.com/su2code/SU2/pull/868:950,Deployability,update,updated,950,"## Proposed Changes; WIP of the extension of FSI discrete adjoint to time-domain. This originally started with the legacy FSI drivers but is being migrated to the new multizone drivers in this draft.; . ## Related Work; @oleburghardt mentioned unsteady adjoints to follow PR #854 for CHT which will be closely related to this. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/868
https://github.com/su2code/SU2/pull/868:877,Testability,test,test,877,"## Proposed Changes; WIP of the extension of FSI discrete adjoint to time-domain. This originally started with the legacy FSI drivers but is being migrated to the new multizone drivers in this draft.; . ## Related Work; @oleburghardt mentioned unsteady adjoints to follow PR #854 for CHT which will be closely related to this. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/868
https://github.com/su2code/SU2/pull/868:499,Usability,guid,guide,499,"## Proposed Changes; WIP of the extension of FSI discrete adjoint to time-domain. This originally started with the legacy FSI drivers but is being migrated to the new multizone drivers in this draft.; . ## Related Work; @oleburghardt mentioned unsteady adjoints to follow PR #854 for CHT which will be closely related to this. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/868
https://github.com/su2code/SU2/issues/869:388,Performance,perform,performance,388,"**Is your feature request related to a problem? Please describe.**; I'm going to build SU2 with PaStiX, which requires BLAS built in serial mode (not parallel). So, I must build OpenBLAS as sequential for PaStiX. However, SU2 also makes use of BLAS... but... what kind of build for OpenBLAS, sequential or parallel?. It's not a subtle thing, because things can go wrong (or lose a lot of performance) if it's built in a way different to what SU2 expects. **Describe the solution you'd like**; Just mention it in the build instructions where you mention that OpenBLAS can be used by SU2.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/869
https://github.com/su2code/SU2/pull/870:865,Deployability,update,updated,865,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/870
https://github.com/su2code/SU2/pull/870:792,Testability,test,test,792,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/870
https://github.com/su2code/SU2/pull/870:414,Usability,guid,guide,414,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/870
https://github.com/su2code/SU2/pull/871:865,Deployability,update,updated,865,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/871
https://github.com/su2code/SU2/pull/871:792,Testability,test,test,792,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/871
https://github.com/su2code/SU2/pull/871:414,Usability,guid,guide,414,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/871
https://github.com/su2code/SU2/pull/872:883,Deployability,release,release,883,"## Proposed Changes; This PR incorporates a P1 solver for Radiative Heat Transfer to SU2. The P1 model is a popular 1-equation model to solve the infinite-dimensional Radiative Heat Equation (RHE) that works under the assumption that the energy distribution is linearly isotropic (1). The implementation is general and thought to allow further extension of the radiation solvers in SU2, e.g., to discrete ordinates or partial moment approximations. The solution method is staggered and works in a very similar way to the turbulence models in SU2. . (1) Frank, M., _et al._ (2006), Partial moment entropy approximation to radiative heat transfer. _Journal of Computational Physics 218(1), 1–18._ DOI: [10.1016/j.jcp.2006.01.038](https://doi.org/10.1016/j.jcp.2006.01.038). ## Related Work; - I'm preparing some tutorials at the moment that I hope to have finalised by the time of the release of 7.0.2. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/872
https://github.com/su2code/SU2/pull/872:1524,Deployability,update,updated,1524,"## Proposed Changes; This PR incorporates a P1 solver for Radiative Heat Transfer to SU2. The P1 model is a popular 1-equation model to solve the infinite-dimensional Radiative Heat Equation (RHE) that works under the assumption that the energy distribution is linearly isotropic (1). The implementation is general and thought to allow further extension of the radiation solvers in SU2, e.g., to discrete ordinates or partial moment approximations. The solution method is staggered and works in a very similar way to the turbulence models in SU2. . (1) Frank, M., _et al._ (2006), Partial moment entropy approximation to radiative heat transfer. _Journal of Computational Physics 218(1), 1–18._ DOI: [10.1016/j.jcp.2006.01.038](https://doi.org/10.1016/j.jcp.2006.01.038). ## Related Work; - I'm preparing some tutorials at the moment that I hope to have finalised by the time of the release of 7.0.2. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/872
https://github.com/su2code/SU2/pull/872:238,Energy Efficiency,energy,energy,238,"## Proposed Changes; This PR incorporates a P1 solver for Radiative Heat Transfer to SU2. The P1 model is a popular 1-equation model to solve the infinite-dimensional Radiative Heat Equation (RHE) that works under the assumption that the energy distribution is linearly isotropic (1). The implementation is general and thought to allow further extension of the radiation solvers in SU2, e.g., to discrete ordinates or partial moment approximations. The solution method is staggered and works in a very similar way to the turbulence models in SU2. . (1) Frank, M., _et al._ (2006), Partial moment entropy approximation to radiative heat transfer. _Journal of Computational Physics 218(1), 1–18._ DOI: [10.1016/j.jcp.2006.01.038](https://doi.org/10.1016/j.jcp.2006.01.038). ## Related Work; - I'm preparing some tutorials at the moment that I hope to have finalised by the time of the release of 7.0.2. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/872
https://github.com/su2code/SU2/pull/872:1451,Testability,test,test,1451,"## Proposed Changes; This PR incorporates a P1 solver for Radiative Heat Transfer to SU2. The P1 model is a popular 1-equation model to solve the infinite-dimensional Radiative Heat Equation (RHE) that works under the assumption that the energy distribution is linearly isotropic (1). The implementation is general and thought to allow further extension of the radiation solvers in SU2, e.g., to discrete ordinates or partial moment approximations. The solution method is staggered and works in a very similar way to the turbulence models in SU2. . (1) Frank, M., _et al._ (2006), Partial moment entropy approximation to radiative heat transfer. _Journal of Computational Physics 218(1), 1–18._ DOI: [10.1016/j.jcp.2006.01.038](https://doi.org/10.1016/j.jcp.2006.01.038). ## Related Work; - I'm preparing some tutorials at the moment that I hope to have finalised by the time of the release of 7.0.2. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/872
https://github.com/su2code/SU2/pull/872:1073,Usability,guid,guide,1073,"## Proposed Changes; This PR incorporates a P1 solver for Radiative Heat Transfer to SU2. The P1 model is a popular 1-equation model to solve the infinite-dimensional Radiative Heat Equation (RHE) that works under the assumption that the energy distribution is linearly isotropic (1). The implementation is general and thought to allow further extension of the radiation solvers in SU2, e.g., to discrete ordinates or partial moment approximations. The solution method is staggered and works in a very similar way to the turbulence models in SU2. . (1) Frank, M., _et al._ (2006), Partial moment entropy approximation to radiative heat transfer. _Journal of Computational Physics 218(1), 1–18._ DOI: [10.1016/j.jcp.2006.01.038](https://doi.org/10.1016/j.jcp.2006.01.038). ## Related Work; - I'm preparing some tutorials at the moment that I hope to have finalised by the time of the release of 7.0.2. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/872
https://github.com/su2code/SU2/pull/873:667,Deployability,release,released,667,"## Proposed Changes; These are some minor bugfixes that I detected while preparing some tutorials for FEA. ## Related Work; I have prepared the following tutorials:; - [Linear Elasticity](https://su2code.github.io/tutorials/Linear_Elasticity/); - [Linear Dynamics](https://su2code.github.io/tutorials/Linear_Dynamics/); - [Nonlinear Elasticity](https://su2code.github.io/tutorials/Nonlinear_Elasticity/); - [Nonlinear Elasticity with Multiple Materials](https://su2code.github.io/tutorials/Multiple_Material/); - [Static FSI](https://su2code.github.io/tutorials/Static_FSI/). They could be linked to the main tutorials site as soon as these changes are included in a released version (e.g., 7.0.2). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/873
https://github.com/su2code/SU2/pull/873:1322,Deployability,update,updated,1322,"## Proposed Changes; These are some minor bugfixes that I detected while preparing some tutorials for FEA. ## Related Work; I have prepared the following tutorials:; - [Linear Elasticity](https://su2code.github.io/tutorials/Linear_Elasticity/); - [Linear Dynamics](https://su2code.github.io/tutorials/Linear_Dynamics/); - [Nonlinear Elasticity](https://su2code.github.io/tutorials/Nonlinear_Elasticity/); - [Nonlinear Elasticity with Multiple Materials](https://su2code.github.io/tutorials/Multiple_Material/); - [Static FSI](https://su2code.github.io/tutorials/Static_FSI/). They could be linked to the main tutorials site as soon as these changes are included in a released version (e.g., 7.0.2). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/873
https://github.com/su2code/SU2/pull/873:58,Safety,detect,detected,58,"## Proposed Changes; These are some minor bugfixes that I detected while preparing some tutorials for FEA. ## Related Work; I have prepared the following tutorials:; - [Linear Elasticity](https://su2code.github.io/tutorials/Linear_Elasticity/); - [Linear Dynamics](https://su2code.github.io/tutorials/Linear_Dynamics/); - [Nonlinear Elasticity](https://su2code.github.io/tutorials/Nonlinear_Elasticity/); - [Nonlinear Elasticity with Multiple Materials](https://su2code.github.io/tutorials/Multiple_Material/); - [Static FSI](https://su2code.github.io/tutorials/Static_FSI/). They could be linked to the main tutorials site as soon as these changes are included in a released version (e.g., 7.0.2). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/873
https://github.com/su2code/SU2/pull/873:1249,Testability,test,test,1249,"## Proposed Changes; These are some minor bugfixes that I detected while preparing some tutorials for FEA. ## Related Work; I have prepared the following tutorials:; - [Linear Elasticity](https://su2code.github.io/tutorials/Linear_Elasticity/); - [Linear Dynamics](https://su2code.github.io/tutorials/Linear_Dynamics/); - [Nonlinear Elasticity](https://su2code.github.io/tutorials/Nonlinear_Elasticity/); - [Nonlinear Elasticity with Multiple Materials](https://su2code.github.io/tutorials/Multiple_Material/); - [Static FSI](https://su2code.github.io/tutorials/Static_FSI/). They could be linked to the main tutorials site as soon as these changes are included in a released version (e.g., 7.0.2). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/873
https://github.com/su2code/SU2/pull/873:871,Usability,guid,guide,871,"## Proposed Changes; These are some minor bugfixes that I detected while preparing some tutorials for FEA. ## Related Work; I have prepared the following tutorials:; - [Linear Elasticity](https://su2code.github.io/tutorials/Linear_Elasticity/); - [Linear Dynamics](https://su2code.github.io/tutorials/Linear_Dynamics/); - [Nonlinear Elasticity](https://su2code.github.io/tutorials/Nonlinear_Elasticity/); - [Nonlinear Elasticity with Multiple Materials](https://su2code.github.io/tutorials/Multiple_Material/); - [Static FSI](https://su2code.github.io/tutorials/Static_FSI/). They could be linked to the main tutorials site as soon as these changes are included in a released version (e.g., 7.0.2). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/873
https://github.com/su2code/SU2/pull/874:154,Deployability,release,release,154,"## Proposed Changes; Added a github action that changes the version number as soon as there is a branch created called ""release_v*"". This should make the release process even more automated. . Another quick change is that the regression builds now fail on warnings. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/874
https://github.com/su2code/SU2/pull/874:438,Usability,guid,guide,438,"## Proposed Changes; Added a github action that changes the version number as soon as there is a branch created called ""release_v*"". This should make the release process even more automated. . Another quick change is that the regression builds now fail on warnings. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/874
https://github.com/su2code/SU2/pull/875:865,Deployability,update,updated,865,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/875
https://github.com/su2code/SU2/pull/875:792,Testability,test,test,792,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/875
https://github.com/su2code/SU2/pull/875:414,Usability,guid,guide,414,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/875
https://github.com/su2code/SU2/pull/876:865,Deployability,update,updated,865,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/876
https://github.com/su2code/SU2/pull/876:792,Testability,test,test,792,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/876
https://github.com/su2code/SU2/pull/876:414,Usability,guid,guide,414,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/876
https://github.com/su2code/SU2/pull/877:930,Availability,avail,available,930,"## Proposed Changes; This PR is about the implementation of a rough wall boundary condition for SA and SST models. A given realistic roughness distribution must be first converted to an ""equivalent sand grain roughness"" height and specified as an input. . For the SA turbulence model, the roughness boundary condition is based on:. Aupoix, B. and Spalart, P. R., ""Extensions of the Spalart-Allmaras Turbulence Model to Account for Wall Roughness,"" International Journal of Heat and Fluid Flow, Vol. 24, 2003, pp. 454-462. . Very briefly, the new model assumes there is a ""virtual wall"" located on top of the roughness elements and thus the distance to nearest wall is modified for all points based on the specified sand grain roughness. Additionally, the boundary condition at the wall is now not set to zero but a mixed condition (robin BC) is applied allowing for a non-zero eddy viscosity at the wall. More information is also available [here](https://turbmodels.larc.nasa.gov/spalart.html#sarough). For the SST model, the roughness boundary condition is based on:. Wilcox, D.C Turbulence Modeling for CFD., 1998 and 2006, DWC Industries. There are two suggestions (first in the 2nd edition and a corrected version in the 3rd edition). I have implemented the latest one and commented the old one. There have been numerous papers about some limitations of these models themselves however. The modification consists of changing the omega boundary condition at the wall to a different value based on local quantities. . This PR introduces two extra config options - one to specify whether a wall is rough or not and another to specify the sand grain roughness height for each of them. ; ; WALL_TYPE = SMOOTH/ROUGH; WALL_ROUGHNESS = <array of doubles>. By default all walls are smooth. If neither option is present in the config file, smooth walls are assumed everywhere. However, if there are multiple walls some rough, some smooth, they need to be listed (similar to INLET TYPE) in the order they app",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/877
https://github.com/su2code/SU2/pull/877:4758,Deployability,update,update,4758," rough wall, the WALL_TYPE option must specified for all the markers and WALL_ROUGHNESS set to 0.0 for smooth walls and the desired value for rough walls. ; [Sample input file for airfoil with smooth and rough walls](https://github.com/su2code/SU2/files/4198580/turb_naca62215_v7cfg.txt). The airfoil used here is the NACA 622215 and I can send the mesh and experimental data in case anyone is interested. . ## Additional notes. Modification of wall distance computation required some changes to the ADT routines and subsequently to some FEM stuff as well. To modify the wall distance with roughness, I needed to know which marker was the closest wall and add the corresponding roughness. However, I wasn't sure how to properly do this in MPI. My solution was to pass the marker roughness information to the ADT class itself. This meant I had to add a dummy argument whenever the corresponding ADT classes were called elsewhere. Just to clarify, the modification is only in CADTElem class constructor and ComputeWallDistance routines. I hope this will not be a problem. I made this as a draft PR in case there are some issues with this. Also, if there are any issues with how the config file is changed, I can update that as well. I haven't modified the config_template for this yet. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/877
https://github.com/su2code/SU2/pull/877:5455,Deployability,update,updated,5455," rough wall, the WALL_TYPE option must specified for all the markers and WALL_ROUGHNESS set to 0.0 for smooth walls and the desired value for rough walls. ; [Sample input file for airfoil with smooth and rough walls](https://github.com/su2code/SU2/files/4198580/turb_naca62215_v7cfg.txt). The airfoil used here is the NACA 622215 and I can send the mesh and experimental data in case anyone is interested. . ## Additional notes. Modification of wall distance computation required some changes to the ADT routines and subsequently to some FEM stuff as well. To modify the wall distance with roughness, I needed to know which marker was the closest wall and add the corresponding roughness. However, I wasn't sure how to properly do this in MPI. My solution was to pass the marker roughness information to the ADT class itself. This meant I had to add a dummy argument whenever the corresponding ADT classes were called elsewhere. Just to clarify, the modification is only in CADTElem class constructor and ComputeWallDistance routines. I hope this will not be a problem. I made this as a draft PR in case there are some issues with this. Also, if there are any issues with how the config file is changed, I can update that as well. I haven't modified the config_template for this yet. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/877
https://github.com/su2code/SU2/pull/877:4052,Integrability,rout,routines,4052,"ata by Blanchard (1977); ![blanchard_compariosn](https://user-images.githubusercontent.com/28007882/74439558-bf3b7200-4e6c-11ea-881f-dd9567d3508c.png). Once again, the SA roughness model does fairly well as opposed to the SST. 2. Airfoils. If only a part of the wall is rough, as is the case on airfoils with corrosion for ex, we can split the marker definition as follows:. MARKER_HEATFLUX= (wall1, hf1, wall2, hf2 ...); WALL_TYPE= SMOOTH,ROUGH,...; WALL_ROUGHNESS= 0.0, k1... In case there is even a single rough wall, the WALL_TYPE option must specified for all the markers and WALL_ROUGHNESS set to 0.0 for smooth walls and the desired value for rough walls. ; [Sample input file for airfoil with smooth and rough walls](https://github.com/su2code/SU2/files/4198580/turb_naca62215_v7cfg.txt). The airfoil used here is the NACA 622215 and I can send the mesh and experimental data in case anyone is interested. . ## Additional notes. Modification of wall distance computation required some changes to the ADT routines and subsequently to some FEM stuff as well. To modify the wall distance with roughness, I needed to know which marker was the closest wall and add the corresponding roughness. However, I wasn't sure how to properly do this in MPI. My solution was to pass the marker roughness information to the ADT class itself. This meant I had to add a dummy argument whenever the corresponding ADT classes were called elsewhere. Just to clarify, the modification is only in CADTElem class constructor and ComputeWallDistance routines. I hope this will not be a problem. I made this as a draft PR in case there are some issues with this. Also, if there are any issues with how the config file is changed, I can update that as well. I haven't modified the config_template for this yet. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the revie",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/877
https://github.com/su2code/SU2/pull/877:4573,Integrability,rout,routines,4573,"re is even a single rough wall, the WALL_TYPE option must specified for all the markers and WALL_ROUGHNESS set to 0.0 for smooth walls and the desired value for rough walls. ; [Sample input file for airfoil with smooth and rough walls](https://github.com/su2code/SU2/files/4198580/turb_naca62215_v7cfg.txt). The airfoil used here is the NACA 622215 and I can send the mesh and experimental data in case anyone is interested. . ## Additional notes. Modification of wall distance computation required some changes to the ADT routines and subsequently to some FEM stuff as well. To modify the wall distance with roughness, I needed to know which marker was the closest wall and add the corresponding roughness. However, I wasn't sure how to properly do this in MPI. My solution was to pass the marker roughness information to the ADT class itself. This meant I had to add a dummy argument whenever the corresponding ADT classes were called elsewhere. Just to clarify, the modification is only in CADTElem class constructor and ComputeWallDistance routines. I hope this will not be a problem. I made this as a draft PR in case there are some issues with this. Also, if there are any issues with how the config file is changed, I can update that as well. I haven't modified the config_template for this yet. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/877
https://github.com/su2code/SU2/pull/877:1549,Modifiability,config,config,1549,"of the roughness elements and thus the distance to nearest wall is modified for all points based on the specified sand grain roughness. Additionally, the boundary condition at the wall is now not set to zero but a mixed condition (robin BC) is applied allowing for a non-zero eddy viscosity at the wall. More information is also available [here](https://turbmodels.larc.nasa.gov/spalart.html#sarough). For the SST model, the roughness boundary condition is based on:. Wilcox, D.C Turbulence Modeling for CFD., 1998 and 2006, DWC Industries. There are two suggestions (first in the 2nd edition and a corrected version in the 3rd edition). I have implemented the latest one and commented the old one. There have been numerous papers about some limitations of these models themselves however. The modification consists of changing the omega boundary condition at the wall to a different value based on local quantities. . This PR introduces two extra config options - one to specify whether a wall is rough or not and another to specify the sand grain roughness height for each of them. ; ; WALL_TYPE = SMOOTH/ROUGH; WALL_ROUGHNESS = <array of doubles>. By default all walls are smooth. If neither option is present in the config file, smooth walls are assumed everywhere. However, if there are multiple walls some rough, some smooth, they need to be listed (similar to INLET TYPE) in the order they appear in the MARKER_HEATFLUX definition. I have attached some examples here. . 1. Flatplate; Here is the input file [turb_flatplate_v7_cfg.txt](https://github.com/su2code/SU2/files/4198440/turb_flatplate_v7_cfg.txt),. The meshes can be found in TestCases/rans/flatplate or the NASA TMR database. Here are the results with both SA and SST; ![yplus_vs_uplus_sa_comparison](https://user-images.githubusercontent.com/28007882/74438338-3b808600-4e6a-11ea-9a83-c326384950d3.png). Here I am plotting the non-dimensionalised velocity u^+ against y^+. The clean results give fairly good agreement and we can see ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/877
https://github.com/su2code/SU2/pull/877:1821,Modifiability,config,config,1821,"ion (robin BC) is applied allowing for a non-zero eddy viscosity at the wall. More information is also available [here](https://turbmodels.larc.nasa.gov/spalart.html#sarough). For the SST model, the roughness boundary condition is based on:. Wilcox, D.C Turbulence Modeling for CFD., 1998 and 2006, DWC Industries. There are two suggestions (first in the 2nd edition and a corrected version in the 3rd edition). I have implemented the latest one and commented the old one. There have been numerous papers about some limitations of these models themselves however. The modification consists of changing the omega boundary condition at the wall to a different value based on local quantities. . This PR introduces two extra config options - one to specify whether a wall is rough or not and another to specify the sand grain roughness height for each of them. ; ; WALL_TYPE = SMOOTH/ROUGH; WALL_ROUGHNESS = <array of doubles>. By default all walls are smooth. If neither option is present in the config file, smooth walls are assumed everywhere. However, if there are multiple walls some rough, some smooth, they need to be listed (similar to INLET TYPE) in the order they appear in the MARKER_HEATFLUX definition. I have attached some examples here. . 1. Flatplate; Here is the input file [turb_flatplate_v7_cfg.txt](https://github.com/su2code/SU2/files/4198440/turb_flatplate_v7_cfg.txt),. The meshes can be found in TestCases/rans/flatplate or the NASA TMR database. Here are the results with both SA and SST; ![yplus_vs_uplus_sa_comparison](https://user-images.githubusercontent.com/28007882/74438338-3b808600-4e6a-11ea-9a83-c326384950d3.png). Here I am plotting the non-dimensionalised velocity u^+ against y^+. The clean results give fairly good agreement and we can see some over prediction in velocity shifts. This was also reported elsewhere. ![yplus_vs_uplus_sst_comparison](https://user-images.githubusercontent.com/28007882/74438363-49360b80-4e6a-11ea-9070-09f72810a40a.png). The same plot ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/877
https://github.com/su2code/SU2/pull/877:4728,Modifiability,config,config,4728," rough wall, the WALL_TYPE option must specified for all the markers and WALL_ROUGHNESS set to 0.0 for smooth walls and the desired value for rough walls. ; [Sample input file for airfoil with smooth and rough walls](https://github.com/su2code/SU2/files/4198580/turb_naca62215_v7cfg.txt). The airfoil used here is the NACA 622215 and I can send the mesh and experimental data in case anyone is interested. . ## Additional notes. Modification of wall distance computation required some changes to the ADT routines and subsequently to some FEM stuff as well. To modify the wall distance with roughness, I needed to know which marker was the closest wall and add the corresponding roughness. However, I wasn't sure how to properly do this in MPI. My solution was to pass the marker roughness information to the ADT class itself. This meant I had to add a dummy argument whenever the corresponding ADT classes were called elsewhere. Just to clarify, the modification is only in CADTElem class constructor and ComputeWallDistance routines. I hope this will not be a problem. I made this as a draft PR in case there are some issues with this. Also, if there are any issues with how the config file is changed, I can update that as well. I haven't modified the config_template for this yet. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/877
https://github.com/su2code/SU2/pull/877:2612,Safety,predict,prediction,2612,"wall is rough or not and another to specify the sand grain roughness height for each of them. ; ; WALL_TYPE = SMOOTH/ROUGH; WALL_ROUGHNESS = <array of doubles>. By default all walls are smooth. If neither option is present in the config file, smooth walls are assumed everywhere. However, if there are multiple walls some rough, some smooth, they need to be listed (similar to INLET TYPE) in the order they appear in the MARKER_HEATFLUX definition. I have attached some examples here. . 1. Flatplate; Here is the input file [turb_flatplate_v7_cfg.txt](https://github.com/su2code/SU2/files/4198440/turb_flatplate_v7_cfg.txt),. The meshes can be found in TestCases/rans/flatplate or the NASA TMR database. Here are the results with both SA and SST; ![yplus_vs_uplus_sa_comparison](https://user-images.githubusercontent.com/28007882/74438338-3b808600-4e6a-11ea-9a83-c326384950d3.png). Here I am plotting the non-dimensionalised velocity u^+ against y^+. The clean results give fairly good agreement and we can see some over prediction in velocity shifts. This was also reported elsewhere. ![yplus_vs_uplus_sst_comparison](https://user-images.githubusercontent.com/28007882/74438363-49360b80-4e6a-11ea-9070-09f72810a40a.png). The same plot for SST. The results are not quite as good as SA in general, but I expected that considering some limitations reported in the literature (ex a min y^+ ~ 0.01 and so on). Here is a comparison against experimental data by Blanchard (1977); ![blanchard_compariosn](https://user-images.githubusercontent.com/28007882/74439558-bf3b7200-4e6c-11ea-881f-dd9567d3508c.png). Once again, the SA roughness model does fairly well as opposed to the SST. 2. Airfoils. If only a part of the wall is rough, as is the case on airfoils with corrosion for ex, we can split the marker definition as follows:. MARKER_HEATFLUX= (wall1, hf1, wall2, hf2 ...); WALL_TYPE= SMOOTH,ROUGH,...; WALL_ROUGHNESS= 0.0, k1... In case there is even a single rough wall, the WALL_TYPE option must speci",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/877
https://github.com/su2code/SU2/pull/877:2244,Testability,Test,TestCases,2244,"ed the latest one and commented the old one. There have been numerous papers about some limitations of these models themselves however. The modification consists of changing the omega boundary condition at the wall to a different value based on local quantities. . This PR introduces two extra config options - one to specify whether a wall is rough or not and another to specify the sand grain roughness height for each of them. ; ; WALL_TYPE = SMOOTH/ROUGH; WALL_ROUGHNESS = <array of doubles>. By default all walls are smooth. If neither option is present in the config file, smooth walls are assumed everywhere. However, if there are multiple walls some rough, some smooth, they need to be listed (similar to INLET TYPE) in the order they appear in the MARKER_HEATFLUX definition. I have attached some examples here. . 1. Flatplate; Here is the input file [turb_flatplate_v7_cfg.txt](https://github.com/su2code/SU2/files/4198440/turb_flatplate_v7_cfg.txt),. The meshes can be found in TestCases/rans/flatplate or the NASA TMR database. Here are the results with both SA and SST; ![yplus_vs_uplus_sa_comparison](https://user-images.githubusercontent.com/28007882/74438338-3b808600-4e6a-11ea-9a83-c326384950d3.png). Here I am plotting the non-dimensionalised velocity u^+ against y^+. The clean results give fairly good agreement and we can see some over prediction in velocity shifts. This was also reported elsewhere. ![yplus_vs_uplus_sst_comparison](https://user-images.githubusercontent.com/28007882/74438363-49360b80-4e6a-11ea-9070-09f72810a40a.png). The same plot for SST. The results are not quite as good as SA in general, but I expected that considering some limitations reported in the literature (ex a min y^+ ~ 0.01 and so on). Here is a comparison against experimental data by Blanchard (1977); ![blanchard_compariosn](https://user-images.githubusercontent.com/28007882/74439558-bf3b7200-4e6c-11ea-881f-dd9567d3508c.png). Once again, the SA roughness model does fairly well as opposed ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/877
https://github.com/su2code/SU2/pull/877:5382,Testability,test,test,5382," rough wall, the WALL_TYPE option must specified for all the markers and WALL_ROUGHNESS set to 0.0 for smooth walls and the desired value for rough walls. ; [Sample input file for airfoil with smooth and rough walls](https://github.com/su2code/SU2/files/4198580/turb_naca62215_v7cfg.txt). The airfoil used here is the NACA 622215 and I can send the mesh and experimental data in case anyone is interested. . ## Additional notes. Modification of wall distance computation required some changes to the ADT routines and subsequently to some FEM stuff as well. To modify the wall distance with roughness, I needed to know which marker was the closest wall and add the corresponding roughness. However, I wasn't sure how to properly do this in MPI. My solution was to pass the marker roughness information to the ADT class itself. This meant I had to add a dummy argument whenever the corresponding ADT classes were called elsewhere. Just to clarify, the modification is only in CADTElem class constructor and ComputeWallDistance routines. I hope this will not be a problem. I made this as a draft PR in case there are some issues with this. Also, if there are any issues with how the config file is changed, I can update that as well. I haven't modified the config_template for this yet. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/877
https://github.com/su2code/SU2/pull/877:5004,Usability,guid,guide,5004," rough wall, the WALL_TYPE option must specified for all the markers and WALL_ROUGHNESS set to 0.0 for smooth walls and the desired value for rough walls. ; [Sample input file for airfoil with smooth and rough walls](https://github.com/su2code/SU2/files/4198580/turb_naca62215_v7cfg.txt). The airfoil used here is the NACA 622215 and I can send the mesh and experimental data in case anyone is interested. . ## Additional notes. Modification of wall distance computation required some changes to the ADT routines and subsequently to some FEM stuff as well. To modify the wall distance with roughness, I needed to know which marker was the closest wall and add the corresponding roughness. However, I wasn't sure how to properly do this in MPI. My solution was to pass the marker roughness information to the ADT class itself. This meant I had to add a dummy argument whenever the corresponding ADT classes were called elsewhere. Just to clarify, the modification is only in CADTElem class constructor and ComputeWallDistance routines. I hope this will not be a problem. I made this as a draft PR in case there are some issues with this. Also, if there are any issues with how the config file is changed, I can update that as well. I haven't modified the config_template for this yet. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/877
https://github.com/su2code/SU2/pull/878:865,Deployability,update,updated,865,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/878
https://github.com/su2code/SU2/pull/878:792,Testability,test,test,792,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/878
https://github.com/su2code/SU2/pull/878:414,Usability,guid,guide,414,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/878
https://github.com/su2code/SU2/pull/879:865,Deployability,update,updated,865,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/879
https://github.com/su2code/SU2/pull/879:792,Testability,test,test,792,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/879
https://github.com/su2code/SU2/pull/879:414,Usability,guid,guide,414,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/879
https://github.com/su2code/SU2/pull/880:865,Deployability,update,updated,865,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/880
https://github.com/su2code/SU2/pull/880:792,Testability,test,test,792,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/880
https://github.com/su2code/SU2/pull/880:414,Usability,guid,guide,414,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/880
https://github.com/su2code/SU2/pull/881:1566,Deployability,update,updated,1566,"## Proposed Changes; In order to structure the construction of the solvers a little bit and to remove the dependency of the driver on the solver, I created a static solver factory class. There are routines to create individual instances as well as the whole container. It should be much easier now to see what position in the containers are actually allocated for the different solvers. The `createSolver` routine is a generic one that simply calls `new`. The others have some additional checks or calls for the construction. The idea here was to remove any `if` statements in the `createSolverContainer` routine to ease readability. . If everybody agrees, we could use a similar structure for other classes as well. Let me know what you think. Note from TobiKattmann: This PR depends on #861 . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/881
https://github.com/su2code/SU2/pull/881:350,Energy Efficiency,allocate,allocated,350,"## Proposed Changes; In order to structure the construction of the solvers a little bit and to remove the dependency of the driver on the solver, I created a static solver factory class. There are routines to create individual instances as well as the whole container. It should be much easier now to see what position in the containers are actually allocated for the different solvers. The `createSolver` routine is a generic one that simply calls `new`. The others have some additional checks or calls for the construction. The idea here was to remove any `if` statements in the `createSolverContainer` routine to ease readability. . If everybody agrees, we could use a similar structure for other classes as well. Let me know what you think. Note from TobiKattmann: This PR depends on #861 . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/881
https://github.com/su2code/SU2/pull/881:106,Integrability,depend,dependency,106,"## Proposed Changes; In order to structure the construction of the solvers a little bit and to remove the dependency of the driver on the solver, I created a static solver factory class. There are routines to create individual instances as well as the whole container. It should be much easier now to see what position in the containers are actually allocated for the different solvers. The `createSolver` routine is a generic one that simply calls `new`. The others have some additional checks or calls for the construction. The idea here was to remove any `if` statements in the `createSolverContainer` routine to ease readability. . If everybody agrees, we could use a similar structure for other classes as well. Let me know what you think. Note from TobiKattmann: This PR depends on #861 . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/881
https://github.com/su2code/SU2/pull/881:197,Integrability,rout,routines,197,"## Proposed Changes; In order to structure the construction of the solvers a little bit and to remove the dependency of the driver on the solver, I created a static solver factory class. There are routines to create individual instances as well as the whole container. It should be much easier now to see what position in the containers are actually allocated for the different solvers. The `createSolver` routine is a generic one that simply calls `new`. The others have some additional checks or calls for the construction. The idea here was to remove any `if` statements in the `createSolverContainer` routine to ease readability. . If everybody agrees, we could use a similar structure for other classes as well. Let me know what you think. Note from TobiKattmann: This PR depends on #861 . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/881
https://github.com/su2code/SU2/pull/881:406,Integrability,rout,routine,406,"## Proposed Changes; In order to structure the construction of the solvers a little bit and to remove the dependency of the driver on the solver, I created a static solver factory class. There are routines to create individual instances as well as the whole container. It should be much easier now to see what position in the containers are actually allocated for the different solvers. The `createSolver` routine is a generic one that simply calls `new`. The others have some additional checks or calls for the construction. The idea here was to remove any `if` statements in the `createSolverContainer` routine to ease readability. . If everybody agrees, we could use a similar structure for other classes as well. Let me know what you think. Note from TobiKattmann: This PR depends on #861 . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/881
https://github.com/su2code/SU2/pull/881:605,Integrability,rout,routine,605,"## Proposed Changes; In order to structure the construction of the solvers a little bit and to remove the dependency of the driver on the solver, I created a static solver factory class. There are routines to create individual instances as well as the whole container. It should be much easier now to see what position in the containers are actually allocated for the different solvers. The `createSolver` routine is a generic one that simply calls `new`. The others have some additional checks or calls for the construction. The idea here was to remove any `if` statements in the `createSolverContainer` routine to ease readability. . If everybody agrees, we could use a similar structure for other classes as well. Let me know what you think. Note from TobiKattmann: This PR depends on #861 . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/881
https://github.com/su2code/SU2/pull/881:777,Integrability,depend,depends,777,"## Proposed Changes; In order to structure the construction of the solvers a little bit and to remove the dependency of the driver on the solver, I created a static solver factory class. There are routines to create individual instances as well as the whole container. It should be much easier now to see what position in the containers are actually allocated for the different solvers. The `createSolver` routine is a generic one that simply calls `new`. The others have some additional checks or calls for the construction. The idea here was to remove any `if` statements in the `createSolverContainer` routine to ease readability. . If everybody agrees, we could use a similar structure for other classes as well. Let me know what you think. Note from TobiKattmann: This PR depends on #861 . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/881
https://github.com/su2code/SU2/pull/881:1493,Testability,test,test,1493,"## Proposed Changes; In order to structure the construction of the solvers a little bit and to remove the dependency of the driver on the solver, I created a static solver factory class. There are routines to create individual instances as well as the whole container. It should be much easier now to see what position in the containers are actually allocated for the different solvers. The `createSolver` routine is a generic one that simply calls `new`. The others have some additional checks or calls for the construction. The idea here was to remove any `if` statements in the `createSolverContainer` routine to ease readability. . If everybody agrees, we could use a similar structure for other classes as well. Let me know what you think. Note from TobiKattmann: This PR depends on #861 . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/881
https://github.com/su2code/SU2/pull/881:436,Usability,simpl,simply,436,"## Proposed Changes; In order to structure the construction of the solvers a little bit and to remove the dependency of the driver on the solver, I created a static solver factory class. There are routines to create individual instances as well as the whole container. It should be much easier now to see what position in the containers are actually allocated for the different solvers. The `createSolver` routine is a generic one that simply calls `new`. The others have some additional checks or calls for the construction. The idea here was to remove any `if` statements in the `createSolverContainer` routine to ease readability. . If everybody agrees, we could use a similar structure for other classes as well. Let me know what you think. Note from TobiKattmann: This PR depends on #861 . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/881
https://github.com/su2code/SU2/pull/881:1115,Usability,guid,guide,1115,"## Proposed Changes; In order to structure the construction of the solvers a little bit and to remove the dependency of the driver on the solver, I created a static solver factory class. There are routines to create individual instances as well as the whole container. It should be much easier now to see what position in the containers are actually allocated for the different solvers. The `createSolver` routine is a generic one that simply calls `new`. The others have some additional checks or calls for the construction. The idea here was to remove any `if` statements in the `createSolverContainer` routine to ease readability. . If everybody agrees, we could use a similar structure for other classes as well. Let me know what you think. Note from TobiKattmann: This PR depends on #861 . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/881
https://github.com/su2code/SU2/pull/882:865,Deployability,update,updated,865,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/882
https://github.com/su2code/SU2/pull/882:792,Testability,test,test,792,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/882
https://github.com/su2code/SU2/pull/882:414,Usability,guid,guide,414,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/882
https://github.com/su2code/SU2/pull/883:865,Deployability,update,updated,865,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/883
https://github.com/su2code/SU2/pull/883:792,Testability,test,test,792,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/883
https://github.com/su2code/SU2/pull/883:414,Usability,guid,guide,414,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/883
https://github.com/su2code/SU2/pull/884:21,Deployability,Update,Update,21,"## Proposed Changes; Update CGNS external library following recent release, see:; [https://github.com/CGNS/CGNS/releases/tag/v4.0.0](https://github.com/CGNS/CGNS/releases/tag/v4.0.0). ## Related Work; N/A. ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/884
https://github.com/su2code/SU2/pull/884:67,Deployability,release,release,67,"## Proposed Changes; Update CGNS external library following recent release, see:; [https://github.com/CGNS/CGNS/releases/tag/v4.0.0](https://github.com/CGNS/CGNS/releases/tag/v4.0.0). ## Related Work; N/A. ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/884
https://github.com/su2code/SU2/pull/884:112,Deployability,release,releases,112,"## Proposed Changes; Update CGNS external library following recent release, see:; [https://github.com/CGNS/CGNS/releases/tag/v4.0.0](https://github.com/CGNS/CGNS/releases/tag/v4.0.0). ## Related Work; N/A. ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/884
https://github.com/su2code/SU2/pull/884:162,Deployability,release,releases,162,"## Proposed Changes; Update CGNS external library following recent release, see:; [https://github.com/CGNS/CGNS/releases/tag/v4.0.0](https://github.com/CGNS/CGNS/releases/tag/v4.0.0). ## Related Work; N/A. ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/884
https://github.com/su2code/SU2/pull/884:589,Deployability,update,updated,589,"## Proposed Changes; Update CGNS external library following recent release, see:; [https://github.com/CGNS/CGNS/releases/tag/v4.0.0](https://github.com/CGNS/CGNS/releases/tag/v4.0.0). ## Related Work; N/A. ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/884
https://github.com/su2code/SU2/pull/884:516,Testability,test,test,516,"## Proposed Changes; Update CGNS external library following recent release, see:; [https://github.com/CGNS/CGNS/releases/tag/v4.0.0](https://github.com/CGNS/CGNS/releases/tag/v4.0.0). ## Related Work; N/A. ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/884
https://github.com/su2code/SU2/pull/885:865,Deployability,update,updated,865,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/885
https://github.com/su2code/SU2/pull/885:792,Testability,test,test,792,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/885
https://github.com/su2code/SU2/pull/885:414,Usability,guid,guide,414,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/885
https://github.com/su2code/SU2/issues/886:81,Deployability,install,install,81,"When you finish building SU2, you are told to set both $SU2_RUN (pointing to the install path) and $SU2_HOME (pointing to the source path). However, if you install a precompiled binary, there's no source in it, and [you are told](https://su2code.github.io/docs_v7/SU2-Linux-MacOS/) to set $SU2_RUN only. Do I really need to set $SU2_HOME for using SU2 if I built it from source? What if I prefer to keep the source packed in a tarball rather than extracted? What's the use of $SU2_HOME?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/886
https://github.com/su2code/SU2/issues/886:156,Deployability,install,install,156,"When you finish building SU2, you are told to set both $SU2_RUN (pointing to the install path) and $SU2_HOME (pointing to the source path). However, if you install a precompiled binary, there's no source in it, and [you are told](https://su2code.github.io/docs_v7/SU2-Linux-MacOS/) to set $SU2_RUN only. Do I really need to set $SU2_HOME for using SU2 if I built it from source? What if I prefer to keep the source packed in a tarball rather than extracted? What's the use of $SU2_HOME?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/886
https://github.com/su2code/SU2/issues/887:156,Availability,error,error,156,"**Describe the bug**; If you follow the Quickstart tutorial, you get one warning (""The adjoint solver should use a non-dimensional flow solution"") and this error when running the CONTINUOUS_ADJOINT pass:. ```; SU2_CFD inv_NACA0012.cfg; WARNING: The adjoint solver should use a non-dimensional flow solution. Error in ""void CConfig::SetPostprocessing(unsigned short, unsigned short, unsigned short)"": ; -------------------------------------------------------------------------; CFL adaption only available for finite-volume fluid solvers.; Please select CFL_ADAPT = NO.; ------------------------------ Error Exit -------------------------------. --------------------------------------------------------------------------; MPI_ABORT was invoked on rank 0 in communicator MPI_COMM_WORLD; with errorcode 1. NOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.; You may or may not see output from other processes, depending on; exactly when Open MPI kills them.; --------------------------------------------------------------------------; ```. **To Reproduce**; *Just follow the steps in the tutorial, one by one, and when you get to step 3 in the CONTINUOUS_ADJOINT run, you get the error.*. **Desktop (please complete the following information):**; - SU2 Version: [e.g., v7.0.1]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/887
https://github.com/su2code/SU2/issues/887:308,Availability,Error,Error,308,"**Describe the bug**; If you follow the Quickstart tutorial, you get one warning (""The adjoint solver should use a non-dimensional flow solution"") and this error when running the CONTINUOUS_ADJOINT pass:. ```; SU2_CFD inv_NACA0012.cfg; WARNING: The adjoint solver should use a non-dimensional flow solution. Error in ""void CConfig::SetPostprocessing(unsigned short, unsigned short, unsigned short)"": ; -------------------------------------------------------------------------; CFL adaption only available for finite-volume fluid solvers.; Please select CFL_ADAPT = NO.; ------------------------------ Error Exit -------------------------------. --------------------------------------------------------------------------; MPI_ABORT was invoked on rank 0 in communicator MPI_COMM_WORLD; with errorcode 1. NOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.; You may or may not see output from other processes, depending on; exactly when Open MPI kills them.; --------------------------------------------------------------------------; ```. **To Reproduce**; *Just follow the steps in the tutorial, one by one, and when you get to step 3 in the CONTINUOUS_ADJOINT run, you get the error.*. **Desktop (please complete the following information):**; - SU2 Version: [e.g., v7.0.1]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/887
https://github.com/su2code/SU2/issues/887:495,Availability,avail,available,495,"**Describe the bug**; If you follow the Quickstart tutorial, you get one warning (""The adjoint solver should use a non-dimensional flow solution"") and this error when running the CONTINUOUS_ADJOINT pass:. ```; SU2_CFD inv_NACA0012.cfg; WARNING: The adjoint solver should use a non-dimensional flow solution. Error in ""void CConfig::SetPostprocessing(unsigned short, unsigned short, unsigned short)"": ; -------------------------------------------------------------------------; CFL adaption only available for finite-volume fluid solvers.; Please select CFL_ADAPT = NO.; ------------------------------ Error Exit -------------------------------. --------------------------------------------------------------------------; MPI_ABORT was invoked on rank 0 in communicator MPI_COMM_WORLD; with errorcode 1. NOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.; You may or may not see output from other processes, depending on; exactly when Open MPI kills them.; --------------------------------------------------------------------------; ```. **To Reproduce**; *Just follow the steps in the tutorial, one by one, and when you get to step 3 in the CONTINUOUS_ADJOINT run, you get the error.*. **Desktop (please complete the following information):**; - SU2 Version: [e.g., v7.0.1]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/887
https://github.com/su2code/SU2/issues/887:601,Availability,Error,Error,601,"**Describe the bug**; If you follow the Quickstart tutorial, you get one warning (""The adjoint solver should use a non-dimensional flow solution"") and this error when running the CONTINUOUS_ADJOINT pass:. ```; SU2_CFD inv_NACA0012.cfg; WARNING: The adjoint solver should use a non-dimensional flow solution. Error in ""void CConfig::SetPostprocessing(unsigned short, unsigned short, unsigned short)"": ; -------------------------------------------------------------------------; CFL adaption only available for finite-volume fluid solvers.; Please select CFL_ADAPT = NO.; ------------------------------ Error Exit -------------------------------. --------------------------------------------------------------------------; MPI_ABORT was invoked on rank 0 in communicator MPI_COMM_WORLD; with errorcode 1. NOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.; You may or may not see output from other processes, depending on; exactly when Open MPI kills them.; --------------------------------------------------------------------------; ```. **To Reproduce**; *Just follow the steps in the tutorial, one by one, and when you get to step 3 in the CONTINUOUS_ADJOINT run, you get the error.*. **Desktop (please complete the following information):**; - SU2 Version: [e.g., v7.0.1]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/887
https://github.com/su2code/SU2/issues/887:790,Availability,error,errorcode,790,"**Describe the bug**; If you follow the Quickstart tutorial, you get one warning (""The adjoint solver should use a non-dimensional flow solution"") and this error when running the CONTINUOUS_ADJOINT pass:. ```; SU2_CFD inv_NACA0012.cfg; WARNING: The adjoint solver should use a non-dimensional flow solution. Error in ""void CConfig::SetPostprocessing(unsigned short, unsigned short, unsigned short)"": ; -------------------------------------------------------------------------; CFL adaption only available for finite-volume fluid solvers.; Please select CFL_ADAPT = NO.; ------------------------------ Error Exit -------------------------------. --------------------------------------------------------------------------; MPI_ABORT was invoked on rank 0 in communicator MPI_COMM_WORLD; with errorcode 1. NOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.; You may or may not see output from other processes, depending on; exactly when Open MPI kills them.; --------------------------------------------------------------------------; ```. **To Reproduce**; *Just follow the steps in the tutorial, one by one, and when you get to step 3 in the CONTINUOUS_ADJOINT run, you get the error.*. **Desktop (please complete the following information):**; - SU2 Version: [e.g., v7.0.1]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/887
https://github.com/su2code/SU2/issues/887:1194,Availability,error,error,1194,"**Describe the bug**; If you follow the Quickstart tutorial, you get one warning (""The adjoint solver should use a non-dimensional flow solution"") and this error when running the CONTINUOUS_ADJOINT pass:. ```; SU2_CFD inv_NACA0012.cfg; WARNING: The adjoint solver should use a non-dimensional flow solution. Error in ""void CConfig::SetPostprocessing(unsigned short, unsigned short, unsigned short)"": ; -------------------------------------------------------------------------; CFL adaption only available for finite-volume fluid solvers.; Please select CFL_ADAPT = NO.; ------------------------------ Error Exit -------------------------------. --------------------------------------------------------------------------; MPI_ABORT was invoked on rank 0 in communicator MPI_COMM_WORLD; with errorcode 1. NOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.; You may or may not see output from other processes, depending on; exactly when Open MPI kills them.; --------------------------------------------------------------------------; ```. **To Reproduce**; *Just follow the steps in the tutorial, one by one, and when you get to step 3 in the CONTINUOUS_ADJOINT run, you get the error.*. **Desktop (please complete the following information):**; - SU2 Version: [e.g., v7.0.1]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/887
https://github.com/su2code/SU2/issues/887:481,Energy Efficiency,adapt,adaption,481,"**Describe the bug**; If you follow the Quickstart tutorial, you get one warning (""The adjoint solver should use a non-dimensional flow solution"") and this error when running the CONTINUOUS_ADJOINT pass:. ```; SU2_CFD inv_NACA0012.cfg; WARNING: The adjoint solver should use a non-dimensional flow solution. Error in ""void CConfig::SetPostprocessing(unsigned short, unsigned short, unsigned short)"": ; -------------------------------------------------------------------------; CFL adaption only available for finite-volume fluid solvers.; Please select CFL_ADAPT = NO.; ------------------------------ Error Exit -------------------------------. --------------------------------------------------------------------------; MPI_ABORT was invoked on rank 0 in communicator MPI_COMM_WORLD; with errorcode 1. NOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.; You may or may not see output from other processes, depending on; exactly when Open MPI kills them.; --------------------------------------------------------------------------; ```. **To Reproduce**; *Just follow the steps in the tutorial, one by one, and when you get to step 3 in the CONTINUOUS_ADJOINT run, you get the error.*. **Desktop (please complete the following information):**; - SU2 Version: [e.g., v7.0.1]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/887
https://github.com/su2code/SU2/issues/887:924,Integrability,depend,depending,924,"**Describe the bug**; If you follow the Quickstart tutorial, you get one warning (""The adjoint solver should use a non-dimensional flow solution"") and this error when running the CONTINUOUS_ADJOINT pass:. ```; SU2_CFD inv_NACA0012.cfg; WARNING: The adjoint solver should use a non-dimensional flow solution. Error in ""void CConfig::SetPostprocessing(unsigned short, unsigned short, unsigned short)"": ; -------------------------------------------------------------------------; CFL adaption only available for finite-volume fluid solvers.; Please select CFL_ADAPT = NO.; ------------------------------ Error Exit -------------------------------. --------------------------------------------------------------------------; MPI_ABORT was invoked on rank 0 in communicator MPI_COMM_WORLD; with errorcode 1. NOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.; You may or may not see output from other processes, depending on; exactly when Open MPI kills them.; --------------------------------------------------------------------------; ```. **To Reproduce**; *Just follow the steps in the tutorial, one by one, and when you get to step 3 in the CONTINUOUS_ADJOINT run, you get the error.*. **Desktop (please complete the following information):**; - SU2 Version: [e.g., v7.0.1]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/887
https://github.com/su2code/SU2/issues/887:481,Modifiability,adapt,adaption,481,"**Describe the bug**; If you follow the Quickstart tutorial, you get one warning (""The adjoint solver should use a non-dimensional flow solution"") and this error when running the CONTINUOUS_ADJOINT pass:. ```; SU2_CFD inv_NACA0012.cfg; WARNING: The adjoint solver should use a non-dimensional flow solution. Error in ""void CConfig::SetPostprocessing(unsigned short, unsigned short, unsigned short)"": ; -------------------------------------------------------------------------; CFL adaption only available for finite-volume fluid solvers.; Please select CFL_ADAPT = NO.; ------------------------------ Error Exit -------------------------------. --------------------------------------------------------------------------; MPI_ABORT was invoked on rank 0 in communicator MPI_COMM_WORLD; with errorcode 1. NOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.; You may or may not see output from other processes, depending on; exactly when Open MPI kills them.; --------------------------------------------------------------------------; ```. **To Reproduce**; *Just follow the steps in the tutorial, one by one, and when you get to step 3 in the CONTINUOUS_ADJOINT run, you get the error.*. **Desktop (please complete the following information):**; - SU2 Version: [e.g., v7.0.1]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/887
https://github.com/su2code/SU2/issues/888:1302,Availability,ERROR,ERROR,1302,"Hi,. i tried to compile SU2 v7.0.1 on Windows 10.; For this i followed your despription in Docs/Build from Source/Build SU2 on Windows. I installed MS MPI and MS MPISDK 10.1.2, MinGW 8.1.0, pkg-config 0.26 - 1 and swigwin 4.0.1. The command for meson is:; python meson.py build -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true -Dwith-mpi=enabled --prefix=""D:\\Programs\\SU2 CFD\\SU2-7.0.1\\bin"". The result is the following:; git command not found. Using fall-back method to init submodules; The Meson build system; Version: 0.52.999; Source dir: D:\Programs\SU2 CFD\SU2-7.0.1; Build dir: D:\Programs\SU2 CFD\SU2-7.0.1\build; Build type: native build; Project name: SU2; Project version: 7.0.1; C compiler for the host machine: gcc (gcc 8.1.0 ""gcc (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the host machine: GNU ld.bfd 2.30; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: GNU ld.bfd 2.30; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (C:\Users\Name\AppData\Local\Programs\Python\Python38\python.exe); Run-time dependency MPI for c found: YES; Run-time dependency MPI for cpp found: NO. meson.build:37:2: ERROR: Dependency ""mpi"" not found. Can you help me what is wrong here?; Which settings do you use to compile SU2 on Windows 10? Did you change any meson.build files?. Thank you very much. Kind Regards; KleineKampfzwergin",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888
https://github.com/su2code/SU2/issues/888:138,Deployability,install,installed,138,"Hi,. i tried to compile SU2 v7.0.1 on Windows 10.; For this i followed your despription in Docs/Build from Source/Build SU2 on Windows. I installed MS MPI and MS MPISDK 10.1.2, MinGW 8.1.0, pkg-config 0.26 - 1 and swigwin 4.0.1. The command for meson is:; python meson.py build -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true -Dwith-mpi=enabled --prefix=""D:\\Programs\\SU2 CFD\\SU2-7.0.1\\bin"". The result is the following:; git command not found. Using fall-back method to init submodules; The Meson build system; Version: 0.52.999; Source dir: D:\Programs\SU2 CFD\SU2-7.0.1; Build dir: D:\Programs\SU2 CFD\SU2-7.0.1\build; Build type: native build; Project name: SU2; Project version: 7.0.1; C compiler for the host machine: gcc (gcc 8.1.0 ""gcc (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the host machine: GNU ld.bfd 2.30; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: GNU ld.bfd 2.30; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (C:\Users\Name\AppData\Local\Programs\Python\Python38\python.exe); Run-time dependency MPI for c found: YES; Run-time dependency MPI for cpp found: NO. meson.build:37:2: ERROR: Dependency ""mpi"" not found. Can you help me what is wrong here?; Which settings do you use to compile SU2 on Windows 10? Did you change any meson.build files?. Thank you very much. Kind Regards; KleineKampfzwergin",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888
https://github.com/su2code/SU2/issues/888:1208,Integrability,depend,dependency,1208,"Hi,. i tried to compile SU2 v7.0.1 on Windows 10.; For this i followed your despription in Docs/Build from Source/Build SU2 on Windows. I installed MS MPI and MS MPISDK 10.1.2, MinGW 8.1.0, pkg-config 0.26 - 1 and swigwin 4.0.1. The command for meson is:; python meson.py build -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true -Dwith-mpi=enabled --prefix=""D:\\Programs\\SU2 CFD\\SU2-7.0.1\\bin"". The result is the following:; git command not found. Using fall-back method to init submodules; The Meson build system; Version: 0.52.999; Source dir: D:\Programs\SU2 CFD\SU2-7.0.1; Build dir: D:\Programs\SU2 CFD\SU2-7.0.1\build; Build type: native build; Project name: SU2; Project version: 7.0.1; C compiler for the host machine: gcc (gcc 8.1.0 ""gcc (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the host machine: GNU ld.bfd 2.30; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: GNU ld.bfd 2.30; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (C:\Users\Name\AppData\Local\Programs\Python\Python38\python.exe); Run-time dependency MPI for c found: YES; Run-time dependency MPI for cpp found: NO. meson.build:37:2: ERROR: Dependency ""mpi"" not found. Can you help me what is wrong here?; Which settings do you use to compile SU2 on Windows 10? Did you change any meson.build files?. Thank you very much. Kind Regards; KleineKampfzwergin",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888
https://github.com/su2code/SU2/issues/888:1250,Integrability,depend,dependency,1250,"Hi,. i tried to compile SU2 v7.0.1 on Windows 10.; For this i followed your despription in Docs/Build from Source/Build SU2 on Windows. I installed MS MPI and MS MPISDK 10.1.2, MinGW 8.1.0, pkg-config 0.26 - 1 and swigwin 4.0.1. The command for meson is:; python meson.py build -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true -Dwith-mpi=enabled --prefix=""D:\\Programs\\SU2 CFD\\SU2-7.0.1\\bin"". The result is the following:; git command not found. Using fall-back method to init submodules; The Meson build system; Version: 0.52.999; Source dir: D:\Programs\SU2 CFD\SU2-7.0.1; Build dir: D:\Programs\SU2 CFD\SU2-7.0.1\build; Build type: native build; Project name: SU2; Project version: 7.0.1; C compiler for the host machine: gcc (gcc 8.1.0 ""gcc (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the host machine: GNU ld.bfd 2.30; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: GNU ld.bfd 2.30; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (C:\Users\Name\AppData\Local\Programs\Python\Python38\python.exe); Run-time dependency MPI for c found: YES; Run-time dependency MPI for cpp found: NO. meson.build:37:2: ERROR: Dependency ""mpi"" not found. Can you help me what is wrong here?; Which settings do you use to compile SU2 on Windows 10? Did you change any meson.build files?. Thank you very much. Kind Regards; KleineKampfzwergin",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888
https://github.com/su2code/SU2/issues/888:1309,Integrability,Depend,Dependency,1309,"Hi,. i tried to compile SU2 v7.0.1 on Windows 10.; For this i followed your despription in Docs/Build from Source/Build SU2 on Windows. I installed MS MPI and MS MPISDK 10.1.2, MinGW 8.1.0, pkg-config 0.26 - 1 and swigwin 4.0.1. The command for meson is:; python meson.py build -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true -Dwith-mpi=enabled --prefix=""D:\\Programs\\SU2 CFD\\SU2-7.0.1\\bin"". The result is the following:; git command not found. Using fall-back method to init submodules; The Meson build system; Version: 0.52.999; Source dir: D:\Programs\SU2 CFD\SU2-7.0.1; Build dir: D:\Programs\SU2 CFD\SU2-7.0.1\build; Build type: native build; Project name: SU2; Project version: 7.0.1; C compiler for the host machine: gcc (gcc 8.1.0 ""gcc (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the host machine: GNU ld.bfd 2.30; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: GNU ld.bfd 2.30; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (C:\Users\Name\AppData\Local\Programs\Python\Python38\python.exe); Run-time dependency MPI for c found: YES; Run-time dependency MPI for cpp found: NO. meson.build:37:2: ERROR: Dependency ""mpi"" not found. Can you help me what is wrong here?; Which settings do you use to compile SU2 on Windows 10? Did you change any meson.build files?. Thank you very much. Kind Regards; KleineKampfzwergin",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888
https://github.com/su2code/SU2/issues/888:194,Modifiability,config,config,194,"Hi,. i tried to compile SU2 v7.0.1 on Windows 10.; For this i followed your despription in Docs/Build from Source/Build SU2 on Windows. I installed MS MPI and MS MPISDK 10.1.2, MinGW 8.1.0, pkg-config 0.26 - 1 and swigwin 4.0.1. The command for meson is:; python meson.py build -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true -Dwith-mpi=enabled --prefix=""D:\\Programs\\SU2 CFD\\SU2-7.0.1\\bin"". The result is the following:; git command not found. Using fall-back method to init submodules; The Meson build system; Version: 0.52.999; Source dir: D:\Programs\SU2 CFD\SU2-7.0.1; Build dir: D:\Programs\SU2 CFD\SU2-7.0.1\build; Build type: native build; Project name: SU2; Project version: 7.0.1; C compiler for the host machine: gcc (gcc 8.1.0 ""gcc (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the host machine: GNU ld.bfd 2.30; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: GNU ld.bfd 2.30; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (C:\Users\Name\AppData\Local\Programs\Python\Python38\python.exe); Run-time dependency MPI for c found: YES; Run-time dependency MPI for cpp found: NO. meson.build:37:2: ERROR: Dependency ""mpi"" not found. Can you help me what is wrong here?; Which settings do you use to compile SU2 on Windows 10? Did you change any meson.build files?. Thank you very much. Kind Regards; KleineKampfzwergin",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/888
https://github.com/su2code/SU2/issues/889:42,Availability,avail,available,42,"What are the objective functions that are available with Turbomachinery for the adjoint solver? The test case ""disk_adj_turbomachinery/transonic_stator_2D"" does not work with the python script:. `$ shape_optimization.py -g DISCRETE_ADJOINT -f transonic_stator_2D.cfg`. and shows the following error:; ```; File ""/home/baigan/SU2/bin/SU2/opt/project.py"", line 129, in __init__; group = historyOutFields[this_obj]['GROUP']; KeyError: 'ENTROPY_GENERATION'; ```; If I change the objective function to DRAG then this error disappears but then it won't support the constraint for FLOW_ANGLE_OUT. Is ENTROPY_GENERATION supported for Turbomachinery or not?. I generated the FFD mesh using DV_KIND=FFD_SETTING and then changed to FFD_CONTROL_POINT_2D with the new mesh. A discrete adjoint run of SU2_CFD_AD seems to converge nicely. But how can I manually go through the process of generating config files for SU2_DOT / SU2_DEF to get the next deformed shape and what is the sequence they must be run if the python script is not working?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/889
https://github.com/su2code/SU2/issues/889:293,Availability,error,error,293,"What are the objective functions that are available with Turbomachinery for the adjoint solver? The test case ""disk_adj_turbomachinery/transonic_stator_2D"" does not work with the python script:. `$ shape_optimization.py -g DISCRETE_ADJOINT -f transonic_stator_2D.cfg`. and shows the following error:; ```; File ""/home/baigan/SU2/bin/SU2/opt/project.py"", line 129, in __init__; group = historyOutFields[this_obj]['GROUP']; KeyError: 'ENTROPY_GENERATION'; ```; If I change the objective function to DRAG then this error disappears but then it won't support the constraint for FLOW_ANGLE_OUT. Is ENTROPY_GENERATION supported for Turbomachinery or not?. I generated the FFD mesh using DV_KIND=FFD_SETTING and then changed to FFD_CONTROL_POINT_2D with the new mesh. A discrete adjoint run of SU2_CFD_AD seems to converge nicely. But how can I manually go through the process of generating config files for SU2_DOT / SU2_DEF to get the next deformed shape and what is the sequence they must be run if the python script is not working?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/889
https://github.com/su2code/SU2/issues/889:512,Availability,error,error,512,"What are the objective functions that are available with Turbomachinery for the adjoint solver? The test case ""disk_adj_turbomachinery/transonic_stator_2D"" does not work with the python script:. `$ shape_optimization.py -g DISCRETE_ADJOINT -f transonic_stator_2D.cfg`. and shows the following error:; ```; File ""/home/baigan/SU2/bin/SU2/opt/project.py"", line 129, in __init__; group = historyOutFields[this_obj]['GROUP']; KeyError: 'ENTROPY_GENERATION'; ```; If I change the objective function to DRAG then this error disappears but then it won't support the constraint for FLOW_ANGLE_OUT. Is ENTROPY_GENERATION supported for Turbomachinery or not?. I generated the FFD mesh using DV_KIND=FFD_SETTING and then changed to FFD_CONTROL_POINT_2D with the new mesh. A discrete adjoint run of SU2_CFD_AD seems to converge nicely. But how can I manually go through the process of generating config files for SU2_DOT / SU2_DEF to get the next deformed shape and what is the sequence they must be run if the python script is not working?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/889
https://github.com/su2code/SU2/issues/889:884,Modifiability,config,config,884,"What are the objective functions that are available with Turbomachinery for the adjoint solver? The test case ""disk_adj_turbomachinery/transonic_stator_2D"" does not work with the python script:. `$ shape_optimization.py -g DISCRETE_ADJOINT -f transonic_stator_2D.cfg`. and shows the following error:; ```; File ""/home/baigan/SU2/bin/SU2/opt/project.py"", line 129, in __init__; group = historyOutFields[this_obj]['GROUP']; KeyError: 'ENTROPY_GENERATION'; ```; If I change the objective function to DRAG then this error disappears but then it won't support the constraint for FLOW_ANGLE_OUT. Is ENTROPY_GENERATION supported for Turbomachinery or not?. I generated the FFD mesh using DV_KIND=FFD_SETTING and then changed to FFD_CONTROL_POINT_2D with the new mesh. A discrete adjoint run of SU2_CFD_AD seems to converge nicely. But how can I manually go through the process of generating config files for SU2_DOT / SU2_DEF to get the next deformed shape and what is the sequence they must be run if the python script is not working?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/889
https://github.com/su2code/SU2/issues/889:100,Testability,test,test,100,"What are the objective functions that are available with Turbomachinery for the adjoint solver? The test case ""disk_adj_turbomachinery/transonic_stator_2D"" does not work with the python script:. `$ shape_optimization.py -g DISCRETE_ADJOINT -f transonic_stator_2D.cfg`. and shows the following error:; ```; File ""/home/baigan/SU2/bin/SU2/opt/project.py"", line 129, in __init__; group = historyOutFields[this_obj]['GROUP']; KeyError: 'ENTROPY_GENERATION'; ```; If I change the objective function to DRAG then this error disappears but then it won't support the constraint for FLOW_ANGLE_OUT. Is ENTROPY_GENERATION supported for Turbomachinery or not?. I generated the FFD mesh using DV_KIND=FFD_SETTING and then changed to FFD_CONTROL_POINT_2D with the new mesh. A discrete adjoint run of SU2_CFD_AD seems to converge nicely. But how can I manually go through the process of generating config files for SU2_DOT / SU2_DEF to get the next deformed shape and what is the sequence they must be run if the python script is not working?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/889
https://github.com/su2code/SU2/issues/890:259,Availability,down,downloaded,259,"Generated .su2 mesh using Gmsh with same number of elements and nodes as .cgns mesh have on ""su2code.github.io/Inviscid_Wedge/"" repository and used same configuration file from the repository but results are different on using .su2 mesh from Gmsh and the one downloaded from repository. . Its weird that both the mesh are exactly same and same cfg file but different shock resolutions (repository mesh give smoother result). Please check attached Mach contour generated using Paraview.; ![MachContour](https://user-images.githubusercontent.com/59632055/75407996-ce83ea80-5957-11ea-8b7c-9c1a731d7a84.png); [mesh_and_config_files.zip](https://github.com/su2code/SU2/files/4259257/mesh_and_config_files.zip). **Desktop (please complete the following information):**; - OS: Windows 7; - MPI implementation and version: MicrosoftMPI v10.1; - SU2 Version: v7.0.0 (binary executable)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/890
https://github.com/su2code/SU2/issues/890:153,Deployability,configurat,configuration,153,"Generated .su2 mesh using Gmsh with same number of elements and nodes as .cgns mesh have on ""su2code.github.io/Inviscid_Wedge/"" repository and used same configuration file from the repository but results are different on using .su2 mesh from Gmsh and the one downloaded from repository. . Its weird that both the mesh are exactly same and same cfg file but different shock resolutions (repository mesh give smoother result). Please check attached Mach contour generated using Paraview.; ![MachContour](https://user-images.githubusercontent.com/59632055/75407996-ce83ea80-5957-11ea-8b7c-9c1a731d7a84.png); [mesh_and_config_files.zip](https://github.com/su2code/SU2/files/4259257/mesh_and_config_files.zip). **Desktop (please complete the following information):**; - OS: Windows 7; - MPI implementation and version: MicrosoftMPI v10.1; - SU2 Version: v7.0.0 (binary executable)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/890
https://github.com/su2code/SU2/issues/890:153,Modifiability,config,configuration,153,"Generated .su2 mesh using Gmsh with same number of elements and nodes as .cgns mesh have on ""su2code.github.io/Inviscid_Wedge/"" repository and used same configuration file from the repository but results are different on using .su2 mesh from Gmsh and the one downloaded from repository. . Its weird that both the mesh are exactly same and same cfg file but different shock resolutions (repository mesh give smoother result). Please check attached Mach contour generated using Paraview.; ![MachContour](https://user-images.githubusercontent.com/59632055/75407996-ce83ea80-5957-11ea-8b7c-9c1a731d7a84.png); [mesh_and_config_files.zip](https://github.com/su2code/SU2/files/4259257/mesh_and_config_files.zip). **Desktop (please complete the following information):**; - OS: Windows 7; - MPI implementation and version: MicrosoftMPI v10.1; - SU2 Version: v7.0.0 (binary executable)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/890
https://github.com/su2code/SU2/pull/891:426,Deployability,update,updated,426,"## Related Work; Part of addressing #869 . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/891
https://github.com/su2code/SU2/pull/891:353,Testability,test,test,353,"## Related Work; Part of addressing #869 . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/891
https://github.com/su2code/SU2/issues/894:1263,Availability,down,down,1263,"for a long time. I fairly recently set up a 4 machine cluster (16 cores each) to run CFD problems on. The cluster is connected together with 1G ethernet. On SU2 v6.2 and earlier, when I ran a problem on multiple machines the time per iteration would improve up until i hit a limit where presumably network overhead exceeded the benefit of adding another machine (The limit for my set up was something like 0.5 s/iteration. . I just tried SU2 v7 on this same cluster and consistently the time per iteration gets worse when I add a second machine and double the process count. I've tried this on smaller problems (~1Mill cells) but I've also tried it on larger ones (~27Million cells). On the larger problem, one machine with 16 processes ran at 34s/iteration and 2 machines with 32 processes also ran at 34s/iteration. For that problem size, I would expect a near 2x improvement in iteration time when doubling processes. Other than this, the apples to apples comparison between SU2 v6 and v7 is otherwise very impressive where iteration times have come down even for higher CFL's. I did compile SU2 from source. I tried to compile it the same way for both v6.2 and v7 though with the different build system its a little bit harder to be certain that its all exactly the same. Given that v7 performs fine going up to 16 processes on one machine, I don't think that its a compilation issue, but admittedly I don't know all the intricacies of mpi. . Since its just multi machine that's an issue, I wonder if there's something about v7 that make it more bandwidth/latency dependent that would go away with a faster network. Or is this just a regression do to (compiler version, mpi version, a network misconfiguration...)?. Anyway I know this a bit rambling, but any help would be appreciated. I'm happy to test anything on my setup this if anyone has any ideas. **Desktop (please complete the following information):**; - OS: Ubuntu 18.04; - C++ compiler and version: g++ 7.4.0; - MPI implementation and",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/894
https://github.com/su2code/SU2/issues/894:1778,Integrability,depend,dependent,1778," machine cluster (16 cores each) to run CFD problems on. The cluster is connected together with 1G ethernet. On SU2 v6.2 and earlier, when I ran a problem on multiple machines the time per iteration would improve up until i hit a limit where presumably network overhead exceeded the benefit of adding another machine (The limit for my set up was something like 0.5 s/iteration. . I just tried SU2 v7 on this same cluster and consistently the time per iteration gets worse when I add a second machine and double the process count. I've tried this on smaller problems (~1Mill cells) but I've also tried it on larger ones (~27Million cells). On the larger problem, one machine with 16 processes ran at 34s/iteration and 2 machines with 32 processes also ran at 34s/iteration. For that problem size, I would expect a near 2x improvement in iteration time when doubling processes. Other than this, the apples to apples comparison between SU2 v6 and v7 is otherwise very impressive where iteration times have come down even for higher CFL's. I did compile SU2 from source. I tried to compile it the same way for both v6.2 and v7 though with the different build system its a little bit harder to be certain that its all exactly the same. Given that v7 performs fine going up to 16 processes on one machine, I don't think that its a compilation issue, but admittedly I don't know all the intricacies of mpi. . Since its just multi machine that's an issue, I wonder if there's something about v7 that make it more bandwidth/latency dependent that would go away with a faster network. Or is this just a regression do to (compiler version, mpi version, a network misconfiguration...)?. Anyway I know this a bit rambling, but any help would be appreciated. I'm happy to test anything on my setup this if anyone has any ideas. **Desktop (please complete the following information):**; - OS: Ubuntu 18.04; - C++ compiler and version: g++ 7.4.0; - MPI implementation and version: OpenMPI 2.1.1; - SU2 Version: 7.0.1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/894
https://github.com/su2code/SU2/issues/894:1500,Performance,perform,performs,1500," machine cluster (16 cores each) to run CFD problems on. The cluster is connected together with 1G ethernet. On SU2 v6.2 and earlier, when I ran a problem on multiple machines the time per iteration would improve up until i hit a limit where presumably network overhead exceeded the benefit of adding another machine (The limit for my set up was something like 0.5 s/iteration. . I just tried SU2 v7 on this same cluster and consistently the time per iteration gets worse when I add a second machine and double the process count. I've tried this on smaller problems (~1Mill cells) but I've also tried it on larger ones (~27Million cells). On the larger problem, one machine with 16 processes ran at 34s/iteration and 2 machines with 32 processes also ran at 34s/iteration. For that problem size, I would expect a near 2x improvement in iteration time when doubling processes. Other than this, the apples to apples comparison between SU2 v6 and v7 is otherwise very impressive where iteration times have come down even for higher CFL's. I did compile SU2 from source. I tried to compile it the same way for both v6.2 and v7 though with the different build system its a little bit harder to be certain that its all exactly the same. Given that v7 performs fine going up to 16 processes on one machine, I don't think that its a compilation issue, but admittedly I don't know all the intricacies of mpi. . Since its just multi machine that's an issue, I wonder if there's something about v7 that make it more bandwidth/latency dependent that would go away with a faster network. Or is this just a regression do to (compiler version, mpi version, a network misconfiguration...)?. Anyway I know this a bit rambling, but any help would be appreciated. I'm happy to test anything on my setup this if anyone has any ideas. **Desktop (please complete the following information):**; - OS: Ubuntu 18.04; - C++ compiler and version: g++ 7.4.0; - MPI implementation and version: OpenMPI 2.1.1; - SU2 Version: 7.0.1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/894
https://github.com/su2code/SU2/issues/894:1770,Performance,latency,latency,1770," machine cluster (16 cores each) to run CFD problems on. The cluster is connected together with 1G ethernet. On SU2 v6.2 and earlier, when I ran a problem on multiple machines the time per iteration would improve up until i hit a limit where presumably network overhead exceeded the benefit of adding another machine (The limit for my set up was something like 0.5 s/iteration. . I just tried SU2 v7 on this same cluster and consistently the time per iteration gets worse when I add a second machine and double the process count. I've tried this on smaller problems (~1Mill cells) but I've also tried it on larger ones (~27Million cells). On the larger problem, one machine with 16 processes ran at 34s/iteration and 2 machines with 32 processes also ran at 34s/iteration. For that problem size, I would expect a near 2x improvement in iteration time when doubling processes. Other than this, the apples to apples comparison between SU2 v6 and v7 is otherwise very impressive where iteration times have come down even for higher CFL's. I did compile SU2 from source. I tried to compile it the same way for both v6.2 and v7 though with the different build system its a little bit harder to be certain that its all exactly the same. Given that v7 performs fine going up to 16 processes on one machine, I don't think that its a compilation issue, but admittedly I don't know all the intricacies of mpi. . Since its just multi machine that's an issue, I wonder if there's something about v7 that make it more bandwidth/latency dependent that would go away with a faster network. Or is this just a regression do to (compiler version, mpi version, a network misconfiguration...)?. Anyway I know this a bit rambling, but any help would be appreciated. I'm happy to test anything on my setup this if anyone has any ideas. **Desktop (please complete the following information):**; - OS: Ubuntu 18.04; - C++ compiler and version: g++ 7.4.0; - MPI implementation and version: OpenMPI 2.1.1; - SU2 Version: 7.0.1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/894
https://github.com/su2code/SU2/issues/894:2013,Testability,test,test,2013," machine cluster (16 cores each) to run CFD problems on. The cluster is connected together with 1G ethernet. On SU2 v6.2 and earlier, when I ran a problem on multiple machines the time per iteration would improve up until i hit a limit where presumably network overhead exceeded the benefit of adding another machine (The limit for my set up was something like 0.5 s/iteration. . I just tried SU2 v7 on this same cluster and consistently the time per iteration gets worse when I add a second machine and double the process count. I've tried this on smaller problems (~1Mill cells) but I've also tried it on larger ones (~27Million cells). On the larger problem, one machine with 16 processes ran at 34s/iteration and 2 machines with 32 processes also ran at 34s/iteration. For that problem size, I would expect a near 2x improvement in iteration time when doubling processes. Other than this, the apples to apples comparison between SU2 v6 and v7 is otherwise very impressive where iteration times have come down even for higher CFL's. I did compile SU2 from source. I tried to compile it the same way for both v6.2 and v7 though with the different build system its a little bit harder to be certain that its all exactly the same. Given that v7 performs fine going up to 16 processes on one machine, I don't think that its a compilation issue, but admittedly I don't know all the intricacies of mpi. . Since its just multi machine that's an issue, I wonder if there's something about v7 that make it more bandwidth/latency dependent that would go away with a faster network. Or is this just a regression do to (compiler version, mpi version, a network misconfiguration...)?. Anyway I know this a bit rambling, but any help would be appreciated. I'm happy to test anything on my setup this if anyone has any ideas. **Desktop (please complete the following information):**; - OS: Ubuntu 18.04; - C++ compiler and version: g++ 7.4.0; - MPI implementation and version: OpenMPI 2.1.1; - SU2 Version: 7.0.1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/894
https://github.com/su2code/SU2/issues/894:25,Usability,clear,clear,25,"**Describe the bug**; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*. I've used SU2 off and on for a long time. I fairly recently set up a 4 machine cluster (16 cores each) to run CFD problems on. The cluster is connected together with 1G ethernet. On SU2 v6.2 and earlier, when I ran a problem on multiple machines the time per iteration would improve up until i hit a limit where presumably network overhead exceeded the benefit of adding another machine (The limit for my set up was something like 0.5 s/iteration. . I just tried SU2 v7 on this same cluster and consistently the time per iteration gets worse when I add a second machine and double the process count. I've tried this on smaller problems (~1Mill cells) but I've also tried it on larger ones (~27Million cells). On the larger problem, one machine with 16 processes ran at 34s/iteration and 2 machines with 32 processes also ran at 34s/iteration. For that problem size, I would expect a near 2x improvement in iteration time when doubling processes. Other than this, the apples to apples comparison between SU2 v6 and v7 is otherwise very impressive where iteration times have come down even for higher CFL's. I did compile SU2 from source. I tried to compile it the same way for both v6.2 and v7 though with the different build system its a little bit harder to be certain that its all exactly the same. Given that v7 performs fine going up to 16 processes on one machine, I don't think that its a compilation issue, but admittedly I don't know all the intricacies of mpi. . Since its just multi machine that's an issue, I wonder if there's something about v7 that make it more bandwidth/latency dependent that would go away with a faster network. Or is this just a regression do to (compiler version, mpi version, a network misconfiguration...)?. Anyway I know this a bit rambling, but any help would be appreciated. I",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/894
https://github.com/su2code/SU2/pull/895:516,Deployability,update,updated,516,"## Proposed Changes; #824 was closed when merging #861, this is the new WIP PR for the hybrid work. ## Related Work; #789 #824 #861. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/895
https://github.com/su2code/SU2/pull/895:443,Testability,test,test,443,"## Proposed Changes; #824 was closed when merging #861, this is the new WIP PR for the hybrid work. ## Related Work; #789 #824 #861. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/895
https://github.com/su2code/SU2/pull/897:810,Deployability,update,updated,810,"## Proposed Changes; Fixes a bug introduced in #756 for incompressible FSI cases. ## Related Work; This kind of bugs could be avoided with a strategy as suggested by @pcarruscag in #770. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/897
https://github.com/su2code/SU2/pull/897:126,Safety,avoid,avoided,126,"## Proposed Changes; Fixes a bug introduced in #756 for incompressible FSI cases. ## Related Work; This kind of bugs could be avoided with a strategy as suggested by @pcarruscag in #770. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/897
https://github.com/su2code/SU2/pull/897:737,Testability,test,test,737,"## Proposed Changes; Fixes a bug introduced in #756 for incompressible FSI cases. ## Related Work; This kind of bugs could be avoided with a strategy as suggested by @pcarruscag in #770. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/897
https://github.com/su2code/SU2/pull/897:359,Usability,guid,guide,359,"## Proposed Changes; Fixes a bug introduced in #756 for incompressible FSI cases. ## Related Work; This kind of bugs could be avoided with a strategy as suggested by @pcarruscag in #770. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/897
https://github.com/su2code/SU2/pull/898:34,Deployability,update,update,34,"## Proposed Changes; Just a small update of the `Makefile.am` to keep the older build system up to date with the new changes.; ; ## Related Work; Meson is a pretty great build system but as long as we are supporting the older build system (`make`), it needs to be kept updated. This happens fairly often and @pcarruscag brought this to my attention some time ago. Not a big deal, but also would be good practice to check PRs to make sure they still support the older build system. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/898
https://github.com/su2code/SU2/pull/898:269,Deployability,update,updated,269,"## Proposed Changes; Just a small update of the `Makefile.am` to keep the older build system up to date with the new changes.; ; ## Related Work; Meson is a pretty great build system but as long as we are supporting the older build system (`make`), it needs to be kept updated. This happens fairly often and @pcarruscag brought this to my attention some time ago. Not a big deal, but also would be good practice to check PRs to make sure they still support the older build system. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/898
https://github.com/su2code/SU2/pull/898:864,Deployability,update,updated,864,"## Proposed Changes; Just a small update of the `Makefile.am` to keep the older build system up to date with the new changes.; ; ## Related Work; Meson is a pretty great build system but as long as we are supporting the older build system (`make`), it needs to be kept updated. This happens fairly often and @pcarruscag brought this to my attention some time ago. Not a big deal, but also would be good practice to check PRs to make sure they still support the older build system. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/898
https://github.com/su2code/SU2/pull/898:791,Testability,test,test,791,"## Proposed Changes; Just a small update of the `Makefile.am` to keep the older build system up to date with the new changes.; ; ## Related Work; Meson is a pretty great build system but as long as we are supporting the older build system (`make`), it needs to be kept updated. This happens fairly often and @pcarruscag brought this to my attention some time ago. Not a big deal, but also would be good practice to check PRs to make sure they still support the older build system. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/898
https://github.com/su2code/SU2/pull/899:299,Availability,redundant,redundant,299,"## Proposed Changes. I added a separate test script file for the tutorial cases. This way they can run in parallel on github actions. Not all of the tutorial cases are included at the moment though. I am also working on a way to analyze all the test cases we have at the moment to eventually remove redundant ones. The analysis will be based on a coverage of the config options. . On a related note, we moved all the config files/meshes for the tutorials into their own repository (Tutorials). This way people don't have to clone the whole website just to get the files ... ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/899
https://github.com/su2code/SU2/pull/899:1214,Deployability,update,updated,1214,"## Proposed Changes. I added a separate test script file for the tutorial cases. This way they can run in parallel on github actions. Not all of the tutorial cases are included at the moment though. I am also working on a way to analyze all the test cases we have at the moment to eventually remove redundant ones. The analysis will be based on a coverage of the config options. . On a related note, we moved all the config files/meshes for the tutorials into their own repository (Tutorials). This way people don't have to clone the whole website just to get the files ... ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/899
https://github.com/su2code/SU2/pull/899:363,Modifiability,config,config,363,"## Proposed Changes. I added a separate test script file for the tutorial cases. This way they can run in parallel on github actions. Not all of the tutorial cases are included at the moment though. I am also working on a way to analyze all the test cases we have at the moment to eventually remove redundant ones. The analysis will be based on a coverage of the config options. . On a related note, we moved all the config files/meshes for the tutorials into their own repository (Tutorials). This way people don't have to clone the whole website just to get the files ... ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/899
https://github.com/su2code/SU2/pull/899:417,Modifiability,config,config,417,"## Proposed Changes. I added a separate test script file for the tutorial cases. This way they can run in parallel on github actions. Not all of the tutorial cases are included at the moment though. I am also working on a way to analyze all the test cases we have at the moment to eventually remove redundant ones. The analysis will be based on a coverage of the config options. . On a related note, we moved all the config files/meshes for the tutorials into their own repository (Tutorials). This way people don't have to clone the whole website just to get the files ... ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/899
https://github.com/su2code/SU2/pull/899:299,Safety,redund,redundant,299,"## Proposed Changes. I added a separate test script file for the tutorial cases. This way they can run in parallel on github actions. Not all of the tutorial cases are included at the moment though. I am also working on a way to analyze all the test cases we have at the moment to eventually remove redundant ones. The analysis will be based on a coverage of the config options. . On a related note, we moved all the config files/meshes for the tutorials into their own repository (Tutorials). This way people don't have to clone the whole website just to get the files ... ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/899
https://github.com/su2code/SU2/pull/899:40,Testability,test,test,40,"## Proposed Changes. I added a separate test script file for the tutorial cases. This way they can run in parallel on github actions. Not all of the tutorial cases are included at the moment though. I am also working on a way to analyze all the test cases we have at the moment to eventually remove redundant ones. The analysis will be based on a coverage of the config options. . On a related note, we moved all the config files/meshes for the tutorials into their own repository (Tutorials). This way people don't have to clone the whole website just to get the files ... ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/899
https://github.com/su2code/SU2/pull/899:245,Testability,test,test,245,"## Proposed Changes. I added a separate test script file for the tutorial cases. This way they can run in parallel on github actions. Not all of the tutorial cases are included at the moment though. I am also working on a way to analyze all the test cases we have at the moment to eventually remove redundant ones. The analysis will be based on a coverage of the config options. . On a related note, we moved all the config files/meshes for the tutorials into their own repository (Tutorials). This way people don't have to clone the whole website just to get the files ... ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/899
https://github.com/su2code/SU2/pull/899:1141,Testability,test,test,1141,"## Proposed Changes. I added a separate test script file for the tutorial cases. This way they can run in parallel on github actions. Not all of the tutorial cases are included at the moment though. I am also working on a way to analyze all the test cases we have at the moment to eventually remove redundant ones. The analysis will be based on a coverage of the config options. . On a related note, we moved all the config files/meshes for the tutorials into their own repository (Tutorials). This way people don't have to clone the whole website just to get the files ... ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/899
https://github.com/su2code/SU2/pull/899:763,Usability,guid,guide,763,"## Proposed Changes. I added a separate test script file for the tutorial cases. This way they can run in parallel on github actions. Not all of the tutorial cases are included at the moment though. I am also working on a way to analyze all the test cases we have at the moment to eventually remove redundant ones. The analysis will be based on a coverage of the config options. . On a related note, we moved all the config files/meshes for the tutorials into their own repository (Tutorials). This way people don't have to clone the whole website just to get the files ... ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/899
https://github.com/su2code/SU2/pull/900:923,Deployability,update,updated,923,"## Proposed Changes; Enhanced the script discrete_adjoint.py such that in unsteady simulations; - one can execute an ""only adjoint"" run. This requires the solution files of a direct run (option -a True, default is -a False).; - it supports restart solutions. Configure the restart iteration in the config-file as one would in a restartet direct simulation. The script then runs the direct iteration until final time has been reached. Then the adjoint run is performed from final time up to the restart iteration. ; . ## Related Work; None. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/900
https://github.com/su2code/SU2/pull/900:21,Modifiability,Enhance,Enhanced,21,"## Proposed Changes; Enhanced the script discrete_adjoint.py such that in unsteady simulations; - one can execute an ""only adjoint"" run. This requires the solution files of a direct run (option -a True, default is -a False).; - it supports restart solutions. Configure the restart iteration in the config-file as one would in a restartet direct simulation. The script then runs the direct iteration until final time has been reached. Then the adjoint run is performed from final time up to the restart iteration. ; . ## Related Work; None. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/900
https://github.com/su2code/SU2/pull/900:259,Modifiability,Config,Configure,259,"## Proposed Changes; Enhanced the script discrete_adjoint.py such that in unsteady simulations; - one can execute an ""only adjoint"" run. This requires the solution files of a direct run (option -a True, default is -a False).; - it supports restart solutions. Configure the restart iteration in the config-file as one would in a restartet direct simulation. The script then runs the direct iteration until final time has been reached. Then the adjoint run is performed from final time up to the restart iteration. ; . ## Related Work; None. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/900
https://github.com/su2code/SU2/pull/900:298,Modifiability,config,config-file,298,"## Proposed Changes; Enhanced the script discrete_adjoint.py such that in unsteady simulations; - one can execute an ""only adjoint"" run. This requires the solution files of a direct run (option -a True, default is -a False).; - it supports restart solutions. Configure the restart iteration in the config-file as one would in a restartet direct simulation. The script then runs the direct iteration until final time has been reached. Then the adjoint run is performed from final time up to the restart iteration. ; . ## Related Work; None. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/900
https://github.com/su2code/SU2/pull/900:458,Performance,perform,performed,458,"## Proposed Changes; Enhanced the script discrete_adjoint.py such that in unsteady simulations; - one can execute an ""only adjoint"" run. This requires the solution files of a direct run (option -a True, default is -a False).; - it supports restart solutions. Configure the restart iteration in the config-file as one would in a restartet direct simulation. The script then runs the direct iteration until final time has been reached. Then the adjoint run is performed from final time up to the restart iteration. ; . ## Related Work; None. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/900
https://github.com/su2code/SU2/pull/900:850,Testability,test,test,850,"## Proposed Changes; Enhanced the script discrete_adjoint.py such that in unsteady simulations; - one can execute an ""only adjoint"" run. This requires the solution files of a direct run (option -a True, default is -a False).; - it supports restart solutions. Configure the restart iteration in the config-file as one would in a restartet direct simulation. The script then runs the direct iteration until final time has been reached. Then the adjoint run is performed from final time up to the restart iteration. ; . ## Related Work; None. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/900
https://github.com/su2code/SU2/pull/901:27,Deployability,update,update,27,"## Proposed Changes; Minor update to the output of the elasticity adjoint solver. . ## Related Work; I'm working on some tutorials related to this for version 7.0.3. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/901
https://github.com/su2code/SU2/pull/901:789,Deployability,update,updated,789,"## Proposed Changes; Minor update to the output of the elasticity adjoint solver. . ## Related Work; I'm working on some tutorials related to this for version 7.0.3. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/901
https://github.com/su2code/SU2/pull/901:716,Testability,test,test,716,"## Proposed Changes; Minor update to the output of the elasticity adjoint solver. . ## Related Work; I'm working on some tutorials related to this for version 7.0.3. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/901
https://github.com/su2code/SU2/pull/901:338,Usability,guid,guide,338,"## Proposed Changes; Minor update to the output of the elasticity adjoint solver. . ## Related Work; I'm working on some tutorials related to this for version 7.0.3. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/901
https://github.com/su2code/SU2/pull/902:29,Deployability,integrat,integrates,29,"## Proposed Changes; This PR integrates pyBeam, a non-linear open source beam solver, into the SU2 infrastructure as a subproject, and adds support for coupled FSI simulations using SU2's flow solver and pyBeam's structural solver. Tutorials on how to use the implementation will come soon. At this point, only minor changes to the compilation and the python scripts are required. The impact to the core of the code is minor. I will be away for a few days, but please go ahead and have a look/comment/find room for improvement in the meantime :) I will reply to your comments as soon as I'm back to office. I also added a couple of test cases, but I haven't yet found the best way to hook them to our regression test system. I'll definitely look into it before the PR is merged, but due to personal time constraints, it'd be great if this could be integrated for 7.0.3. ## Related Work; This work is the result of a collaboration with @RoccoBombardieri and @crauno from the University Carlos III Madrid. . Please refer to a recent [paper at EUROGEN 2019](https://www.researchgate.net/publication/335972259_Towards_an_open-source_framework_for_aero-structural_design_and_optimization_within_the_SU2_suite) with regards to this work. Full reference will be provided here upon publication in an Springer ECCOMAS book series. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page,",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/902
https://github.com/su2code/SU2/pull/902:848,Deployability,integrat,integrated,848,"## Proposed Changes; This PR integrates pyBeam, a non-linear open source beam solver, into the SU2 infrastructure as a subproject, and adds support for coupled FSI simulations using SU2's flow solver and pyBeam's structural solver. Tutorials on how to use the implementation will come soon. At this point, only minor changes to the compilation and the python scripts are required. The impact to the core of the code is minor. I will be away for a few days, but please go ahead and have a look/comment/find room for improvement in the meantime :) I will reply to your comments as soon as I'm back to office. I also added a couple of test cases, but I haven't yet found the best way to hook them to our regression test system. I'll definitely look into it before the PR is merged, but due to personal time constraints, it'd be great if this could be integrated for 7.0.3. ## Related Work; This work is the result of a collaboration with @RoccoBombardieri and @crauno from the University Carlos III Madrid. . Please refer to a recent [paper at EUROGEN 2019](https://www.researchgate.net/publication/335972259_Towards_an_open-source_framework_for_aero-structural_design_and_optimization_within_the_SU2_suite) with regards to this work. Full reference will be provided here upon publication in an Springer ECCOMAS book series. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page,",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/902
https://github.com/su2code/SU2/pull/902:1945,Deployability,update,updated,1945,"s pyBeam, a non-linear open source beam solver, into the SU2 infrastructure as a subproject, and adds support for coupled FSI simulations using SU2's flow solver and pyBeam's structural solver. Tutorials on how to use the implementation will come soon. At this point, only minor changes to the compilation and the python scripts are required. The impact to the core of the code is minor. I will be away for a few days, but please go ahead and have a look/comment/find room for improvement in the meantime :) I will reply to your comments as soon as I'm back to office. I also added a couple of test cases, but I haven't yet found the best way to hook them to our regression test system. I'll definitely look into it before the PR is merged, but due to personal time constraints, it'd be great if this could be integrated for 7.0.3. ## Related Work; This work is the result of a collaboration with @RoccoBombardieri and @crauno from the University Carlos III Madrid. . Please refer to a recent [paper at EUROGEN 2019](https://www.researchgate.net/publication/335972259_Towards_an_open-source_framework_for_aero-structural_design_and_optimization_within_the_SU2_suite) with regards to this work. Full reference will be provided here upon publication in an Springer ECCOMAS book series. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/902
https://github.com/su2code/SU2/pull/902:29,Integrability,integrat,integrates,29,"## Proposed Changes; This PR integrates pyBeam, a non-linear open source beam solver, into the SU2 infrastructure as a subproject, and adds support for coupled FSI simulations using SU2's flow solver and pyBeam's structural solver. Tutorials on how to use the implementation will come soon. At this point, only minor changes to the compilation and the python scripts are required. The impact to the core of the code is minor. I will be away for a few days, but please go ahead and have a look/comment/find room for improvement in the meantime :) I will reply to your comments as soon as I'm back to office. I also added a couple of test cases, but I haven't yet found the best way to hook them to our regression test system. I'll definitely look into it before the PR is merged, but due to personal time constraints, it'd be great if this could be integrated for 7.0.3. ## Related Work; This work is the result of a collaboration with @RoccoBombardieri and @crauno from the University Carlos III Madrid. . Please refer to a recent [paper at EUROGEN 2019](https://www.researchgate.net/publication/335972259_Towards_an_open-source_framework_for_aero-structural_design_and_optimization_within_the_SU2_suite) with regards to this work. Full reference will be provided here upon publication in an Springer ECCOMAS book series. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page,",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/902
https://github.com/su2code/SU2/pull/902:848,Integrability,integrat,integrated,848,"## Proposed Changes; This PR integrates pyBeam, a non-linear open source beam solver, into the SU2 infrastructure as a subproject, and adds support for coupled FSI simulations using SU2's flow solver and pyBeam's structural solver. Tutorials on how to use the implementation will come soon. At this point, only minor changes to the compilation and the python scripts are required. The impact to the core of the code is minor. I will be away for a few days, but please go ahead and have a look/comment/find room for improvement in the meantime :) I will reply to your comments as soon as I'm back to office. I also added a couple of test cases, but I haven't yet found the best way to hook them to our regression test system. I'll definitely look into it before the PR is merged, but due to personal time constraints, it'd be great if this could be integrated for 7.0.3. ## Related Work; This work is the result of a collaboration with @RoccoBombardieri and @crauno from the University Carlos III Madrid. . Please refer to a recent [paper at EUROGEN 2019](https://www.researchgate.net/publication/335972259_Towards_an_open-source_framework_for_aero-structural_design_and_optimization_within_the_SU2_suite) with regards to this work. Full reference will be provided here upon publication in an Springer ECCOMAS book series. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page,",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/902
https://github.com/su2code/SU2/pull/902:632,Testability,test,test,632,"## Proposed Changes; This PR integrates pyBeam, a non-linear open source beam solver, into the SU2 infrastructure as a subproject, and adds support for coupled FSI simulations using SU2's flow solver and pyBeam's structural solver. Tutorials on how to use the implementation will come soon. At this point, only minor changes to the compilation and the python scripts are required. The impact to the core of the code is minor. I will be away for a few days, but please go ahead and have a look/comment/find room for improvement in the meantime :) I will reply to your comments as soon as I'm back to office. I also added a couple of test cases, but I haven't yet found the best way to hook them to our regression test system. I'll definitely look into it before the PR is merged, but due to personal time constraints, it'd be great if this could be integrated for 7.0.3. ## Related Work; This work is the result of a collaboration with @RoccoBombardieri and @crauno from the University Carlos III Madrid. . Please refer to a recent [paper at EUROGEN 2019](https://www.researchgate.net/publication/335972259_Towards_an_open-source_framework_for_aero-structural_design_and_optimization_within_the_SU2_suite) with regards to this work. Full reference will be provided here upon publication in an Springer ECCOMAS book series. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page,",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/902
https://github.com/su2code/SU2/pull/902:712,Testability,test,test,712,"## Proposed Changes; This PR integrates pyBeam, a non-linear open source beam solver, into the SU2 infrastructure as a subproject, and adds support for coupled FSI simulations using SU2's flow solver and pyBeam's structural solver. Tutorials on how to use the implementation will come soon. At this point, only minor changes to the compilation and the python scripts are required. The impact to the core of the code is minor. I will be away for a few days, but please go ahead and have a look/comment/find room for improvement in the meantime :) I will reply to your comments as soon as I'm back to office. I also added a couple of test cases, but I haven't yet found the best way to hook them to our regression test system. I'll definitely look into it before the PR is merged, but due to personal time constraints, it'd be great if this could be integrated for 7.0.3. ## Related Work; This work is the result of a collaboration with @RoccoBombardieri and @crauno from the University Carlos III Madrid. . Please refer to a recent [paper at EUROGEN 2019](https://www.researchgate.net/publication/335972259_Towards_an_open-source_framework_for_aero-structural_design_and_optimization_within_the_SU2_suite) with regards to this work. Full reference will be provided here upon publication in an Springer ECCOMAS book series. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page,",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/902
https://github.com/su2code/SU2/pull/902:1872,Testability,test,test,1872,"s pyBeam, a non-linear open source beam solver, into the SU2 infrastructure as a subproject, and adds support for coupled FSI simulations using SU2's flow solver and pyBeam's structural solver. Tutorials on how to use the implementation will come soon. At this point, only minor changes to the compilation and the python scripts are required. The impact to the core of the code is minor. I will be away for a few days, but please go ahead and have a look/comment/find room for improvement in the meantime :) I will reply to your comments as soon as I'm back to office. I also added a couple of test cases, but I haven't yet found the best way to hook them to our regression test system. I'll definitely look into it before the PR is merged, but due to personal time constraints, it'd be great if this could be integrated for 7.0.3. ## Related Work; This work is the result of a collaboration with @RoccoBombardieri and @crauno from the University Carlos III Madrid. . Please refer to a recent [paper at EUROGEN 2019](https://www.researchgate.net/publication/335972259_Towards_an_open-source_framework_for_aero-structural_design_and_optimization_within_the_SU2_suite) with regards to this work. Full reference will be provided here upon publication in an Springer ECCOMAS book series. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/902
https://github.com/su2code/SU2/pull/902:1494,Usability,guid,guide,1494,"s pyBeam, a non-linear open source beam solver, into the SU2 infrastructure as a subproject, and adds support for coupled FSI simulations using SU2's flow solver and pyBeam's structural solver. Tutorials on how to use the implementation will come soon. At this point, only minor changes to the compilation and the python scripts are required. The impact to the core of the code is minor. I will be away for a few days, but please go ahead and have a look/comment/find room for improvement in the meantime :) I will reply to your comments as soon as I'm back to office. I also added a couple of test cases, but I haven't yet found the best way to hook them to our regression test system. I'll definitely look into it before the PR is merged, but due to personal time constraints, it'd be great if this could be integrated for 7.0.3. ## Related Work; This work is the result of a collaboration with @RoccoBombardieri and @crauno from the University Carlos III Madrid. . Please refer to a recent [paper at EUROGEN 2019](https://www.researchgate.net/publication/335972259_Towards_an_open-source_framework_for_aero-structural_design_and_optimization_within_the_SU2_suite) with regards to this work. Full reference will be provided here upon publication in an Springer ECCOMAS book series. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/902
https://github.com/su2code/SU2/issues/903:136,Availability,error,error,136,"Hey guys, I am running into a seemingly super simple problem. I am trying to build SU2(v7.0.2) with python wrapper option, and I got an error ""Run-time dependency python3 found: NO"", but clearly python3 is installed, as shown below:. <img width=""1032"" alt=""image"" src=""https://user-images.githubusercontent.com/42105225/76112937-2e5e3f00-5fb1-11ea-817f-178f4ffd811f.png"">. other info:; - OS: Ubuntu 18.04; - C++ compiler and version: [e.g., g++ (GCC) 7.4.0]; - MPI implementation and version: [e.g., OpenMPI 2.1.1]; - SU2 Version: [e.g., v7.0.2]. Could anyone help on this? Thanks!. Best,. Aaron",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/903
https://github.com/su2code/SU2/issues/903:206,Deployability,install,installed,206,"Hey guys, I am running into a seemingly super simple problem. I am trying to build SU2(v7.0.2) with python wrapper option, and I got an error ""Run-time dependency python3 found: NO"", but clearly python3 is installed, as shown below:. <img width=""1032"" alt=""image"" src=""https://user-images.githubusercontent.com/42105225/76112937-2e5e3f00-5fb1-11ea-817f-178f4ffd811f.png"">. other info:; - OS: Ubuntu 18.04; - C++ compiler and version: [e.g., g++ (GCC) 7.4.0]; - MPI implementation and version: [e.g., OpenMPI 2.1.1]; - SU2 Version: [e.g., v7.0.2]. Could anyone help on this? Thanks!. Best,. Aaron",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/903
https://github.com/su2code/SU2/issues/903:107,Integrability,wrap,wrapper,107,"Hey guys, I am running into a seemingly super simple problem. I am trying to build SU2(v7.0.2) with python wrapper option, and I got an error ""Run-time dependency python3 found: NO"", but clearly python3 is installed, as shown below:. <img width=""1032"" alt=""image"" src=""https://user-images.githubusercontent.com/42105225/76112937-2e5e3f00-5fb1-11ea-817f-178f4ffd811f.png"">. other info:; - OS: Ubuntu 18.04; - C++ compiler and version: [e.g., g++ (GCC) 7.4.0]; - MPI implementation and version: [e.g., OpenMPI 2.1.1]; - SU2 Version: [e.g., v7.0.2]. Could anyone help on this? Thanks!. Best,. Aaron",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/903
https://github.com/su2code/SU2/issues/903:152,Integrability,depend,dependency,152,"Hey guys, I am running into a seemingly super simple problem. I am trying to build SU2(v7.0.2) with python wrapper option, and I got an error ""Run-time dependency python3 found: NO"", but clearly python3 is installed, as shown below:. <img width=""1032"" alt=""image"" src=""https://user-images.githubusercontent.com/42105225/76112937-2e5e3f00-5fb1-11ea-817f-178f4ffd811f.png"">. other info:; - OS: Ubuntu 18.04; - C++ compiler and version: [e.g., g++ (GCC) 7.4.0]; - MPI implementation and version: [e.g., OpenMPI 2.1.1]; - SU2 Version: [e.g., v7.0.2]. Could anyone help on this? Thanks!. Best,. Aaron",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/903
https://github.com/su2code/SU2/issues/903:46,Usability,simpl,simple,46,"Hey guys, I am running into a seemingly super simple problem. I am trying to build SU2(v7.0.2) with python wrapper option, and I got an error ""Run-time dependency python3 found: NO"", but clearly python3 is installed, as shown below:. <img width=""1032"" alt=""image"" src=""https://user-images.githubusercontent.com/42105225/76112937-2e5e3f00-5fb1-11ea-817f-178f4ffd811f.png"">. other info:; - OS: Ubuntu 18.04; - C++ compiler and version: [e.g., g++ (GCC) 7.4.0]; - MPI implementation and version: [e.g., OpenMPI 2.1.1]; - SU2 Version: [e.g., v7.0.2]. Could anyone help on this? Thanks!. Best,. Aaron",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/903
https://github.com/su2code/SU2/issues/903:187,Usability,clear,clearly,187,"Hey guys, I am running into a seemingly super simple problem. I am trying to build SU2(v7.0.2) with python wrapper option, and I got an error ""Run-time dependency python3 found: NO"", but clearly python3 is installed, as shown below:. <img width=""1032"" alt=""image"" src=""https://user-images.githubusercontent.com/42105225/76112937-2e5e3f00-5fb1-11ea-817f-178f4ffd811f.png"">. other info:; - OS: Ubuntu 18.04; - C++ compiler and version: [e.g., g++ (GCC) 7.4.0]; - MPI implementation and version: [e.g., OpenMPI 2.1.1]; - SU2 Version: [e.g., v7.0.2]. Could anyone help on this? Thanks!. Best,. Aaron",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/903
https://github.com/su2code/SU2/pull/904:688,Deployability,update,updated,688,"## Proposed Changes; fixed a comment bug . ## Related Work; N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/904
https://github.com/su2code/SU2/pull/904:615,Testability,test,test,615,"## Proposed Changes; fixed a comment bug . ## Related Work; N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/904
https://github.com/su2code/SU2/pull/904:237,Usability,guid,guide,237,"## Proposed Changes; fixed a comment bug . ## Related Work; N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/904
https://github.com/su2code/SU2/pull/905:704,Availability,down,download,704,"## Proposed Changes; In a previous PR the SST model implementation in the CTurbSSTSolver was corrected to use the vorticity magnitude to calculate the turbulent viscosity (mu_T). But this change was not copied in the relevant numerics class where mu_T is used to calculate production terms. This is probably going to break all the SST related regression tests, so I will ensure convergence of those cases and update regression values. ; ; ## Related Work; A relevant discussion to have here is whether to update the SST turbulence model according to a 2003 paper by Menter (author of the SST model): [Ten years of industrial experience with the SST turbulence model](http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.460.2814&rep=rep1&type=pdf). It involves tiny changes to coefficients, production limits, and uses strain magnitude instead of the vorticity magnitude to calculate mu_T. The last point means reversing the change that this PR is making. But currently the model is just inconsistent and needs to be corrected. . The changes are supposed to make the model more stable, which has been a cause for concern with the SST model before. Not sure if people have thoughts about altering the original turbulence model. . ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/905
https://github.com/su2code/SU2/pull/905:409,Deployability,update,update,409,"## Proposed Changes; In a previous PR the SST model implementation in the CTurbSSTSolver was corrected to use the vorticity magnitude to calculate the turbulent viscosity (mu_T). But this change was not copied in the relevant numerics class where mu_T is used to calculate production terms. This is probably going to break all the SST related regression tests, so I will ensure convergence of those cases and update regression values. ; ; ## Related Work; A relevant discussion to have here is whether to update the SST turbulence model according to a 2003 paper by Menter (author of the SST model): [Ten years of industrial experience with the SST turbulence model](http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.460.2814&rep=rep1&type=pdf). It involves tiny changes to coefficients, production limits, and uses strain magnitude instead of the vorticity magnitude to calculate mu_T. The last point means reversing the change that this PR is making. But currently the model is just inconsistent and needs to be corrected. . The changes are supposed to make the model more stable, which has been a cause for concern with the SST model before. Not sure if people have thoughts about altering the original turbulence model. . ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/905
https://github.com/su2code/SU2/pull/905:505,Deployability,update,update,505,"## Proposed Changes; In a previous PR the SST model implementation in the CTurbSSTSolver was corrected to use the vorticity magnitude to calculate the turbulent viscosity (mu_T). But this change was not copied in the relevant numerics class where mu_T is used to calculate production terms. This is probably going to break all the SST related regression tests, so I will ensure convergence of those cases and update regression values. ; ; ## Related Work; A relevant discussion to have here is whether to update the SST turbulence model according to a 2003 paper by Menter (author of the SST model): [Ten years of industrial experience with the SST turbulence model](http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.460.2814&rep=rep1&type=pdf). It involves tiny changes to coefficients, production limits, and uses strain magnitude instead of the vorticity magnitude to calculate mu_T. The last point means reversing the change that this PR is making. But currently the model is just inconsistent and needs to be corrected. . The changes are supposed to make the model more stable, which has been a cause for concern with the SST model before. Not sure if people have thoughts about altering the original turbulence model. . ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/905
https://github.com/su2code/SU2/pull/905:1616,Deployability,update,updated,1616,"## Proposed Changes; In a previous PR the SST model implementation in the CTurbSSTSolver was corrected to use the vorticity magnitude to calculate the turbulent viscosity (mu_T). But this change was not copied in the relevant numerics class where mu_T is used to calculate production terms. This is probably going to break all the SST related regression tests, so I will ensure convergence of those cases and update regression values. ; ; ## Related Work; A relevant discussion to have here is whether to update the SST turbulence model according to a 2003 paper by Menter (author of the SST model): [Ten years of industrial experience with the SST turbulence model](http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.460.2814&rep=rep1&type=pdf). It involves tiny changes to coefficients, production limits, and uses strain magnitude instead of the vorticity magnitude to calculate mu_T. The last point means reversing the change that this PR is making. But currently the model is just inconsistent and needs to be corrected. . The changes are supposed to make the model more stable, which has been a cause for concern with the SST model before. Not sure if people have thoughts about altering the original turbulence model. . ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/905
https://github.com/su2code/SU2/pull/905:354,Testability,test,tests,354,"## Proposed Changes; In a previous PR the SST model implementation in the CTurbSSTSolver was corrected to use the vorticity magnitude to calculate the turbulent viscosity (mu_T). But this change was not copied in the relevant numerics class where mu_T is used to calculate production terms. This is probably going to break all the SST related regression tests, so I will ensure convergence of those cases and update regression values. ; ; ## Related Work; A relevant discussion to have here is whether to update the SST turbulence model according to a 2003 paper by Menter (author of the SST model): [Ten years of industrial experience with the SST turbulence model](http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.460.2814&rep=rep1&type=pdf). It involves tiny changes to coefficients, production limits, and uses strain magnitude instead of the vorticity magnitude to calculate mu_T. The last point means reversing the change that this PR is making. But currently the model is just inconsistent and needs to be corrected. . The changes are supposed to make the model more stable, which has been a cause for concern with the SST model before. Not sure if people have thoughts about altering the original turbulence model. . ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/905
https://github.com/su2code/SU2/pull/905:1543,Testability,test,test,1543,"## Proposed Changes; In a previous PR the SST model implementation in the CTurbSSTSolver was corrected to use the vorticity magnitude to calculate the turbulent viscosity (mu_T). But this change was not copied in the relevant numerics class where mu_T is used to calculate production terms. This is probably going to break all the SST related regression tests, so I will ensure convergence of those cases and update regression values. ; ; ## Related Work; A relevant discussion to have here is whether to update the SST turbulence model according to a 2003 paper by Menter (author of the SST model): [Ten years of industrial experience with the SST turbulence model](http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.460.2814&rep=rep1&type=pdf). It involves tiny changes to coefficients, production limits, and uses strain magnitude instead of the vorticity magnitude to calculate mu_T. The last point means reversing the change that this PR is making. But currently the model is just inconsistent and needs to be corrected. . The changes are supposed to make the model more stable, which has been a cause for concern with the SST model before. Not sure if people have thoughts about altering the original turbulence model. . ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/905
https://github.com/su2code/SU2/issues/906:95,Availability,error,error,95,"**Description:**; I am running some nozzle simulations and once in a while I got the following error when the software is writing the restart file:. ```; Error in ""virtual void CSU2BinaryFileWriter::Write_Data()"":; -------------------------------------------------------------------------; Unable to open SU2 restart file restart_flow.dat; ```. **To Reproduce**; I am attaching a config file and mesh that recreates the problem.; [Config_and_mesh.zip](https://github.com/su2code/SU2/files/4304107/Config_and_mesh.zip). Command used: `mpiexec -n 4 SU2_CFD config.cfg`. I run this simulation four times, two of them worked properly and the other two had the error (one of them in iteration 1000 and the other 3000). **Desktop:**; - OS: Windows 10 x64; - MPI implementation and version: Microsoft MPI v10.1.12498.18; - SU2 Version: v7.0.2 (win64-mpi) and v7.0.0 (win64-mpi).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/906
https://github.com/su2code/SU2/issues/906:154,Availability,Error,Error,154,"**Description:**; I am running some nozzle simulations and once in a while I got the following error when the software is writing the restart file:. ```; Error in ""virtual void CSU2BinaryFileWriter::Write_Data()"":; -------------------------------------------------------------------------; Unable to open SU2 restart file restart_flow.dat; ```. **To Reproduce**; I am attaching a config file and mesh that recreates the problem.; [Config_and_mesh.zip](https://github.com/su2code/SU2/files/4304107/Config_and_mesh.zip). Command used: `mpiexec -n 4 SU2_CFD config.cfg`. I run this simulation four times, two of them worked properly and the other two had the error (one of them in iteration 1000 and the other 3000). **Desktop:**; - OS: Windows 10 x64; - MPI implementation and version: Microsoft MPI v10.1.12498.18; - SU2 Version: v7.0.2 (win64-mpi) and v7.0.0 (win64-mpi).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/906
https://github.com/su2code/SU2/issues/906:656,Availability,error,error,656,"**Description:**; I am running some nozzle simulations and once in a while I got the following error when the software is writing the restart file:. ```; Error in ""virtual void CSU2BinaryFileWriter::Write_Data()"":; -------------------------------------------------------------------------; Unable to open SU2 restart file restart_flow.dat; ```. **To Reproduce**; I am attaching a config file and mesh that recreates the problem.; [Config_and_mesh.zip](https://github.com/su2code/SU2/files/4304107/Config_and_mesh.zip). Command used: `mpiexec -n 4 SU2_CFD config.cfg`. I run this simulation four times, two of them worked properly and the other two had the error (one of them in iteration 1000 and the other 3000). **Desktop:**; - OS: Windows 10 x64; - MPI implementation and version: Microsoft MPI v10.1.12498.18; - SU2 Version: v7.0.2 (win64-mpi) and v7.0.0 (win64-mpi).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/906
https://github.com/su2code/SU2/issues/906:380,Modifiability,config,config,380,"**Description:**; I am running some nozzle simulations and once in a while I got the following error when the software is writing the restart file:. ```; Error in ""virtual void CSU2BinaryFileWriter::Write_Data()"":; -------------------------------------------------------------------------; Unable to open SU2 restart file restart_flow.dat; ```. **To Reproduce**; I am attaching a config file and mesh that recreates the problem.; [Config_and_mesh.zip](https://github.com/su2code/SU2/files/4304107/Config_and_mesh.zip). Command used: `mpiexec -n 4 SU2_CFD config.cfg`. I run this simulation four times, two of them worked properly and the other two had the error (one of them in iteration 1000 and the other 3000). **Desktop:**; - OS: Windows 10 x64; - MPI implementation and version: Microsoft MPI v10.1.12498.18; - SU2 Version: v7.0.2 (win64-mpi) and v7.0.0 (win64-mpi).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/906
https://github.com/su2code/SU2/issues/906:555,Modifiability,config,config,555,"**Description:**; I am running some nozzle simulations and once in a while I got the following error when the software is writing the restart file:. ```; Error in ""virtual void CSU2BinaryFileWriter::Write_Data()"":; -------------------------------------------------------------------------; Unable to open SU2 restart file restart_flow.dat; ```. **To Reproduce**; I am attaching a config file and mesh that recreates the problem.; [Config_and_mesh.zip](https://github.com/su2code/SU2/files/4304107/Config_and_mesh.zip). Command used: `mpiexec -n 4 SU2_CFD config.cfg`. I run this simulation four times, two of them worked properly and the other two had the error (one of them in iteration 1000 and the other 3000). **Desktop:**; - OS: Windows 10 x64; - MPI implementation and version: Microsoft MPI v10.1.12498.18; - SU2 Version: v7.0.2 (win64-mpi) and v7.0.0 (win64-mpi).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/906
https://github.com/su2code/SU2/issues/907:167,Integrability,Interface,Interface,167,"Hi, . I've got an issue where on starting an SU2 6.2.0 Falcon case, the preprocessing steps run but then the output gets stuck at:. ```; ---------------------- Python Interface Preprocessing ---------------------; Setting customized boundary conditions for zone 0; ```. - and remains frozen there until I kill the job. . It seems to have happened for only 3 out of nearly 400 successful cases. They are all similar, running Euler at Mach 1.7, on 40 cores. They all have similar simple body, farfield, and and symmetry conditions. I'm not sure of the best way to diagnose this, so any guidance would be appreciated. Many thanks and kind regards, ; Tim",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/907
https://github.com/su2code/SU2/issues/907:478,Usability,simpl,simple,478,"Hi, . I've got an issue where on starting an SU2 6.2.0 Falcon case, the preprocessing steps run but then the output gets stuck at:. ```; ---------------------- Python Interface Preprocessing ---------------------; Setting customized boundary conditions for zone 0; ```. - and remains frozen there until I kill the job. . It seems to have happened for only 3 out of nearly 400 successful cases. They are all similar, running Euler at Mach 1.7, on 40 cores. They all have similar simple body, farfield, and and symmetry conditions. I'm not sure of the best way to diagnose this, so any guidance would be appreciated. Many thanks and kind regards, ; Tim",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/907
https://github.com/su2code/SU2/issues/907:584,Usability,guid,guidance,584,"Hi, . I've got an issue where on starting an SU2 6.2.0 Falcon case, the preprocessing steps run but then the output gets stuck at:. ```; ---------------------- Python Interface Preprocessing ---------------------; Setting customized boundary conditions for zone 0; ```. - and remains frozen there until I kill the job. . It seems to have happened for only 3 out of nearly 400 successful cases. They are all similar, running Euler at Mach 1.7, on 40 cores. They all have similar simple body, farfield, and and symmetry conditions. I'm not sure of the best way to diagnose this, so any guidance would be appreciated. Many thanks and kind regards, ; Tim",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/907
https://github.com/su2code/SU2/pull/908:1712,Deployability,update,updated,1712,"## Proposed Changes; The hybrid parallel implementation uses grid coloring (edge and element) to avoid race conditions when building the residual vector and Jacobian matrix.; Depending on grid size, type, and ordering, it may be difficult to find a good coloring, i.e. providing locality and enough parallelism (all threads getting almost the same number of work chunks to work on per color). This PR extends the use of the ""reducer strategy"" to fine grids (introduced and described in #861 for coarse grids, which before #894 I thought would be the only problematic scenarios) as a fallback strategy that is automatically selected when the coloring efficiency (highlighted below) drops below a threshold value. The reducer strategy can be forced by setting EDGE_COLORING_GROUP_SIZE to 0 (for some cases it seems to give better performance, contrary to the initial assessment from #789).; For element loops (CFEASolver and CMeshSolver, modified in #843) an automatic fallback was also introduced, but using ""locks"" (explained below) as a ""reducer strategy"" would use too much memory, and element loops are more compute intensive (and therefore less affected by the overhead of using these locks). ## Related Work; Part of #789, namely:; Improves scaling of the work from #861 #843 (should help with #894); Fixes a bug from #830. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/908
https://github.com/su2code/SU2/pull/908:425,Energy Efficiency,reduce,reducer,425,"## Proposed Changes; The hybrid parallel implementation uses grid coloring (edge and element) to avoid race conditions when building the residual vector and Jacobian matrix.; Depending on grid size, type, and ordering, it may be difficult to find a good coloring, i.e. providing locality and enough parallelism (all threads getting almost the same number of work chunks to work on per color). This PR extends the use of the ""reducer strategy"" to fine grids (introduced and described in #861 for coarse grids, which before #894 I thought would be the only problematic scenarios) as a fallback strategy that is automatically selected when the coloring efficiency (highlighted below) drops below a threshold value. The reducer strategy can be forced by setting EDGE_COLORING_GROUP_SIZE to 0 (for some cases it seems to give better performance, contrary to the initial assessment from #789).; For element loops (CFEASolver and CMeshSolver, modified in #843) an automatic fallback was also introduced, but using ""locks"" (explained below) as a ""reducer strategy"" would use too much memory, and element loops are more compute intensive (and therefore less affected by the overhead of using these locks). ## Related Work; Part of #789, namely:; Improves scaling of the work from #861 #843 (should help with #894); Fixes a bug from #830. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/908
https://github.com/su2code/SU2/pull/908:716,Energy Efficiency,reduce,reducer,716,"## Proposed Changes; The hybrid parallel implementation uses grid coloring (edge and element) to avoid race conditions when building the residual vector and Jacobian matrix.; Depending on grid size, type, and ordering, it may be difficult to find a good coloring, i.e. providing locality and enough parallelism (all threads getting almost the same number of work chunks to work on per color). This PR extends the use of the ""reducer strategy"" to fine grids (introduced and described in #861 for coarse grids, which before #894 I thought would be the only problematic scenarios) as a fallback strategy that is automatically selected when the coloring efficiency (highlighted below) drops below a threshold value. The reducer strategy can be forced by setting EDGE_COLORING_GROUP_SIZE to 0 (for some cases it seems to give better performance, contrary to the initial assessment from #789).; For element loops (CFEASolver and CMeshSolver, modified in #843) an automatic fallback was also introduced, but using ""locks"" (explained below) as a ""reducer strategy"" would use too much memory, and element loops are more compute intensive (and therefore less affected by the overhead of using these locks). ## Related Work; Part of #789, namely:; Improves scaling of the work from #861 #843 (should help with #894); Fixes a bug from #830. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/908
https://github.com/su2code/SU2/pull/908:1039,Energy Efficiency,reduce,reducer,1039,"## Proposed Changes; The hybrid parallel implementation uses grid coloring (edge and element) to avoid race conditions when building the residual vector and Jacobian matrix.; Depending on grid size, type, and ordering, it may be difficult to find a good coloring, i.e. providing locality and enough parallelism (all threads getting almost the same number of work chunks to work on per color). This PR extends the use of the ""reducer strategy"" to fine grids (introduced and described in #861 for coarse grids, which before #894 I thought would be the only problematic scenarios) as a fallback strategy that is automatically selected when the coloring efficiency (highlighted below) drops below a threshold value. The reducer strategy can be forced by setting EDGE_COLORING_GROUP_SIZE to 0 (for some cases it seems to give better performance, contrary to the initial assessment from #789).; For element loops (CFEASolver and CMeshSolver, modified in #843) an automatic fallback was also introduced, but using ""locks"" (explained below) as a ""reducer strategy"" would use too much memory, and element loops are more compute intensive (and therefore less affected by the overhead of using these locks). ## Related Work; Part of #789, namely:; Improves scaling of the work from #861 #843 (should help with #894); Fixes a bug from #830. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/908
https://github.com/su2code/SU2/pull/908:175,Integrability,Depend,Depending,175,"## Proposed Changes; The hybrid parallel implementation uses grid coloring (edge and element) to avoid race conditions when building the residual vector and Jacobian matrix.; Depending on grid size, type, and ordering, it may be difficult to find a good coloring, i.e. providing locality and enough parallelism (all threads getting almost the same number of work chunks to work on per color). This PR extends the use of the ""reducer strategy"" to fine grids (introduced and described in #861 for coarse grids, which before #894 I thought would be the only problematic scenarios) as a fallback strategy that is automatically selected when the coloring efficiency (highlighted below) drops below a threshold value. The reducer strategy can be forced by setting EDGE_COLORING_GROUP_SIZE to 0 (for some cases it seems to give better performance, contrary to the initial assessment from #789).; For element loops (CFEASolver and CMeshSolver, modified in #843) an automatic fallback was also introduced, but using ""locks"" (explained below) as a ""reducer strategy"" would use too much memory, and element loops are more compute intensive (and therefore less affected by the overhead of using these locks). ## Related Work; Part of #789, namely:; Improves scaling of the work from #861 #843 (should help with #894); Fixes a bug from #830. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/908
https://github.com/su2code/SU2/pull/908:401,Modifiability,extend,extends,401,"## Proposed Changes; The hybrid parallel implementation uses grid coloring (edge and element) to avoid race conditions when building the residual vector and Jacobian matrix.; Depending on grid size, type, and ordering, it may be difficult to find a good coloring, i.e. providing locality and enough parallelism (all threads getting almost the same number of work chunks to work on per color). This PR extends the use of the ""reducer strategy"" to fine grids (introduced and described in #861 for coarse grids, which before #894 I thought would be the only problematic scenarios) as a fallback strategy that is automatically selected when the coloring efficiency (highlighted below) drops below a threshold value. The reducer strategy can be forced by setting EDGE_COLORING_GROUP_SIZE to 0 (for some cases it seems to give better performance, contrary to the initial assessment from #789).; For element loops (CFEASolver and CMeshSolver, modified in #843) an automatic fallback was also introduced, but using ""locks"" (explained below) as a ""reducer strategy"" would use too much memory, and element loops are more compute intensive (and therefore less affected by the overhead of using these locks). ## Related Work; Part of #789, namely:; Improves scaling of the work from #861 #843 (should help with #894); Fixes a bug from #830. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/908
https://github.com/su2code/SU2/pull/908:103,Performance,race condition,race conditions,103,"## Proposed Changes; The hybrid parallel implementation uses grid coloring (edge and element) to avoid race conditions when building the residual vector and Jacobian matrix.; Depending on grid size, type, and ordering, it may be difficult to find a good coloring, i.e. providing locality and enough parallelism (all threads getting almost the same number of work chunks to work on per color). This PR extends the use of the ""reducer strategy"" to fine grids (introduced and described in #861 for coarse grids, which before #894 I thought would be the only problematic scenarios) as a fallback strategy that is automatically selected when the coloring efficiency (highlighted below) drops below a threshold value. The reducer strategy can be forced by setting EDGE_COLORING_GROUP_SIZE to 0 (for some cases it seems to give better performance, contrary to the initial assessment from #789).; For element loops (CFEASolver and CMeshSolver, modified in #843) an automatic fallback was also introduced, but using ""locks"" (explained below) as a ""reducer strategy"" would use too much memory, and element loops are more compute intensive (and therefore less affected by the overhead of using these locks). ## Related Work; Part of #789, namely:; Improves scaling of the work from #861 #843 (should help with #894); Fixes a bug from #830. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/908
https://github.com/su2code/SU2/pull/908:828,Performance,perform,performance,828,"## Proposed Changes; The hybrid parallel implementation uses grid coloring (edge and element) to avoid race conditions when building the residual vector and Jacobian matrix.; Depending on grid size, type, and ordering, it may be difficult to find a good coloring, i.e. providing locality and enough parallelism (all threads getting almost the same number of work chunks to work on per color). This PR extends the use of the ""reducer strategy"" to fine grids (introduced and described in #861 for coarse grids, which before #894 I thought would be the only problematic scenarios) as a fallback strategy that is automatically selected when the coloring efficiency (highlighted below) drops below a threshold value. The reducer strategy can be forced by setting EDGE_COLORING_GROUP_SIZE to 0 (for some cases it seems to give better performance, contrary to the initial assessment from #789).; For element loops (CFEASolver and CMeshSolver, modified in #843) an automatic fallback was also introduced, but using ""locks"" (explained below) as a ""reducer strategy"" would use too much memory, and element loops are more compute intensive (and therefore less affected by the overhead of using these locks). ## Related Work; Part of #789, namely:; Improves scaling of the work from #861 #843 (should help with #894); Fixes a bug from #830. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/908
https://github.com/su2code/SU2/pull/908:97,Safety,avoid,avoid,97,"## Proposed Changes; The hybrid parallel implementation uses grid coloring (edge and element) to avoid race conditions when building the residual vector and Jacobian matrix.; Depending on grid size, type, and ordering, it may be difficult to find a good coloring, i.e. providing locality and enough parallelism (all threads getting almost the same number of work chunks to work on per color). This PR extends the use of the ""reducer strategy"" to fine grids (introduced and described in #861 for coarse grids, which before #894 I thought would be the only problematic scenarios) as a fallback strategy that is automatically selected when the coloring efficiency (highlighted below) drops below a threshold value. The reducer strategy can be forced by setting EDGE_COLORING_GROUP_SIZE to 0 (for some cases it seems to give better performance, contrary to the initial assessment from #789).; For element loops (CFEASolver and CMeshSolver, modified in #843) an automatic fallback was also introduced, but using ""locks"" (explained below) as a ""reducer strategy"" would use too much memory, and element loops are more compute intensive (and therefore less affected by the overhead of using these locks). ## Related Work; Part of #789, namely:; Improves scaling of the work from #861 #843 (should help with #894); Fixes a bug from #830. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/908
https://github.com/su2code/SU2/pull/908:1639,Testability,test,test,1639,"## Proposed Changes; The hybrid parallel implementation uses grid coloring (edge and element) to avoid race conditions when building the residual vector and Jacobian matrix.; Depending on grid size, type, and ordering, it may be difficult to find a good coloring, i.e. providing locality and enough parallelism (all threads getting almost the same number of work chunks to work on per color). This PR extends the use of the ""reducer strategy"" to fine grids (introduced and described in #861 for coarse grids, which before #894 I thought would be the only problematic scenarios) as a fallback strategy that is automatically selected when the coloring efficiency (highlighted below) drops below a threshold value. The reducer strategy can be forced by setting EDGE_COLORING_GROUP_SIZE to 0 (for some cases it seems to give better performance, contrary to the initial assessment from #789).; For element loops (CFEASolver and CMeshSolver, modified in #843) an automatic fallback was also introduced, but using ""locks"" (explained below) as a ""reducer strategy"" would use too much memory, and element loops are more compute intensive (and therefore less affected by the overhead of using these locks). ## Related Work; Part of #789, namely:; Improves scaling of the work from #861 #843 (should help with #894); Fixes a bug from #830. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/908
https://github.com/su2code/SU2/issues/909:751,Modifiability,config,config,751,"Dear SU2 Team Members,. I've been trying to optimize bluff bodies geometries with the shape_optimization script, but I wasn't able to restart any optimization with restart files from previous simulations. This causes too much computational time to be expended to reach a periodic condition of the flow (starting from freestream). Is it possible to implement this kind of restart for unsteady flow optimization? I've looked for answers at the forúm, doing test simulations and at the tutorial's commentary section, but this feature seems to not exist. During my tests, I found out that the script doesn't recognize restart files with dual-time step indexes. When the script doesn't find a restart file, it starts from freestream condition, setting the config file inside the first direct simulation folder with the command ""RESTART_SOL=NO"". This problem can be bypassed by making a copy of one restart file and renaming it without its index. Then the script runs until it reaches other index problems with the output files. This also can be solved by renaming files while the script goes, but it still crashes at the end of the first design cycle.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/909
https://github.com/su2code/SU2/issues/909:44,Performance,optimiz,optimize,44,"Dear SU2 Team Members,. I've been trying to optimize bluff bodies geometries with the shape_optimization script, but I wasn't able to restart any optimization with restart files from previous simulations. This causes too much computational time to be expended to reach a periodic condition of the flow (starting from freestream). Is it possible to implement this kind of restart for unsteady flow optimization? I've looked for answers at the forúm, doing test simulations and at the tutorial's commentary section, but this feature seems to not exist. During my tests, I found out that the script doesn't recognize restart files with dual-time step indexes. When the script doesn't find a restart file, it starts from freestream condition, setting the config file inside the first direct simulation folder with the command ""RESTART_SOL=NO"". This problem can be bypassed by making a copy of one restart file and renaming it without its index. Then the script runs until it reaches other index problems with the output files. This also can be solved by renaming files while the script goes, but it still crashes at the end of the first design cycle.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/909
https://github.com/su2code/SU2/issues/909:146,Performance,optimiz,optimization,146,"Dear SU2 Team Members,. I've been trying to optimize bluff bodies geometries with the shape_optimization script, but I wasn't able to restart any optimization with restart files from previous simulations. This causes too much computational time to be expended to reach a periodic condition of the flow (starting from freestream). Is it possible to implement this kind of restart for unsteady flow optimization? I've looked for answers at the forúm, doing test simulations and at the tutorial's commentary section, but this feature seems to not exist. During my tests, I found out that the script doesn't recognize restart files with dual-time step indexes. When the script doesn't find a restart file, it starts from freestream condition, setting the config file inside the first direct simulation folder with the command ""RESTART_SOL=NO"". This problem can be bypassed by making a copy of one restart file and renaming it without its index. Then the script runs until it reaches other index problems with the output files. This also can be solved by renaming files while the script goes, but it still crashes at the end of the first design cycle.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/909
https://github.com/su2code/SU2/issues/909:397,Performance,optimiz,optimization,397,"Dear SU2 Team Members,. I've been trying to optimize bluff bodies geometries with the shape_optimization script, but I wasn't able to restart any optimization with restart files from previous simulations. This causes too much computational time to be expended to reach a periodic condition of the flow (starting from freestream). Is it possible to implement this kind of restart for unsteady flow optimization? I've looked for answers at the forúm, doing test simulations and at the tutorial's commentary section, but this feature seems to not exist. During my tests, I found out that the script doesn't recognize restart files with dual-time step indexes. When the script doesn't find a restart file, it starts from freestream condition, setting the config file inside the first direct simulation folder with the command ""RESTART_SOL=NO"". This problem can be bypassed by making a copy of one restart file and renaming it without its index. Then the script runs until it reaches other index problems with the output files. This also can be solved by renaming files while the script goes, but it still crashes at the end of the first design cycle.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/909
https://github.com/su2code/SU2/issues/909:455,Testability,test,test,455,"Dear SU2 Team Members,. I've been trying to optimize bluff bodies geometries with the shape_optimization script, but I wasn't able to restart any optimization with restart files from previous simulations. This causes too much computational time to be expended to reach a periodic condition of the flow (starting from freestream). Is it possible to implement this kind of restart for unsteady flow optimization? I've looked for answers at the forúm, doing test simulations and at the tutorial's commentary section, but this feature seems to not exist. During my tests, I found out that the script doesn't recognize restart files with dual-time step indexes. When the script doesn't find a restart file, it starts from freestream condition, setting the config file inside the first direct simulation folder with the command ""RESTART_SOL=NO"". This problem can be bypassed by making a copy of one restart file and renaming it without its index. Then the script runs until it reaches other index problems with the output files. This also can be solved by renaming files while the script goes, but it still crashes at the end of the first design cycle.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/909
https://github.com/su2code/SU2/issues/909:561,Testability,test,tests,561,"Dear SU2 Team Members,. I've been trying to optimize bluff bodies geometries with the shape_optimization script, but I wasn't able to restart any optimization with restart files from previous simulations. This causes too much computational time to be expended to reach a periodic condition of the flow (starting from freestream). Is it possible to implement this kind of restart for unsteady flow optimization? I've looked for answers at the forúm, doing test simulations and at the tutorial's commentary section, but this feature seems to not exist. During my tests, I found out that the script doesn't recognize restart files with dual-time step indexes. When the script doesn't find a restart file, it starts from freestream condition, setting the config file inside the first direct simulation folder with the command ""RESTART_SOL=NO"". This problem can be bypassed by making a copy of one restart file and renaming it without its index. Then the script runs until it reaches other index problems with the output files. This also can be solved by renaming files while the script goes, but it still crashes at the end of the first design cycle.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/909
https://github.com/su2code/SU2/issues/910:325,Deployability,install,installation,325,"Hi; Might be a specific problem: Meson and Ninja work well when your system; is connected to the web network. ; However, importing the software to a disconnected network, that also lacks python3, ; make them unavailable. Would you think that it can be possible to conserve the previously configure procedure as an additional installation script? less efficient but always working...; Trying to use the configure from older versions works, but then Make aborts missing; some modules, like CHeatSolverFVM.cpp. Thanks,; Eran",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/910
https://github.com/su2code/SU2/issues/910:351,Energy Efficiency,efficient,efficient,351,"Hi; Might be a specific problem: Meson and Ninja work well when your system; is connected to the web network. ; However, importing the software to a disconnected network, that also lacks python3, ; make them unavailable. Would you think that it can be possible to conserve the previously configure procedure as an additional installation script? less efficient but always working...; Trying to use the configure from older versions works, but then Make aborts missing; some modules, like CHeatSolverFVM.cpp. Thanks,; Eran",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/910
https://github.com/su2code/SU2/issues/910:288,Modifiability,config,configure,288,"Hi; Might be a specific problem: Meson and Ninja work well when your system; is connected to the web network. ; However, importing the software to a disconnected network, that also lacks python3, ; make them unavailable. Would you think that it can be possible to conserve the previously configure procedure as an additional installation script? less efficient but always working...; Trying to use the configure from older versions works, but then Make aborts missing; some modules, like CHeatSolverFVM.cpp. Thanks,; Eran",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/910
https://github.com/su2code/SU2/issues/910:402,Modifiability,config,configure,402,"Hi; Might be a specific problem: Meson and Ninja work well when your system; is connected to the web network. ; However, importing the software to a disconnected network, that also lacks python3, ; make them unavailable. Would you think that it can be possible to conserve the previously configure procedure as an additional installation script? less efficient but always working...; Trying to use the configure from older versions works, but then Make aborts missing; some modules, like CHeatSolverFVM.cpp. Thanks,; Eran",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/910
https://github.com/su2code/SU2/issues/910:453,Safety,abort,aborts,453,"Hi; Might be a specific problem: Meson and Ninja work well when your system; is connected to the web network. ; However, importing the software to a disconnected network, that also lacks python3, ; make them unavailable. Would you think that it can be possible to conserve the previously configure procedure as an additional installation script? less efficient but always working...; Trying to use the configure from older versions works, but then Make aborts missing; some modules, like CHeatSolverFVM.cpp. Thanks,; Eran",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/910
https://github.com/su2code/SU2/issues/911:104,Availability,avail,available,104,"Ninja gets built even when it's already installed, this should not happen, meson should use the already available (in this case system installed) ninja. ```; ~/s/t/SU2:master ◼ ❯ ninja --version; 1.8.2; ~/s/t/SU2:master ◼ ❯ which ninja; /usr/bin/ninja; ~/s/t/SU2:master ❯ ./meson.py build; Initialize submodule /home/simon/src/tmp/SU2/externals/codi using git ... ; Submodule 'externals/codi' (https://github.com/scicompkl/CoDiPack) registered for path 'externals/codi'; Cloning into '/home/simon/src/tmp/SU2/externals/codi'...; Submodule path 'externals/codi': checked out '501dcf0305df147481630f20ce37c2e624fb351f'; Initialize submodule /home/simon/src/tmp/SU2/externals/medi using git ... ; Submodule 'externals/medi' (https://github.com/SciCompKL/MeDiPack) registered for path 'externals/medi'; Cloning into '/home/simon/src/tmp/SU2/externals/medi'...; Submodule path 'externals/medi': checked out 'edde14f9ac4026b72b1e130f61c0a78e8652afa5'; Initialize submodule /home/simon/src/tmp/SU2/externals/meson using git ... ; Submodule 'externals/meson' (https://github.com/mesonbuild/meson) registered for path 'externals/meson'; Cloning into '/home/simon/src/tmp/SU2/externals/meson'...; Submodule path 'externals/meson': checked out '0435691e83fb7172e2a9635d2eb32d5521089916'; Initialize submodule /home/simon/src/tmp/SU2/externals/ninja using git ... ; Submodule 'externals/ninja' (https://github.com/ninja-build/ninja) registered for path 'externals/ninja'; Cloning into '/home/simon/src/tmp/SU2/externals/ninja'...; Submodule path 'externals/ninja': checked out '2d15b04e411229cb902332957281622119025e77'; ninja executable not found. Building ...; bootstrapping ninja...; wrote build.ninja.; bootstrap complete. rebuilding...; [31/31] LINK ninja; ```. **Desktop (please complete the following information):**; - OS: Linux (gentoo)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/911
https://github.com/su2code/SU2/issues/911:40,Deployability,install,installed,40,"Ninja gets built even when it's already installed, this should not happen, meson should use the already available (in this case system installed) ninja. ```; ~/s/t/SU2:master ◼ ❯ ninja --version; 1.8.2; ~/s/t/SU2:master ◼ ❯ which ninja; /usr/bin/ninja; ~/s/t/SU2:master ❯ ./meson.py build; Initialize submodule /home/simon/src/tmp/SU2/externals/codi using git ... ; Submodule 'externals/codi' (https://github.com/scicompkl/CoDiPack) registered for path 'externals/codi'; Cloning into '/home/simon/src/tmp/SU2/externals/codi'...; Submodule path 'externals/codi': checked out '501dcf0305df147481630f20ce37c2e624fb351f'; Initialize submodule /home/simon/src/tmp/SU2/externals/medi using git ... ; Submodule 'externals/medi' (https://github.com/SciCompKL/MeDiPack) registered for path 'externals/medi'; Cloning into '/home/simon/src/tmp/SU2/externals/medi'...; Submodule path 'externals/medi': checked out 'edde14f9ac4026b72b1e130f61c0a78e8652afa5'; Initialize submodule /home/simon/src/tmp/SU2/externals/meson using git ... ; Submodule 'externals/meson' (https://github.com/mesonbuild/meson) registered for path 'externals/meson'; Cloning into '/home/simon/src/tmp/SU2/externals/meson'...; Submodule path 'externals/meson': checked out '0435691e83fb7172e2a9635d2eb32d5521089916'; Initialize submodule /home/simon/src/tmp/SU2/externals/ninja using git ... ; Submodule 'externals/ninja' (https://github.com/ninja-build/ninja) registered for path 'externals/ninja'; Cloning into '/home/simon/src/tmp/SU2/externals/ninja'...; Submodule path 'externals/ninja': checked out '2d15b04e411229cb902332957281622119025e77'; ninja executable not found. Building ...; bootstrapping ninja...; wrote build.ninja.; bootstrap complete. rebuilding...; [31/31] LINK ninja; ```. **Desktop (please complete the following information):**; - OS: Linux (gentoo)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/911
https://github.com/su2code/SU2/issues/911:135,Deployability,install,installed,135,"Ninja gets built even when it's already installed, this should not happen, meson should use the already available (in this case system installed) ninja. ```; ~/s/t/SU2:master ◼ ❯ ninja --version; 1.8.2; ~/s/t/SU2:master ◼ ❯ which ninja; /usr/bin/ninja; ~/s/t/SU2:master ❯ ./meson.py build; Initialize submodule /home/simon/src/tmp/SU2/externals/codi using git ... ; Submodule 'externals/codi' (https://github.com/scicompkl/CoDiPack) registered for path 'externals/codi'; Cloning into '/home/simon/src/tmp/SU2/externals/codi'...; Submodule path 'externals/codi': checked out '501dcf0305df147481630f20ce37c2e624fb351f'; Initialize submodule /home/simon/src/tmp/SU2/externals/medi using git ... ; Submodule 'externals/medi' (https://github.com/SciCompKL/MeDiPack) registered for path 'externals/medi'; Cloning into '/home/simon/src/tmp/SU2/externals/medi'...; Submodule path 'externals/medi': checked out 'edde14f9ac4026b72b1e130f61c0a78e8652afa5'; Initialize submodule /home/simon/src/tmp/SU2/externals/meson using git ... ; Submodule 'externals/meson' (https://github.com/mesonbuild/meson) registered for path 'externals/meson'; Cloning into '/home/simon/src/tmp/SU2/externals/meson'...; Submodule path 'externals/meson': checked out '0435691e83fb7172e2a9635d2eb32d5521089916'; Initialize submodule /home/simon/src/tmp/SU2/externals/ninja using git ... ; Submodule 'externals/ninja' (https://github.com/ninja-build/ninja) registered for path 'externals/ninja'; Cloning into '/home/simon/src/tmp/SU2/externals/ninja'...; Submodule path 'externals/ninja': checked out '2d15b04e411229cb902332957281622119025e77'; ninja executable not found. Building ...; bootstrapping ninja...; wrote build.ninja.; bootstrap complete. rebuilding...; [31/31] LINK ninja; ```. **Desktop (please complete the following information):**; - OS: Linux (gentoo)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/911
https://github.com/su2code/SU2/issues/912:203,Availability,avail,available,203,We would love the option to use multipoint optimization in combination with our existing INC_RANS primal and discrete adjoint config file. We would love to see config options for incompressible settings available in the config file. (MULTIPOINT_INC_VELOCITY_INIT in particular.). We have tried hardcoding values (INC_VELOCITY_INIT in particular) in functions.py and gradients.py. This was an effort to essentially create a multipoint optimization using INC_RANS. However this method led SU2_DEF to ouptut a defective mesh. We have not yet found a workaround for this issue. . INC_RANS has proved robust and quick to converge for our application. We would love to be able to use it for multipoint!`,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/912
https://github.com/su2code/SU2/issues/912:596,Availability,robust,robust,596,We would love the option to use multipoint optimization in combination with our existing INC_RANS primal and discrete adjoint config file. We would love to see config options for incompressible settings available in the config file. (MULTIPOINT_INC_VELOCITY_INIT in particular.). We have tried hardcoding values (INC_VELOCITY_INIT in particular) in functions.py and gradients.py. This was an effort to essentially create a multipoint optimization using INC_RANS. However this method led SU2_DEF to ouptut a defective mesh. We have not yet found a workaround for this issue. . INC_RANS has proved robust and quick to converge for our application. We would love to be able to use it for multipoint!`,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/912
https://github.com/su2code/SU2/issues/912:126,Modifiability,config,config,126,We would love the option to use multipoint optimization in combination with our existing INC_RANS primal and discrete adjoint config file. We would love to see config options for incompressible settings available in the config file. (MULTIPOINT_INC_VELOCITY_INIT in particular.). We have tried hardcoding values (INC_VELOCITY_INIT in particular) in functions.py and gradients.py. This was an effort to essentially create a multipoint optimization using INC_RANS. However this method led SU2_DEF to ouptut a defective mesh. We have not yet found a workaround for this issue. . INC_RANS has proved robust and quick to converge for our application. We would love to be able to use it for multipoint!`,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/912
https://github.com/su2code/SU2/issues/912:160,Modifiability,config,config,160,We would love the option to use multipoint optimization in combination with our existing INC_RANS primal and discrete adjoint config file. We would love to see config options for incompressible settings available in the config file. (MULTIPOINT_INC_VELOCITY_INIT in particular.). We have tried hardcoding values (INC_VELOCITY_INIT in particular) in functions.py and gradients.py. This was an effort to essentially create a multipoint optimization using INC_RANS. However this method led SU2_DEF to ouptut a defective mesh. We have not yet found a workaround for this issue. . INC_RANS has proved robust and quick to converge for our application. We would love to be able to use it for multipoint!`,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/912
https://github.com/su2code/SU2/issues/912:220,Modifiability,config,config,220,We would love the option to use multipoint optimization in combination with our existing INC_RANS primal and discrete adjoint config file. We would love to see config options for incompressible settings available in the config file. (MULTIPOINT_INC_VELOCITY_INIT in particular.). We have tried hardcoding values (INC_VELOCITY_INIT in particular) in functions.py and gradients.py. This was an effort to essentially create a multipoint optimization using INC_RANS. However this method led SU2_DEF to ouptut a defective mesh. We have not yet found a workaround for this issue. . INC_RANS has proved robust and quick to converge for our application. We would love to be able to use it for multipoint!`,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/912
https://github.com/su2code/SU2/issues/912:43,Performance,optimiz,optimization,43,We would love the option to use multipoint optimization in combination with our existing INC_RANS primal and discrete adjoint config file. We would love to see config options for incompressible settings available in the config file. (MULTIPOINT_INC_VELOCITY_INIT in particular.). We have tried hardcoding values (INC_VELOCITY_INIT in particular) in functions.py and gradients.py. This was an effort to essentially create a multipoint optimization using INC_RANS. However this method led SU2_DEF to ouptut a defective mesh. We have not yet found a workaround for this issue. . INC_RANS has proved robust and quick to converge for our application. We would love to be able to use it for multipoint!`,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/912
https://github.com/su2code/SU2/issues/912:434,Performance,optimiz,optimization,434,We would love the option to use multipoint optimization in combination with our existing INC_RANS primal and discrete adjoint config file. We would love to see config options for incompressible settings available in the config file. (MULTIPOINT_INC_VELOCITY_INIT in particular.). We have tried hardcoding values (INC_VELOCITY_INIT in particular) in functions.py and gradients.py. This was an effort to essentially create a multipoint optimization using INC_RANS. However this method led SU2_DEF to ouptut a defective mesh. We have not yet found a workaround for this issue. . INC_RANS has proved robust and quick to converge for our application. We would love to be able to use it for multipoint!`,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/912
https://github.com/su2code/SU2/pull/913:1317,Deployability,update,updated,1317,"## Proposed Changes; The is a first step in updating the output structure in order to make it a little bit more flexible and easier to maintain. The plan is to eventually have a consistent way of defining objective functions and/or define custom output quantities on individual surfaces. . I introduced a new structure to store scalar quantities for the history output. This makes it much easier to filter and loop through a specific subset of fields. Next step is to have per surface values stored in the same structure. Furthermore, creating structure to compute problem-specific outputs like aerodynamic coefficients, time-averaged quantities, surface quantities and so on. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/913
https://github.com/su2code/SU2/pull/913:112,Modifiability,flexible,flexible,112,"## Proposed Changes; The is a first step in updating the output structure in order to make it a little bit more flexible and easier to maintain. The plan is to eventually have a consistent way of defining objective functions and/or define custom output quantities on individual surfaces. . I introduced a new structure to store scalar quantities for the history output. This makes it much easier to filter and loop through a specific subset of fields. Next step is to have per surface values stored in the same structure. Furthermore, creating structure to compute problem-specific outputs like aerodynamic coefficients, time-averaged quantities, surface quantities and so on. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/913
https://github.com/su2code/SU2/pull/913:1244,Testability,test,test,1244,"## Proposed Changes; The is a first step in updating the output structure in order to make it a little bit more flexible and easier to maintain. The plan is to eventually have a consistent way of defining objective functions and/or define custom output quantities on individual surfaces. . I introduced a new structure to store scalar quantities for the history output. This makes it much easier to filter and loop through a specific subset of fields. Next step is to have per surface values stored in the same structure. Furthermore, creating structure to compute problem-specific outputs like aerodynamic coefficients, time-averaged quantities, surface quantities and so on. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/913
https://github.com/su2code/SU2/pull/913:866,Usability,guid,guide,866,"## Proposed Changes; The is a first step in updating the output structure in order to make it a little bit more flexible and easier to maintain. The plan is to eventually have a consistent way of defining objective functions and/or define custom output quantities on individual surfaces. . I introduced a new structure to store scalar quantities for the history output. This makes it much easier to filter and loop through a specific subset of fields. Next step is to have per surface values stored in the same structure. Furthermore, creating structure to compute problem-specific outputs like aerodynamic coefficients, time-averaged quantities, surface quantities and so on. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/913
https://github.com/su2code/SU2/pull/914:1037,Availability,Mainten,Maintenance,1037,"cturing of CInterpolator and co. consisting of:; #### New features:; - Control of the RBF interpolation matrix sparsity via option `RADIAL_BASIS_FUNCTION_PRUNE_TOLERANCE` to drop relatively small coefficients.; - Generalize nearest neighbor interpolation to KNN + inverse distance weighting, ""k"" determined by option `NUM_NEAREST_NEIGHBORS` (because ""why not"").; #### Enhancements:; - The setup of CRadialBasisFunction was optimized (more use of BLAS) and it is now parallel (MPI and threads) over multiple interface patches.; - The setup of CIsoparametric was optimized, now it only evaluates isoparameters for a few nearby candidate donor elements (instead of all possible ones).; - The setup of CMirror was optimized both for memory (by communicating only information as needed) and speed (by reducing algorithmic complexity from quadratic to linearithmic) this item is in #833.; - The setup of CIsoparametric, CNearestNeighbor, and CMirror are now hybrid parallel.; #### Maintenance:; - Restructure (split) and cleanup the files.; - Heavy refactoring of RBF interpolation.; - Heavy refactoring of isoparametric interpolation, the method was incorrect for quadrilaterals (and the code too complex).; - Heavy refactoring of mirror (conservative) interpolation, the algorithm is perhaps more complex but the code is cleaner and 10x faster (this is in #833).; - Medium cleanup of CInterpolator (const correctness, unnecessary mpi ifdefs, etc.).; - Light cleanup of CDriver/CTransfer (deleting copy-pasted code); #### Other enhancements:; - Initialize the linear system solutions in CMeshSolver to speedup 3D FSI simulations, but especially to reduce overhead in FSI discrete adjoint cases.; - Too improve the quality of deformed grids in FSI cases with large ""out-of-plane"" displacements, a thicker layer of stiff cells can be imposed around the deforming boundaries. The thickness of the layer is defined by option `DEFORM_STIFF_LAYER_SIZE = [0]` when `DEFORM_STIFFNESS_TYPE = WALL_DISTANCE`. This al",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/914
https://github.com/su2code/SU2/pull/914:2544,Availability,reliab,reliable,2544,"isoparametric interpolation, the method was incorrect for quadrilaterals (and the code too complex).; - Heavy refactoring of mirror (conservative) interpolation, the algorithm is perhaps more complex but the code is cleaner and 10x faster (this is in #833).; - Medium cleanup of CInterpolator (const correctness, unnecessary mpi ifdefs, etc.).; - Light cleanup of CDriver/CTransfer (deleting copy-pasted code); #### Other enhancements:; - Initialize the linear system solutions in CMeshSolver to speedup 3D FSI simulations, but especially to reduce overhead in FSI discrete adjoint cases.; - Too improve the quality of deformed grids in FSI cases with large ""out-of-plane"" displacements, a thicker layer of stiff cells can be imposed around the deforming boundaries. The thickness of the layer is defined by option `DEFORM_STIFF_LAYER_SIZE = [0]` when `DEFORM_STIFFNESS_TYPE = WALL_DISTANCE`. This allows refined regions around a wing tip to be dragged instead of sheared (which happens with the simple 1/x variation).; #### Other fixes:; - CFEASolver displacement boundary conditions (the weird bug detailed below).; - CFEASolver load integration for FSI simplified to fix mpi-related bug.; - Option CFL_REDUCTION_TURB having no effect.; - Restarts with moving wall cases work by default. I know, there's way too much stuff in this PR, but it was all required to make 3D FSI more reliable, and hey, it works!; ![3D_FSI](https://user-images.githubusercontent.com/38071223/78511123-34069a80-7792-11ea-950f-750cef80f1f8.png). ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/914
https://github.com/su2code/SU2/pull/914:579,Deployability,patch,patches,579,"## Proposed Changes; Improvements and general cleanup / restructuring of CInterpolator and co. consisting of:; #### New features:; - Control of the RBF interpolation matrix sparsity via option `RADIAL_BASIS_FUNCTION_PRUNE_TOLERANCE` to drop relatively small coefficients.; - Generalize nearest neighbor interpolation to KNN + inverse distance weighting, ""k"" determined by option `NUM_NEAREST_NEIGHBORS` (because ""why not"").; #### Enhancements:; - The setup of CRadialBasisFunction was optimized (more use of BLAS) and it is now parallel (MPI and threads) over multiple interface patches.; - The setup of CIsoparametric was optimized, now it only evaluates isoparameters for a few nearby candidate donor elements (instead of all possible ones).; - The setup of CMirror was optimized both for memory (by communicating only information as needed) and speed (by reducing algorithmic complexity from quadratic to linearithmic) this item is in #833.; - The setup of CIsoparametric, CNearestNeighbor, and CMirror are now hybrid parallel.; #### Maintenance:; - Restructure (split) and cleanup the files.; - Heavy refactoring of RBF interpolation.; - Heavy refactoring of isoparametric interpolation, the method was incorrect for quadrilaterals (and the code too complex).; - Heavy refactoring of mirror (conservative) interpolation, the algorithm is perhaps more complex but the code is cleaner and 10x faster (this is in #833).; - Medium cleanup of CInterpolator (const correctness, unnecessary mpi ifdefs, etc.).; - Light cleanup of CDriver/CTransfer (deleting copy-pasted code); #### Other enhancements:; - Initialize the linear system solutions in CMeshSolver to speedup 3D FSI simulations, but especially to reduce overhead in FSI discrete adjoint cases.; - Too improve the quality of deformed grids in FSI cases with large ""out-of-plane"" displacements, a thicker layer of stiff cells can be imposed around the deforming boundaries. The thickness of the layer is defined by option `DEFORM_STIFF_LAYER_SIZ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/914
https://github.com/su2code/SU2/pull/914:2299,Deployability,integrat,integration,2299,"isoparametric interpolation, the method was incorrect for quadrilaterals (and the code too complex).; - Heavy refactoring of mirror (conservative) interpolation, the algorithm is perhaps more complex but the code is cleaner and 10x faster (this is in #833).; - Medium cleanup of CInterpolator (const correctness, unnecessary mpi ifdefs, etc.).; - Light cleanup of CDriver/CTransfer (deleting copy-pasted code); #### Other enhancements:; - Initialize the linear system solutions in CMeshSolver to speedup 3D FSI simulations, but especially to reduce overhead in FSI discrete adjoint cases.; - Too improve the quality of deformed grids in FSI cases with large ""out-of-plane"" displacements, a thicker layer of stiff cells can be imposed around the deforming boundaries. The thickness of the layer is defined by option `DEFORM_STIFF_LAYER_SIZE = [0]` when `DEFORM_STIFFNESS_TYPE = WALL_DISTANCE`. This allows refined regions around a wing tip to be dragged instead of sheared (which happens with the simple 1/x variation).; #### Other fixes:; - CFEASolver displacement boundary conditions (the weird bug detailed below).; - CFEASolver load integration for FSI simplified to fix mpi-related bug.; - Option CFL_REDUCTION_TURB having no effect.; - Restarts with moving wall cases work by default. I know, there's way too much stuff in this PR, but it was all required to make 3D FSI more reliable, and hey, it works!; ![3D_FSI](https://user-images.githubusercontent.com/38071223/78511123-34069a80-7792-11ea-950f-750cef80f1f8.png). ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/914
https://github.com/su2code/SU2/pull/914:3070,Deployability,update,updated,3070,"isoparametric interpolation, the method was incorrect for quadrilaterals (and the code too complex).; - Heavy refactoring of mirror (conservative) interpolation, the algorithm is perhaps more complex but the code is cleaner and 10x faster (this is in #833).; - Medium cleanup of CInterpolator (const correctness, unnecessary mpi ifdefs, etc.).; - Light cleanup of CDriver/CTransfer (deleting copy-pasted code); #### Other enhancements:; - Initialize the linear system solutions in CMeshSolver to speedup 3D FSI simulations, but especially to reduce overhead in FSI discrete adjoint cases.; - Too improve the quality of deformed grids in FSI cases with large ""out-of-plane"" displacements, a thicker layer of stiff cells can be imposed around the deforming boundaries. The thickness of the layer is defined by option `DEFORM_STIFF_LAYER_SIZE = [0]` when `DEFORM_STIFFNESS_TYPE = WALL_DISTANCE`. This allows refined regions around a wing tip to be dragged instead of sheared (which happens with the simple 1/x variation).; #### Other fixes:; - CFEASolver displacement boundary conditions (the weird bug detailed below).; - CFEASolver load integration for FSI simplified to fix mpi-related bug.; - Option CFL_REDUCTION_TURB having no effect.; - Restarts with moving wall cases work by default. I know, there's way too much stuff in this PR, but it was all required to make 3D FSI more reliable, and hey, it works!; ![3D_FSI](https://user-images.githubusercontent.com/38071223/78511123-34069a80-7792-11ea-950f-750cef80f1f8.png). ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/914
https://github.com/su2code/SU2/pull/914:1705,Energy Efficiency,reduce,reduce,1705,"ized, now it only evaluates isoparameters for a few nearby candidate donor elements (instead of all possible ones).; - The setup of CMirror was optimized both for memory (by communicating only information as needed) and speed (by reducing algorithmic complexity from quadratic to linearithmic) this item is in #833.; - The setup of CIsoparametric, CNearestNeighbor, and CMirror are now hybrid parallel.; #### Maintenance:; - Restructure (split) and cleanup the files.; - Heavy refactoring of RBF interpolation.; - Heavy refactoring of isoparametric interpolation, the method was incorrect for quadrilaterals (and the code too complex).; - Heavy refactoring of mirror (conservative) interpolation, the algorithm is perhaps more complex but the code is cleaner and 10x faster (this is in #833).; - Medium cleanup of CInterpolator (const correctness, unnecessary mpi ifdefs, etc.).; - Light cleanup of CDriver/CTransfer (deleting copy-pasted code); #### Other enhancements:; - Initialize the linear system solutions in CMeshSolver to speedup 3D FSI simulations, but especially to reduce overhead in FSI discrete adjoint cases.; - Too improve the quality of deformed grids in FSI cases with large ""out-of-plane"" displacements, a thicker layer of stiff cells can be imposed around the deforming boundaries. The thickness of the layer is defined by option `DEFORM_STIFF_LAYER_SIZE = [0]` when `DEFORM_STIFFNESS_TYPE = WALL_DISTANCE`. This allows refined regions around a wing tip to be dragged instead of sheared (which happens with the simple 1/x variation).; #### Other fixes:; - CFEASolver displacement boundary conditions (the weird bug detailed below).; - CFEASolver load integration for FSI simplified to fix mpi-related bug.; - Option CFL_REDUCTION_TURB having no effect.; - Restarts with moving wall cases work by default. I know, there's way too much stuff in this PR, but it was all required to make 3D FSI more reliable, and hey, it works!; ![3D_FSI](https://user-images.githubusercontent.com/380",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/914
https://github.com/su2code/SU2/pull/914:569,Integrability,interface,interface,569,"## Proposed Changes; Improvements and general cleanup / restructuring of CInterpolator and co. consisting of:; #### New features:; - Control of the RBF interpolation matrix sparsity via option `RADIAL_BASIS_FUNCTION_PRUNE_TOLERANCE` to drop relatively small coefficients.; - Generalize nearest neighbor interpolation to KNN + inverse distance weighting, ""k"" determined by option `NUM_NEAREST_NEIGHBORS` (because ""why not"").; #### Enhancements:; - The setup of CRadialBasisFunction was optimized (more use of BLAS) and it is now parallel (MPI and threads) over multiple interface patches.; - The setup of CIsoparametric was optimized, now it only evaluates isoparameters for a few nearby candidate donor elements (instead of all possible ones).; - The setup of CMirror was optimized both for memory (by communicating only information as needed) and speed (by reducing algorithmic complexity from quadratic to linearithmic) this item is in #833.; - The setup of CIsoparametric, CNearestNeighbor, and CMirror are now hybrid parallel.; #### Maintenance:; - Restructure (split) and cleanup the files.; - Heavy refactoring of RBF interpolation.; - Heavy refactoring of isoparametric interpolation, the method was incorrect for quadrilaterals (and the code too complex).; - Heavy refactoring of mirror (conservative) interpolation, the algorithm is perhaps more complex but the code is cleaner and 10x faster (this is in #833).; - Medium cleanup of CInterpolator (const correctness, unnecessary mpi ifdefs, etc.).; - Light cleanup of CDriver/CTransfer (deleting copy-pasted code); #### Other enhancements:; - Initialize the linear system solutions in CMeshSolver to speedup 3D FSI simulations, but especially to reduce overhead in FSI discrete adjoint cases.; - Too improve the quality of deformed grids in FSI cases with large ""out-of-plane"" displacements, a thicker layer of stiff cells can be imposed around the deforming boundaries. The thickness of the layer is defined by option `DEFORM_STIFF_LAYER_SIZ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/914
https://github.com/su2code/SU2/pull/914:2299,Integrability,integrat,integration,2299,"isoparametric interpolation, the method was incorrect for quadrilaterals (and the code too complex).; - Heavy refactoring of mirror (conservative) interpolation, the algorithm is perhaps more complex but the code is cleaner and 10x faster (this is in #833).; - Medium cleanup of CInterpolator (const correctness, unnecessary mpi ifdefs, etc.).; - Light cleanup of CDriver/CTransfer (deleting copy-pasted code); #### Other enhancements:; - Initialize the linear system solutions in CMeshSolver to speedup 3D FSI simulations, but especially to reduce overhead in FSI discrete adjoint cases.; - Too improve the quality of deformed grids in FSI cases with large ""out-of-plane"" displacements, a thicker layer of stiff cells can be imposed around the deforming boundaries. The thickness of the layer is defined by option `DEFORM_STIFF_LAYER_SIZE = [0]` when `DEFORM_STIFFNESS_TYPE = WALL_DISTANCE`. This allows refined regions around a wing tip to be dragged instead of sheared (which happens with the simple 1/x variation).; #### Other fixes:; - CFEASolver displacement boundary conditions (the weird bug detailed below).; - CFEASolver load integration for FSI simplified to fix mpi-related bug.; - Option CFL_REDUCTION_TURB having no effect.; - Restarts with moving wall cases work by default. I know, there's way too much stuff in this PR, but it was all required to make 3D FSI more reliable, and hey, it works!; ![3D_FSI](https://user-images.githubusercontent.com/38071223/78511123-34069a80-7792-11ea-950f-750cef80f1f8.png). ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/914
https://github.com/su2code/SU2/pull/914:430,Modifiability,Enhance,Enhancements,430,"## Proposed Changes; Improvements and general cleanup / restructuring of CInterpolator and co. consisting of:; #### New features:; - Control of the RBF interpolation matrix sparsity via option `RADIAL_BASIS_FUNCTION_PRUNE_TOLERANCE` to drop relatively small coefficients.; - Generalize nearest neighbor interpolation to KNN + inverse distance weighting, ""k"" determined by option `NUM_NEAREST_NEIGHBORS` (because ""why not"").; #### Enhancements:; - The setup of CRadialBasisFunction was optimized (more use of BLAS) and it is now parallel (MPI and threads) over multiple interface patches.; - The setup of CIsoparametric was optimized, now it only evaluates isoparameters for a few nearby candidate donor elements (instead of all possible ones).; - The setup of CMirror was optimized both for memory (by communicating only information as needed) and speed (by reducing algorithmic complexity from quadratic to linearithmic) this item is in #833.; - The setup of CIsoparametric, CNearestNeighbor, and CMirror are now hybrid parallel.; #### Maintenance:; - Restructure (split) and cleanup the files.; - Heavy refactoring of RBF interpolation.; - Heavy refactoring of isoparametric interpolation, the method was incorrect for quadrilaterals (and the code too complex).; - Heavy refactoring of mirror (conservative) interpolation, the algorithm is perhaps more complex but the code is cleaner and 10x faster (this is in #833).; - Medium cleanup of CInterpolator (const correctness, unnecessary mpi ifdefs, etc.).; - Light cleanup of CDriver/CTransfer (deleting copy-pasted code); #### Other enhancements:; - Initialize the linear system solutions in CMeshSolver to speedup 3D FSI simulations, but especially to reduce overhead in FSI discrete adjoint cases.; - Too improve the quality of deformed grids in FSI cases with large ""out-of-plane"" displacements, a thicker layer of stiff cells can be imposed around the deforming boundaries. The thickness of the layer is defined by option `DEFORM_STIFF_LAYER_SIZ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/914
https://github.com/su2code/SU2/pull/914:1105,Modifiability,refactor,refactoring,1105,"New features:; - Control of the RBF interpolation matrix sparsity via option `RADIAL_BASIS_FUNCTION_PRUNE_TOLERANCE` to drop relatively small coefficients.; - Generalize nearest neighbor interpolation to KNN + inverse distance weighting, ""k"" determined by option `NUM_NEAREST_NEIGHBORS` (because ""why not"").; #### Enhancements:; - The setup of CRadialBasisFunction was optimized (more use of BLAS) and it is now parallel (MPI and threads) over multiple interface patches.; - The setup of CIsoparametric was optimized, now it only evaluates isoparameters for a few nearby candidate donor elements (instead of all possible ones).; - The setup of CMirror was optimized both for memory (by communicating only information as needed) and speed (by reducing algorithmic complexity from quadratic to linearithmic) this item is in #833.; - The setup of CIsoparametric, CNearestNeighbor, and CMirror are now hybrid parallel.; #### Maintenance:; - Restructure (split) and cleanup the files.; - Heavy refactoring of RBF interpolation.; - Heavy refactoring of isoparametric interpolation, the method was incorrect for quadrilaterals (and the code too complex).; - Heavy refactoring of mirror (conservative) interpolation, the algorithm is perhaps more complex but the code is cleaner and 10x faster (this is in #833).; - Medium cleanup of CInterpolator (const correctness, unnecessary mpi ifdefs, etc.).; - Light cleanup of CDriver/CTransfer (deleting copy-pasted code); #### Other enhancements:; - Initialize the linear system solutions in CMeshSolver to speedup 3D FSI simulations, but especially to reduce overhead in FSI discrete adjoint cases.; - Too improve the quality of deformed grids in FSI cases with large ""out-of-plane"" displacements, a thicker layer of stiff cells can be imposed around the deforming boundaries. The thickness of the layer is defined by option `DEFORM_STIFF_LAYER_SIZE = [0]` when `DEFORM_STIFFNESS_TYPE = WALL_DISTANCE`. This allows refined regions around a wing tip to be dragged i",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/914
https://github.com/su2code/SU2/pull/914:1148,Modifiability,refactor,refactoring,1148,"_BASIS_FUNCTION_PRUNE_TOLERANCE` to drop relatively small coefficients.; - Generalize nearest neighbor interpolation to KNN + inverse distance weighting, ""k"" determined by option `NUM_NEAREST_NEIGHBORS` (because ""why not"").; #### Enhancements:; - The setup of CRadialBasisFunction was optimized (more use of BLAS) and it is now parallel (MPI and threads) over multiple interface patches.; - The setup of CIsoparametric was optimized, now it only evaluates isoparameters for a few nearby candidate donor elements (instead of all possible ones).; - The setup of CMirror was optimized both for memory (by communicating only information as needed) and speed (by reducing algorithmic complexity from quadratic to linearithmic) this item is in #833.; - The setup of CIsoparametric, CNearestNeighbor, and CMirror are now hybrid parallel.; #### Maintenance:; - Restructure (split) and cleanup the files.; - Heavy refactoring of RBF interpolation.; - Heavy refactoring of isoparametric interpolation, the method was incorrect for quadrilaterals (and the code too complex).; - Heavy refactoring of mirror (conservative) interpolation, the algorithm is perhaps more complex but the code is cleaner and 10x faster (this is in #833).; - Medium cleanup of CInterpolator (const correctness, unnecessary mpi ifdefs, etc.).; - Light cleanup of CDriver/CTransfer (deleting copy-pasted code); #### Other enhancements:; - Initialize the linear system solutions in CMeshSolver to speedup 3D FSI simulations, but especially to reduce overhead in FSI discrete adjoint cases.; - Too improve the quality of deformed grids in FSI cases with large ""out-of-plane"" displacements, a thicker layer of stiff cells can be imposed around the deforming boundaries. The thickness of the layer is defined by option `DEFORM_STIFF_LAYER_SIZE = [0]` when `DEFORM_STIFFNESS_TYPE = WALL_DISTANCE`. This allows refined regions around a wing tip to be dragged instead of sheared (which happens with the simple 1/x variation).; #### Other fixes:;",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/914
https://github.com/su2code/SU2/pull/914:1273,Modifiability,refactor,refactoring,1273,"e weighting, ""k"" determined by option `NUM_NEAREST_NEIGHBORS` (because ""why not"").; #### Enhancements:; - The setup of CRadialBasisFunction was optimized (more use of BLAS) and it is now parallel (MPI and threads) over multiple interface patches.; - The setup of CIsoparametric was optimized, now it only evaluates isoparameters for a few nearby candidate donor elements (instead of all possible ones).; - The setup of CMirror was optimized both for memory (by communicating only information as needed) and speed (by reducing algorithmic complexity from quadratic to linearithmic) this item is in #833.; - The setup of CIsoparametric, CNearestNeighbor, and CMirror are now hybrid parallel.; #### Maintenance:; - Restructure (split) and cleanup the files.; - Heavy refactoring of RBF interpolation.; - Heavy refactoring of isoparametric interpolation, the method was incorrect for quadrilaterals (and the code too complex).; - Heavy refactoring of mirror (conservative) interpolation, the algorithm is perhaps more complex but the code is cleaner and 10x faster (this is in #833).; - Medium cleanup of CInterpolator (const correctness, unnecessary mpi ifdefs, etc.).; - Light cleanup of CDriver/CTransfer (deleting copy-pasted code); #### Other enhancements:; - Initialize the linear system solutions in CMeshSolver to speedup 3D FSI simulations, but especially to reduce overhead in FSI discrete adjoint cases.; - Too improve the quality of deformed grids in FSI cases with large ""out-of-plane"" displacements, a thicker layer of stiff cells can be imposed around the deforming boundaries. The thickness of the layer is defined by option `DEFORM_STIFF_LAYER_SIZE = [0]` when `DEFORM_STIFFNESS_TYPE = WALL_DISTANCE`. This allows refined regions around a wing tip to be dragged instead of sheared (which happens with the simple 1/x variation).; #### Other fixes:; - CFEASolver displacement boundary conditions (the weird bug detailed below).; - CFEASolver load integration for FSI simplified to fix mpi-r",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/914
https://github.com/su2code/SU2/pull/914:1585,Modifiability,enhance,enhancements,1585,"ized, now it only evaluates isoparameters for a few nearby candidate donor elements (instead of all possible ones).; - The setup of CMirror was optimized both for memory (by communicating only information as needed) and speed (by reducing algorithmic complexity from quadratic to linearithmic) this item is in #833.; - The setup of CIsoparametric, CNearestNeighbor, and CMirror are now hybrid parallel.; #### Maintenance:; - Restructure (split) and cleanup the files.; - Heavy refactoring of RBF interpolation.; - Heavy refactoring of isoparametric interpolation, the method was incorrect for quadrilaterals (and the code too complex).; - Heavy refactoring of mirror (conservative) interpolation, the algorithm is perhaps more complex but the code is cleaner and 10x faster (this is in #833).; - Medium cleanup of CInterpolator (const correctness, unnecessary mpi ifdefs, etc.).; - Light cleanup of CDriver/CTransfer (deleting copy-pasted code); #### Other enhancements:; - Initialize the linear system solutions in CMeshSolver to speedup 3D FSI simulations, but especially to reduce overhead in FSI discrete adjoint cases.; - Too improve the quality of deformed grids in FSI cases with large ""out-of-plane"" displacements, a thicker layer of stiff cells can be imposed around the deforming boundaries. The thickness of the layer is defined by option `DEFORM_STIFF_LAYER_SIZE = [0]` when `DEFORM_STIFFNESS_TYPE = WALL_DISTANCE`. This allows refined regions around a wing tip to be dragged instead of sheared (which happens with the simple 1/x variation).; #### Other fixes:; - CFEASolver displacement boundary conditions (the weird bug detailed below).; - CFEASolver load integration for FSI simplified to fix mpi-related bug.; - Option CFL_REDUCTION_TURB having no effect.; - Restarts with moving wall cases work by default. I know, there's way too much stuff in this PR, but it was all required to make 3D FSI more reliable, and hey, it works!; ![3D_FSI](https://user-images.githubusercontent.com/380",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/914
https://github.com/su2code/SU2/pull/914:485,Performance,optimiz,optimized,485,"## Proposed Changes; Improvements and general cleanup / restructuring of CInterpolator and co. consisting of:; #### New features:; - Control of the RBF interpolation matrix sparsity via option `RADIAL_BASIS_FUNCTION_PRUNE_TOLERANCE` to drop relatively small coefficients.; - Generalize nearest neighbor interpolation to KNN + inverse distance weighting, ""k"" determined by option `NUM_NEAREST_NEIGHBORS` (because ""why not"").; #### Enhancements:; - The setup of CRadialBasisFunction was optimized (more use of BLAS) and it is now parallel (MPI and threads) over multiple interface patches.; - The setup of CIsoparametric was optimized, now it only evaluates isoparameters for a few nearby candidate donor elements (instead of all possible ones).; - The setup of CMirror was optimized both for memory (by communicating only information as needed) and speed (by reducing algorithmic complexity from quadratic to linearithmic) this item is in #833.; - The setup of CIsoparametric, CNearestNeighbor, and CMirror are now hybrid parallel.; #### Maintenance:; - Restructure (split) and cleanup the files.; - Heavy refactoring of RBF interpolation.; - Heavy refactoring of isoparametric interpolation, the method was incorrect for quadrilaterals (and the code too complex).; - Heavy refactoring of mirror (conservative) interpolation, the algorithm is perhaps more complex but the code is cleaner and 10x faster (this is in #833).; - Medium cleanup of CInterpolator (const correctness, unnecessary mpi ifdefs, etc.).; - Light cleanup of CDriver/CTransfer (deleting copy-pasted code); #### Other enhancements:; - Initialize the linear system solutions in CMeshSolver to speedup 3D FSI simulations, but especially to reduce overhead in FSI discrete adjoint cases.; - Too improve the quality of deformed grids in FSI cases with large ""out-of-plane"" displacements, a thicker layer of stiff cells can be imposed around the deforming boundaries. The thickness of the layer is defined by option `DEFORM_STIFF_LAYER_SIZ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/914
https://github.com/su2code/SU2/pull/914:623,Performance,optimiz,optimized,623,"## Proposed Changes; Improvements and general cleanup / restructuring of CInterpolator and co. consisting of:; #### New features:; - Control of the RBF interpolation matrix sparsity via option `RADIAL_BASIS_FUNCTION_PRUNE_TOLERANCE` to drop relatively small coefficients.; - Generalize nearest neighbor interpolation to KNN + inverse distance weighting, ""k"" determined by option `NUM_NEAREST_NEIGHBORS` (because ""why not"").; #### Enhancements:; - The setup of CRadialBasisFunction was optimized (more use of BLAS) and it is now parallel (MPI and threads) over multiple interface patches.; - The setup of CIsoparametric was optimized, now it only evaluates isoparameters for a few nearby candidate donor elements (instead of all possible ones).; - The setup of CMirror was optimized both for memory (by communicating only information as needed) and speed (by reducing algorithmic complexity from quadratic to linearithmic) this item is in #833.; - The setup of CIsoparametric, CNearestNeighbor, and CMirror are now hybrid parallel.; #### Maintenance:; - Restructure (split) and cleanup the files.; - Heavy refactoring of RBF interpolation.; - Heavy refactoring of isoparametric interpolation, the method was incorrect for quadrilaterals (and the code too complex).; - Heavy refactoring of mirror (conservative) interpolation, the algorithm is perhaps more complex but the code is cleaner and 10x faster (this is in #833).; - Medium cleanup of CInterpolator (const correctness, unnecessary mpi ifdefs, etc.).; - Light cleanup of CDriver/CTransfer (deleting copy-pasted code); #### Other enhancements:; - Initialize the linear system solutions in CMeshSolver to speedup 3D FSI simulations, but especially to reduce overhead in FSI discrete adjoint cases.; - Too improve the quality of deformed grids in FSI cases with large ""out-of-plane"" displacements, a thicker layer of stiff cells can be imposed around the deforming boundaries. The thickness of the layer is defined by option `DEFORM_STIFF_LAYER_SIZ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/914
https://github.com/su2code/SU2/pull/914:772,Performance,optimiz,optimized,772,"## Proposed Changes; Improvements and general cleanup / restructuring of CInterpolator and co. consisting of:; #### New features:; - Control of the RBF interpolation matrix sparsity via option `RADIAL_BASIS_FUNCTION_PRUNE_TOLERANCE` to drop relatively small coefficients.; - Generalize nearest neighbor interpolation to KNN + inverse distance weighting, ""k"" determined by option `NUM_NEAREST_NEIGHBORS` (because ""why not"").; #### Enhancements:; - The setup of CRadialBasisFunction was optimized (more use of BLAS) and it is now parallel (MPI and threads) over multiple interface patches.; - The setup of CIsoparametric was optimized, now it only evaluates isoparameters for a few nearby candidate donor elements (instead of all possible ones).; - The setup of CMirror was optimized both for memory (by communicating only information as needed) and speed (by reducing algorithmic complexity from quadratic to linearithmic) this item is in #833.; - The setup of CIsoparametric, CNearestNeighbor, and CMirror are now hybrid parallel.; #### Maintenance:; - Restructure (split) and cleanup the files.; - Heavy refactoring of RBF interpolation.; - Heavy refactoring of isoparametric interpolation, the method was incorrect for quadrilaterals (and the code too complex).; - Heavy refactoring of mirror (conservative) interpolation, the algorithm is perhaps more complex but the code is cleaner and 10x faster (this is in #833).; - Medium cleanup of CInterpolator (const correctness, unnecessary mpi ifdefs, etc.).; - Light cleanup of CDriver/CTransfer (deleting copy-pasted code); #### Other enhancements:; - Initialize the linear system solutions in CMeshSolver to speedup 3D FSI simulations, but especially to reduce overhead in FSI discrete adjoint cases.; - Too improve the quality of deformed grids in FSI cases with large ""out-of-plane"" displacements, a thicker layer of stiff cells can be imposed around the deforming boundaries. The thickness of the layer is defined by option `DEFORM_STIFF_LAYER_SIZ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/914
https://github.com/su2code/SU2/pull/914:2294,Performance,load,load,2294,"isoparametric interpolation, the method was incorrect for quadrilaterals (and the code too complex).; - Heavy refactoring of mirror (conservative) interpolation, the algorithm is perhaps more complex but the code is cleaner and 10x faster (this is in #833).; - Medium cleanup of CInterpolator (const correctness, unnecessary mpi ifdefs, etc.).; - Light cleanup of CDriver/CTransfer (deleting copy-pasted code); #### Other enhancements:; - Initialize the linear system solutions in CMeshSolver to speedup 3D FSI simulations, but especially to reduce overhead in FSI discrete adjoint cases.; - Too improve the quality of deformed grids in FSI cases with large ""out-of-plane"" displacements, a thicker layer of stiff cells can be imposed around the deforming boundaries. The thickness of the layer is defined by option `DEFORM_STIFF_LAYER_SIZE = [0]` when `DEFORM_STIFFNESS_TYPE = WALL_DISTANCE`. This allows refined regions around a wing tip to be dragged instead of sheared (which happens with the simple 1/x variation).; #### Other fixes:; - CFEASolver displacement boundary conditions (the weird bug detailed below).; - CFEASolver load integration for FSI simplified to fix mpi-related bug.; - Option CFL_REDUCTION_TURB having no effect.; - Restarts with moving wall cases work by default. I know, there's way too much stuff in this PR, but it was all required to make 3D FSI more reliable, and hey, it works!; ![3D_FSI](https://user-images.githubusercontent.com/38071223/78511123-34069a80-7792-11ea-950f-750cef80f1f8.png). ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/914
https://github.com/su2code/SU2/pull/914:2997,Testability,test,test,2997,"isoparametric interpolation, the method was incorrect for quadrilaterals (and the code too complex).; - Heavy refactoring of mirror (conservative) interpolation, the algorithm is perhaps more complex but the code is cleaner and 10x faster (this is in #833).; - Medium cleanup of CInterpolator (const correctness, unnecessary mpi ifdefs, etc.).; - Light cleanup of CDriver/CTransfer (deleting copy-pasted code); #### Other enhancements:; - Initialize the linear system solutions in CMeshSolver to speedup 3D FSI simulations, but especially to reduce overhead in FSI discrete adjoint cases.; - Too improve the quality of deformed grids in FSI cases with large ""out-of-plane"" displacements, a thicker layer of stiff cells can be imposed around the deforming boundaries. The thickness of the layer is defined by option `DEFORM_STIFF_LAYER_SIZE = [0]` when `DEFORM_STIFFNESS_TYPE = WALL_DISTANCE`. This allows refined regions around a wing tip to be dragged instead of sheared (which happens with the simple 1/x variation).; #### Other fixes:; - CFEASolver displacement boundary conditions (the weird bug detailed below).; - CFEASolver load integration for FSI simplified to fix mpi-related bug.; - Option CFL_REDUCTION_TURB having no effect.; - Restarts with moving wall cases work by default. I know, there's way too much stuff in this PR, but it was all required to make 3D FSI more reliable, and hey, it works!; ![3D_FSI](https://user-images.githubusercontent.com/38071223/78511123-34069a80-7792-11ea-950f-750cef80f1f8.png). ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/914
https://github.com/su2code/SU2/pull/914:2159,Usability,simpl,simple,2159,"f RBF interpolation.; - Heavy refactoring of isoparametric interpolation, the method was incorrect for quadrilaterals (and the code too complex).; - Heavy refactoring of mirror (conservative) interpolation, the algorithm is perhaps more complex but the code is cleaner and 10x faster (this is in #833).; - Medium cleanup of CInterpolator (const correctness, unnecessary mpi ifdefs, etc.).; - Light cleanup of CDriver/CTransfer (deleting copy-pasted code); #### Other enhancements:; - Initialize the linear system solutions in CMeshSolver to speedup 3D FSI simulations, but especially to reduce overhead in FSI discrete adjoint cases.; - Too improve the quality of deformed grids in FSI cases with large ""out-of-plane"" displacements, a thicker layer of stiff cells can be imposed around the deforming boundaries. The thickness of the layer is defined by option `DEFORM_STIFF_LAYER_SIZE = [0]` when `DEFORM_STIFFNESS_TYPE = WALL_DISTANCE`. This allows refined regions around a wing tip to be dragged instead of sheared (which happens with the simple 1/x variation).; #### Other fixes:; - CFEASolver displacement boundary conditions (the weird bug detailed below).; - CFEASolver load integration for FSI simplified to fix mpi-related bug.; - Option CFL_REDUCTION_TURB having no effect.; - Restarts with moving wall cases work by default. I know, there's way too much stuff in this PR, but it was all required to make 3D FSI more reliable, and hey, it works!; ![3D_FSI](https://user-images.githubusercontent.com/38071223/78511123-34069a80-7792-11ea-950f-750cef80f1f8.png). ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Do",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/914
https://github.com/su2code/SU2/pull/914:2319,Usability,simpl,simplified,2319,"isoparametric interpolation, the method was incorrect for quadrilaterals (and the code too complex).; - Heavy refactoring of mirror (conservative) interpolation, the algorithm is perhaps more complex but the code is cleaner and 10x faster (this is in #833).; - Medium cleanup of CInterpolator (const correctness, unnecessary mpi ifdefs, etc.).; - Light cleanup of CDriver/CTransfer (deleting copy-pasted code); #### Other enhancements:; - Initialize the linear system solutions in CMeshSolver to speedup 3D FSI simulations, but especially to reduce overhead in FSI discrete adjoint cases.; - Too improve the quality of deformed grids in FSI cases with large ""out-of-plane"" displacements, a thicker layer of stiff cells can be imposed around the deforming boundaries. The thickness of the layer is defined by option `DEFORM_STIFF_LAYER_SIZE = [0]` when `DEFORM_STIFFNESS_TYPE = WALL_DISTANCE`. This allows refined regions around a wing tip to be dragged instead of sheared (which happens with the simple 1/x variation).; #### Other fixes:; - CFEASolver displacement boundary conditions (the weird bug detailed below).; - CFEASolver load integration for FSI simplified to fix mpi-related bug.; - Option CFL_REDUCTION_TURB having no effect.; - Restarts with moving wall cases work by default. I know, there's way too much stuff in this PR, but it was all required to make 3D FSI more reliable, and hey, it works!; ![3D_FSI](https://user-images.githubusercontent.com/38071223/78511123-34069a80-7792-11ea-950f-750cef80f1f8.png). ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/914
https://github.com/su2code/SU2/issues/915:449,Availability,recover,recover,449,"This comes in the sequence of https://www.cfd-online.com/Forums/su2/225090-restart-causes-fgmres-orthogonalization-failed.html. **Describe the bug**; Something goes wrong when restarting a rotating wall case and SU2 diverges. Even when the rotation rate is 0.; The residuals close to the rotating wall shoot up when restarting, it does not seem to be a ""first iteration proble"" I tried setting the initial CFL very low and the solver is not able to recover. Does anyone have any clue why this might happen?. **To Reproduce**; Run TestCases/moving_wall/spinning_cylinder, then restart.; This also happens in 3D.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/915
https://github.com/su2code/SU2/issues/915:449,Safety,recover,recover,449,"This comes in the sequence of https://www.cfd-online.com/Forums/su2/225090-restart-causes-fgmres-orthogonalization-failed.html. **Describe the bug**; Something goes wrong when restarting a rotating wall case and SU2 diverges. Even when the rotation rate is 0.; The residuals close to the rotating wall shoot up when restarting, it does not seem to be a ""first iteration proble"" I tried setting the initial CFL very low and the solver is not able to recover. Does anyone have any clue why this might happen?. **To Reproduce**; Run TestCases/moving_wall/spinning_cylinder, then restart.; This also happens in 3D.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/915
https://github.com/su2code/SU2/issues/915:530,Testability,Test,TestCases,530,"This comes in the sequence of https://www.cfd-online.com/Forums/su2/225090-restart-causes-fgmres-orthogonalization-failed.html. **Describe the bug**; Something goes wrong when restarting a rotating wall case and SU2 diverges. Even when the rotation rate is 0.; The residuals close to the rotating wall shoot up when restarting, it does not seem to be a ""first iteration proble"" I tried setting the initial CFL very low and the solver is not able to recover. Does anyone have any clue why this might happen?. **To Reproduce**; Run TestCases/moving_wall/spinning_cylinder, then restart.; This also happens in 3D.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/915
https://github.com/su2code/SU2/issues/918:75,Usability,clear,clearance,75,"While trying to get a stable converging solution for a 3D turbine with tip clearance, i stumbled upon the following line in the CTurbSolver (line 413). ```; su2double Delta = Vol / ((nodes->GetLocalCFL(iPoint)/flowNodes->GetLocalCFL(iPoint))*flowNodes->GetDelta_Time(iPoint));; ```. It's unclear to me why the two CFL numbers are divided by each other. In case of running with a constant CFL this ratio will always be one. So the Delta value for the turbulence solver will become independent of the CFL number. Is this correct?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/918
https://github.com/su2code/SU2/pull/921:868,Availability,down,download,868,"## Proposed Changes; I found two bugs that lead to crashes when trying to restart a shape optimization problem:. 1. The python code still uses the deprecated `has_key` function for dicts.; 2. If the default config file is used in the python scripts, then the aerodynamic coefficients aren't saved anywhere even if `aerodynamics` is called. You can reproduce the bugs using the following MWE:. #### Minimal working example. As per the documentation, you should be able to restart a previous shape optimization problem with a command like:; ```; python shape_optimization.py -f turb_SA_RAE2822.cfg -r project.pkl; ```; where the `-r` command specifies a pickle files with the saved project state from a previous run. I checked the problem on the [RAE2822 constrained optimization tutorial](https://su2code.github.io/tutorials/Turbulent_2D_Constrained_RAE2822/). You can download the files using the instructions on that page. In order to reproduce the bug, run the following chain of commands:. 1. As per the tutorial, run `SU2_GEO turb_SA_RAE2822.cfg`; 2. Modify the `turb_SA_RAE2822.cfg` file to specify that `OPT_ITERATIONS=1`; 3. Run `python $SU2_RUN/shape_optimization.py -f turb_SA_RAE2822.cfg`; 4. Modify the `turb_SA_RAE2822.cfg` file to specify that `OPT_ITERATIONS=2`; 5. Run `python $SU2_RUN/shape_optimization.py -f turb_SA_RAE2822.cfg -r project.pkl`. ## Remaining work. This should be covered by a test case. The problem I used takes a bit of time to compute, even using just the restart. Is there an cheaper shape optimization problem that could run quickly as a test case?. ## Related Work; None. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/921
https://github.com/su2code/SU2/pull/921:2234,Deployability,update,updated,2234,"` is called. You can reproduce the bugs using the following MWE:. #### Minimal working example. As per the documentation, you should be able to restart a previous shape optimization problem with a command like:; ```; python shape_optimization.py -f turb_SA_RAE2822.cfg -r project.pkl; ```; where the `-r` command specifies a pickle files with the saved project state from a previous run. I checked the problem on the [RAE2822 constrained optimization tutorial](https://su2code.github.io/tutorials/Turbulent_2D_Constrained_RAE2822/). You can download the files using the instructions on that page. In order to reproduce the bug, run the following chain of commands:. 1. As per the tutorial, run `SU2_GEO turb_SA_RAE2822.cfg`; 2. Modify the `turb_SA_RAE2822.cfg` file to specify that `OPT_ITERATIONS=1`; 3. Run `python $SU2_RUN/shape_optimization.py -f turb_SA_RAE2822.cfg`; 4. Modify the `turb_SA_RAE2822.cfg` file to specify that `OPT_ITERATIONS=2`; 5. Run `python $SU2_RUN/shape_optimization.py -f turb_SA_RAE2822.cfg -r project.pkl`. ## Remaining work. This should be covered by a test case. The problem I used takes a bit of time to compute, even using just the restart. Is there an cheaper shape optimization problem that could run quickly as a test case?. ## Related Work; None. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/921
https://github.com/su2code/SU2/pull/921:207,Modifiability,config,config,207,"## Proposed Changes; I found two bugs that lead to crashes when trying to restart a shape optimization problem:. 1. The python code still uses the deprecated `has_key` function for dicts.; 2. If the default config file is used in the python scripts, then the aerodynamic coefficients aren't saved anywhere even if `aerodynamics` is called. You can reproduce the bugs using the following MWE:. #### Minimal working example. As per the documentation, you should be able to restart a previous shape optimization problem with a command like:; ```; python shape_optimization.py -f turb_SA_RAE2822.cfg -r project.pkl; ```; where the `-r` command specifies a pickle files with the saved project state from a previous run. I checked the problem on the [RAE2822 constrained optimization tutorial](https://su2code.github.io/tutorials/Turbulent_2D_Constrained_RAE2822/). You can download the files using the instructions on that page. In order to reproduce the bug, run the following chain of commands:. 1. As per the tutorial, run `SU2_GEO turb_SA_RAE2822.cfg`; 2. Modify the `turb_SA_RAE2822.cfg` file to specify that `OPT_ITERATIONS=1`; 3. Run `python $SU2_RUN/shape_optimization.py -f turb_SA_RAE2822.cfg`; 4. Modify the `turb_SA_RAE2822.cfg` file to specify that `OPT_ITERATIONS=2`; 5. Run `python $SU2_RUN/shape_optimization.py -f turb_SA_RAE2822.cfg -r project.pkl`. ## Remaining work. This should be covered by a test case. The problem I used takes a bit of time to compute, even using just the restart. Is there an cheaper shape optimization problem that could run quickly as a test case?. ## Related Work; None. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/921
https://github.com/su2code/SU2/pull/921:90,Performance,optimiz,optimization,90,"## Proposed Changes; I found two bugs that lead to crashes when trying to restart a shape optimization problem:. 1. The python code still uses the deprecated `has_key` function for dicts.; 2. If the default config file is used in the python scripts, then the aerodynamic coefficients aren't saved anywhere even if `aerodynamics` is called. You can reproduce the bugs using the following MWE:. #### Minimal working example. As per the documentation, you should be able to restart a previous shape optimization problem with a command like:; ```; python shape_optimization.py -f turb_SA_RAE2822.cfg -r project.pkl; ```; where the `-r` command specifies a pickle files with the saved project state from a previous run. I checked the problem on the [RAE2822 constrained optimization tutorial](https://su2code.github.io/tutorials/Turbulent_2D_Constrained_RAE2822/). You can download the files using the instructions on that page. In order to reproduce the bug, run the following chain of commands:. 1. As per the tutorial, run `SU2_GEO turb_SA_RAE2822.cfg`; 2. Modify the `turb_SA_RAE2822.cfg` file to specify that `OPT_ITERATIONS=1`; 3. Run `python $SU2_RUN/shape_optimization.py -f turb_SA_RAE2822.cfg`; 4. Modify the `turb_SA_RAE2822.cfg` file to specify that `OPT_ITERATIONS=2`; 5. Run `python $SU2_RUN/shape_optimization.py -f turb_SA_RAE2822.cfg -r project.pkl`. ## Remaining work. This should be covered by a test case. The problem I used takes a bit of time to compute, even using just the restart. Is there an cheaper shape optimization problem that could run quickly as a test case?. ## Related Work; None. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/921
https://github.com/su2code/SU2/pull/921:496,Performance,optimiz,optimization,496,"## Proposed Changes; I found two bugs that lead to crashes when trying to restart a shape optimization problem:. 1. The python code still uses the deprecated `has_key` function for dicts.; 2. If the default config file is used in the python scripts, then the aerodynamic coefficients aren't saved anywhere even if `aerodynamics` is called. You can reproduce the bugs using the following MWE:. #### Minimal working example. As per the documentation, you should be able to restart a previous shape optimization problem with a command like:; ```; python shape_optimization.py -f turb_SA_RAE2822.cfg -r project.pkl; ```; where the `-r` command specifies a pickle files with the saved project state from a previous run. I checked the problem on the [RAE2822 constrained optimization tutorial](https://su2code.github.io/tutorials/Turbulent_2D_Constrained_RAE2822/). You can download the files using the instructions on that page. In order to reproduce the bug, run the following chain of commands:. 1. As per the tutorial, run `SU2_GEO turb_SA_RAE2822.cfg`; 2. Modify the `turb_SA_RAE2822.cfg` file to specify that `OPT_ITERATIONS=1`; 3. Run `python $SU2_RUN/shape_optimization.py -f turb_SA_RAE2822.cfg`; 4. Modify the `turb_SA_RAE2822.cfg` file to specify that `OPT_ITERATIONS=2`; 5. Run `python $SU2_RUN/shape_optimization.py -f turb_SA_RAE2822.cfg -r project.pkl`. ## Remaining work. This should be covered by a test case. The problem I used takes a bit of time to compute, even using just the restart. Is there an cheaper shape optimization problem that could run quickly as a test case?. ## Related Work; None. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/921
https://github.com/su2code/SU2/pull/921:765,Performance,optimiz,optimization,765,"## Proposed Changes; I found two bugs that lead to crashes when trying to restart a shape optimization problem:. 1. The python code still uses the deprecated `has_key` function for dicts.; 2. If the default config file is used in the python scripts, then the aerodynamic coefficients aren't saved anywhere even if `aerodynamics` is called. You can reproduce the bugs using the following MWE:. #### Minimal working example. As per the documentation, you should be able to restart a previous shape optimization problem with a command like:; ```; python shape_optimization.py -f turb_SA_RAE2822.cfg -r project.pkl; ```; where the `-r` command specifies a pickle files with the saved project state from a previous run. I checked the problem on the [RAE2822 constrained optimization tutorial](https://su2code.github.io/tutorials/Turbulent_2D_Constrained_RAE2822/). You can download the files using the instructions on that page. In order to reproduce the bug, run the following chain of commands:. 1. As per the tutorial, run `SU2_GEO turb_SA_RAE2822.cfg`; 2. Modify the `turb_SA_RAE2822.cfg` file to specify that `OPT_ITERATIONS=1`; 3. Run `python $SU2_RUN/shape_optimization.py -f turb_SA_RAE2822.cfg`; 4. Modify the `turb_SA_RAE2822.cfg` file to specify that `OPT_ITERATIONS=2`; 5. Run `python $SU2_RUN/shape_optimization.py -f turb_SA_RAE2822.cfg -r project.pkl`. ## Remaining work. This should be covered by a test case. The problem I used takes a bit of time to compute, even using just the restart. Is there an cheaper shape optimization problem that could run quickly as a test case?. ## Related Work; None. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/921
https://github.com/su2code/SU2/pull/921:1527,Performance,optimiz,optimization,1527,"` is called. You can reproduce the bugs using the following MWE:. #### Minimal working example. As per the documentation, you should be able to restart a previous shape optimization problem with a command like:; ```; python shape_optimization.py -f turb_SA_RAE2822.cfg -r project.pkl; ```; where the `-r` command specifies a pickle files with the saved project state from a previous run. I checked the problem on the [RAE2822 constrained optimization tutorial](https://su2code.github.io/tutorials/Turbulent_2D_Constrained_RAE2822/). You can download the files using the instructions on that page. In order to reproduce the bug, run the following chain of commands:. 1. As per the tutorial, run `SU2_GEO turb_SA_RAE2822.cfg`; 2. Modify the `turb_SA_RAE2822.cfg` file to specify that `OPT_ITERATIONS=1`; 3. Run `python $SU2_RUN/shape_optimization.py -f turb_SA_RAE2822.cfg`; 4. Modify the `turb_SA_RAE2822.cfg` file to specify that `OPT_ITERATIONS=2`; 5. Run `python $SU2_RUN/shape_optimization.py -f turb_SA_RAE2822.cfg -r project.pkl`. ## Remaining work. This should be covered by a test case. The problem I used takes a bit of time to compute, even using just the restart. Is there an cheaper shape optimization problem that could run quickly as a test case?. ## Related Work; None. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/921
https://github.com/su2code/SU2/pull/921:1410,Testability,test,test,1410,"` is called. You can reproduce the bugs using the following MWE:. #### Minimal working example. As per the documentation, you should be able to restart a previous shape optimization problem with a command like:; ```; python shape_optimization.py -f turb_SA_RAE2822.cfg -r project.pkl; ```; where the `-r` command specifies a pickle files with the saved project state from a previous run. I checked the problem on the [RAE2822 constrained optimization tutorial](https://su2code.github.io/tutorials/Turbulent_2D_Constrained_RAE2822/). You can download the files using the instructions on that page. In order to reproduce the bug, run the following chain of commands:. 1. As per the tutorial, run `SU2_GEO turb_SA_RAE2822.cfg`; 2. Modify the `turb_SA_RAE2822.cfg` file to specify that `OPT_ITERATIONS=1`; 3. Run `python $SU2_RUN/shape_optimization.py -f turb_SA_RAE2822.cfg`; 4. Modify the `turb_SA_RAE2822.cfg` file to specify that `OPT_ITERATIONS=2`; 5. Run `python $SU2_RUN/shape_optimization.py -f turb_SA_RAE2822.cfg -r project.pkl`. ## Remaining work. This should be covered by a test case. The problem I used takes a bit of time to compute, even using just the restart. Is there an cheaper shape optimization problem that could run quickly as a test case?. ## Related Work; None. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/921
https://github.com/su2code/SU2/pull/921:1576,Testability,test,test,1576,"` is called. You can reproduce the bugs using the following MWE:. #### Minimal working example. As per the documentation, you should be able to restart a previous shape optimization problem with a command like:; ```; python shape_optimization.py -f turb_SA_RAE2822.cfg -r project.pkl; ```; where the `-r` command specifies a pickle files with the saved project state from a previous run. I checked the problem on the [RAE2822 constrained optimization tutorial](https://su2code.github.io/tutorials/Turbulent_2D_Constrained_RAE2822/). You can download the files using the instructions on that page. In order to reproduce the bug, run the following chain of commands:. 1. As per the tutorial, run `SU2_GEO turb_SA_RAE2822.cfg`; 2. Modify the `turb_SA_RAE2822.cfg` file to specify that `OPT_ITERATIONS=1`; 3. Run `python $SU2_RUN/shape_optimization.py -f turb_SA_RAE2822.cfg`; 4. Modify the `turb_SA_RAE2822.cfg` file to specify that `OPT_ITERATIONS=2`; 5. Run `python $SU2_RUN/shape_optimization.py -f turb_SA_RAE2822.cfg -r project.pkl`. ## Remaining work. This should be covered by a test case. The problem I used takes a bit of time to compute, even using just the restart. Is there an cheaper shape optimization problem that could run quickly as a test case?. ## Related Work; None. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/921
https://github.com/su2code/SU2/pull/921:2161,Testability,test,test,2161,"` is called. You can reproduce the bugs using the following MWE:. #### Minimal working example. As per the documentation, you should be able to restart a previous shape optimization problem with a command like:; ```; python shape_optimization.py -f turb_SA_RAE2822.cfg -r project.pkl; ```; where the `-r` command specifies a pickle files with the saved project state from a previous run. I checked the problem on the [RAE2822 constrained optimization tutorial](https://su2code.github.io/tutorials/Turbulent_2D_Constrained_RAE2822/). You can download the files using the instructions on that page. In order to reproduce the bug, run the following chain of commands:. 1. As per the tutorial, run `SU2_GEO turb_SA_RAE2822.cfg`; 2. Modify the `turb_SA_RAE2822.cfg` file to specify that `OPT_ITERATIONS=1`; 3. Run `python $SU2_RUN/shape_optimization.py -f turb_SA_RAE2822.cfg`; 4. Modify the `turb_SA_RAE2822.cfg` file to specify that `OPT_ITERATIONS=2`; 5. Run `python $SU2_RUN/shape_optimization.py -f turb_SA_RAE2822.cfg -r project.pkl`. ## Remaining work. This should be covered by a test case. The problem I used takes a bit of time to compute, even using just the restart. Is there an cheaper shape optimization problem that could run quickly as a test case?. ## Related Work; None. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/921
https://github.com/su2code/SU2/pull/921:1783,Usability,guid,guide,1783,"` is called. You can reproduce the bugs using the following MWE:. #### Minimal working example. As per the documentation, you should be able to restart a previous shape optimization problem with a command like:; ```; python shape_optimization.py -f turb_SA_RAE2822.cfg -r project.pkl; ```; where the `-r` command specifies a pickle files with the saved project state from a previous run. I checked the problem on the [RAE2822 constrained optimization tutorial](https://su2code.github.io/tutorials/Turbulent_2D_Constrained_RAE2822/). You can download the files using the instructions on that page. In order to reproduce the bug, run the following chain of commands:. 1. As per the tutorial, run `SU2_GEO turb_SA_RAE2822.cfg`; 2. Modify the `turb_SA_RAE2822.cfg` file to specify that `OPT_ITERATIONS=1`; 3. Run `python $SU2_RUN/shape_optimization.py -f turb_SA_RAE2822.cfg`; 4. Modify the `turb_SA_RAE2822.cfg` file to specify that `OPT_ITERATIONS=2`; 5. Run `python $SU2_RUN/shape_optimization.py -f turb_SA_RAE2822.cfg -r project.pkl`. ## Remaining work. This should be covered by a test case. The problem I used takes a bit of time to compute, even using just the restart. Is there an cheaper shape optimization problem that could run quickly as a test case?. ## Related Work; None. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/921
https://github.com/su2code/SU2/pull/922:526,Availability,robust,robust,526,"## Proposed Changes. This is a draft PR to discuss and document a much needed overhaul of the shape optimization features in SU2. There have been significant improvements to the main code base (for example, python wrapper integration, the new output structure, new mesh solver etc.) which haven't been leveraged by the shape optimization structure of SU2. . The main idea behind this overhaul is to move as much of the functionality of the current shape optimization framework to python. This creates a more user-friendly and robust interface for defining design variables and constraints. Its easy to make that claim, but let me elucidate it with an example:. > Suppose I am trying to optimize a wing for a given flight condition but I want more design freedom than altering the airfoil shapes along the wing using FFDs. I want to be able to control wing span, taper ratio, dihedral angle, twist, and any number of other geometrical representations of the wing. Currently, I would have to create a new Design Variable (DV) for most of those variables. If anyone has tried this, they know it is a tedious task with having to make alterations in various parts of the code.; >; > But all of these design variables can be represented by aggregations of FFD point movements. The span of the wing can be controlled by constraining the movement of FFD points in the y-direction to be proportional to their y coordinate. The current twist variable does a similar aggregation, at each twist location it rotates the corresponding 4 FFD points by the given angle. ; >; >These design variables could be represented by simple python functions that take in a set of FFD points and aggregate their movement in the desired way. All this can be done without any incision into the C++ code, given a python interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/922
https://github.com/su2code/SU2/pull/922:2632,Availability,robust,robust,2632,"ython functions that take in a set of FFD points and aggregate their movement in the desired way. All this can be done without any incision into the C++ code, given a python interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't been updated for a while. For example, SU2_GEO is a bloated wrapper c++ script that calls a couple of CGeometry/CSurfaceMovement functions. The calling of these functions could be easily ported to python and increase the functionality of the Python Wrapper interface. . Some of the specific things I want to do in this PR:. 1. Refactor SU2_GEO such that all its functionality can be performed in python (in progress); 2. Add a generalized thickness constraint (in progress); 3. Be able to do multiple types of geometry evaluation (for example wing+fuselage); 4. Expose some of the mesh deformation functions to python to allow for robust design variable definition; 5. Perform all of the shape optimization using the in-memory python scripts; 6. Intelligent handling of solution divergences that doesn't break the optimization; 7. Better way to define multipoint optimizations; 8. Better multi-objective optimization definition (#913 might be helpful in this); 9. Simplify the multitude of shape optimization options (#733). As you can probably tell, a lot of my examples and motivations revolve around aerospace applications. So while I try and make a general framework that is robust, I might not be thinking in a broad enough fashion. I would love to get input from the community for any functionality that they might want to see in this framework. The more robust this is, the more widely useful it will be. I am also a newbie to the python wrapper world of SU2. If there are any glaring road blocks or things that have been tried before but failed, please let me know. ; ; ## Related Work; #733 . ## PR Checkli",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/922
https://github.com/su2code/SU2/pull/922:3180,Availability,robust,robust,3180,"asily ported to python and increase the functionality of the Python Wrapper interface. . Some of the specific things I want to do in this PR:. 1. Refactor SU2_GEO such that all its functionality can be performed in python (in progress); 2. Add a generalized thickness constraint (in progress); 3. Be able to do multiple types of geometry evaluation (for example wing+fuselage); 4. Expose some of the mesh deformation functions to python to allow for robust design variable definition; 5. Perform all of the shape optimization using the in-memory python scripts; 6. Intelligent handling of solution divergences that doesn't break the optimization; 7. Better way to define multipoint optimizations; 8. Better multi-objective optimization definition (#913 might be helpful in this); 9. Simplify the multitude of shape optimization options (#733). As you can probably tell, a lot of my examples and motivations revolve around aerospace applications. So while I try and make a general framework that is robust, I might not be thinking in a broad enough fashion. I would love to get input from the community for any functionality that they might want to see in this framework. The more robust this is, the more widely useful it will be. I am also a newbie to the python wrapper world of SU2. If there are any glaring road blocks or things that have been tried before but failed, please let me know. ; ; ## Related Work; #733 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/922
https://github.com/su2code/SU2/pull/922:3362,Availability,robust,robust,3362," PR:. 1. Refactor SU2_GEO such that all its functionality can be performed in python (in progress); 2. Add a generalized thickness constraint (in progress); 3. Be able to do multiple types of geometry evaluation (for example wing+fuselage); 4. Expose some of the mesh deformation functions to python to allow for robust design variable definition; 5. Perform all of the shape optimization using the in-memory python scripts; 6. Intelligent handling of solution divergences that doesn't break the optimization; 7. Better way to define multipoint optimizations; 8. Better multi-objective optimization definition (#913 might be helpful in this); 9. Simplify the multitude of shape optimization options (#733). As you can probably tell, a lot of my examples and motivations revolve around aerospace applications. So while I try and make a general framework that is robust, I might not be thinking in a broad enough fashion. I would love to get input from the community for any functionality that they might want to see in this framework. The more robust this is, the more widely useful it will be. I am also a newbie to the python wrapper world of SU2. If there are any glaring road blocks or things that have been tried before but failed, please let me know. ; ; ## Related Work; #733 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/922
https://github.com/su2code/SU2/pull/922:222,Deployability,integrat,integration,222,"## Proposed Changes. This is a draft PR to discuss and document a much needed overhaul of the shape optimization features in SU2. There have been significant improvements to the main code base (for example, python wrapper integration, the new output structure, new mesh solver etc.) which haven't been leveraged by the shape optimization structure of SU2. . The main idea behind this overhaul is to move as much of the functionality of the current shape optimization framework to python. This creates a more user-friendly and robust interface for defining design variables and constraints. Its easy to make that claim, but let me elucidate it with an example:. > Suppose I am trying to optimize a wing for a given flight condition but I want more design freedom than altering the airfoil shapes along the wing using FFDs. I want to be able to control wing span, taper ratio, dihedral angle, twist, and any number of other geometrical representations of the wing. Currently, I would have to create a new Design Variable (DV) for most of those variables. If anyone has tried this, they know it is a tedious task with having to make alterations in various parts of the code.; >; > But all of these design variables can be represented by aggregations of FFD point movements. The span of the wing can be controlled by constraining the movement of FFD points in the y-direction to be proportional to their y coordinate. The current twist variable does a similar aggregation, at each twist location it rotates the corresponding 4 FFD points by the given angle. ; >; >These design variables could be represented by simple python functions that take in a set of FFD points and aggregate their movement in the desired way. All this can be done without any incision into the C++ code, given a python interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/922
https://github.com/su2code/SU2/pull/922:2006,Deployability,update,updated,2006,"g. Currently, I would have to create a new Design Variable (DV) for most of those variables. If anyone has tried this, they know it is a tedious task with having to make alterations in various parts of the code.; >; > But all of these design variables can be represented by aggregations of FFD point movements. The span of the wing can be controlled by constraining the movement of FFD points in the y-direction to be proportional to their y coordinate. The current twist variable does a similar aggregation, at each twist location it rotates the corresponding 4 FFD points by the given angle. ; >; >These design variables could be represented by simple python functions that take in a set of FFD points and aggregate their movement in the desired way. All this can be done without any incision into the C++ code, given a python interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't been updated for a while. For example, SU2_GEO is a bloated wrapper c++ script that calls a couple of CGeometry/CSurfaceMovement functions. The calling of these functions could be easily ported to python and increase the functionality of the Python Wrapper interface. . Some of the specific things I want to do in this PR:. 1. Refactor SU2_GEO such that all its functionality can be performed in python (in progress); 2. Add a generalized thickness constraint (in progress); 3. Be able to do multiple types of geometry evaluation (for example wing+fuselage); 4. Expose some of the mesh deformation functions to python to allow for robust design variable definition; 5. Perform all of the shape optimization using the in-memory python scripts; 6. Intelligent handling of solution divergences that doesn't break the optimization; 7. Better way to define multipoint optimizations; 8. Better multi-objective optimization definition (#913 might be helpful in this);",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/922
https://github.com/su2code/SU2/pull/922:4226,Deployability,update,updated,4226," PR:. 1. Refactor SU2_GEO such that all its functionality can be performed in python (in progress); 2. Add a generalized thickness constraint (in progress); 3. Be able to do multiple types of geometry evaluation (for example wing+fuselage); 4. Expose some of the mesh deformation functions to python to allow for robust design variable definition; 5. Perform all of the shape optimization using the in-memory python scripts; 6. Intelligent handling of solution divergences that doesn't break the optimization; 7. Better way to define multipoint optimizations; 8. Better multi-objective optimization definition (#913 might be helpful in this); 9. Simplify the multitude of shape optimization options (#733). As you can probably tell, a lot of my examples and motivations revolve around aerospace applications. So while I try and make a general framework that is robust, I might not be thinking in a broad enough fashion. I would love to get input from the community for any functionality that they might want to see in this framework. The more robust this is, the more widely useful it will be. I am also a newbie to the python wrapper world of SU2. If there are any glaring road blocks or things that have been tried before but failed, please let me know. ; ; ## Related Work; #733 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/922
https://github.com/su2code/SU2/pull/922:214,Integrability,wrap,wrapper,214,"## Proposed Changes. This is a draft PR to discuss and document a much needed overhaul of the shape optimization features in SU2. There have been significant improvements to the main code base (for example, python wrapper integration, the new output structure, new mesh solver etc.) which haven't been leveraged by the shape optimization structure of SU2. . The main idea behind this overhaul is to move as much of the functionality of the current shape optimization framework to python. This creates a more user-friendly and robust interface for defining design variables and constraints. Its easy to make that claim, but let me elucidate it with an example:. > Suppose I am trying to optimize a wing for a given flight condition but I want more design freedom than altering the airfoil shapes along the wing using FFDs. I want to be able to control wing span, taper ratio, dihedral angle, twist, and any number of other geometrical representations of the wing. Currently, I would have to create a new Design Variable (DV) for most of those variables. If anyone has tried this, they know it is a tedious task with having to make alterations in various parts of the code.; >; > But all of these design variables can be represented by aggregations of FFD point movements. The span of the wing can be controlled by constraining the movement of FFD points in the y-direction to be proportional to their y coordinate. The current twist variable does a similar aggregation, at each twist location it rotates the corresponding 4 FFD points by the given angle. ; >; >These design variables could be represented by simple python functions that take in a set of FFD points and aggregate their movement in the desired way. All this can be done without any incision into the C++ code, given a python interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/922
https://github.com/su2code/SU2/pull/922:222,Integrability,integrat,integration,222,"## Proposed Changes. This is a draft PR to discuss and document a much needed overhaul of the shape optimization features in SU2. There have been significant improvements to the main code base (for example, python wrapper integration, the new output structure, new mesh solver etc.) which haven't been leveraged by the shape optimization structure of SU2. . The main idea behind this overhaul is to move as much of the functionality of the current shape optimization framework to python. This creates a more user-friendly and robust interface for defining design variables and constraints. Its easy to make that claim, but let me elucidate it with an example:. > Suppose I am trying to optimize a wing for a given flight condition but I want more design freedom than altering the airfoil shapes along the wing using FFDs. I want to be able to control wing span, taper ratio, dihedral angle, twist, and any number of other geometrical representations of the wing. Currently, I would have to create a new Design Variable (DV) for most of those variables. If anyone has tried this, they know it is a tedious task with having to make alterations in various parts of the code.; >; > But all of these design variables can be represented by aggregations of FFD point movements. The span of the wing can be controlled by constraining the movement of FFD points in the y-direction to be proportional to their y coordinate. The current twist variable does a similar aggregation, at each twist location it rotates the corresponding 4 FFD points by the given angle. ; >; >These design variables could be represented by simple python functions that take in a set of FFD points and aggregate their movement in the desired way. All this can be done without any incision into the C++ code, given a python interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/922
https://github.com/su2code/SU2/pull/922:533,Integrability,interface,interface,533,"## Proposed Changes. This is a draft PR to discuss and document a much needed overhaul of the shape optimization features in SU2. There have been significant improvements to the main code base (for example, python wrapper integration, the new output structure, new mesh solver etc.) which haven't been leveraged by the shape optimization structure of SU2. . The main idea behind this overhaul is to move as much of the functionality of the current shape optimization framework to python. This creates a more user-friendly and robust interface for defining design variables and constraints. Its easy to make that claim, but let me elucidate it with an example:. > Suppose I am trying to optimize a wing for a given flight condition but I want more design freedom than altering the airfoil shapes along the wing using FFDs. I want to be able to control wing span, taper ratio, dihedral angle, twist, and any number of other geometrical representations of the wing. Currently, I would have to create a new Design Variable (DV) for most of those variables. If anyone has tried this, they know it is a tedious task with having to make alterations in various parts of the code.; >; > But all of these design variables can be represented by aggregations of FFD point movements. The span of the wing can be controlled by constraining the movement of FFD points in the y-direction to be proportional to their y coordinate. The current twist variable does a similar aggregation, at each twist location it rotates the corresponding 4 FFD points by the given angle. ; >; >These design variables could be represented by simple python functions that take in a set of FFD points and aggregate their movement in the desired way. All this can be done without any incision into the C++ code, given a python interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/922
https://github.com/su2code/SU2/pull/922:1789,Integrability,interface,interface,1789,"he wing using FFDs. I want to be able to control wing span, taper ratio, dihedral angle, twist, and any number of other geometrical representations of the wing. Currently, I would have to create a new Design Variable (DV) for most of those variables. If anyone has tried this, they know it is a tedious task with having to make alterations in various parts of the code.; >; > But all of these design variables can be represented by aggregations of FFD point movements. The span of the wing can be controlled by constraining the movement of FFD points in the y-direction to be proportional to their y coordinate. The current twist variable does a similar aggregation, at each twist location it rotates the corresponding 4 FFD points by the given angle. ; >; >These design variables could be represented by simple python functions that take in a set of FFD points and aggregate their movement in the desired way. All this can be done without any incision into the C++ code, given a python interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't been updated for a while. For example, SU2_GEO is a bloated wrapper c++ script that calls a couple of CGeometry/CSurfaceMovement functions. The calling of these functions could be easily ported to python and increase the functionality of the Python Wrapper interface. . Some of the specific things I want to do in this PR:. 1. Refactor SU2_GEO such that all its functionality can be performed in python (in progress); 2. Add a generalized thickness constraint (in progress); 3. Be able to do multiple types of geometry evaluation (for example wing+fuselage); 4. Expose some of the mesh deformation functions to python to allow for robust design variable definition; 5. Perform all of the shape optimization using the in-memory python scripts; 6. Intelligent handling of solution divergences that doesn'",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/922
https://github.com/su2code/SU2/pull/922:2061,Integrability,wrap,wrapper,2061," know it is a tedious task with having to make alterations in various parts of the code.; >; > But all of these design variables can be represented by aggregations of FFD point movements. The span of the wing can be controlled by constraining the movement of FFD points in the y-direction to be proportional to their y coordinate. The current twist variable does a similar aggregation, at each twist location it rotates the corresponding 4 FFD points by the given angle. ; >; >These design variables could be represented by simple python functions that take in a set of FFD points and aggregate their movement in the desired way. All this can be done without any incision into the C++ code, given a python interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't been updated for a while. For example, SU2_GEO is a bloated wrapper c++ script that calls a couple of CGeometry/CSurfaceMovement functions. The calling of these functions could be easily ported to python and increase the functionality of the Python Wrapper interface. . Some of the specific things I want to do in this PR:. 1. Refactor SU2_GEO such that all its functionality can be performed in python (in progress); 2. Add a generalized thickness constraint (in progress); 3. Be able to do multiple types of geometry evaluation (for example wing+fuselage); 4. Expose some of the mesh deformation functions to python to allow for robust design variable definition; 5. Perform all of the shape optimization using the in-memory python scripts; 6. Intelligent handling of solution divergences that doesn't break the optimization; 7. Better way to define multipoint optimizations; 8. Better multi-objective optimization definition (#913 might be helpful in this); 9. Simplify the multitude of shape optimization options (#733). As you can probably tell, a lot of my examples and motiva",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/922
https://github.com/su2code/SU2/pull/922:2250,Integrability,Wrap,Wrapper,2250,"riables can be represented by aggregations of FFD point movements. The span of the wing can be controlled by constraining the movement of FFD points in the y-direction to be proportional to their y coordinate. The current twist variable does a similar aggregation, at each twist location it rotates the corresponding 4 FFD points by the given angle. ; >; >These design variables could be represented by simple python functions that take in a set of FFD points and aggregate their movement in the desired way. All this can be done without any incision into the C++ code, given a python interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't been updated for a while. For example, SU2_GEO is a bloated wrapper c++ script that calls a couple of CGeometry/CSurfaceMovement functions. The calling of these functions could be easily ported to python and increase the functionality of the Python Wrapper interface. . Some of the specific things I want to do in this PR:. 1. Refactor SU2_GEO such that all its functionality can be performed in python (in progress); 2. Add a generalized thickness constraint (in progress); 3. Be able to do multiple types of geometry evaluation (for example wing+fuselage); 4. Expose some of the mesh deformation functions to python to allow for robust design variable definition; 5. Perform all of the shape optimization using the in-memory python scripts; 6. Intelligent handling of solution divergences that doesn't break the optimization; 7. Better way to define multipoint optimizations; 8. Better multi-objective optimization definition (#913 might be helpful in this); 9. Simplify the multitude of shape optimization options (#733). As you can probably tell, a lot of my examples and motivations revolve around aerospace applications. So while I try and make a general framework that is robust, I might not be t",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/922
https://github.com/su2code/SU2/pull/922:2258,Integrability,interface,interface,2258,"riables can be represented by aggregations of FFD point movements. The span of the wing can be controlled by constraining the movement of FFD points in the y-direction to be proportional to their y coordinate. The current twist variable does a similar aggregation, at each twist location it rotates the corresponding 4 FFD points by the given angle. ; >; >These design variables could be represented by simple python functions that take in a set of FFD points and aggregate their movement in the desired way. All this can be done without any incision into the C++ code, given a python interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't been updated for a while. For example, SU2_GEO is a bloated wrapper c++ script that calls a couple of CGeometry/CSurfaceMovement functions. The calling of these functions could be easily ported to python and increase the functionality of the Python Wrapper interface. . Some of the specific things I want to do in this PR:. 1. Refactor SU2_GEO such that all its functionality can be performed in python (in progress); 2. Add a generalized thickness constraint (in progress); 3. Be able to do multiple types of geometry evaluation (for example wing+fuselage); 4. Expose some of the mesh deformation functions to python to allow for robust design variable definition; 5. Perform all of the shape optimization using the in-memory python scripts; 6. Intelligent handling of solution divergences that doesn't break the optimization; 7. Better way to define multipoint optimizations; 8. Better multi-objective optimization definition (#913 might be helpful in this); 9. Simplify the multitude of shape optimization options (#733). As you can probably tell, a lot of my examples and motivations revolve around aerospace applications. So while I try and make a general framework that is robust, I might not be t",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/922
https://github.com/su2code/SU2/pull/922:3446,Integrability,wrap,wrapper,3446," PR:. 1. Refactor SU2_GEO such that all its functionality can be performed in python (in progress); 2. Add a generalized thickness constraint (in progress); 3. Be able to do multiple types of geometry evaluation (for example wing+fuselage); 4. Expose some of the mesh deformation functions to python to allow for robust design variable definition; 5. Perform all of the shape optimization using the in-memory python scripts; 6. Intelligent handling of solution divergences that doesn't break the optimization; 7. Better way to define multipoint optimizations; 8. Better multi-objective optimization definition (#913 might be helpful in this); 9. Simplify the multitude of shape optimization options (#733). As you can probably tell, a lot of my examples and motivations revolve around aerospace applications. So while I try and make a general framework that is robust, I might not be thinking in a broad enough fashion. I would love to get input from the community for any functionality that they might want to see in this framework. The more robust this is, the more widely useful it will be. I am also a newbie to the python wrapper world of SU2. If there are any glaring road blocks or things that have been tried before but failed, please let me know. ; ; ## Related Work; #733 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/922
https://github.com/su2code/SU2/pull/922:563,Modifiability,variab,variables,563,"## Proposed Changes. This is a draft PR to discuss and document a much needed overhaul of the shape optimization features in SU2. There have been significant improvements to the main code base (for example, python wrapper integration, the new output structure, new mesh solver etc.) which haven't been leveraged by the shape optimization structure of SU2. . The main idea behind this overhaul is to move as much of the functionality of the current shape optimization framework to python. This creates a more user-friendly and robust interface for defining design variables and constraints. Its easy to make that claim, but let me elucidate it with an example:. > Suppose I am trying to optimize a wing for a given flight condition but I want more design freedom than altering the airfoil shapes along the wing using FFDs. I want to be able to control wing span, taper ratio, dihedral angle, twist, and any number of other geometrical representations of the wing. Currently, I would have to create a new Design Variable (DV) for most of those variables. If anyone has tried this, they know it is a tedious task with having to make alterations in various parts of the code.; >; > But all of these design variables can be represented by aggregations of FFD point movements. The span of the wing can be controlled by constraining the movement of FFD points in the y-direction to be proportional to their y coordinate. The current twist variable does a similar aggregation, at each twist location it rotates the corresponding 4 FFD points by the given angle. ; >; >These design variables could be represented by simple python functions that take in a set of FFD points and aggregate their movement in the desired way. All this can be done without any incision into the C++ code, given a python interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/922
https://github.com/su2code/SU2/pull/922:1010,Modifiability,Variab,Variable,1010,"osed Changes. This is a draft PR to discuss and document a much needed overhaul of the shape optimization features in SU2. There have been significant improvements to the main code base (for example, python wrapper integration, the new output structure, new mesh solver etc.) which haven't been leveraged by the shape optimization structure of SU2. . The main idea behind this overhaul is to move as much of the functionality of the current shape optimization framework to python. This creates a more user-friendly and robust interface for defining design variables and constraints. Its easy to make that claim, but let me elucidate it with an example:. > Suppose I am trying to optimize a wing for a given flight condition but I want more design freedom than altering the airfoil shapes along the wing using FFDs. I want to be able to control wing span, taper ratio, dihedral angle, twist, and any number of other geometrical representations of the wing. Currently, I would have to create a new Design Variable (DV) for most of those variables. If anyone has tried this, they know it is a tedious task with having to make alterations in various parts of the code.; >; > But all of these design variables can be represented by aggregations of FFD point movements. The span of the wing can be controlled by constraining the movement of FFD points in the y-direction to be proportional to their y coordinate. The current twist variable does a similar aggregation, at each twist location it rotates the corresponding 4 FFD points by the given angle. ; >; >These design variables could be represented by simple python functions that take in a set of FFD points and aggregate their movement in the desired way. All this can be done without any incision into the C++ code, given a python interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't been u",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/922
https://github.com/su2code/SU2/pull/922:1042,Modifiability,variab,variables,1042,"osed Changes. This is a draft PR to discuss and document a much needed overhaul of the shape optimization features in SU2. There have been significant improvements to the main code base (for example, python wrapper integration, the new output structure, new mesh solver etc.) which haven't been leveraged by the shape optimization structure of SU2. . The main idea behind this overhaul is to move as much of the functionality of the current shape optimization framework to python. This creates a more user-friendly and robust interface for defining design variables and constraints. Its easy to make that claim, but let me elucidate it with an example:. > Suppose I am trying to optimize a wing for a given flight condition but I want more design freedom than altering the airfoil shapes along the wing using FFDs. I want to be able to control wing span, taper ratio, dihedral angle, twist, and any number of other geometrical representations of the wing. Currently, I would have to create a new Design Variable (DV) for most of those variables. If anyone has tried this, they know it is a tedious task with having to make alterations in various parts of the code.; >; > But all of these design variables can be represented by aggregations of FFD point movements. The span of the wing can be controlled by constraining the movement of FFD points in the y-direction to be proportional to their y coordinate. The current twist variable does a similar aggregation, at each twist location it rotates the corresponding 4 FFD points by the given angle. ; >; >These design variables could be represented by simple python functions that take in a set of FFD points and aggregate their movement in the desired way. All this can be done without any incision into the C++ code, given a python interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't been u",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/922
https://github.com/su2code/SU2/pull/922:1202,Modifiability,variab,variables,1202,"r integration, the new output structure, new mesh solver etc.) which haven't been leveraged by the shape optimization structure of SU2. . The main idea behind this overhaul is to move as much of the functionality of the current shape optimization framework to python. This creates a more user-friendly and robust interface for defining design variables and constraints. Its easy to make that claim, but let me elucidate it with an example:. > Suppose I am trying to optimize a wing for a given flight condition but I want more design freedom than altering the airfoil shapes along the wing using FFDs. I want to be able to control wing span, taper ratio, dihedral angle, twist, and any number of other geometrical representations of the wing. Currently, I would have to create a new Design Variable (DV) for most of those variables. If anyone has tried this, they know it is a tedious task with having to make alterations in various parts of the code.; >; > But all of these design variables can be represented by aggregations of FFD point movements. The span of the wing can be controlled by constraining the movement of FFD points in the y-direction to be proportional to their y coordinate. The current twist variable does a similar aggregation, at each twist location it rotates the corresponding 4 FFD points by the given angle. ; >; >These design variables could be represented by simple python functions that take in a set of FFD points and aggregate their movement in the desired way. All this can be done without any incision into the C++ code, given a python interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't been updated for a while. For example, SU2_GEO is a bloated wrapper c++ script that calls a couple of CGeometry/CSurfaceMovement functions. The calling of these functions could be easily ported to python and increase the",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/922
https://github.com/su2code/SU2/pull/922:1432,Modifiability,variab,variable,1432,"hon. This creates a more user-friendly and robust interface for defining design variables and constraints. Its easy to make that claim, but let me elucidate it with an example:. > Suppose I am trying to optimize a wing for a given flight condition but I want more design freedom than altering the airfoil shapes along the wing using FFDs. I want to be able to control wing span, taper ratio, dihedral angle, twist, and any number of other geometrical representations of the wing. Currently, I would have to create a new Design Variable (DV) for most of those variables. If anyone has tried this, they know it is a tedious task with having to make alterations in various parts of the code.; >; > But all of these design variables can be represented by aggregations of FFD point movements. The span of the wing can be controlled by constraining the movement of FFD points in the y-direction to be proportional to their y coordinate. The current twist variable does a similar aggregation, at each twist location it rotates the corresponding 4 FFD points by the given angle. ; >; >These design variables could be represented by simple python functions that take in a set of FFD points and aggregate their movement in the desired way. All this can be done without any incision into the C++ code, given a python interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't been updated for a while. For example, SU2_GEO is a bloated wrapper c++ script that calls a couple of CGeometry/CSurfaceMovement functions. The calling of these functions could be easily ported to python and increase the functionality of the Python Wrapper interface. . Some of the specific things I want to do in this PR:. 1. Refactor SU2_GEO such that all its functionality can be performed in python (in progress); 2. Add a generalized thickness constraint (in progress); 3. Be a",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/922
https://github.com/su2code/SU2/pull/922:1573,Modifiability,variab,variables,1573,"ucidate it with an example:. > Suppose I am trying to optimize a wing for a given flight condition but I want more design freedom than altering the airfoil shapes along the wing using FFDs. I want to be able to control wing span, taper ratio, dihedral angle, twist, and any number of other geometrical representations of the wing. Currently, I would have to create a new Design Variable (DV) for most of those variables. If anyone has tried this, they know it is a tedious task with having to make alterations in various parts of the code.; >; > But all of these design variables can be represented by aggregations of FFD point movements. The span of the wing can be controlled by constraining the movement of FFD points in the y-direction to be proportional to their y coordinate. The current twist variable does a similar aggregation, at each twist location it rotates the corresponding 4 FFD points by the given angle. ; >; >These design variables could be represented by simple python functions that take in a set of FFD points and aggregate their movement in the desired way. All this can be done without any incision into the C++ code, given a python interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't been updated for a while. For example, SU2_GEO is a bloated wrapper c++ script that calls a couple of CGeometry/CSurfaceMovement functions. The calling of these functions could be easily ported to python and increase the functionality of the Python Wrapper interface. . Some of the specific things I want to do in this PR:. 1. Refactor SU2_GEO such that all its functionality can be performed in python (in progress); 2. Add a generalized thickness constraint (in progress); 3. Be able to do multiple types of geometry evaluation (for example wing+fuselage); 4. Expose some of the mesh deformation functions to python to allow for r",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/922
https://github.com/su2code/SU2/pull/922:2328,Modifiability,Refactor,Refactor,2328," be proportional to their y coordinate. The current twist variable does a similar aggregation, at each twist location it rotates the corresponding 4 FFD points by the given angle. ; >; >These design variables could be represented by simple python functions that take in a set of FFD points and aggregate their movement in the desired way. All this can be done without any incision into the C++ code, given a python interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't been updated for a while. For example, SU2_GEO is a bloated wrapper c++ script that calls a couple of CGeometry/CSurfaceMovement functions. The calling of these functions could be easily ported to python and increase the functionality of the Python Wrapper interface. . Some of the specific things I want to do in this PR:. 1. Refactor SU2_GEO such that all its functionality can be performed in python (in progress); 2. Add a generalized thickness constraint (in progress); 3. Be able to do multiple types of geometry evaluation (for example wing+fuselage); 4. Expose some of the mesh deformation functions to python to allow for robust design variable definition; 5. Perform all of the shape optimization using the in-memory python scripts; 6. Intelligent handling of solution divergences that doesn't break the optimization; 7. Better way to define multipoint optimizations; 8. Better multi-objective optimization definition (#913 might be helpful in this); 9. Simplify the multitude of shape optimization options (#733). As you can probably tell, a lot of my examples and motivations revolve around aerospace applications. So while I try and make a general framework that is robust, I might not be thinking in a broad enough fashion. I would love to get input from the community for any functionality that they might want to see in this framework. The more robust this ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/922
https://github.com/su2code/SU2/pull/922:2646,Modifiability,variab,variable,2646,"ython functions that take in a set of FFD points and aggregate their movement in the desired way. All this can be done without any incision into the C++ code, given a python interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't been updated for a while. For example, SU2_GEO is a bloated wrapper c++ script that calls a couple of CGeometry/CSurfaceMovement functions. The calling of these functions could be easily ported to python and increase the functionality of the Python Wrapper interface. . Some of the specific things I want to do in this PR:. 1. Refactor SU2_GEO such that all its functionality can be performed in python (in progress); 2. Add a generalized thickness constraint (in progress); 3. Be able to do multiple types of geometry evaluation (for example wing+fuselage); 4. Expose some of the mesh deformation functions to python to allow for robust design variable definition; 5. Perform all of the shape optimization using the in-memory python scripts; 6. Intelligent handling of solution divergences that doesn't break the optimization; 7. Better way to define multipoint optimizations; 8. Better multi-objective optimization definition (#913 might be helpful in this); 9. Simplify the multitude of shape optimization options (#733). As you can probably tell, a lot of my examples and motivations revolve around aerospace applications. So while I try and make a general framework that is robust, I might not be thinking in a broad enough fashion. I would love to get input from the community for any functionality that they might want to see in this framework. The more robust this is, the more widely useful it will be. I am also a newbie to the python wrapper world of SU2. If there are any glaring road blocks or things that have been tried before but failed, please let me know. ; ; ## Related Work; #733 . ## PR Checkli",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/922
https://github.com/su2code/SU2/pull/922:100,Performance,optimiz,optimization,100,"## Proposed Changes. This is a draft PR to discuss and document a much needed overhaul of the shape optimization features in SU2. There have been significant improvements to the main code base (for example, python wrapper integration, the new output structure, new mesh solver etc.) which haven't been leveraged by the shape optimization structure of SU2. . The main idea behind this overhaul is to move as much of the functionality of the current shape optimization framework to python. This creates a more user-friendly and robust interface for defining design variables and constraints. Its easy to make that claim, but let me elucidate it with an example:. > Suppose I am trying to optimize a wing for a given flight condition but I want more design freedom than altering the airfoil shapes along the wing using FFDs. I want to be able to control wing span, taper ratio, dihedral angle, twist, and any number of other geometrical representations of the wing. Currently, I would have to create a new Design Variable (DV) for most of those variables. If anyone has tried this, they know it is a tedious task with having to make alterations in various parts of the code.; >; > But all of these design variables can be represented by aggregations of FFD point movements. The span of the wing can be controlled by constraining the movement of FFD points in the y-direction to be proportional to their y coordinate. The current twist variable does a similar aggregation, at each twist location it rotates the corresponding 4 FFD points by the given angle. ; >; >These design variables could be represented by simple python functions that take in a set of FFD points and aggregate their movement in the desired way. All this can be done without any incision into the C++ code, given a python interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/922
https://github.com/su2code/SU2/pull/922:325,Performance,optimiz,optimization,325,"## Proposed Changes. This is a draft PR to discuss and document a much needed overhaul of the shape optimization features in SU2. There have been significant improvements to the main code base (for example, python wrapper integration, the new output structure, new mesh solver etc.) which haven't been leveraged by the shape optimization structure of SU2. . The main idea behind this overhaul is to move as much of the functionality of the current shape optimization framework to python. This creates a more user-friendly and robust interface for defining design variables and constraints. Its easy to make that claim, but let me elucidate it with an example:. > Suppose I am trying to optimize a wing for a given flight condition but I want more design freedom than altering the airfoil shapes along the wing using FFDs. I want to be able to control wing span, taper ratio, dihedral angle, twist, and any number of other geometrical representations of the wing. Currently, I would have to create a new Design Variable (DV) for most of those variables. If anyone has tried this, they know it is a tedious task with having to make alterations in various parts of the code.; >; > But all of these design variables can be represented by aggregations of FFD point movements. The span of the wing can be controlled by constraining the movement of FFD points in the y-direction to be proportional to their y coordinate. The current twist variable does a similar aggregation, at each twist location it rotates the corresponding 4 FFD points by the given angle. ; >; >These design variables could be represented by simple python functions that take in a set of FFD points and aggregate their movement in the desired way. All this can be done without any incision into the C++ code, given a python interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/922
https://github.com/su2code/SU2/pull/922:454,Performance,optimiz,optimization,454,"## Proposed Changes. This is a draft PR to discuss and document a much needed overhaul of the shape optimization features in SU2. There have been significant improvements to the main code base (for example, python wrapper integration, the new output structure, new mesh solver etc.) which haven't been leveraged by the shape optimization structure of SU2. . The main idea behind this overhaul is to move as much of the functionality of the current shape optimization framework to python. This creates a more user-friendly and robust interface for defining design variables and constraints. Its easy to make that claim, but let me elucidate it with an example:. > Suppose I am trying to optimize a wing for a given flight condition but I want more design freedom than altering the airfoil shapes along the wing using FFDs. I want to be able to control wing span, taper ratio, dihedral angle, twist, and any number of other geometrical representations of the wing. Currently, I would have to create a new Design Variable (DV) for most of those variables. If anyone has tried this, they know it is a tedious task with having to make alterations in various parts of the code.; >; > But all of these design variables can be represented by aggregations of FFD point movements. The span of the wing can be controlled by constraining the movement of FFD points in the y-direction to be proportional to their y coordinate. The current twist variable does a similar aggregation, at each twist location it rotates the corresponding 4 FFD points by the given angle. ; >; >These design variables could be represented by simple python functions that take in a set of FFD points and aggregate their movement in the desired way. All this can be done without any incision into the C++ code, given a python interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/922
https://github.com/su2code/SU2/pull/922:686,Performance,optimiz,optimize,686,"## Proposed Changes. This is a draft PR to discuss and document a much needed overhaul of the shape optimization features in SU2. There have been significant improvements to the main code base (for example, python wrapper integration, the new output structure, new mesh solver etc.) which haven't been leveraged by the shape optimization structure of SU2. . The main idea behind this overhaul is to move as much of the functionality of the current shape optimization framework to python. This creates a more user-friendly and robust interface for defining design variables and constraints. Its easy to make that claim, but let me elucidate it with an example:. > Suppose I am trying to optimize a wing for a given flight condition but I want more design freedom than altering the airfoil shapes along the wing using FFDs. I want to be able to control wing span, taper ratio, dihedral angle, twist, and any number of other geometrical representations of the wing. Currently, I would have to create a new Design Variable (DV) for most of those variables. If anyone has tried this, they know it is a tedious task with having to make alterations in various parts of the code.; >; > But all of these design variables can be represented by aggregations of FFD point movements. The span of the wing can be controlled by constraining the movement of FFD points in the y-direction to be proportional to their y coordinate. The current twist variable does a similar aggregation, at each twist location it rotates the corresponding 4 FFD points by the given angle. ; >; >These design variables could be represented by simple python functions that take in a set of FFD points and aggregate their movement in the desired way. All this can be done without any incision into the C++ code, given a python interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/922
https://github.com/su2code/SU2/pull/922:2384,Performance,perform,performed,2384," be proportional to their y coordinate. The current twist variable does a similar aggregation, at each twist location it rotates the corresponding 4 FFD points by the given angle. ; >; >These design variables could be represented by simple python functions that take in a set of FFD points and aggregate their movement in the desired way. All this can be done without any incision into the C++ code, given a python interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't been updated for a while. For example, SU2_GEO is a bloated wrapper c++ script that calls a couple of CGeometry/CSurfaceMovement functions. The calling of these functions could be easily ported to python and increase the functionality of the Python Wrapper interface. . Some of the specific things I want to do in this PR:. 1. Refactor SU2_GEO such that all its functionality can be performed in python (in progress); 2. Add a generalized thickness constraint (in progress); 3. Be able to do multiple types of geometry evaluation (for example wing+fuselage); 4. Expose some of the mesh deformation functions to python to allow for robust design variable definition; 5. Perform all of the shape optimization using the in-memory python scripts; 6. Intelligent handling of solution divergences that doesn't break the optimization; 7. Better way to define multipoint optimizations; 8. Better multi-objective optimization definition (#913 might be helpful in this); 9. Simplify the multitude of shape optimization options (#733). As you can probably tell, a lot of my examples and motivations revolve around aerospace applications. So while I try and make a general framework that is robust, I might not be thinking in a broad enough fashion. I would love to get input from the community for any functionality that they might want to see in this framework. The more robust this ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/922
https://github.com/su2code/SU2/pull/922:2670,Performance,Perform,Perform,2670," way. All this can be done without any incision into the C++ code, given a python interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't been updated for a while. For example, SU2_GEO is a bloated wrapper c++ script that calls a couple of CGeometry/CSurfaceMovement functions. The calling of these functions could be easily ported to python and increase the functionality of the Python Wrapper interface. . Some of the specific things I want to do in this PR:. 1. Refactor SU2_GEO such that all its functionality can be performed in python (in progress); 2. Add a generalized thickness constraint (in progress); 3. Be able to do multiple types of geometry evaluation (for example wing+fuselage); 4. Expose some of the mesh deformation functions to python to allow for robust design variable definition; 5. Perform all of the shape optimization using the in-memory python scripts; 6. Intelligent handling of solution divergences that doesn't break the optimization; 7. Better way to define multipoint optimizations; 8. Better multi-objective optimization definition (#913 might be helpful in this); 9. Simplify the multitude of shape optimization options (#733). As you can probably tell, a lot of my examples and motivations revolve around aerospace applications. So while I try and make a general framework that is robust, I might not be thinking in a broad enough fashion. I would love to get input from the community for any functionality that they might want to see in this framework. The more robust this is, the more widely useful it will be. I am also a newbie to the python wrapper world of SU2. If there are any glaring road blocks or things that have been tried before but failed, please let me know. ; ; ## Related Work; #733 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/922
https://github.com/su2code/SU2/pull/922:2695,Performance,optimiz,optimization,2695," way. All this can be done without any incision into the C++ code, given a python interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't been updated for a while. For example, SU2_GEO is a bloated wrapper c++ script that calls a couple of CGeometry/CSurfaceMovement functions. The calling of these functions could be easily ported to python and increase the functionality of the Python Wrapper interface. . Some of the specific things I want to do in this PR:. 1. Refactor SU2_GEO such that all its functionality can be performed in python (in progress); 2. Add a generalized thickness constraint (in progress); 3. Be able to do multiple types of geometry evaluation (for example wing+fuselage); 4. Expose some of the mesh deformation functions to python to allow for robust design variable definition; 5. Perform all of the shape optimization using the in-memory python scripts; 6. Intelligent handling of solution divergences that doesn't break the optimization; 7. Better way to define multipoint optimizations; 8. Better multi-objective optimization definition (#913 might be helpful in this); 9. Simplify the multitude of shape optimization options (#733). As you can probably tell, a lot of my examples and motivations revolve around aerospace applications. So while I try and make a general framework that is robust, I might not be thinking in a broad enough fashion. I would love to get input from the community for any functionality that they might want to see in this framework. The more robust this is, the more widely useful it will be. I am also a newbie to the python wrapper world of SU2. If there are any glaring road blocks or things that have been tried before but failed, please let me know. ; ; ## Related Work; #733 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/922
https://github.com/su2code/SU2/pull/922:2815,Performance,optimiz,optimization,2815," interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't been updated for a while. For example, SU2_GEO is a bloated wrapper c++ script that calls a couple of CGeometry/CSurfaceMovement functions. The calling of these functions could be easily ported to python and increase the functionality of the Python Wrapper interface. . Some of the specific things I want to do in this PR:. 1. Refactor SU2_GEO such that all its functionality can be performed in python (in progress); 2. Add a generalized thickness constraint (in progress); 3. Be able to do multiple types of geometry evaluation (for example wing+fuselage); 4. Expose some of the mesh deformation functions to python to allow for robust design variable definition; 5. Perform all of the shape optimization using the in-memory python scripts; 6. Intelligent handling of solution divergences that doesn't break the optimization; 7. Better way to define multipoint optimizations; 8. Better multi-objective optimization definition (#913 might be helpful in this); 9. Simplify the multitude of shape optimization options (#733). As you can probably tell, a lot of my examples and motivations revolve around aerospace applications. So while I try and make a general framework that is robust, I might not be thinking in a broad enough fashion. I would love to get input from the community for any functionality that they might want to see in this framework. The more robust this is, the more widely useful it will be. I am also a newbie to the python wrapper world of SU2. If there are any glaring road blocks or things that have been tried before but failed, please let me know. ; ; ## Related Work; #733 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/922
https://github.com/su2code/SU2/pull/922:2864,Performance,optimiz,optimizations,2864,"ns and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't been updated for a while. For example, SU2_GEO is a bloated wrapper c++ script that calls a couple of CGeometry/CSurfaceMovement functions. The calling of these functions could be easily ported to python and increase the functionality of the Python Wrapper interface. . Some of the specific things I want to do in this PR:. 1. Refactor SU2_GEO such that all its functionality can be performed in python (in progress); 2. Add a generalized thickness constraint (in progress); 3. Be able to do multiple types of geometry evaluation (for example wing+fuselage); 4. Expose some of the mesh deformation functions to python to allow for robust design variable definition; 5. Perform all of the shape optimization using the in-memory python scripts; 6. Intelligent handling of solution divergences that doesn't break the optimization; 7. Better way to define multipoint optimizations; 8. Better multi-objective optimization definition (#913 might be helpful in this); 9. Simplify the multitude of shape optimization options (#733). As you can probably tell, a lot of my examples and motivations revolve around aerospace applications. So while I try and make a general framework that is robust, I might not be thinking in a broad enough fashion. I would love to get input from the community for any functionality that they might want to see in this framework. The more robust this is, the more widely useful it will be. I am also a newbie to the python wrapper world of SU2. If there are any glaring road blocks or things that have been tried before but failed, please let me know. ; ; ## Related Work; #733 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/922
https://github.com/su2code/SU2/pull/922:2905,Performance,optimiz,optimization,2905,"thon could also remove the need for some of the other SU2 modules that haven't been updated for a while. For example, SU2_GEO is a bloated wrapper c++ script that calls a couple of CGeometry/CSurfaceMovement functions. The calling of these functions could be easily ported to python and increase the functionality of the Python Wrapper interface. . Some of the specific things I want to do in this PR:. 1. Refactor SU2_GEO such that all its functionality can be performed in python (in progress); 2. Add a generalized thickness constraint (in progress); 3. Be able to do multiple types of geometry evaluation (for example wing+fuselage); 4. Expose some of the mesh deformation functions to python to allow for robust design variable definition; 5. Perform all of the shape optimization using the in-memory python scripts; 6. Intelligent handling of solution divergences that doesn't break the optimization; 7. Better way to define multipoint optimizations; 8. Better multi-objective optimization definition (#913 might be helpful in this); 9. Simplify the multitude of shape optimization options (#733). As you can probably tell, a lot of my examples and motivations revolve around aerospace applications. So while I try and make a general framework that is robust, I might not be thinking in a broad enough fashion. I would love to get input from the community for any functionality that they might want to see in this framework. The more robust this is, the more widely useful it will be. I am also a newbie to the python wrapper world of SU2. If there are any glaring road blocks or things that have been tried before but failed, please let me know. ; ; ## Related Work; #733 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; -",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/922
https://github.com/su2code/SU2/pull/922:2997,Performance,optimiz,optimization,2997,"aven't been updated for a while. For example, SU2_GEO is a bloated wrapper c++ script that calls a couple of CGeometry/CSurfaceMovement functions. The calling of these functions could be easily ported to python and increase the functionality of the Python Wrapper interface. . Some of the specific things I want to do in this PR:. 1. Refactor SU2_GEO such that all its functionality can be performed in python (in progress); 2. Add a generalized thickness constraint (in progress); 3. Be able to do multiple types of geometry evaluation (for example wing+fuselage); 4. Expose some of the mesh deformation functions to python to allow for robust design variable definition; 5. Perform all of the shape optimization using the in-memory python scripts; 6. Intelligent handling of solution divergences that doesn't break the optimization; 7. Better way to define multipoint optimizations; 8. Better multi-objective optimization definition (#913 might be helpful in this); 9. Simplify the multitude of shape optimization options (#733). As you can probably tell, a lot of my examples and motivations revolve around aerospace applications. So while I try and make a general framework that is robust, I might not be thinking in a broad enough fashion. I would love to get input from the community for any functionality that they might want to see in this framework. The more robust this is, the more widely useful it will be. I am also a newbie to the python wrapper world of SU2. If there are any glaring road blocks or things that have been tried before but failed, please let me know. ; ; ## Related Work; #733 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/922
https://github.com/su2code/SU2/pull/922:2563,Security,Expose,Expose,2563,"ython functions that take in a set of FFD points and aggregate their movement in the desired way. All this can be done without any incision into the C++ code, given a python interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't been updated for a while. For example, SU2_GEO is a bloated wrapper c++ script that calls a couple of CGeometry/CSurfaceMovement functions. The calling of these functions could be easily ported to python and increase the functionality of the Python Wrapper interface. . Some of the specific things I want to do in this PR:. 1. Refactor SU2_GEO such that all its functionality can be performed in python (in progress); 2. Add a generalized thickness constraint (in progress); 3. Be able to do multiple types of geometry evaluation (for example wing+fuselage); 4. Expose some of the mesh deformation functions to python to allow for robust design variable definition; 5. Perform all of the shape optimization using the in-memory python scripts; 6. Intelligent handling of solution divergences that doesn't break the optimization; 7. Better way to define multipoint optimizations; 8. Better multi-objective optimization definition (#913 might be helpful in this); 9. Simplify the multitude of shape optimization options (#733). As you can probably tell, a lot of my examples and motivations revolve around aerospace applications. So while I try and make a general framework that is robust, I might not be thinking in a broad enough fashion. I would love to get input from the community for any functionality that they might want to see in this framework. The more robust this is, the more widely useful it will be. I am also a newbie to the python wrapper world of SU2. If there are any glaring road blocks or things that have been tried before but failed, please let me know. ; ; ## Related Work; #733 . ## PR Checkli",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/922
https://github.com/su2code/SU2/pull/922:4153,Testability,test,test,4153," PR:. 1. Refactor SU2_GEO such that all its functionality can be performed in python (in progress); 2. Add a generalized thickness constraint (in progress); 3. Be able to do multiple types of geometry evaluation (for example wing+fuselage); 4. Expose some of the mesh deformation functions to python to allow for robust design variable definition; 5. Perform all of the shape optimization using the in-memory python scripts; 6. Intelligent handling of solution divergences that doesn't break the optimization; 7. Better way to define multipoint optimizations; 8. Better multi-objective optimization definition (#913 might be helpful in this); 9. Simplify the multitude of shape optimization options (#733). As you can probably tell, a lot of my examples and motivations revolve around aerospace applications. So while I try and make a general framework that is robust, I might not be thinking in a broad enough fashion. I would love to get input from the community for any functionality that they might want to see in this framework. The more robust this is, the more widely useful it will be. I am also a newbie to the python wrapper world of SU2. If there are any glaring road blocks or things that have been tried before but failed, please let me know. ; ; ## Related Work; #733 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/922
https://github.com/su2code/SU2/pull/922:508,Usability,user-friendly,user-friendly,508,"## Proposed Changes. This is a draft PR to discuss and document a much needed overhaul of the shape optimization features in SU2. There have been significant improvements to the main code base (for example, python wrapper integration, the new output structure, new mesh solver etc.) which haven't been leveraged by the shape optimization structure of SU2. . The main idea behind this overhaul is to move as much of the functionality of the current shape optimization framework to python. This creates a more user-friendly and robust interface for defining design variables and constraints. Its easy to make that claim, but let me elucidate it with an example:. > Suppose I am trying to optimize a wing for a given flight condition but I want more design freedom than altering the airfoil shapes along the wing using FFDs. I want to be able to control wing span, taper ratio, dihedral angle, twist, and any number of other geometrical representations of the wing. Currently, I would have to create a new Design Variable (DV) for most of those variables. If anyone has tried this, they know it is a tedious task with having to make alterations in various parts of the code.; >; > But all of these design variables can be represented by aggregations of FFD point movements. The span of the wing can be controlled by constraining the movement of FFD points in the y-direction to be proportional to their y coordinate. The current twist variable does a similar aggregation, at each twist location it rotates the corresponding 4 FFD points by the given angle. ; >; >These design variables could be represented by simple python functions that take in a set of FFD points and aggregate their movement in the desired way. All this can be done without any incision into the C++ code, given a python interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/922
https://github.com/su2code/SU2/pull/922:1607,Usability,simpl,simple,1607,"ucidate it with an example:. > Suppose I am trying to optimize a wing for a given flight condition but I want more design freedom than altering the airfoil shapes along the wing using FFDs. I want to be able to control wing span, taper ratio, dihedral angle, twist, and any number of other geometrical representations of the wing. Currently, I would have to create a new Design Variable (DV) for most of those variables. If anyone has tried this, they know it is a tedious task with having to make alterations in various parts of the code.; >; > But all of these design variables can be represented by aggregations of FFD point movements. The span of the wing can be controlled by constraining the movement of FFD points in the y-direction to be proportional to their y coordinate. The current twist variable does a similar aggregation, at each twist location it rotates the corresponding 4 FFD points by the given angle. ; >; >These design variables could be represented by simple python functions that take in a set of FFD points and aggregate their movement in the desired way. All this can be done without any incision into the C++ code, given a python interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't been updated for a while. For example, SU2_GEO is a bloated wrapper c++ script that calls a couple of CGeometry/CSurfaceMovement functions. The calling of these functions could be easily ported to python and increase the functionality of the Python Wrapper interface. . Some of the specific things I want to do in this PR:. 1. Refactor SU2_GEO such that all its functionality can be performed in python (in progress); 2. Add a generalized thickness constraint (in progress); 3. Be able to do multiple types of geometry evaluation (for example wing+fuselage); 4. Expose some of the mesh deformation functions to python to allow for r",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/922
https://github.com/su2code/SU2/pull/922:2965,Usability,Simpl,Simplify,2965,"aven't been updated for a while. For example, SU2_GEO is a bloated wrapper c++ script that calls a couple of CGeometry/CSurfaceMovement functions. The calling of these functions could be easily ported to python and increase the functionality of the Python Wrapper interface. . Some of the specific things I want to do in this PR:. 1. Refactor SU2_GEO such that all its functionality can be performed in python (in progress); 2. Add a generalized thickness constraint (in progress); 3. Be able to do multiple types of geometry evaluation (for example wing+fuselage); 4. Expose some of the mesh deformation functions to python to allow for robust design variable definition; 5. Perform all of the shape optimization using the in-memory python scripts; 6. Intelligent handling of solution divergences that doesn't break the optimization; 7. Better way to define multipoint optimizations; 8. Better multi-objective optimization definition (#913 might be helpful in this); 9. Simplify the multitude of shape optimization options (#733). As you can probably tell, a lot of my examples and motivations revolve around aerospace applications. So while I try and make a general framework that is robust, I might not be thinking in a broad enough fashion. I would love to get input from the community for any functionality that they might want to see in this framework. The more robust this is, the more widely useful it will be. I am also a newbie to the python wrapper world of SU2. If there are any glaring road blocks or things that have been tried before but failed, please let me know. ; ; ## Related Work; #733 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/922
https://github.com/su2code/SU2/pull/922:3775,Usability,guid,guide,3775," PR:. 1. Refactor SU2_GEO such that all its functionality can be performed in python (in progress); 2. Add a generalized thickness constraint (in progress); 3. Be able to do multiple types of geometry evaluation (for example wing+fuselage); 4. Expose some of the mesh deformation functions to python to allow for robust design variable definition; 5. Perform all of the shape optimization using the in-memory python scripts; 6. Intelligent handling of solution divergences that doesn't break the optimization; 7. Better way to define multipoint optimizations; 8. Better multi-objective optimization definition (#913 might be helpful in this); 9. Simplify the multitude of shape optimization options (#733). As you can probably tell, a lot of my examples and motivations revolve around aerospace applications. So while I try and make a general framework that is robust, I might not be thinking in a broad enough fashion. I would love to get input from the community for any functionality that they might want to see in this framework. The more robust this is, the more widely useful it will be. I am also a newbie to the python wrapper world of SU2. If there are any glaring road blocks or things that have been tried before but failed, please let me know. ; ; ## Related Work; #733 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/922
https://github.com/su2code/SU2/pull/923:526,Availability,robust,robust,526,"## Proposed Changes. This is a draft PR to discuss and document a much needed overhaul of the shape optimization features in SU2. There have been significant improvements to the main code base (for example, python wrapper integration, the new output structure, new mesh solver etc.) which haven't been leveraged by the shape optimization structure of SU2. . The main idea behind this overhaul is to move as much of the functionality of the current shape optimization framework to python. This creates a more user-friendly and robust interface for defining design variables and constraints. Its easy to make that claim, but let me elucidate it with an example:. > Suppose I am trying to optimize a wing for a given flight condition but I want more design freedom than altering the airfoil shapes along the wing using FFDs. I want to be able to control wing span, taper ratio, dihedral angle, twist, and any number of other geometrical representations of the wing. Currently, I would have to create a new Design Variable (DV) for most of those variables. If anyone has tried this, they know it is a tedious task with having to make alterations in various parts of the code.; >; > But all of these design variables can be represented by aggregations of FFD point movements. The span of the wing can be controlled by constraining the movement of FFD points in the y-direction to be proportional to their y coordinate. The current twist variable does a similar aggregation, at each twist location it rotates the corresponding 4 FFD points by the given angle. ; >; >These design variables could be represented by simple python functions that take in a set of FFD points and aggregate their movement in the desired way. All this can be done without any incision into the C++ code, given a python interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/923
https://github.com/su2code/SU2/pull/923:2632,Availability,robust,robust,2632,"ython functions that take in a set of FFD points and aggregate their movement in the desired way. All this can be done without any incision into the C++ code, given a python interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't been updated for a while. For example, SU2_GEO is a bloated wrapper c++ script that calls a couple of CGeometry/CSurfaceMovement functions. The calling of these functions could be easily ported to python and increase the functionality of the Python Wrapper interface. . Some of the specific things I want to do in this PR:. 1. Refactor SU2_GEO such that all its functionality can be performed in python (in progress); 2. Add a generalized thickness constraint (in progress); 3. Be able to do multiple types of geometry evaluation (for example wing+fuselage); 4. Expose some of the mesh deformation functions to python to allow for robust design variable definition; 5. Perform all of the shape optimization using the in-memory python scripts; 6. Intelligent handling of solution divergences that doesn't break the optimization; 7. Better way to define multipoint optimizations; 8. Better multi-objective optimization definition (#913 might be helpful in this); 9. Simplify the multitude of shape optimization options (#733). As you can probably tell, a lot of my examples and motivations revolve around aerospace applications. So while I try and make a general framework that is robust, I might not be thinking in a broad enough fashion. I would love to get input from the community for any functionality that they might want to see in this framework. The more robust this is, the more widely useful it will be. I am also a newbie to the python wrapper world of SU2. If there are any glaring road blocks or things that have been tried before but failed, please let me know. ; ; ## Related Work; #733 . ## PR Checkli",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/923
https://github.com/su2code/SU2/pull/923:3180,Availability,robust,robust,3180,"asily ported to python and increase the functionality of the Python Wrapper interface. . Some of the specific things I want to do in this PR:. 1. Refactor SU2_GEO such that all its functionality can be performed in python (in progress); 2. Add a generalized thickness constraint (in progress); 3. Be able to do multiple types of geometry evaluation (for example wing+fuselage); 4. Expose some of the mesh deformation functions to python to allow for robust design variable definition; 5. Perform all of the shape optimization using the in-memory python scripts; 6. Intelligent handling of solution divergences that doesn't break the optimization; 7. Better way to define multipoint optimizations; 8. Better multi-objective optimization definition (#913 might be helpful in this); 9. Simplify the multitude of shape optimization options (#733). As you can probably tell, a lot of my examples and motivations revolve around aerospace applications. So while I try and make a general framework that is robust, I might not be thinking in a broad enough fashion. I would love to get input from the community for any functionality that they might want to see in this framework. The more robust this is, the more widely useful it will be. I am also a newbie to the python wrapper world of SU2. If there are any glaring road blocks or things that have been tried before but failed, please let me know. ; ; ## Related Work; #733 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/923
https://github.com/su2code/SU2/pull/923:3362,Availability,robust,robust,3362," PR:. 1. Refactor SU2_GEO such that all its functionality can be performed in python (in progress); 2. Add a generalized thickness constraint (in progress); 3. Be able to do multiple types of geometry evaluation (for example wing+fuselage); 4. Expose some of the mesh deformation functions to python to allow for robust design variable definition; 5. Perform all of the shape optimization using the in-memory python scripts; 6. Intelligent handling of solution divergences that doesn't break the optimization; 7. Better way to define multipoint optimizations; 8. Better multi-objective optimization definition (#913 might be helpful in this); 9. Simplify the multitude of shape optimization options (#733). As you can probably tell, a lot of my examples and motivations revolve around aerospace applications. So while I try and make a general framework that is robust, I might not be thinking in a broad enough fashion. I would love to get input from the community for any functionality that they might want to see in this framework. The more robust this is, the more widely useful it will be. I am also a newbie to the python wrapper world of SU2. If there are any glaring road blocks or things that have been tried before but failed, please let me know. ; ; ## Related Work; #733 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/923
https://github.com/su2code/SU2/pull/923:222,Deployability,integrat,integration,222,"## Proposed Changes. This is a draft PR to discuss and document a much needed overhaul of the shape optimization features in SU2. There have been significant improvements to the main code base (for example, python wrapper integration, the new output structure, new mesh solver etc.) which haven't been leveraged by the shape optimization structure of SU2. . The main idea behind this overhaul is to move as much of the functionality of the current shape optimization framework to python. This creates a more user-friendly and robust interface for defining design variables and constraints. Its easy to make that claim, but let me elucidate it with an example:. > Suppose I am trying to optimize a wing for a given flight condition but I want more design freedom than altering the airfoil shapes along the wing using FFDs. I want to be able to control wing span, taper ratio, dihedral angle, twist, and any number of other geometrical representations of the wing. Currently, I would have to create a new Design Variable (DV) for most of those variables. If anyone has tried this, they know it is a tedious task with having to make alterations in various parts of the code.; >; > But all of these design variables can be represented by aggregations of FFD point movements. The span of the wing can be controlled by constraining the movement of FFD points in the y-direction to be proportional to their y coordinate. The current twist variable does a similar aggregation, at each twist location it rotates the corresponding 4 FFD points by the given angle. ; >; >These design variables could be represented by simple python functions that take in a set of FFD points and aggregate their movement in the desired way. All this can be done without any incision into the C++ code, given a python interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/923
https://github.com/su2code/SU2/pull/923:2006,Deployability,update,updated,2006,"g. Currently, I would have to create a new Design Variable (DV) for most of those variables. If anyone has tried this, they know it is a tedious task with having to make alterations in various parts of the code.; >; > But all of these design variables can be represented by aggregations of FFD point movements. The span of the wing can be controlled by constraining the movement of FFD points in the y-direction to be proportional to their y coordinate. The current twist variable does a similar aggregation, at each twist location it rotates the corresponding 4 FFD points by the given angle. ; >; >These design variables could be represented by simple python functions that take in a set of FFD points and aggregate their movement in the desired way. All this can be done without any incision into the C++ code, given a python interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't been updated for a while. For example, SU2_GEO is a bloated wrapper c++ script that calls a couple of CGeometry/CSurfaceMovement functions. The calling of these functions could be easily ported to python and increase the functionality of the Python Wrapper interface. . Some of the specific things I want to do in this PR:. 1. Refactor SU2_GEO such that all its functionality can be performed in python (in progress); 2. Add a generalized thickness constraint (in progress); 3. Be able to do multiple types of geometry evaluation (for example wing+fuselage); 4. Expose some of the mesh deformation functions to python to allow for robust design variable definition; 5. Perform all of the shape optimization using the in-memory python scripts; 6. Intelligent handling of solution divergences that doesn't break the optimization; 7. Better way to define multipoint optimizations; 8. Better multi-objective optimization definition (#913 might be helpful in this);",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/923
https://github.com/su2code/SU2/pull/923:4226,Deployability,update,updated,4226," PR:. 1. Refactor SU2_GEO such that all its functionality can be performed in python (in progress); 2. Add a generalized thickness constraint (in progress); 3. Be able to do multiple types of geometry evaluation (for example wing+fuselage); 4. Expose some of the mesh deformation functions to python to allow for robust design variable definition; 5. Perform all of the shape optimization using the in-memory python scripts; 6. Intelligent handling of solution divergences that doesn't break the optimization; 7. Better way to define multipoint optimizations; 8. Better multi-objective optimization definition (#913 might be helpful in this); 9. Simplify the multitude of shape optimization options (#733). As you can probably tell, a lot of my examples and motivations revolve around aerospace applications. So while I try and make a general framework that is robust, I might not be thinking in a broad enough fashion. I would love to get input from the community for any functionality that they might want to see in this framework. The more robust this is, the more widely useful it will be. I am also a newbie to the python wrapper world of SU2. If there are any glaring road blocks or things that have been tried before but failed, please let me know. ; ; ## Related Work; #733 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/923
https://github.com/su2code/SU2/pull/923:214,Integrability,wrap,wrapper,214,"## Proposed Changes. This is a draft PR to discuss and document a much needed overhaul of the shape optimization features in SU2. There have been significant improvements to the main code base (for example, python wrapper integration, the new output structure, new mesh solver etc.) which haven't been leveraged by the shape optimization structure of SU2. . The main idea behind this overhaul is to move as much of the functionality of the current shape optimization framework to python. This creates a more user-friendly and robust interface for defining design variables and constraints. Its easy to make that claim, but let me elucidate it with an example:. > Suppose I am trying to optimize a wing for a given flight condition but I want more design freedom than altering the airfoil shapes along the wing using FFDs. I want to be able to control wing span, taper ratio, dihedral angle, twist, and any number of other geometrical representations of the wing. Currently, I would have to create a new Design Variable (DV) for most of those variables. If anyone has tried this, they know it is a tedious task with having to make alterations in various parts of the code.; >; > But all of these design variables can be represented by aggregations of FFD point movements. The span of the wing can be controlled by constraining the movement of FFD points in the y-direction to be proportional to their y coordinate. The current twist variable does a similar aggregation, at each twist location it rotates the corresponding 4 FFD points by the given angle. ; >; >These design variables could be represented by simple python functions that take in a set of FFD points and aggregate their movement in the desired way. All this can be done without any incision into the C++ code, given a python interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/923
https://github.com/su2code/SU2/pull/923:222,Integrability,integrat,integration,222,"## Proposed Changes. This is a draft PR to discuss and document a much needed overhaul of the shape optimization features in SU2. There have been significant improvements to the main code base (for example, python wrapper integration, the new output structure, new mesh solver etc.) which haven't been leveraged by the shape optimization structure of SU2. . The main idea behind this overhaul is to move as much of the functionality of the current shape optimization framework to python. This creates a more user-friendly and robust interface for defining design variables and constraints. Its easy to make that claim, but let me elucidate it with an example:. > Suppose I am trying to optimize a wing for a given flight condition but I want more design freedom than altering the airfoil shapes along the wing using FFDs. I want to be able to control wing span, taper ratio, dihedral angle, twist, and any number of other geometrical representations of the wing. Currently, I would have to create a new Design Variable (DV) for most of those variables. If anyone has tried this, they know it is a tedious task with having to make alterations in various parts of the code.; >; > But all of these design variables can be represented by aggregations of FFD point movements. The span of the wing can be controlled by constraining the movement of FFD points in the y-direction to be proportional to their y coordinate. The current twist variable does a similar aggregation, at each twist location it rotates the corresponding 4 FFD points by the given angle. ; >; >These design variables could be represented by simple python functions that take in a set of FFD points and aggregate their movement in the desired way. All this can be done without any incision into the C++ code, given a python interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/923
https://github.com/su2code/SU2/pull/923:533,Integrability,interface,interface,533,"## Proposed Changes. This is a draft PR to discuss and document a much needed overhaul of the shape optimization features in SU2. There have been significant improvements to the main code base (for example, python wrapper integration, the new output structure, new mesh solver etc.) which haven't been leveraged by the shape optimization structure of SU2. . The main idea behind this overhaul is to move as much of the functionality of the current shape optimization framework to python. This creates a more user-friendly and robust interface for defining design variables and constraints. Its easy to make that claim, but let me elucidate it with an example:. > Suppose I am trying to optimize a wing for a given flight condition but I want more design freedom than altering the airfoil shapes along the wing using FFDs. I want to be able to control wing span, taper ratio, dihedral angle, twist, and any number of other geometrical representations of the wing. Currently, I would have to create a new Design Variable (DV) for most of those variables. If anyone has tried this, they know it is a tedious task with having to make alterations in various parts of the code.; >; > But all of these design variables can be represented by aggregations of FFD point movements. The span of the wing can be controlled by constraining the movement of FFD points in the y-direction to be proportional to their y coordinate. The current twist variable does a similar aggregation, at each twist location it rotates the corresponding 4 FFD points by the given angle. ; >; >These design variables could be represented by simple python functions that take in a set of FFD points and aggregate their movement in the desired way. All this can be done without any incision into the C++ code, given a python interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/923
https://github.com/su2code/SU2/pull/923:1789,Integrability,interface,interface,1789,"he wing using FFDs. I want to be able to control wing span, taper ratio, dihedral angle, twist, and any number of other geometrical representations of the wing. Currently, I would have to create a new Design Variable (DV) for most of those variables. If anyone has tried this, they know it is a tedious task with having to make alterations in various parts of the code.; >; > But all of these design variables can be represented by aggregations of FFD point movements. The span of the wing can be controlled by constraining the movement of FFD points in the y-direction to be proportional to their y coordinate. The current twist variable does a similar aggregation, at each twist location it rotates the corresponding 4 FFD points by the given angle. ; >; >These design variables could be represented by simple python functions that take in a set of FFD points and aggregate their movement in the desired way. All this can be done without any incision into the C++ code, given a python interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't been updated for a while. For example, SU2_GEO is a bloated wrapper c++ script that calls a couple of CGeometry/CSurfaceMovement functions. The calling of these functions could be easily ported to python and increase the functionality of the Python Wrapper interface. . Some of the specific things I want to do in this PR:. 1. Refactor SU2_GEO such that all its functionality can be performed in python (in progress); 2. Add a generalized thickness constraint (in progress); 3. Be able to do multiple types of geometry evaluation (for example wing+fuselage); 4. Expose some of the mesh deformation functions to python to allow for robust design variable definition; 5. Perform all of the shape optimization using the in-memory python scripts; 6. Intelligent handling of solution divergences that doesn'",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/923
https://github.com/su2code/SU2/pull/923:2061,Integrability,wrap,wrapper,2061," know it is a tedious task with having to make alterations in various parts of the code.; >; > But all of these design variables can be represented by aggregations of FFD point movements. The span of the wing can be controlled by constraining the movement of FFD points in the y-direction to be proportional to their y coordinate. The current twist variable does a similar aggregation, at each twist location it rotates the corresponding 4 FFD points by the given angle. ; >; >These design variables could be represented by simple python functions that take in a set of FFD points and aggregate their movement in the desired way. All this can be done without any incision into the C++ code, given a python interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't been updated for a while. For example, SU2_GEO is a bloated wrapper c++ script that calls a couple of CGeometry/CSurfaceMovement functions. The calling of these functions could be easily ported to python and increase the functionality of the Python Wrapper interface. . Some of the specific things I want to do in this PR:. 1. Refactor SU2_GEO such that all its functionality can be performed in python (in progress); 2. Add a generalized thickness constraint (in progress); 3. Be able to do multiple types of geometry evaluation (for example wing+fuselage); 4. Expose some of the mesh deformation functions to python to allow for robust design variable definition; 5. Perform all of the shape optimization using the in-memory python scripts; 6. Intelligent handling of solution divergences that doesn't break the optimization; 7. Better way to define multipoint optimizations; 8. Better multi-objective optimization definition (#913 might be helpful in this); 9. Simplify the multitude of shape optimization options (#733). As you can probably tell, a lot of my examples and motiva",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/923
https://github.com/su2code/SU2/pull/923:2250,Integrability,Wrap,Wrapper,2250,"riables can be represented by aggregations of FFD point movements. The span of the wing can be controlled by constraining the movement of FFD points in the y-direction to be proportional to their y coordinate. The current twist variable does a similar aggregation, at each twist location it rotates the corresponding 4 FFD points by the given angle. ; >; >These design variables could be represented by simple python functions that take in a set of FFD points and aggregate their movement in the desired way. All this can be done without any incision into the C++ code, given a python interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't been updated for a while. For example, SU2_GEO is a bloated wrapper c++ script that calls a couple of CGeometry/CSurfaceMovement functions. The calling of these functions could be easily ported to python and increase the functionality of the Python Wrapper interface. . Some of the specific things I want to do in this PR:. 1. Refactor SU2_GEO such that all its functionality can be performed in python (in progress); 2. Add a generalized thickness constraint (in progress); 3. Be able to do multiple types of geometry evaluation (for example wing+fuselage); 4. Expose some of the mesh deformation functions to python to allow for robust design variable definition; 5. Perform all of the shape optimization using the in-memory python scripts; 6. Intelligent handling of solution divergences that doesn't break the optimization; 7. Better way to define multipoint optimizations; 8. Better multi-objective optimization definition (#913 might be helpful in this); 9. Simplify the multitude of shape optimization options (#733). As you can probably tell, a lot of my examples and motivations revolve around aerospace applications. So while I try and make a general framework that is robust, I might not be t",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/923
https://github.com/su2code/SU2/pull/923:2258,Integrability,interface,interface,2258,"riables can be represented by aggregations of FFD point movements. The span of the wing can be controlled by constraining the movement of FFD points in the y-direction to be proportional to their y coordinate. The current twist variable does a similar aggregation, at each twist location it rotates the corresponding 4 FFD points by the given angle. ; >; >These design variables could be represented by simple python functions that take in a set of FFD points and aggregate their movement in the desired way. All this can be done without any incision into the C++ code, given a python interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't been updated for a while. For example, SU2_GEO is a bloated wrapper c++ script that calls a couple of CGeometry/CSurfaceMovement functions. The calling of these functions could be easily ported to python and increase the functionality of the Python Wrapper interface. . Some of the specific things I want to do in this PR:. 1. Refactor SU2_GEO such that all its functionality can be performed in python (in progress); 2. Add a generalized thickness constraint (in progress); 3. Be able to do multiple types of geometry evaluation (for example wing+fuselage); 4. Expose some of the mesh deformation functions to python to allow for robust design variable definition; 5. Perform all of the shape optimization using the in-memory python scripts; 6. Intelligent handling of solution divergences that doesn't break the optimization; 7. Better way to define multipoint optimizations; 8. Better multi-objective optimization definition (#913 might be helpful in this); 9. Simplify the multitude of shape optimization options (#733). As you can probably tell, a lot of my examples and motivations revolve around aerospace applications. So while I try and make a general framework that is robust, I might not be t",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/923
https://github.com/su2code/SU2/pull/923:3446,Integrability,wrap,wrapper,3446," PR:. 1. Refactor SU2_GEO such that all its functionality can be performed in python (in progress); 2. Add a generalized thickness constraint (in progress); 3. Be able to do multiple types of geometry evaluation (for example wing+fuselage); 4. Expose some of the mesh deformation functions to python to allow for robust design variable definition; 5. Perform all of the shape optimization using the in-memory python scripts; 6. Intelligent handling of solution divergences that doesn't break the optimization; 7. Better way to define multipoint optimizations; 8. Better multi-objective optimization definition (#913 might be helpful in this); 9. Simplify the multitude of shape optimization options (#733). As you can probably tell, a lot of my examples and motivations revolve around aerospace applications. So while I try and make a general framework that is robust, I might not be thinking in a broad enough fashion. I would love to get input from the community for any functionality that they might want to see in this framework. The more robust this is, the more widely useful it will be. I am also a newbie to the python wrapper world of SU2. If there are any glaring road blocks or things that have been tried before but failed, please let me know. ; ; ## Related Work; #733 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/923
https://github.com/su2code/SU2/pull/923:563,Modifiability,variab,variables,563,"## Proposed Changes. This is a draft PR to discuss and document a much needed overhaul of the shape optimization features in SU2. There have been significant improvements to the main code base (for example, python wrapper integration, the new output structure, new mesh solver etc.) which haven't been leveraged by the shape optimization structure of SU2. . The main idea behind this overhaul is to move as much of the functionality of the current shape optimization framework to python. This creates a more user-friendly and robust interface for defining design variables and constraints. Its easy to make that claim, but let me elucidate it with an example:. > Suppose I am trying to optimize a wing for a given flight condition but I want more design freedom than altering the airfoil shapes along the wing using FFDs. I want to be able to control wing span, taper ratio, dihedral angle, twist, and any number of other geometrical representations of the wing. Currently, I would have to create a new Design Variable (DV) for most of those variables. If anyone has tried this, they know it is a tedious task with having to make alterations in various parts of the code.; >; > But all of these design variables can be represented by aggregations of FFD point movements. The span of the wing can be controlled by constraining the movement of FFD points in the y-direction to be proportional to their y coordinate. The current twist variable does a similar aggregation, at each twist location it rotates the corresponding 4 FFD points by the given angle. ; >; >These design variables could be represented by simple python functions that take in a set of FFD points and aggregate their movement in the desired way. All this can be done without any incision into the C++ code, given a python interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/923
https://github.com/su2code/SU2/pull/923:1010,Modifiability,Variab,Variable,1010,"osed Changes. This is a draft PR to discuss and document a much needed overhaul of the shape optimization features in SU2. There have been significant improvements to the main code base (for example, python wrapper integration, the new output structure, new mesh solver etc.) which haven't been leveraged by the shape optimization structure of SU2. . The main idea behind this overhaul is to move as much of the functionality of the current shape optimization framework to python. This creates a more user-friendly and robust interface for defining design variables and constraints. Its easy to make that claim, but let me elucidate it with an example:. > Suppose I am trying to optimize a wing for a given flight condition but I want more design freedom than altering the airfoil shapes along the wing using FFDs. I want to be able to control wing span, taper ratio, dihedral angle, twist, and any number of other geometrical representations of the wing. Currently, I would have to create a new Design Variable (DV) for most of those variables. If anyone has tried this, they know it is a tedious task with having to make alterations in various parts of the code.; >; > But all of these design variables can be represented by aggregations of FFD point movements. The span of the wing can be controlled by constraining the movement of FFD points in the y-direction to be proportional to their y coordinate. The current twist variable does a similar aggregation, at each twist location it rotates the corresponding 4 FFD points by the given angle. ; >; >These design variables could be represented by simple python functions that take in a set of FFD points and aggregate their movement in the desired way. All this can be done without any incision into the C++ code, given a python interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't been u",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/923
https://github.com/su2code/SU2/pull/923:1042,Modifiability,variab,variables,1042,"osed Changes. This is a draft PR to discuss and document a much needed overhaul of the shape optimization features in SU2. There have been significant improvements to the main code base (for example, python wrapper integration, the new output structure, new mesh solver etc.) which haven't been leveraged by the shape optimization structure of SU2. . The main idea behind this overhaul is to move as much of the functionality of the current shape optimization framework to python. This creates a more user-friendly and robust interface for defining design variables and constraints. Its easy to make that claim, but let me elucidate it with an example:. > Suppose I am trying to optimize a wing for a given flight condition but I want more design freedom than altering the airfoil shapes along the wing using FFDs. I want to be able to control wing span, taper ratio, dihedral angle, twist, and any number of other geometrical representations of the wing. Currently, I would have to create a new Design Variable (DV) for most of those variables. If anyone has tried this, they know it is a tedious task with having to make alterations in various parts of the code.; >; > But all of these design variables can be represented by aggregations of FFD point movements. The span of the wing can be controlled by constraining the movement of FFD points in the y-direction to be proportional to their y coordinate. The current twist variable does a similar aggregation, at each twist location it rotates the corresponding 4 FFD points by the given angle. ; >; >These design variables could be represented by simple python functions that take in a set of FFD points and aggregate their movement in the desired way. All this can be done without any incision into the C++ code, given a python interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't been u",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/923
https://github.com/su2code/SU2/pull/923:1202,Modifiability,variab,variables,1202,"r integration, the new output structure, new mesh solver etc.) which haven't been leveraged by the shape optimization structure of SU2. . The main idea behind this overhaul is to move as much of the functionality of the current shape optimization framework to python. This creates a more user-friendly and robust interface for defining design variables and constraints. Its easy to make that claim, but let me elucidate it with an example:. > Suppose I am trying to optimize a wing for a given flight condition but I want more design freedom than altering the airfoil shapes along the wing using FFDs. I want to be able to control wing span, taper ratio, dihedral angle, twist, and any number of other geometrical representations of the wing. Currently, I would have to create a new Design Variable (DV) for most of those variables. If anyone has tried this, they know it is a tedious task with having to make alterations in various parts of the code.; >; > But all of these design variables can be represented by aggregations of FFD point movements. The span of the wing can be controlled by constraining the movement of FFD points in the y-direction to be proportional to their y coordinate. The current twist variable does a similar aggregation, at each twist location it rotates the corresponding 4 FFD points by the given angle. ; >; >These design variables could be represented by simple python functions that take in a set of FFD points and aggregate their movement in the desired way. All this can be done without any incision into the C++ code, given a python interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't been updated for a while. For example, SU2_GEO is a bloated wrapper c++ script that calls a couple of CGeometry/CSurfaceMovement functions. The calling of these functions could be easily ported to python and increase the",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/923
https://github.com/su2code/SU2/pull/923:1432,Modifiability,variab,variable,1432,"hon. This creates a more user-friendly and robust interface for defining design variables and constraints. Its easy to make that claim, but let me elucidate it with an example:. > Suppose I am trying to optimize a wing for a given flight condition but I want more design freedom than altering the airfoil shapes along the wing using FFDs. I want to be able to control wing span, taper ratio, dihedral angle, twist, and any number of other geometrical representations of the wing. Currently, I would have to create a new Design Variable (DV) for most of those variables. If anyone has tried this, they know it is a tedious task with having to make alterations in various parts of the code.; >; > But all of these design variables can be represented by aggregations of FFD point movements. The span of the wing can be controlled by constraining the movement of FFD points in the y-direction to be proportional to their y coordinate. The current twist variable does a similar aggregation, at each twist location it rotates the corresponding 4 FFD points by the given angle. ; >; >These design variables could be represented by simple python functions that take in a set of FFD points and aggregate their movement in the desired way. All this can be done without any incision into the C++ code, given a python interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't been updated for a while. For example, SU2_GEO is a bloated wrapper c++ script that calls a couple of CGeometry/CSurfaceMovement functions. The calling of these functions could be easily ported to python and increase the functionality of the Python Wrapper interface. . Some of the specific things I want to do in this PR:. 1. Refactor SU2_GEO such that all its functionality can be performed in python (in progress); 2. Add a generalized thickness constraint (in progress); 3. Be a",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/923
https://github.com/su2code/SU2/pull/923:1573,Modifiability,variab,variables,1573,"ucidate it with an example:. > Suppose I am trying to optimize a wing for a given flight condition but I want more design freedom than altering the airfoil shapes along the wing using FFDs. I want to be able to control wing span, taper ratio, dihedral angle, twist, and any number of other geometrical representations of the wing. Currently, I would have to create a new Design Variable (DV) for most of those variables. If anyone has tried this, they know it is a tedious task with having to make alterations in various parts of the code.; >; > But all of these design variables can be represented by aggregations of FFD point movements. The span of the wing can be controlled by constraining the movement of FFD points in the y-direction to be proportional to their y coordinate. The current twist variable does a similar aggregation, at each twist location it rotates the corresponding 4 FFD points by the given angle. ; >; >These design variables could be represented by simple python functions that take in a set of FFD points and aggregate their movement in the desired way. All this can be done without any incision into the C++ code, given a python interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't been updated for a while. For example, SU2_GEO is a bloated wrapper c++ script that calls a couple of CGeometry/CSurfaceMovement functions. The calling of these functions could be easily ported to python and increase the functionality of the Python Wrapper interface. . Some of the specific things I want to do in this PR:. 1. Refactor SU2_GEO such that all its functionality can be performed in python (in progress); 2. Add a generalized thickness constraint (in progress); 3. Be able to do multiple types of geometry evaluation (for example wing+fuselage); 4. Expose some of the mesh deformation functions to python to allow for r",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/923
https://github.com/su2code/SU2/pull/923:2328,Modifiability,Refactor,Refactor,2328," be proportional to their y coordinate. The current twist variable does a similar aggregation, at each twist location it rotates the corresponding 4 FFD points by the given angle. ; >; >These design variables could be represented by simple python functions that take in a set of FFD points and aggregate their movement in the desired way. All this can be done without any incision into the C++ code, given a python interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't been updated for a while. For example, SU2_GEO is a bloated wrapper c++ script that calls a couple of CGeometry/CSurfaceMovement functions. The calling of these functions could be easily ported to python and increase the functionality of the Python Wrapper interface. . Some of the specific things I want to do in this PR:. 1. Refactor SU2_GEO such that all its functionality can be performed in python (in progress); 2. Add a generalized thickness constraint (in progress); 3. Be able to do multiple types of geometry evaluation (for example wing+fuselage); 4. Expose some of the mesh deformation functions to python to allow for robust design variable definition; 5. Perform all of the shape optimization using the in-memory python scripts; 6. Intelligent handling of solution divergences that doesn't break the optimization; 7. Better way to define multipoint optimizations; 8. Better multi-objective optimization definition (#913 might be helpful in this); 9. Simplify the multitude of shape optimization options (#733). As you can probably tell, a lot of my examples and motivations revolve around aerospace applications. So while I try and make a general framework that is robust, I might not be thinking in a broad enough fashion. I would love to get input from the community for any functionality that they might want to see in this framework. The more robust this ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/923
https://github.com/su2code/SU2/pull/923:2646,Modifiability,variab,variable,2646,"ython functions that take in a set of FFD points and aggregate their movement in the desired way. All this can be done without any incision into the C++ code, given a python interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't been updated for a while. For example, SU2_GEO is a bloated wrapper c++ script that calls a couple of CGeometry/CSurfaceMovement functions. The calling of these functions could be easily ported to python and increase the functionality of the Python Wrapper interface. . Some of the specific things I want to do in this PR:. 1. Refactor SU2_GEO such that all its functionality can be performed in python (in progress); 2. Add a generalized thickness constraint (in progress); 3. Be able to do multiple types of geometry evaluation (for example wing+fuselage); 4. Expose some of the mesh deformation functions to python to allow for robust design variable definition; 5. Perform all of the shape optimization using the in-memory python scripts; 6. Intelligent handling of solution divergences that doesn't break the optimization; 7. Better way to define multipoint optimizations; 8. Better multi-objective optimization definition (#913 might be helpful in this); 9. Simplify the multitude of shape optimization options (#733). As you can probably tell, a lot of my examples and motivations revolve around aerospace applications. So while I try and make a general framework that is robust, I might not be thinking in a broad enough fashion. I would love to get input from the community for any functionality that they might want to see in this framework. The more robust this is, the more widely useful it will be. I am also a newbie to the python wrapper world of SU2. If there are any glaring road blocks or things that have been tried before but failed, please let me know. ; ; ## Related Work; #733 . ## PR Checkli",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/923
https://github.com/su2code/SU2/pull/923:100,Performance,optimiz,optimization,100,"## Proposed Changes. This is a draft PR to discuss and document a much needed overhaul of the shape optimization features in SU2. There have been significant improvements to the main code base (for example, python wrapper integration, the new output structure, new mesh solver etc.) which haven't been leveraged by the shape optimization structure of SU2. . The main idea behind this overhaul is to move as much of the functionality of the current shape optimization framework to python. This creates a more user-friendly and robust interface for defining design variables and constraints. Its easy to make that claim, but let me elucidate it with an example:. > Suppose I am trying to optimize a wing for a given flight condition but I want more design freedom than altering the airfoil shapes along the wing using FFDs. I want to be able to control wing span, taper ratio, dihedral angle, twist, and any number of other geometrical representations of the wing. Currently, I would have to create a new Design Variable (DV) for most of those variables. If anyone has tried this, they know it is a tedious task with having to make alterations in various parts of the code.; >; > But all of these design variables can be represented by aggregations of FFD point movements. The span of the wing can be controlled by constraining the movement of FFD points in the y-direction to be proportional to their y coordinate. The current twist variable does a similar aggregation, at each twist location it rotates the corresponding 4 FFD points by the given angle. ; >; >These design variables could be represented by simple python functions that take in a set of FFD points and aggregate their movement in the desired way. All this can be done without any incision into the C++ code, given a python interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/923
https://github.com/su2code/SU2/pull/923:325,Performance,optimiz,optimization,325,"## Proposed Changes. This is a draft PR to discuss and document a much needed overhaul of the shape optimization features in SU2. There have been significant improvements to the main code base (for example, python wrapper integration, the new output structure, new mesh solver etc.) which haven't been leveraged by the shape optimization structure of SU2. . The main idea behind this overhaul is to move as much of the functionality of the current shape optimization framework to python. This creates a more user-friendly and robust interface for defining design variables and constraints. Its easy to make that claim, but let me elucidate it with an example:. > Suppose I am trying to optimize a wing for a given flight condition but I want more design freedom than altering the airfoil shapes along the wing using FFDs. I want to be able to control wing span, taper ratio, dihedral angle, twist, and any number of other geometrical representations of the wing. Currently, I would have to create a new Design Variable (DV) for most of those variables. If anyone has tried this, they know it is a tedious task with having to make alterations in various parts of the code.; >; > But all of these design variables can be represented by aggregations of FFD point movements. The span of the wing can be controlled by constraining the movement of FFD points in the y-direction to be proportional to their y coordinate. The current twist variable does a similar aggregation, at each twist location it rotates the corresponding 4 FFD points by the given angle. ; >; >These design variables could be represented by simple python functions that take in a set of FFD points and aggregate their movement in the desired way. All this can be done without any incision into the C++ code, given a python interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/923
https://github.com/su2code/SU2/pull/923:454,Performance,optimiz,optimization,454,"## Proposed Changes. This is a draft PR to discuss and document a much needed overhaul of the shape optimization features in SU2. There have been significant improvements to the main code base (for example, python wrapper integration, the new output structure, new mesh solver etc.) which haven't been leveraged by the shape optimization structure of SU2. . The main idea behind this overhaul is to move as much of the functionality of the current shape optimization framework to python. This creates a more user-friendly and robust interface for defining design variables and constraints. Its easy to make that claim, but let me elucidate it with an example:. > Suppose I am trying to optimize a wing for a given flight condition but I want more design freedom than altering the airfoil shapes along the wing using FFDs. I want to be able to control wing span, taper ratio, dihedral angle, twist, and any number of other geometrical representations of the wing. Currently, I would have to create a new Design Variable (DV) for most of those variables. If anyone has tried this, they know it is a tedious task with having to make alterations in various parts of the code.; >; > But all of these design variables can be represented by aggregations of FFD point movements. The span of the wing can be controlled by constraining the movement of FFD points in the y-direction to be proportional to their y coordinate. The current twist variable does a similar aggregation, at each twist location it rotates the corresponding 4 FFD points by the given angle. ; >; >These design variables could be represented by simple python functions that take in a set of FFD points and aggregate their movement in the desired way. All this can be done without any incision into the C++ code, given a python interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/923
https://github.com/su2code/SU2/pull/923:686,Performance,optimiz,optimize,686,"## Proposed Changes. This is a draft PR to discuss and document a much needed overhaul of the shape optimization features in SU2. There have been significant improvements to the main code base (for example, python wrapper integration, the new output structure, new mesh solver etc.) which haven't been leveraged by the shape optimization structure of SU2. . The main idea behind this overhaul is to move as much of the functionality of the current shape optimization framework to python. This creates a more user-friendly and robust interface for defining design variables and constraints. Its easy to make that claim, but let me elucidate it with an example:. > Suppose I am trying to optimize a wing for a given flight condition but I want more design freedom than altering the airfoil shapes along the wing using FFDs. I want to be able to control wing span, taper ratio, dihedral angle, twist, and any number of other geometrical representations of the wing. Currently, I would have to create a new Design Variable (DV) for most of those variables. If anyone has tried this, they know it is a tedious task with having to make alterations in various parts of the code.; >; > But all of these design variables can be represented by aggregations of FFD point movements. The span of the wing can be controlled by constraining the movement of FFD points in the y-direction to be proportional to their y coordinate. The current twist variable does a similar aggregation, at each twist location it rotates the corresponding 4 FFD points by the given angle. ; >; >These design variables could be represented by simple python functions that take in a set of FFD points and aggregate their movement in the desired way. All this can be done without any incision into the C++ code, given a python interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/923
https://github.com/su2code/SU2/pull/923:2384,Performance,perform,performed,2384," be proportional to their y coordinate. The current twist variable does a similar aggregation, at each twist location it rotates the corresponding 4 FFD points by the given angle. ; >; >These design variables could be represented by simple python functions that take in a set of FFD points and aggregate their movement in the desired way. All this can be done without any incision into the C++ code, given a python interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't been updated for a while. For example, SU2_GEO is a bloated wrapper c++ script that calls a couple of CGeometry/CSurfaceMovement functions. The calling of these functions could be easily ported to python and increase the functionality of the Python Wrapper interface. . Some of the specific things I want to do in this PR:. 1. Refactor SU2_GEO such that all its functionality can be performed in python (in progress); 2. Add a generalized thickness constraint (in progress); 3. Be able to do multiple types of geometry evaluation (for example wing+fuselage); 4. Expose some of the mesh deformation functions to python to allow for robust design variable definition; 5. Perform all of the shape optimization using the in-memory python scripts; 6. Intelligent handling of solution divergences that doesn't break the optimization; 7. Better way to define multipoint optimizations; 8. Better multi-objective optimization definition (#913 might be helpful in this); 9. Simplify the multitude of shape optimization options (#733). As you can probably tell, a lot of my examples and motivations revolve around aerospace applications. So while I try and make a general framework that is robust, I might not be thinking in a broad enough fashion. I would love to get input from the community for any functionality that they might want to see in this framework. The more robust this ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/923
https://github.com/su2code/SU2/pull/923:2670,Performance,Perform,Perform,2670," way. All this can be done without any incision into the C++ code, given a python interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't been updated for a while. For example, SU2_GEO is a bloated wrapper c++ script that calls a couple of CGeometry/CSurfaceMovement functions. The calling of these functions could be easily ported to python and increase the functionality of the Python Wrapper interface. . Some of the specific things I want to do in this PR:. 1. Refactor SU2_GEO such that all its functionality can be performed in python (in progress); 2. Add a generalized thickness constraint (in progress); 3. Be able to do multiple types of geometry evaluation (for example wing+fuselage); 4. Expose some of the mesh deformation functions to python to allow for robust design variable definition; 5. Perform all of the shape optimization using the in-memory python scripts; 6. Intelligent handling of solution divergences that doesn't break the optimization; 7. Better way to define multipoint optimizations; 8. Better multi-objective optimization definition (#913 might be helpful in this); 9. Simplify the multitude of shape optimization options (#733). As you can probably tell, a lot of my examples and motivations revolve around aerospace applications. So while I try and make a general framework that is robust, I might not be thinking in a broad enough fashion. I would love to get input from the community for any functionality that they might want to see in this framework. The more robust this is, the more widely useful it will be. I am also a newbie to the python wrapper world of SU2. If there are any glaring road blocks or things that have been tried before but failed, please let me know. ; ; ## Related Work; #733 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/923
https://github.com/su2code/SU2/pull/923:2695,Performance,optimiz,optimization,2695," way. All this can be done without any incision into the C++ code, given a python interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't been updated for a while. For example, SU2_GEO is a bloated wrapper c++ script that calls a couple of CGeometry/CSurfaceMovement functions. The calling of these functions could be easily ported to python and increase the functionality of the Python Wrapper interface. . Some of the specific things I want to do in this PR:. 1. Refactor SU2_GEO such that all its functionality can be performed in python (in progress); 2. Add a generalized thickness constraint (in progress); 3. Be able to do multiple types of geometry evaluation (for example wing+fuselage); 4. Expose some of the mesh deformation functions to python to allow for robust design variable definition; 5. Perform all of the shape optimization using the in-memory python scripts; 6. Intelligent handling of solution divergences that doesn't break the optimization; 7. Better way to define multipoint optimizations; 8. Better multi-objective optimization definition (#913 might be helpful in this); 9. Simplify the multitude of shape optimization options (#733). As you can probably tell, a lot of my examples and motivations revolve around aerospace applications. So while I try and make a general framework that is robust, I might not be thinking in a broad enough fashion. I would love to get input from the community for any functionality that they might want to see in this framework. The more robust this is, the more widely useful it will be. I am also a newbie to the python wrapper world of SU2. If there are any glaring road blocks or things that have been tried before but failed, please let me know. ; ; ## Related Work; #733 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/923
https://github.com/su2code/SU2/pull/923:2815,Performance,optimiz,optimization,2815," interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't been updated for a while. For example, SU2_GEO is a bloated wrapper c++ script that calls a couple of CGeometry/CSurfaceMovement functions. The calling of these functions could be easily ported to python and increase the functionality of the Python Wrapper interface. . Some of the specific things I want to do in this PR:. 1. Refactor SU2_GEO such that all its functionality can be performed in python (in progress); 2. Add a generalized thickness constraint (in progress); 3. Be able to do multiple types of geometry evaluation (for example wing+fuselage); 4. Expose some of the mesh deformation functions to python to allow for robust design variable definition; 5. Perform all of the shape optimization using the in-memory python scripts; 6. Intelligent handling of solution divergences that doesn't break the optimization; 7. Better way to define multipoint optimizations; 8. Better multi-objective optimization definition (#913 might be helpful in this); 9. Simplify the multitude of shape optimization options (#733). As you can probably tell, a lot of my examples and motivations revolve around aerospace applications. So while I try and make a general framework that is robust, I might not be thinking in a broad enough fashion. I would love to get input from the community for any functionality that they might want to see in this framework. The more robust this is, the more widely useful it will be. I am also a newbie to the python wrapper world of SU2. If there are any glaring road blocks or things that have been tried before but failed, please let me know. ; ; ## Related Work; #733 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/923
https://github.com/su2code/SU2/pull/923:2864,Performance,optimiz,optimizations,2864,"ns and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't been updated for a while. For example, SU2_GEO is a bloated wrapper c++ script that calls a couple of CGeometry/CSurfaceMovement functions. The calling of these functions could be easily ported to python and increase the functionality of the Python Wrapper interface. . Some of the specific things I want to do in this PR:. 1. Refactor SU2_GEO such that all its functionality can be performed in python (in progress); 2. Add a generalized thickness constraint (in progress); 3. Be able to do multiple types of geometry evaluation (for example wing+fuselage); 4. Expose some of the mesh deformation functions to python to allow for robust design variable definition; 5. Perform all of the shape optimization using the in-memory python scripts; 6. Intelligent handling of solution divergences that doesn't break the optimization; 7. Better way to define multipoint optimizations; 8. Better multi-objective optimization definition (#913 might be helpful in this); 9. Simplify the multitude of shape optimization options (#733). As you can probably tell, a lot of my examples and motivations revolve around aerospace applications. So while I try and make a general framework that is robust, I might not be thinking in a broad enough fashion. I would love to get input from the community for any functionality that they might want to see in this framework. The more robust this is, the more widely useful it will be. I am also a newbie to the python wrapper world of SU2. If there are any glaring road blocks or things that have been tried before but failed, please let me know. ; ; ## Related Work; #733 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/923
https://github.com/su2code/SU2/pull/923:2905,Performance,optimiz,optimization,2905,"thon could also remove the need for some of the other SU2 modules that haven't been updated for a while. For example, SU2_GEO is a bloated wrapper c++ script that calls a couple of CGeometry/CSurfaceMovement functions. The calling of these functions could be easily ported to python and increase the functionality of the Python Wrapper interface. . Some of the specific things I want to do in this PR:. 1. Refactor SU2_GEO such that all its functionality can be performed in python (in progress); 2. Add a generalized thickness constraint (in progress); 3. Be able to do multiple types of geometry evaluation (for example wing+fuselage); 4. Expose some of the mesh deformation functions to python to allow for robust design variable definition; 5. Perform all of the shape optimization using the in-memory python scripts; 6. Intelligent handling of solution divergences that doesn't break the optimization; 7. Better way to define multipoint optimizations; 8. Better multi-objective optimization definition (#913 might be helpful in this); 9. Simplify the multitude of shape optimization options (#733). As you can probably tell, a lot of my examples and motivations revolve around aerospace applications. So while I try and make a general framework that is robust, I might not be thinking in a broad enough fashion. I would love to get input from the community for any functionality that they might want to see in this framework. The more robust this is, the more widely useful it will be. I am also a newbie to the python wrapper world of SU2. If there are any glaring road blocks or things that have been tried before but failed, please let me know. ; ; ## Related Work; #733 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; -",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/923
https://github.com/su2code/SU2/pull/923:2997,Performance,optimiz,optimization,2997,"aven't been updated for a while. For example, SU2_GEO is a bloated wrapper c++ script that calls a couple of CGeometry/CSurfaceMovement functions. The calling of these functions could be easily ported to python and increase the functionality of the Python Wrapper interface. . Some of the specific things I want to do in this PR:. 1. Refactor SU2_GEO such that all its functionality can be performed in python (in progress); 2. Add a generalized thickness constraint (in progress); 3. Be able to do multiple types of geometry evaluation (for example wing+fuselage); 4. Expose some of the mesh deformation functions to python to allow for robust design variable definition; 5. Perform all of the shape optimization using the in-memory python scripts; 6. Intelligent handling of solution divergences that doesn't break the optimization; 7. Better way to define multipoint optimizations; 8. Better multi-objective optimization definition (#913 might be helpful in this); 9. Simplify the multitude of shape optimization options (#733). As you can probably tell, a lot of my examples and motivations revolve around aerospace applications. So while I try and make a general framework that is robust, I might not be thinking in a broad enough fashion. I would love to get input from the community for any functionality that they might want to see in this framework. The more robust this is, the more widely useful it will be. I am also a newbie to the python wrapper world of SU2. If there are any glaring road blocks or things that have been tried before but failed, please let me know. ; ; ## Related Work; #733 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/923
https://github.com/su2code/SU2/pull/923:2563,Security,Expose,Expose,2563,"ython functions that take in a set of FFD points and aggregate their movement in the desired way. All this can be done without any incision into the C++ code, given a python interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't been updated for a while. For example, SU2_GEO is a bloated wrapper c++ script that calls a couple of CGeometry/CSurfaceMovement functions. The calling of these functions could be easily ported to python and increase the functionality of the Python Wrapper interface. . Some of the specific things I want to do in this PR:. 1. Refactor SU2_GEO such that all its functionality can be performed in python (in progress); 2. Add a generalized thickness constraint (in progress); 3. Be able to do multiple types of geometry evaluation (for example wing+fuselage); 4. Expose some of the mesh deformation functions to python to allow for robust design variable definition; 5. Perform all of the shape optimization using the in-memory python scripts; 6. Intelligent handling of solution divergences that doesn't break the optimization; 7. Better way to define multipoint optimizations; 8. Better multi-objective optimization definition (#913 might be helpful in this); 9. Simplify the multitude of shape optimization options (#733). As you can probably tell, a lot of my examples and motivations revolve around aerospace applications. So while I try and make a general framework that is robust, I might not be thinking in a broad enough fashion. I would love to get input from the community for any functionality that they might want to see in this framework. The more robust this is, the more widely useful it will be. I am also a newbie to the python wrapper world of SU2. If there are any glaring road blocks or things that have been tried before but failed, please let me know. ; ; ## Related Work; #733 . ## PR Checkli",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/923
https://github.com/su2code/SU2/pull/923:4153,Testability,test,test,4153," PR:. 1. Refactor SU2_GEO such that all its functionality can be performed in python (in progress); 2. Add a generalized thickness constraint (in progress); 3. Be able to do multiple types of geometry evaluation (for example wing+fuselage); 4. Expose some of the mesh deformation functions to python to allow for robust design variable definition; 5. Perform all of the shape optimization using the in-memory python scripts; 6. Intelligent handling of solution divergences that doesn't break the optimization; 7. Better way to define multipoint optimizations; 8. Better multi-objective optimization definition (#913 might be helpful in this); 9. Simplify the multitude of shape optimization options (#733). As you can probably tell, a lot of my examples and motivations revolve around aerospace applications. So while I try and make a general framework that is robust, I might not be thinking in a broad enough fashion. I would love to get input from the community for any functionality that they might want to see in this framework. The more robust this is, the more widely useful it will be. I am also a newbie to the python wrapper world of SU2. If there are any glaring road blocks or things that have been tried before but failed, please let me know. ; ; ## Related Work; #733 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/923
https://github.com/su2code/SU2/pull/923:508,Usability,user-friendly,user-friendly,508,"## Proposed Changes. This is a draft PR to discuss and document a much needed overhaul of the shape optimization features in SU2. There have been significant improvements to the main code base (for example, python wrapper integration, the new output structure, new mesh solver etc.) which haven't been leveraged by the shape optimization structure of SU2. . The main idea behind this overhaul is to move as much of the functionality of the current shape optimization framework to python. This creates a more user-friendly and robust interface for defining design variables and constraints. Its easy to make that claim, but let me elucidate it with an example:. > Suppose I am trying to optimize a wing for a given flight condition but I want more design freedom than altering the airfoil shapes along the wing using FFDs. I want to be able to control wing span, taper ratio, dihedral angle, twist, and any number of other geometrical representations of the wing. Currently, I would have to create a new Design Variable (DV) for most of those variables. If anyone has tried this, they know it is a tedious task with having to make alterations in various parts of the code.; >; > But all of these design variables can be represented by aggregations of FFD point movements. The span of the wing can be controlled by constraining the movement of FFD points in the y-direction to be proportional to their y coordinate. The current twist variable does a similar aggregation, at each twist location it rotates the corresponding 4 FFD points by the given angle. ; >; >These design variables could be represented by simple python functions that take in a set of FFD points and aggregate their movement in the desired way. All this can be done without any incision into the C++ code, given a python interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/923
https://github.com/su2code/SU2/pull/923:1607,Usability,simpl,simple,1607,"ucidate it with an example:. > Suppose I am trying to optimize a wing for a given flight condition but I want more design freedom than altering the airfoil shapes along the wing using FFDs. I want to be able to control wing span, taper ratio, dihedral angle, twist, and any number of other geometrical representations of the wing. Currently, I would have to create a new Design Variable (DV) for most of those variables. If anyone has tried this, they know it is a tedious task with having to make alterations in various parts of the code.; >; > But all of these design variables can be represented by aggregations of FFD point movements. The span of the wing can be controlled by constraining the movement of FFD points in the y-direction to be proportional to their y coordinate. The current twist variable does a similar aggregation, at each twist location it rotates the corresponding 4 FFD points by the given angle. ; >; >These design variables could be represented by simple python functions that take in a set of FFD points and aggregate their movement in the desired way. All this can be done without any incision into the C++ code, given a python interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't been updated for a while. For example, SU2_GEO is a bloated wrapper c++ script that calls a couple of CGeometry/CSurfaceMovement functions. The calling of these functions could be easily ported to python and increase the functionality of the Python Wrapper interface. . Some of the specific things I want to do in this PR:. 1. Refactor SU2_GEO such that all its functionality can be performed in python (in progress); 2. Add a generalized thickness constraint (in progress); 3. Be able to do multiple types of geometry evaluation (for example wing+fuselage); 4. Expose some of the mesh deformation functions to python to allow for r",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/923
https://github.com/su2code/SU2/pull/923:2965,Usability,Simpl,Simplify,2965,"aven't been updated for a while. For example, SU2_GEO is a bloated wrapper c++ script that calls a couple of CGeometry/CSurfaceMovement functions. The calling of these functions could be easily ported to python and increase the functionality of the Python Wrapper interface. . Some of the specific things I want to do in this PR:. 1. Refactor SU2_GEO such that all its functionality can be performed in python (in progress); 2. Add a generalized thickness constraint (in progress); 3. Be able to do multiple types of geometry evaluation (for example wing+fuselage); 4. Expose some of the mesh deformation functions to python to allow for robust design variable definition; 5. Perform all of the shape optimization using the in-memory python scripts; 6. Intelligent handling of solution divergences that doesn't break the optimization; 7. Better way to define multipoint optimizations; 8. Better multi-objective optimization definition (#913 might be helpful in this); 9. Simplify the multitude of shape optimization options (#733). As you can probably tell, a lot of my examples and motivations revolve around aerospace applications. So while I try and make a general framework that is robust, I might not be thinking in a broad enough fashion. I would love to get input from the community for any functionality that they might want to see in this framework. The more robust this is, the more widely useful it will be. I am also a newbie to the python wrapper world of SU2. If there are any glaring road blocks or things that have been tried before but failed, please let me know. ; ; ## Related Work; #733 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/923
https://github.com/su2code/SU2/pull/923:3775,Usability,guid,guide,3775," PR:. 1. Refactor SU2_GEO such that all its functionality can be performed in python (in progress); 2. Add a generalized thickness constraint (in progress); 3. Be able to do multiple types of geometry evaluation (for example wing+fuselage); 4. Expose some of the mesh deformation functions to python to allow for robust design variable definition; 5. Perform all of the shape optimization using the in-memory python scripts; 6. Intelligent handling of solution divergences that doesn't break the optimization; 7. Better way to define multipoint optimizations; 8. Better multi-objective optimization definition (#913 might be helpful in this); 9. Simplify the multitude of shape optimization options (#733). As you can probably tell, a lot of my examples and motivations revolve around aerospace applications. So while I try and make a general framework that is robust, I might not be thinking in a broad enough fashion. I would love to get input from the community for any functionality that they might want to see in this framework. The more robust this is, the more widely useful it will be. I am also a newbie to the python wrapper world of SU2. If there are any glaring road blocks or things that have been tried before but failed, please let me know. ; ; ## Related Work; #733 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/923
https://github.com/su2code/SU2/pull/924:991,Deployability,update,updated,991,"## Proposed Changes; I changed the wall distance computation so that it correctly incorporates also viscous walls in other zones. I am not 100% happy where it is implemented, but I have not found a better place for this computation. Furthermore this splits the nice indepedent preprocessing routines in the driver constructor. Nevertheless, I think it should be fine. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/924
https://github.com/su2code/SU2/pull/924:291,Integrability,rout,routines,291,"## Proposed Changes; I changed the wall distance computation so that it correctly incorporates also viscous walls in other zones. I am not 100% happy where it is implemented, but I have not found a better place for this computation. Furthermore this splits the nice indepedent preprocessing routines in the driver constructor. Nevertheless, I think it should be fine. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/924
https://github.com/su2code/SU2/pull/924:918,Testability,test,test,918,"## Proposed Changes; I changed the wall distance computation so that it correctly incorporates also viscous walls in other zones. I am not 100% happy where it is implemented, but I have not found a better place for this computation. Furthermore this splits the nice indepedent preprocessing routines in the driver constructor. Nevertheless, I think it should be fine. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/924
https://github.com/su2code/SU2/pull/924:540,Usability,guid,guide,540,"## Proposed Changes; I changed the wall distance computation so that it correctly incorporates also viscous walls in other zones. I am not 100% happy where it is implemented, but I have not found a better place for this computation. Furthermore this splits the nice indepedent preprocessing routines in the driver constructor. Nevertheless, I think it should be fine. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/924
https://github.com/su2code/SU2/pull/925:109,Availability,error,error,109,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; Fixed a spelling error in the top comment of the file CTemplateSolver.cpp in SU2_CFD/src/solvers/. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/925
https://github.com/su2code/SU2/pull/925:962,Deployability,update,updated,962,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; Fixed a spelling error in the top comment of the file CTemplateSolver.cpp in SU2_CFD/src/solvers/. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/925
https://github.com/su2code/SU2/pull/925:889,Testability,test,test,889,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; Fixed a spelling error in the top comment of the file CTemplateSolver.cpp in SU2_CFD/src/solvers/. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/925
https://github.com/su2code/SU2/pull/925:511,Usability,guid,guide,511,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; Fixed a spelling error in the top comment of the file CTemplateSolver.cpp in SU2_CFD/src/solvers/. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/925
https://github.com/su2code/SU2/issues/926:305,Availability,error,error,305,"The flow rate output for axisymmetric cases from SetAnalyzeSurface(...) is wrong due to the ""else"" on line 196 in CFlowOutput.cpp. When y[i] = 0 (the node lies on the axis) AxiFactor is just set to 1.0 instead of y[i] * 2 * pi (y-coordinate of the vertex of the primal grid) which may cause a significant error. For me I fixed it simply by setting "" else AxiFactor = 0.5 * y[i-1] * 2 * pi "" as the loop always ends on the axis. This works for my inlet and outlet (left to right) but this will fail if the loop starts at y=0 instead of ending there. Perhaps that could happen in a right to left domain. . There is certainly a safer more general way I imagine by accessing the y-coordinate of the vertex of the dual grid . AxiFactor = PI_NUMBER*geometry->node[geometry->vertex[iMarker][iVertex-1]->GetNode()]->GetCoord(1);",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/926
https://github.com/su2code/SU2/issues/926:625,Safety,safe,safer,625,"The flow rate output for axisymmetric cases from SetAnalyzeSurface(...) is wrong due to the ""else"" on line 196 in CFlowOutput.cpp. When y[i] = 0 (the node lies on the axis) AxiFactor is just set to 1.0 instead of y[i] * 2 * pi (y-coordinate of the vertex of the primal grid) which may cause a significant error. For me I fixed it simply by setting "" else AxiFactor = 0.5 * y[i-1] * 2 * pi "" as the loop always ends on the axis. This works for my inlet and outlet (left to right) but this will fail if the loop starts at y=0 instead of ending there. Perhaps that could happen in a right to left domain. . There is certainly a safer more general way I imagine by accessing the y-coordinate of the vertex of the dual grid . AxiFactor = PI_NUMBER*geometry->node[geometry->vertex[iMarker][iVertex-1]->GetNode()]->GetCoord(1);",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/926
https://github.com/su2code/SU2/issues/926:661,Security,access,accessing,661,"The flow rate output for axisymmetric cases from SetAnalyzeSurface(...) is wrong due to the ""else"" on line 196 in CFlowOutput.cpp. When y[i] = 0 (the node lies on the axis) AxiFactor is just set to 1.0 instead of y[i] * 2 * pi (y-coordinate of the vertex of the primal grid) which may cause a significant error. For me I fixed it simply by setting "" else AxiFactor = 0.5 * y[i-1] * 2 * pi "" as the loop always ends on the axis. This works for my inlet and outlet (left to right) but this will fail if the loop starts at y=0 instead of ending there. Perhaps that could happen in a right to left domain. . There is certainly a safer more general way I imagine by accessing the y-coordinate of the vertex of the dual grid . AxiFactor = PI_NUMBER*geometry->node[geometry->vertex[iMarker][iVertex-1]->GetNode()]->GetCoord(1);",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/926
https://github.com/su2code/SU2/issues/926:330,Usability,simpl,simply,330,"The flow rate output for axisymmetric cases from SetAnalyzeSurface(...) is wrong due to the ""else"" on line 196 in CFlowOutput.cpp. When y[i] = 0 (the node lies on the axis) AxiFactor is just set to 1.0 instead of y[i] * 2 * pi (y-coordinate of the vertex of the primal grid) which may cause a significant error. For me I fixed it simply by setting "" else AxiFactor = 0.5 * y[i-1] * 2 * pi "" as the loop always ends on the axis. This works for my inlet and outlet (left to right) but this will fail if the loop starts at y=0 instead of ending there. Perhaps that could happen in a right to left domain. . There is certainly a safer more general way I imagine by accessing the y-coordinate of the vertex of the dual grid . AxiFactor = PI_NUMBER*geometry->node[geometry->vertex[iMarker][iVertex-1]->GetNode()]->GetCoord(1);",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/926
https://github.com/su2code/SU2/pull/928:1003,Deployability,update,updated,1003,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This PR adds LES capabilities to the compressible Finite Volume solver. It uses the current SGS models implemented for the DG code. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [x ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/928
https://github.com/su2code/SU2/pull/928:930,Testability,test,test,930,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This PR adds LES capabilities to the compressible Finite Volume solver. It uses the current SGS models implemented for the DG code. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [x ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/928
https://github.com/su2code/SU2/pull/928:551,Usability,guid,guide,551,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This PR adds LES capabilities to the compressible Finite Volume solver. It uses the current SGS models implemented for the DG code. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [x ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/928
https://github.com/su2code/SU2/pull/929:695,Deployability,update,updated,695,"## Proposed Changes; This one's really small, but when running valgrind on some of my adaptation runs, I noticed that a lot of memory was being leaked due to not deleting direct_iteration and direct_output in CDiscAdjSinglezoneDriver.; ; ## Related Work; None that I'm aware of after a cursory look through PRs. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/929
https://github.com/su2code/SU2/pull/929:86,Energy Efficiency,adapt,adaptation,86,"## Proposed Changes; This one's really small, but when running valgrind on some of my adaptation runs, I noticed that a lot of memory was being leaked due to not deleting direct_iteration and direct_output in CDiscAdjSinglezoneDriver.; ; ## Related Work; None that I'm aware of after a cursory look through PRs. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/929
https://github.com/su2code/SU2/pull/929:86,Modifiability,adapt,adaptation,86,"## Proposed Changes; This one's really small, but when running valgrind on some of my adaptation runs, I noticed that a lot of memory was being leaked due to not deleting direct_iteration and direct_output in CDiscAdjSinglezoneDriver.; ; ## Related Work; None that I'm aware of after a cursory look through PRs. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/929
https://github.com/su2code/SU2/pull/929:622,Testability,test,test,622,"## Proposed Changes; This one's really small, but when running valgrind on some of my adaptation runs, I noticed that a lot of memory was being leaked due to not deleting direct_iteration and direct_output in CDiscAdjSinglezoneDriver.; ; ## Related Work; None that I'm aware of after a cursory look through PRs. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/929
https://github.com/su2code/SU2/pull/933:386,Availability,redundant,redundant,386,"## Proposed Changes; Implements some features that will be necessary to eventually replace the elasticity-based mesh deformation. Namely symmetry boundary condition and the use of the DEFORM_LIMIT option to limit how much of the domain is deformed. Reduces the discrete adjoint memory usage by disabling the recording of routines that are not relevant or differentiable. Cleans up some redundant MPI comms in CFEASolver and moves all of them to the methods of that solver (i.e. no more explicit MPI comms in structural integration / iteration). Makes the structural objective functions available as screen/history output under the name COMBO. Improves/fixes the incremental load approach when used for multizone problems. ## Related Work; #919 #594. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/933
https://github.com/su2code/SU2/pull/933:586,Availability,avail,available,586,"## Proposed Changes; Implements some features that will be necessary to eventually replace the elasticity-based mesh deformation. Namely symmetry boundary condition and the use of the DEFORM_LIMIT option to limit how much of the domain is deformed. Reduces the discrete adjoint memory usage by disabling the recording of routines that are not relevant or differentiable. Cleans up some redundant MPI comms in CFEASolver and moves all of them to the methods of that solver (i.e. no more explicit MPI comms in structural integration / iteration). Makes the structural objective functions available as screen/history output under the name COMBO. Improves/fixes the incremental load approach when used for multizone problems. ## Related Work; #919 #594. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/933
https://github.com/su2code/SU2/pull/933:519,Deployability,integrat,integration,519,"## Proposed Changes; Implements some features that will be necessary to eventually replace the elasticity-based mesh deformation. Namely symmetry boundary condition and the use of the DEFORM_LIMIT option to limit how much of the domain is deformed. Reduces the discrete adjoint memory usage by disabling the recording of routines that are not relevant or differentiable. Cleans up some redundant MPI comms in CFEASolver and moves all of them to the methods of that solver (i.e. no more explicit MPI comms in structural integration / iteration). Makes the structural objective functions available as screen/history output under the name COMBO. Improves/fixes the incremental load approach when used for multizone problems. ## Related Work; #919 #594. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/933
https://github.com/su2code/SU2/pull/933:1133,Deployability,update,updated,1133,"## Proposed Changes; Implements some features that will be necessary to eventually replace the elasticity-based mesh deformation. Namely symmetry boundary condition and the use of the DEFORM_LIMIT option to limit how much of the domain is deformed. Reduces the discrete adjoint memory usage by disabling the recording of routines that are not relevant or differentiable. Cleans up some redundant MPI comms in CFEASolver and moves all of them to the methods of that solver (i.e. no more explicit MPI comms in structural integration / iteration). Makes the structural objective functions available as screen/history output under the name COMBO. Improves/fixes the incremental load approach when used for multizone problems. ## Related Work; #919 #594. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/933
https://github.com/su2code/SU2/pull/933:249,Energy Efficiency,Reduce,Reduces,249,"## Proposed Changes; Implements some features that will be necessary to eventually replace the elasticity-based mesh deformation. Namely symmetry boundary condition and the use of the DEFORM_LIMIT option to limit how much of the domain is deformed. Reduces the discrete adjoint memory usage by disabling the recording of routines that are not relevant or differentiable. Cleans up some redundant MPI comms in CFEASolver and moves all of them to the methods of that solver (i.e. no more explicit MPI comms in structural integration / iteration). Makes the structural objective functions available as screen/history output under the name COMBO. Improves/fixes the incremental load approach when used for multizone problems. ## Related Work; #919 #594. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/933
https://github.com/su2code/SU2/pull/933:321,Integrability,rout,routines,321,"## Proposed Changes; Implements some features that will be necessary to eventually replace the elasticity-based mesh deformation. Namely symmetry boundary condition and the use of the DEFORM_LIMIT option to limit how much of the domain is deformed. Reduces the discrete adjoint memory usage by disabling the recording of routines that are not relevant or differentiable. Cleans up some redundant MPI comms in CFEASolver and moves all of them to the methods of that solver (i.e. no more explicit MPI comms in structural integration / iteration). Makes the structural objective functions available as screen/history output under the name COMBO. Improves/fixes the incremental load approach when used for multizone problems. ## Related Work; #919 #594. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/933
https://github.com/su2code/SU2/pull/933:519,Integrability,integrat,integration,519,"## Proposed Changes; Implements some features that will be necessary to eventually replace the elasticity-based mesh deformation. Namely symmetry boundary condition and the use of the DEFORM_LIMIT option to limit how much of the domain is deformed. Reduces the discrete adjoint memory usage by disabling the recording of routines that are not relevant or differentiable. Cleans up some redundant MPI comms in CFEASolver and moves all of them to the methods of that solver (i.e. no more explicit MPI comms in structural integration / iteration). Makes the structural objective functions available as screen/history output under the name COMBO. Improves/fixes the incremental load approach when used for multizone problems. ## Related Work; #919 #594. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/933
https://github.com/su2code/SU2/pull/933:674,Performance,load,load,674,"## Proposed Changes; Implements some features that will be necessary to eventually replace the elasticity-based mesh deformation. Namely symmetry boundary condition and the use of the DEFORM_LIMIT option to limit how much of the domain is deformed. Reduces the discrete adjoint memory usage by disabling the recording of routines that are not relevant or differentiable. Cleans up some redundant MPI comms in CFEASolver and moves all of them to the methods of that solver (i.e. no more explicit MPI comms in structural integration / iteration). Makes the structural objective functions available as screen/history output under the name COMBO. Improves/fixes the incremental load approach when used for multizone problems. ## Related Work; #919 #594. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/933
https://github.com/su2code/SU2/pull/933:386,Safety,redund,redundant,386,"## Proposed Changes; Implements some features that will be necessary to eventually replace the elasticity-based mesh deformation. Namely symmetry boundary condition and the use of the DEFORM_LIMIT option to limit how much of the domain is deformed. Reduces the discrete adjoint memory usage by disabling the recording of routines that are not relevant or differentiable. Cleans up some redundant MPI comms in CFEASolver and moves all of them to the methods of that solver (i.e. no more explicit MPI comms in structural integration / iteration). Makes the structural objective functions available as screen/history output under the name COMBO. Improves/fixes the incremental load approach when used for multizone problems. ## Related Work; #919 #594. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/933
https://github.com/su2code/SU2/pull/933:1060,Testability,test,test,1060,"## Proposed Changes; Implements some features that will be necessary to eventually replace the elasticity-based mesh deformation. Namely symmetry boundary condition and the use of the DEFORM_LIMIT option to limit how much of the domain is deformed. Reduces the discrete adjoint memory usage by disabling the recording of routines that are not relevant or differentiable. Cleans up some redundant MPI comms in CFEASolver and moves all of them to the methods of that solver (i.e. no more explicit MPI comms in structural integration / iteration). Makes the structural objective functions available as screen/history output under the name COMBO. Improves/fixes the incremental load approach when used for multizone problems. ## Related Work; #919 #594. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/933
https://github.com/su2code/SU2/pull/935:336,Availability,redundant,redundant,336,Those Set functions need to be called at least for the Get functions in CEulerSolver::Evaluate_ObjFunc unless they are supposed to be called somewhere else. These calls exist in the legacy output and seem to have been removed because SetHistoryOutputPerSurfaceValue is replacing them for the history/screen output. Perhaps this will be redundant when #913 is done,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/935
https://github.com/su2code/SU2/pull/935:336,Safety,redund,redundant,336,Those Set functions need to be called at least for the Get functions in CEulerSolver::Evaluate_ObjFunc unless they are supposed to be called somewhere else. These calls exist in the legacy output and seem to have been removed because SetHistoryOutputPerSurfaceValue is replacing them for the history/screen output. Perhaps this will be redundant when #913 is done,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/935
https://github.com/su2code/SU2/issues/936:180,Deployability,install,install,180,"**Describe the bug**; I am trying to compile SU2 on a Linux cluster. I have an mpi module loaded and I run the command ./mseon.py build and that works. Then I run ./ninja -C build install. It will try to compile SU2 but while compiling it asks for root access. ; This is the output I get:; Installing SU2_CFD/src/SU2_CFD to /usr/local/bin; Installation failed due to insufficient permissions.; Attempting to use polkit to gain elevated privileges...; ==== AUTHENTICATING FOR org.freedesktop.policykit.exec ===; Authentication is needed to run `/usr/bin/python3' as the super user; Authenticating as: root. Is there a way to compile SU2 without root access?. **Desktop (please complete the following information):**; - OS: CentOS Linux release 7.7.1908 (Core) ; - C++ compiler and version: gcc.x86_64 4.8.5-39.el7 ; - MPI implementation and version: openmpi-3.1.5-gcc-9.2.0-r3pnpzw; - SU2 Version: ver. 7.0.3 ""Blackbird""",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/936
https://github.com/su2code/SU2/issues/936:290,Deployability,Install,Installing,290,"**Describe the bug**; I am trying to compile SU2 on a Linux cluster. I have an mpi module loaded and I run the command ./mseon.py build and that works. Then I run ./ninja -C build install. It will try to compile SU2 but while compiling it asks for root access. ; This is the output I get:; Installing SU2_CFD/src/SU2_CFD to /usr/local/bin; Installation failed due to insufficient permissions.; Attempting to use polkit to gain elevated privileges...; ==== AUTHENTICATING FOR org.freedesktop.policykit.exec ===; Authentication is needed to run `/usr/bin/python3' as the super user; Authenticating as: root. Is there a way to compile SU2 without root access?. **Desktop (please complete the following information):**; - OS: CentOS Linux release 7.7.1908 (Core) ; - C++ compiler and version: gcc.x86_64 4.8.5-39.el7 ; - MPI implementation and version: openmpi-3.1.5-gcc-9.2.0-r3pnpzw; - SU2 Version: ver. 7.0.3 ""Blackbird""",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/936
https://github.com/su2code/SU2/issues/936:340,Deployability,Install,Installation,340,"**Describe the bug**; I am trying to compile SU2 on a Linux cluster. I have an mpi module loaded and I run the command ./mseon.py build and that works. Then I run ./ninja -C build install. It will try to compile SU2 but while compiling it asks for root access. ; This is the output I get:; Installing SU2_CFD/src/SU2_CFD to /usr/local/bin; Installation failed due to insufficient permissions.; Attempting to use polkit to gain elevated privileges...; ==== AUTHENTICATING FOR org.freedesktop.policykit.exec ===; Authentication is needed to run `/usr/bin/python3' as the super user; Authenticating as: root. Is there a way to compile SU2 without root access?. **Desktop (please complete the following information):**; - OS: CentOS Linux release 7.7.1908 (Core) ; - C++ compiler and version: gcc.x86_64 4.8.5-39.el7 ; - MPI implementation and version: openmpi-3.1.5-gcc-9.2.0-r3pnpzw; - SU2 Version: ver. 7.0.3 ""Blackbird""",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/936
https://github.com/su2code/SU2/issues/936:735,Deployability,release,release,735,"**Describe the bug**; I am trying to compile SU2 on a Linux cluster. I have an mpi module loaded and I run the command ./mseon.py build and that works. Then I run ./ninja -C build install. It will try to compile SU2 but while compiling it asks for root access. ; This is the output I get:; Installing SU2_CFD/src/SU2_CFD to /usr/local/bin; Installation failed due to insufficient permissions.; Attempting to use polkit to gain elevated privileges...; ==== AUTHENTICATING FOR org.freedesktop.policykit.exec ===; Authentication is needed to run `/usr/bin/python3' as the super user; Authenticating as: root. Is there a way to compile SU2 without root access?. **Desktop (please complete the following information):**; - OS: CentOS Linux release 7.7.1908 (Core) ; - C++ compiler and version: gcc.x86_64 4.8.5-39.el7 ; - MPI implementation and version: openmpi-3.1.5-gcc-9.2.0-r3pnpzw; - SU2 Version: ver. 7.0.3 ""Blackbird""",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/936
https://github.com/su2code/SU2/issues/936:90,Performance,load,loaded,90,"**Describe the bug**; I am trying to compile SU2 on a Linux cluster. I have an mpi module loaded and I run the command ./mseon.py build and that works. Then I run ./ninja -C build install. It will try to compile SU2 but while compiling it asks for root access. ; This is the output I get:; Installing SU2_CFD/src/SU2_CFD to /usr/local/bin; Installation failed due to insufficient permissions.; Attempting to use polkit to gain elevated privileges...; ==== AUTHENTICATING FOR org.freedesktop.policykit.exec ===; Authentication is needed to run `/usr/bin/python3' as the super user; Authenticating as: root. Is there a way to compile SU2 without root access?. **Desktop (please complete the following information):**; - OS: CentOS Linux release 7.7.1908 (Core) ; - C++ compiler and version: gcc.x86_64 4.8.5-39.el7 ; - MPI implementation and version: openmpi-3.1.5-gcc-9.2.0-r3pnpzw; - SU2 Version: ver. 7.0.3 ""Blackbird""",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/936
https://github.com/su2code/SU2/issues/936:253,Security,access,access,253,"**Describe the bug**; I am trying to compile SU2 on a Linux cluster. I have an mpi module loaded and I run the command ./mseon.py build and that works. Then I run ./ninja -C build install. It will try to compile SU2 but while compiling it asks for root access. ; This is the output I get:; Installing SU2_CFD/src/SU2_CFD to /usr/local/bin; Installation failed due to insufficient permissions.; Attempting to use polkit to gain elevated privileges...; ==== AUTHENTICATING FOR org.freedesktop.policykit.exec ===; Authentication is needed to run `/usr/bin/python3' as the super user; Authenticating as: root. Is there a way to compile SU2 without root access?. **Desktop (please complete the following information):**; - OS: CentOS Linux release 7.7.1908 (Core) ; - C++ compiler and version: gcc.x86_64 4.8.5-39.el7 ; - MPI implementation and version: openmpi-3.1.5-gcc-9.2.0-r3pnpzw; - SU2 Version: ver. 7.0.3 ""Blackbird""",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/936
https://github.com/su2code/SU2/issues/936:456,Security,AUTHENTICAT,AUTHENTICATING,456,"**Describe the bug**; I am trying to compile SU2 on a Linux cluster. I have an mpi module loaded and I run the command ./mseon.py build and that works. Then I run ./ninja -C build install. It will try to compile SU2 but while compiling it asks for root access. ; This is the output I get:; Installing SU2_CFD/src/SU2_CFD to /usr/local/bin; Installation failed due to insufficient permissions.; Attempting to use polkit to gain elevated privileges...; ==== AUTHENTICATING FOR org.freedesktop.policykit.exec ===; Authentication is needed to run `/usr/bin/python3' as the super user; Authenticating as: root. Is there a way to compile SU2 without root access?. **Desktop (please complete the following information):**; - OS: CentOS Linux release 7.7.1908 (Core) ; - C++ compiler and version: gcc.x86_64 4.8.5-39.el7 ; - MPI implementation and version: openmpi-3.1.5-gcc-9.2.0-r3pnpzw; - SU2 Version: ver. 7.0.3 ""Blackbird""",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/936
https://github.com/su2code/SU2/issues/936:511,Security,Authenticat,Authentication,511,"**Describe the bug**; I am trying to compile SU2 on a Linux cluster. I have an mpi module loaded and I run the command ./mseon.py build and that works. Then I run ./ninja -C build install. It will try to compile SU2 but while compiling it asks for root access. ; This is the output I get:; Installing SU2_CFD/src/SU2_CFD to /usr/local/bin; Installation failed due to insufficient permissions.; Attempting to use polkit to gain elevated privileges...; ==== AUTHENTICATING FOR org.freedesktop.policykit.exec ===; Authentication is needed to run `/usr/bin/python3' as the super user; Authenticating as: root. Is there a way to compile SU2 without root access?. **Desktop (please complete the following information):**; - OS: CentOS Linux release 7.7.1908 (Core) ; - C++ compiler and version: gcc.x86_64 4.8.5-39.el7 ; - MPI implementation and version: openmpi-3.1.5-gcc-9.2.0-r3pnpzw; - SU2 Version: ver. 7.0.3 ""Blackbird""",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/936
https://github.com/su2code/SU2/issues/936:581,Security,Authenticat,Authenticating,581,"**Describe the bug**; I am trying to compile SU2 on a Linux cluster. I have an mpi module loaded and I run the command ./mseon.py build and that works. Then I run ./ninja -C build install. It will try to compile SU2 but while compiling it asks for root access. ; This is the output I get:; Installing SU2_CFD/src/SU2_CFD to /usr/local/bin; Installation failed due to insufficient permissions.; Attempting to use polkit to gain elevated privileges...; ==== AUTHENTICATING FOR org.freedesktop.policykit.exec ===; Authentication is needed to run `/usr/bin/python3' as the super user; Authenticating as: root. Is there a way to compile SU2 without root access?. **Desktop (please complete the following information):**; - OS: CentOS Linux release 7.7.1908 (Core) ; - C++ compiler and version: gcc.x86_64 4.8.5-39.el7 ; - MPI implementation and version: openmpi-3.1.5-gcc-9.2.0-r3pnpzw; - SU2 Version: ver. 7.0.3 ""Blackbird""",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/936
https://github.com/su2code/SU2/issues/936:649,Security,access,access,649,"**Describe the bug**; I am trying to compile SU2 on a Linux cluster. I have an mpi module loaded and I run the command ./mseon.py build and that works. Then I run ./ninja -C build install. It will try to compile SU2 but while compiling it asks for root access. ; This is the output I get:; Installing SU2_CFD/src/SU2_CFD to /usr/local/bin; Installation failed due to insufficient permissions.; Attempting to use polkit to gain elevated privileges...; ==== AUTHENTICATING FOR org.freedesktop.policykit.exec ===; Authentication is needed to run `/usr/bin/python3' as the super user; Authenticating as: root. Is there a way to compile SU2 without root access?. **Desktop (please complete the following information):**; - OS: CentOS Linux release 7.7.1908 (Core) ; - C++ compiler and version: gcc.x86_64 4.8.5-39.el7 ; - MPI implementation and version: openmpi-3.1.5-gcc-9.2.0-r3pnpzw; - SU2 Version: ver. 7.0.3 ""Blackbird""",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/936
https://github.com/su2code/SU2/issues/937:239,Deployability,Install,Installing,239,"**Describe the bug**; This is an issue that @jayantmukho, @WallyMaier and I have seen when trying to build on Stanford's cluster with meson. Meson's call to `shutil.copystat()` fails, specifically on NFS filesystems, e.g.:; ```; [649/650] Installing files.; Installing SU2_CFD/src/SU2_CFD to /home/groups/jjalonso/su2/wwv/bin; Traceback (most recent call last):; File ""/home/groups/jjalonso/su2/wwv/externals/meson/mesonbuild/mesonmain.py"", line 129, in run; return options.run_func(options); File ""/home/groups/jjalonso/su2/wwv/externals/meson/mesonbuild/minstall.py"", line 515, in run; installer.do_install(datafilename); File ""/home/groups/jjalonso/su2/wwv/externals/meson/mesonbuild/minstall.py"", line 342, in do_install; self.install_targets(d); File ""/home/groups/jjalonso/su2/wwv/externals/meson/mesonbuild/minstall.py"", line 449, in install_targets; self.do_copyfile(fname, outname); File ""/home/groups/jjalonso/su2/wwv/externals/meson/mesonbuild/minstall.py"", line 258, in do_copyfile; shutil.copystat(from_file, to_file); File ""/share/software/user/open/python/3.6.1/lib/python3.6/shutil.py"", line 225, in copystat; _copyxattr(src, dst, follow_symlinks=follow); File ""/share/software/user/open/python/3.6.1/lib/python3.6/shutil.py"", line 164, in _copyxattr; value = os.getxattr(src, name, follow_symlinks=follow_symlinks); OSError: [Errno 22] Invalid argument: 'SU2_CFD/src/SU2_CFD'; ```; Commenting out the call to `copystat()` in line 258 of minstall.py (which doesn't seem critical for the installation) seems to fix the issue. I realize this isn't an issue specific to SU2, so I wanted peoples' opinions on how this should be handled. Just an addition to documentation?. **Desktop (please complete the following information):**; - OS: CentOS 7.x; - SU2 Version: v7.0.x",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/937
https://github.com/su2code/SU2/issues/937:258,Deployability,Install,Installing,258,"**Describe the bug**; This is an issue that @jayantmukho, @WallyMaier and I have seen when trying to build on Stanford's cluster with meson. Meson's call to `shutil.copystat()` fails, specifically on NFS filesystems, e.g.:; ```; [649/650] Installing files.; Installing SU2_CFD/src/SU2_CFD to /home/groups/jjalonso/su2/wwv/bin; Traceback (most recent call last):; File ""/home/groups/jjalonso/su2/wwv/externals/meson/mesonbuild/mesonmain.py"", line 129, in run; return options.run_func(options); File ""/home/groups/jjalonso/su2/wwv/externals/meson/mesonbuild/minstall.py"", line 515, in run; installer.do_install(datafilename); File ""/home/groups/jjalonso/su2/wwv/externals/meson/mesonbuild/minstall.py"", line 342, in do_install; self.install_targets(d); File ""/home/groups/jjalonso/su2/wwv/externals/meson/mesonbuild/minstall.py"", line 449, in install_targets; self.do_copyfile(fname, outname); File ""/home/groups/jjalonso/su2/wwv/externals/meson/mesonbuild/minstall.py"", line 258, in do_copyfile; shutil.copystat(from_file, to_file); File ""/share/software/user/open/python/3.6.1/lib/python3.6/shutil.py"", line 225, in copystat; _copyxattr(src, dst, follow_symlinks=follow); File ""/share/software/user/open/python/3.6.1/lib/python3.6/shutil.py"", line 164, in _copyxattr; value = os.getxattr(src, name, follow_symlinks=follow_symlinks); OSError: [Errno 22] Invalid argument: 'SU2_CFD/src/SU2_CFD'; ```; Commenting out the call to `copystat()` in line 258 of minstall.py (which doesn't seem critical for the installation) seems to fix the issue. I realize this isn't an issue specific to SU2, so I wanted peoples' opinions on how this should be handled. Just an addition to documentation?. **Desktop (please complete the following information):**; - OS: CentOS 7.x; - SU2 Version: v7.0.x",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/937
https://github.com/su2code/SU2/issues/937:588,Deployability,install,installer,588,"**Describe the bug**; This is an issue that @jayantmukho, @WallyMaier and I have seen when trying to build on Stanford's cluster with meson. Meson's call to `shutil.copystat()` fails, specifically on NFS filesystems, e.g.:; ```; [649/650] Installing files.; Installing SU2_CFD/src/SU2_CFD to /home/groups/jjalonso/su2/wwv/bin; Traceback (most recent call last):; File ""/home/groups/jjalonso/su2/wwv/externals/meson/mesonbuild/mesonmain.py"", line 129, in run; return options.run_func(options); File ""/home/groups/jjalonso/su2/wwv/externals/meson/mesonbuild/minstall.py"", line 515, in run; installer.do_install(datafilename); File ""/home/groups/jjalonso/su2/wwv/externals/meson/mesonbuild/minstall.py"", line 342, in do_install; self.install_targets(d); File ""/home/groups/jjalonso/su2/wwv/externals/meson/mesonbuild/minstall.py"", line 449, in install_targets; self.do_copyfile(fname, outname); File ""/home/groups/jjalonso/su2/wwv/externals/meson/mesonbuild/minstall.py"", line 258, in do_copyfile; shutil.copystat(from_file, to_file); File ""/share/software/user/open/python/3.6.1/lib/python3.6/shutil.py"", line 225, in copystat; _copyxattr(src, dst, follow_symlinks=follow); File ""/share/software/user/open/python/3.6.1/lib/python3.6/shutil.py"", line 164, in _copyxattr; value = os.getxattr(src, name, follow_symlinks=follow_symlinks); OSError: [Errno 22] Invalid argument: 'SU2_CFD/src/SU2_CFD'; ```; Commenting out the call to `copystat()` in line 258 of minstall.py (which doesn't seem critical for the installation) seems to fix the issue. I realize this isn't an issue specific to SU2, so I wanted peoples' opinions on how this should be handled. Just an addition to documentation?. **Desktop (please complete the following information):**; - OS: CentOS 7.x; - SU2 Version: v7.0.x",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/937
https://github.com/su2code/SU2/issues/937:1503,Deployability,install,installation,1503,"**Describe the bug**; This is an issue that @jayantmukho, @WallyMaier and I have seen when trying to build on Stanford's cluster with meson. Meson's call to `shutil.copystat()` fails, specifically on NFS filesystems, e.g.:; ```; [649/650] Installing files.; Installing SU2_CFD/src/SU2_CFD to /home/groups/jjalonso/su2/wwv/bin; Traceback (most recent call last):; File ""/home/groups/jjalonso/su2/wwv/externals/meson/mesonbuild/mesonmain.py"", line 129, in run; return options.run_func(options); File ""/home/groups/jjalonso/su2/wwv/externals/meson/mesonbuild/minstall.py"", line 515, in run; installer.do_install(datafilename); File ""/home/groups/jjalonso/su2/wwv/externals/meson/mesonbuild/minstall.py"", line 342, in do_install; self.install_targets(d); File ""/home/groups/jjalonso/su2/wwv/externals/meson/mesonbuild/minstall.py"", line 449, in install_targets; self.do_copyfile(fname, outname); File ""/home/groups/jjalonso/su2/wwv/externals/meson/mesonbuild/minstall.py"", line 258, in do_copyfile; shutil.copystat(from_file, to_file); File ""/share/software/user/open/python/3.6.1/lib/python3.6/shutil.py"", line 225, in copystat; _copyxattr(src, dst, follow_symlinks=follow); File ""/share/software/user/open/python/3.6.1/lib/python3.6/shutil.py"", line 164, in _copyxattr; value = os.getxattr(src, name, follow_symlinks=follow_symlinks); OSError: [Errno 22] Invalid argument: 'SU2_CFD/src/SU2_CFD'; ```; Commenting out the call to `copystat()` in line 258 of minstall.py (which doesn't seem critical for the installation) seems to fix the issue. I realize this isn't an issue specific to SU2, so I wanted peoples' opinions on how this should be handled. Just an addition to documentation?. **Desktop (please complete the following information):**; - OS: CentOS 7.x; - SU2 Version: v7.0.x",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/937
https://github.com/su2code/SU2/issues/938:30,Deployability,Install,Installed,30,"Hi Everyone. I'm new to SU2.; Installed on my mac (Catalina) the parallel version 7.0.2.; Also installed MPICH. I am not using bash but rather tcsh (maybe there is a problem there...); Added the following lines to .tcshrc:; setenv SU2_RUN /Applications/SU2/bin; setenv PYTHONPATH $SU2_RUN. I have tried to run the onera3D tutorial case in parallel and got the following message:; % parallel_computation.py -f inv_ONERAM6.cfg -n 2; Traceback (most recent call last):; File ""/Applications/SU2/bin//parallel_computation.py"", line 110, in <module>; main(); File ""/Applications/SU2/bin//parallel_computation.py"", line 57, in main; options.compute ); File ""/Applications/SU2/bin//parallel_computation.py"", line 88, in parallel_computation; info = SU2.run.CFD(config) ; File ""/Applications/SU2/bin/SU2/run/interface.py"", line 111, in CFD; the_Command = build_command( the_Command, processes ); File ""/Applications/SU2/bin/SU2/run/interface.py"", line 266, in build_command; raise RuntimeError('could not find an mpi interface'); RuntimeError: could not find an mpi interface. Ideas to what can I do?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/938
https://github.com/su2code/SU2/issues/938:95,Deployability,install,installed,95,"Hi Everyone. I'm new to SU2.; Installed on my mac (Catalina) the parallel version 7.0.2.; Also installed MPICH. I am not using bash but rather tcsh (maybe there is a problem there...); Added the following lines to .tcshrc:; setenv SU2_RUN /Applications/SU2/bin; setenv PYTHONPATH $SU2_RUN. I have tried to run the onera3D tutorial case in parallel and got the following message:; % parallel_computation.py -f inv_ONERAM6.cfg -n 2; Traceback (most recent call last):; File ""/Applications/SU2/bin//parallel_computation.py"", line 110, in <module>; main(); File ""/Applications/SU2/bin//parallel_computation.py"", line 57, in main; options.compute ); File ""/Applications/SU2/bin//parallel_computation.py"", line 88, in parallel_computation; info = SU2.run.CFD(config) ; File ""/Applications/SU2/bin/SU2/run/interface.py"", line 111, in CFD; the_Command = build_command( the_Command, processes ); File ""/Applications/SU2/bin/SU2/run/interface.py"", line 266, in build_command; raise RuntimeError('could not find an mpi interface'); RuntimeError: could not find an mpi interface. Ideas to what can I do?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/938
https://github.com/su2code/SU2/issues/938:370,Integrability,message,message,370,"Hi Everyone. I'm new to SU2.; Installed on my mac (Catalina) the parallel version 7.0.2.; Also installed MPICH. I am not using bash but rather tcsh (maybe there is a problem there...); Added the following lines to .tcshrc:; setenv SU2_RUN /Applications/SU2/bin; setenv PYTHONPATH $SU2_RUN. I have tried to run the onera3D tutorial case in parallel and got the following message:; % parallel_computation.py -f inv_ONERAM6.cfg -n 2; Traceback (most recent call last):; File ""/Applications/SU2/bin//parallel_computation.py"", line 110, in <module>; main(); File ""/Applications/SU2/bin//parallel_computation.py"", line 57, in main; options.compute ); File ""/Applications/SU2/bin//parallel_computation.py"", line 88, in parallel_computation; info = SU2.run.CFD(config) ; File ""/Applications/SU2/bin/SU2/run/interface.py"", line 111, in CFD; the_Command = build_command( the_Command, processes ); File ""/Applications/SU2/bin/SU2/run/interface.py"", line 266, in build_command; raise RuntimeError('could not find an mpi interface'); RuntimeError: could not find an mpi interface. Ideas to what can I do?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/938
https://github.com/su2code/SU2/issues/938:799,Integrability,interface,interface,799,"Hi Everyone. I'm new to SU2.; Installed on my mac (Catalina) the parallel version 7.0.2.; Also installed MPICH. I am not using bash but rather tcsh (maybe there is a problem there...); Added the following lines to .tcshrc:; setenv SU2_RUN /Applications/SU2/bin; setenv PYTHONPATH $SU2_RUN. I have tried to run the onera3D tutorial case in parallel and got the following message:; % parallel_computation.py -f inv_ONERAM6.cfg -n 2; Traceback (most recent call last):; File ""/Applications/SU2/bin//parallel_computation.py"", line 110, in <module>; main(); File ""/Applications/SU2/bin//parallel_computation.py"", line 57, in main; options.compute ); File ""/Applications/SU2/bin//parallel_computation.py"", line 88, in parallel_computation; info = SU2.run.CFD(config) ; File ""/Applications/SU2/bin/SU2/run/interface.py"", line 111, in CFD; the_Command = build_command( the_Command, processes ); File ""/Applications/SU2/bin/SU2/run/interface.py"", line 266, in build_command; raise RuntimeError('could not find an mpi interface'); RuntimeError: could not find an mpi interface. Ideas to what can I do?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/938
https://github.com/su2code/SU2/issues/938:923,Integrability,interface,interface,923,"Hi Everyone. I'm new to SU2.; Installed on my mac (Catalina) the parallel version 7.0.2.; Also installed MPICH. I am not using bash but rather tcsh (maybe there is a problem there...); Added the following lines to .tcshrc:; setenv SU2_RUN /Applications/SU2/bin; setenv PYTHONPATH $SU2_RUN. I have tried to run the onera3D tutorial case in parallel and got the following message:; % parallel_computation.py -f inv_ONERAM6.cfg -n 2; Traceback (most recent call last):; File ""/Applications/SU2/bin//parallel_computation.py"", line 110, in <module>; main(); File ""/Applications/SU2/bin//parallel_computation.py"", line 57, in main; options.compute ); File ""/Applications/SU2/bin//parallel_computation.py"", line 88, in parallel_computation; info = SU2.run.CFD(config) ; File ""/Applications/SU2/bin/SU2/run/interface.py"", line 111, in CFD; the_Command = build_command( the_Command, processes ); File ""/Applications/SU2/bin/SU2/run/interface.py"", line 266, in build_command; raise RuntimeError('could not find an mpi interface'); RuntimeError: could not find an mpi interface. Ideas to what can I do?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/938
https://github.com/su2code/SU2/issues/938:1008,Integrability,interface,interface,1008,"Hi Everyone. I'm new to SU2.; Installed on my mac (Catalina) the parallel version 7.0.2.; Also installed MPICH. I am not using bash but rather tcsh (maybe there is a problem there...); Added the following lines to .tcshrc:; setenv SU2_RUN /Applications/SU2/bin; setenv PYTHONPATH $SU2_RUN. I have tried to run the onera3D tutorial case in parallel and got the following message:; % parallel_computation.py -f inv_ONERAM6.cfg -n 2; Traceback (most recent call last):; File ""/Applications/SU2/bin//parallel_computation.py"", line 110, in <module>; main(); File ""/Applications/SU2/bin//parallel_computation.py"", line 57, in main; options.compute ); File ""/Applications/SU2/bin//parallel_computation.py"", line 88, in parallel_computation; info = SU2.run.CFD(config) ; File ""/Applications/SU2/bin/SU2/run/interface.py"", line 111, in CFD; the_Command = build_command( the_Command, processes ); File ""/Applications/SU2/bin/SU2/run/interface.py"", line 266, in build_command; raise RuntimeError('could not find an mpi interface'); RuntimeError: could not find an mpi interface. Ideas to what can I do?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/938
https://github.com/su2code/SU2/issues/938:1057,Integrability,interface,interface,1057,"Hi Everyone. I'm new to SU2.; Installed on my mac (Catalina) the parallel version 7.0.2.; Also installed MPICH. I am not using bash but rather tcsh (maybe there is a problem there...); Added the following lines to .tcshrc:; setenv SU2_RUN /Applications/SU2/bin; setenv PYTHONPATH $SU2_RUN. I have tried to run the onera3D tutorial case in parallel and got the following message:; % parallel_computation.py -f inv_ONERAM6.cfg -n 2; Traceback (most recent call last):; File ""/Applications/SU2/bin//parallel_computation.py"", line 110, in <module>; main(); File ""/Applications/SU2/bin//parallel_computation.py"", line 57, in main; options.compute ); File ""/Applications/SU2/bin//parallel_computation.py"", line 88, in parallel_computation; info = SU2.run.CFD(config) ; File ""/Applications/SU2/bin/SU2/run/interface.py"", line 111, in CFD; the_Command = build_command( the_Command, processes ); File ""/Applications/SU2/bin/SU2/run/interface.py"", line 266, in build_command; raise RuntimeError('could not find an mpi interface'); RuntimeError: could not find an mpi interface. Ideas to what can I do?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/938
https://github.com/su2code/SU2/issues/938:753,Modifiability,config,config,753,"Hi Everyone. I'm new to SU2.; Installed on my mac (Catalina) the parallel version 7.0.2.; Also installed MPICH. I am not using bash but rather tcsh (maybe there is a problem there...); Added the following lines to .tcshrc:; setenv SU2_RUN /Applications/SU2/bin; setenv PYTHONPATH $SU2_RUN. I have tried to run the onera3D tutorial case in parallel and got the following message:; % parallel_computation.py -f inv_ONERAM6.cfg -n 2; Traceback (most recent call last):; File ""/Applications/SU2/bin//parallel_computation.py"", line 110, in <module>; main(); File ""/Applications/SU2/bin//parallel_computation.py"", line 57, in main; options.compute ); File ""/Applications/SU2/bin//parallel_computation.py"", line 88, in parallel_computation; info = SU2.run.CFD(config) ; File ""/Applications/SU2/bin/SU2/run/interface.py"", line 111, in CFD; the_Command = build_command( the_Command, processes ); File ""/Applications/SU2/bin/SU2/run/interface.py"", line 266, in build_command; raise RuntimeError('could not find an mpi interface'); RuntimeError: could not find an mpi interface. Ideas to what can I do?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/938
https://github.com/su2code/SU2/issues/939:19,Testability,test,test,19,"**The Bug**; In 2D test cases, (I tested an unsteady RANS flow), setting the option VOLUME_OUTPUT = VORTEX_IDENTIFICATION has no effect. This means, the output field ""vorticity"" is not written to the .vtk (or other output) file. Checking the source code, i thing that this is caused by the following lines of code in `src/output/CFlowCompOutput.cpp.`, Line 404 : . ` if (nDim == 3) { ; `; `AddVolumeOutput(""VORTICITY_X"", ""Vorticity_x"", ""VORTEX_IDENTIFICATION"", ""x-component of the vorticity vector""); ` ; `AddVolumeOutput(""VORTICITY_Y"", ""Vorticity_y"", ""VORTEX_IDENTIFICATION"", ""y-component of the vorticity vector"");`; `AddVolumeOutput(""Q_CRITERION"", ""Q_Criterion"", ""VORTEX_IDENTIFICATION"", ""Value of the Q-Criterion"");; }`. Then, in 2D, we have only `VORTICITY_Z` written to the VolumeOutput. I believe, that somewhere else, the executable must fail by writing `VORTICITY_Z` due to missing `VORTICITY_X`. **To Reproduce**; Execute `direct_differentiation.py -f 0_naca0012.cfg -n 4` to repoduce the issue.; Files are attached below.; [reproducible_vorticity_issue.zip](https://github.com/su2code/SU2/files/4493025/reproducible_vorticity_issue.zip). **Desktop:**; - OS: Manjaro 19.0.2 ; - C++ compiler and version: gcc 9.3.0; - MPI implementation and version: mpirun (Open MPI) 4.0.3; - SU2 Version: 9.0.2",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/939
https://github.com/su2code/SU2/issues/939:34,Testability,test,tested,34,"**The Bug**; In 2D test cases, (I tested an unsteady RANS flow), setting the option VOLUME_OUTPUT = VORTEX_IDENTIFICATION has no effect. This means, the output field ""vorticity"" is not written to the .vtk (or other output) file. Checking the source code, i thing that this is caused by the following lines of code in `src/output/CFlowCompOutput.cpp.`, Line 404 : . ` if (nDim == 3) { ; `; `AddVolumeOutput(""VORTICITY_X"", ""Vorticity_x"", ""VORTEX_IDENTIFICATION"", ""x-component of the vorticity vector""); ` ; `AddVolumeOutput(""VORTICITY_Y"", ""Vorticity_y"", ""VORTEX_IDENTIFICATION"", ""y-component of the vorticity vector"");`; `AddVolumeOutput(""Q_CRITERION"", ""Q_Criterion"", ""VORTEX_IDENTIFICATION"", ""Value of the Q-Criterion"");; }`. Then, in 2D, we have only `VORTICITY_Z` written to the VolumeOutput. I believe, that somewhere else, the executable must fail by writing `VORTICITY_Z` due to missing `VORTICITY_X`. **To Reproduce**; Execute `direct_differentiation.py -f 0_naca0012.cfg -n 4` to repoduce the issue.; Files are attached below.; [reproducible_vorticity_issue.zip](https://github.com/su2code/SU2/files/4493025/reproducible_vorticity_issue.zip). **Desktop:**; - OS: Manjaro 19.0.2 ; - C++ compiler and version: gcc 9.3.0; - MPI implementation and version: mpirun (Open MPI) 4.0.3; - SU2 Version: 9.0.2",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/939
https://github.com/su2code/SU2/issues/940:1534,Integrability,depend,dependent,1534,"**Is your feature request related to a problem? Please describe.**. I've noticed, that the flow solutions of SU2 have changed shortly before launch of version 7.0.0. In detail, I've computed an unsteady flow field around an airfoil with high angle of attack and its design sensitivities. Whereas the sensitivities computed with the old version exhibited periodic behaviour, the sensitivities computed with the new version explode and show somehow chaotic behaviour. ; Above sensitivities where computed using the `direct_differentiation.py` script. ; Naturally an adjoint sensitivity computation with the newer version fails to converge. In the older version, adjoint and direct sensitivities match. . By older version, I mean before commit https://github.com/su2code/SU2/commit/56ee75 ,; and by newer version, I mean after commit https://github.com/su2code/SU2/commit/714d7e9 . Somewhere between these two commits, the unit tests for (unsteady) flows have been adjusted, so I think this is where the change happened. . **Describe the solution you'd like**. Is it possible to provide an option to switch to the old behavior of SU2 in the sense of this flow computation?; What was the reason for this change, so to say?. I think @BeckettZhou and @talbring might be interested in this. . ** Files to reproduce the issue**. I've attached two .zip files. One contains the an example of the older code and one contains the example of the newer code. You can see that both .cfg files are identical. To emphasize the issue, compare the time dependent DRAG and D_DRAG of both history.csv files, that are provided. [01_older.zip](https://github.com/su2code/SU2/files/4493235/01_older.zip); [02_newer.zip](https://github.com/su2code/SU2/files/4493236/02_newer.zip). Kind regards,; Steffen",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/940
https://github.com/su2code/SU2/issues/940:251,Security,attack,attack,251,"**Is your feature request related to a problem? Please describe.**. I've noticed, that the flow solutions of SU2 have changed shortly before launch of version 7.0.0. In detail, I've computed an unsteady flow field around an airfoil with high angle of attack and its design sensitivities. Whereas the sensitivities computed with the old version exhibited periodic behaviour, the sensitivities computed with the new version explode and show somehow chaotic behaviour. ; Above sensitivities where computed using the `direct_differentiation.py` script. ; Naturally an adjoint sensitivity computation with the newer version fails to converge. In the older version, adjoint and direct sensitivities match. . By older version, I mean before commit https://github.com/su2code/SU2/commit/56ee75 ,; and by newer version, I mean after commit https://github.com/su2code/SU2/commit/714d7e9 . Somewhere between these two commits, the unit tests for (unsteady) flows have been adjusted, so I think this is where the change happened. . **Describe the solution you'd like**. Is it possible to provide an option to switch to the old behavior of SU2 in the sense of this flow computation?; What was the reason for this change, so to say?. I think @BeckettZhou and @talbring might be interested in this. . ** Files to reproduce the issue**. I've attached two .zip files. One contains the an example of the older code and one contains the example of the newer code. You can see that both .cfg files are identical. To emphasize the issue, compare the time dependent DRAG and D_DRAG of both history.csv files, that are provided. [01_older.zip](https://github.com/su2code/SU2/files/4493235/01_older.zip); [02_newer.zip](https://github.com/su2code/SU2/files/4493236/02_newer.zip). Kind regards,; Steffen",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/940
https://github.com/su2code/SU2/issues/940:925,Testability,test,tests,925,"**Is your feature request related to a problem? Please describe.**. I've noticed, that the flow solutions of SU2 have changed shortly before launch of version 7.0.0. In detail, I've computed an unsteady flow field around an airfoil with high angle of attack and its design sensitivities. Whereas the sensitivities computed with the old version exhibited periodic behaviour, the sensitivities computed with the new version explode and show somehow chaotic behaviour. ; Above sensitivities where computed using the `direct_differentiation.py` script. ; Naturally an adjoint sensitivity computation with the newer version fails to converge. In the older version, adjoint and direct sensitivities match. . By older version, I mean before commit https://github.com/su2code/SU2/commit/56ee75 ,; and by newer version, I mean after commit https://github.com/su2code/SU2/commit/714d7e9 . Somewhere between these two commits, the unit tests for (unsteady) flows have been adjusted, so I think this is where the change happened. . **Describe the solution you'd like**. Is it possible to provide an option to switch to the old behavior of SU2 in the sense of this flow computation?; What was the reason for this change, so to say?. I think @BeckettZhou and @talbring might be interested in this. . ** Files to reproduce the issue**. I've attached two .zip files. One contains the an example of the older code and one contains the example of the newer code. You can see that both .cfg files are identical. To emphasize the issue, compare the time dependent DRAG and D_DRAG of both history.csv files, that are provided. [01_older.zip](https://github.com/su2code/SU2/files/4493235/01_older.zip); [02_newer.zip](https://github.com/su2code/SU2/files/4493236/02_newer.zip). Kind regards,; Steffen",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/940
https://github.com/su2code/SU2/pull/941:536,Deployability,update,updated,536,"## Proposed Changes; Here is a funny fix. ## Related Work; #939; #789 fixes a deadlock during restart of unsteady cases (two bugs for the price of one). ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/941
https://github.com/su2code/SU2/pull/941:463,Testability,test,test,463,"## Proposed Changes; Here is a funny fix. ## Related Work; #939; #789 fixes a deadlock during restart of unsteady cases (two bugs for the price of one). ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/941
https://github.com/su2code/SU2/issues/942:974,Usability,user-friendly,user-friendly,974,"Setting WRT_BINARY_RESTART=NO is irrelevant, the output format is determined by OUTPUT_FILES. Is this option around just because of the legacy output? Should it have any effect in the new output?. One needs to set both VISUALIZE_SURFACE_DEF and a surface output format to get a file.; One needs to set both VISUALIZE_VOLUME_DEF and a volume output format to get a file.; Should we just remove these two and let OUTPUT_FILES ""decide"" what is outputted?. Can we get rid of DISCADJ_LIN_SOLVER and DISCADJ_LIN_PREC and use what is set for the direct solver? Or alternatively, in discrete adjoint problems, use these settings for the primal (recording phase)?; This is annoying because if you use FGMRES for the direct problem and happen to need more linear iterations for the discrete adjoint (say 10 -> 100) in which case you probably switch to BCGSTAB (due to memory), one needs to set/change two options. If there are options that grind your gears or you think could be more user-friendly lets list them.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/942
https://github.com/su2code/SU2/pull/943:470,Deployability,update,updated,470,"## Proposed Changes; Add the `Wtime` function to the MPI wrapper (to avoid `#ifdefs`). ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/943
https://github.com/su2code/SU2/pull/943:57,Integrability,wrap,wrapper,57,"## Proposed Changes; Add the `Wtime` function to the MPI wrapper (to avoid `#ifdefs`). ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/943
https://github.com/su2code/SU2/pull/943:69,Safety,avoid,avoid,69,"## Proposed Changes; Add the `Wtime` function to the MPI wrapper (to avoid `#ifdefs`). ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/943
https://github.com/su2code/SU2/pull/943:397,Testability,test,test,397,"## Proposed Changes; Add the `Wtime` function to the MPI wrapper (to avoid `#ifdefs`). ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/943
https://github.com/su2code/SU2/issues/944:278,Energy Efficiency,reduce,reduces,278,"The inlet interpolation capability that I introduced #815 is working as expected with one or few cores. For a case that I have, if I go beyond 5 cores (mpirun -n 6) the output Interpolated File has a lesser number of lines printed. There should be 5517 lines but going beyond 5 reduces them to ~3000 lines (Each line representing a node at the inlet). My best guess is that the interpolation is happening correctly but during the cout for the interpolated file, something goes wrong. I tried rank==MASTER_NODE before calling the PrintInletInterpolatedData() but that didn't resolve the issue. Is this only a cout issue? How can this be resolved?. Thanks in advance.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/944
https://github.com/su2code/SU2/pull/945:113,Availability,error,error,113,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; Fix a minor spelling error for a comment in CNumerics. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/945
https://github.com/su2code/SU2/pull/945:918,Deployability,update,updated,918,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; Fix a minor spelling error for a comment in CNumerics. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/945
https://github.com/su2code/SU2/pull/945:845,Testability,test,test,845,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; Fix a minor spelling error for a comment in CNumerics. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/945
https://github.com/su2code/SU2/pull/945:467,Usability,guid,guide,467,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; Fix a minor spelling error for a comment in CNumerics. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/945
https://github.com/su2code/SU2/issues/946:421,Deployability,update,updateHistoryMap,421,"The shape_optimization.py script fails when setting `OPT_OBJECTIVE= TOTAL_HEATFLUX `.; The name of the variables have apparently been changed, but this change is not reflected in files _SU2_CFD/src/output/CFlowCompOutput.cpp_ and _SU2_CFD/src/output/CFlowIncOutput.cpp_. In those files, replacing all instances of `""HEATFLUX""` with `""TOTAL_HEATFLUX""` solves the problem. ; For reference, I also run the script SU2/SU2_PY/updateHistoryMap.py after recompiling, but I am not sure if this is needed. **Desktop (please complete the following information):**; - OS: Linux (Red Hat 7.6); - C++ compiler and version: g++ 8.3.0; - MPI: mvapich 2.3.1; - SU2 Version: v7.0.3",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/946
https://github.com/su2code/SU2/issues/946:103,Modifiability,variab,variables,103,"The shape_optimization.py script fails when setting `OPT_OBJECTIVE= TOTAL_HEATFLUX `.; The name of the variables have apparently been changed, but this change is not reflected in files _SU2_CFD/src/output/CFlowCompOutput.cpp_ and _SU2_CFD/src/output/CFlowIncOutput.cpp_. In those files, replacing all instances of `""HEATFLUX""` with `""TOTAL_HEATFLUX""` solves the problem. ; For reference, I also run the script SU2/SU2_PY/updateHistoryMap.py after recompiling, but I am not sure if this is needed. **Desktop (please complete the following information):**; - OS: Linux (Red Hat 7.6); - C++ compiler and version: g++ 8.3.0; - MPI: mvapich 2.3.1; - SU2 Version: v7.0.3",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/946
https://github.com/su2code/SU2/pull/947:157,Deployability,update,updateHistoryMap,157,"Change HEATFLUX to TOTAL_HEATFLUX in output files so that optimization works correctly with OPT_OBJECTIVE= TOTAL_HEATFLUX; ; Additionally, a small change to updateHistoryMap.py has been made (a ""/"" in a path was missing), and historyMap.py has been modified by running updateHistoryMap.py. This fixes [#946](https://github.com/su2code/SU2/issues/946). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch. - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/947
https://github.com/su2code/SU2/pull/947:269,Deployability,update,updateHistoryMap,269,"Change HEATFLUX to TOTAL_HEATFLUX in output files so that optimization works correctly with OPT_OBJECTIVE= TOTAL_HEATFLUX; ; Additionally, a small change to updateHistoryMap.py has been made (a ""/"" in a path was missing), and historyMap.py has been modified by running updateHistoryMap.py. This fixes [#946](https://github.com/su2code/SU2/issues/946). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch. - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/947
https://github.com/su2code/SU2/pull/947:974,Deployability,update,updated,974,"Change HEATFLUX to TOTAL_HEATFLUX in output files so that optimization works correctly with OPT_OBJECTIVE= TOTAL_HEATFLUX; ; Additionally, a small change to updateHistoryMap.py has been made (a ""/"" in a path was missing), and historyMap.py has been modified by running updateHistoryMap.py. This fixes [#946](https://github.com/su2code/SU2/issues/946). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch. - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/947
https://github.com/su2code/SU2/pull/947:58,Performance,optimiz,optimization,58,"Change HEATFLUX to TOTAL_HEATFLUX in output files so that optimization works correctly with OPT_OBJECTIVE= TOTAL_HEATFLUX; ; Additionally, a small change to updateHistoryMap.py has been made (a ""/"" in a path was missing), and historyMap.py has been modified by running updateHistoryMap.py. This fixes [#946](https://github.com/su2code/SU2/issues/946). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch. - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/947
https://github.com/su2code/SU2/pull/947:901,Testability,test,test,901,"Change HEATFLUX to TOTAL_HEATFLUX in output files so that optimization works correctly with OPT_OBJECTIVE= TOTAL_HEATFLUX; ; Additionally, a small change to updateHistoryMap.py has been made (a ""/"" in a path was missing), and historyMap.py has been modified by running updateHistoryMap.py. This fixes [#946](https://github.com/su2code/SU2/issues/946). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch. - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/947
https://github.com/su2code/SU2/pull/947:524,Usability,guid,guide,524,"Change HEATFLUX to TOTAL_HEATFLUX in output files so that optimization works correctly with OPT_OBJECTIVE= TOTAL_HEATFLUX; ; Additionally, a small change to updateHistoryMap.py has been made (a ""/"" in a path was missing), and historyMap.py has been modified by running updateHistoryMap.py. This fixes [#946](https://github.com/su2code/SU2/issues/946). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch. - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/947
https://github.com/su2code/SU2/issues/948:148,Availability,error,error,148,"Hello everyone,. We are trying to use SU2-pyamg on the server. ; We followed the installation steps on SU2 website and did not face any compilation error. . Steps we followed:; 1. Download the file with git (""Install a custom version of SU2"" section in https://pyamg.saclay.inria.fr/pyamg.html); 2. cd SU2; 3. ./bootstrap; 4. ./configure --prefix=$HOME/SU2 --enable-mpi --with-cc=/opt/intel/compilers_and_libraries_2019.5.281/linux/mpi/intel64/bin/mpicc --with-cxx=/opt/intel/compilers_and_libraries_2019.5.281/linux/mpi/intel64/bin/mpicxx CXXFLAGS=""-O3"" ; 5. make -j 8 ; 6. make install. Then we added the following lines to bashrc file:. export PYTHONPATH=""/usr/lib64/python2.7/site-packages""; export SU2_RUN=""$HOME/su2-installed/bin""; export SU2_HOME=""$HOME/SU2""; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. We downloaded example file from pyamg website:; https://pyamg.saclay.inria.fr/pyamgexamples.html (Adaptive 3D ONERA M6 wing example). During running, we encountered the following error:. $HOME/su2-installed/bin/mesh_adaptation_amg.py -f adap_ONERAM6.cfg -n 4 > out.txt &; [1] 166739; [user@host pyamg-su-test]$ Traceback (most recent call last):; File ""/home/eduline/su2-installed/bin/mesh_adaptation_amg.py"", line 111, in <module>; main(); File ""/home/eduline/su2-installed/bin/mesh_adaptation_amg.py"", line 72, in main; options.save_all ); File ""/home/eduline/su2-installed/bin/mesh_adaptation_amg.py"", line 101, in mesh_adaptation_amg; SU2.run.amg(config); File ""/home/eduline/su2-installed/bin/SU2/run/amg.py"", line 212, in amg; pyamg.su2_to_libmeshb(config_amg['adap_back'], """", ""amg_back""); **UnboundLocalError: local variable 'pyamg' referenced before assignment**. Python version is 2.7.5 and we installed pyamg by running ""sudo pip install pyamg"". . Any help would be appreciated. Best regards,. Mirac",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948
https://github.com/su2code/SU2/issues/948:180,Availability,Down,Download,180,"Hello everyone,. We are trying to use SU2-pyamg on the server. ; We followed the installation steps on SU2 website and did not face any compilation error. . Steps we followed:; 1. Download the file with git (""Install a custom version of SU2"" section in https://pyamg.saclay.inria.fr/pyamg.html); 2. cd SU2; 3. ./bootstrap; 4. ./configure --prefix=$HOME/SU2 --enable-mpi --with-cc=/opt/intel/compilers_and_libraries_2019.5.281/linux/mpi/intel64/bin/mpicc --with-cxx=/opt/intel/compilers_and_libraries_2019.5.281/linux/mpi/intel64/bin/mpicxx CXXFLAGS=""-O3"" ; 5. make -j 8 ; 6. make install. Then we added the following lines to bashrc file:. export PYTHONPATH=""/usr/lib64/python2.7/site-packages""; export SU2_RUN=""$HOME/su2-installed/bin""; export SU2_HOME=""$HOME/SU2""; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. We downloaded example file from pyamg website:; https://pyamg.saclay.inria.fr/pyamgexamples.html (Adaptive 3D ONERA M6 wing example). During running, we encountered the following error:. $HOME/su2-installed/bin/mesh_adaptation_amg.py -f adap_ONERAM6.cfg -n 4 > out.txt &; [1] 166739; [user@host pyamg-su-test]$ Traceback (most recent call last):; File ""/home/eduline/su2-installed/bin/mesh_adaptation_amg.py"", line 111, in <module>; main(); File ""/home/eduline/su2-installed/bin/mesh_adaptation_amg.py"", line 72, in main; options.save_all ); File ""/home/eduline/su2-installed/bin/mesh_adaptation_amg.py"", line 101, in mesh_adaptation_amg; SU2.run.amg(config); File ""/home/eduline/su2-installed/bin/SU2/run/amg.py"", line 212, in amg; pyamg.su2_to_libmeshb(config_amg['adap_back'], """", ""amg_back""); **UnboundLocalError: local variable 'pyamg' referenced before assignment**. Python version is 2.7.5 and we installed pyamg by running ""sudo pip install pyamg"". . Any help would be appreciated. Best regards,. Mirac",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948
https://github.com/su2code/SU2/issues/948:838,Availability,down,downloaded,838,"Hello everyone,. We are trying to use SU2-pyamg on the server. ; We followed the installation steps on SU2 website and did not face any compilation error. . Steps we followed:; 1. Download the file with git (""Install a custom version of SU2"" section in https://pyamg.saclay.inria.fr/pyamg.html); 2. cd SU2; 3. ./bootstrap; 4. ./configure --prefix=$HOME/SU2 --enable-mpi --with-cc=/opt/intel/compilers_and_libraries_2019.5.281/linux/mpi/intel64/bin/mpicc --with-cxx=/opt/intel/compilers_and_libraries_2019.5.281/linux/mpi/intel64/bin/mpicxx CXXFLAGS=""-O3"" ; 5. make -j 8 ; 6. make install. Then we added the following lines to bashrc file:. export PYTHONPATH=""/usr/lib64/python2.7/site-packages""; export SU2_RUN=""$HOME/su2-installed/bin""; export SU2_HOME=""$HOME/SU2""; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. We downloaded example file from pyamg website:; https://pyamg.saclay.inria.fr/pyamgexamples.html (Adaptive 3D ONERA M6 wing example). During running, we encountered the following error:. $HOME/su2-installed/bin/mesh_adaptation_amg.py -f adap_ONERAM6.cfg -n 4 > out.txt &; [1] 166739; [user@host pyamg-su-test]$ Traceback (most recent call last):; File ""/home/eduline/su2-installed/bin/mesh_adaptation_amg.py"", line 111, in <module>; main(); File ""/home/eduline/su2-installed/bin/mesh_adaptation_amg.py"", line 72, in main; options.save_all ); File ""/home/eduline/su2-installed/bin/mesh_adaptation_amg.py"", line 101, in mesh_adaptation_amg; SU2.run.amg(config); File ""/home/eduline/su2-installed/bin/SU2/run/amg.py"", line 212, in amg; pyamg.su2_to_libmeshb(config_amg['adap_back'], """", ""amg_back""); **UnboundLocalError: local variable 'pyamg' referenced before assignment**. Python version is 2.7.5 and we installed pyamg by running ""sudo pip install pyamg"". . Any help would be appreciated. Best regards,. Mirac",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948
https://github.com/su2code/SU2/issues/948:1014,Availability,error,error,1014,"Hello everyone,. We are trying to use SU2-pyamg on the server. ; We followed the installation steps on SU2 website and did not face any compilation error. . Steps we followed:; 1. Download the file with git (""Install a custom version of SU2"" section in https://pyamg.saclay.inria.fr/pyamg.html); 2. cd SU2; 3. ./bootstrap; 4. ./configure --prefix=$HOME/SU2 --enable-mpi --with-cc=/opt/intel/compilers_and_libraries_2019.5.281/linux/mpi/intel64/bin/mpicc --with-cxx=/opt/intel/compilers_and_libraries_2019.5.281/linux/mpi/intel64/bin/mpicxx CXXFLAGS=""-O3"" ; 5. make -j 8 ; 6. make install. Then we added the following lines to bashrc file:. export PYTHONPATH=""/usr/lib64/python2.7/site-packages""; export SU2_RUN=""$HOME/su2-installed/bin""; export SU2_HOME=""$HOME/SU2""; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. We downloaded example file from pyamg website:; https://pyamg.saclay.inria.fr/pyamgexamples.html (Adaptive 3D ONERA M6 wing example). During running, we encountered the following error:. $HOME/su2-installed/bin/mesh_adaptation_amg.py -f adap_ONERAM6.cfg -n 4 > out.txt &; [1] 166739; [user@host pyamg-su-test]$ Traceback (most recent call last):; File ""/home/eduline/su2-installed/bin/mesh_adaptation_amg.py"", line 111, in <module>; main(); File ""/home/eduline/su2-installed/bin/mesh_adaptation_amg.py"", line 72, in main; options.save_all ); File ""/home/eduline/su2-installed/bin/mesh_adaptation_amg.py"", line 101, in mesh_adaptation_amg; SU2.run.amg(config); File ""/home/eduline/su2-installed/bin/SU2/run/amg.py"", line 212, in amg; pyamg.su2_to_libmeshb(config_amg['adap_back'], """", ""amg_back""); **UnboundLocalError: local variable 'pyamg' referenced before assignment**. Python version is 2.7.5 and we installed pyamg by running ""sudo pip install pyamg"". . Any help would be appreciated. Best regards,. Mirac",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948
https://github.com/su2code/SU2/issues/948:81,Deployability,install,installation,81,"Hello everyone,. We are trying to use SU2-pyamg on the server. ; We followed the installation steps on SU2 website and did not face any compilation error. . Steps we followed:; 1. Download the file with git (""Install a custom version of SU2"" section in https://pyamg.saclay.inria.fr/pyamg.html); 2. cd SU2; 3. ./bootstrap; 4. ./configure --prefix=$HOME/SU2 --enable-mpi --with-cc=/opt/intel/compilers_and_libraries_2019.5.281/linux/mpi/intel64/bin/mpicc --with-cxx=/opt/intel/compilers_and_libraries_2019.5.281/linux/mpi/intel64/bin/mpicxx CXXFLAGS=""-O3"" ; 5. make -j 8 ; 6. make install. Then we added the following lines to bashrc file:. export PYTHONPATH=""/usr/lib64/python2.7/site-packages""; export SU2_RUN=""$HOME/su2-installed/bin""; export SU2_HOME=""$HOME/SU2""; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. We downloaded example file from pyamg website:; https://pyamg.saclay.inria.fr/pyamgexamples.html (Adaptive 3D ONERA M6 wing example). During running, we encountered the following error:. $HOME/su2-installed/bin/mesh_adaptation_amg.py -f adap_ONERAM6.cfg -n 4 > out.txt &; [1] 166739; [user@host pyamg-su-test]$ Traceback (most recent call last):; File ""/home/eduline/su2-installed/bin/mesh_adaptation_amg.py"", line 111, in <module>; main(); File ""/home/eduline/su2-installed/bin/mesh_adaptation_amg.py"", line 72, in main; options.save_all ); File ""/home/eduline/su2-installed/bin/mesh_adaptation_amg.py"", line 101, in mesh_adaptation_amg; SU2.run.amg(config); File ""/home/eduline/su2-installed/bin/SU2/run/amg.py"", line 212, in amg; pyamg.su2_to_libmeshb(config_amg['adap_back'], """", ""amg_back""); **UnboundLocalError: local variable 'pyamg' referenced before assignment**. Python version is 2.7.5 and we installed pyamg by running ""sudo pip install pyamg"". . Any help would be appreciated. Best regards,. Mirac",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948
https://github.com/su2code/SU2/issues/948:209,Deployability,Install,Install,209,"Hello everyone,. We are trying to use SU2-pyamg on the server. ; We followed the installation steps on SU2 website and did not face any compilation error. . Steps we followed:; 1. Download the file with git (""Install a custom version of SU2"" section in https://pyamg.saclay.inria.fr/pyamg.html); 2. cd SU2; 3. ./bootstrap; 4. ./configure --prefix=$HOME/SU2 --enable-mpi --with-cc=/opt/intel/compilers_and_libraries_2019.5.281/linux/mpi/intel64/bin/mpicc --with-cxx=/opt/intel/compilers_and_libraries_2019.5.281/linux/mpi/intel64/bin/mpicxx CXXFLAGS=""-O3"" ; 5. make -j 8 ; 6. make install. Then we added the following lines to bashrc file:. export PYTHONPATH=""/usr/lib64/python2.7/site-packages""; export SU2_RUN=""$HOME/su2-installed/bin""; export SU2_HOME=""$HOME/SU2""; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. We downloaded example file from pyamg website:; https://pyamg.saclay.inria.fr/pyamgexamples.html (Adaptive 3D ONERA M6 wing example). During running, we encountered the following error:. $HOME/su2-installed/bin/mesh_adaptation_amg.py -f adap_ONERAM6.cfg -n 4 > out.txt &; [1] 166739; [user@host pyamg-su-test]$ Traceback (most recent call last):; File ""/home/eduline/su2-installed/bin/mesh_adaptation_amg.py"", line 111, in <module>; main(); File ""/home/eduline/su2-installed/bin/mesh_adaptation_amg.py"", line 72, in main; options.save_all ); File ""/home/eduline/su2-installed/bin/mesh_adaptation_amg.py"", line 101, in mesh_adaptation_amg; SU2.run.amg(config); File ""/home/eduline/su2-installed/bin/SU2/run/amg.py"", line 212, in amg; pyamg.su2_to_libmeshb(config_amg['adap_back'], """", ""amg_back""); **UnboundLocalError: local variable 'pyamg' referenced before assignment**. Python version is 2.7.5 and we installed pyamg by running ""sudo pip install pyamg"". . Any help would be appreciated. Best regards,. Mirac",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948
https://github.com/su2code/SU2/issues/948:580,Deployability,install,install,580,"Hello everyone,. We are trying to use SU2-pyamg on the server. ; We followed the installation steps on SU2 website and did not face any compilation error. . Steps we followed:; 1. Download the file with git (""Install a custom version of SU2"" section in https://pyamg.saclay.inria.fr/pyamg.html); 2. cd SU2; 3. ./bootstrap; 4. ./configure --prefix=$HOME/SU2 --enable-mpi --with-cc=/opt/intel/compilers_and_libraries_2019.5.281/linux/mpi/intel64/bin/mpicc --with-cxx=/opt/intel/compilers_and_libraries_2019.5.281/linux/mpi/intel64/bin/mpicxx CXXFLAGS=""-O3"" ; 5. make -j 8 ; 6. make install. Then we added the following lines to bashrc file:. export PYTHONPATH=""/usr/lib64/python2.7/site-packages""; export SU2_RUN=""$HOME/su2-installed/bin""; export SU2_HOME=""$HOME/SU2""; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. We downloaded example file from pyamg website:; https://pyamg.saclay.inria.fr/pyamgexamples.html (Adaptive 3D ONERA M6 wing example). During running, we encountered the following error:. $HOME/su2-installed/bin/mesh_adaptation_amg.py -f adap_ONERAM6.cfg -n 4 > out.txt &; [1] 166739; [user@host pyamg-su-test]$ Traceback (most recent call last):; File ""/home/eduline/su2-installed/bin/mesh_adaptation_amg.py"", line 111, in <module>; main(); File ""/home/eduline/su2-installed/bin/mesh_adaptation_amg.py"", line 72, in main; options.save_all ); File ""/home/eduline/su2-installed/bin/mesh_adaptation_amg.py"", line 101, in mesh_adaptation_amg; SU2.run.amg(config); File ""/home/eduline/su2-installed/bin/SU2/run/amg.py"", line 212, in amg; pyamg.su2_to_libmeshb(config_amg['adap_back'], """", ""amg_back""); **UnboundLocalError: local variable 'pyamg' referenced before assignment**. Python version is 2.7.5 and we installed pyamg by running ""sudo pip install pyamg"". . Any help would be appreciated. Best regards,. Mirac",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948
https://github.com/su2code/SU2/issues/948:722,Deployability,install,installed,722,"Hello everyone,. We are trying to use SU2-pyamg on the server. ; We followed the installation steps on SU2 website and did not face any compilation error. . Steps we followed:; 1. Download the file with git (""Install a custom version of SU2"" section in https://pyamg.saclay.inria.fr/pyamg.html); 2. cd SU2; 3. ./bootstrap; 4. ./configure --prefix=$HOME/SU2 --enable-mpi --with-cc=/opt/intel/compilers_and_libraries_2019.5.281/linux/mpi/intel64/bin/mpicc --with-cxx=/opt/intel/compilers_and_libraries_2019.5.281/linux/mpi/intel64/bin/mpicxx CXXFLAGS=""-O3"" ; 5. make -j 8 ; 6. make install. Then we added the following lines to bashrc file:. export PYTHONPATH=""/usr/lib64/python2.7/site-packages""; export SU2_RUN=""$HOME/su2-installed/bin""; export SU2_HOME=""$HOME/SU2""; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. We downloaded example file from pyamg website:; https://pyamg.saclay.inria.fr/pyamgexamples.html (Adaptive 3D ONERA M6 wing example). During running, we encountered the following error:. $HOME/su2-installed/bin/mesh_adaptation_amg.py -f adap_ONERAM6.cfg -n 4 > out.txt &; [1] 166739; [user@host pyamg-su-test]$ Traceback (most recent call last):; File ""/home/eduline/su2-installed/bin/mesh_adaptation_amg.py"", line 111, in <module>; main(); File ""/home/eduline/su2-installed/bin/mesh_adaptation_amg.py"", line 72, in main; options.save_all ); File ""/home/eduline/su2-installed/bin/mesh_adaptation_amg.py"", line 101, in mesh_adaptation_amg; SU2.run.amg(config); File ""/home/eduline/su2-installed/bin/SU2/run/amg.py"", line 212, in amg; pyamg.su2_to_libmeshb(config_amg['adap_back'], """", ""amg_back""); **UnboundLocalError: local variable 'pyamg' referenced before assignment**. Python version is 2.7.5 and we installed pyamg by running ""sudo pip install pyamg"". . Any help would be appreciated. Best regards,. Mirac",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948
https://github.com/su2code/SU2/issues/948:1032,Deployability,install,installed,1032,"Hello everyone,. We are trying to use SU2-pyamg on the server. ; We followed the installation steps on SU2 website and did not face any compilation error. . Steps we followed:; 1. Download the file with git (""Install a custom version of SU2"" section in https://pyamg.saclay.inria.fr/pyamg.html); 2. cd SU2; 3. ./bootstrap; 4. ./configure --prefix=$HOME/SU2 --enable-mpi --with-cc=/opt/intel/compilers_and_libraries_2019.5.281/linux/mpi/intel64/bin/mpicc --with-cxx=/opt/intel/compilers_and_libraries_2019.5.281/linux/mpi/intel64/bin/mpicxx CXXFLAGS=""-O3"" ; 5. make -j 8 ; 6. make install. Then we added the following lines to bashrc file:. export PYTHONPATH=""/usr/lib64/python2.7/site-packages""; export SU2_RUN=""$HOME/su2-installed/bin""; export SU2_HOME=""$HOME/SU2""; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. We downloaded example file from pyamg website:; https://pyamg.saclay.inria.fr/pyamgexamples.html (Adaptive 3D ONERA M6 wing example). During running, we encountered the following error:. $HOME/su2-installed/bin/mesh_adaptation_amg.py -f adap_ONERAM6.cfg -n 4 > out.txt &; [1] 166739; [user@host pyamg-su-test]$ Traceback (most recent call last):; File ""/home/eduline/su2-installed/bin/mesh_adaptation_amg.py"", line 111, in <module>; main(); File ""/home/eduline/su2-installed/bin/mesh_adaptation_amg.py"", line 72, in main; options.save_all ); File ""/home/eduline/su2-installed/bin/mesh_adaptation_amg.py"", line 101, in mesh_adaptation_amg; SU2.run.amg(config); File ""/home/eduline/su2-installed/bin/SU2/run/amg.py"", line 212, in amg; pyamg.su2_to_libmeshb(config_amg['adap_back'], """", ""amg_back""); **UnboundLocalError: local variable 'pyamg' referenced before assignment**. Python version is 2.7.5 and we installed pyamg by running ""sudo pip install pyamg"". . Any help would be appreciated. Best regards,. Mirac",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948
https://github.com/su2code/SU2/issues/948:1206,Deployability,install,installed,1206,"Hello everyone,. We are trying to use SU2-pyamg on the server. ; We followed the installation steps on SU2 website and did not face any compilation error. . Steps we followed:; 1. Download the file with git (""Install a custom version of SU2"" section in https://pyamg.saclay.inria.fr/pyamg.html); 2. cd SU2; 3. ./bootstrap; 4. ./configure --prefix=$HOME/SU2 --enable-mpi --with-cc=/opt/intel/compilers_and_libraries_2019.5.281/linux/mpi/intel64/bin/mpicc --with-cxx=/opt/intel/compilers_and_libraries_2019.5.281/linux/mpi/intel64/bin/mpicxx CXXFLAGS=""-O3"" ; 5. make -j 8 ; 6. make install. Then we added the following lines to bashrc file:. export PYTHONPATH=""/usr/lib64/python2.7/site-packages""; export SU2_RUN=""$HOME/su2-installed/bin""; export SU2_HOME=""$HOME/SU2""; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. We downloaded example file from pyamg website:; https://pyamg.saclay.inria.fr/pyamgexamples.html (Adaptive 3D ONERA M6 wing example). During running, we encountered the following error:. $HOME/su2-installed/bin/mesh_adaptation_amg.py -f adap_ONERAM6.cfg -n 4 > out.txt &; [1] 166739; [user@host pyamg-su-test]$ Traceback (most recent call last):; File ""/home/eduline/su2-installed/bin/mesh_adaptation_amg.py"", line 111, in <module>; main(); File ""/home/eduline/su2-installed/bin/mesh_adaptation_amg.py"", line 72, in main; options.save_all ); File ""/home/eduline/su2-installed/bin/mesh_adaptation_amg.py"", line 101, in mesh_adaptation_amg; SU2.run.amg(config); File ""/home/eduline/su2-installed/bin/SU2/run/amg.py"", line 212, in amg; pyamg.su2_to_libmeshb(config_amg['adap_back'], """", ""amg_back""); **UnboundLocalError: local variable 'pyamg' referenced before assignment**. Python version is 2.7.5 and we installed pyamg by running ""sudo pip install pyamg"". . Any help would be appreciated. Best regards,. Mirac",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948
https://github.com/su2code/SU2/issues/948:1300,Deployability,install,installed,1300,"Hello everyone,. We are trying to use SU2-pyamg on the server. ; We followed the installation steps on SU2 website and did not face any compilation error. . Steps we followed:; 1. Download the file with git (""Install a custom version of SU2"" section in https://pyamg.saclay.inria.fr/pyamg.html); 2. cd SU2; 3. ./bootstrap; 4. ./configure --prefix=$HOME/SU2 --enable-mpi --with-cc=/opt/intel/compilers_and_libraries_2019.5.281/linux/mpi/intel64/bin/mpicc --with-cxx=/opt/intel/compilers_and_libraries_2019.5.281/linux/mpi/intel64/bin/mpicxx CXXFLAGS=""-O3"" ; 5. make -j 8 ; 6. make install. Then we added the following lines to bashrc file:. export PYTHONPATH=""/usr/lib64/python2.7/site-packages""; export SU2_RUN=""$HOME/su2-installed/bin""; export SU2_HOME=""$HOME/SU2""; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. We downloaded example file from pyamg website:; https://pyamg.saclay.inria.fr/pyamgexamples.html (Adaptive 3D ONERA M6 wing example). During running, we encountered the following error:. $HOME/su2-installed/bin/mesh_adaptation_amg.py -f adap_ONERAM6.cfg -n 4 > out.txt &; [1] 166739; [user@host pyamg-su-test]$ Traceback (most recent call last):; File ""/home/eduline/su2-installed/bin/mesh_adaptation_amg.py"", line 111, in <module>; main(); File ""/home/eduline/su2-installed/bin/mesh_adaptation_amg.py"", line 72, in main; options.save_all ); File ""/home/eduline/su2-installed/bin/mesh_adaptation_amg.py"", line 101, in mesh_adaptation_amg; SU2.run.amg(config); File ""/home/eduline/su2-installed/bin/SU2/run/amg.py"", line 212, in amg; pyamg.su2_to_libmeshb(config_amg['adap_back'], """", ""amg_back""); **UnboundLocalError: local variable 'pyamg' referenced before assignment**. Python version is 2.7.5 and we installed pyamg by running ""sudo pip install pyamg"". . Any help would be appreciated. Best regards,. Mirac",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948
https://github.com/su2code/SU2/issues/948:1401,Deployability,install,installed,1401,"Hello everyone,. We are trying to use SU2-pyamg on the server. ; We followed the installation steps on SU2 website and did not face any compilation error. . Steps we followed:; 1. Download the file with git (""Install a custom version of SU2"" section in https://pyamg.saclay.inria.fr/pyamg.html); 2. cd SU2; 3. ./bootstrap; 4. ./configure --prefix=$HOME/SU2 --enable-mpi --with-cc=/opt/intel/compilers_and_libraries_2019.5.281/linux/mpi/intel64/bin/mpicc --with-cxx=/opt/intel/compilers_and_libraries_2019.5.281/linux/mpi/intel64/bin/mpicxx CXXFLAGS=""-O3"" ; 5. make -j 8 ; 6. make install. Then we added the following lines to bashrc file:. export PYTHONPATH=""/usr/lib64/python2.7/site-packages""; export SU2_RUN=""$HOME/su2-installed/bin""; export SU2_HOME=""$HOME/SU2""; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. We downloaded example file from pyamg website:; https://pyamg.saclay.inria.fr/pyamgexamples.html (Adaptive 3D ONERA M6 wing example). During running, we encountered the following error:. $HOME/su2-installed/bin/mesh_adaptation_amg.py -f adap_ONERAM6.cfg -n 4 > out.txt &; [1] 166739; [user@host pyamg-su-test]$ Traceback (most recent call last):; File ""/home/eduline/su2-installed/bin/mesh_adaptation_amg.py"", line 111, in <module>; main(); File ""/home/eduline/su2-installed/bin/mesh_adaptation_amg.py"", line 72, in main; options.save_all ); File ""/home/eduline/su2-installed/bin/mesh_adaptation_amg.py"", line 101, in mesh_adaptation_amg; SU2.run.amg(config); File ""/home/eduline/su2-installed/bin/SU2/run/amg.py"", line 212, in amg; pyamg.su2_to_libmeshb(config_amg['adap_back'], """", ""amg_back""); **UnboundLocalError: local variable 'pyamg' referenced before assignment**. Python version is 2.7.5 and we installed pyamg by running ""sudo pip install pyamg"". . Any help would be appreciated. Best regards,. Mirac",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948
https://github.com/su2code/SU2/issues/948:1519,Deployability,install,installed,1519,"Hello everyone,. We are trying to use SU2-pyamg on the server. ; We followed the installation steps on SU2 website and did not face any compilation error. . Steps we followed:; 1. Download the file with git (""Install a custom version of SU2"" section in https://pyamg.saclay.inria.fr/pyamg.html); 2. cd SU2; 3. ./bootstrap; 4. ./configure --prefix=$HOME/SU2 --enable-mpi --with-cc=/opt/intel/compilers_and_libraries_2019.5.281/linux/mpi/intel64/bin/mpicc --with-cxx=/opt/intel/compilers_and_libraries_2019.5.281/linux/mpi/intel64/bin/mpicxx CXXFLAGS=""-O3"" ; 5. make -j 8 ; 6. make install. Then we added the following lines to bashrc file:. export PYTHONPATH=""/usr/lib64/python2.7/site-packages""; export SU2_RUN=""$HOME/su2-installed/bin""; export SU2_HOME=""$HOME/SU2""; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. We downloaded example file from pyamg website:; https://pyamg.saclay.inria.fr/pyamgexamples.html (Adaptive 3D ONERA M6 wing example). During running, we encountered the following error:. $HOME/su2-installed/bin/mesh_adaptation_amg.py -f adap_ONERAM6.cfg -n 4 > out.txt &; [1] 166739; [user@host pyamg-su-test]$ Traceback (most recent call last):; File ""/home/eduline/su2-installed/bin/mesh_adaptation_amg.py"", line 111, in <module>; main(); File ""/home/eduline/su2-installed/bin/mesh_adaptation_amg.py"", line 72, in main; options.save_all ); File ""/home/eduline/su2-installed/bin/mesh_adaptation_amg.py"", line 101, in mesh_adaptation_amg; SU2.run.amg(config); File ""/home/eduline/su2-installed/bin/SU2/run/amg.py"", line 212, in amg; pyamg.su2_to_libmeshb(config_amg['adap_back'], """", ""amg_back""); **UnboundLocalError: local variable 'pyamg' referenced before assignment**. Python version is 2.7.5 and we installed pyamg by running ""sudo pip install pyamg"". . Any help would be appreciated. Best regards,. Mirac",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948
https://github.com/su2code/SU2/issues/948:1739,Deployability,install,installed,1739,"Hello everyone,. We are trying to use SU2-pyamg on the server. ; We followed the installation steps on SU2 website and did not face any compilation error. . Steps we followed:; 1. Download the file with git (""Install a custom version of SU2"" section in https://pyamg.saclay.inria.fr/pyamg.html); 2. cd SU2; 3. ./bootstrap; 4. ./configure --prefix=$HOME/SU2 --enable-mpi --with-cc=/opt/intel/compilers_and_libraries_2019.5.281/linux/mpi/intel64/bin/mpicc --with-cxx=/opt/intel/compilers_and_libraries_2019.5.281/linux/mpi/intel64/bin/mpicxx CXXFLAGS=""-O3"" ; 5. make -j 8 ; 6. make install. Then we added the following lines to bashrc file:. export PYTHONPATH=""/usr/lib64/python2.7/site-packages""; export SU2_RUN=""$HOME/su2-installed/bin""; export SU2_HOME=""$HOME/SU2""; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. We downloaded example file from pyamg website:; https://pyamg.saclay.inria.fr/pyamgexamples.html (Adaptive 3D ONERA M6 wing example). During running, we encountered the following error:. $HOME/su2-installed/bin/mesh_adaptation_amg.py -f adap_ONERAM6.cfg -n 4 > out.txt &; [1] 166739; [user@host pyamg-su-test]$ Traceback (most recent call last):; File ""/home/eduline/su2-installed/bin/mesh_adaptation_amg.py"", line 111, in <module>; main(); File ""/home/eduline/su2-installed/bin/mesh_adaptation_amg.py"", line 72, in main; options.save_all ); File ""/home/eduline/su2-installed/bin/mesh_adaptation_amg.py"", line 101, in mesh_adaptation_amg; SU2.run.amg(config); File ""/home/eduline/su2-installed/bin/SU2/run/amg.py"", line 212, in amg; pyamg.su2_to_libmeshb(config_amg['adap_back'], """", ""amg_back""); **UnboundLocalError: local variable 'pyamg' referenced before assignment**. Python version is 2.7.5 and we installed pyamg by running ""sudo pip install pyamg"". . Any help would be appreciated. Best regards,. Mirac",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948
https://github.com/su2code/SU2/issues/948:1776,Deployability,install,install,1776,"Hello everyone,. We are trying to use SU2-pyamg on the server. ; We followed the installation steps on SU2 website and did not face any compilation error. . Steps we followed:; 1. Download the file with git (""Install a custom version of SU2"" section in https://pyamg.saclay.inria.fr/pyamg.html); 2. cd SU2; 3. ./bootstrap; 4. ./configure --prefix=$HOME/SU2 --enable-mpi --with-cc=/opt/intel/compilers_and_libraries_2019.5.281/linux/mpi/intel64/bin/mpicc --with-cxx=/opt/intel/compilers_and_libraries_2019.5.281/linux/mpi/intel64/bin/mpicxx CXXFLAGS=""-O3"" ; 5. make -j 8 ; 6. make install. Then we added the following lines to bashrc file:. export PYTHONPATH=""/usr/lib64/python2.7/site-packages""; export SU2_RUN=""$HOME/su2-installed/bin""; export SU2_HOME=""$HOME/SU2""; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. We downloaded example file from pyamg website:; https://pyamg.saclay.inria.fr/pyamgexamples.html (Adaptive 3D ONERA M6 wing example). During running, we encountered the following error:. $HOME/su2-installed/bin/mesh_adaptation_amg.py -f adap_ONERAM6.cfg -n 4 > out.txt &; [1] 166739; [user@host pyamg-su-test]$ Traceback (most recent call last):; File ""/home/eduline/su2-installed/bin/mesh_adaptation_amg.py"", line 111, in <module>; main(); File ""/home/eduline/su2-installed/bin/mesh_adaptation_amg.py"", line 72, in main; options.save_all ); File ""/home/eduline/su2-installed/bin/mesh_adaptation_amg.py"", line 101, in mesh_adaptation_amg; SU2.run.amg(config); File ""/home/eduline/su2-installed/bin/SU2/run/amg.py"", line 212, in amg; pyamg.su2_to_libmeshb(config_amg['adap_back'], """", ""amg_back""); **UnboundLocalError: local variable 'pyamg' referenced before assignment**. Python version is 2.7.5 and we installed pyamg by running ""sudo pip install pyamg"". . Any help would be appreciated. Best regards,. Mirac",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948
https://github.com/su2code/SU2/issues/948:933,Energy Efficiency,Adapt,Adaptive,933,"Hello everyone,. We are trying to use SU2-pyamg on the server. ; We followed the installation steps on SU2 website and did not face any compilation error. . Steps we followed:; 1. Download the file with git (""Install a custom version of SU2"" section in https://pyamg.saclay.inria.fr/pyamg.html); 2. cd SU2; 3. ./bootstrap; 4. ./configure --prefix=$HOME/SU2 --enable-mpi --with-cc=/opt/intel/compilers_and_libraries_2019.5.281/linux/mpi/intel64/bin/mpicc --with-cxx=/opt/intel/compilers_and_libraries_2019.5.281/linux/mpi/intel64/bin/mpicxx CXXFLAGS=""-O3"" ; 5. make -j 8 ; 6. make install. Then we added the following lines to bashrc file:. export PYTHONPATH=""/usr/lib64/python2.7/site-packages""; export SU2_RUN=""$HOME/su2-installed/bin""; export SU2_HOME=""$HOME/SU2""; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. We downloaded example file from pyamg website:; https://pyamg.saclay.inria.fr/pyamgexamples.html (Adaptive 3D ONERA M6 wing example). During running, we encountered the following error:. $HOME/su2-installed/bin/mesh_adaptation_amg.py -f adap_ONERAM6.cfg -n 4 > out.txt &; [1] 166739; [user@host pyamg-su-test]$ Traceback (most recent call last):; File ""/home/eduline/su2-installed/bin/mesh_adaptation_amg.py"", line 111, in <module>; main(); File ""/home/eduline/su2-installed/bin/mesh_adaptation_amg.py"", line 72, in main; options.save_all ); File ""/home/eduline/su2-installed/bin/mesh_adaptation_amg.py"", line 101, in mesh_adaptation_amg; SU2.run.amg(config); File ""/home/eduline/su2-installed/bin/SU2/run/amg.py"", line 212, in amg; pyamg.su2_to_libmeshb(config_amg['adap_back'], """", ""amg_back""); **UnboundLocalError: local variable 'pyamg' referenced before assignment**. Python version is 2.7.5 and we installed pyamg by running ""sudo pip install pyamg"". . Any help would be appreciated. Best regards,. Mirac",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948
https://github.com/su2code/SU2/issues/948:328,Modifiability,config,configure,328,"Hello everyone,. We are trying to use SU2-pyamg on the server. ; We followed the installation steps on SU2 website and did not face any compilation error. . Steps we followed:; 1. Download the file with git (""Install a custom version of SU2"" section in https://pyamg.saclay.inria.fr/pyamg.html); 2. cd SU2; 3. ./bootstrap; 4. ./configure --prefix=$HOME/SU2 --enable-mpi --with-cc=/opt/intel/compilers_and_libraries_2019.5.281/linux/mpi/intel64/bin/mpicc --with-cxx=/opt/intel/compilers_and_libraries_2019.5.281/linux/mpi/intel64/bin/mpicxx CXXFLAGS=""-O3"" ; 5. make -j 8 ; 6. make install. Then we added the following lines to bashrc file:. export PYTHONPATH=""/usr/lib64/python2.7/site-packages""; export SU2_RUN=""$HOME/su2-installed/bin""; export SU2_HOME=""$HOME/SU2""; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. We downloaded example file from pyamg website:; https://pyamg.saclay.inria.fr/pyamgexamples.html (Adaptive 3D ONERA M6 wing example). During running, we encountered the following error:. $HOME/su2-installed/bin/mesh_adaptation_amg.py -f adap_ONERAM6.cfg -n 4 > out.txt &; [1] 166739; [user@host pyamg-su-test]$ Traceback (most recent call last):; File ""/home/eduline/su2-installed/bin/mesh_adaptation_amg.py"", line 111, in <module>; main(); File ""/home/eduline/su2-installed/bin/mesh_adaptation_amg.py"", line 72, in main; options.save_all ); File ""/home/eduline/su2-installed/bin/mesh_adaptation_amg.py"", line 101, in mesh_adaptation_amg; SU2.run.amg(config); File ""/home/eduline/su2-installed/bin/SU2/run/amg.py"", line 212, in amg; pyamg.su2_to_libmeshb(config_amg['adap_back'], """", ""amg_back""); **UnboundLocalError: local variable 'pyamg' referenced before assignment**. Python version is 2.7.5 and we installed pyamg by running ""sudo pip install pyamg"". . Any help would be appreciated. Best regards,. Mirac",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948
https://github.com/su2code/SU2/issues/948:933,Modifiability,Adapt,Adaptive,933,"Hello everyone,. We are trying to use SU2-pyamg on the server. ; We followed the installation steps on SU2 website and did not face any compilation error. . Steps we followed:; 1. Download the file with git (""Install a custom version of SU2"" section in https://pyamg.saclay.inria.fr/pyamg.html); 2. cd SU2; 3. ./bootstrap; 4. ./configure --prefix=$HOME/SU2 --enable-mpi --with-cc=/opt/intel/compilers_and_libraries_2019.5.281/linux/mpi/intel64/bin/mpicc --with-cxx=/opt/intel/compilers_and_libraries_2019.5.281/linux/mpi/intel64/bin/mpicxx CXXFLAGS=""-O3"" ; 5. make -j 8 ; 6. make install. Then we added the following lines to bashrc file:. export PYTHONPATH=""/usr/lib64/python2.7/site-packages""; export SU2_RUN=""$HOME/su2-installed/bin""; export SU2_HOME=""$HOME/SU2""; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. We downloaded example file from pyamg website:; https://pyamg.saclay.inria.fr/pyamgexamples.html (Adaptive 3D ONERA M6 wing example). During running, we encountered the following error:. $HOME/su2-installed/bin/mesh_adaptation_amg.py -f adap_ONERAM6.cfg -n 4 > out.txt &; [1] 166739; [user@host pyamg-su-test]$ Traceback (most recent call last):; File ""/home/eduline/su2-installed/bin/mesh_adaptation_amg.py"", line 111, in <module>; main(); File ""/home/eduline/su2-installed/bin/mesh_adaptation_amg.py"", line 72, in main; options.save_all ); File ""/home/eduline/su2-installed/bin/mesh_adaptation_amg.py"", line 101, in mesh_adaptation_amg; SU2.run.amg(config); File ""/home/eduline/su2-installed/bin/SU2/run/amg.py"", line 212, in amg; pyamg.su2_to_libmeshb(config_amg['adap_back'], """", ""amg_back""); **UnboundLocalError: local variable 'pyamg' referenced before assignment**. Python version is 2.7.5 and we installed pyamg by running ""sudo pip install pyamg"". . Any help would be appreciated. Best regards,. Mirac",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948
https://github.com/su2code/SU2/issues/948:1486,Modifiability,config,config,1486,"Hello everyone,. We are trying to use SU2-pyamg on the server. ; We followed the installation steps on SU2 website and did not face any compilation error. . Steps we followed:; 1. Download the file with git (""Install a custom version of SU2"" section in https://pyamg.saclay.inria.fr/pyamg.html); 2. cd SU2; 3. ./bootstrap; 4. ./configure --prefix=$HOME/SU2 --enable-mpi --with-cc=/opt/intel/compilers_and_libraries_2019.5.281/linux/mpi/intel64/bin/mpicc --with-cxx=/opt/intel/compilers_and_libraries_2019.5.281/linux/mpi/intel64/bin/mpicxx CXXFLAGS=""-O3"" ; 5. make -j 8 ; 6. make install. Then we added the following lines to bashrc file:. export PYTHONPATH=""/usr/lib64/python2.7/site-packages""; export SU2_RUN=""$HOME/su2-installed/bin""; export SU2_HOME=""$HOME/SU2""; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. We downloaded example file from pyamg website:; https://pyamg.saclay.inria.fr/pyamgexamples.html (Adaptive 3D ONERA M6 wing example). During running, we encountered the following error:. $HOME/su2-installed/bin/mesh_adaptation_amg.py -f adap_ONERAM6.cfg -n 4 > out.txt &; [1] 166739; [user@host pyamg-su-test]$ Traceback (most recent call last):; File ""/home/eduline/su2-installed/bin/mesh_adaptation_amg.py"", line 111, in <module>; main(); File ""/home/eduline/su2-installed/bin/mesh_adaptation_amg.py"", line 72, in main; options.save_all ); File ""/home/eduline/su2-installed/bin/mesh_adaptation_amg.py"", line 101, in mesh_adaptation_amg; SU2.run.amg(config); File ""/home/eduline/su2-installed/bin/SU2/run/amg.py"", line 212, in amg; pyamg.su2_to_libmeshb(config_amg['adap_back'], """", ""amg_back""); **UnboundLocalError: local variable 'pyamg' referenced before assignment**. Python version is 2.7.5 and we installed pyamg by running ""sudo pip install pyamg"". . Any help would be appreciated. Best regards,. Mirac",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948
https://github.com/su2code/SU2/issues/948:1659,Modifiability,variab,variable,1659,"Hello everyone,. We are trying to use SU2-pyamg on the server. ; We followed the installation steps on SU2 website and did not face any compilation error. . Steps we followed:; 1. Download the file with git (""Install a custom version of SU2"" section in https://pyamg.saclay.inria.fr/pyamg.html); 2. cd SU2; 3. ./bootstrap; 4. ./configure --prefix=$HOME/SU2 --enable-mpi --with-cc=/opt/intel/compilers_and_libraries_2019.5.281/linux/mpi/intel64/bin/mpicc --with-cxx=/opt/intel/compilers_and_libraries_2019.5.281/linux/mpi/intel64/bin/mpicxx CXXFLAGS=""-O3"" ; 5. make -j 8 ; 6. make install. Then we added the following lines to bashrc file:. export PYTHONPATH=""/usr/lib64/python2.7/site-packages""; export SU2_RUN=""$HOME/su2-installed/bin""; export SU2_HOME=""$HOME/SU2""; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. We downloaded example file from pyamg website:; https://pyamg.saclay.inria.fr/pyamgexamples.html (Adaptive 3D ONERA M6 wing example). During running, we encountered the following error:. $HOME/su2-installed/bin/mesh_adaptation_amg.py -f adap_ONERAM6.cfg -n 4 > out.txt &; [1] 166739; [user@host pyamg-su-test]$ Traceback (most recent call last):; File ""/home/eduline/su2-installed/bin/mesh_adaptation_amg.py"", line 111, in <module>; main(); File ""/home/eduline/su2-installed/bin/mesh_adaptation_amg.py"", line 72, in main; options.save_all ); File ""/home/eduline/su2-installed/bin/mesh_adaptation_amg.py"", line 101, in mesh_adaptation_amg; SU2.run.amg(config); File ""/home/eduline/su2-installed/bin/SU2/run/amg.py"", line 212, in amg; pyamg.su2_to_libmeshb(config_amg['adap_back'], """", ""amg_back""); **UnboundLocalError: local variable 'pyamg' referenced before assignment**. Python version is 2.7.5 and we installed pyamg by running ""sudo pip install pyamg"". . Any help would be appreciated. Best regards,. Mirac",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948
https://github.com/su2code/SU2/issues/948:1139,Testability,test,test,1139,"Hello everyone,. We are trying to use SU2-pyamg on the server. ; We followed the installation steps on SU2 website and did not face any compilation error. . Steps we followed:; 1. Download the file with git (""Install a custom version of SU2"" section in https://pyamg.saclay.inria.fr/pyamg.html); 2. cd SU2; 3. ./bootstrap; 4. ./configure --prefix=$HOME/SU2 --enable-mpi --with-cc=/opt/intel/compilers_and_libraries_2019.5.281/linux/mpi/intel64/bin/mpicc --with-cxx=/opt/intel/compilers_and_libraries_2019.5.281/linux/mpi/intel64/bin/mpicxx CXXFLAGS=""-O3"" ; 5. make -j 8 ; 6. make install. Then we added the following lines to bashrc file:. export PYTHONPATH=""/usr/lib64/python2.7/site-packages""; export SU2_RUN=""$HOME/su2-installed/bin""; export SU2_HOME=""$HOME/SU2""; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. We downloaded example file from pyamg website:; https://pyamg.saclay.inria.fr/pyamgexamples.html (Adaptive 3D ONERA M6 wing example). During running, we encountered the following error:. $HOME/su2-installed/bin/mesh_adaptation_amg.py -f adap_ONERAM6.cfg -n 4 > out.txt &; [1] 166739; [user@host pyamg-su-test]$ Traceback (most recent call last):; File ""/home/eduline/su2-installed/bin/mesh_adaptation_amg.py"", line 111, in <module>; main(); File ""/home/eduline/su2-installed/bin/mesh_adaptation_amg.py"", line 72, in main; options.save_all ); File ""/home/eduline/su2-installed/bin/mesh_adaptation_amg.py"", line 101, in mesh_adaptation_amg; SU2.run.amg(config); File ""/home/eduline/su2-installed/bin/SU2/run/amg.py"", line 212, in amg; pyamg.su2_to_libmeshb(config_amg['adap_back'], """", ""amg_back""); **UnboundLocalError: local variable 'pyamg' referenced before assignment**. Python version is 2.7.5 and we installed pyamg by running ""sudo pip install pyamg"". . Any help would be appreciated. Best regards,. Mirac",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/948
https://github.com/su2code/SU2/issues/949:303,Availability,error,error,303,"[sd2_case1b_ddes_v7.cfg.txt](https://github.com/su2code/SU2/files/4531160/sd2_case1b_ddes_v7.cfg.txt). Hello,. We are currently unable to restart SU2 in DDES mode from a restart file that includes time-averaged data on very large (~180 million cell) meshes. Compiled in release mode, the code gives the error ""FGMRES orthogonalization failed, linear solver diverged."". Compiled in debug mode, the code issues an assertion failure at line 1881 of $SU2_HOME/SU2_CFD/src/numerics_structure.cpp, which is a check in the CNumerics::SetRoe_Dissipation(...) method to make sure that variable 'Dissipation_j' is between zero and one. This problem only appears when attempting to restart from solution files that include ""TIME_AVERAGE"" data on very large meshes. Note the above behavior is occurring with commit 382e82f5e43fadb5d64e63289db8e125e37ffe95 of the ""develop"" branch. . I have pulled the latest commits of develop (c093a62a2b) and master (d9c867d342), but get segfaults during Jacobian structure initialization when attempting to restart on multiple cores. All help is appreciated. -Paul. **To Reproduce**; Config file attached, but mesh file is quite large... 17.6 GB. **Desktop (please complete the following information):**; - Department of Defense Unclassified System: ""Onyx""; - System type: Cray XC40/50; - OS: Variant of SuSe Linux 12.3 and/or Cray Linux Environment; - Compiler: Intel 19.0.1.144; - MPI: cray-mpich 7.6.3; - SU2 v. 7.0.1, develop branch, commit 382e82f5e43fadb5d64e63289db8e125e37ffe95 (and segfaults with latest commits of develop (c093a62a2b) and master (d9c867d342) ).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/949
https://github.com/su2code/SU2/issues/949:422,Availability,failure,failure,422,"[sd2_case1b_ddes_v7.cfg.txt](https://github.com/su2code/SU2/files/4531160/sd2_case1b_ddes_v7.cfg.txt). Hello,. We are currently unable to restart SU2 in DDES mode from a restart file that includes time-averaged data on very large (~180 million cell) meshes. Compiled in release mode, the code gives the error ""FGMRES orthogonalization failed, linear solver diverged."". Compiled in debug mode, the code issues an assertion failure at line 1881 of $SU2_HOME/SU2_CFD/src/numerics_structure.cpp, which is a check in the CNumerics::SetRoe_Dissipation(...) method to make sure that variable 'Dissipation_j' is between zero and one. This problem only appears when attempting to restart from solution files that include ""TIME_AVERAGE"" data on very large meshes. Note the above behavior is occurring with commit 382e82f5e43fadb5d64e63289db8e125e37ffe95 of the ""develop"" branch. . I have pulled the latest commits of develop (c093a62a2b) and master (d9c867d342), but get segfaults during Jacobian structure initialization when attempting to restart on multiple cores. All help is appreciated. -Paul. **To Reproduce**; Config file attached, but mesh file is quite large... 17.6 GB. **Desktop (please complete the following information):**; - Department of Defense Unclassified System: ""Onyx""; - System type: Cray XC40/50; - OS: Variant of SuSe Linux 12.3 and/or Cray Linux Environment; - Compiler: Intel 19.0.1.144; - MPI: cray-mpich 7.6.3; - SU2 v. 7.0.1, develop branch, commit 382e82f5e43fadb5d64e63289db8e125e37ffe95 (and segfaults with latest commits of develop (c093a62a2b) and master (d9c867d342) ).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/949
https://github.com/su2code/SU2/issues/949:270,Deployability,release,release,270,"[sd2_case1b_ddes_v7.cfg.txt](https://github.com/su2code/SU2/files/4531160/sd2_case1b_ddes_v7.cfg.txt). Hello,. We are currently unable to restart SU2 in DDES mode from a restart file that includes time-averaged data on very large (~180 million cell) meshes. Compiled in release mode, the code gives the error ""FGMRES orthogonalization failed, linear solver diverged."". Compiled in debug mode, the code issues an assertion failure at line 1881 of $SU2_HOME/SU2_CFD/src/numerics_structure.cpp, which is a check in the CNumerics::SetRoe_Dissipation(...) method to make sure that variable 'Dissipation_j' is between zero and one. This problem only appears when attempting to restart from solution files that include ""TIME_AVERAGE"" data on very large meshes. Note the above behavior is occurring with commit 382e82f5e43fadb5d64e63289db8e125e37ffe95 of the ""develop"" branch. . I have pulled the latest commits of develop (c093a62a2b) and master (d9c867d342), but get segfaults during Jacobian structure initialization when attempting to restart on multiple cores. All help is appreciated. -Paul. **To Reproduce**; Config file attached, but mesh file is quite large... 17.6 GB. **Desktop (please complete the following information):**; - Department of Defense Unclassified System: ""Onyx""; - System type: Cray XC40/50; - OS: Variant of SuSe Linux 12.3 and/or Cray Linux Environment; - Compiler: Intel 19.0.1.144; - MPI: cray-mpich 7.6.3; - SU2 v. 7.0.1, develop branch, commit 382e82f5e43fadb5d64e63289db8e125e37ffe95 (and segfaults with latest commits of develop (c093a62a2b) and master (d9c867d342) ).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/949
https://github.com/su2code/SU2/issues/949:576,Modifiability,variab,variable,576,"[sd2_case1b_ddes_v7.cfg.txt](https://github.com/su2code/SU2/files/4531160/sd2_case1b_ddes_v7.cfg.txt). Hello,. We are currently unable to restart SU2 in DDES mode from a restart file that includes time-averaged data on very large (~180 million cell) meshes. Compiled in release mode, the code gives the error ""FGMRES orthogonalization failed, linear solver diverged."". Compiled in debug mode, the code issues an assertion failure at line 1881 of $SU2_HOME/SU2_CFD/src/numerics_structure.cpp, which is a check in the CNumerics::SetRoe_Dissipation(...) method to make sure that variable 'Dissipation_j' is between zero and one. This problem only appears when attempting to restart from solution files that include ""TIME_AVERAGE"" data on very large meshes. Note the above behavior is occurring with commit 382e82f5e43fadb5d64e63289db8e125e37ffe95 of the ""develop"" branch. . I have pulled the latest commits of develop (c093a62a2b) and master (d9c867d342), but get segfaults during Jacobian structure initialization when attempting to restart on multiple cores. All help is appreciated. -Paul. **To Reproduce**; Config file attached, but mesh file is quite large... 17.6 GB. **Desktop (please complete the following information):**; - Department of Defense Unclassified System: ""Onyx""; - System type: Cray XC40/50; - OS: Variant of SuSe Linux 12.3 and/or Cray Linux Environment; - Compiler: Intel 19.0.1.144; - MPI: cray-mpich 7.6.3; - SU2 v. 7.0.1, develop branch, commit 382e82f5e43fadb5d64e63289db8e125e37ffe95 (and segfaults with latest commits of develop (c093a62a2b) and master (d9c867d342) ).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/949
https://github.com/su2code/SU2/issues/949:1108,Modifiability,Config,Config,1108,"[sd2_case1b_ddes_v7.cfg.txt](https://github.com/su2code/SU2/files/4531160/sd2_case1b_ddes_v7.cfg.txt). Hello,. We are currently unable to restart SU2 in DDES mode from a restart file that includes time-averaged data on very large (~180 million cell) meshes. Compiled in release mode, the code gives the error ""FGMRES orthogonalization failed, linear solver diverged."". Compiled in debug mode, the code issues an assertion failure at line 1881 of $SU2_HOME/SU2_CFD/src/numerics_structure.cpp, which is a check in the CNumerics::SetRoe_Dissipation(...) method to make sure that variable 'Dissipation_j' is between zero and one. This problem only appears when attempting to restart from solution files that include ""TIME_AVERAGE"" data on very large meshes. Note the above behavior is occurring with commit 382e82f5e43fadb5d64e63289db8e125e37ffe95 of the ""develop"" branch. . I have pulled the latest commits of develop (c093a62a2b) and master (d9c867d342), but get segfaults during Jacobian structure initialization when attempting to restart on multiple cores. All help is appreciated. -Paul. **To Reproduce**; Config file attached, but mesh file is quite large... 17.6 GB. **Desktop (please complete the following information):**; - Department of Defense Unclassified System: ""Onyx""; - System type: Cray XC40/50; - OS: Variant of SuSe Linux 12.3 and/or Cray Linux Environment; - Compiler: Intel 19.0.1.144; - MPI: cray-mpich 7.6.3; - SU2 v. 7.0.1, develop branch, commit 382e82f5e43fadb5d64e63289db8e125e37ffe95 (and segfaults with latest commits of develop (c093a62a2b) and master (d9c867d342) ).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/949
https://github.com/su2code/SU2/issues/949:412,Testability,assert,assertion,412,"[sd2_case1b_ddes_v7.cfg.txt](https://github.com/su2code/SU2/files/4531160/sd2_case1b_ddes_v7.cfg.txt). Hello,. We are currently unable to restart SU2 in DDES mode from a restart file that includes time-averaged data on very large (~180 million cell) meshes. Compiled in release mode, the code gives the error ""FGMRES orthogonalization failed, linear solver diverged."". Compiled in debug mode, the code issues an assertion failure at line 1881 of $SU2_HOME/SU2_CFD/src/numerics_structure.cpp, which is a check in the CNumerics::SetRoe_Dissipation(...) method to make sure that variable 'Dissipation_j' is between zero and one. This problem only appears when attempting to restart from solution files that include ""TIME_AVERAGE"" data on very large meshes. Note the above behavior is occurring with commit 382e82f5e43fadb5d64e63289db8e125e37ffe95 of the ""develop"" branch. . I have pulled the latest commits of develop (c093a62a2b) and master (d9c867d342), but get segfaults during Jacobian structure initialization when attempting to restart on multiple cores. All help is appreciated. -Paul. **To Reproduce**; Config file attached, but mesh file is quite large... 17.6 GB. **Desktop (please complete the following information):**; - Department of Defense Unclassified System: ""Onyx""; - System type: Cray XC40/50; - OS: Variant of SuSe Linux 12.3 and/or Cray Linux Environment; - Compiler: Intel 19.0.1.144; - MPI: cray-mpich 7.6.3; - SU2 v. 7.0.1, develop branch, commit 382e82f5e43fadb5d64e63289db8e125e37ffe95 (and segfaults with latest commits of develop (c093a62a2b) and master (d9c867d342) ).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/949
https://github.com/su2code/SU2/pull/950:1217,Deployability,update,updated,1217,"## Proposed Changes; - Fixes the adjoint residual computation for multizone cases (which was wrong on first inner iterations due to cross term extraction).; - Fixes (hopefully for good) discadj FEA solutions when INCREMENTAL_LOAD=YES (left over from #933); - Add relaxation to CDiscAdjSolver via option RELAXATION_FACTOR_ADJOINT, that replaces the old RELAXATION_FACTOR_ADJFLOW . I found this to be necessary for adjoint FSI problems, the adjoint of the interpolation matrix (and therefore the cross terms) are not smooth which makes convergence more difficult. In version 6 this was achievable via the old options RELAXATION_FACTOR_FLOW/TURB.; - Adds OpenMP directives to the CFL adaptation routine (a ""todo"" from #861), restricts the Min/Max/Avg CFL calculation to the fine grid (which will change the output but not the solution). ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/950
https://github.com/su2code/SU2/pull/950:681,Energy Efficiency,adapt,adaptation,681,"## Proposed Changes; - Fixes the adjoint residual computation for multizone cases (which was wrong on first inner iterations due to cross term extraction).; - Fixes (hopefully for good) discadj FEA solutions when INCREMENTAL_LOAD=YES (left over from #933); - Add relaxation to CDiscAdjSolver via option RELAXATION_FACTOR_ADJOINT, that replaces the old RELAXATION_FACTOR_ADJFLOW . I found this to be necessary for adjoint FSI problems, the adjoint of the interpolation matrix (and therefore the cross terms) are not smooth which makes convergence more difficult. In version 6 this was achievable via the old options RELAXATION_FACTOR_FLOW/TURB.; - Adds OpenMP directives to the CFL adaptation routine (a ""todo"" from #861), restricts the Min/Max/Avg CFL calculation to the fine grid (which will change the output but not the solution). ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/950
https://github.com/su2code/SU2/pull/950:692,Integrability,rout,routine,692,"## Proposed Changes; - Fixes the adjoint residual computation for multizone cases (which was wrong on first inner iterations due to cross term extraction).; - Fixes (hopefully for good) discadj FEA solutions when INCREMENTAL_LOAD=YES (left over from #933); - Add relaxation to CDiscAdjSolver via option RELAXATION_FACTOR_ADJOINT, that replaces the old RELAXATION_FACTOR_ADJFLOW . I found this to be necessary for adjoint FSI problems, the adjoint of the interpolation matrix (and therefore the cross terms) are not smooth which makes convergence more difficult. In version 6 this was achievable via the old options RELAXATION_FACTOR_FLOW/TURB.; - Adds OpenMP directives to the CFL adaptation routine (a ""todo"" from #861), restricts the Min/Max/Avg CFL calculation to the fine grid (which will change the output but not the solution). ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/950
https://github.com/su2code/SU2/pull/950:681,Modifiability,adapt,adaptation,681,"## Proposed Changes; - Fixes the adjoint residual computation for multizone cases (which was wrong on first inner iterations due to cross term extraction).; - Fixes (hopefully for good) discadj FEA solutions when INCREMENTAL_LOAD=YES (left over from #933); - Add relaxation to CDiscAdjSolver via option RELAXATION_FACTOR_ADJOINT, that replaces the old RELAXATION_FACTOR_ADJFLOW . I found this to be necessary for adjoint FSI problems, the adjoint of the interpolation matrix (and therefore the cross terms) are not smooth which makes convergence more difficult. In version 6 this was achievable via the old options RELAXATION_FACTOR_FLOW/TURB.; - Adds OpenMP directives to the CFL adaptation routine (a ""todo"" from #861), restricts the Min/Max/Avg CFL calculation to the fine grid (which will change the output but not the solution). ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/950
https://github.com/su2code/SU2/pull/950:1144,Testability,test,test,1144,"## Proposed Changes; - Fixes the adjoint residual computation for multizone cases (which was wrong on first inner iterations due to cross term extraction).; - Fixes (hopefully for good) discadj FEA solutions when INCREMENTAL_LOAD=YES (left over from #933); - Add relaxation to CDiscAdjSolver via option RELAXATION_FACTOR_ADJOINT, that replaces the old RELAXATION_FACTOR_ADJFLOW . I found this to be necessary for adjoint FSI problems, the adjoint of the interpolation matrix (and therefore the cross terms) are not smooth which makes convergence more difficult. In version 6 this was achievable via the old options RELAXATION_FACTOR_FLOW/TURB.; - Adds OpenMP directives to the CFL adaptation routine (a ""todo"" from #861), restricts the Min/Max/Avg CFL calculation to the fine grid (which will change the output but not the solution). ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/950
https://github.com/su2code/SU2/pull/951:726,Deployability,update,updated,726,"## Proposed Changes; This allows one to define a triple physics simulation where structural displacements due to fluid forces are also applied to a heat transfer solid domain ; [example.zip](https://github.com/su2code/SU2/files/4541290/example.zip); but where the temperature of that domain does not influence the elastic response (for now),. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/951
https://github.com/su2code/SU2/pull/951:653,Testability,test,test,653,"## Proposed Changes; This allows one to define a triple physics simulation where structural displacements due to fluid forces are also applied to a heat transfer solid domain ; [example.zip](https://github.com/su2code/SU2/files/4541290/example.zip); but where the temperature of that domain does not influence the elastic response (for now),. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/951
https://github.com/su2code/SU2/pull/952:865,Deployability,update,updated,865,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/952
https://github.com/su2code/SU2/pull/952:792,Testability,test,test,792,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/952
https://github.com/su2code/SU2/pull/952:414,Usability,guid,guide,414,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/952
https://github.com/su2code/SU2/issues/953:215,Availability,down,downloads,215,"Hi,. I am trying to install SU v7.0.3 and I find a peculiar problem. I have set -Denable-autodiff = false & -Denable-directdiff = false during configuration creation using meson.py. However, the configuration still downloads CoDiPack and MediPack. Shouldn't the downloading be bypassed or is there something wrong with my understanding?. Thanks and regards; Suman",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/953
https://github.com/su2code/SU2/issues/953:262,Availability,down,downloading,262,"Hi,. I am trying to install SU v7.0.3 and I find a peculiar problem. I have set -Denable-autodiff = false & -Denable-directdiff = false during configuration creation using meson.py. However, the configuration still downloads CoDiPack and MediPack. Shouldn't the downloading be bypassed or is there something wrong with my understanding?. Thanks and regards; Suman",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/953
https://github.com/su2code/SU2/issues/953:20,Deployability,install,install,20,"Hi,. I am trying to install SU v7.0.3 and I find a peculiar problem. I have set -Denable-autodiff = false & -Denable-directdiff = false during configuration creation using meson.py. However, the configuration still downloads CoDiPack and MediPack. Shouldn't the downloading be bypassed or is there something wrong with my understanding?. Thanks and regards; Suman",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/953
https://github.com/su2code/SU2/issues/953:143,Deployability,configurat,configuration,143,"Hi,. I am trying to install SU v7.0.3 and I find a peculiar problem. I have set -Denable-autodiff = false & -Denable-directdiff = false during configuration creation using meson.py. However, the configuration still downloads CoDiPack and MediPack. Shouldn't the downloading be bypassed or is there something wrong with my understanding?. Thanks and regards; Suman",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/953
https://github.com/su2code/SU2/issues/953:195,Deployability,configurat,configuration,195,"Hi,. I am trying to install SU v7.0.3 and I find a peculiar problem. I have set -Denable-autodiff = false & -Denable-directdiff = false during configuration creation using meson.py. However, the configuration still downloads CoDiPack and MediPack. Shouldn't the downloading be bypassed or is there something wrong with my understanding?. Thanks and regards; Suman",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/953
https://github.com/su2code/SU2/issues/953:143,Modifiability,config,configuration,143,"Hi,. I am trying to install SU v7.0.3 and I find a peculiar problem. I have set -Denable-autodiff = false & -Denable-directdiff = false during configuration creation using meson.py. However, the configuration still downloads CoDiPack and MediPack. Shouldn't the downloading be bypassed or is there something wrong with my understanding?. Thanks and regards; Suman",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/953
https://github.com/su2code/SU2/issues/953:195,Modifiability,config,configuration,195,"Hi,. I am trying to install SU v7.0.3 and I find a peculiar problem. I have set -Denable-autodiff = false & -Denable-directdiff = false during configuration creation using meson.py. However, the configuration still downloads CoDiPack and MediPack. Shouldn't the downloading be bypassed or is there something wrong with my understanding?. Thanks and regards; Suman",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/953
https://github.com/su2code/SU2/issues/954:159,Availability,error,error,159,"Hi,. I am trying to installSU2 in my machine. I am using python3 as suggested. When I am building the configuration using ./meson.py build I get the following error:. Traceback (most recent call last):; File ""./meson.py"", line 74, in <module>; build_ninja(); File ""./meson.py"", line 60, in build_ninja; subprocess.run([sys.path[0] + os.path.sep + 'ninja', '--version'], stdout=subprocess.PIPE); AttributeError: 'module' object has no attribute 'run'. What does this error indicate? Do I require a later version of python (>3.5)?. Regards; Suman",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/954
https://github.com/su2code/SU2/issues/954:466,Availability,error,error,466,"Hi,. I am trying to installSU2 in my machine. I am using python3 as suggested. When I am building the configuration using ./meson.py build I get the following error:. Traceback (most recent call last):; File ""./meson.py"", line 74, in <module>; build_ninja(); File ""./meson.py"", line 60, in build_ninja; subprocess.run([sys.path[0] + os.path.sep + 'ninja', '--version'], stdout=subprocess.PIPE); AttributeError: 'module' object has no attribute 'run'. What does this error indicate? Do I require a later version of python (>3.5)?. Regards; Suman",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/954
https://github.com/su2code/SU2/issues/954:102,Deployability,configurat,configuration,102,"Hi,. I am trying to installSU2 in my machine. I am using python3 as suggested. When I am building the configuration using ./meson.py build I get the following error:. Traceback (most recent call last):; File ""./meson.py"", line 74, in <module>; build_ninja(); File ""./meson.py"", line 60, in build_ninja; subprocess.run([sys.path[0] + os.path.sep + 'ninja', '--version'], stdout=subprocess.PIPE); AttributeError: 'module' object has no attribute 'run'. What does this error indicate? Do I require a later version of python (>3.5)?. Regards; Suman",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/954
https://github.com/su2code/SU2/issues/954:102,Modifiability,config,configuration,102,"Hi,. I am trying to installSU2 in my machine. I am using python3 as suggested. When I am building the configuration using ./meson.py build I get the following error:. Traceback (most recent call last):; File ""./meson.py"", line 74, in <module>; build_ninja(); File ""./meson.py"", line 60, in build_ninja; subprocess.run([sys.path[0] + os.path.sep + 'ninja', '--version'], stdout=subprocess.PIPE); AttributeError: 'module' object has no attribute 'run'. What does this error indicate? Do I require a later version of python (>3.5)?. Regards; Suman",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/954
https://github.com/su2code/SU2/issues/955:20,Deployability,install,install,20,"Hi,. I am trying to install SU2 from source, on a cluster that has no internet access. Firstly, is it possible to install SU2 in this scenario? Secondly, can you suggest a way to do this without running into dependency issues? I tried to find this information but could not get it. I will appreciate your help/suggestions regarding this. Regards; Suman",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955
https://github.com/su2code/SU2/issues/955:114,Deployability,install,install,114,"Hi,. I am trying to install SU2 from source, on a cluster that has no internet access. Firstly, is it possible to install SU2 in this scenario? Secondly, can you suggest a way to do this without running into dependency issues? I tried to find this information but could not get it. I will appreciate your help/suggestions regarding this. Regards; Suman",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955
https://github.com/su2code/SU2/issues/955:208,Integrability,depend,dependency,208,"Hi,. I am trying to install SU2 from source, on a cluster that has no internet access. Firstly, is it possible to install SU2 in this scenario? Secondly, can you suggest a way to do this without running into dependency issues? I tried to find this information but could not get it. I will appreciate your help/suggestions regarding this. Regards; Suman",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955
https://github.com/su2code/SU2/issues/955:79,Security,access,access,79,"Hi,. I am trying to install SU2 from source, on a cluster that has no internet access. Firstly, is it possible to install SU2 in this scenario? Secondly, can you suggest a way to do this without running into dependency issues? I tried to find this information but could not get it. I will appreciate your help/suggestions regarding this. Regards; Suman",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/955
https://github.com/su2code/SU2/issues/956:22,Availability,Error,Error,22,"**Describe the bug**; Error at link time when compiling SU2 without mpi (""-Dwith-mpi=disabled"") with debug flags (""--buildtype=debug""). This problem does not seem to occur when compiling with release (""--buildtype=release""). Error message:; ```; /usr/bin/ld: Common/src/libSU2Common.a(interface_interpolation_CMirror.cpp.o): in function `CMirror::SetTransferCoeff(CConfig const* const*)':; /local/SU2/build/../Common/src/interface_interpolation/CMirror.cpp:173: undefined reference to `MPI_STATUS_IGNORE'; /usr/bin/ld: /local/SU2/build/../Common/src/interface_interpolation/CMirror.cpp:174: undefined reference to `MPI_STATUS_IGNORE'; /usr/bin/ld: /local/SU2/build/../Common/src/interface_interpolation/CMirror.cpp:175: undefined reference to `MPI_STATUS_IGNORE'; ```; I noticed that this method does not use any MPI preprocessor flags (i.e. this function does not make use of #ifdef HAVE_MPI); however, it's not obvious to me why switching the build type to release would solve the problem. . **To Reproduce**; Configure with meson:; ""./meson.py build --reconfigure --buildtype=debug -Dwith-mpi=disabled""; Build with ninja:; ./ninja -C build install. **Desktop (please complete the following information):**; - OS: Arch Linux 5.6.3-arch1-1; - C++ compiler and version: gcc (Arch Linux 9.3.0-1) 9.3.0; - MPI implementation and version: Open MPI 4.0.3; - SU2 Version: SU2 v. 7.0.3, branch: develop, commit: c093a62a2b",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/956
https://github.com/su2code/SU2/issues/956:225,Availability,Error,Error,225,"**Describe the bug**; Error at link time when compiling SU2 without mpi (""-Dwith-mpi=disabled"") with debug flags (""--buildtype=debug""). This problem does not seem to occur when compiling with release (""--buildtype=release""). Error message:; ```; /usr/bin/ld: Common/src/libSU2Common.a(interface_interpolation_CMirror.cpp.o): in function `CMirror::SetTransferCoeff(CConfig const* const*)':; /local/SU2/build/../Common/src/interface_interpolation/CMirror.cpp:173: undefined reference to `MPI_STATUS_IGNORE'; /usr/bin/ld: /local/SU2/build/../Common/src/interface_interpolation/CMirror.cpp:174: undefined reference to `MPI_STATUS_IGNORE'; /usr/bin/ld: /local/SU2/build/../Common/src/interface_interpolation/CMirror.cpp:175: undefined reference to `MPI_STATUS_IGNORE'; ```; I noticed that this method does not use any MPI preprocessor flags (i.e. this function does not make use of #ifdef HAVE_MPI); however, it's not obvious to me why switching the build type to release would solve the problem. . **To Reproduce**; Configure with meson:; ""./meson.py build --reconfigure --buildtype=debug -Dwith-mpi=disabled""; Build with ninja:; ./ninja -C build install. **Desktop (please complete the following information):**; - OS: Arch Linux 5.6.3-arch1-1; - C++ compiler and version: gcc (Arch Linux 9.3.0-1) 9.3.0; - MPI implementation and version: Open MPI 4.0.3; - SU2 Version: SU2 v. 7.0.3, branch: develop, commit: c093a62a2b",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/956
https://github.com/su2code/SU2/issues/956:192,Deployability,release,release,192,"**Describe the bug**; Error at link time when compiling SU2 without mpi (""-Dwith-mpi=disabled"") with debug flags (""--buildtype=debug""). This problem does not seem to occur when compiling with release (""--buildtype=release""). Error message:; ```; /usr/bin/ld: Common/src/libSU2Common.a(interface_interpolation_CMirror.cpp.o): in function `CMirror::SetTransferCoeff(CConfig const* const*)':; /local/SU2/build/../Common/src/interface_interpolation/CMirror.cpp:173: undefined reference to `MPI_STATUS_IGNORE'; /usr/bin/ld: /local/SU2/build/../Common/src/interface_interpolation/CMirror.cpp:174: undefined reference to `MPI_STATUS_IGNORE'; /usr/bin/ld: /local/SU2/build/../Common/src/interface_interpolation/CMirror.cpp:175: undefined reference to `MPI_STATUS_IGNORE'; ```; I noticed that this method does not use any MPI preprocessor flags (i.e. this function does not make use of #ifdef HAVE_MPI); however, it's not obvious to me why switching the build type to release would solve the problem. . **To Reproduce**; Configure with meson:; ""./meson.py build --reconfigure --buildtype=debug -Dwith-mpi=disabled""; Build with ninja:; ./ninja -C build install. **Desktop (please complete the following information):**; - OS: Arch Linux 5.6.3-arch1-1; - C++ compiler and version: gcc (Arch Linux 9.3.0-1) 9.3.0; - MPI implementation and version: Open MPI 4.0.3; - SU2 Version: SU2 v. 7.0.3, branch: develop, commit: c093a62a2b",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/956
https://github.com/su2code/SU2/issues/956:214,Deployability,release,release,214,"**Describe the bug**; Error at link time when compiling SU2 without mpi (""-Dwith-mpi=disabled"") with debug flags (""--buildtype=debug""). This problem does not seem to occur when compiling with release (""--buildtype=release""). Error message:; ```; /usr/bin/ld: Common/src/libSU2Common.a(interface_interpolation_CMirror.cpp.o): in function `CMirror::SetTransferCoeff(CConfig const* const*)':; /local/SU2/build/../Common/src/interface_interpolation/CMirror.cpp:173: undefined reference to `MPI_STATUS_IGNORE'; /usr/bin/ld: /local/SU2/build/../Common/src/interface_interpolation/CMirror.cpp:174: undefined reference to `MPI_STATUS_IGNORE'; /usr/bin/ld: /local/SU2/build/../Common/src/interface_interpolation/CMirror.cpp:175: undefined reference to `MPI_STATUS_IGNORE'; ```; I noticed that this method does not use any MPI preprocessor flags (i.e. this function does not make use of #ifdef HAVE_MPI); however, it's not obvious to me why switching the build type to release would solve the problem. . **To Reproduce**; Configure with meson:; ""./meson.py build --reconfigure --buildtype=debug -Dwith-mpi=disabled""; Build with ninja:; ./ninja -C build install. **Desktop (please complete the following information):**; - OS: Arch Linux 5.6.3-arch1-1; - C++ compiler and version: gcc (Arch Linux 9.3.0-1) 9.3.0; - MPI implementation and version: Open MPI 4.0.3; - SU2 Version: SU2 v. 7.0.3, branch: develop, commit: c093a62a2b",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/956
https://github.com/su2code/SU2/issues/956:959,Deployability,release,release,959,"**Describe the bug**; Error at link time when compiling SU2 without mpi (""-Dwith-mpi=disabled"") with debug flags (""--buildtype=debug""). This problem does not seem to occur when compiling with release (""--buildtype=release""). Error message:; ```; /usr/bin/ld: Common/src/libSU2Common.a(interface_interpolation_CMirror.cpp.o): in function `CMirror::SetTransferCoeff(CConfig const* const*)':; /local/SU2/build/../Common/src/interface_interpolation/CMirror.cpp:173: undefined reference to `MPI_STATUS_IGNORE'; /usr/bin/ld: /local/SU2/build/../Common/src/interface_interpolation/CMirror.cpp:174: undefined reference to `MPI_STATUS_IGNORE'; /usr/bin/ld: /local/SU2/build/../Common/src/interface_interpolation/CMirror.cpp:175: undefined reference to `MPI_STATUS_IGNORE'; ```; I noticed that this method does not use any MPI preprocessor flags (i.e. this function does not make use of #ifdef HAVE_MPI); however, it's not obvious to me why switching the build type to release would solve the problem. . **To Reproduce**; Configure with meson:; ""./meson.py build --reconfigure --buildtype=debug -Dwith-mpi=disabled""; Build with ninja:; ./ninja -C build install. **Desktop (please complete the following information):**; - OS: Arch Linux 5.6.3-arch1-1; - C++ compiler and version: gcc (Arch Linux 9.3.0-1) 9.3.0; - MPI implementation and version: Open MPI 4.0.3; - SU2 Version: SU2 v. 7.0.3, branch: develop, commit: c093a62a2b",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/956
https://github.com/su2code/SU2/issues/956:1143,Deployability,install,install,1143,"**Describe the bug**; Error at link time when compiling SU2 without mpi (""-Dwith-mpi=disabled"") with debug flags (""--buildtype=debug""). This problem does not seem to occur when compiling with release (""--buildtype=release""). Error message:; ```; /usr/bin/ld: Common/src/libSU2Common.a(interface_interpolation_CMirror.cpp.o): in function `CMirror::SetTransferCoeff(CConfig const* const*)':; /local/SU2/build/../Common/src/interface_interpolation/CMirror.cpp:173: undefined reference to `MPI_STATUS_IGNORE'; /usr/bin/ld: /local/SU2/build/../Common/src/interface_interpolation/CMirror.cpp:174: undefined reference to `MPI_STATUS_IGNORE'; /usr/bin/ld: /local/SU2/build/../Common/src/interface_interpolation/CMirror.cpp:175: undefined reference to `MPI_STATUS_IGNORE'; ```; I noticed that this method does not use any MPI preprocessor flags (i.e. this function does not make use of #ifdef HAVE_MPI); however, it's not obvious to me why switching the build type to release would solve the problem. . **To Reproduce**; Configure with meson:; ""./meson.py build --reconfigure --buildtype=debug -Dwith-mpi=disabled""; Build with ninja:; ./ninja -C build install. **Desktop (please complete the following information):**; - OS: Arch Linux 5.6.3-arch1-1; - C++ compiler and version: gcc (Arch Linux 9.3.0-1) 9.3.0; - MPI implementation and version: Open MPI 4.0.3; - SU2 Version: SU2 v. 7.0.3, branch: develop, commit: c093a62a2b",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/956
https://github.com/su2code/SU2/issues/956:231,Integrability,message,message,231,"**Describe the bug**; Error at link time when compiling SU2 without mpi (""-Dwith-mpi=disabled"") with debug flags (""--buildtype=debug""). This problem does not seem to occur when compiling with release (""--buildtype=release""). Error message:; ```; /usr/bin/ld: Common/src/libSU2Common.a(interface_interpolation_CMirror.cpp.o): in function `CMirror::SetTransferCoeff(CConfig const* const*)':; /local/SU2/build/../Common/src/interface_interpolation/CMirror.cpp:173: undefined reference to `MPI_STATUS_IGNORE'; /usr/bin/ld: /local/SU2/build/../Common/src/interface_interpolation/CMirror.cpp:174: undefined reference to `MPI_STATUS_IGNORE'; /usr/bin/ld: /local/SU2/build/../Common/src/interface_interpolation/CMirror.cpp:175: undefined reference to `MPI_STATUS_IGNORE'; ```; I noticed that this method does not use any MPI preprocessor flags (i.e. this function does not make use of #ifdef HAVE_MPI); however, it's not obvious to me why switching the build type to release would solve the problem. . **To Reproduce**; Configure with meson:; ""./meson.py build --reconfigure --buildtype=debug -Dwith-mpi=disabled""; Build with ninja:; ./ninja -C build install. **Desktop (please complete the following information):**; - OS: Arch Linux 5.6.3-arch1-1; - C++ compiler and version: gcc (Arch Linux 9.3.0-1) 9.3.0; - MPI implementation and version: Open MPI 4.0.3; - SU2 Version: SU2 v. 7.0.3, branch: develop, commit: c093a62a2b",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/956
https://github.com/su2code/SU2/issues/956:1012,Modifiability,Config,Configure,1012,"**Describe the bug**; Error at link time when compiling SU2 without mpi (""-Dwith-mpi=disabled"") with debug flags (""--buildtype=debug""). This problem does not seem to occur when compiling with release (""--buildtype=release""). Error message:; ```; /usr/bin/ld: Common/src/libSU2Common.a(interface_interpolation_CMirror.cpp.o): in function `CMirror::SetTransferCoeff(CConfig const* const*)':; /local/SU2/build/../Common/src/interface_interpolation/CMirror.cpp:173: undefined reference to `MPI_STATUS_IGNORE'; /usr/bin/ld: /local/SU2/build/../Common/src/interface_interpolation/CMirror.cpp:174: undefined reference to `MPI_STATUS_IGNORE'; /usr/bin/ld: /local/SU2/build/../Common/src/interface_interpolation/CMirror.cpp:175: undefined reference to `MPI_STATUS_IGNORE'; ```; I noticed that this method does not use any MPI preprocessor flags (i.e. this function does not make use of #ifdef HAVE_MPI); however, it's not obvious to me why switching the build type to release would solve the problem. . **To Reproduce**; Configure with meson:; ""./meson.py build --reconfigure --buildtype=debug -Dwith-mpi=disabled""; Build with ninja:; ./ninja -C build install. **Desktop (please complete the following information):**; - OS: Arch Linux 5.6.3-arch1-1; - C++ compiler and version: gcc (Arch Linux 9.3.0-1) 9.3.0; - MPI implementation and version: Open MPI 4.0.3; - SU2 Version: SU2 v. 7.0.3, branch: develop, commit: c093a62a2b",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/956
https://github.com/su2code/SU2/issues/957:599,Testability,Test,TestCases,599,"**Describe the bug**; The values of Total CT, CQ and CMerit are computed by the flow solvers but are never written on the screen or the history file. These coefficients belong to the ROTATING_FRAME group and I am not able to find this in any of the output classes. I can see functions for aero coefficients and marker_analyze, is there an equivalent function for these coefficients?. **To Reproduce**; Any problem run with rotating frame. For ex, I have attached an example cfg file here; [centrifugal_blade.txt](https://github.com/su2code/SU2/files/4542348/centrifugal_blade.txt). The mesh is from TestCases/turbomachinery/centrifugal_blade/su2mesh.su2. - SU2 Version: v7.0.3",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/957
https://github.com/su2code/SU2/pull/958:107,Energy Efficiency,adapt,adaption,107,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Removing CFL adaption for the Quick Start. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. Fixes #887. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/958
https://github.com/su2code/SU2/pull/958:107,Modifiability,adapt,adaption,107,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Removing CFL adaption for the Quick Start. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. Fixes #887. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/958
https://github.com/su2code/SU2/pull/958:469,Usability,guid,guide,469,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Removing CFL adaption for the Quick Start. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. Fixes #887. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/958
https://github.com/su2code/SU2/pull/959:806,Deployability,update,updated,806,"## Proposed Changes; Make CEdge a class of arrays, instead of using it as an array of classes.; Ended up having to add some const-correctness to CNumerics too.; Forgot to turn off ""auto blank space stripping"" so a few files will show more changes than this actually introduces. ## Related Work; Needed for #789 (to eventually support the SIMD part).; Similar changes to #753.; Fixes a bug in the SST fluid-fluid interface. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/959
https://github.com/su2code/SU2/pull/959:412,Integrability,interface,interface,412,"## Proposed Changes; Make CEdge a class of arrays, instead of using it as an array of classes.; Ended up having to add some const-correctness to CNumerics too.; Forgot to turn off ""auto blank space stripping"" so a few files will show more changes than this actually introduces. ## Related Work; Needed for #789 (to eventually support the SIMD part).; Similar changes to #753.; Fixes a bug in the SST fluid-fluid interface. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/959
https://github.com/su2code/SU2/pull/959:733,Testability,test,test,733,"## Proposed Changes; Make CEdge a class of arrays, instead of using it as an array of classes.; Ended up having to add some const-correctness to CNumerics too.; Forgot to turn off ""auto blank space stripping"" so a few files will show more changes than this actually introduces. ## Related Work; Needed for #789 (to eventually support the SIMD part).; Similar changes to #753.; Fixes a bug in the SST fluid-fluid interface. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/959
https://github.com/su2code/SU2/pull/960:489,Usability,guid,guide,489,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Adds all missing override specifiers to be better in line with C++11. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/960
https://github.com/su2code/SU2/pull/961:947,Deployability,update,updated,947,"## Proposed Changes; For classical RK4 explict, arent the time coefficients suppose to go (1.0, 0.5, 0.5, 1.0)? The functional step are correct as (1/6, 1/3, 1/3, 1/6). I couldnt use the explicit RK4 on the tutorial to test this because it says SU2 diverges. ; . ## Related Work; Modified time coefficient in classical RK4. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/961
https://github.com/su2code/SU2/pull/961:219,Testability,test,test,219,"## Proposed Changes; For classical RK4 explict, arent the time coefficients suppose to go (1.0, 0.5, 0.5, 1.0)? The functional step are correct as (1/6, 1/3, 1/3, 1/6). I couldnt use the explicit RK4 on the tutorial to test this because it says SU2 diverges. ; . ## Related Work; Modified time coefficient in classical RK4. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/961
https://github.com/su2code/SU2/pull/961:874,Testability,test,test,874,"## Proposed Changes; For classical RK4 explict, arent the time coefficients suppose to go (1.0, 0.5, 0.5, 1.0)? The functional step are correct as (1/6, 1/3, 1/3, 1/6). I couldnt use the explicit RK4 on the tutorial to test this because it says SU2 diverges. ; . ## Related Work; Modified time coefficient in classical RK4. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/961
https://github.com/su2code/SU2/pull/961:496,Usability,guid,guide,496,"## Proposed Changes; For classical RK4 explict, arent the time coefficients suppose to go (1.0, 0.5, 0.5, 1.0)? The functional step are correct as (1/6, 1/3, 1/3, 1/6). I couldnt use the explicit RK4 on the tutorial to test this because it says SU2 diverges. ; . ## Related Work; Modified time coefficient in classical RK4. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/961
https://github.com/su2code/SU2/pull/962:762,Deployability,update,updated,762,"## Proposed Changes; Small fix to add the rotating frame coefficients (CT, CQ and CMerit) to the output. ; ; ## Related Work; Issue #957 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/962
https://github.com/su2code/SU2/pull/962:689,Testability,test,test,689,"## Proposed Changes; Small fix to add the rotating frame coefficients (CT, CQ and CMerit) to the output. ; ; ## Related Work; Issue #957 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/962
https://github.com/su2code/SU2/pull/962:311,Usability,guid,guide,311,"## Proposed Changes; Small fix to add the rotating frame coefficients (CT, CQ and CMerit) to the output. ; ; ## Related Work; Issue #957 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/962
https://github.com/su2code/SU2/pull/963:109,Deployability,integrat,integration,109,"## Proposed Changes; This is a ""don't pay for what you don't use"" optimization.; I've disabled implicit time integration during the computation of the MG forcing term. I've also refactored CMultiGridQueue, it had a bad scaling problem because to remove a point from the queue we were doing a linear search followed by vector::erase, both being O(N) operations.; I've put together a queue-type class that allows fast (amortized O(1)) ""seek-and-destroy"" of arbitrary items. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/963
https://github.com/su2code/SU2/pull/963:855,Deployability,update,updated,855,"## Proposed Changes; This is a ""don't pay for what you don't use"" optimization.; I've disabled implicit time integration during the computation of the MG forcing term. I've also refactored CMultiGridQueue, it had a bad scaling problem because to remove a point from the queue we were doing a linear search followed by vector::erase, both being O(N) operations.; I've put together a queue-type class that allows fast (amortized O(1)) ""seek-and-destroy"" of arbitrary items. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/963
https://github.com/su2code/SU2/pull/963:109,Integrability,integrat,integration,109,"## Proposed Changes; This is a ""don't pay for what you don't use"" optimization.; I've disabled implicit time integration during the computation of the MG forcing term. I've also refactored CMultiGridQueue, it had a bad scaling problem because to remove a point from the queue we were doing a linear search followed by vector::erase, both being O(N) operations.; I've put together a queue-type class that allows fast (amortized O(1)) ""seek-and-destroy"" of arbitrary items. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/963
https://github.com/su2code/SU2/pull/963:178,Modifiability,refactor,refactored,178,"## Proposed Changes; This is a ""don't pay for what you don't use"" optimization.; I've disabled implicit time integration during the computation of the MG forcing term. I've also refactored CMultiGridQueue, it had a bad scaling problem because to remove a point from the queue we were doing a linear search followed by vector::erase, both being O(N) operations.; I've put together a queue-type class that allows fast (amortized O(1)) ""seek-and-destroy"" of arbitrary items. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/963
https://github.com/su2code/SU2/pull/963:66,Performance,optimiz,optimization,66,"## Proposed Changes; This is a ""don't pay for what you don't use"" optimization.; I've disabled implicit time integration during the computation of the MG forcing term. I've also refactored CMultiGridQueue, it had a bad scaling problem because to remove a point from the queue we were doing a linear search followed by vector::erase, both being O(N) operations.; I've put together a queue-type class that allows fast (amortized O(1)) ""seek-and-destroy"" of arbitrary items. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/963
https://github.com/su2code/SU2/pull/963:270,Performance,queue,queue,270,"## Proposed Changes; This is a ""don't pay for what you don't use"" optimization.; I've disabled implicit time integration during the computation of the MG forcing term. I've also refactored CMultiGridQueue, it had a bad scaling problem because to remove a point from the queue we were doing a linear search followed by vector::erase, both being O(N) operations.; I've put together a queue-type class that allows fast (amortized O(1)) ""seek-and-destroy"" of arbitrary items. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/963
https://github.com/su2code/SU2/pull/963:382,Performance,queue,queue-type,382,"## Proposed Changes; This is a ""don't pay for what you don't use"" optimization.; I've disabled implicit time integration during the computation of the MG forcing term. I've also refactored CMultiGridQueue, it had a bad scaling problem because to remove a point from the queue we were doing a linear search followed by vector::erase, both being O(N) operations.; I've put together a queue-type class that allows fast (amortized O(1)) ""seek-and-destroy"" of arbitrary items. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/963
https://github.com/su2code/SU2/pull/963:782,Testability,test,test,782,"## Proposed Changes; This is a ""don't pay for what you don't use"" optimization.; I've disabled implicit time integration during the computation of the MG forcing term. I've also refactored CMultiGridQueue, it had a bad scaling problem because to remove a point from the queue we were doing a linear search followed by vector::erase, both being O(N) operations.; I've put together a queue-type class that allows fast (amortized O(1)) ""seek-and-destroy"" of arbitrary items. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/963
https://github.com/su2code/SU2/pull/964:1289,Deployability,update,updated,1289,"## Proposed Changes; * Allows direct flow computations in shape_optimization.py to run from given restart solution for unsteady optimization. ; All you have to do is to copy your restart files e.g. `restart_flow_00008.dat` and `restart_flow_00009.dat` in the directory of your `.cfg` and `.su2` (mesh) file and set the corresponding options:; `RESTART_SOL=YES`; `RESTART_ITER=10` (in this example). ; The `shape_optimization.py` script will use this direct restart file for each design. This means, the direct computation will be started from iteration 10 and will run up to the final iteration. The adjoint will run from the final iteration, but stop at the iteration of the restart file. * `direct_differentiation.py` now also accepts restart files in the same manner. * `SENSITIVITY` is now a default field in `VOLUME_OUTPUT`, if the computation mode is `DISCRETE_ADJOINT`. ## Related Work; Issue #909. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/964
https://github.com/su2code/SU2/pull/964:128,Performance,optimiz,optimization,128,"## Proposed Changes; * Allows direct flow computations in shape_optimization.py to run from given restart solution for unsteady optimization. ; All you have to do is to copy your restart files e.g. `restart_flow_00008.dat` and `restart_flow_00009.dat` in the directory of your `.cfg` and `.su2` (mesh) file and set the corresponding options:; `RESTART_SOL=YES`; `RESTART_ITER=10` (in this example). ; The `shape_optimization.py` script will use this direct restart file for each design. This means, the direct computation will be started from iteration 10 and will run up to the final iteration. The adjoint will run from the final iteration, but stop at the iteration of the restart file. * `direct_differentiation.py` now also accepts restart files in the same manner. * `SENSITIVITY` is now a default field in `VOLUME_OUTPUT`, if the computation mode is `DISCRETE_ADJOINT`. ## Related Work; Issue #909. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/964
https://github.com/su2code/SU2/pull/964:1216,Testability,test,test,1216,"## Proposed Changes; * Allows direct flow computations in shape_optimization.py to run from given restart solution for unsteady optimization. ; All you have to do is to copy your restart files e.g. `restart_flow_00008.dat` and `restart_flow_00009.dat` in the directory of your `.cfg` and `.su2` (mesh) file and set the corresponding options:; `RESTART_SOL=YES`; `RESTART_ITER=10` (in this example). ; The `shape_optimization.py` script will use this direct restart file for each design. This means, the direct computation will be started from iteration 10 and will run up to the final iteration. The adjoint will run from the final iteration, but stop at the iteration of the restart file. * `direct_differentiation.py` now also accepts restart files in the same manner. * `SENSITIVITY` is now a default field in `VOLUME_OUTPUT`, if the computation mode is `DISCRETE_ADJOINT`. ## Related Work; Issue #909. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/964
https://github.com/su2code/SU2/pull/965:723,Deployability,update,updated,723,"## Proposed Changes; This is a very short PR with two quick fixes. The first is a fix for accurate multizone adjoints when multigrid is enabled. Second fix is to re-enable time-averaged history output for incompressible flows (direct differentiation for unsteady, incompressible flow also works again as a result). ## Related Work; N/A. ## PR Checklist. - [ x] I am submitting my contribution to the develop branch.; - [ x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/965
https://github.com/su2code/SU2/pull/965:650,Testability,test,test,650,"## Proposed Changes; This is a very short PR with two quick fixes. The first is a fix for accurate multizone adjoints when multigrid is enabled. Second fix is to re-enable time-averaged history output for incompressible flows (direct differentiation for unsteady, incompressible flow also works again as a result). ## Related Work; N/A. ## PR Checklist. - [ x] I am submitting my contribution to the develop branch.; - [ x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/965
https://github.com/su2code/SU2/pull/966:791,Deployability,update,updated,791,"## Proposed Changes; Along the lines of #753 and #959 . If this causes someone lots of conflicts when merging, or you have a lot of new code using the old CPoint (that will not compile anymore) it may be helpful to run this python script ([refactor_cpoint.txt](https://github.com/su2code/SU2/files/4608693/refactor_cpoint.txt)) before or after respectively, it was used for 80% of the refactoring done here. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/966
https://github.com/su2code/SU2/pull/966:385,Modifiability,refactor,refactoring,385,"## Proposed Changes; Along the lines of #753 and #959 . If this causes someone lots of conflicts when merging, or you have a lot of new code using the old CPoint (that will not compile anymore) it may be helpful to run this python script ([refactor_cpoint.txt](https://github.com/su2code/SU2/files/4608693/refactor_cpoint.txt)) before or after respectively, it was used for 80% of the refactoring done here. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/966
https://github.com/su2code/SU2/pull/966:718,Testability,test,test,718,"## Proposed Changes; Along the lines of #753 and #959 . If this causes someone lots of conflicts when merging, or you have a lot of new code using the old CPoint (that will not compile anymore) it may be helpful to run this python script ([refactor_cpoint.txt](https://github.com/su2code/SU2/files/4608693/refactor_cpoint.txt)) before or after respectively, it was used for 80% of the refactoring done here. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/966
https://github.com/su2code/SU2/pull/967:865,Deployability,update,updated,865,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/967
https://github.com/su2code/SU2/pull/967:792,Testability,test,test,792,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/967
https://github.com/su2code/SU2/pull/967:414,Usability,guid,guide,414,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/967
https://github.com/su2code/SU2/issues/968:45,Availability,error,error,45,"Hi, I'm trying to run SU2 in parallel but an error with the mpi always keeps showing. [hcogollo@localhost QuickStart]$ SU2_CFD inv_NACA0012.cfg ; SU2_CFD: error while loading shared libraries: libmpi.so.40: cannot open shared object file: No such file or directory. Does anyone know how to fix it? thanks a lot.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/968
https://github.com/su2code/SU2/issues/968:155,Availability,error,error,155,"Hi, I'm trying to run SU2 in parallel but an error with the mpi always keeps showing. [hcogollo@localhost QuickStart]$ SU2_CFD inv_NACA0012.cfg ; SU2_CFD: error while loading shared libraries: libmpi.so.40: cannot open shared object file: No such file or directory. Does anyone know how to fix it? thanks a lot.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/968
https://github.com/su2code/SU2/issues/968:167,Performance,load,loading,167,"Hi, I'm trying to run SU2 in parallel but an error with the mpi always keeps showing. [hcogollo@localhost QuickStart]$ SU2_CFD inv_NACA0012.cfg ; SU2_CFD: error while loading shared libraries: libmpi.so.40: cannot open shared object file: No such file or directory. Does anyone know how to fix it? thanks a lot.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/968
https://github.com/su2code/SU2/pull/969:541,Usability,guid,guide,541,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Also removes checks for nullptr before delete. These checks are not necessary, since deleting nullptr is perfectly valid. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/969
https://github.com/su2code/SU2/issues/970:105,Performance,optimiz,optimization,105,The inlet profile file does not get copied/linked to the directories DIRECT and ADJOINT_* during a shape optimization. Which python scripts need to be changed to resolve this?,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/970
https://github.com/su2code/SU2/issues/971:35,Availability,fault,fault,35,"I am having an issue wherein a seg fault is encountered while writing a restart file. I am running on CentOS 8 with GCC 8.3.1 and ompi 4.0.2. When it is run on CentOS 7 with GCC 7.3.1 and ompi 4.0.2, it runs correctly. I am running 7.0.4 of SU2 on both the functional and non-functional systems. The same issue was present with 7.0.3. Sections of the log:. Initialize Jacobian structure (Navier-Stokes). MG level: 0.; Initialize Jacobian structure (SA model).; [...]; ------------------- Iteration Preprocessing ( Zone 0 ) ------------------; Euler/Navier-Stokes/RANS fluid iteration. ------------------------------ Begin Solver -----------------------------. Simulation Run using the Single-zone Driver; +----------------------------------------------------------------+; | Inner_Iter| rms[Rho]| rms[nu]| CL| CD|; +----------------------------------------------------------------+; | 0| -5.507608| -6.134199| 0.484414| 0.030848|; | 1| -4.574136| -6.098123| 0.484453| 0.030598|; [...]; | 10| -5.466734| -4.908028| 0.484509| 0.029445|; +-----------------------------------------------------------------------+; | File Writing Summary | Filename |; +-----------------------------------------------------------------------+; |SU2 restart |restart_flow.dat |; Traceback (most recent call last):; File ""/usr/local/bin/parallel_computation.py"", line 110, in <module>; main(); File ""/usr/local/bin/parallel_computation.py"", line 57, in main; options.compute ); File ""/usr/local/bin/parallel_computation.py"", line 88, in parallel_computation; info = SU2.run.CFD(config); File ""/usr/local/bin/SU2/run/interface.py"", line 112, in CFD; run_command( the_Command ); File ""/usr/local/bin/SU2/run/interface.py"", line 292, in run_command; raise exception(message); RuntimeError: Path = /mnt/cfddata/WLiao/CRJ700_su2/CRJ700_inch_roe_TEST/,; Command = mpirun -np 2 /usr/local/bin/SU2_CFD config_CFD.cfg; SU2 process returned error '139'; [gen2node1:232298:0:232298] Caught signal 11 (Segmentation fault: address not map",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/971
https://github.com/su2code/SU2/issues/971:1907,Availability,error,error,1907,"-----------------------------------------------------------------+; | File Writing Summary | Filename |; +-----------------------------------------------------------------------+; |SU2 restart |restart_flow.dat |; Traceback (most recent call last):; File ""/usr/local/bin/parallel_computation.py"", line 110, in <module>; main(); File ""/usr/local/bin/parallel_computation.py"", line 57, in main; options.compute ); File ""/usr/local/bin/parallel_computation.py"", line 88, in parallel_computation; info = SU2.run.CFD(config); File ""/usr/local/bin/SU2/run/interface.py"", line 112, in CFD; run_command( the_Command ); File ""/usr/local/bin/SU2/run/interface.py"", line 292, in run_command; raise exception(message); RuntimeError: Path = /mnt/cfddata/WLiao/CRJ700_su2/CRJ700_inch_roe_TEST/,; Command = mpirun -np 2 /usr/local/bin/SU2_CFD config_CFD.cfg; SU2 process returned error '139'; [gen2node1:232298:0:232298] Caught signal 11 (Segmentation fault: address not mapped to object at address 0x30); [gen2node1:232297:0:232297] Caught signal 11 (Segmentation fault: address not mapped to object at address 0x30); #==== backtrace (tid: 232297) ====; 0 0x0000000000012dc0 .annobin_sigaction.c() sigaction.c:0; 1 0x00000000000458b1 opal_obj_run_destructors() /opt/hpcx/sources/openmpi-4.0.2/ompi/../opal/class/opal_object.h:460; 2 0x00000000000458b1 ompi_file_close() /opt/hpcx/sources/openmpi-4.0.2/ompi/file/file.c:153; 3 0x0000000000069056 PMPI_File_close() /opt/hpcx/sources/openmpi-4.0.2/ompi/mpi/c/profile/pfile_close.c:60; 4 0x00000000005af5f8 CFileWriter::OpenMPIFile() ???:0; 5 0x00000000005c38d3 CSU2BinaryFileWriter::Write_Data() ???:0; 6 0x0000000000523dd7 COutput::WriteToFile() ???:0; 7 0x0000000000525173 COutput::SetResult_Files() ???:0; 8 0x00000000004bf924 CFluidIteration::Solve() ???:0; 9 0x00000000004a64c2 CSinglezoneDriver::StartSolver() ???:0; 10 0x0000000000451b2a main() ???:0; 11 0x0000000000023873 __libc_start_main() ???:0; 12 0x000000000046852e _start() ???:0; #=====================",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/971
https://github.com/su2code/SU2/issues/971:1979,Availability,fault,fault,1979,"-----------------------------------------------------------------+; | File Writing Summary | Filename |; +-----------------------------------------------------------------------+; |SU2 restart |restart_flow.dat |; Traceback (most recent call last):; File ""/usr/local/bin/parallel_computation.py"", line 110, in <module>; main(); File ""/usr/local/bin/parallel_computation.py"", line 57, in main; options.compute ); File ""/usr/local/bin/parallel_computation.py"", line 88, in parallel_computation; info = SU2.run.CFD(config); File ""/usr/local/bin/SU2/run/interface.py"", line 112, in CFD; run_command( the_Command ); File ""/usr/local/bin/SU2/run/interface.py"", line 292, in run_command; raise exception(message); RuntimeError: Path = /mnt/cfddata/WLiao/CRJ700_su2/CRJ700_inch_roe_TEST/,; Command = mpirun -np 2 /usr/local/bin/SU2_CFD config_CFD.cfg; SU2 process returned error '139'; [gen2node1:232298:0:232298] Caught signal 11 (Segmentation fault: address not mapped to object at address 0x30); [gen2node1:232297:0:232297] Caught signal 11 (Segmentation fault: address not mapped to object at address 0x30); #==== backtrace (tid: 232297) ====; 0 0x0000000000012dc0 .annobin_sigaction.c() sigaction.c:0; 1 0x00000000000458b1 opal_obj_run_destructors() /opt/hpcx/sources/openmpi-4.0.2/ompi/../opal/class/opal_object.h:460; 2 0x00000000000458b1 ompi_file_close() /opt/hpcx/sources/openmpi-4.0.2/ompi/file/file.c:153; 3 0x0000000000069056 PMPI_File_close() /opt/hpcx/sources/openmpi-4.0.2/ompi/mpi/c/profile/pfile_close.c:60; 4 0x00000000005af5f8 CFileWriter::OpenMPIFile() ???:0; 5 0x00000000005c38d3 CSU2BinaryFileWriter::Write_Data() ???:0; 6 0x0000000000523dd7 COutput::WriteToFile() ???:0; 7 0x0000000000525173 COutput::SetResult_Files() ???:0; 8 0x00000000004bf924 CFluidIteration::Solve() ???:0; 9 0x00000000004a64c2 CSinglezoneDriver::StartSolver() ???:0; 10 0x0000000000451b2a main() ???:0; 11 0x0000000000023873 __libc_start_main() ???:0; 12 0x000000000046852e _start() ???:0; #=====================",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/971
https://github.com/su2code/SU2/issues/971:2092,Availability,fault,fault,2092,"-----------------------------------------------------------------+; | File Writing Summary | Filename |; +-----------------------------------------------------------------------+; |SU2 restart |restart_flow.dat |; Traceback (most recent call last):; File ""/usr/local/bin/parallel_computation.py"", line 110, in <module>; main(); File ""/usr/local/bin/parallel_computation.py"", line 57, in main; options.compute ); File ""/usr/local/bin/parallel_computation.py"", line 88, in parallel_computation; info = SU2.run.CFD(config); File ""/usr/local/bin/SU2/run/interface.py"", line 112, in CFD; run_command( the_Command ); File ""/usr/local/bin/SU2/run/interface.py"", line 292, in run_command; raise exception(message); RuntimeError: Path = /mnt/cfddata/WLiao/CRJ700_su2/CRJ700_inch_roe_TEST/,; Command = mpirun -np 2 /usr/local/bin/SU2_CFD config_CFD.cfg; SU2 process returned error '139'; [gen2node1:232298:0:232298] Caught signal 11 (Segmentation fault: address not mapped to object at address 0x30); [gen2node1:232297:0:232297] Caught signal 11 (Segmentation fault: address not mapped to object at address 0x30); #==== backtrace (tid: 232297) ====; 0 0x0000000000012dc0 .annobin_sigaction.c() sigaction.c:0; 1 0x00000000000458b1 opal_obj_run_destructors() /opt/hpcx/sources/openmpi-4.0.2/ompi/../opal/class/opal_object.h:460; 2 0x00000000000458b1 ompi_file_close() /opt/hpcx/sources/openmpi-4.0.2/ompi/file/file.c:153; 3 0x0000000000069056 PMPI_File_close() /opt/hpcx/sources/openmpi-4.0.2/ompi/mpi/c/profile/pfile_close.c:60; 4 0x00000000005af5f8 CFileWriter::OpenMPIFile() ???:0; 5 0x00000000005c38d3 CSU2BinaryFileWriter::Write_Data() ???:0; 6 0x0000000000523dd7 COutput::WriteToFile() ???:0; 7 0x0000000000525173 COutput::SetResult_Files() ???:0; 8 0x00000000004bf924 CFluidIteration::Solve() ???:0; 9 0x00000000004a64c2 CSinglezoneDriver::StartSolver() ???:0; 10 0x0000000000451b2a main() ???:0; 11 0x0000000000023873 __libc_start_main() ???:0; 12 0x000000000046852e _start() ???:0; #=====================",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/971
https://github.com/su2code/SU2/issues/971:3149,Availability,fault,fault,3149,2node1:232298:0:232298] Caught signal 11 (Segmentation fault: address not mapped to object at address 0x30); [gen2node1:232297:0:232297] Caught signal 11 (Segmentation fault: address not mapped to object at address 0x30); #==== backtrace (tid: 232297) ====; 0 0x0000000000012dc0 .annobin_sigaction.c() sigaction.c:0; 1 0x00000000000458b1 opal_obj_run_destructors() /opt/hpcx/sources/openmpi-4.0.2/ompi/../opal/class/opal_object.h:460; 2 0x00000000000458b1 ompi_file_close() /opt/hpcx/sources/openmpi-4.0.2/ompi/file/file.c:153; 3 0x0000000000069056 PMPI_File_close() /opt/hpcx/sources/openmpi-4.0.2/ompi/mpi/c/profile/pfile_close.c:60; 4 0x00000000005af5f8 CFileWriter::OpenMPIFile() ???:0; 5 0x00000000005c38d3 CSU2BinaryFileWriter::Write_Data() ???:0; 6 0x0000000000523dd7 COutput::WriteToFile() ???:0; 7 0x0000000000525173 COutput::SetResult_Files() ???:0; 8 0x00000000004bf924 CFluidIteration::Solve() ???:0; 9 0x00000000004a64c2 CSinglezoneDriver::StartSolver() ???:0; 10 0x0000000000451b2a main() ???:0; 11 0x0000000000023873 __libc_start_main() ???:0; 12 0x000000000046852e _start() ???:0; #=================================; [gen2node1:232297] *** Process received signal ***; [gen2node1:232297] Signal: Segmentation fault (11); [gen2node1:232297] Signal code: (-6); [gen2node1:232297] Failing at address: 0x3e900038b69; [gen2node1:232297] [ 0] /lib64/libpthread.so.0(+0x12dc0)[0x7f5a45076dc0]; [gen2node1:232297] [ 1] /opt/hpcx/ompi/lib/libmpi.so.40(ompi_file_close+0x11)[0x7f5a46fcb8b1]; [gen2node1:232297] [ 2] /opt/hpcx/ompi/lib/libmpi.so.40(PMPI_File_close+0x16)[0x7f5a46fef056]; [gen2node1:232297] [ 3] /usr/local/bin/SU2_CFD[0x5af5f8]; [gen2node1:232297] [ 4] /usr/local/bin/SU2_CFD[0x5c38d3]; [gen2node1:232297] [ 5] /usr/local/bin/SU2_CFD[0x523dd7]; [gen2node1:232297] [ 6] /usr/local/bin/SU2_CFD[0x525173]; [gen2node1:232297] [ 7] /usr/local/bin/SU2_CFD[0x4bf924]; [gen2node1:232297] [ 8] /usr/local/bin/SU2_CFD[0x4a64c2]; [gen2node1:232297] [ 9] /usr/local/bin/SU2_CFD[0x451b2a]; [g,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/971
https://github.com/su2code/SU2/issues/971:4093,Availability,error,error,4093, mapped to object at address 0x30); #==== backtrace (tid: 232297) ====; 0 0x0000000000012dc0 .annobin_sigaction.c() sigaction.c:0; 1 0x00000000000458b1 opal_obj_run_destructors() /opt/hpcx/sources/openmpi-4.0.2/ompi/../opal/class/opal_object.h:460; 2 0x00000000000458b1 ompi_file_close() /opt/hpcx/sources/openmpi-4.0.2/ompi/file/file.c:153; 3 0x0000000000069056 PMPI_File_close() /opt/hpcx/sources/openmpi-4.0.2/ompi/mpi/c/profile/pfile_close.c:60; 4 0x00000000005af5f8 CFileWriter::OpenMPIFile() ???:0; 5 0x00000000005c38d3 CSU2BinaryFileWriter::Write_Data() ???:0; 6 0x0000000000523dd7 COutput::WriteToFile() ???:0; 7 0x0000000000525173 COutput::SetResult_Files() ???:0; 8 0x00000000004bf924 CFluidIteration::Solve() ???:0; 9 0x00000000004a64c2 CSinglezoneDriver::StartSolver() ???:0; 10 0x0000000000451b2a main() ???:0; 11 0x0000000000023873 __libc_start_main() ???:0; 12 0x000000000046852e _start() ???:0; #=================================; [gen2node1:232297] *** Process received signal ***; [gen2node1:232297] Signal: Segmentation fault (11); [gen2node1:232297] Signal code: (-6); [gen2node1:232297] Failing at address: 0x3e900038b69; [gen2node1:232297] [ 0] /lib64/libpthread.so.0(+0x12dc0)[0x7f5a45076dc0]; [gen2node1:232297] [ 1] /opt/hpcx/ompi/lib/libmpi.so.40(ompi_file_close+0x11)[0x7f5a46fcb8b1]; [gen2node1:232297] [ 2] /opt/hpcx/ompi/lib/libmpi.so.40(PMPI_File_close+0x16)[0x7f5a46fef056]; [gen2node1:232297] [ 3] /usr/local/bin/SU2_CFD[0x5af5f8]; [gen2node1:232297] [ 4] /usr/local/bin/SU2_CFD[0x5c38d3]; [gen2node1:232297] [ 5] /usr/local/bin/SU2_CFD[0x523dd7]; [gen2node1:232297] [ 6] /usr/local/bin/SU2_CFD[0x525173]; [gen2node1:232297] [ 7] /usr/local/bin/SU2_CFD[0x4bf924]; [gen2node1:232297] [ 8] /usr/local/bin/SU2_CFD[0x4a64c2]; [gen2node1:232297] [ 9] /usr/local/bin/SU2_CFD[0x451b2a]; [gen2node1:232297] [10] /lib64/libc.so.6(__libc_start_main+0xf3)[0x7f5a462b7873]; [gen2node1:232297] [11] /usr/local/bin/SU2_CFD[0x46852e]; [gen2node1:232297] *** End of error message ***,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/971
https://github.com/su2code/SU2/issues/971:1592,Integrability,interface,interface,1592,"eration. ------------------------------ Begin Solver -----------------------------. Simulation Run using the Single-zone Driver; +----------------------------------------------------------------+; | Inner_Iter| rms[Rho]| rms[nu]| CL| CD|; +----------------------------------------------------------------+; | 0| -5.507608| -6.134199| 0.484414| 0.030848|; | 1| -4.574136| -6.098123| 0.484453| 0.030598|; [...]; | 10| -5.466734| -4.908028| 0.484509| 0.029445|; +-----------------------------------------------------------------------+; | File Writing Summary | Filename |; +-----------------------------------------------------------------------+; |SU2 restart |restart_flow.dat |; Traceback (most recent call last):; File ""/usr/local/bin/parallel_computation.py"", line 110, in <module>; main(); File ""/usr/local/bin/parallel_computation.py"", line 57, in main; options.compute ); File ""/usr/local/bin/parallel_computation.py"", line 88, in parallel_computation; info = SU2.run.CFD(config); File ""/usr/local/bin/SU2/run/interface.py"", line 112, in CFD; run_command( the_Command ); File ""/usr/local/bin/SU2/run/interface.py"", line 292, in run_command; raise exception(message); RuntimeError: Path = /mnt/cfddata/WLiao/CRJ700_su2/CRJ700_inch_roe_TEST/,; Command = mpirun -np 2 /usr/local/bin/SU2_CFD config_CFD.cfg; SU2 process returned error '139'; [gen2node1:232298:0:232298] Caught signal 11 (Segmentation fault: address not mapped to object at address 0x30); [gen2node1:232297:0:232297] Caught signal 11 (Segmentation fault: address not mapped to object at address 0x30); #==== backtrace (tid: 232297) ====; 0 0x0000000000012dc0 .annobin_sigaction.c() sigaction.c:0; 1 0x00000000000458b1 opal_obj_run_destructors() /opt/hpcx/sources/openmpi-4.0.2/ompi/../opal/class/opal_object.h:460; 2 0x00000000000458b1 ompi_file_close() /opt/hpcx/sources/openmpi-4.0.2/ompi/file/file.c:153; 3 0x0000000000069056 PMPI_File_close() /opt/hpcx/sources/openmpi-4.0.2/ompi/mpi/c/profile/pfile_close.c:60; 4 0x00000000005a",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/971
https://github.com/su2code/SU2/issues/971:1682,Integrability,interface,interface,1682,"-----------. Simulation Run using the Single-zone Driver; +----------------------------------------------------------------+; | Inner_Iter| rms[Rho]| rms[nu]| CL| CD|; +----------------------------------------------------------------+; | 0| -5.507608| -6.134199| 0.484414| 0.030848|; | 1| -4.574136| -6.098123| 0.484453| 0.030598|; [...]; | 10| -5.466734| -4.908028| 0.484509| 0.029445|; +-----------------------------------------------------------------------+; | File Writing Summary | Filename |; +-----------------------------------------------------------------------+; |SU2 restart |restart_flow.dat |; Traceback (most recent call last):; File ""/usr/local/bin/parallel_computation.py"", line 110, in <module>; main(); File ""/usr/local/bin/parallel_computation.py"", line 57, in main; options.compute ); File ""/usr/local/bin/parallel_computation.py"", line 88, in parallel_computation; info = SU2.run.CFD(config); File ""/usr/local/bin/SU2/run/interface.py"", line 112, in CFD; run_command( the_Command ); File ""/usr/local/bin/SU2/run/interface.py"", line 292, in run_command; raise exception(message); RuntimeError: Path = /mnt/cfddata/WLiao/CRJ700_su2/CRJ700_inch_roe_TEST/,; Command = mpirun -np 2 /usr/local/bin/SU2_CFD config_CFD.cfg; SU2 process returned error '139'; [gen2node1:232298:0:232298] Caught signal 11 (Segmentation fault: address not mapped to object at address 0x30); [gen2node1:232297:0:232297] Caught signal 11 (Segmentation fault: address not mapped to object at address 0x30); #==== backtrace (tid: 232297) ====; 0 0x0000000000012dc0 .annobin_sigaction.c() sigaction.c:0; 1 0x00000000000458b1 opal_obj_run_destructors() /opt/hpcx/sources/openmpi-4.0.2/ompi/../opal/class/opal_object.h:460; 2 0x00000000000458b1 ompi_file_close() /opt/hpcx/sources/openmpi-4.0.2/ompi/file/file.c:153; 3 0x0000000000069056 PMPI_File_close() /opt/hpcx/sources/openmpi-4.0.2/ompi/mpi/c/profile/pfile_close.c:60; 4 0x00000000005af5f8 CFileWriter::OpenMPIFile() ???:0; 5 0x00000000005c38d3 CSU2BinaryF",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/971
https://github.com/su2code/SU2/issues/971:1739,Integrability,message,message,1739," rms[Rho]| rms[nu]| CL| CD|; +----------------------------------------------------------------+; | 0| -5.507608| -6.134199| 0.484414| 0.030848|; | 1| -4.574136| -6.098123| 0.484453| 0.030598|; [...]; | 10| -5.466734| -4.908028| 0.484509| 0.029445|; +-----------------------------------------------------------------------+; | File Writing Summary | Filename |; +-----------------------------------------------------------------------+; |SU2 restart |restart_flow.dat |; Traceback (most recent call last):; File ""/usr/local/bin/parallel_computation.py"", line 110, in <module>; main(); File ""/usr/local/bin/parallel_computation.py"", line 57, in main; options.compute ); File ""/usr/local/bin/parallel_computation.py"", line 88, in parallel_computation; info = SU2.run.CFD(config); File ""/usr/local/bin/SU2/run/interface.py"", line 112, in CFD; run_command( the_Command ); File ""/usr/local/bin/SU2/run/interface.py"", line 292, in run_command; raise exception(message); RuntimeError: Path = /mnt/cfddata/WLiao/CRJ700_su2/CRJ700_inch_roe_TEST/,; Command = mpirun -np 2 /usr/local/bin/SU2_CFD config_CFD.cfg; SU2 process returned error '139'; [gen2node1:232298:0:232298] Caught signal 11 (Segmentation fault: address not mapped to object at address 0x30); [gen2node1:232297:0:232297] Caught signal 11 (Segmentation fault: address not mapped to object at address 0x30); #==== backtrace (tid: 232297) ====; 0 0x0000000000012dc0 .annobin_sigaction.c() sigaction.c:0; 1 0x00000000000458b1 opal_obj_run_destructors() /opt/hpcx/sources/openmpi-4.0.2/ompi/../opal/class/opal_object.h:460; 2 0x00000000000458b1 ompi_file_close() /opt/hpcx/sources/openmpi-4.0.2/ompi/file/file.c:153; 3 0x0000000000069056 PMPI_File_close() /opt/hpcx/sources/openmpi-4.0.2/ompi/mpi/c/profile/pfile_close.c:60; 4 0x00000000005af5f8 CFileWriter::OpenMPIFile() ???:0; 5 0x00000000005c38d3 CSU2BinaryFileWriter::Write_Data() ???:0; 6 0x0000000000523dd7 COutput::WriteToFile() ???:0; 7 0x0000000000525173 COutput::SetResult_Files() ???:0; 8 0",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/971
https://github.com/su2code/SU2/issues/971:4099,Integrability,message,message,4099, mapped to object at address 0x30); #==== backtrace (tid: 232297) ====; 0 0x0000000000012dc0 .annobin_sigaction.c() sigaction.c:0; 1 0x00000000000458b1 opal_obj_run_destructors() /opt/hpcx/sources/openmpi-4.0.2/ompi/../opal/class/opal_object.h:460; 2 0x00000000000458b1 ompi_file_close() /opt/hpcx/sources/openmpi-4.0.2/ompi/file/file.c:153; 3 0x0000000000069056 PMPI_File_close() /opt/hpcx/sources/openmpi-4.0.2/ompi/mpi/c/profile/pfile_close.c:60; 4 0x00000000005af5f8 CFileWriter::OpenMPIFile() ???:0; 5 0x00000000005c38d3 CSU2BinaryFileWriter::Write_Data() ???:0; 6 0x0000000000523dd7 COutput::WriteToFile() ???:0; 7 0x0000000000525173 COutput::SetResult_Files() ???:0; 8 0x00000000004bf924 CFluidIteration::Solve() ???:0; 9 0x00000000004a64c2 CSinglezoneDriver::StartSolver() ???:0; 10 0x0000000000451b2a main() ???:0; 11 0x0000000000023873 __libc_start_main() ???:0; 12 0x000000000046852e _start() ???:0; #=================================; [gen2node1:232297] *** Process received signal ***; [gen2node1:232297] Signal: Segmentation fault (11); [gen2node1:232297] Signal code: (-6); [gen2node1:232297] Failing at address: 0x3e900038b69; [gen2node1:232297] [ 0] /lib64/libpthread.so.0(+0x12dc0)[0x7f5a45076dc0]; [gen2node1:232297] [ 1] /opt/hpcx/ompi/lib/libmpi.so.40(ompi_file_close+0x11)[0x7f5a46fcb8b1]; [gen2node1:232297] [ 2] /opt/hpcx/ompi/lib/libmpi.so.40(PMPI_File_close+0x16)[0x7f5a46fef056]; [gen2node1:232297] [ 3] /usr/local/bin/SU2_CFD[0x5af5f8]; [gen2node1:232297] [ 4] /usr/local/bin/SU2_CFD[0x5c38d3]; [gen2node1:232297] [ 5] /usr/local/bin/SU2_CFD[0x523dd7]; [gen2node1:232297] [ 6] /usr/local/bin/SU2_CFD[0x525173]; [gen2node1:232297] [ 7] /usr/local/bin/SU2_CFD[0x4bf924]; [gen2node1:232297] [ 8] /usr/local/bin/SU2_CFD[0x4a64c2]; [gen2node1:232297] [ 9] /usr/local/bin/SU2_CFD[0x451b2a]; [gen2node1:232297] [10] /lib64/libc.so.6(__libc_start_main+0xf3)[0x7f5a462b7873]; [gen2node1:232297] [11] /usr/local/bin/SU2_CFD[0x46852e]; [gen2node1:232297] *** End of error message ***,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/971
https://github.com/su2code/SU2/issues/971:1554,Modifiability,config,config,1554,"eration. ------------------------------ Begin Solver -----------------------------. Simulation Run using the Single-zone Driver; +----------------------------------------------------------------+; | Inner_Iter| rms[Rho]| rms[nu]| CL| CD|; +----------------------------------------------------------------+; | 0| -5.507608| -6.134199| 0.484414| 0.030848|; | 1| -4.574136| -6.098123| 0.484453| 0.030598|; [...]; | 10| -5.466734| -4.908028| 0.484509| 0.029445|; +-----------------------------------------------------------------------+; | File Writing Summary | Filename |; +-----------------------------------------------------------------------+; |SU2 restart |restart_flow.dat |; Traceback (most recent call last):; File ""/usr/local/bin/parallel_computation.py"", line 110, in <module>; main(); File ""/usr/local/bin/parallel_computation.py"", line 57, in main; options.compute ); File ""/usr/local/bin/parallel_computation.py"", line 88, in parallel_computation; info = SU2.run.CFD(config); File ""/usr/local/bin/SU2/run/interface.py"", line 112, in CFD; run_command( the_Command ); File ""/usr/local/bin/SU2/run/interface.py"", line 292, in run_command; raise exception(message); RuntimeError: Path = /mnt/cfddata/WLiao/CRJ700_su2/CRJ700_inch_roe_TEST/,; Command = mpirun -np 2 /usr/local/bin/SU2_CFD config_CFD.cfg; SU2 process returned error '139'; [gen2node1:232298:0:232298] Caught signal 11 (Segmentation fault: address not mapped to object at address 0x30); [gen2node1:232297:0:232297] Caught signal 11 (Segmentation fault: address not mapped to object at address 0x30); #==== backtrace (tid: 232297) ====; 0 0x0000000000012dc0 .annobin_sigaction.c() sigaction.c:0; 1 0x00000000000458b1 opal_obj_run_destructors() /opt/hpcx/sources/openmpi-4.0.2/ompi/../opal/class/opal_object.h:460; 2 0x00000000000458b1 ompi_file_close() /opt/hpcx/sources/openmpi-4.0.2/ompi/file/file.c:153; 3 0x0000000000069056 PMPI_File_close() /opt/hpcx/sources/openmpi-4.0.2/ompi/mpi/c/profile/pfile_close.c:60; 4 0x00000000005a",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/971
https://github.com/su2code/SU2/issues/971:351,Testability,log,log,351,"I am having an issue wherein a seg fault is encountered while writing a restart file. I am running on CentOS 8 with GCC 8.3.1 and ompi 4.0.2. When it is run on CentOS 7 with GCC 7.3.1 and ompi 4.0.2, it runs correctly. I am running 7.0.4 of SU2 on both the functional and non-functional systems. The same issue was present with 7.0.3. Sections of the log:. Initialize Jacobian structure (Navier-Stokes). MG level: 0.; Initialize Jacobian structure (SA model).; [...]; ------------------- Iteration Preprocessing ( Zone 0 ) ------------------; Euler/Navier-Stokes/RANS fluid iteration. ------------------------------ Begin Solver -----------------------------. Simulation Run using the Single-zone Driver; +----------------------------------------------------------------+; | Inner_Iter| rms[Rho]| rms[nu]| CL| CD|; +----------------------------------------------------------------+; | 0| -5.507608| -6.134199| 0.484414| 0.030848|; | 1| -4.574136| -6.098123| 0.484453| 0.030598|; [...]; | 10| -5.466734| -4.908028| 0.484509| 0.029445|; +-----------------------------------------------------------------------+; | File Writing Summary | Filename |; +-----------------------------------------------------------------------+; |SU2 restart |restart_flow.dat |; Traceback (most recent call last):; File ""/usr/local/bin/parallel_computation.py"", line 110, in <module>; main(); File ""/usr/local/bin/parallel_computation.py"", line 57, in main; options.compute ); File ""/usr/local/bin/parallel_computation.py"", line 88, in parallel_computation; info = SU2.run.CFD(config); File ""/usr/local/bin/SU2/run/interface.py"", line 112, in CFD; run_command( the_Command ); File ""/usr/local/bin/SU2/run/interface.py"", line 292, in run_command; raise exception(message); RuntimeError: Path = /mnt/cfddata/WLiao/CRJ700_su2/CRJ700_inch_roe_TEST/,; Command = mpirun -np 2 /usr/local/bin/SU2_CFD config_CFD.cfg; SU2 process returned error '139'; [gen2node1:232298:0:232298] Caught signal 11 (Segmentation fault: address not map",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/971
https://github.com/su2code/SU2/issues/972:650,Deployability,update,updated,650,"The NELEM of the deformed mesh is incorrect. I have to pause the optimization, correct the file and then resume to run the primal solution on the new design. My mesh file is pretty big. If it is needed I can find a way to upload it. - OS: CentOS 7; - SU2 Version: branch: [turbo_output_opt](https://github.com/su2code/SU2/tree/turbo_output_opt). the branch I am working on is branched out from [feature_turbomanchinery_output](https://github.com/su2code/SU2/tree/feature_turbomanchinery_output) by @arubino . I have replaced the turbomachinery objective function TOTAL_PRESSURE_LOSS with PRESSURE_LOSS in the new single-zone output format. It is not updated with the latest develop as I ran into some conflicts when merging. It is, however, updated with SU2 7.0.1. I cannot run this optimization with the latest SU2 version. Doesn't work with turbo markers right now. If this problem has been fixed is it possible for someone to point me to the commit so I can make those changes in this branch. Thanks.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/972
https://github.com/su2code/SU2/issues/972:741,Deployability,update,updated,741,"The NELEM of the deformed mesh is incorrect. I have to pause the optimization, correct the file and then resume to run the primal solution on the new design. My mesh file is pretty big. If it is needed I can find a way to upload it. - OS: CentOS 7; - SU2 Version: branch: [turbo_output_opt](https://github.com/su2code/SU2/tree/turbo_output_opt). the branch I am working on is branched out from [feature_turbomanchinery_output](https://github.com/su2code/SU2/tree/feature_turbomanchinery_output) by @arubino . I have replaced the turbomachinery objective function TOTAL_PRESSURE_LOSS with PRESSURE_LOSS in the new single-zone output format. It is not updated with the latest develop as I ran into some conflicts when merging. It is, however, updated with SU2 7.0.1. I cannot run this optimization with the latest SU2 version. Doesn't work with turbo markers right now. If this problem has been fixed is it possible for someone to point me to the commit so I can make those changes in this branch. Thanks.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/972
https://github.com/su2code/SU2/issues/972:65,Performance,optimiz,optimization,65,"The NELEM of the deformed mesh is incorrect. I have to pause the optimization, correct the file and then resume to run the primal solution on the new design. My mesh file is pretty big. If it is needed I can find a way to upload it. - OS: CentOS 7; - SU2 Version: branch: [turbo_output_opt](https://github.com/su2code/SU2/tree/turbo_output_opt). the branch I am working on is branched out from [feature_turbomanchinery_output](https://github.com/su2code/SU2/tree/feature_turbomanchinery_output) by @arubino . I have replaced the turbomachinery objective function TOTAL_PRESSURE_LOSS with PRESSURE_LOSS in the new single-zone output format. It is not updated with the latest develop as I ran into some conflicts when merging. It is, however, updated with SU2 7.0.1. I cannot run this optimization with the latest SU2 version. Doesn't work with turbo markers right now. If this problem has been fixed is it possible for someone to point me to the commit so I can make those changes in this branch. Thanks.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/972
https://github.com/su2code/SU2/issues/972:783,Performance,optimiz,optimization,783,"The NELEM of the deformed mesh is incorrect. I have to pause the optimization, correct the file and then resume to run the primal solution on the new design. My mesh file is pretty big. If it is needed I can find a way to upload it. - OS: CentOS 7; - SU2 Version: branch: [turbo_output_opt](https://github.com/su2code/SU2/tree/turbo_output_opt). the branch I am working on is branched out from [feature_turbomanchinery_output](https://github.com/su2code/SU2/tree/feature_turbomanchinery_output) by @arubino . I have replaced the turbomachinery objective function TOTAL_PRESSURE_LOSS with PRESSURE_LOSS in the new single-zone output format. It is not updated with the latest develop as I ran into some conflicts when merging. It is, however, updated with SU2 7.0.1. I cannot run this optimization with the latest SU2 version. Doesn't work with turbo markers right now. If this problem has been fixed is it possible for someone to point me to the commit so I can make those changes in this branch. Thanks.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/972
https://github.com/su2code/SU2/issues/972:55,Usability,pause,pause,55,"The NELEM of the deformed mesh is incorrect. I have to pause the optimization, correct the file and then resume to run the primal solution on the new design. My mesh file is pretty big. If it is needed I can find a way to upload it. - OS: CentOS 7; - SU2 Version: branch: [turbo_output_opt](https://github.com/su2code/SU2/tree/turbo_output_opt). the branch I am working on is branched out from [feature_turbomanchinery_output](https://github.com/su2code/SU2/tree/feature_turbomanchinery_output) by @arubino . I have replaced the turbomachinery objective function TOTAL_PRESSURE_LOSS with PRESSURE_LOSS in the new single-zone output format. It is not updated with the latest develop as I ran into some conflicts when merging. It is, however, updated with SU2 7.0.1. I cannot run this optimization with the latest SU2 version. Doesn't work with turbo markers right now. If this problem has been fixed is it possible for someone to point me to the commit so I can make those changes in this branch. Thanks.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/972
https://github.com/su2code/SU2/issues/972:105,Usability,resume,resume,105,"The NELEM of the deformed mesh is incorrect. I have to pause the optimization, correct the file and then resume to run the primal solution on the new design. My mesh file is pretty big. If it is needed I can find a way to upload it. - OS: CentOS 7; - SU2 Version: branch: [turbo_output_opt](https://github.com/su2code/SU2/tree/turbo_output_opt). the branch I am working on is branched out from [feature_turbomanchinery_output](https://github.com/su2code/SU2/tree/feature_turbomanchinery_output) by @arubino . I have replaced the turbomachinery objective function TOTAL_PRESSURE_LOSS with PRESSURE_LOSS in the new single-zone output format. It is not updated with the latest develop as I ran into some conflicts when merging. It is, however, updated with SU2 7.0.1. I cannot run this optimization with the latest SU2 version. Doesn't work with turbo markers right now. If this problem has been fixed is it possible for someone to point me to the commit so I can make those changes in this branch. Thanks.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/972
https://github.com/su2code/SU2/issues/973:526,Integrability,depend,dependent,526,"Hi!. I hope you can answer this question, because it's basically what I need for checking if I can use SU2 for my simulations or not, and I'd rather look for other CFD codes if this is not currently implemented in SU2:. I need to run a case (over time, unsteady, or steady for each timestep) for an incompressible natural convection lid-driven cavity in 3D, where the values of the BCs change for each timestep. . This test has no inlets, but it has a speed BC for the lid at the top, and BCs for the walls as well. The (time-dependent) unit vector and magnitude of the speed for the lid is tabulated, for each timestep, on a external file. The (time-dependent) temperature at each point in each wall is also tabulated, for each point in the walls and for each timestep, on a external file. So the question is: Can SU2 currently import data like this? I only saw this feature for inlets, but not for other types of BCs... is it implemented, or not?. Thanks a lot! As I said at the beginning, it will help me a lot to know if this is possible, so that I look elsewhere if it's not!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/973
https://github.com/su2code/SU2/issues/973:651,Integrability,depend,dependent,651,"Hi!. I hope you can answer this question, because it's basically what I need for checking if I can use SU2 for my simulations or not, and I'd rather look for other CFD codes if this is not currently implemented in SU2:. I need to run a case (over time, unsteady, or steady for each timestep) for an incompressible natural convection lid-driven cavity in 3D, where the values of the BCs change for each timestep. . This test has no inlets, but it has a speed BC for the lid at the top, and BCs for the walls as well. The (time-dependent) unit vector and magnitude of the speed for the lid is tabulated, for each timestep, on a external file. The (time-dependent) temperature at each point in each wall is also tabulated, for each point in the walls and for each timestep, on a external file. So the question is: Can SU2 currently import data like this? I only saw this feature for inlets, but not for other types of BCs... is it implemented, or not?. Thanks a lot! As I said at the beginning, it will help me a lot to know if this is possible, so that I look elsewhere if it's not!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/973
https://github.com/su2code/SU2/issues/973:419,Testability,test,test,419,"Hi!. I hope you can answer this question, because it's basically what I need for checking if I can use SU2 for my simulations or not, and I'd rather look for other CFD codes if this is not currently implemented in SU2:. I need to run a case (over time, unsteady, or steady for each timestep) for an incompressible natural convection lid-driven cavity in 3D, where the values of the BCs change for each timestep. . This test has no inlets, but it has a speed BC for the lid at the top, and BCs for the walls as well. The (time-dependent) unit vector and magnitude of the speed for the lid is tabulated, for each timestep, on a external file. The (time-dependent) temperature at each point in each wall is also tabulated, for each point in the walls and for each timestep, on a external file. So the question is: Can SU2 currently import data like this? I only saw this feature for inlets, but not for other types of BCs... is it implemented, or not?. Thanks a lot! As I said at the beginning, it will help me a lot to know if this is possible, so that I look elsewhere if it's not!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/973
https://github.com/su2code/SU2/pull/975:647,Performance,scalab,scalability,647,"## Proposed Changes; So far BC's were done by a single thread, this PR addresses that which required making all that code thread-safe. There is also some duplication-avoiding cleanup.; A batch of regression tests for hybrid parallel (compilation + execution) was added. Boundary conditions are perhaps the easiest places to introduce non-thread-safe code, due to the common pattern of writing into temporary arrays of CSolver (e.g. Solution_i), thus it becomes important to have some tests in place. ## Related Work; Continuation of #789, so far as compressible flow goes we now have ""full coverage"", the only major areas left out (that matter to scalability) are MPI and parts of the initial preprocessing. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/975
https://github.com/su2code/SU2/pull/975:129,Safety,safe,safe,129,"## Proposed Changes; So far BC's were done by a single thread, this PR addresses that which required making all that code thread-safe. There is also some duplication-avoiding cleanup.; A batch of regression tests for hybrid parallel (compilation + execution) was added. Boundary conditions are perhaps the easiest places to introduce non-thread-safe code, due to the common pattern of writing into temporary arrays of CSolver (e.g. Solution_i), thus it becomes important to have some tests in place. ## Related Work; Continuation of #789, so far as compressible flow goes we now have ""full coverage"", the only major areas left out (that matter to scalability) are MPI and parts of the initial preprocessing. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/975
https://github.com/su2code/SU2/pull/975:166,Safety,avoid,avoiding,166,"## Proposed Changes; So far BC's were done by a single thread, this PR addresses that which required making all that code thread-safe. There is also some duplication-avoiding cleanup.; A batch of regression tests for hybrid parallel (compilation + execution) was added. Boundary conditions are perhaps the easiest places to introduce non-thread-safe code, due to the common pattern of writing into temporary arrays of CSolver (e.g. Solution_i), thus it becomes important to have some tests in place. ## Related Work; Continuation of #789, so far as compressible flow goes we now have ""full coverage"", the only major areas left out (that matter to scalability) are MPI and parts of the initial preprocessing. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/975
https://github.com/su2code/SU2/pull/975:345,Safety,safe,safe,345,"## Proposed Changes; So far BC's were done by a single thread, this PR addresses that which required making all that code thread-safe. There is also some duplication-avoiding cleanup.; A batch of regression tests for hybrid parallel (compilation + execution) was added. Boundary conditions are perhaps the easiest places to introduce non-thread-safe code, due to the common pattern of writing into temporary arrays of CSolver (e.g. Solution_i), thus it becomes important to have some tests in place. ## Related Work; Continuation of #789, so far as compressible flow goes we now have ""full coverage"", the only major areas left out (that matter to scalability) are MPI and parts of the initial preprocessing. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/975
https://github.com/su2code/SU2/pull/975:207,Testability,test,tests,207,"## Proposed Changes; So far BC's were done by a single thread, this PR addresses that which required making all that code thread-safe. There is also some duplication-avoiding cleanup.; A batch of regression tests for hybrid parallel (compilation + execution) was added. Boundary conditions are perhaps the easiest places to introduce non-thread-safe code, due to the common pattern of writing into temporary arrays of CSolver (e.g. Solution_i), thus it becomes important to have some tests in place. ## Related Work; Continuation of #789, so far as compressible flow goes we now have ""full coverage"", the only major areas left out (that matter to scalability) are MPI and parts of the initial preprocessing. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/975
https://github.com/su2code/SU2/pull/975:484,Testability,test,tests,484,"## Proposed Changes; So far BC's were done by a single thread, this PR addresses that which required making all that code thread-safe. There is also some duplication-avoiding cleanup.; A batch of regression tests for hybrid parallel (compilation + execution) was added. Boundary conditions are perhaps the easiest places to introduce non-thread-safe code, due to the common pattern of writing into temporary arrays of CSolver (e.g. Solution_i), thus it becomes important to have some tests in place. ## Related Work; Continuation of #789, so far as compressible flow goes we now have ""full coverage"", the only major areas left out (that matter to scalability) are MPI and parts of the initial preprocessing. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/975
https://github.com/su2code/SU2/issues/976:2403,Deployability,update,updated,2403,"imizations seem to **run independently of what I set as the OBJECTIVE_WEIGHT**. My understanding is that a negative value means minimization of the objective function and vice versa. However, with OBJECTIVE_WEIGHT=-1, the optimization seems to increase my objective function rather than reduce it. In the config_DOT_AD (and other configs), the objective weight was still +1 so I believe it wasn't being parsed correctly. I had to hardcode all instances of OBJECTIVE_WEIGHT in the C++ and python scripts from +1 to -1 to resolve the issue (which it did in the configs), however, the optimization direction is still opposite to what I want. 4. The DV_Value is always 0.001 in the config files. What is this value and is this hardcoded? . 5. In the _of_grad_*_ file the third column is for _""FINDIFF_STEP""_ = DV_Value. Does it mean that the grid deformation wrt to control points is done via finite differences?. **Problem specific details,**. **Case:** Single blade row stator passage with inlet profiles. OBJECTIVE_FUNCTION= PRESSURE_DROP; **OPTIMIZER= BFGS**; output for history_project.dat:; ""PRESSURE_DROP""; 10791.40653; 10943.29967; 10943.29967; 11041.58637; 11041.58637. The PRESSURE_DROP was supposed to be reduced (weight -1) but it's increasing. **With SLSQP I get:**; Sequential Least SQuares Programming (SLSQP) parameters:; Number of design variables: 56 ( 56 ); Objective function scaling factor: [1.0]; Maximum number of iterations: 20; Requested accuracy: 1e-20; .....; NIT FC OBJFUN GNORM; 1 1 1.078075E+00 6.354859E-11; Optimization terminated successfully. (Exit mode 0); Current function value: 1.07807522; Iterations: 1; Function evaluations: 1; Gradient evaluations: 1. And no further designs are generated. What makes SLSQP to 'converge'?. **I am using branch** [turbo_output_opt](https://github.com/su2code/SU2/compare/develop...turbo_output_opt) (updated to latest develop). Thanks in advance. Config file: [case728.txt](https://github.com/su2code/SU2/files/4606913/case728.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/976
https://github.com/su2code/SU2/issues/976:821,Energy Efficiency,reduce,reduce,821,"I want to discuss some important issues I have encountered while running shape optimization. 1. After some design iterations, the **periodic boundaries are not exactly matching**. A bad match is found until after some design the linear solver diverges. Is the shape optimization architecture in SU2 not designed to maintain the periodicity of the boundaries?. 2. If I want to **perturb a single design parameter by a certain amount and deform the mesh**, what is the parameter in the config file that I can change for that?. 3. My optimizations seem to **run independently of what I set as the OBJECTIVE_WEIGHT**. My understanding is that a negative value means minimization of the objective function and vice versa. However, with OBJECTIVE_WEIGHT=-1, the optimization seems to increase my objective function rather than reduce it. In the config_DOT_AD (and other configs), the objective weight was still +1 so I believe it wasn't being parsed correctly. I had to hardcode all instances of OBJECTIVE_WEIGHT in the C++ and python scripts from +1 to -1 to resolve the issue (which it did in the configs), however, the optimization direction is still opposite to what I want. 4. The DV_Value is always 0.001 in the config files. What is this value and is this hardcoded? . 5. In the _of_grad_*_ file the third column is for _""FINDIFF_STEP""_ = DV_Value. Does it mean that the grid deformation wrt to control points is done via finite differences?. **Problem specific details,**. **Case:** Single blade row stator passage with inlet profiles. OBJECTIVE_FUNCTION= PRESSURE_DROP; **OPTIMIZER= BFGS**; output for history_project.dat:; ""PRESSURE_DROP""; 10791.40653; 10943.29967; 10943.29967; 11041.58637; 11041.58637. The PRESSURE_DROP was supposed to be reduced (weight -1) but it's increasing. **With SLSQP I get:**; Sequential Least SQuares Programming (SLSQP) parameters:; Number of design variables: 56 ( 56 ); Objective function scaling factor: [1.0]; Maximum number of iterations: 20; Requested accuracy",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/976
https://github.com/su2code/SU2/issues/976:1746,Energy Efficiency,reduce,reduced,1746,"imizations seem to **run independently of what I set as the OBJECTIVE_WEIGHT**. My understanding is that a negative value means minimization of the objective function and vice versa. However, with OBJECTIVE_WEIGHT=-1, the optimization seems to increase my objective function rather than reduce it. In the config_DOT_AD (and other configs), the objective weight was still +1 so I believe it wasn't being parsed correctly. I had to hardcode all instances of OBJECTIVE_WEIGHT in the C++ and python scripts from +1 to -1 to resolve the issue (which it did in the configs), however, the optimization direction is still opposite to what I want. 4. The DV_Value is always 0.001 in the config files. What is this value and is this hardcoded? . 5. In the _of_grad_*_ file the third column is for _""FINDIFF_STEP""_ = DV_Value. Does it mean that the grid deformation wrt to control points is done via finite differences?. **Problem specific details,**. **Case:** Single blade row stator passage with inlet profiles. OBJECTIVE_FUNCTION= PRESSURE_DROP; **OPTIMIZER= BFGS**; output for history_project.dat:; ""PRESSURE_DROP""; 10791.40653; 10943.29967; 10943.29967; 11041.58637; 11041.58637. The PRESSURE_DROP was supposed to be reduced (weight -1) but it's increasing. **With SLSQP I get:**; Sequential Least SQuares Programming (SLSQP) parameters:; Number of design variables: 56 ( 56 ); Objective function scaling factor: [1.0]; Maximum number of iterations: 20; Requested accuracy: 1e-20; .....; NIT FC OBJFUN GNORM; 1 1 1.078075E+00 6.354859E-11; Optimization terminated successfully. (Exit mode 0); Current function value: 1.07807522; Iterations: 1; Function evaluations: 1; Gradient evaluations: 1. And no further designs are generated. What makes SLSQP to 'converge'?. **I am using branch** [turbo_output_opt](https://github.com/su2code/SU2/compare/develop...turbo_output_opt) (updated to latest develop). Thanks in advance. Config file: [case728.txt](https://github.com/su2code/SU2/files/4606913/case728.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/976
https://github.com/su2code/SU2/issues/976:484,Modifiability,config,config,484,"I want to discuss some important issues I have encountered while running shape optimization. 1. After some design iterations, the **periodic boundaries are not exactly matching**. A bad match is found until after some design the linear solver diverges. Is the shape optimization architecture in SU2 not designed to maintain the periodicity of the boundaries?. 2. If I want to **perturb a single design parameter by a certain amount and deform the mesh**, what is the parameter in the config file that I can change for that?. 3. My optimizations seem to **run independently of what I set as the OBJECTIVE_WEIGHT**. My understanding is that a negative value means minimization of the objective function and vice versa. However, with OBJECTIVE_WEIGHT=-1, the optimization seems to increase my objective function rather than reduce it. In the config_DOT_AD (and other configs), the objective weight was still +1 so I believe it wasn't being parsed correctly. I had to hardcode all instances of OBJECTIVE_WEIGHT in the C++ and python scripts from +1 to -1 to resolve the issue (which it did in the configs), however, the optimization direction is still opposite to what I want. 4. The DV_Value is always 0.001 in the config files. What is this value and is this hardcoded? . 5. In the _of_grad_*_ file the third column is for _""FINDIFF_STEP""_ = DV_Value. Does it mean that the grid deformation wrt to control points is done via finite differences?. **Problem specific details,**. **Case:** Single blade row stator passage with inlet profiles. OBJECTIVE_FUNCTION= PRESSURE_DROP; **OPTIMIZER= BFGS**; output for history_project.dat:; ""PRESSURE_DROP""; 10791.40653; 10943.29967; 10943.29967; 11041.58637; 11041.58637. The PRESSURE_DROP was supposed to be reduced (weight -1) but it's increasing. **With SLSQP I get:**; Sequential Least SQuares Programming (SLSQP) parameters:; Number of design variables: 56 ( 56 ); Objective function scaling factor: [1.0]; Maximum number of iterations: 20; Requested accuracy",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/976
https://github.com/su2code/SU2/issues/976:864,Modifiability,config,configs,864,"I want to discuss some important issues I have encountered while running shape optimization. 1. After some design iterations, the **periodic boundaries are not exactly matching**. A bad match is found until after some design the linear solver diverges. Is the shape optimization architecture in SU2 not designed to maintain the periodicity of the boundaries?. 2. If I want to **perturb a single design parameter by a certain amount and deform the mesh**, what is the parameter in the config file that I can change for that?. 3. My optimizations seem to **run independently of what I set as the OBJECTIVE_WEIGHT**. My understanding is that a negative value means minimization of the objective function and vice versa. However, with OBJECTIVE_WEIGHT=-1, the optimization seems to increase my objective function rather than reduce it. In the config_DOT_AD (and other configs), the objective weight was still +1 so I believe it wasn't being parsed correctly. I had to hardcode all instances of OBJECTIVE_WEIGHT in the C++ and python scripts from +1 to -1 to resolve the issue (which it did in the configs), however, the optimization direction is still opposite to what I want. 4. The DV_Value is always 0.001 in the config files. What is this value and is this hardcoded? . 5. In the _of_grad_*_ file the third column is for _""FINDIFF_STEP""_ = DV_Value. Does it mean that the grid deformation wrt to control points is done via finite differences?. **Problem specific details,**. **Case:** Single blade row stator passage with inlet profiles. OBJECTIVE_FUNCTION= PRESSURE_DROP; **OPTIMIZER= BFGS**; output for history_project.dat:; ""PRESSURE_DROP""; 10791.40653; 10943.29967; 10943.29967; 11041.58637; 11041.58637. The PRESSURE_DROP was supposed to be reduced (weight -1) but it's increasing. **With SLSQP I get:**; Sequential Least SQuares Programming (SLSQP) parameters:; Number of design variables: 56 ( 56 ); Objective function scaling factor: [1.0]; Maximum number of iterations: 20; Requested accuracy",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/976
https://github.com/su2code/SU2/issues/976:1093,Modifiability,config,configs,1093,"e running shape optimization. 1. After some design iterations, the **periodic boundaries are not exactly matching**. A bad match is found until after some design the linear solver diverges. Is the shape optimization architecture in SU2 not designed to maintain the periodicity of the boundaries?. 2. If I want to **perturb a single design parameter by a certain amount and deform the mesh**, what is the parameter in the config file that I can change for that?. 3. My optimizations seem to **run independently of what I set as the OBJECTIVE_WEIGHT**. My understanding is that a negative value means minimization of the objective function and vice versa. However, with OBJECTIVE_WEIGHT=-1, the optimization seems to increase my objective function rather than reduce it. In the config_DOT_AD (and other configs), the objective weight was still +1 so I believe it wasn't being parsed correctly. I had to hardcode all instances of OBJECTIVE_WEIGHT in the C++ and python scripts from +1 to -1 to resolve the issue (which it did in the configs), however, the optimization direction is still opposite to what I want. 4. The DV_Value is always 0.001 in the config files. What is this value and is this hardcoded? . 5. In the _of_grad_*_ file the third column is for _""FINDIFF_STEP""_ = DV_Value. Does it mean that the grid deformation wrt to control points is done via finite differences?. **Problem specific details,**. **Case:** Single blade row stator passage with inlet profiles. OBJECTIVE_FUNCTION= PRESSURE_DROP; **OPTIMIZER= BFGS**; output for history_project.dat:; ""PRESSURE_DROP""; 10791.40653; 10943.29967; 10943.29967; 11041.58637; 11041.58637. The PRESSURE_DROP was supposed to be reduced (weight -1) but it's increasing. **With SLSQP I get:**; Sequential Least SQuares Programming (SLSQP) parameters:; Number of design variables: 56 ( 56 ); Objective function scaling factor: [1.0]; Maximum number of iterations: 20; Requested accuracy: 1e-20; .....; NIT FC OBJFUN GNORM; 1 1 1.078075E+00 6.354859",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/976
https://github.com/su2code/SU2/issues/976:1212,Modifiability,config,config,1212,"some design the linear solver diverges. Is the shape optimization architecture in SU2 not designed to maintain the periodicity of the boundaries?. 2. If I want to **perturb a single design parameter by a certain amount and deform the mesh**, what is the parameter in the config file that I can change for that?. 3. My optimizations seem to **run independently of what I set as the OBJECTIVE_WEIGHT**. My understanding is that a negative value means minimization of the objective function and vice versa. However, with OBJECTIVE_WEIGHT=-1, the optimization seems to increase my objective function rather than reduce it. In the config_DOT_AD (and other configs), the objective weight was still +1 so I believe it wasn't being parsed correctly. I had to hardcode all instances of OBJECTIVE_WEIGHT in the C++ and python scripts from +1 to -1 to resolve the issue (which it did in the configs), however, the optimization direction is still opposite to what I want. 4. The DV_Value is always 0.001 in the config files. What is this value and is this hardcoded? . 5. In the _of_grad_*_ file the third column is for _""FINDIFF_STEP""_ = DV_Value. Does it mean that the grid deformation wrt to control points is done via finite differences?. **Problem specific details,**. **Case:** Single blade row stator passage with inlet profiles. OBJECTIVE_FUNCTION= PRESSURE_DROP; **OPTIMIZER= BFGS**; output for history_project.dat:; ""PRESSURE_DROP""; 10791.40653; 10943.29967; 10943.29967; 11041.58637; 11041.58637. The PRESSURE_DROP was supposed to be reduced (weight -1) but it's increasing. **With SLSQP I get:**; Sequential Least SQuares Programming (SLSQP) parameters:; Number of design variables: 56 ( 56 ); Objective function scaling factor: [1.0]; Maximum number of iterations: 20; Requested accuracy: 1e-20; .....; NIT FC OBJFUN GNORM; 1 1 1.078075E+00 6.354859E-11; Optimization terminated successfully. (Exit mode 0); Current function value: 1.07807522; Iterations: 1; Function evaluations: 1; Gradient evalua",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/976
https://github.com/su2code/SU2/issues/976:1885,Modifiability,variab,variables,1885,"imizations seem to **run independently of what I set as the OBJECTIVE_WEIGHT**. My understanding is that a negative value means minimization of the objective function and vice versa. However, with OBJECTIVE_WEIGHT=-1, the optimization seems to increase my objective function rather than reduce it. In the config_DOT_AD (and other configs), the objective weight was still +1 so I believe it wasn't being parsed correctly. I had to hardcode all instances of OBJECTIVE_WEIGHT in the C++ and python scripts from +1 to -1 to resolve the issue (which it did in the configs), however, the optimization direction is still opposite to what I want. 4. The DV_Value is always 0.001 in the config files. What is this value and is this hardcoded? . 5. In the _of_grad_*_ file the third column is for _""FINDIFF_STEP""_ = DV_Value. Does it mean that the grid deformation wrt to control points is done via finite differences?. **Problem specific details,**. **Case:** Single blade row stator passage with inlet profiles. OBJECTIVE_FUNCTION= PRESSURE_DROP; **OPTIMIZER= BFGS**; output for history_project.dat:; ""PRESSURE_DROP""; 10791.40653; 10943.29967; 10943.29967; 11041.58637; 11041.58637. The PRESSURE_DROP was supposed to be reduced (weight -1) but it's increasing. **With SLSQP I get:**; Sequential Least SQuares Programming (SLSQP) parameters:; Number of design variables: 56 ( 56 ); Objective function scaling factor: [1.0]; Maximum number of iterations: 20; Requested accuracy: 1e-20; .....; NIT FC OBJFUN GNORM; 1 1 1.078075E+00 6.354859E-11; Optimization terminated successfully. (Exit mode 0); Current function value: 1.07807522; Iterations: 1; Function evaluations: 1; Gradient evaluations: 1. And no further designs are generated. What makes SLSQP to 'converge'?. **I am using branch** [turbo_output_opt](https://github.com/su2code/SU2/compare/develop...turbo_output_opt) (updated to latest develop). Thanks in advance. Config file: [case728.txt](https://github.com/su2code/SU2/files/4606913/case728.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/976
https://github.com/su2code/SU2/issues/976:2450,Modifiability,Config,Config,2450,"imizations seem to **run independently of what I set as the OBJECTIVE_WEIGHT**. My understanding is that a negative value means minimization of the objective function and vice versa. However, with OBJECTIVE_WEIGHT=-1, the optimization seems to increase my objective function rather than reduce it. In the config_DOT_AD (and other configs), the objective weight was still +1 so I believe it wasn't being parsed correctly. I had to hardcode all instances of OBJECTIVE_WEIGHT in the C++ and python scripts from +1 to -1 to resolve the issue (which it did in the configs), however, the optimization direction is still opposite to what I want. 4. The DV_Value is always 0.001 in the config files. What is this value and is this hardcoded? . 5. In the _of_grad_*_ file the third column is for _""FINDIFF_STEP""_ = DV_Value. Does it mean that the grid deformation wrt to control points is done via finite differences?. **Problem specific details,**. **Case:** Single blade row stator passage with inlet profiles. OBJECTIVE_FUNCTION= PRESSURE_DROP; **OPTIMIZER= BFGS**; output for history_project.dat:; ""PRESSURE_DROP""; 10791.40653; 10943.29967; 10943.29967; 11041.58637; 11041.58637. The PRESSURE_DROP was supposed to be reduced (weight -1) but it's increasing. **With SLSQP I get:**; Sequential Least SQuares Programming (SLSQP) parameters:; Number of design variables: 56 ( 56 ); Objective function scaling factor: [1.0]; Maximum number of iterations: 20; Requested accuracy: 1e-20; .....; NIT FC OBJFUN GNORM; 1 1 1.078075E+00 6.354859E-11; Optimization terminated successfully. (Exit mode 0); Current function value: 1.07807522; Iterations: 1; Function evaluations: 1; Gradient evaluations: 1. And no further designs are generated. What makes SLSQP to 'converge'?. **I am using branch** [turbo_output_opt](https://github.com/su2code/SU2/compare/develop...turbo_output_opt) (updated to latest develop). Thanks in advance. Config file: [case728.txt](https://github.com/su2code/SU2/files/4606913/case728.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/976
https://github.com/su2code/SU2/issues/976:79,Performance,optimiz,optimization,79,"I want to discuss some important issues I have encountered while running shape optimization. 1. After some design iterations, the **periodic boundaries are not exactly matching**. A bad match is found until after some design the linear solver diverges. Is the shape optimization architecture in SU2 not designed to maintain the periodicity of the boundaries?. 2. If I want to **perturb a single design parameter by a certain amount and deform the mesh**, what is the parameter in the config file that I can change for that?. 3. My optimizations seem to **run independently of what I set as the OBJECTIVE_WEIGHT**. My understanding is that a negative value means minimization of the objective function and vice versa. However, with OBJECTIVE_WEIGHT=-1, the optimization seems to increase my objective function rather than reduce it. In the config_DOT_AD (and other configs), the objective weight was still +1 so I believe it wasn't being parsed correctly. I had to hardcode all instances of OBJECTIVE_WEIGHT in the C++ and python scripts from +1 to -1 to resolve the issue (which it did in the configs), however, the optimization direction is still opposite to what I want. 4. The DV_Value is always 0.001 in the config files. What is this value and is this hardcoded? . 5. In the _of_grad_*_ file the third column is for _""FINDIFF_STEP""_ = DV_Value. Does it mean that the grid deformation wrt to control points is done via finite differences?. **Problem specific details,**. **Case:** Single blade row stator passage with inlet profiles. OBJECTIVE_FUNCTION= PRESSURE_DROP; **OPTIMIZER= BFGS**; output for history_project.dat:; ""PRESSURE_DROP""; 10791.40653; 10943.29967; 10943.29967; 11041.58637; 11041.58637. The PRESSURE_DROP was supposed to be reduced (weight -1) but it's increasing. **With SLSQP I get:**; Sequential Least SQuares Programming (SLSQP) parameters:; Number of design variables: 56 ( 56 ); Objective function scaling factor: [1.0]; Maximum number of iterations: 20; Requested accuracy",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/976
https://github.com/su2code/SU2/issues/976:266,Performance,optimiz,optimization,266,"I want to discuss some important issues I have encountered while running shape optimization. 1. After some design iterations, the **periodic boundaries are not exactly matching**. A bad match is found until after some design the linear solver diverges. Is the shape optimization architecture in SU2 not designed to maintain the periodicity of the boundaries?. 2. If I want to **perturb a single design parameter by a certain amount and deform the mesh**, what is the parameter in the config file that I can change for that?. 3. My optimizations seem to **run independently of what I set as the OBJECTIVE_WEIGHT**. My understanding is that a negative value means minimization of the objective function and vice versa. However, with OBJECTIVE_WEIGHT=-1, the optimization seems to increase my objective function rather than reduce it. In the config_DOT_AD (and other configs), the objective weight was still +1 so I believe it wasn't being parsed correctly. I had to hardcode all instances of OBJECTIVE_WEIGHT in the C++ and python scripts from +1 to -1 to resolve the issue (which it did in the configs), however, the optimization direction is still opposite to what I want. 4. The DV_Value is always 0.001 in the config files. What is this value and is this hardcoded? . 5. In the _of_grad_*_ file the third column is for _""FINDIFF_STEP""_ = DV_Value. Does it mean that the grid deformation wrt to control points is done via finite differences?. **Problem specific details,**. **Case:** Single blade row stator passage with inlet profiles. OBJECTIVE_FUNCTION= PRESSURE_DROP; **OPTIMIZER= BFGS**; output for history_project.dat:; ""PRESSURE_DROP""; 10791.40653; 10943.29967; 10943.29967; 11041.58637; 11041.58637. The PRESSURE_DROP was supposed to be reduced (weight -1) but it's increasing. **With SLSQP I get:**; Sequential Least SQuares Programming (SLSQP) parameters:; Number of design variables: 56 ( 56 ); Objective function scaling factor: [1.0]; Maximum number of iterations: 20; Requested accuracy",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/976
https://github.com/su2code/SU2/issues/976:531,Performance,optimiz,optimizations,531,"I want to discuss some important issues I have encountered while running shape optimization. 1. After some design iterations, the **periodic boundaries are not exactly matching**. A bad match is found until after some design the linear solver diverges. Is the shape optimization architecture in SU2 not designed to maintain the periodicity of the boundaries?. 2. If I want to **perturb a single design parameter by a certain amount and deform the mesh**, what is the parameter in the config file that I can change for that?. 3. My optimizations seem to **run independently of what I set as the OBJECTIVE_WEIGHT**. My understanding is that a negative value means minimization of the objective function and vice versa. However, with OBJECTIVE_WEIGHT=-1, the optimization seems to increase my objective function rather than reduce it. In the config_DOT_AD (and other configs), the objective weight was still +1 so I believe it wasn't being parsed correctly. I had to hardcode all instances of OBJECTIVE_WEIGHT in the C++ and python scripts from +1 to -1 to resolve the issue (which it did in the configs), however, the optimization direction is still opposite to what I want. 4. The DV_Value is always 0.001 in the config files. What is this value and is this hardcoded? . 5. In the _of_grad_*_ file the third column is for _""FINDIFF_STEP""_ = DV_Value. Does it mean that the grid deformation wrt to control points is done via finite differences?. **Problem specific details,**. **Case:** Single blade row stator passage with inlet profiles. OBJECTIVE_FUNCTION= PRESSURE_DROP; **OPTIMIZER= BFGS**; output for history_project.dat:; ""PRESSURE_DROP""; 10791.40653; 10943.29967; 10943.29967; 11041.58637; 11041.58637. The PRESSURE_DROP was supposed to be reduced (weight -1) but it's increasing. **With SLSQP I get:**; Sequential Least SQuares Programming (SLSQP) parameters:; Number of design variables: 56 ( 56 ); Objective function scaling factor: [1.0]; Maximum number of iterations: 20; Requested accuracy",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/976
https://github.com/su2code/SU2/issues/976:756,Performance,optimiz,optimization,756,"I want to discuss some important issues I have encountered while running shape optimization. 1. After some design iterations, the **periodic boundaries are not exactly matching**. A bad match is found until after some design the linear solver diverges. Is the shape optimization architecture in SU2 not designed to maintain the periodicity of the boundaries?. 2. If I want to **perturb a single design parameter by a certain amount and deform the mesh**, what is the parameter in the config file that I can change for that?. 3. My optimizations seem to **run independently of what I set as the OBJECTIVE_WEIGHT**. My understanding is that a negative value means minimization of the objective function and vice versa. However, with OBJECTIVE_WEIGHT=-1, the optimization seems to increase my objective function rather than reduce it. In the config_DOT_AD (and other configs), the objective weight was still +1 so I believe it wasn't being parsed correctly. I had to hardcode all instances of OBJECTIVE_WEIGHT in the C++ and python scripts from +1 to -1 to resolve the issue (which it did in the configs), however, the optimization direction is still opposite to what I want. 4. The DV_Value is always 0.001 in the config files. What is this value and is this hardcoded? . 5. In the _of_grad_*_ file the third column is for _""FINDIFF_STEP""_ = DV_Value. Does it mean that the grid deformation wrt to control points is done via finite differences?. **Problem specific details,**. **Case:** Single blade row stator passage with inlet profiles. OBJECTIVE_FUNCTION= PRESSURE_DROP; **OPTIMIZER= BFGS**; output for history_project.dat:; ""PRESSURE_DROP""; 10791.40653; 10943.29967; 10943.29967; 11041.58637; 11041.58637. The PRESSURE_DROP was supposed to be reduced (weight -1) but it's increasing. **With SLSQP I get:**; Sequential Least SQuares Programming (SLSQP) parameters:; Number of design variables: 56 ( 56 ); Objective function scaling factor: [1.0]; Maximum number of iterations: 20; Requested accuracy",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/976
https://github.com/su2code/SU2/issues/976:1116,Performance,optimiz,optimization,1116,"e running shape optimization. 1. After some design iterations, the **periodic boundaries are not exactly matching**. A bad match is found until after some design the linear solver diverges. Is the shape optimization architecture in SU2 not designed to maintain the periodicity of the boundaries?. 2. If I want to **perturb a single design parameter by a certain amount and deform the mesh**, what is the parameter in the config file that I can change for that?. 3. My optimizations seem to **run independently of what I set as the OBJECTIVE_WEIGHT**. My understanding is that a negative value means minimization of the objective function and vice versa. However, with OBJECTIVE_WEIGHT=-1, the optimization seems to increase my objective function rather than reduce it. In the config_DOT_AD (and other configs), the objective weight was still +1 so I believe it wasn't being parsed correctly. I had to hardcode all instances of OBJECTIVE_WEIGHT in the C++ and python scripts from +1 to -1 to resolve the issue (which it did in the configs), however, the optimization direction is still opposite to what I want. 4. The DV_Value is always 0.001 in the config files. What is this value and is this hardcoded? . 5. In the _of_grad_*_ file the third column is for _""FINDIFF_STEP""_ = DV_Value. Does it mean that the grid deformation wrt to control points is done via finite differences?. **Problem specific details,**. **Case:** Single blade row stator passage with inlet profiles. OBJECTIVE_FUNCTION= PRESSURE_DROP; **OPTIMIZER= BFGS**; output for history_project.dat:; ""PRESSURE_DROP""; 10791.40653; 10943.29967; 10943.29967; 11041.58637; 11041.58637. The PRESSURE_DROP was supposed to be reduced (weight -1) but it's increasing. **With SLSQP I get:**; Sequential Least SQuares Programming (SLSQP) parameters:; Number of design variables: 56 ( 56 ); Objective function scaling factor: [1.0]; Maximum number of iterations: 20; Requested accuracy: 1e-20; .....; NIT FC OBJFUN GNORM; 1 1 1.078075E+00 6.354859",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/976
https://github.com/su2code/SU2/issues/976:1575,Performance,OPTIMIZ,OPTIMIZER,1575,"imizations seem to **run independently of what I set as the OBJECTIVE_WEIGHT**. My understanding is that a negative value means minimization of the objective function and vice versa. However, with OBJECTIVE_WEIGHT=-1, the optimization seems to increase my objective function rather than reduce it. In the config_DOT_AD (and other configs), the objective weight was still +1 so I believe it wasn't being parsed correctly. I had to hardcode all instances of OBJECTIVE_WEIGHT in the C++ and python scripts from +1 to -1 to resolve the issue (which it did in the configs), however, the optimization direction is still opposite to what I want. 4. The DV_Value is always 0.001 in the config files. What is this value and is this hardcoded? . 5. In the _of_grad_*_ file the third column is for _""FINDIFF_STEP""_ = DV_Value. Does it mean that the grid deformation wrt to control points is done via finite differences?. **Problem specific details,**. **Case:** Single blade row stator passage with inlet profiles. OBJECTIVE_FUNCTION= PRESSURE_DROP; **OPTIMIZER= BFGS**; output for history_project.dat:; ""PRESSURE_DROP""; 10791.40653; 10943.29967; 10943.29967; 11041.58637; 11041.58637. The PRESSURE_DROP was supposed to be reduced (weight -1) but it's increasing. **With SLSQP I get:**; Sequential Least SQuares Programming (SLSQP) parameters:; Number of design variables: 56 ( 56 ); Objective function scaling factor: [1.0]; Maximum number of iterations: 20; Requested accuracy: 1e-20; .....; NIT FC OBJFUN GNORM; 1 1 1.078075E+00 6.354859E-11; Optimization terminated successfully. (Exit mode 0); Current function value: 1.07807522; Iterations: 1; Function evaluations: 1; Gradient evaluations: 1. And no further designs are generated. What makes SLSQP to 'converge'?. **I am using branch** [turbo_output_opt](https://github.com/su2code/SU2/compare/develop...turbo_output_opt) (updated to latest develop). Thanks in advance. Config file: [case728.txt](https://github.com/su2code/SU2/files/4606913/case728.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/976
https://github.com/su2code/SU2/issues/976:2069,Performance,Optimiz,Optimization,2069,"imizations seem to **run independently of what I set as the OBJECTIVE_WEIGHT**. My understanding is that a negative value means minimization of the objective function and vice versa. However, with OBJECTIVE_WEIGHT=-1, the optimization seems to increase my objective function rather than reduce it. In the config_DOT_AD (and other configs), the objective weight was still +1 so I believe it wasn't being parsed correctly. I had to hardcode all instances of OBJECTIVE_WEIGHT in the C++ and python scripts from +1 to -1 to resolve the issue (which it did in the configs), however, the optimization direction is still opposite to what I want. 4. The DV_Value is always 0.001 in the config files. What is this value and is this hardcoded? . 5. In the _of_grad_*_ file the third column is for _""FINDIFF_STEP""_ = DV_Value. Does it mean that the grid deformation wrt to control points is done via finite differences?. **Problem specific details,**. **Case:** Single blade row stator passage with inlet profiles. OBJECTIVE_FUNCTION= PRESSURE_DROP; **OPTIMIZER= BFGS**; output for history_project.dat:; ""PRESSURE_DROP""; 10791.40653; 10943.29967; 10943.29967; 11041.58637; 11041.58637. The PRESSURE_DROP was supposed to be reduced (weight -1) but it's increasing. **With SLSQP I get:**; Sequential Least SQuares Programming (SLSQP) parameters:; Number of design variables: 56 ( 56 ); Objective function scaling factor: [1.0]; Maximum number of iterations: 20; Requested accuracy: 1e-20; .....; NIT FC OBJFUN GNORM; 1 1 1.078075E+00 6.354859E-11; Optimization terminated successfully. (Exit mode 0); Current function value: 1.07807522; Iterations: 1; Function evaluations: 1; Gradient evaluations: 1. And no further designs are generated. What makes SLSQP to 'converge'?. **I am using branch** [turbo_output_opt](https://github.com/su2code/SU2/compare/develop...turbo_output_opt) (updated to latest develop). Thanks in advance. Config file: [case728.txt](https://github.com/su2code/SU2/files/4606913/case728.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/976
https://github.com/su2code/SU2/issues/979:7,Deployability,install,installing,7,"* When installing SU2 from fresh or recompiling to update changes, the installation process always requires root permission to finish. The reason is that the binaries are installed in `/usr/local/bin`, which needs root access. The installation went well, it is just that I don't feel like entering root password everytime. . * A way to go around this would be to have the binaries installed in the bin folder in the home folder, so on Linux that would be `/home/user/bin`. Even better, we can have it creates a separate SU2bin folder, where only the binaries from SU2 will be stored. Of course, doing this would change the environmental variables as well. . * What do you all think? Is this too much hassle?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/979
https://github.com/su2code/SU2/issues/979:51,Deployability,update,update,51,"* When installing SU2 from fresh or recompiling to update changes, the installation process always requires root permission to finish. The reason is that the binaries are installed in `/usr/local/bin`, which needs root access. The installation went well, it is just that I don't feel like entering root password everytime. . * A way to go around this would be to have the binaries installed in the bin folder in the home folder, so on Linux that would be `/home/user/bin`. Even better, we can have it creates a separate SU2bin folder, where only the binaries from SU2 will be stored. Of course, doing this would change the environmental variables as well. . * What do you all think? Is this too much hassle?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/979
https://github.com/su2code/SU2/issues/979:71,Deployability,install,installation,71,"* When installing SU2 from fresh or recompiling to update changes, the installation process always requires root permission to finish. The reason is that the binaries are installed in `/usr/local/bin`, which needs root access. The installation went well, it is just that I don't feel like entering root password everytime. . * A way to go around this would be to have the binaries installed in the bin folder in the home folder, so on Linux that would be `/home/user/bin`. Even better, we can have it creates a separate SU2bin folder, where only the binaries from SU2 will be stored. Of course, doing this would change the environmental variables as well. . * What do you all think? Is this too much hassle?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/979
https://github.com/su2code/SU2/issues/979:171,Deployability,install,installed,171,"* When installing SU2 from fresh or recompiling to update changes, the installation process always requires root permission to finish. The reason is that the binaries are installed in `/usr/local/bin`, which needs root access. The installation went well, it is just that I don't feel like entering root password everytime. . * A way to go around this would be to have the binaries installed in the bin folder in the home folder, so on Linux that would be `/home/user/bin`. Even better, we can have it creates a separate SU2bin folder, where only the binaries from SU2 will be stored. Of course, doing this would change the environmental variables as well. . * What do you all think? Is this too much hassle?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/979
https://github.com/su2code/SU2/issues/979:231,Deployability,install,installation,231,"* When installing SU2 from fresh or recompiling to update changes, the installation process always requires root permission to finish. The reason is that the binaries are installed in `/usr/local/bin`, which needs root access. The installation went well, it is just that I don't feel like entering root password everytime. . * A way to go around this would be to have the binaries installed in the bin folder in the home folder, so on Linux that would be `/home/user/bin`. Even better, we can have it creates a separate SU2bin folder, where only the binaries from SU2 will be stored. Of course, doing this would change the environmental variables as well. . * What do you all think? Is this too much hassle?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/979
https://github.com/su2code/SU2/issues/979:381,Deployability,install,installed,381,"* When installing SU2 from fresh or recompiling to update changes, the installation process always requires root permission to finish. The reason is that the binaries are installed in `/usr/local/bin`, which needs root access. The installation went well, it is just that I don't feel like entering root password everytime. . * A way to go around this would be to have the binaries installed in the bin folder in the home folder, so on Linux that would be `/home/user/bin`. Even better, we can have it creates a separate SU2bin folder, where only the binaries from SU2 will be stored. Of course, doing this would change the environmental variables as well. . * What do you all think? Is this too much hassle?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/979
https://github.com/su2code/SU2/issues/979:637,Modifiability,variab,variables,637,"* When installing SU2 from fresh or recompiling to update changes, the installation process always requires root permission to finish. The reason is that the binaries are installed in `/usr/local/bin`, which needs root access. The installation went well, it is just that I don't feel like entering root password everytime. . * A way to go around this would be to have the binaries installed in the bin folder in the home folder, so on Linux that would be `/home/user/bin`. Even better, we can have it creates a separate SU2bin folder, where only the binaries from SU2 will be stored. Of course, doing this would change the environmental variables as well. . * What do you all think? Is this too much hassle?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/979
https://github.com/su2code/SU2/issues/979:219,Security,access,access,219,"* When installing SU2 from fresh or recompiling to update changes, the installation process always requires root permission to finish. The reason is that the binaries are installed in `/usr/local/bin`, which needs root access. The installation went well, it is just that I don't feel like entering root password everytime. . * A way to go around this would be to have the binaries installed in the bin folder in the home folder, so on Linux that would be `/home/user/bin`. Even better, we can have it creates a separate SU2bin folder, where only the binaries from SU2 will be stored. Of course, doing this would change the environmental variables as well. . * What do you all think? Is this too much hassle?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/979
https://github.com/su2code/SU2/issues/979:303,Security,password,password,303,"* When installing SU2 from fresh or recompiling to update changes, the installation process always requires root permission to finish. The reason is that the binaries are installed in `/usr/local/bin`, which needs root access. The installation went well, it is just that I don't feel like entering root password everytime. . * A way to go around this would be to have the binaries installed in the bin folder in the home folder, so on Linux that would be `/home/user/bin`. Even better, we can have it creates a separate SU2bin folder, where only the binaries from SU2 will be stored. Of course, doing this would change the environmental variables as well. . * What do you all think? Is this too much hassle?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/979
https://github.com/su2code/SU2/pull/980:674,Deployability,update,updated,674,"## Proposed Changes; Changes have been made to accomodate very large meshes/data sets.; MPI calls were changed to accomodate values over the limit of INT_MAX, and some standard int variables were changed to unsigned long variables. ## Related Work; Addresses problems raised in issue #949 . ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/980
https://github.com/su2code/SU2/pull/980:181,Modifiability,variab,variables,181,"## Proposed Changes; Changes have been made to accomodate very large meshes/data sets.; MPI calls were changed to accomodate values over the limit of INT_MAX, and some standard int variables were changed to unsigned long variables. ## Related Work; Addresses problems raised in issue #949 . ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/980
https://github.com/su2code/SU2/pull/980:221,Modifiability,variab,variables,221,"## Proposed Changes; Changes have been made to accomodate very large meshes/data sets.; MPI calls were changed to accomodate values over the limit of INT_MAX, and some standard int variables were changed to unsigned long variables. ## Related Work; Addresses problems raised in issue #949 . ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/980
https://github.com/su2code/SU2/pull/980:601,Testability,test,test,601,"## Proposed Changes; Changes have been made to accomodate very large meshes/data sets.; MPI calls were changed to accomodate values over the limit of INT_MAX, and some standard int variables were changed to unsigned long variables. ## Related Work; Addresses problems raised in issue #949 . ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/980
https://github.com/su2code/SU2/pull/981:206,Availability,error,errors,206,"## Proposed Changes; 1) Updated Xcode to include all the new files and not include deleted files. Compiles successfully for me. 2) I encountered one bug while doing this... In adt_structure.cpp, I got many errors that looked like this:. ```; In file included from /Users/jessie/Software/SU2-quickfix/Common/src/adt_structure.cpp:29:; /Users/jessie/Software/SU2-quickfix/Common/src/../include/adt_structure.hpp:161:34: error: implicit instantiation of undefined template 'std::__1::array<std::__1::vector<unsigned long, std::__1::allocator<unsigned long> >, 1>'; array<vector<unsigned long>,1> FrontLeaves;; ```. So I turned to Google / StackOverflow: https://stackoverflow.com/questions/12797051/implicit-instantiation-of-undefined-template-when-forward-declaring-template-c. And ``#include <array>`` worked for me. Didn't think too much of it, but I also don't have a PC or Linux readily available to test on another OS. I assumed it's a clang thing.; ; Tagging known Xcode users if any of you have a moment to review...; @economon @EduardoMolina @jayantmukho . ## Related Work; N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ x] I am submitting my contribution to the develop branch.; - [ x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ n/a] My contribution is commented and consistent with SU2 style.; - [ n/a] I have added a test case that demonstrates my contribution, if necessary.; - [ n/a] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/981
https://github.com/su2code/SU2/pull/981:418,Availability,error,error,418,"## Proposed Changes; 1) Updated Xcode to include all the new files and not include deleted files. Compiles successfully for me. 2) I encountered one bug while doing this... In adt_structure.cpp, I got many errors that looked like this:. ```; In file included from /Users/jessie/Software/SU2-quickfix/Common/src/adt_structure.cpp:29:; /Users/jessie/Software/SU2-quickfix/Common/src/../include/adt_structure.hpp:161:34: error: implicit instantiation of undefined template 'std::__1::array<std::__1::vector<unsigned long, std::__1::allocator<unsigned long> >, 1>'; array<vector<unsigned long>,1> FrontLeaves;; ```. So I turned to Google / StackOverflow: https://stackoverflow.com/questions/12797051/implicit-instantiation-of-undefined-template-when-forward-declaring-template-c. And ``#include <array>`` worked for me. Didn't think too much of it, but I also don't have a PC or Linux readily available to test on another OS. I assumed it's a clang thing.; ; Tagging known Xcode users if any of you have a moment to review...; @economon @EduardoMolina @jayantmukho . ## Related Work; N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ x] I am submitting my contribution to the develop branch.; - [ x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ n/a] My contribution is commented and consistent with SU2 style.; - [ n/a] I have added a test case that demonstrates my contribution, if necessary.; - [ n/a] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/981
https://github.com/su2code/SU2/pull/981:889,Availability,avail,available,889,"## Proposed Changes; 1) Updated Xcode to include all the new files and not include deleted files. Compiles successfully for me. 2) I encountered one bug while doing this... In adt_structure.cpp, I got many errors that looked like this:. ```; In file included from /Users/jessie/Software/SU2-quickfix/Common/src/adt_structure.cpp:29:; /Users/jessie/Software/SU2-quickfix/Common/src/../include/adt_structure.hpp:161:34: error: implicit instantiation of undefined template 'std::__1::array<std::__1::vector<unsigned long, std::__1::allocator<unsigned long> >, 1>'; array<vector<unsigned long>,1> FrontLeaves;; ```. So I turned to Google / StackOverflow: https://stackoverflow.com/questions/12797051/implicit-instantiation-of-undefined-template-when-forward-declaring-template-c. And ``#include <array>`` worked for me. Didn't think too much of it, but I also don't have a PC or Linux readily available to test on another OS. I assumed it's a clang thing.; ; Tagging known Xcode users if any of you have a moment to review...; @economon @EduardoMolina @jayantmukho . ## Related Work; N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ x] I am submitting my contribution to the develop branch.; - [ x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ n/a] My contribution is commented and consistent with SU2 style.; - [ n/a] I have added a test case that demonstrates my contribution, if necessary.; - [ n/a] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/981
https://github.com/su2code/SU2/pull/981:24,Deployability,Update,Updated,24,"## Proposed Changes; 1) Updated Xcode to include all the new files and not include deleted files. Compiles successfully for me. 2) I encountered one bug while doing this... In adt_structure.cpp, I got many errors that looked like this:. ```; In file included from /Users/jessie/Software/SU2-quickfix/Common/src/adt_structure.cpp:29:; /Users/jessie/Software/SU2-quickfix/Common/src/../include/adt_structure.hpp:161:34: error: implicit instantiation of undefined template 'std::__1::array<std::__1::vector<unsigned long, std::__1::allocator<unsigned long> >, 1>'; array<vector<unsigned long>,1> FrontLeaves;; ```. So I turned to Google / StackOverflow: https://stackoverflow.com/questions/12797051/implicit-instantiation-of-undefined-template-when-forward-declaring-template-c. And ``#include <array>`` worked for me. Didn't think too much of it, but I also don't have a PC or Linux readily available to test on another OS. I assumed it's a clang thing.; ; Tagging known Xcode users if any of you have a moment to review...; @economon @EduardoMolina @jayantmukho . ## Related Work; N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ x] I am submitting my contribution to the develop branch.; - [ x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ n/a] My contribution is commented and consistent with SU2 style.; - [ n/a] I have added a test case that demonstrates my contribution, if necessary.; - [ n/a] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/981
https://github.com/su2code/SU2/pull/981:1719,Deployability,update,updated,1719,"## Proposed Changes; 1) Updated Xcode to include all the new files and not include deleted files. Compiles successfully for me. 2) I encountered one bug while doing this... In adt_structure.cpp, I got many errors that looked like this:. ```; In file included from /Users/jessie/Software/SU2-quickfix/Common/src/adt_structure.cpp:29:; /Users/jessie/Software/SU2-quickfix/Common/src/../include/adt_structure.hpp:161:34: error: implicit instantiation of undefined template 'std::__1::array<std::__1::vector<unsigned long, std::__1::allocator<unsigned long> >, 1>'; array<vector<unsigned long>,1> FrontLeaves;; ```. So I turned to Google / StackOverflow: https://stackoverflow.com/questions/12797051/implicit-instantiation-of-undefined-template-when-forward-declaring-template-c. And ``#include <array>`` worked for me. Didn't think too much of it, but I also don't have a PC or Linux readily available to test on another OS. I assumed it's a clang thing.; ; Tagging known Xcode users if any of you have a moment to review...; @economon @EduardoMolina @jayantmukho . ## Related Work; N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ x] I am submitting my contribution to the develop branch.; - [ x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ n/a] My contribution is commented and consistent with SU2 style.; - [ n/a] I have added a test case that demonstrates my contribution, if necessary.; - [ n/a] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/981
https://github.com/su2code/SU2/pull/981:902,Testability,test,test,902,"## Proposed Changes; 1) Updated Xcode to include all the new files and not include deleted files. Compiles successfully for me. 2) I encountered one bug while doing this... In adt_structure.cpp, I got many errors that looked like this:. ```; In file included from /Users/jessie/Software/SU2-quickfix/Common/src/adt_structure.cpp:29:; /Users/jessie/Software/SU2-quickfix/Common/src/../include/adt_structure.hpp:161:34: error: implicit instantiation of undefined template 'std::__1::array<std::__1::vector<unsigned long, std::__1::allocator<unsigned long> >, 1>'; array<vector<unsigned long>,1> FrontLeaves;; ```. So I turned to Google / StackOverflow: https://stackoverflow.com/questions/12797051/implicit-instantiation-of-undefined-template-when-forward-declaring-template-c. And ``#include <array>`` worked for me. Didn't think too much of it, but I also don't have a PC or Linux readily available to test on another OS. I assumed it's a clang thing.; ; Tagging known Xcode users if any of you have a moment to review...; @economon @EduardoMolina @jayantmukho . ## Related Work; N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ x] I am submitting my contribution to the develop branch.; - [ x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ n/a] My contribution is commented and consistent with SU2 style.; - [ n/a] I have added a test case that demonstrates my contribution, if necessary.; - [ n/a] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/981
https://github.com/su2code/SU2/pull/981:1643,Testability,test,test,1643,"## Proposed Changes; 1) Updated Xcode to include all the new files and not include deleted files. Compiles successfully for me. 2) I encountered one bug while doing this... In adt_structure.cpp, I got many errors that looked like this:. ```; In file included from /Users/jessie/Software/SU2-quickfix/Common/src/adt_structure.cpp:29:; /Users/jessie/Software/SU2-quickfix/Common/src/../include/adt_structure.hpp:161:34: error: implicit instantiation of undefined template 'std::__1::array<std::__1::vector<unsigned long, std::__1::allocator<unsigned long> >, 1>'; array<vector<unsigned long>,1> FrontLeaves;; ```. So I turned to Google / StackOverflow: https://stackoverflow.com/questions/12797051/implicit-instantiation-of-undefined-template-when-forward-declaring-template-c. And ``#include <array>`` worked for me. Didn't think too much of it, but I also don't have a PC or Linux readily available to test on another OS. I assumed it's a clang thing.; ; Tagging known Xcode users if any of you have a moment to review...; @economon @EduardoMolina @jayantmukho . ## Related Work; N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ x] I am submitting my contribution to the develop branch.; - [ x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ n/a] My contribution is commented and consistent with SU2 style.; - [ n/a] I have added a test case that demonstrates my contribution, if necessary.; - [ n/a] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/981
https://github.com/su2code/SU2/pull/981:1257,Usability,guid,guide,1257,"## Proposed Changes; 1) Updated Xcode to include all the new files and not include deleted files. Compiles successfully for me. 2) I encountered one bug while doing this... In adt_structure.cpp, I got many errors that looked like this:. ```; In file included from /Users/jessie/Software/SU2-quickfix/Common/src/adt_structure.cpp:29:; /Users/jessie/Software/SU2-quickfix/Common/src/../include/adt_structure.hpp:161:34: error: implicit instantiation of undefined template 'std::__1::array<std::__1::vector<unsigned long, std::__1::allocator<unsigned long> >, 1>'; array<vector<unsigned long>,1> FrontLeaves;; ```. So I turned to Google / StackOverflow: https://stackoverflow.com/questions/12797051/implicit-instantiation-of-undefined-template-when-forward-declaring-template-c. And ``#include <array>`` worked for me. Didn't think too much of it, but I also don't have a PC or Linux readily available to test on another OS. I assumed it's a clang thing.; ; Tagging known Xcode users if any of you have a moment to review...; @economon @EduardoMolina @jayantmukho . ## Related Work; N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ x] I am submitting my contribution to the develop branch.; - [ x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ n/a] My contribution is commented and consistent with SU2 style.; - [ n/a] I have added a test case that demonstrates my contribution, if necessary.; - [ n/a] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/981
https://github.com/su2code/SU2/pull/982:2257,Deployability,update,updated,2257,"k. This leads to a lot of if-conditions and special cases we have to consider and its hard to actually see what their overall task actually is. One example that I also used to demonstrate a possible solution is the Fixed CL computation. We have routines in CIteration and in CEulerSolver and they modify certain behavior of the baseline code. But its complicated to figure out which routines actually belong together, what they do and when they are called. ### Possible solution. To solve that problem I propose a modular structure that puts all routines that are responsible for a certain functional task together in the same class. At certain predefined places in the code they can modify things by overloading certain functions. These functions are called *Hooks*. What arguments these hooks provide can be different depending on where they are called. As an example I did a quick implementation of such a framework and defined a Fixed CL module. . Right now, I defined a global list of modules (with only one module currently). We can also define modules lists per class, e.g. for CDriver, CIteration, CSolver. But that would mean that we have to provide potentially more than one class per module, which kind of defeats the purpose again. I will add some further comments below. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/982
https://github.com/su2code/SU2/pull/982:229,Integrability,rout,routines,229,"## Proposed Changes. This is a quick draft for a module framework. Note that this is a draft and this is just to get some ideas and comments whether something like that would be useful. ### Motivation. Right now we have a lot of routines scattered throughout the code that essentially functionally belong together as they perform the same overall task. This leads to a lot of if-conditions and special cases we have to consider and its hard to actually see what their overall task actually is. One example that I also used to demonstrate a possible solution is the Fixed CL computation. We have routines in CIteration and in CEulerSolver and they modify certain behavior of the baseline code. But its complicated to figure out which routines actually belong together, what they do and when they are called. ### Possible solution. To solve that problem I propose a modular structure that puts all routines that are responsible for a certain functional task together in the same class. At certain predefined places in the code they can modify things by overloading certain functions. These functions are called *Hooks*. What arguments these hooks provide can be different depending on where they are called. As an example I did a quick implementation of such a framework and defined a Fixed CL module. . Right now, I defined a global list of modules (with only one module currently). We can also define modules lists per class, e.g. for CDriver, CIteration, CSolver. But that would mean that we have to provide potentially more than one class per module, which kind of defeats the purpose again. I will add some further comments below. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/982
https://github.com/su2code/SU2/pull/982:595,Integrability,rout,routines,595,"## Proposed Changes. This is a quick draft for a module framework. Note that this is a draft and this is just to get some ideas and comments whether something like that would be useful. ### Motivation. Right now we have a lot of routines scattered throughout the code that essentially functionally belong together as they perform the same overall task. This leads to a lot of if-conditions and special cases we have to consider and its hard to actually see what their overall task actually is. One example that I also used to demonstrate a possible solution is the Fixed CL computation. We have routines in CIteration and in CEulerSolver and they modify certain behavior of the baseline code. But its complicated to figure out which routines actually belong together, what they do and when they are called. ### Possible solution. To solve that problem I propose a modular structure that puts all routines that are responsible for a certain functional task together in the same class. At certain predefined places in the code they can modify things by overloading certain functions. These functions are called *Hooks*. What arguments these hooks provide can be different depending on where they are called. As an example I did a quick implementation of such a framework and defined a Fixed CL module. . Right now, I defined a global list of modules (with only one module currently). We can also define modules lists per class, e.g. for CDriver, CIteration, CSolver. But that would mean that we have to provide potentially more than one class per module, which kind of defeats the purpose again. I will add some further comments below. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/982
https://github.com/su2code/SU2/pull/982:733,Integrability,rout,routines,733,"## Proposed Changes. This is a quick draft for a module framework. Note that this is a draft and this is just to get some ideas and comments whether something like that would be useful. ### Motivation. Right now we have a lot of routines scattered throughout the code that essentially functionally belong together as they perform the same overall task. This leads to a lot of if-conditions and special cases we have to consider and its hard to actually see what their overall task actually is. One example that I also used to demonstrate a possible solution is the Fixed CL computation. We have routines in CIteration and in CEulerSolver and they modify certain behavior of the baseline code. But its complicated to figure out which routines actually belong together, what they do and when they are called. ### Possible solution. To solve that problem I propose a modular structure that puts all routines that are responsible for a certain functional task together in the same class. At certain predefined places in the code they can modify things by overloading certain functions. These functions are called *Hooks*. What arguments these hooks provide can be different depending on where they are called. As an example I did a quick implementation of such a framework and defined a Fixed CL module. . Right now, I defined a global list of modules (with only one module currently). We can also define modules lists per class, e.g. for CDriver, CIteration, CSolver. But that would mean that we have to provide potentially more than one class per module, which kind of defeats the purpose again. I will add some further comments below. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/982
https://github.com/su2code/SU2/pull/982:896,Integrability,rout,routines,896,"## Proposed Changes. This is a quick draft for a module framework. Note that this is a draft and this is just to get some ideas and comments whether something like that would be useful. ### Motivation. Right now we have a lot of routines scattered throughout the code that essentially functionally belong together as they perform the same overall task. This leads to a lot of if-conditions and special cases we have to consider and its hard to actually see what their overall task actually is. One example that I also used to demonstrate a possible solution is the Fixed CL computation. We have routines in CIteration and in CEulerSolver and they modify certain behavior of the baseline code. But its complicated to figure out which routines actually belong together, what they do and when they are called. ### Possible solution. To solve that problem I propose a modular structure that puts all routines that are responsible for a certain functional task together in the same class. At certain predefined places in the code they can modify things by overloading certain functions. These functions are called *Hooks*. What arguments these hooks provide can be different depending on where they are called. As an example I did a quick implementation of such a framework and defined a Fixed CL module. . Right now, I defined a global list of modules (with only one module currently). We can also define modules lists per class, e.g. for CDriver, CIteration, CSolver. But that would mean that we have to provide potentially more than one class per module, which kind of defeats the purpose again. I will add some further comments below. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/982
https://github.com/su2code/SU2/pull/982:1170,Integrability,depend,depending,1170,"ke that would be useful. ### Motivation. Right now we have a lot of routines scattered throughout the code that essentially functionally belong together as they perform the same overall task. This leads to a lot of if-conditions and special cases we have to consider and its hard to actually see what their overall task actually is. One example that I also used to demonstrate a possible solution is the Fixed CL computation. We have routines in CIteration and in CEulerSolver and they modify certain behavior of the baseline code. But its complicated to figure out which routines actually belong together, what they do and when they are called. ### Possible solution. To solve that problem I propose a modular structure that puts all routines that are responsible for a certain functional task together in the same class. At certain predefined places in the code they can modify things by overloading certain functions. These functions are called *Hooks*. What arguments these hooks provide can be different depending on where they are called. As an example I did a quick implementation of such a framework and defined a Fixed CL module. . Right now, I defined a global list of modules (with only one module currently). We can also define modules lists per class, e.g. for CDriver, CIteration, CSolver. But that would mean that we have to provide potentially more than one class per module, which kind of defeats the purpose again. I will add some further comments below. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/982
https://github.com/su2code/SU2/pull/982:322,Performance,perform,perform,322,"## Proposed Changes. This is a quick draft for a module framework. Note that this is a draft and this is just to get some ideas and comments whether something like that would be useful. ### Motivation. Right now we have a lot of routines scattered throughout the code that essentially functionally belong together as they perform the same overall task. This leads to a lot of if-conditions and special cases we have to consider and its hard to actually see what their overall task actually is. One example that I also used to demonstrate a possible solution is the Fixed CL computation. We have routines in CIteration and in CEulerSolver and they modify certain behavior of the baseline code. But its complicated to figure out which routines actually belong together, what they do and when they are called. ### Possible solution. To solve that problem I propose a modular structure that puts all routines that are responsible for a certain functional task together in the same class. At certain predefined places in the code they can modify things by overloading certain functions. These functions are called *Hooks*. What arguments these hooks provide can be different depending on where they are called. As an example I did a quick implementation of such a framework and defined a Fixed CL module. . Right now, I defined a global list of modules (with only one module currently). We can also define modules lists per class, e.g. for CDriver, CIteration, CSolver. But that would mean that we have to provide potentially more than one class per module, which kind of defeats the purpose again. I will add some further comments below. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/982
https://github.com/su2code/SU2/pull/982:2184,Testability,test,test,2184,"k. This leads to a lot of if-conditions and special cases we have to consider and its hard to actually see what their overall task actually is. One example that I also used to demonstrate a possible solution is the Fixed CL computation. We have routines in CIteration and in CEulerSolver and they modify certain behavior of the baseline code. But its complicated to figure out which routines actually belong together, what they do and when they are called. ### Possible solution. To solve that problem I propose a modular structure that puts all routines that are responsible for a certain functional task together in the same class. At certain predefined places in the code they can modify things by overloading certain functions. These functions are called *Hooks*. What arguments these hooks provide can be different depending on where they are called. As an example I did a quick implementation of such a framework and defined a Fixed CL module. . Right now, I defined a global list of modules (with only one module currently). We can also define modules lists per class, e.g. for CDriver, CIteration, CSolver. But that would mean that we have to provide potentially more than one class per module, which kind of defeats the purpose again. I will add some further comments below. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/982
https://github.com/su2code/SU2/pull/982:1806,Usability,guid,guide,1806,"k. This leads to a lot of if-conditions and special cases we have to consider and its hard to actually see what their overall task actually is. One example that I also used to demonstrate a possible solution is the Fixed CL computation. We have routines in CIteration and in CEulerSolver and they modify certain behavior of the baseline code. But its complicated to figure out which routines actually belong together, what they do and when they are called. ### Possible solution. To solve that problem I propose a modular structure that puts all routines that are responsible for a certain functional task together in the same class. At certain predefined places in the code they can modify things by overloading certain functions. These functions are called *Hooks*. What arguments these hooks provide can be different depending on where they are called. As an example I did a quick implementation of such a framework and defined a Fixed CL module. . Right now, I defined a global list of modules (with only one module currently). We can also define modules lists per class, e.g. for CDriver, CIteration, CSolver. But that would mean that we have to provide potentially more than one class per module, which kind of defeats the purpose again. I will add some further comments below. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/982
https://github.com/su2code/SU2/pull/983:23,Availability,error,errors,23,"This patch fix multile errors while python byte-compilling:. - TabError: inconsistent use of tabs and spaces in indentation;; - SyntaxError: invalid syntax (for 'raise' and 'print' functions). ## Proposed Changes; In some Linux distributive, e.g. Gentoo, before installation phase the python byte compile action is required for python scripts being installed. Such scripts are under `SU2/SU2_PY` directory. During **python3** byte compilation of mentioned scripts multiple TabError and SyntaxError take place.; To reproduce this errors go to the `SU2/SU2_PY` source directory and run `python -m compileall .` command. The following error messages appears:; ```; Listing '.'...; Listing './FSI'...; Compiling './FSI/FSIInterface.py'...; *** Sorry: TabError: inconsistent use of tabs and spaces in indentation (FSIInterface.py, line 50); Compiling './FSI/PitchPlungeAirfoilStructuralTester.py'...; *** Sorry: TabError: inconsistent use of tabs and spaces in indentation (PitchPlungeAirfoilStructuralTester.py, line 177); Listing './FSI/io'...; Compiling './FSI/io/FSI_config.py'...; *** Sorry: TabError: inconsistent use of tabs and spaces in indentation (FSI_config.py, line 61); Listing './FSI/util'...; Listing './SU2'...; Listing './SU2/eval'...; Listing './SU2/io'...; Listing './SU2/mesh'...; Listing './SU2/opt'...; Listing './SU2/run'...; Listing './SU2/util'...; Compiling './SU2/util/filter_adjoint.py'...; *** File ""./SU2/util/filter_adjoint.py"", line 182; raise Exception, 'unknown filter type'; ^; SyntaxError: invalid syntax. Compiling './compute_uncertainty.py'...; *** File ""./compute_uncertainty.py"", line 69; print ""\n\n =================== Performing "" + str(comp) + "" Component Perturbation =================== \n\n""; ^; SyntaxError: invalid syntax. Compiling './fsi_computation.py'...; *** Sorry: TabError: inconsistent use of tabs and spaces in indentation (fsi_computation.py, line 77); Listing './pySU2'...; ```; After fixing them and running `python -m compileall .` again the n",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/983
https://github.com/su2code/SU2/pull/983:529,Availability,error,errors,529,"This patch fix multile errors while python byte-compilling:. - TabError: inconsistent use of tabs and spaces in indentation;; - SyntaxError: invalid syntax (for 'raise' and 'print' functions). ## Proposed Changes; In some Linux distributive, e.g. Gentoo, before installation phase the python byte compile action is required for python scripts being installed. Such scripts are under `SU2/SU2_PY` directory. During **python3** byte compilation of mentioned scripts multiple TabError and SyntaxError take place.; To reproduce this errors go to the `SU2/SU2_PY` source directory and run `python -m compileall .` command. The following error messages appears:; ```; Listing '.'...; Listing './FSI'...; Compiling './FSI/FSIInterface.py'...; *** Sorry: TabError: inconsistent use of tabs and spaces in indentation (FSIInterface.py, line 50); Compiling './FSI/PitchPlungeAirfoilStructuralTester.py'...; *** Sorry: TabError: inconsistent use of tabs and spaces in indentation (PitchPlungeAirfoilStructuralTester.py, line 177); Listing './FSI/io'...; Compiling './FSI/io/FSI_config.py'...; *** Sorry: TabError: inconsistent use of tabs and spaces in indentation (FSI_config.py, line 61); Listing './FSI/util'...; Listing './SU2'...; Listing './SU2/eval'...; Listing './SU2/io'...; Listing './SU2/mesh'...; Listing './SU2/opt'...; Listing './SU2/run'...; Listing './SU2/util'...; Compiling './SU2/util/filter_adjoint.py'...; *** File ""./SU2/util/filter_adjoint.py"", line 182; raise Exception, 'unknown filter type'; ^; SyntaxError: invalid syntax. Compiling './compute_uncertainty.py'...; *** File ""./compute_uncertainty.py"", line 69; print ""\n\n =================== Performing "" + str(comp) + "" Component Perturbation =================== \n\n""; ^; SyntaxError: invalid syntax. Compiling './fsi_computation.py'...; *** Sorry: TabError: inconsistent use of tabs and spaces in indentation (fsi_computation.py, line 77); Listing './pySU2'...; ```; After fixing them and running `python -m compileall .` again the n",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/983
https://github.com/su2code/SU2/pull/983:632,Availability,error,error,632,"This patch fix multile errors while python byte-compilling:. - TabError: inconsistent use of tabs and spaces in indentation;; - SyntaxError: invalid syntax (for 'raise' and 'print' functions). ## Proposed Changes; In some Linux distributive, e.g. Gentoo, before installation phase the python byte compile action is required for python scripts being installed. Such scripts are under `SU2/SU2_PY` directory. During **python3** byte compilation of mentioned scripts multiple TabError and SyntaxError take place.; To reproduce this errors go to the `SU2/SU2_PY` source directory and run `python -m compileall .` command. The following error messages appears:; ```; Listing '.'...; Listing './FSI'...; Compiling './FSI/FSIInterface.py'...; *** Sorry: TabError: inconsistent use of tabs and spaces in indentation (FSIInterface.py, line 50); Compiling './FSI/PitchPlungeAirfoilStructuralTester.py'...; *** Sorry: TabError: inconsistent use of tabs and spaces in indentation (PitchPlungeAirfoilStructuralTester.py, line 177); Listing './FSI/io'...; Compiling './FSI/io/FSI_config.py'...; *** Sorry: TabError: inconsistent use of tabs and spaces in indentation (FSI_config.py, line 61); Listing './FSI/util'...; Listing './SU2'...; Listing './SU2/eval'...; Listing './SU2/io'...; Listing './SU2/mesh'...; Listing './SU2/opt'...; Listing './SU2/run'...; Listing './SU2/util'...; Compiling './SU2/util/filter_adjoint.py'...; *** File ""./SU2/util/filter_adjoint.py"", line 182; raise Exception, 'unknown filter type'; ^; SyntaxError: invalid syntax. Compiling './compute_uncertainty.py'...; *** File ""./compute_uncertainty.py"", line 69; print ""\n\n =================== Performing "" + str(comp) + "" Component Perturbation =================== \n\n""; ^; SyntaxError: invalid syntax. Compiling './fsi_computation.py'...; *** Sorry: TabError: inconsistent use of tabs and spaces in indentation (fsi_computation.py, line 77); Listing './pySU2'...; ```; After fixing them and running `python -m compileall .` again the n",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/983
https://github.com/su2code/SU2/pull/983:2020,Availability,error,error,2020,"7); Listing './FSI/io'...; Compiling './FSI/io/FSI_config.py'...; *** Sorry: TabError: inconsistent use of tabs and spaces in indentation (FSI_config.py, line 61); Listing './FSI/util'...; Listing './SU2'...; Listing './SU2/eval'...; Listing './SU2/io'...; Listing './SU2/mesh'...; Listing './SU2/opt'...; Listing './SU2/run'...; Listing './SU2/util'...; Compiling './SU2/util/filter_adjoint.py'...; *** File ""./SU2/util/filter_adjoint.py"", line 182; raise Exception, 'unknown filter type'; ^; SyntaxError: invalid syntax. Compiling './compute_uncertainty.py'...; *** File ""./compute_uncertainty.py"", line 69; print ""\n\n =================== Performing "" + str(comp) + "" Component Perturbation =================== \n\n""; ^; SyntaxError: invalid syntax. Compiling './fsi_computation.py'...; *** Sorry: TabError: inconsistent use of tabs and spaces in indentation (fsi_computation.py, line 77); Listing './pySU2'...; ```; After fixing them and running `python -m compileall .` again the next set of similar error messages appears. This patch fix such `TabError`, `SyntaxError` (for `raise` and `print` functions), replace some indent tabs with spaces (generally with 8 spaces) before comments, remove trailing spaces where needed. Please fix this small issue as resulting patch to fix it for distributive build script is rather huge (~ 100 Kb). Many changes are in `SU2_PY/FSI/FSIInterface.py` and the `Split` mode of github change preview is more suitable to compare and to recheck the correctness of new indentation (or via Meld application). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/983
https://github.com/su2code/SU2/pull/983:5,Deployability,patch,patch,5,"This patch fix multile errors while python byte-compilling:. - TabError: inconsistent use of tabs and spaces in indentation;; - SyntaxError: invalid syntax (for 'raise' and 'print' functions). ## Proposed Changes; In some Linux distributive, e.g. Gentoo, before installation phase the python byte compile action is required for python scripts being installed. Such scripts are under `SU2/SU2_PY` directory. During **python3** byte compilation of mentioned scripts multiple TabError and SyntaxError take place.; To reproduce this errors go to the `SU2/SU2_PY` source directory and run `python -m compileall .` command. The following error messages appears:; ```; Listing '.'...; Listing './FSI'...; Compiling './FSI/FSIInterface.py'...; *** Sorry: TabError: inconsistent use of tabs and spaces in indentation (FSIInterface.py, line 50); Compiling './FSI/PitchPlungeAirfoilStructuralTester.py'...; *** Sorry: TabError: inconsistent use of tabs and spaces in indentation (PitchPlungeAirfoilStructuralTester.py, line 177); Listing './FSI/io'...; Compiling './FSI/io/FSI_config.py'...; *** Sorry: TabError: inconsistent use of tabs and spaces in indentation (FSI_config.py, line 61); Listing './FSI/util'...; Listing './SU2'...; Listing './SU2/eval'...; Listing './SU2/io'...; Listing './SU2/mesh'...; Listing './SU2/opt'...; Listing './SU2/run'...; Listing './SU2/util'...; Compiling './SU2/util/filter_adjoint.py'...; *** File ""./SU2/util/filter_adjoint.py"", line 182; raise Exception, 'unknown filter type'; ^; SyntaxError: invalid syntax. Compiling './compute_uncertainty.py'...; *** File ""./compute_uncertainty.py"", line 69; print ""\n\n =================== Performing "" + str(comp) + "" Component Perturbation =================== \n\n""; ^; SyntaxError: invalid syntax. Compiling './fsi_computation.py'...; *** Sorry: TabError: inconsistent use of tabs and spaces in indentation (fsi_computation.py, line 77); Listing './pySU2'...; ```; After fixing them and running `python -m compileall .` again the n",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/983
https://github.com/su2code/SU2/pull/983:262,Deployability,install,installation,262,"This patch fix multile errors while python byte-compilling:. - TabError: inconsistent use of tabs and spaces in indentation;; - SyntaxError: invalid syntax (for 'raise' and 'print' functions). ## Proposed Changes; In some Linux distributive, e.g. Gentoo, before installation phase the python byte compile action is required for python scripts being installed. Such scripts are under `SU2/SU2_PY` directory. During **python3** byte compilation of mentioned scripts multiple TabError and SyntaxError take place.; To reproduce this errors go to the `SU2/SU2_PY` source directory and run `python -m compileall .` command. The following error messages appears:; ```; Listing '.'...; Listing './FSI'...; Compiling './FSI/FSIInterface.py'...; *** Sorry: TabError: inconsistent use of tabs and spaces in indentation (FSIInterface.py, line 50); Compiling './FSI/PitchPlungeAirfoilStructuralTester.py'...; *** Sorry: TabError: inconsistent use of tabs and spaces in indentation (PitchPlungeAirfoilStructuralTester.py, line 177); Listing './FSI/io'...; Compiling './FSI/io/FSI_config.py'...; *** Sorry: TabError: inconsistent use of tabs and spaces in indentation (FSI_config.py, line 61); Listing './FSI/util'...; Listing './SU2'...; Listing './SU2/eval'...; Listing './SU2/io'...; Listing './SU2/mesh'...; Listing './SU2/opt'...; Listing './SU2/run'...; Listing './SU2/util'...; Compiling './SU2/util/filter_adjoint.py'...; *** File ""./SU2/util/filter_adjoint.py"", line 182; raise Exception, 'unknown filter type'; ^; SyntaxError: invalid syntax. Compiling './compute_uncertainty.py'...; *** File ""./compute_uncertainty.py"", line 69; print ""\n\n =================== Performing "" + str(comp) + "" Component Perturbation =================== \n\n""; ^; SyntaxError: invalid syntax. Compiling './fsi_computation.py'...; *** Sorry: TabError: inconsistent use of tabs and spaces in indentation (fsi_computation.py, line 77); Listing './pySU2'...; ```; After fixing them and running `python -m compileall .` again the n",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/983
https://github.com/su2code/SU2/pull/983:349,Deployability,install,installed,349,"This patch fix multile errors while python byte-compilling:. - TabError: inconsistent use of tabs and spaces in indentation;; - SyntaxError: invalid syntax (for 'raise' and 'print' functions). ## Proposed Changes; In some Linux distributive, e.g. Gentoo, before installation phase the python byte compile action is required for python scripts being installed. Such scripts are under `SU2/SU2_PY` directory. During **python3** byte compilation of mentioned scripts multiple TabError and SyntaxError take place.; To reproduce this errors go to the `SU2/SU2_PY` source directory and run `python -m compileall .` command. The following error messages appears:; ```; Listing '.'...; Listing './FSI'...; Compiling './FSI/FSIInterface.py'...; *** Sorry: TabError: inconsistent use of tabs and spaces in indentation (FSIInterface.py, line 50); Compiling './FSI/PitchPlungeAirfoilStructuralTester.py'...; *** Sorry: TabError: inconsistent use of tabs and spaces in indentation (PitchPlungeAirfoilStructuralTester.py, line 177); Listing './FSI/io'...; Compiling './FSI/io/FSI_config.py'...; *** Sorry: TabError: inconsistent use of tabs and spaces in indentation (FSI_config.py, line 61); Listing './FSI/util'...; Listing './SU2'...; Listing './SU2/eval'...; Listing './SU2/io'...; Listing './SU2/mesh'...; Listing './SU2/opt'...; Listing './SU2/run'...; Listing './SU2/util'...; Compiling './SU2/util/filter_adjoint.py'...; *** File ""./SU2/util/filter_adjoint.py"", line 182; raise Exception, 'unknown filter type'; ^; SyntaxError: invalid syntax. Compiling './compute_uncertainty.py'...; *** File ""./compute_uncertainty.py"", line 69; print ""\n\n =================== Performing "" + str(comp) + "" Component Perturbation =================== \n\n""; ^; SyntaxError: invalid syntax. Compiling './fsi_computation.py'...; *** Sorry: TabError: inconsistent use of tabs and spaces in indentation (fsi_computation.py, line 77); Listing './pySU2'...; ```; After fixing them and running `python -m compileall .` again the n",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/983
https://github.com/su2code/SU2/pull/983:2049,Deployability,patch,patch,2049,"dentation (FSI_config.py, line 61); Listing './FSI/util'...; Listing './SU2'...; Listing './SU2/eval'...; Listing './SU2/io'...; Listing './SU2/mesh'...; Listing './SU2/opt'...; Listing './SU2/run'...; Listing './SU2/util'...; Compiling './SU2/util/filter_adjoint.py'...; *** File ""./SU2/util/filter_adjoint.py"", line 182; raise Exception, 'unknown filter type'; ^; SyntaxError: invalid syntax. Compiling './compute_uncertainty.py'...; *** File ""./compute_uncertainty.py"", line 69; print ""\n\n =================== Performing "" + str(comp) + "" Component Perturbation =================== \n\n""; ^; SyntaxError: invalid syntax. Compiling './fsi_computation.py'...; *** Sorry: TabError: inconsistent use of tabs and spaces in indentation (fsi_computation.py, line 77); Listing './pySU2'...; ```; After fixing them and running `python -m compileall .` again the next set of similar error messages appears. This patch fix such `TabError`, `SyntaxError` (for `raise` and `print` functions), replace some indent tabs with spaces (generally with 8 spaces) before comments, remove trailing spaces where needed. Please fix this small issue as resulting patch to fix it for distributive build script is rather huge (~ 100 Kb). Many changes are in `SU2_PY/FSI/FSIInterface.py` and the `Split` mode of github change preview is more suitable to compare and to recheck the correctness of new indentation (or via Meld application). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my cont",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/983
https://github.com/su2code/SU2/pull/983:2285,Deployability,patch,patch,2285,"sting './SU2/mesh'...; Listing './SU2/opt'...; Listing './SU2/run'...; Listing './SU2/util'...; Compiling './SU2/util/filter_adjoint.py'...; *** File ""./SU2/util/filter_adjoint.py"", line 182; raise Exception, 'unknown filter type'; ^; SyntaxError: invalid syntax. Compiling './compute_uncertainty.py'...; *** File ""./compute_uncertainty.py"", line 69; print ""\n\n =================== Performing "" + str(comp) + "" Component Perturbation =================== \n\n""; ^; SyntaxError: invalid syntax. Compiling './fsi_computation.py'...; *** Sorry: TabError: inconsistent use of tabs and spaces in indentation (fsi_computation.py, line 77); Listing './pySU2'...; ```; After fixing them and running `python -m compileall .` again the next set of similar error messages appears. This patch fix such `TabError`, `SyntaxError` (for `raise` and `print` functions), replace some indent tabs with spaces (generally with 8 spaces) before comments, remove trailing spaces where needed. Please fix this small issue as resulting patch to fix it for distributive build script is rather huge (~ 100 Kb). Many changes are in `SU2_PY/FSI/FSIInterface.py` and the `Split` mode of github change preview is more suitable to compare and to recheck the correctness of new indentation (or via Meld application). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/983
https://github.com/su2code/SU2/pull/983:3181,Deployability,update,updated,3181,"sting './SU2/mesh'...; Listing './SU2/opt'...; Listing './SU2/run'...; Listing './SU2/util'...; Compiling './SU2/util/filter_adjoint.py'...; *** File ""./SU2/util/filter_adjoint.py"", line 182; raise Exception, 'unknown filter type'; ^; SyntaxError: invalid syntax. Compiling './compute_uncertainty.py'...; *** File ""./compute_uncertainty.py"", line 69; print ""\n\n =================== Performing "" + str(comp) + "" Component Perturbation =================== \n\n""; ^; SyntaxError: invalid syntax. Compiling './fsi_computation.py'...; *** Sorry: TabError: inconsistent use of tabs and spaces in indentation (fsi_computation.py, line 77); Listing './pySU2'...; ```; After fixing them and running `python -m compileall .` again the next set of similar error messages appears. This patch fix such `TabError`, `SyntaxError` (for `raise` and `print` functions), replace some indent tabs with spaces (generally with 8 spaces) before comments, remove trailing spaces where needed. Please fix this small issue as resulting patch to fix it for distributive build script is rather huge (~ 100 Kb). Many changes are in `SU2_PY/FSI/FSIInterface.py` and the `Split` mode of github change preview is more suitable to compare and to recheck the correctness of new indentation (or via Meld application). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/983
https://github.com/su2code/SU2/pull/983:638,Integrability,message,messages,638,"This patch fix multile errors while python byte-compilling:. - TabError: inconsistent use of tabs and spaces in indentation;; - SyntaxError: invalid syntax (for 'raise' and 'print' functions). ## Proposed Changes; In some Linux distributive, e.g. Gentoo, before installation phase the python byte compile action is required for python scripts being installed. Such scripts are under `SU2/SU2_PY` directory. During **python3** byte compilation of mentioned scripts multiple TabError and SyntaxError take place.; To reproduce this errors go to the `SU2/SU2_PY` source directory and run `python -m compileall .` command. The following error messages appears:; ```; Listing '.'...; Listing './FSI'...; Compiling './FSI/FSIInterface.py'...; *** Sorry: TabError: inconsistent use of tabs and spaces in indentation (FSIInterface.py, line 50); Compiling './FSI/PitchPlungeAirfoilStructuralTester.py'...; *** Sorry: TabError: inconsistent use of tabs and spaces in indentation (PitchPlungeAirfoilStructuralTester.py, line 177); Listing './FSI/io'...; Compiling './FSI/io/FSI_config.py'...; *** Sorry: TabError: inconsistent use of tabs and spaces in indentation (FSI_config.py, line 61); Listing './FSI/util'...; Listing './SU2'...; Listing './SU2/eval'...; Listing './SU2/io'...; Listing './SU2/mesh'...; Listing './SU2/opt'...; Listing './SU2/run'...; Listing './SU2/util'...; Compiling './SU2/util/filter_adjoint.py'...; *** File ""./SU2/util/filter_adjoint.py"", line 182; raise Exception, 'unknown filter type'; ^; SyntaxError: invalid syntax. Compiling './compute_uncertainty.py'...; *** File ""./compute_uncertainty.py"", line 69; print ""\n\n =================== Performing "" + str(comp) + "" Component Perturbation =================== \n\n""; ^; SyntaxError: invalid syntax. Compiling './fsi_computation.py'...; *** Sorry: TabError: inconsistent use of tabs and spaces in indentation (fsi_computation.py, line 77); Listing './pySU2'...; ```; After fixing them and running `python -m compileall .` again the n",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/983
https://github.com/su2code/SU2/pull/983:2026,Integrability,message,messages,2026,"7); Listing './FSI/io'...; Compiling './FSI/io/FSI_config.py'...; *** Sorry: TabError: inconsistent use of tabs and spaces in indentation (FSI_config.py, line 61); Listing './FSI/util'...; Listing './SU2'...; Listing './SU2/eval'...; Listing './SU2/io'...; Listing './SU2/mesh'...; Listing './SU2/opt'...; Listing './SU2/run'...; Listing './SU2/util'...; Compiling './SU2/util/filter_adjoint.py'...; *** File ""./SU2/util/filter_adjoint.py"", line 182; raise Exception, 'unknown filter type'; ^; SyntaxError: invalid syntax. Compiling './compute_uncertainty.py'...; *** File ""./compute_uncertainty.py"", line 69; print ""\n\n =================== Performing "" + str(comp) + "" Component Perturbation =================== \n\n""; ^; SyntaxError: invalid syntax. Compiling './fsi_computation.py'...; *** Sorry: TabError: inconsistent use of tabs and spaces in indentation (fsi_computation.py, line 77); Listing './pySU2'...; ```; After fixing them and running `python -m compileall .` again the next set of similar error messages appears. This patch fix such `TabError`, `SyntaxError` (for `raise` and `print` functions), replace some indent tabs with spaces (generally with 8 spaces) before comments, remove trailing spaces where needed. Please fix this small issue as resulting patch to fix it for distributive build script is rather huge (~ 100 Kb). Many changes are in `SU2_PY/FSI/FSIInterface.py` and the `Split` mode of github change preview is more suitable to compare and to recheck the correctness of new indentation (or via Meld application). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/983
https://github.com/su2code/SU2/pull/983:1657,Performance,Perform,Performing,1657,"FSI'...; Compiling './FSI/FSIInterface.py'...; *** Sorry: TabError: inconsistent use of tabs and spaces in indentation (FSIInterface.py, line 50); Compiling './FSI/PitchPlungeAirfoilStructuralTester.py'...; *** Sorry: TabError: inconsistent use of tabs and spaces in indentation (PitchPlungeAirfoilStructuralTester.py, line 177); Listing './FSI/io'...; Compiling './FSI/io/FSI_config.py'...; *** Sorry: TabError: inconsistent use of tabs and spaces in indentation (FSI_config.py, line 61); Listing './FSI/util'...; Listing './SU2'...; Listing './SU2/eval'...; Listing './SU2/io'...; Listing './SU2/mesh'...; Listing './SU2/opt'...; Listing './SU2/run'...; Listing './SU2/util'...; Compiling './SU2/util/filter_adjoint.py'...; *** File ""./SU2/util/filter_adjoint.py"", line 182; raise Exception, 'unknown filter type'; ^; SyntaxError: invalid syntax. Compiling './compute_uncertainty.py'...; *** File ""./compute_uncertainty.py"", line 69; print ""\n\n =================== Performing "" + str(comp) + "" Component Perturbation =================== \n\n""; ^; SyntaxError: invalid syntax. Compiling './fsi_computation.py'...; *** Sorry: TabError: inconsistent use of tabs and spaces in indentation (fsi_computation.py, line 77); Listing './pySU2'...; ```; After fixing them and running `python -m compileall .` again the next set of similar error messages appears. This patch fix such `TabError`, `SyntaxError` (for `raise` and `print` functions), replace some indent tabs with spaces (generally with 8 spaces) before comments, remove trailing spaces where needed. Please fix this small issue as resulting patch to fix it for distributive build script is rather huge (~ 100 Kb). Many changes are in `SU2_PY/FSI/FSIInterface.py` and the `Split` mode of github change preview is more suitable to compare and to recheck the correctness of new indentation (or via Meld application). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesit",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/983
https://github.com/su2code/SU2/pull/983:3108,Testability,test,test,3108,"sting './SU2/mesh'...; Listing './SU2/opt'...; Listing './SU2/run'...; Listing './SU2/util'...; Compiling './SU2/util/filter_adjoint.py'...; *** File ""./SU2/util/filter_adjoint.py"", line 182; raise Exception, 'unknown filter type'; ^; SyntaxError: invalid syntax. Compiling './compute_uncertainty.py'...; *** File ""./compute_uncertainty.py"", line 69; print ""\n\n =================== Performing "" + str(comp) + "" Component Perturbation =================== \n\n""; ^; SyntaxError: invalid syntax. Compiling './fsi_computation.py'...; *** Sorry: TabError: inconsistent use of tabs and spaces in indentation (fsi_computation.py, line 77); Listing './pySU2'...; ```; After fixing them and running `python -m compileall .` again the next set of similar error messages appears. This patch fix such `TabError`, `SyntaxError` (for `raise` and `print` functions), replace some indent tabs with spaces (generally with 8 spaces) before comments, remove trailing spaces where needed. Please fix this small issue as resulting patch to fix it for distributive build script is rather huge (~ 100 Kb). Many changes are in `SU2_PY/FSI/FSIInterface.py` and the `Split` mode of github change preview is more suitable to compare and to recheck the correctness of new indentation (or via Meld application). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/983
https://github.com/su2code/SU2/pull/983:2730,Usability,guid,guide,2730,"sting './SU2/mesh'...; Listing './SU2/opt'...; Listing './SU2/run'...; Listing './SU2/util'...; Compiling './SU2/util/filter_adjoint.py'...; *** File ""./SU2/util/filter_adjoint.py"", line 182; raise Exception, 'unknown filter type'; ^; SyntaxError: invalid syntax. Compiling './compute_uncertainty.py'...; *** File ""./compute_uncertainty.py"", line 69; print ""\n\n =================== Performing "" + str(comp) + "" Component Perturbation =================== \n\n""; ^; SyntaxError: invalid syntax. Compiling './fsi_computation.py'...; *** Sorry: TabError: inconsistent use of tabs and spaces in indentation (fsi_computation.py, line 77); Listing './pySU2'...; ```; After fixing them and running `python -m compileall .` again the next set of similar error messages appears. This patch fix such `TabError`, `SyntaxError` (for `raise` and `print` functions), replace some indent tabs with spaces (generally with 8 spaces) before comments, remove trailing spaces where needed. Please fix this small issue as resulting patch to fix it for distributive build script is rather huge (~ 100 Kb). Many changes are in `SU2_PY/FSI/FSIInterface.py` and the `Split` mode of github change preview is more suitable to compare and to recheck the correctness of new indentation (or via Meld application). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/983
https://github.com/su2code/SU2/issues/984:112,Performance,optimiz,optimization,112,"Although I am minimizing my objective function, its value appears to rise in some designs while running a shape optimization. I look at my objective function value from the history_project.dat file. It makes sense for it to move in only one direction because that's what the adjoint gradients will ask it to do, however, I don't know if this rule is actually always satisfied in shape optimization.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/984
https://github.com/su2code/SU2/issues/984:385,Performance,optimiz,optimization,385,"Although I am minimizing my objective function, its value appears to rise in some designs while running a shape optimization. I look at my objective function value from the history_project.dat file. It makes sense for it to move in only one direction because that's what the adjoint gradients will ask it to do, however, I don't know if this rule is actually always satisfied in shape optimization.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/984
https://github.com/su2code/SU2/issues/986:896,Availability,error,error,896,"Hello all,. I have a question about using the MARKER_INTERNAL. I was expecting that adding a MARKER_INTERNAL will not affect the solution in any way. Though, when I try to use it I observe a spurious spike in the solution at the location of the internal marker. . To create an interior marker in Pointwise, I create a baffle zone which connects two blocks (https://www.pointwise.com/doc/user-manual/cae/set-boundary-conditions/boundary-condition-connections.html). So there are two sides of the face and I marked them both as internal markers. This increases the number of elements in mesh because the nodes on the marker are duplicated (one for each side except on the perimeter). So essentially, at the each (x,y,z) location of the internal marker, there are two nodes. Instead of having 6 neighbors as an internal node (hex elements in 3-D), the two nodes ""share"" the neighbors which leads to error in momentum and mass balance in both the nodes causing errors in the solution. I am not quite sure how to fix this. Is there a different way to use internal markers? Or is the internal marker not supported anymore?. Regards,; Akshay",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/986
https://github.com/su2code/SU2/issues/986:957,Availability,error,errors,957,"Hello all,. I have a question about using the MARKER_INTERNAL. I was expecting that adding a MARKER_INTERNAL will not affect the solution in any way. Though, when I try to use it I observe a spurious spike in the solution at the location of the internal marker. . To create an interior marker in Pointwise, I create a baffle zone which connects two blocks (https://www.pointwise.com/doc/user-manual/cae/set-boundary-conditions/boundary-condition-connections.html). So there are two sides of the face and I marked them both as internal markers. This increases the number of elements in mesh because the nodes on the marker are duplicated (one for each side except on the perimeter). So essentially, at the each (x,y,z) location of the internal marker, there are two nodes. Instead of having 6 neighbors as an internal node (hex elements in 3-D), the two nodes ""share"" the neighbors which leads to error in momentum and mass balance in both the nodes causing errors in the solution. I am not quite sure how to fix this. Is there a different way to use internal markers? Or is the internal marker not supported anymore?. Regards,; Akshay",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/986
https://github.com/su2code/SU2/pull/987:91,Availability,error,error,91,"Preprocess in iteration_structure.hpp. ## Proposed Changes; * Fix a minor comment spelling error in CSinglezoneDriver.cpp. The preprocess method's comment section involving param in is missing, so I added in. ; . ## Related Work; *N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/987
https://github.com/su2code/SU2/pull/987:859,Deployability,update,updated,859,"Preprocess in iteration_structure.hpp. ## Proposed Changes; * Fix a minor comment spelling error in CSinglezoneDriver.cpp. The preprocess method's comment section involving param in is missing, so I added in. ; . ## Related Work; *N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/987
https://github.com/su2code/SU2/pull/987:786,Testability,test,test,786,"Preprocess in iteration_structure.hpp. ## Proposed Changes; * Fix a minor comment spelling error in CSinglezoneDriver.cpp. The preprocess method's comment section involving param in is missing, so I added in. ; . ## Related Work; *N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/987
https://github.com/su2code/SU2/pull/987:408,Usability,guid,guide,408,"Preprocess in iteration_structure.hpp. ## Proposed Changes; * Fix a minor comment spelling error in CSinglezoneDriver.cpp. The preprocess method's comment section involving param in is missing, so I added in. ; . ## Related Work; *N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/987
https://github.com/su2code/SU2/issues/988:465,Deployability,release,release,465,"**Describe the bug**; Attempting to run SU2 in dryrun mode (with ""-d"" flag) fails when compiled with debug flags:. ```; SU2_CFD_SERIAL_DEBUG: ../Common/src/linear_algebra/../../include/geometry/dual_grid/../../toolboxes/graph_toolbox.hpp:268: const Index_t* CCompressedSparsePattern<Index_t>::outerPtr() const [with Index_t = long unsigned int]: Assertion `!empty() && ""Sparse pattern has not been built.""' failed.; Aborted (core dumped); ```; Seems to run ok with release build. **To Reproduce**; Compile code with debug flags and run with dryrun option. **Desktop (please complete the following information):**; - OS: Arch Linux (kernel 5.6.10); - C++ compiler and version: gcc v. 9.3.0; - MPI implementation and version: openmpi 4.0.3; - SU2 Version: v. 7.0.4, branch: develop, commit: 31e55ed9f5f13762e939cd44650e34d6e4d5f0f7",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/988
https://github.com/su2code/SU2/issues/988:416,Safety,Abort,Aborted,416,"**Describe the bug**; Attempting to run SU2 in dryrun mode (with ""-d"" flag) fails when compiled with debug flags:. ```; SU2_CFD_SERIAL_DEBUG: ../Common/src/linear_algebra/../../include/geometry/dual_grid/../../toolboxes/graph_toolbox.hpp:268: const Index_t* CCompressedSparsePattern<Index_t>::outerPtr() const [with Index_t = long unsigned int]: Assertion `!empty() && ""Sparse pattern has not been built.""' failed.; Aborted (core dumped); ```; Seems to run ok with release build. **To Reproduce**; Compile code with debug flags and run with dryrun option. **Desktop (please complete the following information):**; - OS: Arch Linux (kernel 5.6.10); - C++ compiler and version: gcc v. 9.3.0; - MPI implementation and version: openmpi 4.0.3; - SU2 Version: v. 7.0.4, branch: develop, commit: 31e55ed9f5f13762e939cd44650e34d6e4d5f0f7",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/988
https://github.com/su2code/SU2/issues/988:346,Testability,Assert,Assertion,346,"**Describe the bug**; Attempting to run SU2 in dryrun mode (with ""-d"" flag) fails when compiled with debug flags:. ```; SU2_CFD_SERIAL_DEBUG: ../Common/src/linear_algebra/../../include/geometry/dual_grid/../../toolboxes/graph_toolbox.hpp:268: const Index_t* CCompressedSparsePattern<Index_t>::outerPtr() const [with Index_t = long unsigned int]: Assertion `!empty() && ""Sparse pattern has not been built.""' failed.; Aborted (core dumped); ```; Seems to run ok with release build. **To Reproduce**; Compile code with debug flags and run with dryrun option. **Desktop (please complete the following information):**; - OS: Arch Linux (kernel 5.6.10); - C++ compiler and version: gcc v. 9.3.0; - MPI implementation and version: openmpi 4.0.3; - SU2 Version: v. 7.0.4, branch: develop, commit: 31e55ed9f5f13762e939cd44650e34d6e4d5f0f7",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/988
https://github.com/su2code/SU2/pull/989:1821,Availability,toler,tolerances,1821,"peedup:; ![image](https://user-images.githubusercontent.com/38071223/82442103-ee2e3900-9a96-11ea-9ab8-fe9fa0842b22.png); This case is very light on the linear solvers (CFL of 20) so this result is actually really good.; There seems to be no compromise in accuracy, the residuals eventually go below -11 (8 orders reduction) in the same number of iterations, and the mesh metrics for this case are not stellar:; ```; +--------------------------------------------------------------+; | Mesh Quality Metric| Minimum| Maximum|; +--------------------------------------------------------------+; | Orthogonality Angle (deg.)| 36.7556| 89.9375|; | CV Face Area Aspect Ratio| 1.03036| 4477.19|; | CV Sub-Volume Ratio| 1.00693| 97.7189|; +--------------------------------------------------------------+; ```; For purely linear applications like mesh deformation (including SU2_DOT) or linear elasticity, for which the solution is not iterative, an impact on accuracy is expected.; For example deforming a grid of 830k nodes (with stretched cells and all that good stuff) with SU2_DEF using CG+ILU converges like this:; ![image](https://user-images.githubusercontent.com/38071223/82590480-a93cfc00-9b95-11ea-8266-95a5decbf011.png); So it is still possible to converge the linear system to very tight tolerances, but after a certain tolerance the convergence rate becomes worse, that threshold will depend on the size of the problem (larger -> harder to solve) or more formally on the condition number of the matrix.; For this example SU2_DEF uses 25% less memory in single precision than in double (or double requires 33% more), and solves to 1e-10 in the same time (as it requires more iterations). ## Related Work; #789. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/989
https://github.com/su2code/SU2/pull/989:1853,Availability,toler,tolerance,1853,"peedup:; ![image](https://user-images.githubusercontent.com/38071223/82442103-ee2e3900-9a96-11ea-9ab8-fe9fa0842b22.png); This case is very light on the linear solvers (CFL of 20) so this result is actually really good.; There seems to be no compromise in accuracy, the residuals eventually go below -11 (8 orders reduction) in the same number of iterations, and the mesh metrics for this case are not stellar:; ```; +--------------------------------------------------------------+; | Mesh Quality Metric| Minimum| Maximum|; +--------------------------------------------------------------+; | Orthogonality Angle (deg.)| 36.7556| 89.9375|; | CV Face Area Aspect Ratio| 1.03036| 4477.19|; | CV Sub-Volume Ratio| 1.00693| 97.7189|; +--------------------------------------------------------------+; ```; For purely linear applications like mesh deformation (including SU2_DOT) or linear elasticity, for which the solution is not iterative, an impact on accuracy is expected.; For example deforming a grid of 830k nodes (with stretched cells and all that good stuff) with SU2_DEF using CG+ILU converges like this:; ![image](https://user-images.githubusercontent.com/38071223/82590480-a93cfc00-9b95-11ea-8266-95a5decbf011.png); So it is still possible to converge the linear system to very tight tolerances, but after a certain tolerance the convergence rate becomes worse, that threshold will depend on the size of the problem (larger -> harder to solve) or more formally on the condition number of the matrix.; For this example SU2_DEF uses 25% less memory in single precision than in double (or double requires 33% more), and solves to 1e-10 in the same time (as it requires more iterations). ## Related Work; #789. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/989
https://github.com/su2code/SU2/pull/989:1919,Integrability,depend,depend,1919,"peedup:; ![image](https://user-images.githubusercontent.com/38071223/82442103-ee2e3900-9a96-11ea-9ab8-fe9fa0842b22.png); This case is very light on the linear solvers (CFL of 20) so this result is actually really good.; There seems to be no compromise in accuracy, the residuals eventually go below -11 (8 orders reduction) in the same number of iterations, and the mesh metrics for this case are not stellar:; ```; +--------------------------------------------------------------+; | Mesh Quality Metric| Minimum| Maximum|; +--------------------------------------------------------------+; | Orthogonality Angle (deg.)| 36.7556| 89.9375|; | CV Face Area Aspect Ratio| 1.03036| 4477.19|; | CV Sub-Volume Ratio| 1.00693| 97.7189|; +--------------------------------------------------------------+; ```; For purely linear applications like mesh deformation (including SU2_DOT) or linear elasticity, for which the solution is not iterative, an impact on accuracy is expected.; For example deforming a grid of 830k nodes (with stretched cells and all that good stuff) with SU2_DEF using CG+ILU converges like this:; ![image](https://user-images.githubusercontent.com/38071223/82590480-a93cfc00-9b95-11ea-8266-95a5decbf011.png); So it is still possible to converge the linear system to very tight tolerances, but after a certain tolerance the convergence rate becomes worse, that threshold will depend on the size of the problem (larger -> harder to solve) or more formally on the condition number of the matrix.; For this example SU2_DEF uses 25% less memory in single precision than in double (or double requires 33% more), and solves to 1e-10 in the same time (as it requires more iterations). ## Related Work; #789. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/989
https://github.com/su2code/SU2/pull/989:288,Testability,log,logic,288,"## Proposed Changes; Compile-time option (`-Denable-mixedprec=true`) to have single precision linear solves while keeping all other calculations in double precision. Which means that among other things we get the ILU for the price of LU-SGS (memory wise).; This uses the same type-mixing logic used to have a passive matrix in reverse AD builds (thus this feature is also compatible with reverse AD, but not direct).; For the 3D RANS SST case with about 500k nodes I've been using for benchmarking and profiling this gives a 1.19 speedup:; ![image](https://user-images.githubusercontent.com/38071223/82442103-ee2e3900-9a96-11ea-9ab8-fe9fa0842b22.png); This case is very light on the linear solvers (CFL of 20) so this result is actually really good.; There seems to be no compromise in accuracy, the residuals eventually go below -11 (8 orders reduction) in the same number of iterations, and the mesh metrics for this case are not stellar:; ```; +--------------------------------------------------------------+; | Mesh Quality Metric| Minimum| Maximum|; +--------------------------------------------------------------+; | Orthogonality Angle (deg.)| 36.7556| 89.9375|; | CV Face Area Aspect Ratio| 1.03036| 4477.19|; | CV Sub-Volume Ratio| 1.00693| 97.7189|; +--------------------------------------------------------------+; ```; For purely linear applications like mesh deformation (including SU2_DOT) or linear elasticity, for which the solution is not iterative, an impact on accuracy is expected.; For example deforming a grid of 830k nodes (with stretched cells and all that good stuff) with SU2_DEF using CG+ILU converges like this:; ![image](https://user-images.githubusercontent.com/38071223/82590480-a93cfc00-9b95-11ea-8266-95a5decbf011.png); So it is still possible to converge the linear system to very tight tolerances, but after a certain tolerance the convergence rate becomes worse, that threshold will depend on the size of the problem (larger -> harder to solve) or more formally on ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/989
https://github.com/su2code/SU2/pull/989:485,Testability,benchmark,benchmarking,485,"## Proposed Changes; Compile-time option (`-Denable-mixedprec=true`) to have single precision linear solves while keeping all other calculations in double precision. Which means that among other things we get the ILU for the price of LU-SGS (memory wise).; This uses the same type-mixing logic used to have a passive matrix in reverse AD builds (thus this feature is also compatible with reverse AD, but not direct).; For the 3D RANS SST case with about 500k nodes I've been using for benchmarking and profiling this gives a 1.19 speedup:; ![image](https://user-images.githubusercontent.com/38071223/82442103-ee2e3900-9a96-11ea-9ab8-fe9fa0842b22.png); This case is very light on the linear solvers (CFL of 20) so this result is actually really good.; There seems to be no compromise in accuracy, the residuals eventually go below -11 (8 orders reduction) in the same number of iterations, and the mesh metrics for this case are not stellar:; ```; +--------------------------------------------------------------+; | Mesh Quality Metric| Minimum| Maximum|; +--------------------------------------------------------------+; | Orthogonality Angle (deg.)| 36.7556| 89.9375|; | CV Face Area Aspect Ratio| 1.03036| 4477.19|; | CV Sub-Volume Ratio| 1.00693| 97.7189|; +--------------------------------------------------------------+; ```; For purely linear applications like mesh deformation (including SU2_DOT) or linear elasticity, for which the solution is not iterative, an impact on accuracy is expected.; For example deforming a grid of 830k nodes (with stretched cells and all that good stuff) with SU2_DEF using CG+ILU converges like this:; ![image](https://user-images.githubusercontent.com/38071223/82590480-a93cfc00-9b95-11ea-8266-95a5decbf011.png); So it is still possible to converge the linear system to very tight tolerances, but after a certain tolerance the convergence rate becomes worse, that threshold will depend on the size of the problem (larger -> harder to solve) or more formally on ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/989
https://github.com/su2code/SU2/issues/990:204,Availability,fault,fault,204,"The number of cores I can run Turbomachinery cases always behaves unpredictably. Here are my observations:. 1. Ran my case with 1 or 2 cores it runs fine. 2. Any higher than that, it gives a segmentation fault or the following error:. ---------------------- Turbomachinery Preprocessing ---------------------; Initialize Turbo Vertex Structure.; Error in ""virtual void CPhysicalGeometry::ComputeNSpan(CConfig*, short unsigned int, short unsigned int, bool)"":; -------------------------------------------------------------------------; At the moment only turbomachinery with the same amount of span-wise section can be simulated; nSpan inflow 113, nSpan outflow 32510; ------------------------------ Error Exit -------------------------------. 3. I generate the mesh again, with the **same** NPOIN and NELEM but the mesh files are different in point numbering, and now the case runs with 3 cores as well and above that gives the same error. Is this issue known? It may be a small fix in ""CPhysicalGeometry::ComputeNSpan"" to partition nSpan outflow correctly. - OS: CentOS 7; - SU2 Version: v7.0.4",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/990
https://github.com/su2code/SU2/issues/990:227,Availability,error,error,227,"The number of cores I can run Turbomachinery cases always behaves unpredictably. Here are my observations:. 1. Ran my case with 1 or 2 cores it runs fine. 2. Any higher than that, it gives a segmentation fault or the following error:. ---------------------- Turbomachinery Preprocessing ---------------------; Initialize Turbo Vertex Structure.; Error in ""virtual void CPhysicalGeometry::ComputeNSpan(CConfig*, short unsigned int, short unsigned int, bool)"":; -------------------------------------------------------------------------; At the moment only turbomachinery with the same amount of span-wise section can be simulated; nSpan inflow 113, nSpan outflow 32510; ------------------------------ Error Exit -------------------------------. 3. I generate the mesh again, with the **same** NPOIN and NELEM but the mesh files are different in point numbering, and now the case runs with 3 cores as well and above that gives the same error. Is this issue known? It may be a small fix in ""CPhysicalGeometry::ComputeNSpan"" to partition nSpan outflow correctly. - OS: CentOS 7; - SU2 Version: v7.0.4",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/990
https://github.com/su2code/SU2/issues/990:346,Availability,Error,Error,346,"The number of cores I can run Turbomachinery cases always behaves unpredictably. Here are my observations:. 1. Ran my case with 1 or 2 cores it runs fine. 2. Any higher than that, it gives a segmentation fault or the following error:. ---------------------- Turbomachinery Preprocessing ---------------------; Initialize Turbo Vertex Structure.; Error in ""virtual void CPhysicalGeometry::ComputeNSpan(CConfig*, short unsigned int, short unsigned int, bool)"":; -------------------------------------------------------------------------; At the moment only turbomachinery with the same amount of span-wise section can be simulated; nSpan inflow 113, nSpan outflow 32510; ------------------------------ Error Exit -------------------------------. 3. I generate the mesh again, with the **same** NPOIN and NELEM but the mesh files are different in point numbering, and now the case runs with 3 cores as well and above that gives the same error. Is this issue known? It may be a small fix in ""CPhysicalGeometry::ComputeNSpan"" to partition nSpan outflow correctly. - OS: CentOS 7; - SU2 Version: v7.0.4",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/990
https://github.com/su2code/SU2/issues/990:699,Availability,Error,Error,699,"The number of cores I can run Turbomachinery cases always behaves unpredictably. Here are my observations:. 1. Ran my case with 1 or 2 cores it runs fine. 2. Any higher than that, it gives a segmentation fault or the following error:. ---------------------- Turbomachinery Preprocessing ---------------------; Initialize Turbo Vertex Structure.; Error in ""virtual void CPhysicalGeometry::ComputeNSpan(CConfig*, short unsigned int, short unsigned int, bool)"":; -------------------------------------------------------------------------; At the moment only turbomachinery with the same amount of span-wise section can be simulated; nSpan inflow 113, nSpan outflow 32510; ------------------------------ Error Exit -------------------------------. 3. I generate the mesh again, with the **same** NPOIN and NELEM but the mesh files are different in point numbering, and now the case runs with 3 cores as well and above that gives the same error. Is this issue known? It may be a small fix in ""CPhysicalGeometry::ComputeNSpan"" to partition nSpan outflow correctly. - OS: CentOS 7; - SU2 Version: v7.0.4",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/990
https://github.com/su2code/SU2/issues/990:933,Availability,error,error,933,"The number of cores I can run Turbomachinery cases always behaves unpredictably. Here are my observations:. 1. Ran my case with 1 or 2 cores it runs fine. 2. Any higher than that, it gives a segmentation fault or the following error:. ---------------------- Turbomachinery Preprocessing ---------------------; Initialize Turbo Vertex Structure.; Error in ""virtual void CPhysicalGeometry::ComputeNSpan(CConfig*, short unsigned int, short unsigned int, bool)"":; -------------------------------------------------------------------------; At the moment only turbomachinery with the same amount of span-wise section can be simulated; nSpan inflow 113, nSpan outflow 32510; ------------------------------ Error Exit -------------------------------. 3. I generate the mesh again, with the **same** NPOIN and NELEM but the mesh files are different in point numbering, and now the case runs with 3 cores as well and above that gives the same error. Is this issue known? It may be a small fix in ""CPhysicalGeometry::ComputeNSpan"" to partition nSpan outflow correctly. - OS: CentOS 7; - SU2 Version: v7.0.4",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/990
https://github.com/su2code/SU2/issues/991:49,Availability,error,error,49,"The ninja build command fails with the following error: ; ```; slimshady@arch-linux-hp-probook-g3-450: SU2$ ./ninja -j4 -C build install; ninja: Entering directory `build'; [568/870] Linking target SU2_CFD/src/SU2_CFD.; FAILED: SU2_CFD/src/SU2_CFD ; c++ -o SU2_CFD/src/SU2_CFD 'SU2_CFD/src/37e1b17@@SU2_CFD@exe/SU2_CFD.cpp.o' -Wl,--as-needed -Wl,--no-undefined -Wl,-O1 -Wl,--start-group SU2_CFD/src/libSU2core.a externals/cgns/libcgns.a externals/metis/libmetis.a externals/parmetis/libparmetis.a externals/tecio/teciompisrc/libteciompi.a Common/src/libSU2Common.a -Wl,-rpath -Wl,/usr/lib/openmpi -Wl,--enable-new-dtags /usr/lib/openmpi/libmpi.so -Wl,-rpath -Wl,/usr/lib/openmpi -Wl,--enable-new-dtags /usr/lib/openmpi/libmpi_cxx.so /usr/lib/libopenblas.so -Wl,--end-group -Wl,-rpath -Wl,/usr/lib/openmpi -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/lib/openmpi -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/lib/openmpi -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/lib/openmpi -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/lib/openmpi -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/lib/openmpi -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/lib/openmpi -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/lib/openmpi -Wl,--enable-new-dtags '-Wl,-rpath,$ORIGIN/:$ORIGIN/../../externals/cgns:$ORIGIN/../../externals/metis:$ORIGIN/../../externals/parmetis:$ORIGIN/../../externals/tecio/teciompisrc:$ORIGIN/../../Common/src' -Wl,-rpath-link,/home/slimshady/UserPackages/SU2/build/SU2_CFD/src -Wl,-rpath-link,/home/slimshady/UserPackages/SU2/build/externals/cgns -Wl,-rpath-link,/home/slimshady/UserPackages/SU2/build/externals/metis -Wl,-rpath-link,/home/slimshady/UserPackages/SU2/build/externals/parmetis -Wl,-rpath-link,/home/slimshady/UserPackages/SU2/build/externals/tecio/teciompisrc -Wl,-rpath-link,/home/slimshady/UserPackages/SU2/build/Common/src; /usr/bin/ld: Common/src/libSU2Common.a(fem_geometry_structure.cpp.o): in function `CMeshFEM_DG::MetricTermsVolumeElements(CConfig*)':; fem_geometry_structure.cpp:(.text+0xdcbc",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991
https://github.com/su2code/SU2/issues/991:3143,Availability,error,error,3143,"efined reference to `dpotrf_'; /usr/bin/ld: fem_geometry_structure.cpp:(.text+0xe015): undefined reference to `dpotri_'; /usr/bin/ld: Common/src/libSU2Common.a(wall_model.cpp.o): in function `CWallModel1DEQ::WallShearStressAndHeatFlux(double, double, double, double, double, bool, double, bool, CFluidModel*, double&, double&, double&, double&)':; wall_model.cpp:(.text+0x124f): undefined reference to `dgtsv_'; /usr/bin/ld: wall_model.cpp:(.text+0x19fb): undefined reference to `dgtsv_'; /usr/bin/ld: Common/src/libSU2Common.a(toolboxes_CSymmetricMatrix.cpp.o): in function `CSymmetricMatrix::CalcInv_sytri()':; CSymmetricMatrix.cpp:(.text+0x15c): undefined reference to `dsytrf_'; /usr/bin/ld: CSymmetricMatrix.cpp:(.text+0x1d5): undefined reference to `dsytrf_'; /usr/bin/ld: CSymmetricMatrix.cpp:(.text+0x205): undefined reference to `dsytri_'; /usr/bin/ld: Common/src/libSU2Common.a(toolboxes_CSymmetricMatrix.cpp.o): in function `CSymmetricMatrix::CalcInv_potri()':; CSymmetricMatrix.cpp:(.text+0x593): undefined reference to `dpotrf_'; /usr/bin/ld: CSymmetricMatrix.cpp:(.text+0x6c6): undefined reference to `dpotri_'; collect2: error: ld returned 1 exit status; [571/870] Compiling C++ object 'SU2_CFD/src/37e1b17@@SU2core_AD@sta/python_wrapper_structure.cpp.o'.; ninja: build stopped: subcommand failed.; ```; **My Meson command was as follows**; ```; ./meson.py build -Denable-openblas=true -Dwith-mpi=enabled -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true --prefix=/home/slimshady/UserPackages/SU2_INSTALL; ```; I should mention that while running the above meson command I had a warning, `warning: A compatible version of re2c (>= 0.11.3) was not found; changes to src/*.in.cc will not affect your build.`. **Desktop Details**; - OS: Arch Linux x86_64; - C++ compiler and version: g++ (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130; - MPI implementation and version: OpenMPI 4.0.2; - SU2 Version: 7.0.4. Please let me know if any additional information is required.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991
https://github.com/su2code/SU2/issues/991:129,Deployability,install,install,129,"The ninja build command fails with the following error: ; ```; slimshady@arch-linux-hp-probook-g3-450: SU2$ ./ninja -j4 -C build install; ninja: Entering directory `build'; [568/870] Linking target SU2_CFD/src/SU2_CFD.; FAILED: SU2_CFD/src/SU2_CFD ; c++ -o SU2_CFD/src/SU2_CFD 'SU2_CFD/src/37e1b17@@SU2_CFD@exe/SU2_CFD.cpp.o' -Wl,--as-needed -Wl,--no-undefined -Wl,-O1 -Wl,--start-group SU2_CFD/src/libSU2core.a externals/cgns/libcgns.a externals/metis/libmetis.a externals/parmetis/libparmetis.a externals/tecio/teciompisrc/libteciompi.a Common/src/libSU2Common.a -Wl,-rpath -Wl,/usr/lib/openmpi -Wl,--enable-new-dtags /usr/lib/openmpi/libmpi.so -Wl,-rpath -Wl,/usr/lib/openmpi -Wl,--enable-new-dtags /usr/lib/openmpi/libmpi_cxx.so /usr/lib/libopenblas.so -Wl,--end-group -Wl,-rpath -Wl,/usr/lib/openmpi -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/lib/openmpi -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/lib/openmpi -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/lib/openmpi -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/lib/openmpi -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/lib/openmpi -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/lib/openmpi -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/lib/openmpi -Wl,--enable-new-dtags '-Wl,-rpath,$ORIGIN/:$ORIGIN/../../externals/cgns:$ORIGIN/../../externals/metis:$ORIGIN/../../externals/parmetis:$ORIGIN/../../externals/tecio/teciompisrc:$ORIGIN/../../Common/src' -Wl,-rpath-link,/home/slimshady/UserPackages/SU2/build/SU2_CFD/src -Wl,-rpath-link,/home/slimshady/UserPackages/SU2/build/externals/cgns -Wl,-rpath-link,/home/slimshady/UserPackages/SU2/build/externals/metis -Wl,-rpath-link,/home/slimshady/UserPackages/SU2/build/externals/parmetis -Wl,-rpath-link,/home/slimshady/UserPackages/SU2/build/externals/tecio/teciompisrc -Wl,-rpath-link,/home/slimshady/UserPackages/SU2/build/Common/src; /usr/bin/ld: Common/src/libSU2Common.a(fem_geometry_structure.cpp.o): in function `CMeshFEM_DG::MetricTermsVolumeElements(CConfig*)':; fem_geometry_structure.cpp:(.text+0xdcbc",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/991
https://github.com/su2code/SU2/issues/992:704,Safety,avoid,avoided,704,"**Describe the bug**; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*. It was brought to our attention that what we currently define as the ""Standard"" SA model is not using the ft2 term in the source implementation:. https://github.com/su2code/SU2/blob/20888f488752e4e8aaa5230e56c5417923c7c344/SU2_CFD/src/numerics/turbulent/turb_sources.cpp#L137. which means it is actually the SA-noft2 variant:. https://turbmodels.larc.nasa.gov/spalart.html#sanoft2. In practice, this should make little difference for most problems, but it can be important for DES/DDES (where the ft2 term is typically avoided). However, it is also important that we be clear about the different variants of the turbulence models to users, since having confidence in the models for V&V, reproducibility, etc., is so critical. I would vote that we reinstate the ""standard"" model and make a new SA variant for SA-noft2 as a separate option (without duplicating a ton of code, if possible). Anyone else feel strongly about this topic?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/992
https://github.com/su2code/SU2/issues/992:25,Usability,clear,clear,25,"**Describe the bug**; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*. It was brought to our attention that what we currently define as the ""Standard"" SA model is not using the ft2 term in the source implementation:. https://github.com/su2code/SU2/blob/20888f488752e4e8aaa5230e56c5417923c7c344/SU2_CFD/src/numerics/turbulent/turb_sources.cpp#L137. which means it is actually the SA-noft2 variant:. https://turbmodels.larc.nasa.gov/spalart.html#sanoft2. In practice, this should make little difference for most problems, but it can be important for DES/DDES (where the ft2 term is typically avoided). However, it is also important that we be clear about the different variants of the turbulence models to users, since having confidence in the models for V&V, reproducibility, etc., is so critical. I would vote that we reinstate the ""standard"" model and make a new SA variant for SA-noft2 as a separate option (without duplicating a ton of code, if possible). Anyone else feel strongly about this topic?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/992
https://github.com/su2code/SU2/issues/992:755,Usability,clear,clear,755,"**Describe the bug**; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*. It was brought to our attention that what we currently define as the ""Standard"" SA model is not using the ft2 term in the source implementation:. https://github.com/su2code/SU2/blob/20888f488752e4e8aaa5230e56c5417923c7c344/SU2_CFD/src/numerics/turbulent/turb_sources.cpp#L137. which means it is actually the SA-noft2 variant:. https://turbmodels.larc.nasa.gov/spalart.html#sanoft2. In practice, this should make little difference for most problems, but it can be important for DES/DDES (where the ft2 term is typically avoided). However, it is also important that we be clear about the different variants of the turbulence models to users, since having confidence in the models for V&V, reproducibility, etc., is so critical. I would vote that we reinstate the ""standard"" model and make a new SA variant for SA-noft2 as a separate option (without duplicating a ton of code, if possible). Anyone else feel strongly about this topic?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/992
https://github.com/su2code/SU2/pull/993:521,Usability,guid,guide,521,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Adds const specifier to member functions and also const to some function input args where applicable. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/993
https://github.com/su2code/SU2/issues/994:16,Availability,down,downloaded,16,"Hi all,. I have downloaded SU2 and am testing this using Xcode. Because I am a newbie in Xcode, I can't run SU2 successfully.; When I build and run, I got the following message.; =============================================; configfile: File does not exist: inv_wedge_HLLC.cfg; Run with --help for more information.; Program ended with exit code: 105; =============================================. In my guess, I didn't designate correct path to cfg and mesh file.; But I don't know how to designate it. Sorry for wrong question, but it will be helpful for me to have the answer for this question. Thanks in advance.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/994
https://github.com/su2code/SU2/issues/994:169,Integrability,message,message,169,"Hi all,. I have downloaded SU2 and am testing this using Xcode. Because I am a newbie in Xcode, I can't run SU2 successfully.; When I build and run, I got the following message.; =============================================; configfile: File does not exist: inv_wedge_HLLC.cfg; Run with --help for more information.; Program ended with exit code: 105; =============================================. In my guess, I didn't designate correct path to cfg and mesh file.; But I don't know how to designate it. Sorry for wrong question, but it will be helpful for me to have the answer for this question. Thanks in advance.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/994
https://github.com/su2code/SU2/issues/994:226,Modifiability,config,configfile,226,"Hi all,. I have downloaded SU2 and am testing this using Xcode. Because I am a newbie in Xcode, I can't run SU2 successfully.; When I build and run, I got the following message.; =============================================; configfile: File does not exist: inv_wedge_HLLC.cfg; Run with --help for more information.; Program ended with exit code: 105; =============================================. In my guess, I didn't designate correct path to cfg and mesh file.; But I don't know how to designate it. Sorry for wrong question, but it will be helpful for me to have the answer for this question. Thanks in advance.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/994
https://github.com/su2code/SU2/issues/994:38,Testability,test,testing,38,"Hi all,. I have downloaded SU2 and am testing this using Xcode. Because I am a newbie in Xcode, I can't run SU2 successfully.; When I build and run, I got the following message.; =============================================; configfile: File does not exist: inv_wedge_HLLC.cfg; Run with --help for more information.; Program ended with exit code: 105; =============================================. In my guess, I didn't designate correct path to cfg and mesh file.; But I don't know how to designate it. Sorry for wrong question, but it will be helpful for me to have the answer for this question. Thanks in advance.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/994
https://github.com/su2code/SU2/pull/996:683,Availability,error,error,683,"## Proposed Changes. This PR just contains two small changes:. 1. I added the capability to use multi-line statements in the config file. That should make the file a little bit more readable, especially for list options. To continue a statement in the next line, use `\` at the end of the current line. Commented lines and everything after the `\` are skipped. That means the following way to specify an option works now:; ```; SCREEN_OUTPUT=(INNER_ITER, \ % A comment that is ignored; WALL_TIME, \; RMS_DENSITY, \; LIFT, \; DRAG, \; %CAUCHY_SENS_PRESS, \ Option value is ignored; CAUCHY_DRAG, \; %RMS_ADJ_DENSITY, \ Option value is ignored; RMS_ADJ_ENERGY); ```; Furthermore, if an error occurs now during the processing of the config file, the line number is also printed in order to quickly identify the location.; ; 2. Paraview XML format is now the default format (*.vtu) if the option `OUTPUT_FILES` is not present. I wanted to do that already when I added the XML format in January, but I simply forgot... The old format can be used with `PARAVIEW_LEGACY` and `SURFACE_PARAVIEW_LEGACY`. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/996
https://github.com/su2code/SU2/pull/996:1865,Deployability,update,updated,1865,"## Proposed Changes. This PR just contains two small changes:. 1. I added the capability to use multi-line statements in the config file. That should make the file a little bit more readable, especially for list options. To continue a statement in the next line, use `\` at the end of the current line. Commented lines and everything after the `\` are skipped. That means the following way to specify an option works now:; ```; SCREEN_OUTPUT=(INNER_ITER, \ % A comment that is ignored; WALL_TIME, \; RMS_DENSITY, \; LIFT, \; DRAG, \; %CAUCHY_SENS_PRESS, \ Option value is ignored; CAUCHY_DRAG, \; %RMS_ADJ_DENSITY, \ Option value is ignored; RMS_ADJ_ENERGY); ```; Furthermore, if an error occurs now during the processing of the config file, the line number is also printed in order to quickly identify the location.; ; 2. Paraview XML format is now the default format (*.vtu) if the option `OUTPUT_FILES` is not present. I wanted to do that already when I added the XML format in January, but I simply forgot... The old format can be used with `PARAVIEW_LEGACY` and `SURFACE_PARAVIEW_LEGACY`. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/996
https://github.com/su2code/SU2/pull/996:125,Modifiability,config,config,125,"## Proposed Changes. This PR just contains two small changes:. 1. I added the capability to use multi-line statements in the config file. That should make the file a little bit more readable, especially for list options. To continue a statement in the next line, use `\` at the end of the current line. Commented lines and everything after the `\` are skipped. That means the following way to specify an option works now:; ```; SCREEN_OUTPUT=(INNER_ITER, \ % A comment that is ignored; WALL_TIME, \; RMS_DENSITY, \; LIFT, \; DRAG, \; %CAUCHY_SENS_PRESS, \ Option value is ignored; CAUCHY_DRAG, \; %RMS_ADJ_DENSITY, \ Option value is ignored; RMS_ADJ_ENERGY); ```; Furthermore, if an error occurs now during the processing of the config file, the line number is also printed in order to quickly identify the location.; ; 2. Paraview XML format is now the default format (*.vtu) if the option `OUTPUT_FILES` is not present. I wanted to do that already when I added the XML format in January, but I simply forgot... The old format can be used with `PARAVIEW_LEGACY` and `SURFACE_PARAVIEW_LEGACY`. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/996
https://github.com/su2code/SU2/pull/996:729,Modifiability,config,config,729,"## Proposed Changes. This PR just contains two small changes:. 1. I added the capability to use multi-line statements in the config file. That should make the file a little bit more readable, especially for list options. To continue a statement in the next line, use `\` at the end of the current line. Commented lines and everything after the `\` are skipped. That means the following way to specify an option works now:; ```; SCREEN_OUTPUT=(INNER_ITER, \ % A comment that is ignored; WALL_TIME, \; RMS_DENSITY, \; LIFT, \; DRAG, \; %CAUCHY_SENS_PRESS, \ Option value is ignored; CAUCHY_DRAG, \; %RMS_ADJ_DENSITY, \ Option value is ignored; RMS_ADJ_ENERGY); ```; Furthermore, if an error occurs now during the processing of the config file, the line number is also printed in order to quickly identify the location.; ; 2. Paraview XML format is now the default format (*.vtu) if the option `OUTPUT_FILES` is not present. I wanted to do that already when I added the XML format in January, but I simply forgot... The old format can be used with `PARAVIEW_LEGACY` and `SURFACE_PARAVIEW_LEGACY`. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/996
https://github.com/su2code/SU2/pull/996:1792,Testability,test,test,1792,"## Proposed Changes. This PR just contains two small changes:. 1. I added the capability to use multi-line statements in the config file. That should make the file a little bit more readable, especially for list options. To continue a statement in the next line, use `\` at the end of the current line. Commented lines and everything after the `\` are skipped. That means the following way to specify an option works now:; ```; SCREEN_OUTPUT=(INNER_ITER, \ % A comment that is ignored; WALL_TIME, \; RMS_DENSITY, \; LIFT, \; DRAG, \; %CAUCHY_SENS_PRESS, \ Option value is ignored; CAUCHY_DRAG, \; %RMS_ADJ_DENSITY, \ Option value is ignored; RMS_ADJ_ENERGY); ```; Furthermore, if an error occurs now during the processing of the config file, the line number is also printed in order to quickly identify the location.; ; 2. Paraview XML format is now the default format (*.vtu) if the option `OUTPUT_FILES` is not present. I wanted to do that already when I added the XML format in January, but I simply forgot... The old format can be used with `PARAVIEW_LEGACY` and `SURFACE_PARAVIEW_LEGACY`. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/996
https://github.com/su2code/SU2/pull/996:996,Usability,simpl,simply,996,"## Proposed Changes. This PR just contains two small changes:. 1. I added the capability to use multi-line statements in the config file. That should make the file a little bit more readable, especially for list options. To continue a statement in the next line, use `\` at the end of the current line. Commented lines and everything after the `\` are skipped. That means the following way to specify an option works now:; ```; SCREEN_OUTPUT=(INNER_ITER, \ % A comment that is ignored; WALL_TIME, \; RMS_DENSITY, \; LIFT, \; DRAG, \; %CAUCHY_SENS_PRESS, \ Option value is ignored; CAUCHY_DRAG, \; %RMS_ADJ_DENSITY, \ Option value is ignored; RMS_ADJ_ENERGY); ```; Furthermore, if an error occurs now during the processing of the config file, the line number is also printed in order to quickly identify the location.; ; 2. Paraview XML format is now the default format (*.vtu) if the option `OUTPUT_FILES` is not present. I wanted to do that already when I added the XML format in January, but I simply forgot... The old format can be used with `PARAVIEW_LEGACY` and `SURFACE_PARAVIEW_LEGACY`. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/996
https://github.com/su2code/SU2/pull/996:1414,Usability,guid,guide,1414,"## Proposed Changes. This PR just contains two small changes:. 1. I added the capability to use multi-line statements in the config file. That should make the file a little bit more readable, especially for list options. To continue a statement in the next line, use `\` at the end of the current line. Commented lines and everything after the `\` are skipped. That means the following way to specify an option works now:; ```; SCREEN_OUTPUT=(INNER_ITER, \ % A comment that is ignored; WALL_TIME, \; RMS_DENSITY, \; LIFT, \; DRAG, \; %CAUCHY_SENS_PRESS, \ Option value is ignored; CAUCHY_DRAG, \; %RMS_ADJ_DENSITY, \ Option value is ignored; RMS_ADJ_ENERGY); ```; Furthermore, if an error occurs now during the processing of the config file, the line number is also printed in order to quickly identify the location.; ; 2. Paraview XML format is now the default format (*.vtu) if the option `OUTPUT_FILES` is not present. I wanted to do that already when I added the XML format in January, but I simply forgot... The old format can be used with `PARAVIEW_LEGACY` and `SURFACE_PARAVIEW_LEGACY`. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/996
https://github.com/su2code/SU2/issues/997:94,Modifiability,config,config,94,"Hello. I have been trying to work with test case ""Caradonna_tung"". I have obtained the latest config file and mesh file i believe. Hovewer, when i run the solver, it gives value ""zero"" for everything and seemingly converged after only 10 iterations. I believe i could not initialize the solver. Can anyone help me with it ? Thank you. [caradonna_tung.zip](https://github.com/su2code/SU2/files/4664054/caradonna_tung.zip)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/997
https://github.com/su2code/SU2/issues/997:39,Testability,test,test,39,"Hello. I have been trying to work with test case ""Caradonna_tung"". I have obtained the latest config file and mesh file i believe. Hovewer, when i run the solver, it gives value ""zero"" for everything and seemingly converged after only 10 iterations. I believe i could not initialize the solver. Can anyone help me with it ? Thank you. [caradonna_tung.zip](https://github.com/su2code/SU2/files/4664054/caradonna_tung.zip)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/997
https://github.com/su2code/SU2/pull/998:26,Deployability,update,updates,26,"## Proposed Changes. This updates ninja and meson submodules. . ## Related Work. Should solve e.g. the problem of finding python 3.8 mentioned in #991 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/998
https://github.com/su2code/SU2/pull/998:776,Deployability,update,updated,776,"## Proposed Changes. This updates ninja and meson submodules. . ## Related Work. Should solve e.g. the problem of finding python 3.8 mentioned in #991 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/998
https://github.com/su2code/SU2/pull/998:703,Testability,test,test,703,"## Proposed Changes. This updates ninja and meson submodules. . ## Related Work. Should solve e.g. the problem of finding python 3.8 mentioned in #991 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/998
https://github.com/su2code/SU2/pull/998:325,Usability,guid,guide,325,"## Proposed Changes. This updates ninja and meson submodules. . ## Related Work. Should solve e.g. the problem of finding python 3.8 mentioned in #991 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/998
https://github.com/su2code/SU2/issues/1000:269,Availability,error,error,269,"So I built SU2 after addressing all the problems in #991, it worked just fine with openmpi. However, I would prefer to install it with mpich since I use it for different other programs as well. The built was successful but SU2 does not run and fails with the following error. I tried it with mpich v3.3.1 as well (my previous SU2 v6.2 was running on this). ```; slimshady@arch-linux-hp-probook-g3-450: SU2HOME$ SU2_CFD; [arch-linux-hp-probook-g3-450:590584] *** Process received signal ***; [arch-linux-hp-probook-g3-450:590584] Signal: Segmentation fault (11); [arch-linux-hp-probook-g3-450:590584] Signal code: Address not mapped (1); [arch-linux-hp-probook-g3-450:590584] Failing at address: 0x440000e8; [arch-linux-hp-probook-g3-450:590584] [ 0] /usr/lib/libc.so.6(+0x3bd70)[0x7f6d73811d70]; [arch-linux-hp-probook-g3-450:590584] [ 1] /usr/lib/openmpi/libmpi.so.40(PMPI_Comm_rank+0x37)[0x7f6d75627837]; [arch-linux-hp-probook-g3-450:590584] [ 2] SU2_CFD(+0x1023dc)[0x563dd30cd3dc]; [arch-linux-hp-probook-g3-450:590584] [ 3] /usr/lib/libc.so.6(__libc_start_main+0xf3)[0x7f6d737fd023]; [arch-linux-hp-probook-g3-450:590584] [ 4] SU2_CFD(+0x118bbe)[0x563dd30e3bbe]; [arch-linux-hp-probook-g3-450:590584] *** End of error message ***; Segmentation fault (core dumped); ```. **Desktop (please complete the following information):**; - OS: Arch Linux x86_64; - C++ compiler and version: g++, gcc 9.2.1; - MPI implementation and version: OpenMPI v4.0.2; MPICH v3.3.2; - SU2 Version: v7.0.4; - Python Version: 3.8.1. This is my output of `mpirun --version`, if that is useful:; ```; HYDRA build details:; Version: 3.3.2; Release Date: Tue Nov 12 21:23:16 CST 2019; CC: gcc ; CXX: g++ ; F77: gfortran ; F90: gfortran ; Configure options: '--disable-option-checking' '--prefix=NONE' '--cache-file=/dev/null' '--srcdir=/home/slimshady/Downloads/mpich-3.3.2/src/pm/hydra' 'CC=gcc' 'CFLAGS= -O2' 'LDFLAGS=' 'LIBS=' 'CPPFLAGS= -I/home/slimshady/UserPackages/MPICH_HOME/src/mpl/include -I/home/slimshady/Downloa",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000
https://github.com/su2code/SU2/issues/1000:550,Availability,fault,fault,550,"So I built SU2 after addressing all the problems in #991, it worked just fine with openmpi. However, I would prefer to install it with mpich since I use it for different other programs as well. The built was successful but SU2 does not run and fails with the following error. I tried it with mpich v3.3.1 as well (my previous SU2 v6.2 was running on this). ```; slimshady@arch-linux-hp-probook-g3-450: SU2HOME$ SU2_CFD; [arch-linux-hp-probook-g3-450:590584] *** Process received signal ***; [arch-linux-hp-probook-g3-450:590584] Signal: Segmentation fault (11); [arch-linux-hp-probook-g3-450:590584] Signal code: Address not mapped (1); [arch-linux-hp-probook-g3-450:590584] Failing at address: 0x440000e8; [arch-linux-hp-probook-g3-450:590584] [ 0] /usr/lib/libc.so.6(+0x3bd70)[0x7f6d73811d70]; [arch-linux-hp-probook-g3-450:590584] [ 1] /usr/lib/openmpi/libmpi.so.40(PMPI_Comm_rank+0x37)[0x7f6d75627837]; [arch-linux-hp-probook-g3-450:590584] [ 2] SU2_CFD(+0x1023dc)[0x563dd30cd3dc]; [arch-linux-hp-probook-g3-450:590584] [ 3] /usr/lib/libc.so.6(__libc_start_main+0xf3)[0x7f6d737fd023]; [arch-linux-hp-probook-g3-450:590584] [ 4] SU2_CFD(+0x118bbe)[0x563dd30e3bbe]; [arch-linux-hp-probook-g3-450:590584] *** End of error message ***; Segmentation fault (core dumped); ```. **Desktop (please complete the following information):**; - OS: Arch Linux x86_64; - C++ compiler and version: g++, gcc 9.2.1; - MPI implementation and version: OpenMPI v4.0.2; MPICH v3.3.2; - SU2 Version: v7.0.4; - Python Version: 3.8.1. This is my output of `mpirun --version`, if that is useful:; ```; HYDRA build details:; Version: 3.3.2; Release Date: Tue Nov 12 21:23:16 CST 2019; CC: gcc ; CXX: g++ ; F77: gfortran ; F90: gfortran ; Configure options: '--disable-option-checking' '--prefix=NONE' '--cache-file=/dev/null' '--srcdir=/home/slimshady/Downloads/mpich-3.3.2/src/pm/hydra' 'CC=gcc' 'CFLAGS= -O2' 'LDFLAGS=' 'LIBS=' 'CPPFLAGS= -I/home/slimshady/UserPackages/MPICH_HOME/src/mpl/include -I/home/slimshady/Downloa",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000
https://github.com/su2code/SU2/issues/1000:1217,Availability,error,error,1217,"different other programs as well. The built was successful but SU2 does not run and fails with the following error. I tried it with mpich v3.3.1 as well (my previous SU2 v6.2 was running on this). ```; slimshady@arch-linux-hp-probook-g3-450: SU2HOME$ SU2_CFD; [arch-linux-hp-probook-g3-450:590584] *** Process received signal ***; [arch-linux-hp-probook-g3-450:590584] Signal: Segmentation fault (11); [arch-linux-hp-probook-g3-450:590584] Signal code: Address not mapped (1); [arch-linux-hp-probook-g3-450:590584] Failing at address: 0x440000e8; [arch-linux-hp-probook-g3-450:590584] [ 0] /usr/lib/libc.so.6(+0x3bd70)[0x7f6d73811d70]; [arch-linux-hp-probook-g3-450:590584] [ 1] /usr/lib/openmpi/libmpi.so.40(PMPI_Comm_rank+0x37)[0x7f6d75627837]; [arch-linux-hp-probook-g3-450:590584] [ 2] SU2_CFD(+0x1023dc)[0x563dd30cd3dc]; [arch-linux-hp-probook-g3-450:590584] [ 3] /usr/lib/libc.so.6(__libc_start_main+0xf3)[0x7f6d737fd023]; [arch-linux-hp-probook-g3-450:590584] [ 4] SU2_CFD(+0x118bbe)[0x563dd30e3bbe]; [arch-linux-hp-probook-g3-450:590584] *** End of error message ***; Segmentation fault (core dumped); ```. **Desktop (please complete the following information):**; - OS: Arch Linux x86_64; - C++ compiler and version: g++, gcc 9.2.1; - MPI implementation and version: OpenMPI v4.0.2; MPICH v3.3.2; - SU2 Version: v7.0.4; - Python Version: 3.8.1. This is my output of `mpirun --version`, if that is useful:; ```; HYDRA build details:; Version: 3.3.2; Release Date: Tue Nov 12 21:23:16 CST 2019; CC: gcc ; CXX: g++ ; F77: gfortran ; F90: gfortran ; Configure options: '--disable-option-checking' '--prefix=NONE' '--cache-file=/dev/null' '--srcdir=/home/slimshady/Downloads/mpich-3.3.2/src/pm/hydra' 'CC=gcc' 'CFLAGS= -O2' 'LDFLAGS=' 'LIBS=' 'CPPFLAGS= -I/home/slimshady/UserPackages/MPICH_HOME/src/mpl/include -I/home/slimshady/Downloads/mpich-3.3.2/src/mpl/include -I/home/slimshady/Downloads/mpich-3.3.2/src/openpa/src -I/home/slimshady/UserPackages/MPICH_HOME/src/openpa/src -D_REENTRANT -I/",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000
https://github.com/su2code/SU2/issues/1000:1249,Availability,fault,fault,1249,"different other programs as well. The built was successful but SU2 does not run and fails with the following error. I tried it with mpich v3.3.1 as well (my previous SU2 v6.2 was running on this). ```; slimshady@arch-linux-hp-probook-g3-450: SU2HOME$ SU2_CFD; [arch-linux-hp-probook-g3-450:590584] *** Process received signal ***; [arch-linux-hp-probook-g3-450:590584] Signal: Segmentation fault (11); [arch-linux-hp-probook-g3-450:590584] Signal code: Address not mapped (1); [arch-linux-hp-probook-g3-450:590584] Failing at address: 0x440000e8; [arch-linux-hp-probook-g3-450:590584] [ 0] /usr/lib/libc.so.6(+0x3bd70)[0x7f6d73811d70]; [arch-linux-hp-probook-g3-450:590584] [ 1] /usr/lib/openmpi/libmpi.so.40(PMPI_Comm_rank+0x37)[0x7f6d75627837]; [arch-linux-hp-probook-g3-450:590584] [ 2] SU2_CFD(+0x1023dc)[0x563dd30cd3dc]; [arch-linux-hp-probook-g3-450:590584] [ 3] /usr/lib/libc.so.6(__libc_start_main+0xf3)[0x7f6d737fd023]; [arch-linux-hp-probook-g3-450:590584] [ 4] SU2_CFD(+0x118bbe)[0x563dd30e3bbe]; [arch-linux-hp-probook-g3-450:590584] *** End of error message ***; Segmentation fault (core dumped); ```. **Desktop (please complete the following information):**; - OS: Arch Linux x86_64; - C++ compiler and version: g++, gcc 9.2.1; - MPI implementation and version: OpenMPI v4.0.2; MPICH v3.3.2; - SU2 Version: v7.0.4; - Python Version: 3.8.1. This is my output of `mpirun --version`, if that is useful:; ```; HYDRA build details:; Version: 3.3.2; Release Date: Tue Nov 12 21:23:16 CST 2019; CC: gcc ; CXX: g++ ; F77: gfortran ; F90: gfortran ; Configure options: '--disable-option-checking' '--prefix=NONE' '--cache-file=/dev/null' '--srcdir=/home/slimshady/Downloads/mpich-3.3.2/src/pm/hydra' 'CC=gcc' 'CFLAGS= -O2' 'LDFLAGS=' 'LIBS=' 'CPPFLAGS= -I/home/slimshady/UserPackages/MPICH_HOME/src/mpl/include -I/home/slimshady/Downloads/mpich-3.3.2/src/mpl/include -I/home/slimshady/Downloads/mpich-3.3.2/src/openpa/src -I/home/slimshady/UserPackages/MPICH_HOME/src/openpa/src -D_REENTRANT -I/",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000
https://github.com/su2code/SU2/issues/1000:1829,Availability,Down,Downloads,1829,"3-450:590584] [ 0] /usr/lib/libc.so.6(+0x3bd70)[0x7f6d73811d70]; [arch-linux-hp-probook-g3-450:590584] [ 1] /usr/lib/openmpi/libmpi.so.40(PMPI_Comm_rank+0x37)[0x7f6d75627837]; [arch-linux-hp-probook-g3-450:590584] [ 2] SU2_CFD(+0x1023dc)[0x563dd30cd3dc]; [arch-linux-hp-probook-g3-450:590584] [ 3] /usr/lib/libc.so.6(__libc_start_main+0xf3)[0x7f6d737fd023]; [arch-linux-hp-probook-g3-450:590584] [ 4] SU2_CFD(+0x118bbe)[0x563dd30e3bbe]; [arch-linux-hp-probook-g3-450:590584] *** End of error message ***; Segmentation fault (core dumped); ```. **Desktop (please complete the following information):**; - OS: Arch Linux x86_64; - C++ compiler and version: g++, gcc 9.2.1; - MPI implementation and version: OpenMPI v4.0.2; MPICH v3.3.2; - SU2 Version: v7.0.4; - Python Version: 3.8.1. This is my output of `mpirun --version`, if that is useful:; ```; HYDRA build details:; Version: 3.3.2; Release Date: Tue Nov 12 21:23:16 CST 2019; CC: gcc ; CXX: g++ ; F77: gfortran ; F90: gfortran ; Configure options: '--disable-option-checking' '--prefix=NONE' '--cache-file=/dev/null' '--srcdir=/home/slimshady/Downloads/mpich-3.3.2/src/pm/hydra' 'CC=gcc' 'CFLAGS= -O2' 'LDFLAGS=' 'LIBS=' 'CPPFLAGS= -I/home/slimshady/UserPackages/MPICH_HOME/src/mpl/include -I/home/slimshady/Downloads/mpich-3.3.2/src/mpl/include -I/home/slimshady/Downloads/mpich-3.3.2/src/openpa/src -I/home/slimshady/UserPackages/MPICH_HOME/src/openpa/src -D_REENTRANT -I/home/slimshady/UserPackages/MPICH_HOME/src/mpi/romio/include' 'MPLLIBNAME=mpl'; Process Manager: pmi; Launchers available: ssh rsh fork slurm ll lsf sge manual persist; Topology libraries available: hwloc; Resource management kernels available: user slurm ll lsf sge pbs cobalt; Checkpointing libraries available: ; Demux engines available: poll select. ```. The build runs on an ubuntu machine with the following details:; - OS: Ubuntu 18.04.4 LTS x86_64; - C++ compiler and version: g++, gcc 7.5.0; - MPI implementation and version: MPICH 3.3.1; - SU2 Version: v7.0.4; ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000
https://github.com/su2code/SU2/issues/1000:1994,Availability,Down,Downloads,1994,"pi.so.40(PMPI_Comm_rank+0x37)[0x7f6d75627837]; [arch-linux-hp-probook-g3-450:590584] [ 2] SU2_CFD(+0x1023dc)[0x563dd30cd3dc]; [arch-linux-hp-probook-g3-450:590584] [ 3] /usr/lib/libc.so.6(__libc_start_main+0xf3)[0x7f6d737fd023]; [arch-linux-hp-probook-g3-450:590584] [ 4] SU2_CFD(+0x118bbe)[0x563dd30e3bbe]; [arch-linux-hp-probook-g3-450:590584] *** End of error message ***; Segmentation fault (core dumped); ```. **Desktop (please complete the following information):**; - OS: Arch Linux x86_64; - C++ compiler and version: g++, gcc 9.2.1; - MPI implementation and version: OpenMPI v4.0.2; MPICH v3.3.2; - SU2 Version: v7.0.4; - Python Version: 3.8.1. This is my output of `mpirun --version`, if that is useful:; ```; HYDRA build details:; Version: 3.3.2; Release Date: Tue Nov 12 21:23:16 CST 2019; CC: gcc ; CXX: g++ ; F77: gfortran ; F90: gfortran ; Configure options: '--disable-option-checking' '--prefix=NONE' '--cache-file=/dev/null' '--srcdir=/home/slimshady/Downloads/mpich-3.3.2/src/pm/hydra' 'CC=gcc' 'CFLAGS= -O2' 'LDFLAGS=' 'LIBS=' 'CPPFLAGS= -I/home/slimshady/UserPackages/MPICH_HOME/src/mpl/include -I/home/slimshady/Downloads/mpich-3.3.2/src/mpl/include -I/home/slimshady/Downloads/mpich-3.3.2/src/openpa/src -I/home/slimshady/UserPackages/MPICH_HOME/src/openpa/src -D_REENTRANT -I/home/slimshady/UserPackages/MPICH_HOME/src/mpi/romio/include' 'MPLLIBNAME=mpl'; Process Manager: pmi; Launchers available: ssh rsh fork slurm ll lsf sge manual persist; Topology libraries available: hwloc; Resource management kernels available: user slurm ll lsf sge pbs cobalt; Checkpointing libraries available: ; Demux engines available: poll select. ```. The build runs on an ubuntu machine with the following details:; - OS: Ubuntu 18.04.4 LTS x86_64; - C++ compiler and version: g++, gcc 7.5.0; - MPI implementation and version: MPICH 3.3.1; - SU2 Version: v7.0.4; - Python version: 3.6.9. I am not sure if this is a machine problem or a compatibility issue. Thank you for you help in advanced!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000
https://github.com/su2code/SU2/issues/1000:2050,Availability,Down,Downloads,2050,"pi.so.40(PMPI_Comm_rank+0x37)[0x7f6d75627837]; [arch-linux-hp-probook-g3-450:590584] [ 2] SU2_CFD(+0x1023dc)[0x563dd30cd3dc]; [arch-linux-hp-probook-g3-450:590584] [ 3] /usr/lib/libc.so.6(__libc_start_main+0xf3)[0x7f6d737fd023]; [arch-linux-hp-probook-g3-450:590584] [ 4] SU2_CFD(+0x118bbe)[0x563dd30e3bbe]; [arch-linux-hp-probook-g3-450:590584] *** End of error message ***; Segmentation fault (core dumped); ```. **Desktop (please complete the following information):**; - OS: Arch Linux x86_64; - C++ compiler and version: g++, gcc 9.2.1; - MPI implementation and version: OpenMPI v4.0.2; MPICH v3.3.2; - SU2 Version: v7.0.4; - Python Version: 3.8.1. This is my output of `mpirun --version`, if that is useful:; ```; HYDRA build details:; Version: 3.3.2; Release Date: Tue Nov 12 21:23:16 CST 2019; CC: gcc ; CXX: g++ ; F77: gfortran ; F90: gfortran ; Configure options: '--disable-option-checking' '--prefix=NONE' '--cache-file=/dev/null' '--srcdir=/home/slimshady/Downloads/mpich-3.3.2/src/pm/hydra' 'CC=gcc' 'CFLAGS= -O2' 'LDFLAGS=' 'LIBS=' 'CPPFLAGS= -I/home/slimshady/UserPackages/MPICH_HOME/src/mpl/include -I/home/slimshady/Downloads/mpich-3.3.2/src/mpl/include -I/home/slimshady/Downloads/mpich-3.3.2/src/openpa/src -I/home/slimshady/UserPackages/MPICH_HOME/src/openpa/src -D_REENTRANT -I/home/slimshady/UserPackages/MPICH_HOME/src/mpi/romio/include' 'MPLLIBNAME=mpl'; Process Manager: pmi; Launchers available: ssh rsh fork slurm ll lsf sge manual persist; Topology libraries available: hwloc; Resource management kernels available: user slurm ll lsf sge pbs cobalt; Checkpointing libraries available: ; Demux engines available: poll select. ```. The build runs on an ubuntu machine with the following details:; - OS: Ubuntu 18.04.4 LTS x86_64; - C++ compiler and version: g++, gcc 7.5.0; - MPI implementation and version: MPICH 3.3.1; - SU2 Version: v7.0.4; - Python version: 3.6.9. I am not sure if this is a machine problem or a compatibility issue. Thank you for you help in advanced!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000
https://github.com/su2code/SU2/issues/1000:2272,Availability,avail,available,2272,"pi.so.40(PMPI_Comm_rank+0x37)[0x7f6d75627837]; [arch-linux-hp-probook-g3-450:590584] [ 2] SU2_CFD(+0x1023dc)[0x563dd30cd3dc]; [arch-linux-hp-probook-g3-450:590584] [ 3] /usr/lib/libc.so.6(__libc_start_main+0xf3)[0x7f6d737fd023]; [arch-linux-hp-probook-g3-450:590584] [ 4] SU2_CFD(+0x118bbe)[0x563dd30e3bbe]; [arch-linux-hp-probook-g3-450:590584] *** End of error message ***; Segmentation fault (core dumped); ```. **Desktop (please complete the following information):**; - OS: Arch Linux x86_64; - C++ compiler and version: g++, gcc 9.2.1; - MPI implementation and version: OpenMPI v4.0.2; MPICH v3.3.2; - SU2 Version: v7.0.4; - Python Version: 3.8.1. This is my output of `mpirun --version`, if that is useful:; ```; HYDRA build details:; Version: 3.3.2; Release Date: Tue Nov 12 21:23:16 CST 2019; CC: gcc ; CXX: g++ ; F77: gfortran ; F90: gfortran ; Configure options: '--disable-option-checking' '--prefix=NONE' '--cache-file=/dev/null' '--srcdir=/home/slimshady/Downloads/mpich-3.3.2/src/pm/hydra' 'CC=gcc' 'CFLAGS= -O2' 'LDFLAGS=' 'LIBS=' 'CPPFLAGS= -I/home/slimshady/UserPackages/MPICH_HOME/src/mpl/include -I/home/slimshady/Downloads/mpich-3.3.2/src/mpl/include -I/home/slimshady/Downloads/mpich-3.3.2/src/openpa/src -I/home/slimshady/UserPackages/MPICH_HOME/src/openpa/src -D_REENTRANT -I/home/slimshady/UserPackages/MPICH_HOME/src/mpi/romio/include' 'MPLLIBNAME=mpl'; Process Manager: pmi; Launchers available: ssh rsh fork slurm ll lsf sge manual persist; Topology libraries available: hwloc; Resource management kernels available: user slurm ll lsf sge pbs cobalt; Checkpointing libraries available: ; Demux engines available: poll select. ```. The build runs on an ubuntu machine with the following details:; - OS: Ubuntu 18.04.4 LTS x86_64; - C++ compiler and version: g++, gcc 7.5.0; - MPI implementation and version: MPICH 3.3.1; - SU2 Version: v7.0.4; - Python version: 3.6.9. I am not sure if this is a machine problem or a compatibility issue. Thank you for you help in advanced!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000
https://github.com/su2code/SU2/issues/1000:2348,Availability,avail,available,2348,"pi.so.40(PMPI_Comm_rank+0x37)[0x7f6d75627837]; [arch-linux-hp-probook-g3-450:590584] [ 2] SU2_CFD(+0x1023dc)[0x563dd30cd3dc]; [arch-linux-hp-probook-g3-450:590584] [ 3] /usr/lib/libc.so.6(__libc_start_main+0xf3)[0x7f6d737fd023]; [arch-linux-hp-probook-g3-450:590584] [ 4] SU2_CFD(+0x118bbe)[0x563dd30e3bbe]; [arch-linux-hp-probook-g3-450:590584] *** End of error message ***; Segmentation fault (core dumped); ```. **Desktop (please complete the following information):**; - OS: Arch Linux x86_64; - C++ compiler and version: g++, gcc 9.2.1; - MPI implementation and version: OpenMPI v4.0.2; MPICH v3.3.2; - SU2 Version: v7.0.4; - Python Version: 3.8.1. This is my output of `mpirun --version`, if that is useful:; ```; HYDRA build details:; Version: 3.3.2; Release Date: Tue Nov 12 21:23:16 CST 2019; CC: gcc ; CXX: g++ ; F77: gfortran ; F90: gfortran ; Configure options: '--disable-option-checking' '--prefix=NONE' '--cache-file=/dev/null' '--srcdir=/home/slimshady/Downloads/mpich-3.3.2/src/pm/hydra' 'CC=gcc' 'CFLAGS= -O2' 'LDFLAGS=' 'LIBS=' 'CPPFLAGS= -I/home/slimshady/UserPackages/MPICH_HOME/src/mpl/include -I/home/slimshady/Downloads/mpich-3.3.2/src/mpl/include -I/home/slimshady/Downloads/mpich-3.3.2/src/openpa/src -I/home/slimshady/UserPackages/MPICH_HOME/src/openpa/src -D_REENTRANT -I/home/slimshady/UserPackages/MPICH_HOME/src/mpi/romio/include' 'MPLLIBNAME=mpl'; Process Manager: pmi; Launchers available: ssh rsh fork slurm ll lsf sge manual persist; Topology libraries available: hwloc; Resource management kernels available: user slurm ll lsf sge pbs cobalt; Checkpointing libraries available: ; Demux engines available: poll select. ```. The build runs on an ubuntu machine with the following details:; - OS: Ubuntu 18.04.4 LTS x86_64; - C++ compiler and version: g++, gcc 7.5.0; - MPI implementation and version: MPICH 3.3.1; - SU2 Version: v7.0.4; - Python version: 3.6.9. I am not sure if this is a machine problem or a compatibility issue. Thank you for you help in advanced!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000
https://github.com/su2code/SU2/issues/1000:2394,Availability,avail,available,2394,"pi.so.40(PMPI_Comm_rank+0x37)[0x7f6d75627837]; [arch-linux-hp-probook-g3-450:590584] [ 2] SU2_CFD(+0x1023dc)[0x563dd30cd3dc]; [arch-linux-hp-probook-g3-450:590584] [ 3] /usr/lib/libc.so.6(__libc_start_main+0xf3)[0x7f6d737fd023]; [arch-linux-hp-probook-g3-450:590584] [ 4] SU2_CFD(+0x118bbe)[0x563dd30e3bbe]; [arch-linux-hp-probook-g3-450:590584] *** End of error message ***; Segmentation fault (core dumped); ```. **Desktop (please complete the following information):**; - OS: Arch Linux x86_64; - C++ compiler and version: g++, gcc 9.2.1; - MPI implementation and version: OpenMPI v4.0.2; MPICH v3.3.2; - SU2 Version: v7.0.4; - Python Version: 3.8.1. This is my output of `mpirun --version`, if that is useful:; ```; HYDRA build details:; Version: 3.3.2; Release Date: Tue Nov 12 21:23:16 CST 2019; CC: gcc ; CXX: g++ ; F77: gfortran ; F90: gfortran ; Configure options: '--disable-option-checking' '--prefix=NONE' '--cache-file=/dev/null' '--srcdir=/home/slimshady/Downloads/mpich-3.3.2/src/pm/hydra' 'CC=gcc' 'CFLAGS= -O2' 'LDFLAGS=' 'LIBS=' 'CPPFLAGS= -I/home/slimshady/UserPackages/MPICH_HOME/src/mpl/include -I/home/slimshady/Downloads/mpich-3.3.2/src/mpl/include -I/home/slimshady/Downloads/mpich-3.3.2/src/openpa/src -I/home/slimshady/UserPackages/MPICH_HOME/src/openpa/src -D_REENTRANT -I/home/slimshady/UserPackages/MPICH_HOME/src/mpi/romio/include' 'MPLLIBNAME=mpl'; Process Manager: pmi; Launchers available: ssh rsh fork slurm ll lsf sge manual persist; Topology libraries available: hwloc; Resource management kernels available: user slurm ll lsf sge pbs cobalt; Checkpointing libraries available: ; Demux engines available: poll select. ```. The build runs on an ubuntu machine with the following details:; - OS: Ubuntu 18.04.4 LTS x86_64; - C++ compiler and version: g++, gcc 7.5.0; - MPI implementation and version: MPICH 3.3.1; - SU2 Version: v7.0.4; - Python version: 3.6.9. I am not sure if this is a machine problem or a compatibility issue. Thank you for you help in advanced!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000
https://github.com/su2code/SU2/issues/1000:2439,Availability,Checkpoint,Checkpointing,2439,"pi.so.40(PMPI_Comm_rank+0x37)[0x7f6d75627837]; [arch-linux-hp-probook-g3-450:590584] [ 2] SU2_CFD(+0x1023dc)[0x563dd30cd3dc]; [arch-linux-hp-probook-g3-450:590584] [ 3] /usr/lib/libc.so.6(__libc_start_main+0xf3)[0x7f6d737fd023]; [arch-linux-hp-probook-g3-450:590584] [ 4] SU2_CFD(+0x118bbe)[0x563dd30e3bbe]; [arch-linux-hp-probook-g3-450:590584] *** End of error message ***; Segmentation fault (core dumped); ```. **Desktop (please complete the following information):**; - OS: Arch Linux x86_64; - C++ compiler and version: g++, gcc 9.2.1; - MPI implementation and version: OpenMPI v4.0.2; MPICH v3.3.2; - SU2 Version: v7.0.4; - Python Version: 3.8.1. This is my output of `mpirun --version`, if that is useful:; ```; HYDRA build details:; Version: 3.3.2; Release Date: Tue Nov 12 21:23:16 CST 2019; CC: gcc ; CXX: g++ ; F77: gfortran ; F90: gfortran ; Configure options: '--disable-option-checking' '--prefix=NONE' '--cache-file=/dev/null' '--srcdir=/home/slimshady/Downloads/mpich-3.3.2/src/pm/hydra' 'CC=gcc' 'CFLAGS= -O2' 'LDFLAGS=' 'LIBS=' 'CPPFLAGS= -I/home/slimshady/UserPackages/MPICH_HOME/src/mpl/include -I/home/slimshady/Downloads/mpich-3.3.2/src/mpl/include -I/home/slimshady/Downloads/mpich-3.3.2/src/openpa/src -I/home/slimshady/UserPackages/MPICH_HOME/src/openpa/src -D_REENTRANT -I/home/slimshady/UserPackages/MPICH_HOME/src/mpi/romio/include' 'MPLLIBNAME=mpl'; Process Manager: pmi; Launchers available: ssh rsh fork slurm ll lsf sge manual persist; Topology libraries available: hwloc; Resource management kernels available: user slurm ll lsf sge pbs cobalt; Checkpointing libraries available: ; Demux engines available: poll select. ```. The build runs on an ubuntu machine with the following details:; - OS: Ubuntu 18.04.4 LTS x86_64; - C++ compiler and version: g++, gcc 7.5.0; - MPI implementation and version: MPICH 3.3.1; - SU2 Version: v7.0.4; - Python version: 3.6.9. I am not sure if this is a machine problem or a compatibility issue. Thank you for you help in advanced!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000
https://github.com/su2code/SU2/issues/1000:2463,Availability,avail,available,2463,"pi.so.40(PMPI_Comm_rank+0x37)[0x7f6d75627837]; [arch-linux-hp-probook-g3-450:590584] [ 2] SU2_CFD(+0x1023dc)[0x563dd30cd3dc]; [arch-linux-hp-probook-g3-450:590584] [ 3] /usr/lib/libc.so.6(__libc_start_main+0xf3)[0x7f6d737fd023]; [arch-linux-hp-probook-g3-450:590584] [ 4] SU2_CFD(+0x118bbe)[0x563dd30e3bbe]; [arch-linux-hp-probook-g3-450:590584] *** End of error message ***; Segmentation fault (core dumped); ```. **Desktop (please complete the following information):**; - OS: Arch Linux x86_64; - C++ compiler and version: g++, gcc 9.2.1; - MPI implementation and version: OpenMPI v4.0.2; MPICH v3.3.2; - SU2 Version: v7.0.4; - Python Version: 3.8.1. This is my output of `mpirun --version`, if that is useful:; ```; HYDRA build details:; Version: 3.3.2; Release Date: Tue Nov 12 21:23:16 CST 2019; CC: gcc ; CXX: g++ ; F77: gfortran ; F90: gfortran ; Configure options: '--disable-option-checking' '--prefix=NONE' '--cache-file=/dev/null' '--srcdir=/home/slimshady/Downloads/mpich-3.3.2/src/pm/hydra' 'CC=gcc' 'CFLAGS= -O2' 'LDFLAGS=' 'LIBS=' 'CPPFLAGS= -I/home/slimshady/UserPackages/MPICH_HOME/src/mpl/include -I/home/slimshady/Downloads/mpich-3.3.2/src/mpl/include -I/home/slimshady/Downloads/mpich-3.3.2/src/openpa/src -I/home/slimshady/UserPackages/MPICH_HOME/src/openpa/src -D_REENTRANT -I/home/slimshady/UserPackages/MPICH_HOME/src/mpi/romio/include' 'MPLLIBNAME=mpl'; Process Manager: pmi; Launchers available: ssh rsh fork slurm ll lsf sge manual persist; Topology libraries available: hwloc; Resource management kernels available: user slurm ll lsf sge pbs cobalt; Checkpointing libraries available: ; Demux engines available: poll select. ```. The build runs on an ubuntu machine with the following details:; - OS: Ubuntu 18.04.4 LTS x86_64; - C++ compiler and version: g++, gcc 7.5.0; - MPI implementation and version: MPICH 3.3.1; - SU2 Version: v7.0.4; - Python version: 3.6.9. I am not sure if this is a machine problem or a compatibility issue. Thank you for you help in advanced!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000
https://github.com/su2code/SU2/issues/1000:2490,Availability,avail,available,2490,"pi.so.40(PMPI_Comm_rank+0x37)[0x7f6d75627837]; [arch-linux-hp-probook-g3-450:590584] [ 2] SU2_CFD(+0x1023dc)[0x563dd30cd3dc]; [arch-linux-hp-probook-g3-450:590584] [ 3] /usr/lib/libc.so.6(__libc_start_main+0xf3)[0x7f6d737fd023]; [arch-linux-hp-probook-g3-450:590584] [ 4] SU2_CFD(+0x118bbe)[0x563dd30e3bbe]; [arch-linux-hp-probook-g3-450:590584] *** End of error message ***; Segmentation fault (core dumped); ```. **Desktop (please complete the following information):**; - OS: Arch Linux x86_64; - C++ compiler and version: g++, gcc 9.2.1; - MPI implementation and version: OpenMPI v4.0.2; MPICH v3.3.2; - SU2 Version: v7.0.4; - Python Version: 3.8.1. This is my output of `mpirun --version`, if that is useful:; ```; HYDRA build details:; Version: 3.3.2; Release Date: Tue Nov 12 21:23:16 CST 2019; CC: gcc ; CXX: g++ ; F77: gfortran ; F90: gfortran ; Configure options: '--disable-option-checking' '--prefix=NONE' '--cache-file=/dev/null' '--srcdir=/home/slimshady/Downloads/mpich-3.3.2/src/pm/hydra' 'CC=gcc' 'CFLAGS= -O2' 'LDFLAGS=' 'LIBS=' 'CPPFLAGS= -I/home/slimshady/UserPackages/MPICH_HOME/src/mpl/include -I/home/slimshady/Downloads/mpich-3.3.2/src/mpl/include -I/home/slimshady/Downloads/mpich-3.3.2/src/openpa/src -I/home/slimshady/UserPackages/MPICH_HOME/src/openpa/src -D_REENTRANT -I/home/slimshady/UserPackages/MPICH_HOME/src/mpi/romio/include' 'MPLLIBNAME=mpl'; Process Manager: pmi; Launchers available: ssh rsh fork slurm ll lsf sge manual persist; Topology libraries available: hwloc; Resource management kernels available: user slurm ll lsf sge pbs cobalt; Checkpointing libraries available: ; Demux engines available: poll select. ```. The build runs on an ubuntu machine with the following details:; - OS: Ubuntu 18.04.4 LTS x86_64; - C++ compiler and version: g++, gcc 7.5.0; - MPI implementation and version: MPICH 3.3.1; - SU2 Version: v7.0.4; - Python version: 3.6.9. I am not sure if this is a machine problem or a compatibility issue. Thank you for you help in advanced!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000
https://github.com/su2code/SU2/issues/1000:119,Deployability,install,install,119,"So I built SU2 after addressing all the problems in #991, it worked just fine with openmpi. However, I would prefer to install it with mpich since I use it for different other programs as well. The built was successful but SU2 does not run and fails with the following error. I tried it with mpich v3.3.1 as well (my previous SU2 v6.2 was running on this). ```; slimshady@arch-linux-hp-probook-g3-450: SU2HOME$ SU2_CFD; [arch-linux-hp-probook-g3-450:590584] *** Process received signal ***; [arch-linux-hp-probook-g3-450:590584] Signal: Segmentation fault (11); [arch-linux-hp-probook-g3-450:590584] Signal code: Address not mapped (1); [arch-linux-hp-probook-g3-450:590584] Failing at address: 0x440000e8; [arch-linux-hp-probook-g3-450:590584] [ 0] /usr/lib/libc.so.6(+0x3bd70)[0x7f6d73811d70]; [arch-linux-hp-probook-g3-450:590584] [ 1] /usr/lib/openmpi/libmpi.so.40(PMPI_Comm_rank+0x37)[0x7f6d75627837]; [arch-linux-hp-probook-g3-450:590584] [ 2] SU2_CFD(+0x1023dc)[0x563dd30cd3dc]; [arch-linux-hp-probook-g3-450:590584] [ 3] /usr/lib/libc.so.6(__libc_start_main+0xf3)[0x7f6d737fd023]; [arch-linux-hp-probook-g3-450:590584] [ 4] SU2_CFD(+0x118bbe)[0x563dd30e3bbe]; [arch-linux-hp-probook-g3-450:590584] *** End of error message ***; Segmentation fault (core dumped); ```. **Desktop (please complete the following information):**; - OS: Arch Linux x86_64; - C++ compiler and version: g++, gcc 9.2.1; - MPI implementation and version: OpenMPI v4.0.2; MPICH v3.3.2; - SU2 Version: v7.0.4; - Python Version: 3.8.1. This is my output of `mpirun --version`, if that is useful:; ```; HYDRA build details:; Version: 3.3.2; Release Date: Tue Nov 12 21:23:16 CST 2019; CC: gcc ; CXX: g++ ; F77: gfortran ; F90: gfortran ; Configure options: '--disable-option-checking' '--prefix=NONE' '--cache-file=/dev/null' '--srcdir=/home/slimshady/Downloads/mpich-3.3.2/src/pm/hydra' 'CC=gcc' 'CFLAGS= -O2' 'LDFLAGS=' 'LIBS=' 'CPPFLAGS= -I/home/slimshady/UserPackages/MPICH_HOME/src/mpl/include -I/home/slimshady/Downloa",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000
https://github.com/su2code/SU2/issues/1000:1618,Deployability,Release,Release,1618,"3-450:590584] [ 0] /usr/lib/libc.so.6(+0x3bd70)[0x7f6d73811d70]; [arch-linux-hp-probook-g3-450:590584] [ 1] /usr/lib/openmpi/libmpi.so.40(PMPI_Comm_rank+0x37)[0x7f6d75627837]; [arch-linux-hp-probook-g3-450:590584] [ 2] SU2_CFD(+0x1023dc)[0x563dd30cd3dc]; [arch-linux-hp-probook-g3-450:590584] [ 3] /usr/lib/libc.so.6(__libc_start_main+0xf3)[0x7f6d737fd023]; [arch-linux-hp-probook-g3-450:590584] [ 4] SU2_CFD(+0x118bbe)[0x563dd30e3bbe]; [arch-linux-hp-probook-g3-450:590584] *** End of error message ***; Segmentation fault (core dumped); ```. **Desktop (please complete the following information):**; - OS: Arch Linux x86_64; - C++ compiler and version: g++, gcc 9.2.1; - MPI implementation and version: OpenMPI v4.0.2; MPICH v3.3.2; - SU2 Version: v7.0.4; - Python Version: 3.8.1. This is my output of `mpirun --version`, if that is useful:; ```; HYDRA build details:; Version: 3.3.2; Release Date: Tue Nov 12 21:23:16 CST 2019; CC: gcc ; CXX: g++ ; F77: gfortran ; F90: gfortran ; Configure options: '--disable-option-checking' '--prefix=NONE' '--cache-file=/dev/null' '--srcdir=/home/slimshady/Downloads/mpich-3.3.2/src/pm/hydra' 'CC=gcc' 'CFLAGS= -O2' 'LDFLAGS=' 'LIBS=' 'CPPFLAGS= -I/home/slimshady/UserPackages/MPICH_HOME/src/mpl/include -I/home/slimshady/Downloads/mpich-3.3.2/src/mpl/include -I/home/slimshady/Downloads/mpich-3.3.2/src/openpa/src -I/home/slimshady/UserPackages/MPICH_HOME/src/openpa/src -D_REENTRANT -I/home/slimshady/UserPackages/MPICH_HOME/src/mpi/romio/include' 'MPLLIBNAME=mpl'; Process Manager: pmi; Launchers available: ssh rsh fork slurm ll lsf sge manual persist; Topology libraries available: hwloc; Resource management kernels available: user slurm ll lsf sge pbs cobalt; Checkpointing libraries available: ; Demux engines available: poll select. ```. The build runs on an ubuntu machine with the following details:; - OS: Ubuntu 18.04.4 LTS x86_64; - C++ compiler and version: g++, gcc 7.5.0; - MPI implementation and version: MPICH 3.3.1; - SU2 Version: v7.0.4; ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000
https://github.com/su2code/SU2/issues/1000:1223,Integrability,message,message,1223,"different other programs as well. The built was successful but SU2 does not run and fails with the following error. I tried it with mpich v3.3.1 as well (my previous SU2 v6.2 was running on this). ```; slimshady@arch-linux-hp-probook-g3-450: SU2HOME$ SU2_CFD; [arch-linux-hp-probook-g3-450:590584] *** Process received signal ***; [arch-linux-hp-probook-g3-450:590584] Signal: Segmentation fault (11); [arch-linux-hp-probook-g3-450:590584] Signal code: Address not mapped (1); [arch-linux-hp-probook-g3-450:590584] Failing at address: 0x440000e8; [arch-linux-hp-probook-g3-450:590584] [ 0] /usr/lib/libc.so.6(+0x3bd70)[0x7f6d73811d70]; [arch-linux-hp-probook-g3-450:590584] [ 1] /usr/lib/openmpi/libmpi.so.40(PMPI_Comm_rank+0x37)[0x7f6d75627837]; [arch-linux-hp-probook-g3-450:590584] [ 2] SU2_CFD(+0x1023dc)[0x563dd30cd3dc]; [arch-linux-hp-probook-g3-450:590584] [ 3] /usr/lib/libc.so.6(__libc_start_main+0xf3)[0x7f6d737fd023]; [arch-linux-hp-probook-g3-450:590584] [ 4] SU2_CFD(+0x118bbe)[0x563dd30e3bbe]; [arch-linux-hp-probook-g3-450:590584] *** End of error message ***; Segmentation fault (core dumped); ```. **Desktop (please complete the following information):**; - OS: Arch Linux x86_64; - C++ compiler and version: g++, gcc 9.2.1; - MPI implementation and version: OpenMPI v4.0.2; MPICH v3.3.2; - SU2 Version: v7.0.4; - Python Version: 3.8.1. This is my output of `mpirun --version`, if that is useful:; ```; HYDRA build details:; Version: 3.3.2; Release Date: Tue Nov 12 21:23:16 CST 2019; CC: gcc ; CXX: g++ ; F77: gfortran ; F90: gfortran ; Configure options: '--disable-option-checking' '--prefix=NONE' '--cache-file=/dev/null' '--srcdir=/home/slimshady/Downloads/mpich-3.3.2/src/pm/hydra' 'CC=gcc' 'CFLAGS= -O2' 'LDFLAGS=' 'LIBS=' 'CPPFLAGS= -I/home/slimshady/UserPackages/MPICH_HOME/src/mpl/include -I/home/slimshady/Downloads/mpich-3.3.2/src/mpl/include -I/home/slimshady/Downloads/mpich-3.3.2/src/openpa/src -I/home/slimshady/UserPackages/MPICH_HOME/src/openpa/src -D_REENTRANT -I/",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000
https://github.com/su2code/SU2/issues/1000:1715,Modifiability,Config,Configure,1715,"3-450:590584] [ 0] /usr/lib/libc.so.6(+0x3bd70)[0x7f6d73811d70]; [arch-linux-hp-probook-g3-450:590584] [ 1] /usr/lib/openmpi/libmpi.so.40(PMPI_Comm_rank+0x37)[0x7f6d75627837]; [arch-linux-hp-probook-g3-450:590584] [ 2] SU2_CFD(+0x1023dc)[0x563dd30cd3dc]; [arch-linux-hp-probook-g3-450:590584] [ 3] /usr/lib/libc.so.6(__libc_start_main+0xf3)[0x7f6d737fd023]; [arch-linux-hp-probook-g3-450:590584] [ 4] SU2_CFD(+0x118bbe)[0x563dd30e3bbe]; [arch-linux-hp-probook-g3-450:590584] *** End of error message ***; Segmentation fault (core dumped); ```. **Desktop (please complete the following information):**; - OS: Arch Linux x86_64; - C++ compiler and version: g++, gcc 9.2.1; - MPI implementation and version: OpenMPI v4.0.2; MPICH v3.3.2; - SU2 Version: v7.0.4; - Python Version: 3.8.1. This is my output of `mpirun --version`, if that is useful:; ```; HYDRA build details:; Version: 3.3.2; Release Date: Tue Nov 12 21:23:16 CST 2019; CC: gcc ; CXX: g++ ; F77: gfortran ; F90: gfortran ; Configure options: '--disable-option-checking' '--prefix=NONE' '--cache-file=/dev/null' '--srcdir=/home/slimshady/Downloads/mpich-3.3.2/src/pm/hydra' 'CC=gcc' 'CFLAGS= -O2' 'LDFLAGS=' 'LIBS=' 'CPPFLAGS= -I/home/slimshady/UserPackages/MPICH_HOME/src/mpl/include -I/home/slimshady/Downloads/mpich-3.3.2/src/mpl/include -I/home/slimshady/Downloads/mpich-3.3.2/src/openpa/src -I/home/slimshady/UserPackages/MPICH_HOME/src/openpa/src -D_REENTRANT -I/home/slimshady/UserPackages/MPICH_HOME/src/mpi/romio/include' 'MPLLIBNAME=mpl'; Process Manager: pmi; Launchers available: ssh rsh fork slurm ll lsf sge manual persist; Topology libraries available: hwloc; Resource management kernels available: user slurm ll lsf sge pbs cobalt; Checkpointing libraries available: ; Demux engines available: poll select. ```. The build runs on an ubuntu machine with the following details:; - OS: Ubuntu 18.04.4 LTS x86_64; - C++ compiler and version: g++, gcc 7.5.0; - MPI implementation and version: MPICH 3.3.1; - SU2 Version: v7.0.4; ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000
https://github.com/su2code/SU2/issues/1000:1781,Performance,cache,cache-file,1781,"3-450:590584] [ 0] /usr/lib/libc.so.6(+0x3bd70)[0x7f6d73811d70]; [arch-linux-hp-probook-g3-450:590584] [ 1] /usr/lib/openmpi/libmpi.so.40(PMPI_Comm_rank+0x37)[0x7f6d75627837]; [arch-linux-hp-probook-g3-450:590584] [ 2] SU2_CFD(+0x1023dc)[0x563dd30cd3dc]; [arch-linux-hp-probook-g3-450:590584] [ 3] /usr/lib/libc.so.6(__libc_start_main+0xf3)[0x7f6d737fd023]; [arch-linux-hp-probook-g3-450:590584] [ 4] SU2_CFD(+0x118bbe)[0x563dd30e3bbe]; [arch-linux-hp-probook-g3-450:590584] *** End of error message ***; Segmentation fault (core dumped); ```. **Desktop (please complete the following information):**; - OS: Arch Linux x86_64; - C++ compiler and version: g++, gcc 9.2.1; - MPI implementation and version: OpenMPI v4.0.2; MPICH v3.3.2; - SU2 Version: v7.0.4; - Python Version: 3.8.1. This is my output of `mpirun --version`, if that is useful:; ```; HYDRA build details:; Version: 3.3.2; Release Date: Tue Nov 12 21:23:16 CST 2019; CC: gcc ; CXX: g++ ; F77: gfortran ; F90: gfortran ; Configure options: '--disable-option-checking' '--prefix=NONE' '--cache-file=/dev/null' '--srcdir=/home/slimshady/Downloads/mpich-3.3.2/src/pm/hydra' 'CC=gcc' 'CFLAGS= -O2' 'LDFLAGS=' 'LIBS=' 'CPPFLAGS= -I/home/slimshady/UserPackages/MPICH_HOME/src/mpl/include -I/home/slimshady/Downloads/mpich-3.3.2/src/mpl/include -I/home/slimshady/Downloads/mpich-3.3.2/src/openpa/src -I/home/slimshady/UserPackages/MPICH_HOME/src/openpa/src -D_REENTRANT -I/home/slimshady/UserPackages/MPICH_HOME/src/mpi/romio/include' 'MPLLIBNAME=mpl'; Process Manager: pmi; Launchers available: ssh rsh fork slurm ll lsf sge manual persist; Topology libraries available: hwloc; Resource management kernels available: user slurm ll lsf sge pbs cobalt; Checkpointing libraries available: ; Demux engines available: poll select. ```. The build runs on an ubuntu machine with the following details:; - OS: Ubuntu 18.04.4 LTS x86_64; - C++ compiler and version: g++, gcc 7.5.0; - MPI implementation and version: MPICH 3.3.1; - SU2 Version: v7.0.4; ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000
https://github.com/su2code/SU2/issues/1002:468,Performance,Load,LoadInletProfile,468,"Using MARKER_INLET applies the inlet profile correctly. Using:. `MARKER_GILES= (inlet, TOTAL_CONDITIONS_PT, 85E+03, 273.15, 1.0, 0.0, 0.0, 1.0, 1.0, outlet, RADIAL_EQUILIBRIUM, 69E+03, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0)`; `SPECIFIED_INLET_PROFILE=YES`. does say,; `Reading inlet profile from file: inlet_728-self.dat; `; but the inlet profiles are not correctly applied. It should also say something about whether interpolation is being used or not so my guess is that the LoadInletProfile subroutine is not being called. Has anyone used inlet profiles with MARKER GILES? My understanding is using GILES will have the benefit of using non-reflecting boundary conditions.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1002
https://github.com/su2code/SU2/issues/1003:65,Performance,perform,perform,65,"Judging from the Tutorials, I am not sure whether SU2 is able to perform **Structural Modal Analysis** (Eigenfreqencies) and possibly **Adjoint Shape Optimization** for it. If not, I would like to request an implementation since it is a common problem e.g. to avoid high cycle fatigue in industry. Is a Structural Modal Solver already implemented to use standalone?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1003
https://github.com/su2code/SU2/issues/1003:150,Performance,Optimiz,Optimization,150,"Judging from the Tutorials, I am not sure whether SU2 is able to perform **Structural Modal Analysis** (Eigenfreqencies) and possibly **Adjoint Shape Optimization** for it. If not, I would like to request an implementation since it is a common problem e.g. to avoid high cycle fatigue in industry. Is a Structural Modal Solver already implemented to use standalone?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1003
https://github.com/su2code/SU2/issues/1003:260,Safety,avoid,avoid,260,"Judging from the Tutorials, I am not sure whether SU2 is able to perform **Structural Modal Analysis** (Eigenfreqencies) and possibly **Adjoint Shape Optimization** for it. If not, I would like to request an implementation since it is a common problem e.g. to avoid high cycle fatigue in industry. Is a Structural Modal Solver already implemented to use standalone?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1003
https://github.com/su2code/SU2/pull/1004:1088,Deployability,update,updated,1088,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Adjustment to include grid velocity in the reflected BC state for dynamic grid calculations. . Checking to see how this behaves with the regressions - there are some other tests ongoing too. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. Resolves #828 ; Resolves #997 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1004
https://github.com/su2code/SU2/pull/1004:266,Testability,test,tests,266,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Adjustment to include grid velocity in the reflected BC state for dynamic grid calculations. . Checking to see how this behaves with the regressions - there are some other tests ongoing too. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. Resolves #828 ; Resolves #997 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1004
https://github.com/su2code/SU2/pull/1004:1015,Testability,test,test,1015,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Adjustment to include grid velocity in the reflected BC state for dynamic grid calculations. . Checking to see how this behaves with the regressions - there are some other tests ongoing too. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. Resolves #828 ; Resolves #997 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1004
https://github.com/su2code/SU2/pull/1004:637,Usability,guid,guide,637,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Adjustment to include grid velocity in the reflected BC state for dynamic grid calculations. . Checking to see how this behaves with the regressions - there are some other tests ongoing too. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. Resolves #828 ; Resolves #997 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1004
https://github.com/su2code/SU2/issues/1005:28,Integrability,rout,routine,28,"As mentioned in #975 ; This routine was averaging the solution at nodes i and j but it was updating the residuals at those nodes with the un-averaged solution.; https://github.com/su2code/SU2/blob/626be8fd3fcc63c4f2c5aaeb1d93fdcbd0734f56/SU2_CFD/src/solvers/CSolver.cpp#L2732; Upon fixing it one of the turbomachinery cases started diverging, so I kept the suspicious implementation.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1005
https://github.com/su2code/SU2/pull/1006:407,Availability,avail,available,407,"## Proposed Changes; Adding the new solver NEMO to the develop branch. The NEMO solver concerns the simulation of hypersonic flows, accounting for thermal nonequilibrium and finite-rate chemistry, following Park's 2Temperature model. The system of equations to solve is the conservation of each chemical species mass, momentum, total energy and vibrational energy. Both inviscid and viscous simulations are available, respectively, solver NEMO_EULER and NEMO_NAVIER_STOKES. ## Related Work; This is a new solver, therefore is mostly new and independent work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X ] I am submitting my contribution to the develop branch.; - [? ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags). I was not able to test this, since these commands do not seem to work with meson/ninja. . - [ X ] My contribution is commented and consistent with SU2 style.; - [ X ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1006
https://github.com/su2code/SU2/pull/1006:1278,Deployability,update,updated,1278,"## Proposed Changes; Adding the new solver NEMO to the develop branch. The NEMO solver concerns the simulation of hypersonic flows, accounting for thermal nonequilibrium and finite-rate chemistry, following Park's 2Temperature model. The system of equations to solve is the conservation of each chemical species mass, momentum, total energy and vibrational energy. Both inviscid and viscous simulations are available, respectively, solver NEMO_EULER and NEMO_NAVIER_STOKES. ## Related Work; This is a new solver, therefore is mostly new and independent work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X ] I am submitting my contribution to the develop branch.; - [? ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags). I was not able to test this, since these commands do not seem to work with meson/ninja. . - [ X ] My contribution is commented and consistent with SU2 style.; - [ X ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1006
https://github.com/su2code/SU2/pull/1006:334,Energy Efficiency,energy,energy,334,"## Proposed Changes; Adding the new solver NEMO to the develop branch. The NEMO solver concerns the simulation of hypersonic flows, accounting for thermal nonequilibrium and finite-rate chemistry, following Park's 2Temperature model. The system of equations to solve is the conservation of each chemical species mass, momentum, total energy and vibrational energy. Both inviscid and viscous simulations are available, respectively, solver NEMO_EULER and NEMO_NAVIER_STOKES. ## Related Work; This is a new solver, therefore is mostly new and independent work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X ] I am submitting my contribution to the develop branch.; - [? ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags). I was not able to test this, since these commands do not seem to work with meson/ninja. . - [ X ] My contribution is commented and consistent with SU2 style.; - [ X ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1006
https://github.com/su2code/SU2/pull/1006:357,Energy Efficiency,energy,energy,357,"## Proposed Changes; Adding the new solver NEMO to the develop branch. The NEMO solver concerns the simulation of hypersonic flows, accounting for thermal nonequilibrium and finite-rate chemistry, following Park's 2Temperature model. The system of equations to solve is the conservation of each chemical species mass, momentum, total energy and vibrational energy. Both inviscid and viscous simulations are available, respectively, solver NEMO_EULER and NEMO_NAVIER_STOKES. ## Related Work; This is a new solver, therefore is mostly new and independent work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X ] I am submitting my contribution to the develop branch.; - [? ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags). I was not able to test this, since these commands do not seem to work with meson/ninja. . - [ X ] My contribution is commented and consistent with SU2 style.; - [ X ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1006
https://github.com/su2code/SU2/pull/1006:1041,Testability,test,test,1041,"## Proposed Changes; Adding the new solver NEMO to the develop branch. The NEMO solver concerns the simulation of hypersonic flows, accounting for thermal nonequilibrium and finite-rate chemistry, following Park's 2Temperature model. The system of equations to solve is the conservation of each chemical species mass, momentum, total energy and vibrational energy. Both inviscid and viscous simulations are available, respectively, solver NEMO_EULER and NEMO_NAVIER_STOKES. ## Related Work; This is a new solver, therefore is mostly new and independent work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X ] I am submitting my contribution to the develop branch.; - [? ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags). I was not able to test this, since these commands do not seem to work with meson/ninja. . - [ X ] My contribution is commented and consistent with SU2 style.; - [ X ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1006
https://github.com/su2code/SU2/pull/1006:1205,Testability,test,test,1205,"## Proposed Changes; Adding the new solver NEMO to the develop branch. The NEMO solver concerns the simulation of hypersonic flows, accounting for thermal nonequilibrium and finite-rate chemistry, following Park's 2Temperature model. The system of equations to solve is the conservation of each chemical species mass, momentum, total energy and vibrational energy. Both inviscid and viscous simulations are available, respectively, solver NEMO_EULER and NEMO_NAVIER_STOKES. ## Related Work; This is a new solver, therefore is mostly new and independent work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X ] I am submitting my contribution to the develop branch.; - [? ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags). I was not able to test this, since these commands do not seem to work with meson/ninja. . - [ X ] My contribution is commented and consistent with SU2 style.; - [ X ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1006
https://github.com/su2code/SU2/pull/1006:731,Usability,guid,guide,731,"## Proposed Changes; Adding the new solver NEMO to the develop branch. The NEMO solver concerns the simulation of hypersonic flows, accounting for thermal nonequilibrium and finite-rate chemistry, following Park's 2Temperature model. The system of equations to solve is the conservation of each chemical species mass, momentum, total energy and vibrational energy. Both inviscid and viscous simulations are available, respectively, solver NEMO_EULER and NEMO_NAVIER_STOKES. ## Related Work; This is a new solver, therefore is mostly new and independent work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X ] I am submitting my contribution to the develop branch.; - [? ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags). I was not able to test this, since these commands do not seem to work with meson/ninja. . - [ X ] My contribution is commented and consistent with SU2 style.; - [ X ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1006
https://github.com/su2code/SU2/pull/1009:405,Energy Efficiency,efficient,efficient,405,"## Proposed Changes; This makes the routines InitiateComms and CompleteComms (and periodic counterparts) safe to call in parallel, until now they had to be guarded inside SU2_OMP_MASTER sections.; The calls to MPI are still only made by the master thread (funneled communication) but the buffers are packed and unpacked by all threads.; I also made a slight change which seems to make communications more efficient, we were always communicating the entire buffer, which is sized for the maximum number of variables per point, because the data was packed like this:; `o o o o _ _ _ _ o o o o _ ...` (count = 4, maxCount = 8);; I changed it to:; `o o o o o o o o ... _ _ _ _ ...`; Which allows only part of the buffer to be communicated.; (The maximum size `nPrimVarGrad*nDim*2` is actually quite large compared to the median `nVar`). In the process I also had to make a few more CGeometry routines thread safe. ## Related Work; #789; Resolves #1011. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1009
https://github.com/su2code/SU2/pull/1009:36,Integrability,rout,routines,36,"## Proposed Changes; This makes the routines InitiateComms and CompleteComms (and periodic counterparts) safe to call in parallel, until now they had to be guarded inside SU2_OMP_MASTER sections.; The calls to MPI are still only made by the master thread (funneled communication) but the buffers are packed and unpacked by all threads.; I also made a slight change which seems to make communications more efficient, we were always communicating the entire buffer, which is sized for the maximum number of variables per point, because the data was packed like this:; `o o o o _ _ _ _ o o o o _ ...` (count = 4, maxCount = 8);; I changed it to:; `o o o o o o o o ... _ _ _ _ ...`; Which allows only part of the buffer to be communicated.; (The maximum size `nPrimVarGrad*nDim*2` is actually quite large compared to the median `nVar`). In the process I also had to make a few more CGeometry routines thread safe. ## Related Work; #789; Resolves #1011. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1009
https://github.com/su2code/SU2/pull/1009:888,Integrability,rout,routines,888,"## Proposed Changes; This makes the routines InitiateComms and CompleteComms (and periodic counterparts) safe to call in parallel, until now they had to be guarded inside SU2_OMP_MASTER sections.; The calls to MPI are still only made by the master thread (funneled communication) but the buffers are packed and unpacked by all threads.; I also made a slight change which seems to make communications more efficient, we were always communicating the entire buffer, which is sized for the maximum number of variables per point, because the data was packed like this:; `o o o o _ _ _ _ o o o o _ ...` (count = 4, maxCount = 8);; I changed it to:; `o o o o o o o o ... _ _ _ _ ...`; Which allows only part of the buffer to be communicated.; (The maximum size `nPrimVarGrad*nDim*2` is actually quite large compared to the median `nVar`). In the process I also had to make a few more CGeometry routines thread safe. ## Related Work; #789; Resolves #1011. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1009
https://github.com/su2code/SU2/pull/1009:505,Modifiability,variab,variables,505,"## Proposed Changes; This makes the routines InitiateComms and CompleteComms (and periodic counterparts) safe to call in parallel, until now they had to be guarded inside SU2_OMP_MASTER sections.; The calls to MPI are still only made by the master thread (funneled communication) but the buffers are packed and unpacked by all threads.; I also made a slight change which seems to make communications more efficient, we were always communicating the entire buffer, which is sized for the maximum number of variables per point, because the data was packed like this:; `o o o o _ _ _ _ o o o o _ ...` (count = 4, maxCount = 8);; I changed it to:; `o o o o o o o o ... _ _ _ _ ...`; Which allows only part of the buffer to be communicated.; (The maximum size `nPrimVarGrad*nDim*2` is actually quite large compared to the median `nVar`). In the process I also had to make a few more CGeometry routines thread safe. ## Related Work; #789; Resolves #1011. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1009
https://github.com/su2code/SU2/pull/1009:105,Safety,safe,safe,105,"## Proposed Changes; This makes the routines InitiateComms and CompleteComms (and periodic counterparts) safe to call in parallel, until now they had to be guarded inside SU2_OMP_MASTER sections.; The calls to MPI are still only made by the master thread (funneled communication) but the buffers are packed and unpacked by all threads.; I also made a slight change which seems to make communications more efficient, we were always communicating the entire buffer, which is sized for the maximum number of variables per point, because the data was packed like this:; `o o o o _ _ _ _ o o o o _ ...` (count = 4, maxCount = 8);; I changed it to:; `o o o o o o o o ... _ _ _ _ ...`; Which allows only part of the buffer to be communicated.; (The maximum size `nPrimVarGrad*nDim*2` is actually quite large compared to the median `nVar`). In the process I also had to make a few more CGeometry routines thread safe. ## Related Work; #789; Resolves #1011. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1009
https://github.com/su2code/SU2/pull/1009:904,Safety,safe,safe,904,"## Proposed Changes; This makes the routines InitiateComms and CompleteComms (and periodic counterparts) safe to call in parallel, until now they had to be guarded inside SU2_OMP_MASTER sections.; The calls to MPI are still only made by the master thread (funneled communication) but the buffers are packed and unpacked by all threads.; I also made a slight change which seems to make communications more efficient, we were always communicating the entire buffer, which is sized for the maximum number of variables per point, because the data was packed like this:; `o o o o _ _ _ _ o o o o _ ...` (count = 4, maxCount = 8);; I changed it to:; `o o o o o o o o ... _ _ _ _ ...`; Which allows only part of the buffer to be communicated.; (The maximum size `nPrimVarGrad*nDim*2` is actually quite large compared to the median `nVar`). In the process I also had to make a few more CGeometry routines thread safe. ## Related Work; #789; Resolves #1011. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1009
https://github.com/su2code/SU2/pull/1010:313,Integrability,interface,interfaces,313,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Separates all classes related to the fluid properties and moves them to a new folder. Also cleans up and refactors some of the classes. For example, the viscosity and conductivity classes are now pure abstract classes (interfaces). I have moved them to a folder named thermophysical/, which makes sense given the current contents (equations of state and transport properties), but once we add chemistry and more advanced models, I am not sure this will make sense. @CatarinaGarbacz, since you are going to be working this area, is there a name you would prefer?. p.s. in a future pass, there is room for improvement in the current CFluidModel class. I think it is best practice not to use the type of implementation inheritance found there. Instead, the EoS classes could be given a dedicated interface class and moved inside the CFluidModel class (just like the viscosity and conductivity classes). Then, the CFluidModel class can simply be a composition of those classes (with no data members) and serve back their data to the client. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. #583 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1010
https://github.com/su2code/SU2/pull/1010:887,Integrability,interface,interface,887,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Separates all classes related to the fluid properties and moves them to a new folder. Also cleans up and refactors some of the classes. For example, the viscosity and conductivity classes are now pure abstract classes (interfaces). I have moved them to a folder named thermophysical/, which makes sense given the current contents (equations of state and transport properties), but once we add chemistry and more advanced models, I am not sure this will make sense. @CatarinaGarbacz, since you are going to be working this area, is there a name you would prefer?. p.s. in a future pass, there is room for improvement in the current CFluidModel class. I think it is best practice not to use the type of implementation inheritance found there. Instead, the EoS classes could be given a dedicated interface class and moved inside the CFluidModel class (just like the viscosity and conductivity classes). Then, the CFluidModel class can simply be a composition of those classes (with no data members) and serve back their data to the client. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. #583 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1010
https://github.com/su2code/SU2/pull/1010:199,Modifiability,refactor,refactors,199,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Separates all classes related to the fluid properties and moves them to a new folder. Also cleans up and refactors some of the classes. For example, the viscosity and conductivity classes are now pure abstract classes (interfaces). I have moved them to a folder named thermophysical/, which makes sense given the current contents (equations of state and transport properties), but once we add chemistry and more advanced models, I am not sure this will make sense. @CatarinaGarbacz, since you are going to be working this area, is there a name you would prefer?. p.s. in a future pass, there is room for improvement in the current CFluidModel class. I think it is best practice not to use the type of implementation inheritance found there. Instead, the EoS classes could be given a dedicated interface class and moved inside the CFluidModel class (just like the viscosity and conductivity classes). Then, the CFluidModel class can simply be a composition of those classes (with no data members) and serve back their data to the client. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. #583 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1010
https://github.com/su2code/SU2/pull/1010:810,Modifiability,inherit,inheritance,810,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Separates all classes related to the fluid properties and moves them to a new folder. Also cleans up and refactors some of the classes. For example, the viscosity and conductivity classes are now pure abstract classes (interfaces). I have moved them to a folder named thermophysical/, which makes sense given the current contents (equations of state and transport properties), but once we add chemistry and more advanced models, I am not sure this will make sense. @CatarinaGarbacz, since you are going to be working this area, is there a name you would prefer?. p.s. in a future pass, there is room for improvement in the current CFluidModel class. I think it is best practice not to use the type of implementation inheritance found there. Instead, the EoS classes could be given a dedicated interface class and moved inside the CFluidModel class (just like the viscosity and conductivity classes). Then, the CFluidModel class can simply be a composition of those classes (with no data members) and serve back their data to the client. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. #583 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1010
https://github.com/su2code/SU2/pull/1010:1026,Usability,simpl,simply,1026,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Separates all classes related to the fluid properties and moves them to a new folder. Also cleans up and refactors some of the classes. For example, the viscosity and conductivity classes are now pure abstract classes (interfaces). I have moved them to a folder named thermophysical/, which makes sense given the current contents (equations of state and transport properties), but once we add chemistry and more advanced models, I am not sure this will make sense. @CatarinaGarbacz, since you are going to be working this area, is there a name you would prefer?. p.s. in a future pass, there is room for improvement in the current CFluidModel class. I think it is best practice not to use the type of implementation inheritance found there. Instead, the EoS classes could be given a dedicated interface class and moved inside the CFluidModel class (just like the viscosity and conductivity classes). Then, the CFluidModel class can simply be a composition of those classes (with no data members) and serve back their data to the client. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. #583 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1010
https://github.com/su2code/SU2/pull/1010:1458,Usability,guid,guide,1458,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Separates all classes related to the fluid properties and moves them to a new folder. Also cleans up and refactors some of the classes. For example, the viscosity and conductivity classes are now pure abstract classes (interfaces). I have moved them to a folder named thermophysical/, which makes sense given the current contents (equations of state and transport properties), but once we add chemistry and more advanced models, I am not sure this will make sense. @CatarinaGarbacz, since you are going to be working this area, is there a name you would prefer?. p.s. in a future pass, there is room for improvement in the current CFluidModel class. I think it is best practice not to use the type of implementation inheritance found there. Instead, the EoS classes could be given a dedicated interface class and moved inside the CFluidModel class (just like the viscosity and conductivity classes). Then, the CFluidModel class can simply be a composition of those classes (with no data members) and serve back their data to the client. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. #583 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1010
https://github.com/su2code/SU2/issues/1011:250,Deployability,install,install,250,**Describe the bug**; When I run the meson script for building it gives the wrong build command. This is both for the master and develop version. **To Reproduce**; Simply type; ./meson.py build. One of the last output lines is; Use './ninja -C false install' to compile and install SU2. while it should be; Use './ninja -C build install' to compile and install SU2. **Desktop (please complete the following information):**; - OS: Ubuntu 18.04; - C++ compiler and version: GCC 8.4.0; - MPI implementation and version: Sequential; - SU2 Version: 7.0.5,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1011
https://github.com/su2code/SU2/issues/1011:274,Deployability,install,install,274,**Describe the bug**; When I run the meson script for building it gives the wrong build command. This is both for the master and develop version. **To Reproduce**; Simply type; ./meson.py build. One of the last output lines is; Use './ninja -C false install' to compile and install SU2. while it should be; Use './ninja -C build install' to compile and install SU2. **Desktop (please complete the following information):**; - OS: Ubuntu 18.04; - C++ compiler and version: GCC 8.4.0; - MPI implementation and version: Sequential; - SU2 Version: 7.0.5,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1011
https://github.com/su2code/SU2/issues/1011:329,Deployability,install,install,329,**Describe the bug**; When I run the meson script for building it gives the wrong build command. This is both for the master and develop version. **To Reproduce**; Simply type; ./meson.py build. One of the last output lines is; Use './ninja -C false install' to compile and install SU2. while it should be; Use './ninja -C build install' to compile and install SU2. **Desktop (please complete the following information):**; - OS: Ubuntu 18.04; - C++ compiler and version: GCC 8.4.0; - MPI implementation and version: Sequential; - SU2 Version: 7.0.5,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1011
https://github.com/su2code/SU2/issues/1011:353,Deployability,install,install,353,**Describe the bug**; When I run the meson script for building it gives the wrong build command. This is both for the master and develop version. **To Reproduce**; Simply type; ./meson.py build. One of the last output lines is; Use './ninja -C false install' to compile and install SU2. while it should be; Use './ninja -C build install' to compile and install SU2. **Desktop (please complete the following information):**; - OS: Ubuntu 18.04; - C++ compiler and version: GCC 8.4.0; - MPI implementation and version: Sequential; - SU2 Version: 7.0.5,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1011
https://github.com/su2code/SU2/issues/1011:164,Usability,Simpl,Simply,164,**Describe the bug**; When I run the meson script for building it gives the wrong build command. This is both for the master and develop version. **To Reproduce**; Simply type; ./meson.py build. One of the last output lines is; Use './ninja -C false install' to compile and install SU2. while it should be; Use './ninja -C build install' to compile and install SU2. **Desktop (please complete the following information):**; - OS: Ubuntu 18.04; - C++ compiler and version: GCC 8.4.0; - MPI implementation and version: Sequential; - SU2 Version: 7.0.5,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1011
https://github.com/su2code/SU2/pull/1012:1424,Deployability,update,updated,1424,"## Proposed Changes. This is an attempt to add some unit testing for the geometry structure that checks all routines necessary to construct it. I know that I stretch the term ""unit test"" a little bit here, but because of the structure of the code, its not possible to implement small, independent tests ... but this is the closest we can get to a real unit testing framework I think. With this approach it is not possible to run tests in a random order for example, but at least the order in one translation unit is fixed by default anyway.; ; I added a basic, reusable setup which is based on the box mesh reader that can be included in other tests. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1012
https://github.com/su2code/SU2/pull/1012:108,Integrability,rout,routines,108,"## Proposed Changes. This is an attempt to add some unit testing for the geometry structure that checks all routines necessary to construct it. I know that I stretch the term ""unit test"" a little bit here, but because of the structure of the code, its not possible to implement small, independent tests ... but this is the closest we can get to a real unit testing framework I think. With this approach it is not possible to run tests in a random order for example, but at least the order in one translation unit is fixed by default anyway.; ; I added a basic, reusable setup which is based on the box mesh reader that can be included in other tests. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1012
https://github.com/su2code/SU2/pull/1012:57,Testability,test,testing,57,"## Proposed Changes. This is an attempt to add some unit testing for the geometry structure that checks all routines necessary to construct it. I know that I stretch the term ""unit test"" a little bit here, but because of the structure of the code, its not possible to implement small, independent tests ... but this is the closest we can get to a real unit testing framework I think. With this approach it is not possible to run tests in a random order for example, but at least the order in one translation unit is fixed by default anyway.; ; I added a basic, reusable setup which is based on the box mesh reader that can be included in other tests. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1012
https://github.com/su2code/SU2/pull/1012:181,Testability,test,test,181,"## Proposed Changes. This is an attempt to add some unit testing for the geometry structure that checks all routines necessary to construct it. I know that I stretch the term ""unit test"" a little bit here, but because of the structure of the code, its not possible to implement small, independent tests ... but this is the closest we can get to a real unit testing framework I think. With this approach it is not possible to run tests in a random order for example, but at least the order in one translation unit is fixed by default anyway.; ; I added a basic, reusable setup which is based on the box mesh reader that can be included in other tests. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1012
https://github.com/su2code/SU2/pull/1012:297,Testability,test,tests,297,"## Proposed Changes. This is an attempt to add some unit testing for the geometry structure that checks all routines necessary to construct it. I know that I stretch the term ""unit test"" a little bit here, but because of the structure of the code, its not possible to implement small, independent tests ... but this is the closest we can get to a real unit testing framework I think. With this approach it is not possible to run tests in a random order for example, but at least the order in one translation unit is fixed by default anyway.; ; I added a basic, reusable setup which is based on the box mesh reader that can be included in other tests. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1012
https://github.com/su2code/SU2/pull/1012:357,Testability,test,testing,357,"## Proposed Changes. This is an attempt to add some unit testing for the geometry structure that checks all routines necessary to construct it. I know that I stretch the term ""unit test"" a little bit here, but because of the structure of the code, its not possible to implement small, independent tests ... but this is the closest we can get to a real unit testing framework I think. With this approach it is not possible to run tests in a random order for example, but at least the order in one translation unit is fixed by default anyway.; ; I added a basic, reusable setup which is based on the box mesh reader that can be included in other tests. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1012
https://github.com/su2code/SU2/pull/1012:429,Testability,test,tests,429,"## Proposed Changes. This is an attempt to add some unit testing for the geometry structure that checks all routines necessary to construct it. I know that I stretch the term ""unit test"" a little bit here, but because of the structure of the code, its not possible to implement small, independent tests ... but this is the closest we can get to a real unit testing framework I think. With this approach it is not possible to run tests in a random order for example, but at least the order in one translation unit is fixed by default anyway.; ; I added a basic, reusable setup which is based on the box mesh reader that can be included in other tests. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1012
https://github.com/su2code/SU2/pull/1012:644,Testability,test,tests,644,"## Proposed Changes. This is an attempt to add some unit testing for the geometry structure that checks all routines necessary to construct it. I know that I stretch the term ""unit test"" a little bit here, but because of the structure of the code, its not possible to implement small, independent tests ... but this is the closest we can get to a real unit testing framework I think. With this approach it is not possible to run tests in a random order for example, but at least the order in one translation unit is fixed by default anyway.; ; I added a basic, reusable setup which is based on the box mesh reader that can be included in other tests. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1012
https://github.com/su2code/SU2/pull/1012:1351,Testability,test,test,1351,"## Proposed Changes. This is an attempt to add some unit testing for the geometry structure that checks all routines necessary to construct it. I know that I stretch the term ""unit test"" a little bit here, but because of the structure of the code, its not possible to implement small, independent tests ... but this is the closest we can get to a real unit testing framework I think. With this approach it is not possible to run tests in a random order for example, but at least the order in one translation unit is fixed by default anyway.; ; I added a basic, reusable setup which is based on the box mesh reader that can be included in other tests. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1012
https://github.com/su2code/SU2/pull/1012:973,Usability,guid,guide,973,"## Proposed Changes. This is an attempt to add some unit testing for the geometry structure that checks all routines necessary to construct it. I know that I stretch the term ""unit test"" a little bit here, but because of the structure of the code, its not possible to implement small, independent tests ... but this is the closest we can get to a real unit testing framework I think. With this approach it is not possible to run tests in a random order for example, but at least the order in one translation unit is fixed by default anyway.; ; I added a basic, reusable setup which is based on the box mesh reader that can be included in other tests. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1012
https://github.com/su2code/SU2/issues/1013:94,Usability,guid,guide,94,"**Is your feature request related to a problem? Please describe.**; * Following the SU2 style guide, I understand that we should try to keep things as consistent as possible. One thing that I note is the style for single `if` and `for` statement. Sometimes, there are no braces and other time, there are braces. An example would be in line 223 of `CDriver.cpp` vs line 382 of the same file. An example for the `for` statement can be seen in line 420 of the same file as well. Sometimes, this is hard to read. . **Describe the solution you'd like**; * Could you please let me know the prefer style? I understand that this is a very minor thing but should I go ahead and make sure every single if/for fits this ""prefer style""?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1013
https://github.com/su2code/SU2/pull/1014:407,Availability,avail,available,407,"## Proposed Changes; Adding the new solver NEMO to the develop branch. The NEMO solver concerns the simulation of hypersonic flows, accounting for thermal nonequilibrium and finite-rate chemistry, following Park's 2Temperature model. The system of equations to solve is the conservation of each chemical species mass, momentum, total energy and vibrational energy. Both inviscid and viscous simulations are available, respectively, solver NEMO_EULER and NEMO_NAVIER_STOKES. Most of the changes consisted in the addition of new files (listed below), and all the necessary changes in the high-level classes (drivers, integration, config).; ; new files concerning this solver:; output/CNEMOCompOutput.cpp; variables/CNEMOEulerVariable.cpp; variables/CNEMONSVariable.cpp; solvers/CNEMOEulerSolver.cpp; solvers/CNEMONSSolver.cpp; numerics/NEMO/convection/lax.cpp; numerics/NEMO/convection/roe.cpp; numerics/NEMO/convection/ausm.cpp; numerics/NEMO/convection/ausmplusup2.cpp; numerics/NEMO/convection/ausmpwplus.cpp; numerics/NEMO/convection/msw.cpp; numerics/NEMO/NEMO_diffusion.cpp; numerics/NEMO/NEMO_sources.cpp. Future/ongoing work is looking into making use of the CFluidModel class , introducing a new child class CNEMOGas to handle all mixture/thermodynamics/transport/chemistry related computations - follwing the generic SU2 structure. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent w",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1014
https://github.com/su2code/SU2/pull/1014:615,Deployability,integrat,integration,615,"## Proposed Changes; Adding the new solver NEMO to the develop branch. The NEMO solver concerns the simulation of hypersonic flows, accounting for thermal nonequilibrium and finite-rate chemistry, following Park's 2Temperature model. The system of equations to solve is the conservation of each chemical species mass, momentum, total energy and vibrational energy. Both inviscid and viscous simulations are available, respectively, solver NEMO_EULER and NEMO_NAVIER_STOKES. Most of the changes consisted in the addition of new files (listed below), and all the necessary changes in the high-level classes (drivers, integration, config).; ; new files concerning this solver:; output/CNEMOCompOutput.cpp; variables/CNEMOEulerVariable.cpp; variables/CNEMONSVariable.cpp; solvers/CNEMOEulerSolver.cpp; solvers/CNEMONSSolver.cpp; numerics/NEMO/convection/lax.cpp; numerics/NEMO/convection/roe.cpp; numerics/NEMO/convection/ausm.cpp; numerics/NEMO/convection/ausmplusup2.cpp; numerics/NEMO/convection/ausmpwplus.cpp; numerics/NEMO/convection/msw.cpp; numerics/NEMO/NEMO_diffusion.cpp; numerics/NEMO/NEMO_sources.cpp. Future/ongoing work is looking into making use of the CFluidModel class , introducing a new child class CNEMOGas to handle all mixture/thermodynamics/transport/chemistry related computations - follwing the generic SU2 structure. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent w",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1014
https://github.com/su2code/SU2/pull/1014:2117,Deployability,update,updated,2117,"k's 2Temperature model. The system of equations to solve is the conservation of each chemical species mass, momentum, total energy and vibrational energy. Both inviscid and viscous simulations are available, respectively, solver NEMO_EULER and NEMO_NAVIER_STOKES. Most of the changes consisted in the addition of new files (listed below), and all the necessary changes in the high-level classes (drivers, integration, config).; ; new files concerning this solver:; output/CNEMOCompOutput.cpp; variables/CNEMOEulerVariable.cpp; variables/CNEMONSVariable.cpp; solvers/CNEMOEulerSolver.cpp; solvers/CNEMONSSolver.cpp; numerics/NEMO/convection/lax.cpp; numerics/NEMO/convection/roe.cpp; numerics/NEMO/convection/ausm.cpp; numerics/NEMO/convection/ausmplusup2.cpp; numerics/NEMO/convection/ausmpwplus.cpp; numerics/NEMO/convection/msw.cpp; numerics/NEMO/NEMO_diffusion.cpp; numerics/NEMO/NEMO_sources.cpp. Future/ongoing work is looking into making use of the CFluidModel class , introducing a new child class CNEMOGas to handle all mixture/thermodynamics/transport/chemistry related computations - follwing the generic SU2 structure. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [not yet] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1014
https://github.com/su2code/SU2/pull/1014:334,Energy Efficiency,energy,energy,334,"## Proposed Changes; Adding the new solver NEMO to the develop branch. The NEMO solver concerns the simulation of hypersonic flows, accounting for thermal nonequilibrium and finite-rate chemistry, following Park's 2Temperature model. The system of equations to solve is the conservation of each chemical species mass, momentum, total energy and vibrational energy. Both inviscid and viscous simulations are available, respectively, solver NEMO_EULER and NEMO_NAVIER_STOKES. Most of the changes consisted in the addition of new files (listed below), and all the necessary changes in the high-level classes (drivers, integration, config).; ; new files concerning this solver:; output/CNEMOCompOutput.cpp; variables/CNEMOEulerVariable.cpp; variables/CNEMONSVariable.cpp; solvers/CNEMOEulerSolver.cpp; solvers/CNEMONSSolver.cpp; numerics/NEMO/convection/lax.cpp; numerics/NEMO/convection/roe.cpp; numerics/NEMO/convection/ausm.cpp; numerics/NEMO/convection/ausmplusup2.cpp; numerics/NEMO/convection/ausmpwplus.cpp; numerics/NEMO/convection/msw.cpp; numerics/NEMO/NEMO_diffusion.cpp; numerics/NEMO/NEMO_sources.cpp. Future/ongoing work is looking into making use of the CFluidModel class , introducing a new child class CNEMOGas to handle all mixture/thermodynamics/transport/chemistry related computations - follwing the generic SU2 structure. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent w",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1014
https://github.com/su2code/SU2/pull/1014:357,Energy Efficiency,energy,energy,357,"## Proposed Changes; Adding the new solver NEMO to the develop branch. The NEMO solver concerns the simulation of hypersonic flows, accounting for thermal nonequilibrium and finite-rate chemistry, following Park's 2Temperature model. The system of equations to solve is the conservation of each chemical species mass, momentum, total energy and vibrational energy. Both inviscid and viscous simulations are available, respectively, solver NEMO_EULER and NEMO_NAVIER_STOKES. Most of the changes consisted in the addition of new files (listed below), and all the necessary changes in the high-level classes (drivers, integration, config).; ; new files concerning this solver:; output/CNEMOCompOutput.cpp; variables/CNEMOEulerVariable.cpp; variables/CNEMONSVariable.cpp; solvers/CNEMOEulerSolver.cpp; solvers/CNEMONSSolver.cpp; numerics/NEMO/convection/lax.cpp; numerics/NEMO/convection/roe.cpp; numerics/NEMO/convection/ausm.cpp; numerics/NEMO/convection/ausmplusup2.cpp; numerics/NEMO/convection/ausmpwplus.cpp; numerics/NEMO/convection/msw.cpp; numerics/NEMO/NEMO_diffusion.cpp; numerics/NEMO/NEMO_sources.cpp. Future/ongoing work is looking into making use of the CFluidModel class , introducing a new child class CNEMOGas to handle all mixture/thermodynamics/transport/chemistry related computations - follwing the generic SU2 structure. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent w",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1014
https://github.com/su2code/SU2/pull/1014:615,Integrability,integrat,integration,615,"## Proposed Changes; Adding the new solver NEMO to the develop branch. The NEMO solver concerns the simulation of hypersonic flows, accounting for thermal nonequilibrium and finite-rate chemistry, following Park's 2Temperature model. The system of equations to solve is the conservation of each chemical species mass, momentum, total energy and vibrational energy. Both inviscid and viscous simulations are available, respectively, solver NEMO_EULER and NEMO_NAVIER_STOKES. Most of the changes consisted in the addition of new files (listed below), and all the necessary changes in the high-level classes (drivers, integration, config).; ; new files concerning this solver:; output/CNEMOCompOutput.cpp; variables/CNEMOEulerVariable.cpp; variables/CNEMONSVariable.cpp; solvers/CNEMOEulerSolver.cpp; solvers/CNEMONSSolver.cpp; numerics/NEMO/convection/lax.cpp; numerics/NEMO/convection/roe.cpp; numerics/NEMO/convection/ausm.cpp; numerics/NEMO/convection/ausmplusup2.cpp; numerics/NEMO/convection/ausmpwplus.cpp; numerics/NEMO/convection/msw.cpp; numerics/NEMO/NEMO_diffusion.cpp; numerics/NEMO/NEMO_sources.cpp. Future/ongoing work is looking into making use of the CFluidModel class , introducing a new child class CNEMOGas to handle all mixture/thermodynamics/transport/chemistry related computations - follwing the generic SU2 structure. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent w",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1014
https://github.com/su2code/SU2/pull/1014:628,Modifiability,config,config,628,"## Proposed Changes; Adding the new solver NEMO to the develop branch. The NEMO solver concerns the simulation of hypersonic flows, accounting for thermal nonequilibrium and finite-rate chemistry, following Park's 2Temperature model. The system of equations to solve is the conservation of each chemical species mass, momentum, total energy and vibrational energy. Both inviscid and viscous simulations are available, respectively, solver NEMO_EULER and NEMO_NAVIER_STOKES. Most of the changes consisted in the addition of new files (listed below), and all the necessary changes in the high-level classes (drivers, integration, config).; ; new files concerning this solver:; output/CNEMOCompOutput.cpp; variables/CNEMOEulerVariable.cpp; variables/CNEMONSVariable.cpp; solvers/CNEMOEulerSolver.cpp; solvers/CNEMONSSolver.cpp; numerics/NEMO/convection/lax.cpp; numerics/NEMO/convection/roe.cpp; numerics/NEMO/convection/ausm.cpp; numerics/NEMO/convection/ausmplusup2.cpp; numerics/NEMO/convection/ausmpwplus.cpp; numerics/NEMO/convection/msw.cpp; numerics/NEMO/NEMO_diffusion.cpp; numerics/NEMO/NEMO_sources.cpp. Future/ongoing work is looking into making use of the CFluidModel class , introducing a new child class CNEMOGas to handle all mixture/thermodynamics/transport/chemistry related computations - follwing the generic SU2 structure. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent w",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1014
https://github.com/su2code/SU2/pull/1014:703,Modifiability,variab,variables,703,"## Proposed Changes; Adding the new solver NEMO to the develop branch. The NEMO solver concerns the simulation of hypersonic flows, accounting for thermal nonequilibrium and finite-rate chemistry, following Park's 2Temperature model. The system of equations to solve is the conservation of each chemical species mass, momentum, total energy and vibrational energy. Both inviscid and viscous simulations are available, respectively, solver NEMO_EULER and NEMO_NAVIER_STOKES. Most of the changes consisted in the addition of new files (listed below), and all the necessary changes in the high-level classes (drivers, integration, config).; ; new files concerning this solver:; output/CNEMOCompOutput.cpp; variables/CNEMOEulerVariable.cpp; variables/CNEMONSVariable.cpp; solvers/CNEMOEulerSolver.cpp; solvers/CNEMONSSolver.cpp; numerics/NEMO/convection/lax.cpp; numerics/NEMO/convection/roe.cpp; numerics/NEMO/convection/ausm.cpp; numerics/NEMO/convection/ausmplusup2.cpp; numerics/NEMO/convection/ausmpwplus.cpp; numerics/NEMO/convection/msw.cpp; numerics/NEMO/NEMO_diffusion.cpp; numerics/NEMO/NEMO_sources.cpp. Future/ongoing work is looking into making use of the CFluidModel class , introducing a new child class CNEMOGas to handle all mixture/thermodynamics/transport/chemistry related computations - follwing the generic SU2 structure. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent w",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1014
https://github.com/su2code/SU2/pull/1014:737,Modifiability,variab,variables,737,"## Proposed Changes; Adding the new solver NEMO to the develop branch. The NEMO solver concerns the simulation of hypersonic flows, accounting for thermal nonequilibrium and finite-rate chemistry, following Park's 2Temperature model. The system of equations to solve is the conservation of each chemical species mass, momentum, total energy and vibrational energy. Both inviscid and viscous simulations are available, respectively, solver NEMO_EULER and NEMO_NAVIER_STOKES. Most of the changes consisted in the addition of new files (listed below), and all the necessary changes in the high-level classes (drivers, integration, config).; ; new files concerning this solver:; output/CNEMOCompOutput.cpp; variables/CNEMOEulerVariable.cpp; variables/CNEMONSVariable.cpp; solvers/CNEMOEulerSolver.cpp; solvers/CNEMONSSolver.cpp; numerics/NEMO/convection/lax.cpp; numerics/NEMO/convection/roe.cpp; numerics/NEMO/convection/ausm.cpp; numerics/NEMO/convection/ausmplusup2.cpp; numerics/NEMO/convection/ausmpwplus.cpp; numerics/NEMO/convection/msw.cpp; numerics/NEMO/NEMO_diffusion.cpp; numerics/NEMO/NEMO_sources.cpp. Future/ongoing work is looking into making use of the CFluidModel class , introducing a new child class CNEMOGas to handle all mixture/thermodynamics/transport/chemistry related computations - follwing the generic SU2 structure. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent w",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1014
https://github.com/su2code/SU2/pull/1014:2038,Testability,test,test,2038,"k's 2Temperature model. The system of equations to solve is the conservation of each chemical species mass, momentum, total energy and vibrational energy. Both inviscid and viscous simulations are available, respectively, solver NEMO_EULER and NEMO_NAVIER_STOKES. Most of the changes consisted in the addition of new files (listed below), and all the necessary changes in the high-level classes (drivers, integration, config).; ; new files concerning this solver:; output/CNEMOCompOutput.cpp; variables/CNEMOEulerVariable.cpp; variables/CNEMONSVariable.cpp; solvers/CNEMOEulerSolver.cpp; solvers/CNEMONSSolver.cpp; numerics/NEMO/convection/lax.cpp; numerics/NEMO/convection/roe.cpp; numerics/NEMO/convection/ausm.cpp; numerics/NEMO/convection/ausmplusup2.cpp; numerics/NEMO/convection/ausmpwplus.cpp; numerics/NEMO/convection/msw.cpp; numerics/NEMO/NEMO_diffusion.cpp; numerics/NEMO/NEMO_sources.cpp. Future/ongoing work is looking into making use of the CFluidModel class , introducing a new child class CNEMOGas to handle all mixture/thermodynamics/transport/chemistry related computations - follwing the generic SU2 structure. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [not yet] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1014
https://github.com/su2code/SU2/pull/1014:1660,Usability,guid,guide,1660,"k's 2Temperature model. The system of equations to solve is the conservation of each chemical species mass, momentum, total energy and vibrational energy. Both inviscid and viscous simulations are available, respectively, solver NEMO_EULER and NEMO_NAVIER_STOKES. Most of the changes consisted in the addition of new files (listed below), and all the necessary changes in the high-level classes (drivers, integration, config).; ; new files concerning this solver:; output/CNEMOCompOutput.cpp; variables/CNEMOEulerVariable.cpp; variables/CNEMONSVariable.cpp; solvers/CNEMOEulerSolver.cpp; solvers/CNEMONSSolver.cpp; numerics/NEMO/convection/lax.cpp; numerics/NEMO/convection/roe.cpp; numerics/NEMO/convection/ausm.cpp; numerics/NEMO/convection/ausmplusup2.cpp; numerics/NEMO/convection/ausmpwplus.cpp; numerics/NEMO/convection/msw.cpp; numerics/NEMO/NEMO_diffusion.cpp; numerics/NEMO/NEMO_sources.cpp. Future/ongoing work is looking into making use of the CFluidModel class , introducing a new child class CNEMOGas to handle all mixture/thermodynamics/transport/chemistry related computations - follwing the generic SU2 structure. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [not yet] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1014
https://github.com/su2code/SU2/pull/1015:968,Deployability,update,updated,968,"## Proposed Changes. This divides the iteration files and adds a factory class for their creation. A rework of the iteration class is still necessary, but I don't have time to do that at the moment. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [] I have added a test case that demonstrates my contribution, if necessary.; - [] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1015
https://github.com/su2code/SU2/pull/1015:896,Testability,test,test,896,"## Proposed Changes. This divides the iteration files and adds a factory class for their creation. A rework of the iteration class is still necessary, but I don't have time to do that at the moment. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [] I have added a test case that demonstrates my contribution, if necessary.; - [] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1015
https://github.com/su2code/SU2/pull/1015:519,Usability,guid,guide,519,"## Proposed Changes. This divides the iteration files and adds a factory class for their creation. A rework of the iteration class is still necessary, but I don't have time to do that at the moment. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [] I have added a test case that demonstrates my contribution, if necessary.; - [] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1015
https://github.com/su2code/SU2/pull/1016:824,Deployability,update,updated,824,"## Proposed Changes; This small PR fixes the interpolation weights of the function CADTElemClass::CoorInTetrahedron. Thanks @monika1387 for bringing that to our attention.; . ## Related Work; None. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X] I am submitting my contribution to the develop branch.; - [ X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1016
https://github.com/su2code/SU2/pull/1016:751,Testability,test,test,751,"## Proposed Changes; This small PR fixes the interpolation weights of the function CADTElemClass::CoorInTetrahedron. Thanks @monika1387 for bringing that to our attention.; . ## Related Work; None. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X] I am submitting my contribution to the develop branch.; - [ X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1016
https://github.com/su2code/SU2/pull/1016:370,Usability,guid,guide,370,"## Proposed Changes; This small PR fixes the interpolation weights of the function CADTElemClass::CoorInTetrahedron. Thanks @monika1387 for bringing that to our attention.; . ## Related Work; None. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X] I am submitting my contribution to the develop branch.; - [ X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1016
https://github.com/su2code/SU2/issues/1017:130,Availability,avail,available,130,"Hello SU2 community,. I'm currently interested in the theoretical background used in SU2_DOT (both in the FD or AD option). Is it available somewhere? The use I'm interested in is the propagation of the sensitivity of the selected objective function with respect to the boundary grid displacements to the FFD control point displacements. Moreover I have two specific questions:. 1) If, for design optimisation, design variables are the FFD control points, once performed the point inversion (which is usually done only at the beginning of the optimization process), the relation between surface grid nodes and FFD control points is fixed and analytically given by the Bernstein polynomials, once provided the parametric coordinates. Why, then, the need to perform the chain rule with Finite Differences or AD?. 2) SU2_DOT uses, to perform the chain rule, surface adjoint solution(in case of FD) or the volume adjoint solution (in case of AD). These values are provided in output by the SU2_CFD adjoint solver. If printing the solution in CSV format I can read, among others, values such `""Sensitivity_x"",""Sensitivity_y"",""Sensitivity_z"",""Surface_Sensitivity""` on every grid point. Now, these values, trying to give a look inside the code, are addressed as, respectively, sensitivities in x/y/z/normal directions. Are these values the sensitivity of the selected objective function with respect to the grid node displacement?. 3) In file `python_wrapper_structure.cpp` function; `vector<passivedouble> CDriver::GetMeshDisp_Sensitivity(unsigned short iMarker, unsigned long iVertex)` ; also provides boundary displacement sensitivities of the objective function, with the call:; `Disp_Sens[0] = solver->GetNodes()->GetBoundDisp_Sens(iPoint, 0);`. These values are, in effect the sensitivity of the objective function with respect to the grid node displacements as some Finite Difference tests confirmed. Anyway such values are different by the values mentioned above in question 2. Is that correct? Am I ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1017
https://github.com/su2code/SU2/issues/1017:418,Modifiability,variab,variables,418,"Hello SU2 community,. I'm currently interested in the theoretical background used in SU2_DOT (both in the FD or AD option). Is it available somewhere? The use I'm interested in is the propagation of the sensitivity of the selected objective function with respect to the boundary grid displacements to the FFD control point displacements. Moreover I have two specific questions:. 1) If, for design optimisation, design variables are the FFD control points, once performed the point inversion (which is usually done only at the beginning of the optimization process), the relation between surface grid nodes and FFD control points is fixed and analytically given by the Bernstein polynomials, once provided the parametric coordinates. Why, then, the need to perform the chain rule with Finite Differences or AD?. 2) SU2_DOT uses, to perform the chain rule, surface adjoint solution(in case of FD) or the volume adjoint solution (in case of AD). These values are provided in output by the SU2_CFD adjoint solver. If printing the solution in CSV format I can read, among others, values such `""Sensitivity_x"",""Sensitivity_y"",""Sensitivity_z"",""Surface_Sensitivity""` on every grid point. Now, these values, trying to give a look inside the code, are addressed as, respectively, sensitivities in x/y/z/normal directions. Are these values the sensitivity of the selected objective function with respect to the grid node displacement?. 3) In file `python_wrapper_structure.cpp` function; `vector<passivedouble> CDriver::GetMeshDisp_Sensitivity(unsigned short iMarker, unsigned long iVertex)` ; also provides boundary displacement sensitivities of the objective function, with the call:; `Disp_Sens[0] = solver->GetNodes()->GetBoundDisp_Sens(iPoint, 0);`. These values are, in effect the sensitivity of the objective function with respect to the grid node displacements as some Finite Difference tests confirmed. Anyway such values are different by the values mentioned above in question 2. Is that correct? Am I ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1017
https://github.com/su2code/SU2/issues/1017:461,Performance,perform,performed,461,"Hello SU2 community,. I'm currently interested in the theoretical background used in SU2_DOT (both in the FD or AD option). Is it available somewhere? The use I'm interested in is the propagation of the sensitivity of the selected objective function with respect to the boundary grid displacements to the FFD control point displacements. Moreover I have two specific questions:. 1) If, for design optimisation, design variables are the FFD control points, once performed the point inversion (which is usually done only at the beginning of the optimization process), the relation between surface grid nodes and FFD control points is fixed and analytically given by the Bernstein polynomials, once provided the parametric coordinates. Why, then, the need to perform the chain rule with Finite Differences or AD?. 2) SU2_DOT uses, to perform the chain rule, surface adjoint solution(in case of FD) or the volume adjoint solution (in case of AD). These values are provided in output by the SU2_CFD adjoint solver. If printing the solution in CSV format I can read, among others, values such `""Sensitivity_x"",""Sensitivity_y"",""Sensitivity_z"",""Surface_Sensitivity""` on every grid point. Now, these values, trying to give a look inside the code, are addressed as, respectively, sensitivities in x/y/z/normal directions. Are these values the sensitivity of the selected objective function with respect to the grid node displacement?. 3) In file `python_wrapper_structure.cpp` function; `vector<passivedouble> CDriver::GetMeshDisp_Sensitivity(unsigned short iMarker, unsigned long iVertex)` ; also provides boundary displacement sensitivities of the objective function, with the call:; `Disp_Sens[0] = solver->GetNodes()->GetBoundDisp_Sens(iPoint, 0);`. These values are, in effect the sensitivity of the objective function with respect to the grid node displacements as some Finite Difference tests confirmed. Anyway such values are different by the values mentioned above in question 2. Is that correct? Am I ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1017
https://github.com/su2code/SU2/issues/1017:543,Performance,optimiz,optimization,543,"Hello SU2 community,. I'm currently interested in the theoretical background used in SU2_DOT (both in the FD or AD option). Is it available somewhere? The use I'm interested in is the propagation of the sensitivity of the selected objective function with respect to the boundary grid displacements to the FFD control point displacements. Moreover I have two specific questions:. 1) If, for design optimisation, design variables are the FFD control points, once performed the point inversion (which is usually done only at the beginning of the optimization process), the relation between surface grid nodes and FFD control points is fixed and analytically given by the Bernstein polynomials, once provided the parametric coordinates. Why, then, the need to perform the chain rule with Finite Differences or AD?. 2) SU2_DOT uses, to perform the chain rule, surface adjoint solution(in case of FD) or the volume adjoint solution (in case of AD). These values are provided in output by the SU2_CFD adjoint solver. If printing the solution in CSV format I can read, among others, values such `""Sensitivity_x"",""Sensitivity_y"",""Sensitivity_z"",""Surface_Sensitivity""` on every grid point. Now, these values, trying to give a look inside the code, are addressed as, respectively, sensitivities in x/y/z/normal directions. Are these values the sensitivity of the selected objective function with respect to the grid node displacement?. 3) In file `python_wrapper_structure.cpp` function; `vector<passivedouble> CDriver::GetMeshDisp_Sensitivity(unsigned short iMarker, unsigned long iVertex)` ; also provides boundary displacement sensitivities of the objective function, with the call:; `Disp_Sens[0] = solver->GetNodes()->GetBoundDisp_Sens(iPoint, 0);`. These values are, in effect the sensitivity of the objective function with respect to the grid node displacements as some Finite Difference tests confirmed. Anyway such values are different by the values mentioned above in question 2. Is that correct? Am I ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1017
https://github.com/su2code/SU2/issues/1017:756,Performance,perform,perform,756,"Hello SU2 community,. I'm currently interested in the theoretical background used in SU2_DOT (both in the FD or AD option). Is it available somewhere? The use I'm interested in is the propagation of the sensitivity of the selected objective function with respect to the boundary grid displacements to the FFD control point displacements. Moreover I have two specific questions:. 1) If, for design optimisation, design variables are the FFD control points, once performed the point inversion (which is usually done only at the beginning of the optimization process), the relation between surface grid nodes and FFD control points is fixed and analytically given by the Bernstein polynomials, once provided the parametric coordinates. Why, then, the need to perform the chain rule with Finite Differences or AD?. 2) SU2_DOT uses, to perform the chain rule, surface adjoint solution(in case of FD) or the volume adjoint solution (in case of AD). These values are provided in output by the SU2_CFD adjoint solver. If printing the solution in CSV format I can read, among others, values such `""Sensitivity_x"",""Sensitivity_y"",""Sensitivity_z"",""Surface_Sensitivity""` on every grid point. Now, these values, trying to give a look inside the code, are addressed as, respectively, sensitivities in x/y/z/normal directions. Are these values the sensitivity of the selected objective function with respect to the grid node displacement?. 3) In file `python_wrapper_structure.cpp` function; `vector<passivedouble> CDriver::GetMeshDisp_Sensitivity(unsigned short iMarker, unsigned long iVertex)` ; also provides boundary displacement sensitivities of the objective function, with the call:; `Disp_Sens[0] = solver->GetNodes()->GetBoundDisp_Sens(iPoint, 0);`. These values are, in effect the sensitivity of the objective function with respect to the grid node displacements as some Finite Difference tests confirmed. Anyway such values are different by the values mentioned above in question 2. Is that correct? Am I ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1017
https://github.com/su2code/SU2/issues/1017:831,Performance,perform,perform,831,"Hello SU2 community,. I'm currently interested in the theoretical background used in SU2_DOT (both in the FD or AD option). Is it available somewhere? The use I'm interested in is the propagation of the sensitivity of the selected objective function with respect to the boundary grid displacements to the FFD control point displacements. Moreover I have two specific questions:. 1) If, for design optimisation, design variables are the FFD control points, once performed the point inversion (which is usually done only at the beginning of the optimization process), the relation between surface grid nodes and FFD control points is fixed and analytically given by the Bernstein polynomials, once provided the parametric coordinates. Why, then, the need to perform the chain rule with Finite Differences or AD?. 2) SU2_DOT uses, to perform the chain rule, surface adjoint solution(in case of FD) or the volume adjoint solution (in case of AD). These values are provided in output by the SU2_CFD adjoint solver. If printing the solution in CSV format I can read, among others, values such `""Sensitivity_x"",""Sensitivity_y"",""Sensitivity_z"",""Surface_Sensitivity""` on every grid point. Now, these values, trying to give a look inside the code, are addressed as, respectively, sensitivities in x/y/z/normal directions. Are these values the sensitivity of the selected objective function with respect to the grid node displacement?. 3) In file `python_wrapper_structure.cpp` function; `vector<passivedouble> CDriver::GetMeshDisp_Sensitivity(unsigned short iMarker, unsigned long iVertex)` ; also provides boundary displacement sensitivities of the objective function, with the call:; `Disp_Sens[0] = solver->GetNodes()->GetBoundDisp_Sens(iPoint, 0);`. These values are, in effect the sensitivity of the objective function with respect to the grid node displacements as some Finite Difference tests confirmed. Anyway such values are different by the values mentioned above in question 2. Is that correct? Am I ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1017
https://github.com/su2code/SU2/issues/1017:1884,Testability,test,tests,1884,"(both in the FD or AD option). Is it available somewhere? The use I'm interested in is the propagation of the sensitivity of the selected objective function with respect to the boundary grid displacements to the FFD control point displacements. Moreover I have two specific questions:. 1) If, for design optimisation, design variables are the FFD control points, once performed the point inversion (which is usually done only at the beginning of the optimization process), the relation between surface grid nodes and FFD control points is fixed and analytically given by the Bernstein polynomials, once provided the parametric coordinates. Why, then, the need to perform the chain rule with Finite Differences or AD?. 2) SU2_DOT uses, to perform the chain rule, surface adjoint solution(in case of FD) or the volume adjoint solution (in case of AD). These values are provided in output by the SU2_CFD adjoint solver. If printing the solution in CSV format I can read, among others, values such `""Sensitivity_x"",""Sensitivity_y"",""Sensitivity_z"",""Surface_Sensitivity""` on every grid point. Now, these values, trying to give a look inside the code, are addressed as, respectively, sensitivities in x/y/z/normal directions. Are these values the sensitivity of the selected objective function with respect to the grid node displacement?. 3) In file `python_wrapper_structure.cpp` function; `vector<passivedouble> CDriver::GetMeshDisp_Sensitivity(unsigned short iMarker, unsigned long iVertex)` ; also provides boundary displacement sensitivities of the objective function, with the call:; `Disp_Sens[0] = solver->GetNodes()->GetBoundDisp_Sens(iPoint, 0);`. These values are, in effect the sensitivity of the objective function with respect to the grid node displacements as some Finite Difference tests confirmed. Anyway such values are different by the values mentioned above in question 2. Is that correct? Am I misunderstanding the meaning of the CSV adjoint output?. Thanks in advance for the interest!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1017
https://github.com/su2code/SU2/pull/1018:883,Deployability,update,updated,883,"Updating my Fork. ## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1018
https://github.com/su2code/SU2/pull/1018:810,Testability,test,test,810,"Updating my Fork. ## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1018
https://github.com/su2code/SU2/pull/1018:432,Usability,guid,guide,432,"Updating my Fork. ## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1018
https://github.com/su2code/SU2/issues/1019:181,Availability,error,error,181,"Hello SU2 developers, ; I tried to build from source the new SU2 v7.0.5 by following the quick compilation guide but after the command. `./meson.py build`. I received the following error. ```; Downloading CoDiPack '501dcf0305df147481630f20ce37c2e624fb351f'; Downloading MeDiPack 'edde14f9ac4026b72b1e130f61c0a78e8652afa5'; Downloading meson '29ef4478df6d3aaca40c7993f125b29409be1de2'; Downloading ninja '52649de2c56b63f42bc59513d51286531c595b44'; ninja executable not found. Building ...; bootstrapping ninja...; warning: A compatible version of re2c (>= 0.11.3) was not found; changes to src/*.in.cc will not affect your build.; wrote build.ninja.; bootstrap complete. rebuilding...; [29/29] LINK ninja; The Meson build system; Version: 0.54.999; Source dir: /home/roby/SU2/SU2v7; Build dir: /home/roby/SU2/SU2v7/build; Build type: native build; Project name: SU2; Project version: 7.0.5 ""Blackbird""; C compiler for the host machine: cc (gcc 5.4.0 ""cc (Ubuntu 5.4.0-6ubuntu1~16.04.12) 5.4.0 20160609""); C linker for the host machine: cc ld.bfd 2.26.1; C++ compiler for the host machine: c++ (gcc 5.4.0 ""c++ (Ubuntu 5.4.0-6ubuntu1~16.04.12) 5.4.0 20160609""); C++ linker for the host machine: c++ ld.bfd 2.26.1; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Found pkg-config: /usr/bin/pkg-config (0.29.1); Run-time dependency MPI for c found: YES 1.10.2; Run-time dependency MPI for cpp found: YES 1.10.2; Message: Extracting boost ... externals/tecio/meson.build:6:2: ERROR: Command ""/usr/bin/python3 /home/roby/SU2/SU2v7/meson_scripts/extract_file.py boost.tar.gz /home/roby/SU2/SU2v7/externals/tecio"" failed with status 1. A full log can be found at /home/roby/SU2/SU2v7/build/meson-logs/meson-log.txt; ```. Best regards",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1019
https://github.com/su2code/SU2/issues/1019:193,Availability,Down,Downloading,193,"Hello SU2 developers, ; I tried to build from source the new SU2 v7.0.5 by following the quick compilation guide but after the command. `./meson.py build`. I received the following error. ```; Downloading CoDiPack '501dcf0305df147481630f20ce37c2e624fb351f'; Downloading MeDiPack 'edde14f9ac4026b72b1e130f61c0a78e8652afa5'; Downloading meson '29ef4478df6d3aaca40c7993f125b29409be1de2'; Downloading ninja '52649de2c56b63f42bc59513d51286531c595b44'; ninja executable not found. Building ...; bootstrapping ninja...; warning: A compatible version of re2c (>= 0.11.3) was not found; changes to src/*.in.cc will not affect your build.; wrote build.ninja.; bootstrap complete. rebuilding...; [29/29] LINK ninja; The Meson build system; Version: 0.54.999; Source dir: /home/roby/SU2/SU2v7; Build dir: /home/roby/SU2/SU2v7/build; Build type: native build; Project name: SU2; Project version: 7.0.5 ""Blackbird""; C compiler for the host machine: cc (gcc 5.4.0 ""cc (Ubuntu 5.4.0-6ubuntu1~16.04.12) 5.4.0 20160609""); C linker for the host machine: cc ld.bfd 2.26.1; C++ compiler for the host machine: c++ (gcc 5.4.0 ""c++ (Ubuntu 5.4.0-6ubuntu1~16.04.12) 5.4.0 20160609""); C++ linker for the host machine: c++ ld.bfd 2.26.1; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Found pkg-config: /usr/bin/pkg-config (0.29.1); Run-time dependency MPI for c found: YES 1.10.2; Run-time dependency MPI for cpp found: YES 1.10.2; Message: Extracting boost ... externals/tecio/meson.build:6:2: ERROR: Command ""/usr/bin/python3 /home/roby/SU2/SU2v7/meson_scripts/extract_file.py boost.tar.gz /home/roby/SU2/SU2v7/externals/tecio"" failed with status 1. A full log can be found at /home/roby/SU2/SU2v7/build/meson-logs/meson-log.txt; ```. Best regards",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1019
https://github.com/su2code/SU2/issues/1019:258,Availability,Down,Downloading,258,"Hello SU2 developers, ; I tried to build from source the new SU2 v7.0.5 by following the quick compilation guide but after the command. `./meson.py build`. I received the following error. ```; Downloading CoDiPack '501dcf0305df147481630f20ce37c2e624fb351f'; Downloading MeDiPack 'edde14f9ac4026b72b1e130f61c0a78e8652afa5'; Downloading meson '29ef4478df6d3aaca40c7993f125b29409be1de2'; Downloading ninja '52649de2c56b63f42bc59513d51286531c595b44'; ninja executable not found. Building ...; bootstrapping ninja...; warning: A compatible version of re2c (>= 0.11.3) was not found; changes to src/*.in.cc will not affect your build.; wrote build.ninja.; bootstrap complete. rebuilding...; [29/29] LINK ninja; The Meson build system; Version: 0.54.999; Source dir: /home/roby/SU2/SU2v7; Build dir: /home/roby/SU2/SU2v7/build; Build type: native build; Project name: SU2; Project version: 7.0.5 ""Blackbird""; C compiler for the host machine: cc (gcc 5.4.0 ""cc (Ubuntu 5.4.0-6ubuntu1~16.04.12) 5.4.0 20160609""); C linker for the host machine: cc ld.bfd 2.26.1; C++ compiler for the host machine: c++ (gcc 5.4.0 ""c++ (Ubuntu 5.4.0-6ubuntu1~16.04.12) 5.4.0 20160609""); C++ linker for the host machine: c++ ld.bfd 2.26.1; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Found pkg-config: /usr/bin/pkg-config (0.29.1); Run-time dependency MPI for c found: YES 1.10.2; Run-time dependency MPI for cpp found: YES 1.10.2; Message: Extracting boost ... externals/tecio/meson.build:6:2: ERROR: Command ""/usr/bin/python3 /home/roby/SU2/SU2v7/meson_scripts/extract_file.py boost.tar.gz /home/roby/SU2/SU2v7/externals/tecio"" failed with status 1. A full log can be found at /home/roby/SU2/SU2v7/build/meson-logs/meson-log.txt; ```. Best regards",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1019
https://github.com/su2code/SU2/issues/1019:323,Availability,Down,Downloading,323,"Hello SU2 developers, ; I tried to build from source the new SU2 v7.0.5 by following the quick compilation guide but after the command. `./meson.py build`. I received the following error. ```; Downloading CoDiPack '501dcf0305df147481630f20ce37c2e624fb351f'; Downloading MeDiPack 'edde14f9ac4026b72b1e130f61c0a78e8652afa5'; Downloading meson '29ef4478df6d3aaca40c7993f125b29409be1de2'; Downloading ninja '52649de2c56b63f42bc59513d51286531c595b44'; ninja executable not found. Building ...; bootstrapping ninja...; warning: A compatible version of re2c (>= 0.11.3) was not found; changes to src/*.in.cc will not affect your build.; wrote build.ninja.; bootstrap complete. rebuilding...; [29/29] LINK ninja; The Meson build system; Version: 0.54.999; Source dir: /home/roby/SU2/SU2v7; Build dir: /home/roby/SU2/SU2v7/build; Build type: native build; Project name: SU2; Project version: 7.0.5 ""Blackbird""; C compiler for the host machine: cc (gcc 5.4.0 ""cc (Ubuntu 5.4.0-6ubuntu1~16.04.12) 5.4.0 20160609""); C linker for the host machine: cc ld.bfd 2.26.1; C++ compiler for the host machine: c++ (gcc 5.4.0 ""c++ (Ubuntu 5.4.0-6ubuntu1~16.04.12) 5.4.0 20160609""); C++ linker for the host machine: c++ ld.bfd 2.26.1; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Found pkg-config: /usr/bin/pkg-config (0.29.1); Run-time dependency MPI for c found: YES 1.10.2; Run-time dependency MPI for cpp found: YES 1.10.2; Message: Extracting boost ... externals/tecio/meson.build:6:2: ERROR: Command ""/usr/bin/python3 /home/roby/SU2/SU2v7/meson_scripts/extract_file.py boost.tar.gz /home/roby/SU2/SU2v7/externals/tecio"" failed with status 1. A full log can be found at /home/roby/SU2/SU2v7/build/meson-logs/meson-log.txt; ```. Best regards",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1019
https://github.com/su2code/SU2/issues/1019:385,Availability,Down,Downloading,385,"Hello SU2 developers, ; I tried to build from source the new SU2 v7.0.5 by following the quick compilation guide but after the command. `./meson.py build`. I received the following error. ```; Downloading CoDiPack '501dcf0305df147481630f20ce37c2e624fb351f'; Downloading MeDiPack 'edde14f9ac4026b72b1e130f61c0a78e8652afa5'; Downloading meson '29ef4478df6d3aaca40c7993f125b29409be1de2'; Downloading ninja '52649de2c56b63f42bc59513d51286531c595b44'; ninja executable not found. Building ...; bootstrapping ninja...; warning: A compatible version of re2c (>= 0.11.3) was not found; changes to src/*.in.cc will not affect your build.; wrote build.ninja.; bootstrap complete. rebuilding...; [29/29] LINK ninja; The Meson build system; Version: 0.54.999; Source dir: /home/roby/SU2/SU2v7; Build dir: /home/roby/SU2/SU2v7/build; Build type: native build; Project name: SU2; Project version: 7.0.5 ""Blackbird""; C compiler for the host machine: cc (gcc 5.4.0 ""cc (Ubuntu 5.4.0-6ubuntu1~16.04.12) 5.4.0 20160609""); C linker for the host machine: cc ld.bfd 2.26.1; C++ compiler for the host machine: c++ (gcc 5.4.0 ""c++ (Ubuntu 5.4.0-6ubuntu1~16.04.12) 5.4.0 20160609""); C++ linker for the host machine: c++ ld.bfd 2.26.1; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Found pkg-config: /usr/bin/pkg-config (0.29.1); Run-time dependency MPI for c found: YES 1.10.2; Run-time dependency MPI for cpp found: YES 1.10.2; Message: Extracting boost ... externals/tecio/meson.build:6:2: ERROR: Command ""/usr/bin/python3 /home/roby/SU2/SU2v7/meson_scripts/extract_file.py boost.tar.gz /home/roby/SU2/SU2v7/externals/tecio"" failed with status 1. A full log can be found at /home/roby/SU2/SU2v7/build/meson-logs/meson-log.txt; ```. Best regards",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1019
https://github.com/su2code/SU2/issues/1019:1528,Availability,ERROR,ERROR,1528,"Hello SU2 developers, ; I tried to build from source the new SU2 v7.0.5 by following the quick compilation guide but after the command. `./meson.py build`. I received the following error. ```; Downloading CoDiPack '501dcf0305df147481630f20ce37c2e624fb351f'; Downloading MeDiPack 'edde14f9ac4026b72b1e130f61c0a78e8652afa5'; Downloading meson '29ef4478df6d3aaca40c7993f125b29409be1de2'; Downloading ninja '52649de2c56b63f42bc59513d51286531c595b44'; ninja executable not found. Building ...; bootstrapping ninja...; warning: A compatible version of re2c (>= 0.11.3) was not found; changes to src/*.in.cc will not affect your build.; wrote build.ninja.; bootstrap complete. rebuilding...; [29/29] LINK ninja; The Meson build system; Version: 0.54.999; Source dir: /home/roby/SU2/SU2v7; Build dir: /home/roby/SU2/SU2v7/build; Build type: native build; Project name: SU2; Project version: 7.0.5 ""Blackbird""; C compiler for the host machine: cc (gcc 5.4.0 ""cc (Ubuntu 5.4.0-6ubuntu1~16.04.12) 5.4.0 20160609""); C linker for the host machine: cc ld.bfd 2.26.1; C++ compiler for the host machine: c++ (gcc 5.4.0 ""c++ (Ubuntu 5.4.0-6ubuntu1~16.04.12) 5.4.0 20160609""); C++ linker for the host machine: c++ ld.bfd 2.26.1; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Found pkg-config: /usr/bin/pkg-config (0.29.1); Run-time dependency MPI for c found: YES 1.10.2; Run-time dependency MPI for cpp found: YES 1.10.2; Message: Extracting boost ... externals/tecio/meson.build:6:2: ERROR: Command ""/usr/bin/python3 /home/roby/SU2/SU2v7/meson_scripts/extract_file.py boost.tar.gz /home/roby/SU2/SU2v7/externals/tecio"" failed with status 1. A full log can be found at /home/roby/SU2/SU2v7/build/meson-logs/meson-log.txt; ```. Best regards",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1019
https://github.com/su2code/SU2/issues/1019:1374,Integrability,depend,dependency,1374,"Hello SU2 developers, ; I tried to build from source the new SU2 v7.0.5 by following the quick compilation guide but after the command. `./meson.py build`. I received the following error. ```; Downloading CoDiPack '501dcf0305df147481630f20ce37c2e624fb351f'; Downloading MeDiPack 'edde14f9ac4026b72b1e130f61c0a78e8652afa5'; Downloading meson '29ef4478df6d3aaca40c7993f125b29409be1de2'; Downloading ninja '52649de2c56b63f42bc59513d51286531c595b44'; ninja executable not found. Building ...; bootstrapping ninja...; warning: A compatible version of re2c (>= 0.11.3) was not found; changes to src/*.in.cc will not affect your build.; wrote build.ninja.; bootstrap complete. rebuilding...; [29/29] LINK ninja; The Meson build system; Version: 0.54.999; Source dir: /home/roby/SU2/SU2v7; Build dir: /home/roby/SU2/SU2v7/build; Build type: native build; Project name: SU2; Project version: 7.0.5 ""Blackbird""; C compiler for the host machine: cc (gcc 5.4.0 ""cc (Ubuntu 5.4.0-6ubuntu1~16.04.12) 5.4.0 20160609""); C linker for the host machine: cc ld.bfd 2.26.1; C++ compiler for the host machine: c++ (gcc 5.4.0 ""c++ (Ubuntu 5.4.0-6ubuntu1~16.04.12) 5.4.0 20160609""); C++ linker for the host machine: c++ ld.bfd 2.26.1; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Found pkg-config: /usr/bin/pkg-config (0.29.1); Run-time dependency MPI for c found: YES 1.10.2; Run-time dependency MPI for cpp found: YES 1.10.2; Message: Extracting boost ... externals/tecio/meson.build:6:2: ERROR: Command ""/usr/bin/python3 /home/roby/SU2/SU2v7/meson_scripts/extract_file.py boost.tar.gz /home/roby/SU2/SU2v7/externals/tecio"" failed with status 1. A full log can be found at /home/roby/SU2/SU2v7/build/meson-logs/meson-log.txt; ```. Best regards",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1019
https://github.com/su2code/SU2/issues/1019:1423,Integrability,depend,dependency,1423,"Hello SU2 developers, ; I tried to build from source the new SU2 v7.0.5 by following the quick compilation guide but after the command. `./meson.py build`. I received the following error. ```; Downloading CoDiPack '501dcf0305df147481630f20ce37c2e624fb351f'; Downloading MeDiPack 'edde14f9ac4026b72b1e130f61c0a78e8652afa5'; Downloading meson '29ef4478df6d3aaca40c7993f125b29409be1de2'; Downloading ninja '52649de2c56b63f42bc59513d51286531c595b44'; ninja executable not found. Building ...; bootstrapping ninja...; warning: A compatible version of re2c (>= 0.11.3) was not found; changes to src/*.in.cc will not affect your build.; wrote build.ninja.; bootstrap complete. rebuilding...; [29/29] LINK ninja; The Meson build system; Version: 0.54.999; Source dir: /home/roby/SU2/SU2v7; Build dir: /home/roby/SU2/SU2v7/build; Build type: native build; Project name: SU2; Project version: 7.0.5 ""Blackbird""; C compiler for the host machine: cc (gcc 5.4.0 ""cc (Ubuntu 5.4.0-6ubuntu1~16.04.12) 5.4.0 20160609""); C linker for the host machine: cc ld.bfd 2.26.1; C++ compiler for the host machine: c++ (gcc 5.4.0 ""c++ (Ubuntu 5.4.0-6ubuntu1~16.04.12) 5.4.0 20160609""); C++ linker for the host machine: c++ ld.bfd 2.26.1; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Found pkg-config: /usr/bin/pkg-config (0.29.1); Run-time dependency MPI for c found: YES 1.10.2; Run-time dependency MPI for cpp found: YES 1.10.2; Message: Extracting boost ... externals/tecio/meson.build:6:2: ERROR: Command ""/usr/bin/python3 /home/roby/SU2/SU2v7/meson_scripts/extract_file.py boost.tar.gz /home/roby/SU2/SU2v7/externals/tecio"" failed with status 1. A full log can be found at /home/roby/SU2/SU2v7/build/meson-logs/meson-log.txt; ```. Best regards",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1019
https://github.com/su2code/SU2/issues/1019:1465,Integrability,Message,Message,1465,"Hello SU2 developers, ; I tried to build from source the new SU2 v7.0.5 by following the quick compilation guide but after the command. `./meson.py build`. I received the following error. ```; Downloading CoDiPack '501dcf0305df147481630f20ce37c2e624fb351f'; Downloading MeDiPack 'edde14f9ac4026b72b1e130f61c0a78e8652afa5'; Downloading meson '29ef4478df6d3aaca40c7993f125b29409be1de2'; Downloading ninja '52649de2c56b63f42bc59513d51286531c595b44'; ninja executable not found. Building ...; bootstrapping ninja...; warning: A compatible version of re2c (>= 0.11.3) was not found; changes to src/*.in.cc will not affect your build.; wrote build.ninja.; bootstrap complete. rebuilding...; [29/29] LINK ninja; The Meson build system; Version: 0.54.999; Source dir: /home/roby/SU2/SU2v7; Build dir: /home/roby/SU2/SU2v7/build; Build type: native build; Project name: SU2; Project version: 7.0.5 ""Blackbird""; C compiler for the host machine: cc (gcc 5.4.0 ""cc (Ubuntu 5.4.0-6ubuntu1~16.04.12) 5.4.0 20160609""); C linker for the host machine: cc ld.bfd 2.26.1; C++ compiler for the host machine: c++ (gcc 5.4.0 ""c++ (Ubuntu 5.4.0-6ubuntu1~16.04.12) 5.4.0 20160609""); C++ linker for the host machine: c++ ld.bfd 2.26.1; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Found pkg-config: /usr/bin/pkg-config (0.29.1); Run-time dependency MPI for c found: YES 1.10.2; Run-time dependency MPI for cpp found: YES 1.10.2; Message: Extracting boost ... externals/tecio/meson.build:6:2: ERROR: Command ""/usr/bin/python3 /home/roby/SU2/SU2v7/meson_scripts/extract_file.py boost.tar.gz /home/roby/SU2/SU2v7/externals/tecio"" failed with status 1. A full log can be found at /home/roby/SU2/SU2v7/build/meson-logs/meson-log.txt; ```. Best regards",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1019
https://github.com/su2code/SU2/issues/1019:1327,Modifiability,config,config,1327,"Hello SU2 developers, ; I tried to build from source the new SU2 v7.0.5 by following the quick compilation guide but after the command. `./meson.py build`. I received the following error. ```; Downloading CoDiPack '501dcf0305df147481630f20ce37c2e624fb351f'; Downloading MeDiPack 'edde14f9ac4026b72b1e130f61c0a78e8652afa5'; Downloading meson '29ef4478df6d3aaca40c7993f125b29409be1de2'; Downloading ninja '52649de2c56b63f42bc59513d51286531c595b44'; ninja executable not found. Building ...; bootstrapping ninja...; warning: A compatible version of re2c (>= 0.11.3) was not found; changes to src/*.in.cc will not affect your build.; wrote build.ninja.; bootstrap complete. rebuilding...; [29/29] LINK ninja; The Meson build system; Version: 0.54.999; Source dir: /home/roby/SU2/SU2v7; Build dir: /home/roby/SU2/SU2v7/build; Build type: native build; Project name: SU2; Project version: 7.0.5 ""Blackbird""; C compiler for the host machine: cc (gcc 5.4.0 ""cc (Ubuntu 5.4.0-6ubuntu1~16.04.12) 5.4.0 20160609""); C linker for the host machine: cc ld.bfd 2.26.1; C++ compiler for the host machine: c++ (gcc 5.4.0 ""c++ (Ubuntu 5.4.0-6ubuntu1~16.04.12) 5.4.0 20160609""); C++ linker for the host machine: c++ ld.bfd 2.26.1; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Found pkg-config: /usr/bin/pkg-config (0.29.1); Run-time dependency MPI for c found: YES 1.10.2; Run-time dependency MPI for cpp found: YES 1.10.2; Message: Extracting boost ... externals/tecio/meson.build:6:2: ERROR: Command ""/usr/bin/python3 /home/roby/SU2/SU2v7/meson_scripts/extract_file.py boost.tar.gz /home/roby/SU2/SU2v7/externals/tecio"" failed with status 1. A full log can be found at /home/roby/SU2/SU2v7/build/meson-logs/meson-log.txt; ```. Best regards",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1019
https://github.com/su2code/SU2/issues/1019:1348,Modifiability,config,config,1348,"Hello SU2 developers, ; I tried to build from source the new SU2 v7.0.5 by following the quick compilation guide but after the command. `./meson.py build`. I received the following error. ```; Downloading CoDiPack '501dcf0305df147481630f20ce37c2e624fb351f'; Downloading MeDiPack 'edde14f9ac4026b72b1e130f61c0a78e8652afa5'; Downloading meson '29ef4478df6d3aaca40c7993f125b29409be1de2'; Downloading ninja '52649de2c56b63f42bc59513d51286531c595b44'; ninja executable not found. Building ...; bootstrapping ninja...; warning: A compatible version of re2c (>= 0.11.3) was not found; changes to src/*.in.cc will not affect your build.; wrote build.ninja.; bootstrap complete. rebuilding...; [29/29] LINK ninja; The Meson build system; Version: 0.54.999; Source dir: /home/roby/SU2/SU2v7; Build dir: /home/roby/SU2/SU2v7/build; Build type: native build; Project name: SU2; Project version: 7.0.5 ""Blackbird""; C compiler for the host machine: cc (gcc 5.4.0 ""cc (Ubuntu 5.4.0-6ubuntu1~16.04.12) 5.4.0 20160609""); C linker for the host machine: cc ld.bfd 2.26.1; C++ compiler for the host machine: c++ (gcc 5.4.0 ""c++ (Ubuntu 5.4.0-6ubuntu1~16.04.12) 5.4.0 20160609""); C++ linker for the host machine: c++ ld.bfd 2.26.1; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Found pkg-config: /usr/bin/pkg-config (0.29.1); Run-time dependency MPI for c found: YES 1.10.2; Run-time dependency MPI for cpp found: YES 1.10.2; Message: Extracting boost ... externals/tecio/meson.build:6:2: ERROR: Command ""/usr/bin/python3 /home/roby/SU2/SU2v7/meson_scripts/extract_file.py boost.tar.gz /home/roby/SU2/SU2v7/externals/tecio"" failed with status 1. A full log can be found at /home/roby/SU2/SU2v7/build/meson-logs/meson-log.txt; ```. Best regards",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1019
https://github.com/su2code/SU2/issues/1019:1692,Testability,log,log,1692,"Hello SU2 developers, ; I tried to build from source the new SU2 v7.0.5 by following the quick compilation guide but after the command. `./meson.py build`. I received the following error. ```; Downloading CoDiPack '501dcf0305df147481630f20ce37c2e624fb351f'; Downloading MeDiPack 'edde14f9ac4026b72b1e130f61c0a78e8652afa5'; Downloading meson '29ef4478df6d3aaca40c7993f125b29409be1de2'; Downloading ninja '52649de2c56b63f42bc59513d51286531c595b44'; ninja executable not found. Building ...; bootstrapping ninja...; warning: A compatible version of re2c (>= 0.11.3) was not found; changes to src/*.in.cc will not affect your build.; wrote build.ninja.; bootstrap complete. rebuilding...; [29/29] LINK ninja; The Meson build system; Version: 0.54.999; Source dir: /home/roby/SU2/SU2v7; Build dir: /home/roby/SU2/SU2v7/build; Build type: native build; Project name: SU2; Project version: 7.0.5 ""Blackbird""; C compiler for the host machine: cc (gcc 5.4.0 ""cc (Ubuntu 5.4.0-6ubuntu1~16.04.12) 5.4.0 20160609""); C linker for the host machine: cc ld.bfd 2.26.1; C++ compiler for the host machine: c++ (gcc 5.4.0 ""c++ (Ubuntu 5.4.0-6ubuntu1~16.04.12) 5.4.0 20160609""); C++ linker for the host machine: c++ ld.bfd 2.26.1; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Found pkg-config: /usr/bin/pkg-config (0.29.1); Run-time dependency MPI for c found: YES 1.10.2; Run-time dependency MPI for cpp found: YES 1.10.2; Message: Extracting boost ... externals/tecio/meson.build:6:2: ERROR: Command ""/usr/bin/python3 /home/roby/SU2/SU2v7/meson_scripts/extract_file.py boost.tar.gz /home/roby/SU2/SU2v7/externals/tecio"" failed with status 1. A full log can be found at /home/roby/SU2/SU2v7/build/meson-logs/meson-log.txt; ```. Best regards",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1019
https://github.com/su2code/SU2/issues/1019:1745,Testability,log,logs,1745,"Hello SU2 developers, ; I tried to build from source the new SU2 v7.0.5 by following the quick compilation guide but after the command. `./meson.py build`. I received the following error. ```; Downloading CoDiPack '501dcf0305df147481630f20ce37c2e624fb351f'; Downloading MeDiPack 'edde14f9ac4026b72b1e130f61c0a78e8652afa5'; Downloading meson '29ef4478df6d3aaca40c7993f125b29409be1de2'; Downloading ninja '52649de2c56b63f42bc59513d51286531c595b44'; ninja executable not found. Building ...; bootstrapping ninja...; warning: A compatible version of re2c (>= 0.11.3) was not found; changes to src/*.in.cc will not affect your build.; wrote build.ninja.; bootstrap complete. rebuilding...; [29/29] LINK ninja; The Meson build system; Version: 0.54.999; Source dir: /home/roby/SU2/SU2v7; Build dir: /home/roby/SU2/SU2v7/build; Build type: native build; Project name: SU2; Project version: 7.0.5 ""Blackbird""; C compiler for the host machine: cc (gcc 5.4.0 ""cc (Ubuntu 5.4.0-6ubuntu1~16.04.12) 5.4.0 20160609""); C linker for the host machine: cc ld.bfd 2.26.1; C++ compiler for the host machine: c++ (gcc 5.4.0 ""c++ (Ubuntu 5.4.0-6ubuntu1~16.04.12) 5.4.0 20160609""); C++ linker for the host machine: c++ ld.bfd 2.26.1; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Found pkg-config: /usr/bin/pkg-config (0.29.1); Run-time dependency MPI for c found: YES 1.10.2; Run-time dependency MPI for cpp found: YES 1.10.2; Message: Extracting boost ... externals/tecio/meson.build:6:2: ERROR: Command ""/usr/bin/python3 /home/roby/SU2/SU2v7/meson_scripts/extract_file.py boost.tar.gz /home/roby/SU2/SU2v7/externals/tecio"" failed with status 1. A full log can be found at /home/roby/SU2/SU2v7/build/meson-logs/meson-log.txt; ```. Best regards",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1019
https://github.com/su2code/SU2/issues/1019:1756,Testability,log,log,1756,"Hello SU2 developers, ; I tried to build from source the new SU2 v7.0.5 by following the quick compilation guide but after the command. `./meson.py build`. I received the following error. ```; Downloading CoDiPack '501dcf0305df147481630f20ce37c2e624fb351f'; Downloading MeDiPack 'edde14f9ac4026b72b1e130f61c0a78e8652afa5'; Downloading meson '29ef4478df6d3aaca40c7993f125b29409be1de2'; Downloading ninja '52649de2c56b63f42bc59513d51286531c595b44'; ninja executable not found. Building ...; bootstrapping ninja...; warning: A compatible version of re2c (>= 0.11.3) was not found; changes to src/*.in.cc will not affect your build.; wrote build.ninja.; bootstrap complete. rebuilding...; [29/29] LINK ninja; The Meson build system; Version: 0.54.999; Source dir: /home/roby/SU2/SU2v7; Build dir: /home/roby/SU2/SU2v7/build; Build type: native build; Project name: SU2; Project version: 7.0.5 ""Blackbird""; C compiler for the host machine: cc (gcc 5.4.0 ""cc (Ubuntu 5.4.0-6ubuntu1~16.04.12) 5.4.0 20160609""); C linker for the host machine: cc ld.bfd 2.26.1; C++ compiler for the host machine: c++ (gcc 5.4.0 ""c++ (Ubuntu 5.4.0-6ubuntu1~16.04.12) 5.4.0 20160609""); C++ linker for the host machine: c++ ld.bfd 2.26.1; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Found pkg-config: /usr/bin/pkg-config (0.29.1); Run-time dependency MPI for c found: YES 1.10.2; Run-time dependency MPI for cpp found: YES 1.10.2; Message: Extracting boost ... externals/tecio/meson.build:6:2: ERROR: Command ""/usr/bin/python3 /home/roby/SU2/SU2v7/meson_scripts/extract_file.py boost.tar.gz /home/roby/SU2/SU2v7/externals/tecio"" failed with status 1. A full log can be found at /home/roby/SU2/SU2v7/build/meson-logs/meson-log.txt; ```. Best regards",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1019
https://github.com/su2code/SU2/issues/1019:107,Usability,guid,guide,107,"Hello SU2 developers, ; I tried to build from source the new SU2 v7.0.5 by following the quick compilation guide but after the command. `./meson.py build`. I received the following error. ```; Downloading CoDiPack '501dcf0305df147481630f20ce37c2e624fb351f'; Downloading MeDiPack 'edde14f9ac4026b72b1e130f61c0a78e8652afa5'; Downloading meson '29ef4478df6d3aaca40c7993f125b29409be1de2'; Downloading ninja '52649de2c56b63f42bc59513d51286531c595b44'; ninja executable not found. Building ...; bootstrapping ninja...; warning: A compatible version of re2c (>= 0.11.3) was not found; changes to src/*.in.cc will not affect your build.; wrote build.ninja.; bootstrap complete. rebuilding...; [29/29] LINK ninja; The Meson build system; Version: 0.54.999; Source dir: /home/roby/SU2/SU2v7; Build dir: /home/roby/SU2/SU2v7/build; Build type: native build; Project name: SU2; Project version: 7.0.5 ""Blackbird""; C compiler for the host machine: cc (gcc 5.4.0 ""cc (Ubuntu 5.4.0-6ubuntu1~16.04.12) 5.4.0 20160609""); C linker for the host machine: cc ld.bfd 2.26.1; C++ compiler for the host machine: c++ (gcc 5.4.0 ""c++ (Ubuntu 5.4.0-6ubuntu1~16.04.12) 5.4.0 20160609""); C++ linker for the host machine: c++ ld.bfd 2.26.1; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Found pkg-config: /usr/bin/pkg-config (0.29.1); Run-time dependency MPI for c found: YES 1.10.2; Run-time dependency MPI for cpp found: YES 1.10.2; Message: Extracting boost ... externals/tecio/meson.build:6:2: ERROR: Command ""/usr/bin/python3 /home/roby/SU2/SU2v7/meson_scripts/extract_file.py boost.tar.gz /home/roby/SU2/SU2v7/externals/tecio"" failed with status 1. A full log can be found at /home/roby/SU2/SU2v7/build/meson-logs/meson-log.txt; ```. Best regards",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1019
https://github.com/su2code/SU2/pull/1020:1118,Deployability,update,updated,1118,"## Proposed Changes; So I took a common method that folks use to converge multi physics problems expressed as fixed point iterations (the IQN-ILS) and applied it to the inner iterations of the discrete adjoint drivers (single and multizone), it seems to work well... I was having some issues when the primal solver does not converge so well for optimization edge cases, and this keeps the adjoint from diverging.; I'll post some results at some point. Other than storing a number of solution snapshots (20 seems like a good number) the overhead is minimal (and also provided you have Lapack/MKL, compile for OpenMP, with fast-math, and AVX support). ## Related Work; Already has #1015; Resolves #1021 ; Resolves #1025; Resolves #1029. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1020
https://github.com/su2code/SU2/pull/1020:345,Performance,optimiz,optimization,345,"## Proposed Changes; So I took a common method that folks use to converge multi physics problems expressed as fixed point iterations (the IQN-ILS) and applied it to the inner iterations of the discrete adjoint drivers (single and multizone), it seems to work well... I was having some issues when the primal solver does not converge so well for optimization edge cases, and this keeps the adjoint from diverging.; I'll post some results at some point. Other than storing a number of solution snapshots (20 seems like a good number) the overhead is minimal (and also provided you have Lapack/MKL, compile for OpenMP, with fast-math, and AVX support). ## Related Work; Already has #1015; Resolves #1021 ; Resolves #1025; Resolves #1029. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1020
https://github.com/su2code/SU2/pull/1020:1045,Testability,test,test,1045,"## Proposed Changes; So I took a common method that folks use to converge multi physics problems expressed as fixed point iterations (the IQN-ILS) and applied it to the inner iterations of the discrete adjoint drivers (single and multizone), it seems to work well... I was having some issues when the primal solver does not converge so well for optimization edge cases, and this keeps the adjoint from diverging.; I'll post some results at some point. Other than storing a number of solution snapshots (20 seems like a good number) the overhead is minimal (and also provided you have Lapack/MKL, compile for OpenMP, with fast-math, and AVX support). ## Related Work; Already has #1015; Resolves #1021 ; Resolves #1025; Resolves #1029. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1020
https://github.com/su2code/SU2/pull/1022:178,Deployability,update,update,178,"## Proposed Changes; The objective is to provide a natural (i.e. readable) way to write code that extracts all the performance modern CPU have to offer. As described in the last update of #789 this will require completely different numerics classes, also to address other inefficiencies they have. For now all centered schemes and plain Roe have been ""ported"" (this also adds JST with matrix dissipation).; Most of the auxiliary CNumerics functions were also ported as consequence (inviscid fluxes, Jacobians, and so on) and so implementing new schemes only gets easier. If you want to test this, the new numerics are called for Roe on ideal gas without low Mach corrections (enabled by option USE_VECTORIZATION=YES) and also for centered schemes.; To get good performance on gcc you need the following optimization flags:; `-O2 -funroll-loops -ffast-math -march=?? -mtune=??` Where ?? should be something with AVX (e.g. `haswell`, `skylake`).; There are AVX and AVX512 specific optimizations.; Also the OpenMP simd directive is used, at least on gcc this makes a difference (because it is stubborn at vectorizing) so -Dwith-omp=true when calling meson.py.; You can expect around 30% speedup +- 10% on problems that do not need a lot of linear solver iterations, or more on machines with AVX512. ## Related Work; #789. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1022
https://github.com/su2code/SU2/pull/1022:1702,Deployability,update,updated,1702,"## Proposed Changes; The objective is to provide a natural (i.e. readable) way to write code that extracts all the performance modern CPU have to offer. As described in the last update of #789 this will require completely different numerics classes, also to address other inefficiencies they have. For now all centered schemes and plain Roe have been ""ported"" (this also adds JST with matrix dissipation).; Most of the auxiliary CNumerics functions were also ported as consequence (inviscid fluxes, Jacobians, and so on) and so implementing new schemes only gets easier. If you want to test this, the new numerics are called for Roe on ideal gas without low Mach corrections (enabled by option USE_VECTORIZATION=YES) and also for centered schemes.; To get good performance on gcc you need the following optimization flags:; `-O2 -funroll-loops -ffast-math -march=?? -mtune=??` Where ?? should be something with AVX (e.g. `haswell`, `skylake`).; There are AVX and AVX512 specific optimizations.; Also the OpenMP simd directive is used, at least on gcc this makes a difference (because it is stubborn at vectorizing) so -Dwith-omp=true when calling meson.py.; You can expect around 30% speedup +- 10% on problems that do not need a lot of linear solver iterations, or more on machines with AVX512. ## Related Work; #789. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1022
https://github.com/su2code/SU2/pull/1022:115,Performance,perform,performance,115,"## Proposed Changes; The objective is to provide a natural (i.e. readable) way to write code that extracts all the performance modern CPU have to offer. As described in the last update of #789 this will require completely different numerics classes, also to address other inefficiencies they have. For now all centered schemes and plain Roe have been ""ported"" (this also adds JST with matrix dissipation).; Most of the auxiliary CNumerics functions were also ported as consequence (inviscid fluxes, Jacobians, and so on) and so implementing new schemes only gets easier. If you want to test this, the new numerics are called for Roe on ideal gas without low Mach corrections (enabled by option USE_VECTORIZATION=YES) and also for centered schemes.; To get good performance on gcc you need the following optimization flags:; `-O2 -funroll-loops -ffast-math -march=?? -mtune=??` Where ?? should be something with AVX (e.g. `haswell`, `skylake`).; There are AVX and AVX512 specific optimizations.; Also the OpenMP simd directive is used, at least on gcc this makes a difference (because it is stubborn at vectorizing) so -Dwith-omp=true when calling meson.py.; You can expect around 30% speedup +- 10% on problems that do not need a lot of linear solver iterations, or more on machines with AVX512. ## Related Work; #789. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1022
https://github.com/su2code/SU2/pull/1022:761,Performance,perform,performance,761,"## Proposed Changes; The objective is to provide a natural (i.e. readable) way to write code that extracts all the performance modern CPU have to offer. As described in the last update of #789 this will require completely different numerics classes, also to address other inefficiencies they have. For now all centered schemes and plain Roe have been ""ported"" (this also adds JST with matrix dissipation).; Most of the auxiliary CNumerics functions were also ported as consequence (inviscid fluxes, Jacobians, and so on) and so implementing new schemes only gets easier. If you want to test this, the new numerics are called for Roe on ideal gas without low Mach corrections (enabled by option USE_VECTORIZATION=YES) and also for centered schemes.; To get good performance on gcc you need the following optimization flags:; `-O2 -funroll-loops -ffast-math -march=?? -mtune=??` Where ?? should be something with AVX (e.g. `haswell`, `skylake`).; There are AVX and AVX512 specific optimizations.; Also the OpenMP simd directive is used, at least on gcc this makes a difference (because it is stubborn at vectorizing) so -Dwith-omp=true when calling meson.py.; You can expect around 30% speedup +- 10% on problems that do not need a lot of linear solver iterations, or more on machines with AVX512. ## Related Work; #789. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1022
https://github.com/su2code/SU2/pull/1022:803,Performance,optimiz,optimization,803,"## Proposed Changes; The objective is to provide a natural (i.e. readable) way to write code that extracts all the performance modern CPU have to offer. As described in the last update of #789 this will require completely different numerics classes, also to address other inefficiencies they have. For now all centered schemes and plain Roe have been ""ported"" (this also adds JST with matrix dissipation).; Most of the auxiliary CNumerics functions were also ported as consequence (inviscid fluxes, Jacobians, and so on) and so implementing new schemes only gets easier. If you want to test this, the new numerics are called for Roe on ideal gas without low Mach corrections (enabled by option USE_VECTORIZATION=YES) and also for centered schemes.; To get good performance on gcc you need the following optimization flags:; `-O2 -funroll-loops -ffast-math -march=?? -mtune=??` Where ?? should be something with AVX (e.g. `haswell`, `skylake`).; There are AVX and AVX512 specific optimizations.; Also the OpenMP simd directive is used, at least on gcc this makes a difference (because it is stubborn at vectorizing) so -Dwith-omp=true when calling meson.py.; You can expect around 30% speedup +- 10% on problems that do not need a lot of linear solver iterations, or more on machines with AVX512. ## Related Work; #789. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1022
https://github.com/su2code/SU2/pull/1022:979,Performance,optimiz,optimizations,979,"## Proposed Changes; The objective is to provide a natural (i.e. readable) way to write code that extracts all the performance modern CPU have to offer. As described in the last update of #789 this will require completely different numerics classes, also to address other inefficiencies they have. For now all centered schemes and plain Roe have been ""ported"" (this also adds JST with matrix dissipation).; Most of the auxiliary CNumerics functions were also ported as consequence (inviscid fluxes, Jacobians, and so on) and so implementing new schemes only gets easier. If you want to test this, the new numerics are called for Roe on ideal gas without low Mach corrections (enabled by option USE_VECTORIZATION=YES) and also for centered schemes.; To get good performance on gcc you need the following optimization flags:; `-O2 -funroll-loops -ffast-math -march=?? -mtune=??` Where ?? should be something with AVX (e.g. `haswell`, `skylake`).; There are AVX and AVX512 specific optimizations.; Also the OpenMP simd directive is used, at least on gcc this makes a difference (because it is stubborn at vectorizing) so -Dwith-omp=true when calling meson.py.; You can expect around 30% speedup +- 10% on problems that do not need a lot of linear solver iterations, or more on machines with AVX512. ## Related Work; #789. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1022
https://github.com/su2code/SU2/pull/1022:586,Testability,test,test,586,"## Proposed Changes; The objective is to provide a natural (i.e. readable) way to write code that extracts all the performance modern CPU have to offer. As described in the last update of #789 this will require completely different numerics classes, also to address other inefficiencies they have. For now all centered schemes and plain Roe have been ""ported"" (this also adds JST with matrix dissipation).; Most of the auxiliary CNumerics functions were also ported as consequence (inviscid fluxes, Jacobians, and so on) and so implementing new schemes only gets easier. If you want to test this, the new numerics are called for Roe on ideal gas without low Mach corrections (enabled by option USE_VECTORIZATION=YES) and also for centered schemes.; To get good performance on gcc you need the following optimization flags:; `-O2 -funroll-loops -ffast-math -march=?? -mtune=??` Where ?? should be something with AVX (e.g. `haswell`, `skylake`).; There are AVX and AVX512 specific optimizations.; Also the OpenMP simd directive is used, at least on gcc this makes a difference (because it is stubborn at vectorizing) so -Dwith-omp=true when calling meson.py.; You can expect around 30% speedup +- 10% on problems that do not need a lot of linear solver iterations, or more on machines with AVX512. ## Related Work; #789. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1022
https://github.com/su2code/SU2/pull/1022:1090,Testability,stub,stubborn,1090,"## Proposed Changes; The objective is to provide a natural (i.e. readable) way to write code that extracts all the performance modern CPU have to offer. As described in the last update of #789 this will require completely different numerics classes, also to address other inefficiencies they have. For now all centered schemes and plain Roe have been ""ported"" (this also adds JST with matrix dissipation).; Most of the auxiliary CNumerics functions were also ported as consequence (inviscid fluxes, Jacobians, and so on) and so implementing new schemes only gets easier. If you want to test this, the new numerics are called for Roe on ideal gas without low Mach corrections (enabled by option USE_VECTORIZATION=YES) and also for centered schemes.; To get good performance on gcc you need the following optimization flags:; `-O2 -funroll-loops -ffast-math -march=?? -mtune=??` Where ?? should be something with AVX (e.g. `haswell`, `skylake`).; There are AVX and AVX512 specific optimizations.; Also the OpenMP simd directive is used, at least on gcc this makes a difference (because it is stubborn at vectorizing) so -Dwith-omp=true when calling meson.py.; You can expect around 30% speedup +- 10% on problems that do not need a lot of linear solver iterations, or more on machines with AVX512. ## Related Work; #789. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1022
https://github.com/su2code/SU2/pull/1022:1629,Testability,test,test,1629,"## Proposed Changes; The objective is to provide a natural (i.e. readable) way to write code that extracts all the performance modern CPU have to offer. As described in the last update of #789 this will require completely different numerics classes, also to address other inefficiencies they have. For now all centered schemes and plain Roe have been ""ported"" (this also adds JST with matrix dissipation).; Most of the auxiliary CNumerics functions were also ported as consequence (inviscid fluxes, Jacobians, and so on) and so implementing new schemes only gets easier. If you want to test this, the new numerics are called for Roe on ideal gas without low Mach corrections (enabled by option USE_VECTORIZATION=YES) and also for centered schemes.; To get good performance on gcc you need the following optimization flags:; `-O2 -funroll-loops -ffast-math -march=?? -mtune=??` Where ?? should be something with AVX (e.g. `haswell`, `skylake`).; There are AVX and AVX512 specific optimizations.; Also the OpenMP simd directive is used, at least on gcc this makes a difference (because it is stubborn at vectorizing) so -Dwith-omp=true when calling meson.py.; You can expect around 30% speedup +- 10% on problems that do not need a lot of linear solver iterations, or more on machines with AVX512. ## Related Work; #789. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1022
https://github.com/su2code/SU2/issues/1023:335,Availability,down,down,335,"**SCALE_GRID does not ""always"" work**. Hello Everybody,; I have been using the SCALE_GRID function in SU2 quite often with previous versions of SU2, without any problem. However, after passing to v7.0.5 and working with a completely new mesh the SCALE_GRID option does not seem to work anymore (at least for me!). I am trying to scale down my mesh of a factor 0.001. In the config file, I set up the following parameters :; - DV_KIND= SCALE_GRID; - % Marker of the surface in which we are going apply the shape deformation; DV_MARKER= (Inlet_wall ) %this has also been commented but the result is the same; - DV_PARAM= ( 1.0 ); - % Value of the shape deformation; DV_VALUE=0.001. However, when I run SU2_DEF I obtained the following . *--------------------- Volumetric grid scaling (ZONE 0) ------------------; Scaling the mesh by a constant factor of 1.*. **To Reproduce**; *The config file is attached. The mesh file is quite big but it can be provided on request.*; [inlet.cfg.txt](https://github.com/su2code/SU2/files/4761675/inlet.cfg.txt). **Desktop (please complete the following information):**; - OS: [centos7.5 and centos8]; - C++ compiler and version: [g++ (GCC) 4.8.5]; - MPI implementation and version: [OpenMPI 4.0.0]; - SU2 Version: [v7.0.5]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1023
https://github.com/su2code/SU2/issues/1023:374,Modifiability,config,config,374,"**SCALE_GRID does not ""always"" work**. Hello Everybody,; I have been using the SCALE_GRID function in SU2 quite often with previous versions of SU2, without any problem. However, after passing to v7.0.5 and working with a completely new mesh the SCALE_GRID option does not seem to work anymore (at least for me!). I am trying to scale down my mesh of a factor 0.001. In the config file, I set up the following parameters :; - DV_KIND= SCALE_GRID; - % Marker of the surface in which we are going apply the shape deformation; DV_MARKER= (Inlet_wall ) %this has also been commented but the result is the same; - DV_PARAM= ( 1.0 ); - % Value of the shape deformation; DV_VALUE=0.001. However, when I run SU2_DEF I obtained the following . *--------------------- Volumetric grid scaling (ZONE 0) ------------------; Scaling the mesh by a constant factor of 1.*. **To Reproduce**; *The config file is attached. The mesh file is quite big but it can be provided on request.*; [inlet.cfg.txt](https://github.com/su2code/SU2/files/4761675/inlet.cfg.txt). **Desktop (please complete the following information):**; - OS: [centos7.5 and centos8]; - C++ compiler and version: [g++ (GCC) 4.8.5]; - MPI implementation and version: [OpenMPI 4.0.0]; - SU2 Version: [v7.0.5]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1023
https://github.com/su2code/SU2/issues/1023:880,Modifiability,config,config,880,"**SCALE_GRID does not ""always"" work**. Hello Everybody,; I have been using the SCALE_GRID function in SU2 quite often with previous versions of SU2, without any problem. However, after passing to v7.0.5 and working with a completely new mesh the SCALE_GRID option does not seem to work anymore (at least for me!). I am trying to scale down my mesh of a factor 0.001. In the config file, I set up the following parameters :; - DV_KIND= SCALE_GRID; - % Marker of the surface in which we are going apply the shape deformation; DV_MARKER= (Inlet_wall ) %this has also been commented but the result is the same; - DV_PARAM= ( 1.0 ); - % Value of the shape deformation; DV_VALUE=0.001. However, when I run SU2_DEF I obtained the following . *--------------------- Volumetric grid scaling (ZONE 0) ------------------; Scaling the mesh by a constant factor of 1.*. **To Reproduce**; *The config file is attached. The mesh file is quite big but it can be provided on request.*; [inlet.cfg.txt](https://github.com/su2code/SU2/files/4761675/inlet.cfg.txt). **Desktop (please complete the following information):**; - OS: [centos7.5 and centos8]; - C++ compiler and version: [g++ (GCC) 4.8.5]; - MPI implementation and version: [OpenMPI 4.0.0]; - SU2 Version: [v7.0.5]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1023
https://github.com/su2code/SU2/issues/1024:151,Performance,optimiz,optimization,151,[case728.txt](https://github.com/su2code/SU2/files/4794021/case728.txt); Is there any way to set max ITER for adjoint solution separately during shape optimization? My direct solution takes a lot of iterations to converge but adjoint converges quickly. The adjoint solution also does not stop after the convergence criteria is satisfied. It appears that there is no convergence criteria set for adjoint set in the solver. Thanks in advance.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1024
https://github.com/su2code/SU2/issues/1025:27,Modifiability,variab,variables,27,"The compressible primitive variables are T u v w P rho H, we output the limiters for T u v w P with the names:; LIMITER_DENSITY; LIMITER_MOMENTUM-X; LIMITER_MOMENTUM-Y; LIMITER_MOMENTUM-Z; LIMITER_ENERGY; Which would be ok if we were referring to the conservative variables. Also the limiter for temperature is not relevant for ideal gases as the state is derived from the enthalpy instead.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1025
https://github.com/su2code/SU2/issues/1025:264,Modifiability,variab,variables,264,"The compressible primitive variables are T u v w P rho H, we output the limiters for T u v w P with the names:; LIMITER_DENSITY; LIMITER_MOMENTUM-X; LIMITER_MOMENTUM-Y; LIMITER_MOMENTUM-Z; LIMITER_ENERGY; Which would be ok if we were referring to the conservative variables. Also the limiter for temperature is not relevant for ideal gases as the state is derived from the enthalpy instead.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1025
https://github.com/su2code/SU2/issues/1026:521,Energy Efficiency,green,green,521,"[case728.txt](https://github.com/su2code/SU2/files/4793965/case728.txt). I am running a shape optimization of a single blade row stator with an FFD box of degree (5 , 11, 2). The max deformation is of the order 1E-5. The change in mesh visually is very minimal but after SU2 deforms the mesh it generates negative volumes and a negative Jacobian. It is also happening if I use only one DV in the optimization. As a result my DSN_002 DIRECT results are all diverging. In the image, the red box is the deformed box and the green one is the undeformed box. You can also see the blade. The number of nodes are just shy of 1 million in the whole volume mesh. ![untitled](https://user-images.githubusercontent.com/46273732/84716054-2747b500-af40-11ea-9877-3f229a8957ce.png). SU2 mesh stats for DSN001:; Computing mesh quality statistics for the dual control volumes.; +--------------------------------------------------------------+; | Mesh Quality Metric| Minimum| Maximum|; +--------------------------------------------------------------+; | Orthogonality Angle (deg.)| 52.4241| 89.9962|; | CV Face Area Aspect Ratio| 1.02662| 2123.48|; | CV Sub-Volume Ratio| 1.00007| 3.63253|; +--------------------------------------------------------------+. SU2_mesh stats for DSN002:; Computing mesh quality statistics for the dual control volumes.; +--------------------------------------------------------------+; | Mesh Quality Metric| Minimum| Maximum|; +--------------------------------------------------------------+; | Orthogonality Angle (deg.)| -42.6863| 89.9963|; | CV Face Area Aspect Ratio| 1.02903| 31868.8|; | CV Sub-Volume Ratio| 1.00034| 40627.1|; +--------------------------------------------------------------+. From Tecplot I can calculate that the cell volumes and the Jacobian is also negative for DSN002 for some cells. I believe if I reduce my OPT_RELAX_FACTOR I can have deformations of the O(-6) but isn't this already too small. Are there any parameters I can change in the config file to av",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1026
https://github.com/su2code/SU2/issues/1026:1841,Energy Efficiency,reduce,reduce,1841,"tps://github.com/su2code/SU2/files/4793965/case728.txt). I am running a shape optimization of a single blade row stator with an FFD box of degree (5 , 11, 2). The max deformation is of the order 1E-5. The change in mesh visually is very minimal but after SU2 deforms the mesh it generates negative volumes and a negative Jacobian. It is also happening if I use only one DV in the optimization. As a result my DSN_002 DIRECT results are all diverging. In the image, the red box is the deformed box and the green one is the undeformed box. You can also see the blade. The number of nodes are just shy of 1 million in the whole volume mesh. ![untitled](https://user-images.githubusercontent.com/46273732/84716054-2747b500-af40-11ea-9877-3f229a8957ce.png). SU2 mesh stats for DSN001:; Computing mesh quality statistics for the dual control volumes.; +--------------------------------------------------------------+; | Mesh Quality Metric| Minimum| Maximum|; +--------------------------------------------------------------+; | Orthogonality Angle (deg.)| 52.4241| 89.9962|; | CV Face Area Aspect Ratio| 1.02662| 2123.48|; | CV Sub-Volume Ratio| 1.00007| 3.63253|; +--------------------------------------------------------------+. SU2_mesh stats for DSN002:; Computing mesh quality statistics for the dual control volumes.; +--------------------------------------------------------------+; | Mesh Quality Metric| Minimum| Maximum|; +--------------------------------------------------------------+; | Orthogonality Angle (deg.)| -42.6863| 89.9963|; | CV Face Area Aspect Ratio| 1.02903| 31868.8|; | CV Sub-Volume Ratio| 1.00034| 40627.1|; +--------------------------------------------------------------+. From Tecplot I can calculate that the cell volumes and the Jacobian is also negative for DSN002 for some cells. I believe if I reduce my OPT_RELAX_FACTOR I can have deformations of the O(-6) but isn't this already too small. Are there any parameters I can change in the config file to avoid this issue?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1026
https://github.com/su2code/SU2/issues/1026:1984,Modifiability,config,config,1984,"tps://github.com/su2code/SU2/files/4793965/case728.txt). I am running a shape optimization of a single blade row stator with an FFD box of degree (5 , 11, 2). The max deformation is of the order 1E-5. The change in mesh visually is very minimal but after SU2 deforms the mesh it generates negative volumes and a negative Jacobian. It is also happening if I use only one DV in the optimization. As a result my DSN_002 DIRECT results are all diverging. In the image, the red box is the deformed box and the green one is the undeformed box. You can also see the blade. The number of nodes are just shy of 1 million in the whole volume mesh. ![untitled](https://user-images.githubusercontent.com/46273732/84716054-2747b500-af40-11ea-9877-3f229a8957ce.png). SU2 mesh stats for DSN001:; Computing mesh quality statistics for the dual control volumes.; +--------------------------------------------------------------+; | Mesh Quality Metric| Minimum| Maximum|; +--------------------------------------------------------------+; | Orthogonality Angle (deg.)| 52.4241| 89.9962|; | CV Face Area Aspect Ratio| 1.02662| 2123.48|; | CV Sub-Volume Ratio| 1.00007| 3.63253|; +--------------------------------------------------------------+. SU2_mesh stats for DSN002:; Computing mesh quality statistics for the dual control volumes.; +--------------------------------------------------------------+; | Mesh Quality Metric| Minimum| Maximum|; +--------------------------------------------------------------+; | Orthogonality Angle (deg.)| -42.6863| 89.9963|; | CV Face Area Aspect Ratio| 1.02903| 31868.8|; | CV Sub-Volume Ratio| 1.00034| 40627.1|; +--------------------------------------------------------------+. From Tecplot I can calculate that the cell volumes and the Jacobian is also negative for DSN002 for some cells. I believe if I reduce my OPT_RELAX_FACTOR I can have deformations of the O(-6) but isn't this already too small. Are there any parameters I can change in the config file to avoid this issue?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1026
https://github.com/su2code/SU2/issues/1026:94,Performance,optimiz,optimization,94,"[case728.txt](https://github.com/su2code/SU2/files/4793965/case728.txt). I am running a shape optimization of a single blade row stator with an FFD box of degree (5 , 11, 2). The max deformation is of the order 1E-5. The change in mesh visually is very minimal but after SU2 deforms the mesh it generates negative volumes and a negative Jacobian. It is also happening if I use only one DV in the optimization. As a result my DSN_002 DIRECT results are all diverging. In the image, the red box is the deformed box and the green one is the undeformed box. You can also see the blade. The number of nodes are just shy of 1 million in the whole volume mesh. ![untitled](https://user-images.githubusercontent.com/46273732/84716054-2747b500-af40-11ea-9877-3f229a8957ce.png). SU2 mesh stats for DSN001:; Computing mesh quality statistics for the dual control volumes.; +--------------------------------------------------------------+; | Mesh Quality Metric| Minimum| Maximum|; +--------------------------------------------------------------+; | Orthogonality Angle (deg.)| 52.4241| 89.9962|; | CV Face Area Aspect Ratio| 1.02662| 2123.48|; | CV Sub-Volume Ratio| 1.00007| 3.63253|; +--------------------------------------------------------------+. SU2_mesh stats for DSN002:; Computing mesh quality statistics for the dual control volumes.; +--------------------------------------------------------------+; | Mesh Quality Metric| Minimum| Maximum|; +--------------------------------------------------------------+; | Orthogonality Angle (deg.)| -42.6863| 89.9963|; | CV Face Area Aspect Ratio| 1.02903| 31868.8|; | CV Sub-Volume Ratio| 1.00034| 40627.1|; +--------------------------------------------------------------+. From Tecplot I can calculate that the cell volumes and the Jacobian is also negative for DSN002 for some cells. I believe if I reduce my OPT_RELAX_FACTOR I can have deformations of the O(-6) but isn't this already too small. Are there any parameters I can change in the config file to av",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1026
https://github.com/su2code/SU2/issues/1026:396,Performance,optimiz,optimization,396,"[case728.txt](https://github.com/su2code/SU2/files/4793965/case728.txt). I am running a shape optimization of a single blade row stator with an FFD box of degree (5 , 11, 2). The max deformation is of the order 1E-5. The change in mesh visually is very minimal but after SU2 deforms the mesh it generates negative volumes and a negative Jacobian. It is also happening if I use only one DV in the optimization. As a result my DSN_002 DIRECT results are all diverging. In the image, the red box is the deformed box and the green one is the undeformed box. You can also see the blade. The number of nodes are just shy of 1 million in the whole volume mesh. ![untitled](https://user-images.githubusercontent.com/46273732/84716054-2747b500-af40-11ea-9877-3f229a8957ce.png). SU2 mesh stats for DSN001:; Computing mesh quality statistics for the dual control volumes.; +--------------------------------------------------------------+; | Mesh Quality Metric| Minimum| Maximum|; +--------------------------------------------------------------+; | Orthogonality Angle (deg.)| 52.4241| 89.9962|; | CV Face Area Aspect Ratio| 1.02662| 2123.48|; | CV Sub-Volume Ratio| 1.00007| 3.63253|; +--------------------------------------------------------------+. SU2_mesh stats for DSN002:; Computing mesh quality statistics for the dual control volumes.; +--------------------------------------------------------------+; | Mesh Quality Metric| Minimum| Maximum|; +--------------------------------------------------------------+; | Orthogonality Angle (deg.)| -42.6863| 89.9963|; | CV Face Area Aspect Ratio| 1.02903| 31868.8|; | CV Sub-Volume Ratio| 1.00034| 40627.1|; +--------------------------------------------------------------+. From Tecplot I can calculate that the cell volumes and the Jacobian is also negative for DSN002 for some cells. I believe if I reduce my OPT_RELAX_FACTOR I can have deformations of the O(-6) but isn't this already too small. Are there any parameters I can change in the config file to av",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1026
https://github.com/su2code/SU2/issues/1026:1999,Safety,avoid,avoid,1999,"tps://github.com/su2code/SU2/files/4793965/case728.txt). I am running a shape optimization of a single blade row stator with an FFD box of degree (5 , 11, 2). The max deformation is of the order 1E-5. The change in mesh visually is very minimal but after SU2 deforms the mesh it generates negative volumes and a negative Jacobian. It is also happening if I use only one DV in the optimization. As a result my DSN_002 DIRECT results are all diverging. In the image, the red box is the deformed box and the green one is the undeformed box. You can also see the blade. The number of nodes are just shy of 1 million in the whole volume mesh. ![untitled](https://user-images.githubusercontent.com/46273732/84716054-2747b500-af40-11ea-9877-3f229a8957ce.png). SU2 mesh stats for DSN001:; Computing mesh quality statistics for the dual control volumes.; +--------------------------------------------------------------+; | Mesh Quality Metric| Minimum| Maximum|; +--------------------------------------------------------------+; | Orthogonality Angle (deg.)| 52.4241| 89.9962|; | CV Face Area Aspect Ratio| 1.02662| 2123.48|; | CV Sub-Volume Ratio| 1.00007| 3.63253|; +--------------------------------------------------------------+. SU2_mesh stats for DSN002:; Computing mesh quality statistics for the dual control volumes.; +--------------------------------------------------------------+; | Mesh Quality Metric| Minimum| Maximum|; +--------------------------------------------------------------+; | Orthogonality Angle (deg.)| -42.6863| 89.9963|; | CV Face Area Aspect Ratio| 1.02903| 31868.8|; | CV Sub-Volume Ratio| 1.00034| 40627.1|; +--------------------------------------------------------------+. From Tecplot I can calculate that the cell volumes and the Jacobian is also negative for DSN002 for some cells. I believe if I reduce my OPT_RELAX_FACTOR I can have deformations of the O(-6) but isn't this already too small. Are there any parameters I can change in the config file to avoid this issue?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1026
https://github.com/su2code/SU2/pull/1027:934,Deployability,update,updated,934,"## Proposed Changes; Addition of a new actuator disk model with a variable load and swirl distributions along disk radius. Contributors:; Theoretical and Applied Aerodynamic Research Group (TAARG) of University of Naples Federico II.; EttoreSaetta, lorenzorusso07, rtogna. ## Related Work; Introduction of new options in the config. file.; Introduction of an additional input file that contains the propeller data.; Introduction of additional c++ functions.; Addition of code lines to existing functions preserving the original actuator disk model. ## PR Checklist; - [X ] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ X] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1027
https://github.com/su2code/SU2/pull/1027:66,Modifiability,variab,variable,66,"## Proposed Changes; Addition of a new actuator disk model with a variable load and swirl distributions along disk radius. Contributors:; Theoretical and Applied Aerodynamic Research Group (TAARG) of University of Naples Federico II.; EttoreSaetta, lorenzorusso07, rtogna. ## Related Work; Introduction of new options in the config. file.; Introduction of an additional input file that contains the propeller data.; Introduction of additional c++ functions.; Addition of code lines to existing functions preserving the original actuator disk model. ## PR Checklist; - [X ] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ X] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1027
https://github.com/su2code/SU2/pull/1027:325,Modifiability,config,config,325,"## Proposed Changes; Addition of a new actuator disk model with a variable load and swirl distributions along disk radius. Contributors:; Theoretical and Applied Aerodynamic Research Group (TAARG) of University of Naples Federico II.; EttoreSaetta, lorenzorusso07, rtogna. ## Related Work; Introduction of new options in the config. file.; Introduction of an additional input file that contains the propeller data.; Introduction of additional c++ functions.; Addition of code lines to existing functions preserving the original actuator disk model. ## PR Checklist; - [X ] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ X] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1027
https://github.com/su2code/SU2/pull/1027:75,Performance,load,load,75,"## Proposed Changes; Addition of a new actuator disk model with a variable load and swirl distributions along disk radius. Contributors:; Theoretical and Applied Aerodynamic Research Group (TAARG) of University of Naples Federico II.; EttoreSaetta, lorenzorusso07, rtogna. ## Related Work; Introduction of new options in the config. file.; Introduction of an additional input file that contains the propeller data.; Introduction of additional c++ functions.; Addition of code lines to existing functions preserving the original actuator disk model. ## PR Checklist; - [X ] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ X] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1027
https://github.com/su2code/SU2/pull/1027:861,Testability,test,test,861,"## Proposed Changes; Addition of a new actuator disk model with a variable load and swirl distributions along disk radius. Contributors:; Theoretical and Applied Aerodynamic Research Group (TAARG) of University of Naples Federico II.; EttoreSaetta, lorenzorusso07, rtogna. ## Related Work; Introduction of new options in the config. file.; Introduction of an additional input file that contains the propeller data.; Introduction of additional c++ functions.; Addition of code lines to existing functions preserving the original actuator disk model. ## PR Checklist; - [X ] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ X] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1027
https://github.com/su2code/SU2/pull/1030:730,Deployability,update,updated,730,"## Proposed Changes; General cleanup / optimization of the orientation checks.; Plus I tried to detect distorted, rather than flipped, elements separately as the node swaps done in `CPrimalGrid::Change_Orientation` can only fix flipped elements, if they are ""twisted"" changing the orientation does not fix the element, e.g. vtk_pixel vs vtk_quad. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1030
https://github.com/su2code/SU2/pull/1030:39,Performance,optimiz,optimization,39,"## Proposed Changes; General cleanup / optimization of the orientation checks.; Plus I tried to detect distorted, rather than flipped, elements separately as the node swaps done in `CPrimalGrid::Change_Orientation` can only fix flipped elements, if they are ""twisted"" changing the orientation does not fix the element, e.g. vtk_pixel vs vtk_quad. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1030
https://github.com/su2code/SU2/pull/1030:96,Safety,detect,detect,96,"## Proposed Changes; General cleanup / optimization of the orientation checks.; Plus I tried to detect distorted, rather than flipped, elements separately as the node swaps done in `CPrimalGrid::Change_Orientation` can only fix flipped elements, if they are ""twisted"" changing the orientation does not fix the element, e.g. vtk_pixel vs vtk_quad. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1030
https://github.com/su2code/SU2/pull/1030:657,Testability,test,test,657,"## Proposed Changes; General cleanup / optimization of the orientation checks.; Plus I tried to detect distorted, rather than flipped, elements separately as the node swaps done in `CPrimalGrid::Change_Orientation` can only fix flipped elements, if they are ""twisted"" changing the orientation does not fix the element, e.g. vtk_pixel vs vtk_quad. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1030
https://github.com/su2code/SU2/pull/1031:675,Deployability,update,updated,675,"## Proposed Changes; The computation was done in two loops to account for period comms in between.; When there are no periodic comms one loop is sufficient, better locality, more effective AD accumulation.; To do this the function was split in two, which is also good. ## Related Work; #594. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1031
https://github.com/su2code/SU2/pull/1031:602,Testability,test,test,602,"## Proposed Changes; The computation was done in two loops to account for period comms in between.; When there are no periodic comms one loop is sufficient, better locality, more effective AD accumulation.; To do this the function was split in two, which is also good. ## Related Work; #594. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1031
https://github.com/su2code/SU2/issues/1032:178,Availability,error,error,178,"Hi,. I am running shape optimization on the HPC ARCC cluster we have here at U of Cincinnati. Running it normally through a shell script with sbatch commands gives the following error:. ```; The application appears to have been direct launched using ""srun"",; but OMPI was not built with SLURM's PMI support and therefore cannot; execute. There are several options for building PMI support under; SLURM, depending upon the SLURM version you are using:. version 16.05 or later: you can use SLURM's PMIx support. This; requires that you configure and build SLURM --with-pmix. Versions earlier than 16.05: you must use either SLURM's PMI-1 or; PMI-2 support. SLURM builds PMI-1 by default, or you can manually; install PMI-2. You must then build Open MPI using --with-pmi pointing; to the SLURM PMI library location. Please configure as appropriate and try again.; ```. Since this was using srun, I found a way to by-pass this issue by changing:; https://github.com/su2code/SU2/blob/d0e10f8a365f61ceaaeb5dd822da83f06394e087/SU2_PY/SU2/run/interface.py#L58. to; `mpi_Command = 'mpirun -n %i %s'`. which works fine (for single node). A better way would be:. `mpi_Command = 'mpirun %s'`. but then I get the following error:. ```; File ""/home/baigan/SU2/bin/SU2/run/interface.py"", line 277, in build_command; the_Command = mpi_Command % (processes,the_Command); TypeError: not all arguments converted during string formatting; ```. I see in interface.py that using srun was the way SU2 was expected to run on SLURM. But since it doesn't I am curious what is the way other people are running if they use SLURM. This PMIx support issue may be specific to the cluster I am using.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1032
https://github.com/su2code/SU2/issues/1032:1210,Availability,error,error,1210,"Hi,. I am running shape optimization on the HPC ARCC cluster we have here at U of Cincinnati. Running it normally through a shell script with sbatch commands gives the following error:. ```; The application appears to have been direct launched using ""srun"",; but OMPI was not built with SLURM's PMI support and therefore cannot; execute. There are several options for building PMI support under; SLURM, depending upon the SLURM version you are using:. version 16.05 or later: you can use SLURM's PMIx support. This; requires that you configure and build SLURM --with-pmix. Versions earlier than 16.05: you must use either SLURM's PMI-1 or; PMI-2 support. SLURM builds PMI-1 by default, or you can manually; install PMI-2. You must then build Open MPI using --with-pmi pointing; to the SLURM PMI library location. Please configure as appropriate and try again.; ```. Since this was using srun, I found a way to by-pass this issue by changing:; https://github.com/su2code/SU2/blob/d0e10f8a365f61ceaaeb5dd822da83f06394e087/SU2_PY/SU2/run/interface.py#L58. to; `mpi_Command = 'mpirun -n %i %s'`. which works fine (for single node). A better way would be:. `mpi_Command = 'mpirun %s'`. but then I get the following error:. ```; File ""/home/baigan/SU2/bin/SU2/run/interface.py"", line 277, in build_command; the_Command = mpi_Command % (processes,the_Command); TypeError: not all arguments converted during string formatting; ```. I see in interface.py that using srun was the way SU2 was expected to run on SLURM. But since it doesn't I am curious what is the way other people are running if they use SLURM. This PMIx support issue may be specific to the cluster I am using.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1032
https://github.com/su2code/SU2/issues/1032:707,Deployability,install,install,707,"Hi,. I am running shape optimization on the HPC ARCC cluster we have here at U of Cincinnati. Running it normally through a shell script with sbatch commands gives the following error:. ```; The application appears to have been direct launched using ""srun"",; but OMPI was not built with SLURM's PMI support and therefore cannot; execute. There are several options for building PMI support under; SLURM, depending upon the SLURM version you are using:. version 16.05 or later: you can use SLURM's PMIx support. This; requires that you configure and build SLURM --with-pmix. Versions earlier than 16.05: you must use either SLURM's PMI-1 or; PMI-2 support. SLURM builds PMI-1 by default, or you can manually; install PMI-2. You must then build Open MPI using --with-pmi pointing; to the SLURM PMI library location. Please configure as appropriate and try again.; ```. Since this was using srun, I found a way to by-pass this issue by changing:; https://github.com/su2code/SU2/blob/d0e10f8a365f61ceaaeb5dd822da83f06394e087/SU2_PY/SU2/run/interface.py#L58. to; `mpi_Command = 'mpirun -n %i %s'`. which works fine (for single node). A better way would be:. `mpi_Command = 'mpirun %s'`. but then I get the following error:. ```; File ""/home/baigan/SU2/bin/SU2/run/interface.py"", line 277, in build_command; the_Command = mpi_Command % (processes,the_Command); TypeError: not all arguments converted during string formatting; ```. I see in interface.py that using srun was the way SU2 was expected to run on SLURM. But since it doesn't I am curious what is the way other people are running if they use SLURM. This PMIx support issue may be specific to the cluster I am using.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1032
https://github.com/su2code/SU2/issues/1032:403,Integrability,depend,depending,403,"Hi,. I am running shape optimization on the HPC ARCC cluster we have here at U of Cincinnati. Running it normally through a shell script with sbatch commands gives the following error:. ```; The application appears to have been direct launched using ""srun"",; but OMPI was not built with SLURM's PMI support and therefore cannot; execute. There are several options for building PMI support under; SLURM, depending upon the SLURM version you are using:. version 16.05 or later: you can use SLURM's PMIx support. This; requires that you configure and build SLURM --with-pmix. Versions earlier than 16.05: you must use either SLURM's PMI-1 or; PMI-2 support. SLURM builds PMI-1 by default, or you can manually; install PMI-2. You must then build Open MPI using --with-pmi pointing; to the SLURM PMI library location. Please configure as appropriate and try again.; ```. Since this was using srun, I found a way to by-pass this issue by changing:; https://github.com/su2code/SU2/blob/d0e10f8a365f61ceaaeb5dd822da83f06394e087/SU2_PY/SU2/run/interface.py#L58. to; `mpi_Command = 'mpirun -n %i %s'`. which works fine (for single node). A better way would be:. `mpi_Command = 'mpirun %s'`. but then I get the following error:. ```; File ""/home/baigan/SU2/bin/SU2/run/interface.py"", line 277, in build_command; the_Command = mpi_Command % (processes,the_Command); TypeError: not all arguments converted during string formatting; ```. I see in interface.py that using srun was the way SU2 was expected to run on SLURM. But since it doesn't I am curious what is the way other people are running if they use SLURM. This PMIx support issue may be specific to the cluster I am using.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1032
https://github.com/su2code/SU2/issues/1032:1035,Integrability,interface,interface,1035,"Hi,. I am running shape optimization on the HPC ARCC cluster we have here at U of Cincinnati. Running it normally through a shell script with sbatch commands gives the following error:. ```; The application appears to have been direct launched using ""srun"",; but OMPI was not built with SLURM's PMI support and therefore cannot; execute. There are several options for building PMI support under; SLURM, depending upon the SLURM version you are using:. version 16.05 or later: you can use SLURM's PMIx support. This; requires that you configure and build SLURM --with-pmix. Versions earlier than 16.05: you must use either SLURM's PMI-1 or; PMI-2 support. SLURM builds PMI-1 by default, or you can manually; install PMI-2. You must then build Open MPI using --with-pmi pointing; to the SLURM PMI library location. Please configure as appropriate and try again.; ```. Since this was using srun, I found a way to by-pass this issue by changing:; https://github.com/su2code/SU2/blob/d0e10f8a365f61ceaaeb5dd822da83f06394e087/SU2_PY/SU2/run/interface.py#L58. to; `mpi_Command = 'mpirun -n %i %s'`. which works fine (for single node). A better way would be:. `mpi_Command = 'mpirun %s'`. but then I get the following error:. ```; File ""/home/baigan/SU2/bin/SU2/run/interface.py"", line 277, in build_command; the_Command = mpi_Command % (processes,the_Command); TypeError: not all arguments converted during string formatting; ```. I see in interface.py that using srun was the way SU2 was expected to run on SLURM. But since it doesn't I am curious what is the way other people are running if they use SLURM. This PMIx support issue may be specific to the cluster I am using.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1032
https://github.com/su2code/SU2/issues/1032:1258,Integrability,interface,interface,1258,"Hi,. I am running shape optimization on the HPC ARCC cluster we have here at U of Cincinnati. Running it normally through a shell script with sbatch commands gives the following error:. ```; The application appears to have been direct launched using ""srun"",; but OMPI was not built with SLURM's PMI support and therefore cannot; execute. There are several options for building PMI support under; SLURM, depending upon the SLURM version you are using:. version 16.05 or later: you can use SLURM's PMIx support. This; requires that you configure and build SLURM --with-pmix. Versions earlier than 16.05: you must use either SLURM's PMI-1 or; PMI-2 support. SLURM builds PMI-1 by default, or you can manually; install PMI-2. You must then build Open MPI using --with-pmi pointing; to the SLURM PMI library location. Please configure as appropriate and try again.; ```. Since this was using srun, I found a way to by-pass this issue by changing:; https://github.com/su2code/SU2/blob/d0e10f8a365f61ceaaeb5dd822da83f06394e087/SU2_PY/SU2/run/interface.py#L58. to; `mpi_Command = 'mpirun -n %i %s'`. which works fine (for single node). A better way would be:. `mpi_Command = 'mpirun %s'`. but then I get the following error:. ```; File ""/home/baigan/SU2/bin/SU2/run/interface.py"", line 277, in build_command; the_Command = mpi_Command % (processes,the_Command); TypeError: not all arguments converted during string formatting; ```. I see in interface.py that using srun was the way SU2 was expected to run on SLURM. But since it doesn't I am curious what is the way other people are running if they use SLURM. This PMIx support issue may be specific to the cluster I am using.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1032
https://github.com/su2code/SU2/issues/1032:1433,Integrability,interface,interface,1433,"Hi,. I am running shape optimization on the HPC ARCC cluster we have here at U of Cincinnati. Running it normally through a shell script with sbatch commands gives the following error:. ```; The application appears to have been direct launched using ""srun"",; but OMPI was not built with SLURM's PMI support and therefore cannot; execute. There are several options for building PMI support under; SLURM, depending upon the SLURM version you are using:. version 16.05 or later: you can use SLURM's PMIx support. This; requires that you configure and build SLURM --with-pmix. Versions earlier than 16.05: you must use either SLURM's PMI-1 or; PMI-2 support. SLURM builds PMI-1 by default, or you can manually; install PMI-2. You must then build Open MPI using --with-pmi pointing; to the SLURM PMI library location. Please configure as appropriate and try again.; ```. Since this was using srun, I found a way to by-pass this issue by changing:; https://github.com/su2code/SU2/blob/d0e10f8a365f61ceaaeb5dd822da83f06394e087/SU2_PY/SU2/run/interface.py#L58. to; `mpi_Command = 'mpirun -n %i %s'`. which works fine (for single node). A better way would be:. `mpi_Command = 'mpirun %s'`. but then I get the following error:. ```; File ""/home/baigan/SU2/bin/SU2/run/interface.py"", line 277, in build_command; the_Command = mpi_Command % (processes,the_Command); TypeError: not all arguments converted during string formatting; ```. I see in interface.py that using srun was the way SU2 was expected to run on SLURM. But since it doesn't I am curious what is the way other people are running if they use SLURM. This PMIx support issue may be specific to the cluster I am using.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1032
https://github.com/su2code/SU2/issues/1032:534,Modifiability,config,configure,534,"Hi,. I am running shape optimization on the HPC ARCC cluster we have here at U of Cincinnati. Running it normally through a shell script with sbatch commands gives the following error:. ```; The application appears to have been direct launched using ""srun"",; but OMPI was not built with SLURM's PMI support and therefore cannot; execute. There are several options for building PMI support under; SLURM, depending upon the SLURM version you are using:. version 16.05 or later: you can use SLURM's PMIx support. This; requires that you configure and build SLURM --with-pmix. Versions earlier than 16.05: you must use either SLURM's PMI-1 or; PMI-2 support. SLURM builds PMI-1 by default, or you can manually; install PMI-2. You must then build Open MPI using --with-pmi pointing; to the SLURM PMI library location. Please configure as appropriate and try again.; ```. Since this was using srun, I found a way to by-pass this issue by changing:; https://github.com/su2code/SU2/blob/d0e10f8a365f61ceaaeb5dd822da83f06394e087/SU2_PY/SU2/run/interface.py#L58. to; `mpi_Command = 'mpirun -n %i %s'`. which works fine (for single node). A better way would be:. `mpi_Command = 'mpirun %s'`. but then I get the following error:. ```; File ""/home/baigan/SU2/bin/SU2/run/interface.py"", line 277, in build_command; the_Command = mpi_Command % (processes,the_Command); TypeError: not all arguments converted during string formatting; ```. I see in interface.py that using srun was the way SU2 was expected to run on SLURM. But since it doesn't I am curious what is the way other people are running if they use SLURM. This PMIx support issue may be specific to the cluster I am using.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1032
https://github.com/su2code/SU2/issues/1032:820,Modifiability,config,configure,820,"Hi,. I am running shape optimization on the HPC ARCC cluster we have here at U of Cincinnati. Running it normally through a shell script with sbatch commands gives the following error:. ```; The application appears to have been direct launched using ""srun"",; but OMPI was not built with SLURM's PMI support and therefore cannot; execute. There are several options for building PMI support under; SLURM, depending upon the SLURM version you are using:. version 16.05 or later: you can use SLURM's PMIx support. This; requires that you configure and build SLURM --with-pmix. Versions earlier than 16.05: you must use either SLURM's PMI-1 or; PMI-2 support. SLURM builds PMI-1 by default, or you can manually; install PMI-2. You must then build Open MPI using --with-pmi pointing; to the SLURM PMI library location. Please configure as appropriate and try again.; ```. Since this was using srun, I found a way to by-pass this issue by changing:; https://github.com/su2code/SU2/blob/d0e10f8a365f61ceaaeb5dd822da83f06394e087/SU2_PY/SU2/run/interface.py#L58. to; `mpi_Command = 'mpirun -n %i %s'`. which works fine (for single node). A better way would be:. `mpi_Command = 'mpirun %s'`. but then I get the following error:. ```; File ""/home/baigan/SU2/bin/SU2/run/interface.py"", line 277, in build_command; the_Command = mpi_Command % (processes,the_Command); TypeError: not all arguments converted during string formatting; ```. I see in interface.py that using srun was the way SU2 was expected to run on SLURM. But since it doesn't I am curious what is the way other people are running if they use SLURM. This PMIx support issue may be specific to the cluster I am using.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1032
https://github.com/su2code/SU2/issues/1032:24,Performance,optimiz,optimization,24,"Hi,. I am running shape optimization on the HPC ARCC cluster we have here at U of Cincinnati. Running it normally through a shell script with sbatch commands gives the following error:. ```; The application appears to have been direct launched using ""srun"",; but OMPI was not built with SLURM's PMI support and therefore cannot; execute. There are several options for building PMI support under; SLURM, depending upon the SLURM version you are using:. version 16.05 or later: you can use SLURM's PMIx support. This; requires that you configure and build SLURM --with-pmix. Versions earlier than 16.05: you must use either SLURM's PMI-1 or; PMI-2 support. SLURM builds PMI-1 by default, or you can manually; install PMI-2. You must then build Open MPI using --with-pmi pointing; to the SLURM PMI library location. Please configure as appropriate and try again.; ```. Since this was using srun, I found a way to by-pass this issue by changing:; https://github.com/su2code/SU2/blob/d0e10f8a365f61ceaaeb5dd822da83f06394e087/SU2_PY/SU2/run/interface.py#L58. to; `mpi_Command = 'mpirun -n %i %s'`. which works fine (for single node). A better way would be:. `mpi_Command = 'mpirun %s'`. but then I get the following error:. ```; File ""/home/baigan/SU2/bin/SU2/run/interface.py"", line 277, in build_command; the_Command = mpi_Command % (processes,the_Command); TypeError: not all arguments converted during string formatting; ```. I see in interface.py that using srun was the way SU2 was expected to run on SLURM. But since it doesn't I am curious what is the way other people are running if they use SLURM. This PMIx support issue may be specific to the cluster I am using.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1032
https://github.com/su2code/SU2/issues/1033:14,Deployability,install,installing,14,"Hello.; After installing latest version 7.0.5 SU2, test case,rotating_caradonna_tung, giving me vtu output files. I cant open it in tecplot or paraview. How can i change the output format ?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1033
https://github.com/su2code/SU2/issues/1033:51,Testability,test,test,51,"Hello.; After installing latest version 7.0.5 SU2, test case,rotating_caradonna_tung, giving me vtu output files. I cant open it in tecplot or paraview. How can i change the output format ?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1033
https://github.com/su2code/SU2/issues/1034:769,Energy Efficiency,efficient,efficient,769,"You've got two options:. 1. Use the cfg option `WRT_BINARY_RESTART= NO` to dump the restart file(s) in human-readable ASCII.; 2. Use the cfg option `OUTPUT_FORMAT= TECPLOT` or `OUTPUT_FORMAT=PARAVIEW` with SU2_SOL to export the solution to an ASCII-formatted tecplot or paraview file. If you're not familiar with SU2_SOL, then check out [the documentation](https://su2code.github.io/docs/Post-processing/). You can find those cfg options in `config_template.cfg` in the root SU2 source code directory. In the end, using the tecplot or paraview option may be your best bet. Trying to manually parse the text files smells like an [XY Problem](https://en.wikipedia.org/wiki/XY_problem). Tecplot and Paraview both have scripting capabilities that make post-processing very efficient. Does that answer your question? Do you have any follow-up concerns?. _Originally posted by @clarkpede in https://github.com/su2code/SU2/issues/787#issuecomment-528435629_",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1034
https://github.com/su2code/SU2/pull/1035:208,Deployability,update,updated,208,"## Proposed Changes; This PR breaks up the following files:; 1. grid_movement_structure; 2. adt_structure. It also gets rid of grid_adaptation_structure and the entire SU2_MSH module. These files have not be updated in a long time are are deprecated. None of the new work in mesh adaptation by @bmunguia uses any of these routines. . ## Related Work; #583 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1035
https://github.com/su2code/SU2/pull/1035:981,Deployability,update,updated,981,"## Proposed Changes; This PR breaks up the following files:; 1. grid_movement_structure; 2. adt_structure. It also gets rid of grid_adaptation_structure and the entire SU2_MSH module. These files have not be updated in a long time are are deprecated. None of the new work in mesh adaptation by @bmunguia uses any of these routines. . ## Related Work; #583 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1035
https://github.com/su2code/SU2/pull/1035:280,Energy Efficiency,adapt,adaptation,280,"## Proposed Changes; This PR breaks up the following files:; 1. grid_movement_structure; 2. adt_structure. It also gets rid of grid_adaptation_structure and the entire SU2_MSH module. These files have not be updated in a long time are are deprecated. None of the new work in mesh adaptation by @bmunguia uses any of these routines. . ## Related Work; #583 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1035
https://github.com/su2code/SU2/pull/1035:322,Integrability,rout,routines,322,"## Proposed Changes; This PR breaks up the following files:; 1. grid_movement_structure; 2. adt_structure. It also gets rid of grid_adaptation_structure and the entire SU2_MSH module. These files have not be updated in a long time are are deprecated. None of the new work in mesh adaptation by @bmunguia uses any of these routines. . ## Related Work; #583 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1035
https://github.com/su2code/SU2/pull/1035:280,Modifiability,adapt,adaptation,280,"## Proposed Changes; This PR breaks up the following files:; 1. grid_movement_structure; 2. adt_structure. It also gets rid of grid_adaptation_structure and the entire SU2_MSH module. These files have not be updated in a long time are are deprecated. None of the new work in mesh adaptation by @bmunguia uses any of these routines. . ## Related Work; #583 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1035
https://github.com/su2code/SU2/pull/1035:908,Testability,test,test,908,"## Proposed Changes; This PR breaks up the following files:; 1. grid_movement_structure; 2. adt_structure. It also gets rid of grid_adaptation_structure and the entire SU2_MSH module. These files have not be updated in a long time are are deprecated. None of the new work in mesh adaptation by @bmunguia uses any of these routines. . ## Related Work; #583 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1035
https://github.com/su2code/SU2/pull/1035:530,Usability,guid,guide,530,"## Proposed Changes; This PR breaks up the following files:; 1. grid_movement_structure; 2. adt_structure. It also gets rid of grid_adaptation_structure and the entire SU2_MSH module. These files have not be updated in a long time are are deprecated. None of the new work in mesh adaptation by @bmunguia uses any of these routines. . ## Related Work; #583 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1035
https://github.com/su2code/SU2/pull/1036:235,Availability,toler,tolerance,235,"## Proposed Changes; This PR fixes a couple issues in the nonlinear adaptive CFL scheme. - Convergence of the linear solver was assumed if the residual was greater than 0.5, which is quite large. I replaced this with the linear solver tolerance.; - The sum of nonlinear residuals was never computed for steady since `TimeIter` was used.; - The under-relaxation parameters for the flow solver and turbulent solver both took the min of each other and were never reset for steady, meaning it was non-increasing. @jayantmukho and I wanted to discuss more possible improvements to the scheme. I wanted to open this up before making any actual changes. - Currently there is a check for stalling residuals (the sum over 100 iterations of delta_Res must be > 0.1 Res), but this doesn't protect against increasing residuals. We should implement another check to prevent divergence.; - Instead of computing a single local CFL for flow/turbulence with a reduction factor for turbulence, maybe it would be better to have both solvers make their own call to `AdaptCFLNumber` and compute their own local CFL based on their own ResRMS. I feel like this would make more sense since the solvers are decoupled anyway. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036
https://github.com/su2code/SU2/pull/1036:1823,Deployability,update,updated,1823,"## Proposed Changes; This PR fixes a couple issues in the nonlinear adaptive CFL scheme. - Convergence of the linear solver was assumed if the residual was greater than 0.5, which is quite large. I replaced this with the linear solver tolerance.; - The sum of nonlinear residuals was never computed for steady since `TimeIter` was used.; - The under-relaxation parameters for the flow solver and turbulent solver both took the min of each other and were never reset for steady, meaning it was non-increasing. @jayantmukho and I wanted to discuss more possible improvements to the scheme. I wanted to open this up before making any actual changes. - Currently there is a check for stalling residuals (the sum over 100 iterations of delta_Res must be > 0.1 Res), but this doesn't protect against increasing residuals. We should implement another check to prevent divergence.; - Instead of computing a single local CFL for flow/turbulence with a reduction factor for turbulence, maybe it would be better to have both solvers make their own call to `AdaptCFLNumber` and compute their own local CFL based on their own ResRMS. I feel like this would make more sense since the solvers are decoupled anyway. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036
https://github.com/su2code/SU2/pull/1036:68,Energy Efficiency,adapt,adaptive,68,"## Proposed Changes; This PR fixes a couple issues in the nonlinear adaptive CFL scheme. - Convergence of the linear solver was assumed if the residual was greater than 0.5, which is quite large. I replaced this with the linear solver tolerance.; - The sum of nonlinear residuals was never computed for steady since `TimeIter` was used.; - The under-relaxation parameters for the flow solver and turbulent solver both took the min of each other and were never reset for steady, meaning it was non-increasing. @jayantmukho and I wanted to discuss more possible improvements to the scheme. I wanted to open this up before making any actual changes. - Currently there is a check for stalling residuals (the sum over 100 iterations of delta_Res must be > 0.1 Res), but this doesn't protect against increasing residuals. We should implement another check to prevent divergence.; - Instead of computing a single local CFL for flow/turbulence with a reduction factor for turbulence, maybe it would be better to have both solvers make their own call to `AdaptCFLNumber` and compute their own local CFL based on their own ResRMS. I feel like this would make more sense since the solvers are decoupled anyway. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036
https://github.com/su2code/SU2/pull/1036:1046,Energy Efficiency,Adapt,AdaptCFLNumber,1046,"## Proposed Changes; This PR fixes a couple issues in the nonlinear adaptive CFL scheme. - Convergence of the linear solver was assumed if the residual was greater than 0.5, which is quite large. I replaced this with the linear solver tolerance.; - The sum of nonlinear residuals was never computed for steady since `TimeIter` was used.; - The under-relaxation parameters for the flow solver and turbulent solver both took the min of each other and were never reset for steady, meaning it was non-increasing. @jayantmukho and I wanted to discuss more possible improvements to the scheme. I wanted to open this up before making any actual changes. - Currently there is a check for stalling residuals (the sum over 100 iterations of delta_Res must be > 0.1 Res), but this doesn't protect against increasing residuals. We should implement another check to prevent divergence.; - Instead of computing a single local CFL for flow/turbulence with a reduction factor for turbulence, maybe it would be better to have both solvers make their own call to `AdaptCFLNumber` and compute their own local CFL based on their own ResRMS. I feel like this would make more sense since the solvers are decoupled anyway. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036
https://github.com/su2code/SU2/pull/1036:68,Modifiability,adapt,adaptive,68,"## Proposed Changes; This PR fixes a couple issues in the nonlinear adaptive CFL scheme. - Convergence of the linear solver was assumed if the residual was greater than 0.5, which is quite large. I replaced this with the linear solver tolerance.; - The sum of nonlinear residuals was never computed for steady since `TimeIter` was used.; - The under-relaxation parameters for the flow solver and turbulent solver both took the min of each other and were never reset for steady, meaning it was non-increasing. @jayantmukho and I wanted to discuss more possible improvements to the scheme. I wanted to open this up before making any actual changes. - Currently there is a check for stalling residuals (the sum over 100 iterations of delta_Res must be > 0.1 Res), but this doesn't protect against increasing residuals. We should implement another check to prevent divergence.; - Instead of computing a single local CFL for flow/turbulence with a reduction factor for turbulence, maybe it would be better to have both solvers make their own call to `AdaptCFLNumber` and compute their own local CFL based on their own ResRMS. I feel like this would make more sense since the solvers are decoupled anyway. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036
https://github.com/su2code/SU2/pull/1036:1046,Modifiability,Adapt,AdaptCFLNumber,1046,"## Proposed Changes; This PR fixes a couple issues in the nonlinear adaptive CFL scheme. - Convergence of the linear solver was assumed if the residual was greater than 0.5, which is quite large. I replaced this with the linear solver tolerance.; - The sum of nonlinear residuals was never computed for steady since `TimeIter` was used.; - The under-relaxation parameters for the flow solver and turbulent solver both took the min of each other and were never reset for steady, meaning it was non-increasing. @jayantmukho and I wanted to discuss more possible improvements to the scheme. I wanted to open this up before making any actual changes. - Currently there is a check for stalling residuals (the sum over 100 iterations of delta_Res must be > 0.1 Res), but this doesn't protect against increasing residuals. We should implement another check to prevent divergence.; - Instead of computing a single local CFL for flow/turbulence with a reduction factor for turbulence, maybe it would be better to have both solvers make their own call to `AdaptCFLNumber` and compute their own local CFL based on their own ResRMS. I feel like this would make more sense since the solvers are decoupled anyway. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036
https://github.com/su2code/SU2/pull/1036:1750,Testability,test,test,1750,"## Proposed Changes; This PR fixes a couple issues in the nonlinear adaptive CFL scheme. - Convergence of the linear solver was assumed if the residual was greater than 0.5, which is quite large. I replaced this with the linear solver tolerance.; - The sum of nonlinear residuals was never computed for steady since `TimeIter` was used.; - The under-relaxation parameters for the flow solver and turbulent solver both took the min of each other and were never reset for steady, meaning it was non-increasing. @jayantmukho and I wanted to discuss more possible improvements to the scheme. I wanted to open this up before making any actual changes. - Currently there is a check for stalling residuals (the sum over 100 iterations of delta_Res must be > 0.1 Res), but this doesn't protect against increasing residuals. We should implement another check to prevent divergence.; - Instead of computing a single local CFL for flow/turbulence with a reduction factor for turbulence, maybe it would be better to have both solvers make their own call to `AdaptCFLNumber` and compute their own local CFL based on their own ResRMS. I feel like this would make more sense since the solvers are decoupled anyway. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036
https://github.com/su2code/SU2/pull/1036:1372,Usability,guid,guide,1372,"## Proposed Changes; This PR fixes a couple issues in the nonlinear adaptive CFL scheme. - Convergence of the linear solver was assumed if the residual was greater than 0.5, which is quite large. I replaced this with the linear solver tolerance.; - The sum of nonlinear residuals was never computed for steady since `TimeIter` was used.; - The under-relaxation parameters for the flow solver and turbulent solver both took the min of each other and were never reset for steady, meaning it was non-increasing. @jayantmukho and I wanted to discuss more possible improvements to the scheme. I wanted to open this up before making any actual changes. - Currently there is a check for stalling residuals (the sum over 100 iterations of delta_Res must be > 0.1 Res), but this doesn't protect against increasing residuals. We should implement another check to prevent divergence.; - Instead of computing a single local CFL for flow/turbulence with a reduction factor for turbulence, maybe it would be better to have both solvers make their own call to `AdaptCFLNumber` and compute their own local CFL based on their own ResRMS. I feel like this would make more sense since the solvers are decoupled anyway. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036
https://github.com/su2code/SU2/issues/1037:239,Availability,error,error,239,"Hello, . We are attempting to provide compilation instructions for one of our users who wishes to use SU2 on our HPC clusters. We use spack to provide library access, including to openmpi. When we use meson and ninja, we run into a linker error: /opt/spack/opt/spack/linux-centos7-nehalem/intel-19.0.3/zlib-1.2.11-zjmi5fwzodf5iizukl7aptz2eexrcblo/lib: file not recognized: Is a directory. The path is provided by pkg-config and the spack provided .pc file. We don't see any errors in the zlib .pc and that package is used frequently in other compilations. As a workaround, we used the version 6 installation procedure on the version 7 source. This produced runnable binaries. Could you let me know if this will fail to produce binaries that meson and ninja would have?. qsub -I -q debug -l nodes=1:ppn=8; on the compute node:; cd into the SU2 git repo then,; module load python-3.7.2-intel-19.0.1-zj5ljxy ; module load openmpi-3.1.5-gcc-9.3.0-cc2bj5i # for gcc mpi compilers.; ./configure --prefix=<install destination> --enable-mpi --with-cc=$(which mpicc) --with-cxx=$(which mpicxx); make -j 8 # compile the code using all 8 cores; make install # copy the binaries to the installation destination; Then, assuming the input file is in the same directory as the SU2_CFD executable I ran it on 8 cores with mpirun:; mpirun -np 8 $PWD/SU2_CFD lam_cylinder.cfg . I got what looked like reasonable output but is are there unit tests I can run to test the installation. Thanks very much for any guidance you can offer. . Matthew",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1037
https://github.com/su2code/SU2/issues/1037:474,Availability,error,errors,474,"Hello, . We are attempting to provide compilation instructions for one of our users who wishes to use SU2 on our HPC clusters. We use spack to provide library access, including to openmpi. When we use meson and ninja, we run into a linker error: /opt/spack/opt/spack/linux-centos7-nehalem/intel-19.0.3/zlib-1.2.11-zjmi5fwzodf5iizukl7aptz2eexrcblo/lib: file not recognized: Is a directory. The path is provided by pkg-config and the spack provided .pc file. We don't see any errors in the zlib .pc and that package is used frequently in other compilations. As a workaround, we used the version 6 installation procedure on the version 7 source. This produced runnable binaries. Could you let me know if this will fail to produce binaries that meson and ninja would have?. qsub -I -q debug -l nodes=1:ppn=8; on the compute node:; cd into the SU2 git repo then,; module load python-3.7.2-intel-19.0.1-zj5ljxy ; module load openmpi-3.1.5-gcc-9.3.0-cc2bj5i # for gcc mpi compilers.; ./configure --prefix=<install destination> --enable-mpi --with-cc=$(which mpicc) --with-cxx=$(which mpicxx); make -j 8 # compile the code using all 8 cores; make install # copy the binaries to the installation destination; Then, assuming the input file is in the same directory as the SU2_CFD executable I ran it on 8 cores with mpirun:; mpirun -np 8 $PWD/SU2_CFD lam_cylinder.cfg . I got what looked like reasonable output but is are there unit tests I can run to test the installation. Thanks very much for any guidance you can offer. . Matthew",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1037
https://github.com/su2code/SU2/issues/1037:595,Deployability,install,installation,595,"Hello, . We are attempting to provide compilation instructions for one of our users who wishes to use SU2 on our HPC clusters. We use spack to provide library access, including to openmpi. When we use meson and ninja, we run into a linker error: /opt/spack/opt/spack/linux-centos7-nehalem/intel-19.0.3/zlib-1.2.11-zjmi5fwzodf5iizukl7aptz2eexrcblo/lib: file not recognized: Is a directory. The path is provided by pkg-config and the spack provided .pc file. We don't see any errors in the zlib .pc and that package is used frequently in other compilations. As a workaround, we used the version 6 installation procedure on the version 7 source. This produced runnable binaries. Could you let me know if this will fail to produce binaries that meson and ninja would have?. qsub -I -q debug -l nodes=1:ppn=8; on the compute node:; cd into the SU2 git repo then,; module load python-3.7.2-intel-19.0.1-zj5ljxy ; module load openmpi-3.1.5-gcc-9.3.0-cc2bj5i # for gcc mpi compilers.; ./configure --prefix=<install destination> --enable-mpi --with-cc=$(which mpicc) --with-cxx=$(which mpicxx); make -j 8 # compile the code using all 8 cores; make install # copy the binaries to the installation destination; Then, assuming the input file is in the same directory as the SU2_CFD executable I ran it on 8 cores with mpirun:; mpirun -np 8 $PWD/SU2_CFD lam_cylinder.cfg . I got what looked like reasonable output but is are there unit tests I can run to test the installation. Thanks very much for any guidance you can offer. . Matthew",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1037
https://github.com/su2code/SU2/issues/1037:999,Deployability,install,install,999,"Hello, . We are attempting to provide compilation instructions for one of our users who wishes to use SU2 on our HPC clusters. We use spack to provide library access, including to openmpi. When we use meson and ninja, we run into a linker error: /opt/spack/opt/spack/linux-centos7-nehalem/intel-19.0.3/zlib-1.2.11-zjmi5fwzodf5iizukl7aptz2eexrcblo/lib: file not recognized: Is a directory. The path is provided by pkg-config and the spack provided .pc file. We don't see any errors in the zlib .pc and that package is used frequently in other compilations. As a workaround, we used the version 6 installation procedure on the version 7 source. This produced runnable binaries. Could you let me know if this will fail to produce binaries that meson and ninja would have?. qsub -I -q debug -l nodes=1:ppn=8; on the compute node:; cd into the SU2 git repo then,; module load python-3.7.2-intel-19.0.1-zj5ljxy ; module load openmpi-3.1.5-gcc-9.3.0-cc2bj5i # for gcc mpi compilers.; ./configure --prefix=<install destination> --enable-mpi --with-cc=$(which mpicc) --with-cxx=$(which mpicxx); make -j 8 # compile the code using all 8 cores; make install # copy the binaries to the installation destination; Then, assuming the input file is in the same directory as the SU2_CFD executable I ran it on 8 cores with mpirun:; mpirun -np 8 $PWD/SU2_CFD lam_cylinder.cfg . I got what looked like reasonable output but is are there unit tests I can run to test the installation. Thanks very much for any guidance you can offer. . Matthew",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1037
https://github.com/su2code/SU2/issues/1037:1139,Deployability,install,install,1139,"Hello, . We are attempting to provide compilation instructions for one of our users who wishes to use SU2 on our HPC clusters. We use spack to provide library access, including to openmpi. When we use meson and ninja, we run into a linker error: /opt/spack/opt/spack/linux-centos7-nehalem/intel-19.0.3/zlib-1.2.11-zjmi5fwzodf5iizukl7aptz2eexrcblo/lib: file not recognized: Is a directory. The path is provided by pkg-config and the spack provided .pc file. We don't see any errors in the zlib .pc and that package is used frequently in other compilations. As a workaround, we used the version 6 installation procedure on the version 7 source. This produced runnable binaries. Could you let me know if this will fail to produce binaries that meson and ninja would have?. qsub -I -q debug -l nodes=1:ppn=8; on the compute node:; cd into the SU2 git repo then,; module load python-3.7.2-intel-19.0.1-zj5ljxy ; module load openmpi-3.1.5-gcc-9.3.0-cc2bj5i # for gcc mpi compilers.; ./configure --prefix=<install destination> --enable-mpi --with-cc=$(which mpicc) --with-cxx=$(which mpicxx); make -j 8 # compile the code using all 8 cores; make install # copy the binaries to the installation destination; Then, assuming the input file is in the same directory as the SU2_CFD executable I ran it on 8 cores with mpirun:; mpirun -np 8 $PWD/SU2_CFD lam_cylinder.cfg . I got what looked like reasonable output but is are there unit tests I can run to test the installation. Thanks very much for any guidance you can offer. . Matthew",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1037
https://github.com/su2code/SU2/issues/1037:1174,Deployability,install,installation,1174,"Hello, . We are attempting to provide compilation instructions for one of our users who wishes to use SU2 on our HPC clusters. We use spack to provide library access, including to openmpi. When we use meson and ninja, we run into a linker error: /opt/spack/opt/spack/linux-centos7-nehalem/intel-19.0.3/zlib-1.2.11-zjmi5fwzodf5iizukl7aptz2eexrcblo/lib: file not recognized: Is a directory. The path is provided by pkg-config and the spack provided .pc file. We don't see any errors in the zlib .pc and that package is used frequently in other compilations. As a workaround, we used the version 6 installation procedure on the version 7 source. This produced runnable binaries. Could you let me know if this will fail to produce binaries that meson and ninja would have?. qsub -I -q debug -l nodes=1:ppn=8; on the compute node:; cd into the SU2 git repo then,; module load python-3.7.2-intel-19.0.1-zj5ljxy ; module load openmpi-3.1.5-gcc-9.3.0-cc2bj5i # for gcc mpi compilers.; ./configure --prefix=<install destination> --enable-mpi --with-cc=$(which mpicc) --with-cxx=$(which mpicxx); make -j 8 # compile the code using all 8 cores; make install # copy the binaries to the installation destination; Then, assuming the input file is in the same directory as the SU2_CFD executable I ran it on 8 cores with mpirun:; mpirun -np 8 $PWD/SU2_CFD lam_cylinder.cfg . I got what looked like reasonable output but is are there unit tests I can run to test the installation. Thanks very much for any guidance you can offer. . Matthew",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1037
https://github.com/su2code/SU2/issues/1037:1451,Deployability,install,installation,1451,"Hello, . We are attempting to provide compilation instructions for one of our users who wishes to use SU2 on our HPC clusters. We use spack to provide library access, including to openmpi. When we use meson and ninja, we run into a linker error: /opt/spack/opt/spack/linux-centos7-nehalem/intel-19.0.3/zlib-1.2.11-zjmi5fwzodf5iizukl7aptz2eexrcblo/lib: file not recognized: Is a directory. The path is provided by pkg-config and the spack provided .pc file. We don't see any errors in the zlib .pc and that package is used frequently in other compilations. As a workaround, we used the version 6 installation procedure on the version 7 source. This produced runnable binaries. Could you let me know if this will fail to produce binaries that meson and ninja would have?. qsub -I -q debug -l nodes=1:ppn=8; on the compute node:; cd into the SU2 git repo then,; module load python-3.7.2-intel-19.0.1-zj5ljxy ; module load openmpi-3.1.5-gcc-9.3.0-cc2bj5i # for gcc mpi compilers.; ./configure --prefix=<install destination> --enable-mpi --with-cc=$(which mpicc) --with-cxx=$(which mpicxx); make -j 8 # compile the code using all 8 cores; make install # copy the binaries to the installation destination; Then, assuming the input file is in the same directory as the SU2_CFD executable I ran it on 8 cores with mpirun:; mpirun -np 8 $PWD/SU2_CFD lam_cylinder.cfg . I got what looked like reasonable output but is are there unit tests I can run to test the installation. Thanks very much for any guidance you can offer. . Matthew",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1037
https://github.com/su2code/SU2/issues/1037:417,Modifiability,config,config,417,"Hello, . We are attempting to provide compilation instructions for one of our users who wishes to use SU2 on our HPC clusters. We use spack to provide library access, including to openmpi. When we use meson and ninja, we run into a linker error: /opt/spack/opt/spack/linux-centos7-nehalem/intel-19.0.3/zlib-1.2.11-zjmi5fwzodf5iizukl7aptz2eexrcblo/lib: file not recognized: Is a directory. The path is provided by pkg-config and the spack provided .pc file. We don't see any errors in the zlib .pc and that package is used frequently in other compilations. As a workaround, we used the version 6 installation procedure on the version 7 source. This produced runnable binaries. Could you let me know if this will fail to produce binaries that meson and ninja would have?. qsub -I -q debug -l nodes=1:ppn=8; on the compute node:; cd into the SU2 git repo then,; module load python-3.7.2-intel-19.0.1-zj5ljxy ; module load openmpi-3.1.5-gcc-9.3.0-cc2bj5i # for gcc mpi compilers.; ./configure --prefix=<install destination> --enable-mpi --with-cc=$(which mpicc) --with-cxx=$(which mpicxx); make -j 8 # compile the code using all 8 cores; make install # copy the binaries to the installation destination; Then, assuming the input file is in the same directory as the SU2_CFD executable I ran it on 8 cores with mpirun:; mpirun -np 8 $PWD/SU2_CFD lam_cylinder.cfg . I got what looked like reasonable output but is are there unit tests I can run to test the installation. Thanks very much for any guidance you can offer. . Matthew",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1037
https://github.com/su2code/SU2/issues/1037:979,Modifiability,config,configure,979,"Hello, . We are attempting to provide compilation instructions for one of our users who wishes to use SU2 on our HPC clusters. We use spack to provide library access, including to openmpi. When we use meson and ninja, we run into a linker error: /opt/spack/opt/spack/linux-centos7-nehalem/intel-19.0.3/zlib-1.2.11-zjmi5fwzodf5iizukl7aptz2eexrcblo/lib: file not recognized: Is a directory. The path is provided by pkg-config and the spack provided .pc file. We don't see any errors in the zlib .pc and that package is used frequently in other compilations. As a workaround, we used the version 6 installation procedure on the version 7 source. This produced runnable binaries. Could you let me know if this will fail to produce binaries that meson and ninja would have?. qsub -I -q debug -l nodes=1:ppn=8; on the compute node:; cd into the SU2 git repo then,; module load python-3.7.2-intel-19.0.1-zj5ljxy ; module load openmpi-3.1.5-gcc-9.3.0-cc2bj5i # for gcc mpi compilers.; ./configure --prefix=<install destination> --enable-mpi --with-cc=$(which mpicc) --with-cxx=$(which mpicxx); make -j 8 # compile the code using all 8 cores; make install # copy the binaries to the installation destination; Then, assuming the input file is in the same directory as the SU2_CFD executable I ran it on 8 cores with mpirun:; mpirun -np 8 $PWD/SU2_CFD lam_cylinder.cfg . I got what looked like reasonable output but is are there unit tests I can run to test the installation. Thanks very much for any guidance you can offer. . Matthew",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1037
https://github.com/su2code/SU2/issues/1037:866,Performance,load,load,866,"Hello, . We are attempting to provide compilation instructions for one of our users who wishes to use SU2 on our HPC clusters. We use spack to provide library access, including to openmpi. When we use meson and ninja, we run into a linker error: /opt/spack/opt/spack/linux-centos7-nehalem/intel-19.0.3/zlib-1.2.11-zjmi5fwzodf5iizukl7aptz2eexrcblo/lib: file not recognized: Is a directory. The path is provided by pkg-config and the spack provided .pc file. We don't see any errors in the zlib .pc and that package is used frequently in other compilations. As a workaround, we used the version 6 installation procedure on the version 7 source. This produced runnable binaries. Could you let me know if this will fail to produce binaries that meson and ninja would have?. qsub -I -q debug -l nodes=1:ppn=8; on the compute node:; cd into the SU2 git repo then,; module load python-3.7.2-intel-19.0.1-zj5ljxy ; module load openmpi-3.1.5-gcc-9.3.0-cc2bj5i # for gcc mpi compilers.; ./configure --prefix=<install destination> --enable-mpi --with-cc=$(which mpicc) --with-cxx=$(which mpicxx); make -j 8 # compile the code using all 8 cores; make install # copy the binaries to the installation destination; Then, assuming the input file is in the same directory as the SU2_CFD executable I ran it on 8 cores with mpirun:; mpirun -np 8 $PWD/SU2_CFD lam_cylinder.cfg . I got what looked like reasonable output but is are there unit tests I can run to test the installation. Thanks very much for any guidance you can offer. . Matthew",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1037
https://github.com/su2code/SU2/issues/1037:914,Performance,load,load,914,"Hello, . We are attempting to provide compilation instructions for one of our users who wishes to use SU2 on our HPC clusters. We use spack to provide library access, including to openmpi. When we use meson and ninja, we run into a linker error: /opt/spack/opt/spack/linux-centos7-nehalem/intel-19.0.3/zlib-1.2.11-zjmi5fwzodf5iizukl7aptz2eexrcblo/lib: file not recognized: Is a directory. The path is provided by pkg-config and the spack provided .pc file. We don't see any errors in the zlib .pc and that package is used frequently in other compilations. As a workaround, we used the version 6 installation procedure on the version 7 source. This produced runnable binaries. Could you let me know if this will fail to produce binaries that meson and ninja would have?. qsub -I -q debug -l nodes=1:ppn=8; on the compute node:; cd into the SU2 git repo then,; module load python-3.7.2-intel-19.0.1-zj5ljxy ; module load openmpi-3.1.5-gcc-9.3.0-cc2bj5i # for gcc mpi compilers.; ./configure --prefix=<install destination> --enable-mpi --with-cc=$(which mpicc) --with-cxx=$(which mpicxx); make -j 8 # compile the code using all 8 cores; make install # copy the binaries to the installation destination; Then, assuming the input file is in the same directory as the SU2_CFD executable I ran it on 8 cores with mpirun:; mpirun -np 8 $PWD/SU2_CFD lam_cylinder.cfg . I got what looked like reasonable output but is are there unit tests I can run to test the installation. Thanks very much for any guidance you can offer. . Matthew",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1037
https://github.com/su2code/SU2/issues/1037:159,Security,access,access,159,"Hello, . We are attempting to provide compilation instructions for one of our users who wishes to use SU2 on our HPC clusters. We use spack to provide library access, including to openmpi. When we use meson and ninja, we run into a linker error: /opt/spack/opt/spack/linux-centos7-nehalem/intel-19.0.3/zlib-1.2.11-zjmi5fwzodf5iizukl7aptz2eexrcblo/lib: file not recognized: Is a directory. The path is provided by pkg-config and the spack provided .pc file. We don't see any errors in the zlib .pc and that package is used frequently in other compilations. As a workaround, we used the version 6 installation procedure on the version 7 source. This produced runnable binaries. Could you let me know if this will fail to produce binaries that meson and ninja would have?. qsub -I -q debug -l nodes=1:ppn=8; on the compute node:; cd into the SU2 git repo then,; module load python-3.7.2-intel-19.0.1-zj5ljxy ; module load openmpi-3.1.5-gcc-9.3.0-cc2bj5i # for gcc mpi compilers.; ./configure --prefix=<install destination> --enable-mpi --with-cc=$(which mpicc) --with-cxx=$(which mpicxx); make -j 8 # compile the code using all 8 cores; make install # copy the binaries to the installation destination; Then, assuming the input file is in the same directory as the SU2_CFD executable I ran it on 8 cores with mpirun:; mpirun -np 8 $PWD/SU2_CFD lam_cylinder.cfg . I got what looked like reasonable output but is are there unit tests I can run to test the installation. Thanks very much for any guidance you can offer. . Matthew",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1037
https://github.com/su2code/SU2/issues/1037:1423,Testability,test,tests,1423,"Hello, . We are attempting to provide compilation instructions for one of our users who wishes to use SU2 on our HPC clusters. We use spack to provide library access, including to openmpi. When we use meson and ninja, we run into a linker error: /opt/spack/opt/spack/linux-centos7-nehalem/intel-19.0.3/zlib-1.2.11-zjmi5fwzodf5iizukl7aptz2eexrcblo/lib: file not recognized: Is a directory. The path is provided by pkg-config and the spack provided .pc file. We don't see any errors in the zlib .pc and that package is used frequently in other compilations. As a workaround, we used the version 6 installation procedure on the version 7 source. This produced runnable binaries. Could you let me know if this will fail to produce binaries that meson and ninja would have?. qsub -I -q debug -l nodes=1:ppn=8; on the compute node:; cd into the SU2 git repo then,; module load python-3.7.2-intel-19.0.1-zj5ljxy ; module load openmpi-3.1.5-gcc-9.3.0-cc2bj5i # for gcc mpi compilers.; ./configure --prefix=<install destination> --enable-mpi --with-cc=$(which mpicc) --with-cxx=$(which mpicxx); make -j 8 # compile the code using all 8 cores; make install # copy the binaries to the installation destination; Then, assuming the input file is in the same directory as the SU2_CFD executable I ran it on 8 cores with mpirun:; mpirun -np 8 $PWD/SU2_CFD lam_cylinder.cfg . I got what looked like reasonable output but is are there unit tests I can run to test the installation. Thanks very much for any guidance you can offer. . Matthew",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1037
https://github.com/su2code/SU2/issues/1037:1442,Testability,test,test,1442,"Hello, . We are attempting to provide compilation instructions for one of our users who wishes to use SU2 on our HPC clusters. We use spack to provide library access, including to openmpi. When we use meson and ninja, we run into a linker error: /opt/spack/opt/spack/linux-centos7-nehalem/intel-19.0.3/zlib-1.2.11-zjmi5fwzodf5iizukl7aptz2eexrcblo/lib: file not recognized: Is a directory. The path is provided by pkg-config and the spack provided .pc file. We don't see any errors in the zlib .pc and that package is used frequently in other compilations. As a workaround, we used the version 6 installation procedure on the version 7 source. This produced runnable binaries. Could you let me know if this will fail to produce binaries that meson and ninja would have?. qsub -I -q debug -l nodes=1:ppn=8; on the compute node:; cd into the SU2 git repo then,; module load python-3.7.2-intel-19.0.1-zj5ljxy ; module load openmpi-3.1.5-gcc-9.3.0-cc2bj5i # for gcc mpi compilers.; ./configure --prefix=<install destination> --enable-mpi --with-cc=$(which mpicc) --with-cxx=$(which mpicxx); make -j 8 # compile the code using all 8 cores; make install # copy the binaries to the installation destination; Then, assuming the input file is in the same directory as the SU2_CFD executable I ran it on 8 cores with mpirun:; mpirun -np 8 $PWD/SU2_CFD lam_cylinder.cfg . I got what looked like reasonable output but is are there unit tests I can run to test the installation. Thanks very much for any guidance you can offer. . Matthew",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1037
https://github.com/su2code/SU2/issues/1037:1490,Usability,guid,guidance,1490,"Hello, . We are attempting to provide compilation instructions for one of our users who wishes to use SU2 on our HPC clusters. We use spack to provide library access, including to openmpi. When we use meson and ninja, we run into a linker error: /opt/spack/opt/spack/linux-centos7-nehalem/intel-19.0.3/zlib-1.2.11-zjmi5fwzodf5iizukl7aptz2eexrcblo/lib: file not recognized: Is a directory. The path is provided by pkg-config and the spack provided .pc file. We don't see any errors in the zlib .pc and that package is used frequently in other compilations. As a workaround, we used the version 6 installation procedure on the version 7 source. This produced runnable binaries. Could you let me know if this will fail to produce binaries that meson and ninja would have?. qsub -I -q debug -l nodes=1:ppn=8; on the compute node:; cd into the SU2 git repo then,; module load python-3.7.2-intel-19.0.1-zj5ljxy ; module load openmpi-3.1.5-gcc-9.3.0-cc2bj5i # for gcc mpi compilers.; ./configure --prefix=<install destination> --enable-mpi --with-cc=$(which mpicc) --with-cxx=$(which mpicxx); make -j 8 # compile the code using all 8 cores; make install # copy the binaries to the installation destination; Then, assuming the input file is in the same directory as the SU2_CFD executable I ran it on 8 cores with mpirun:; mpirun -np 8 $PWD/SU2_CFD lam_cylinder.cfg . I got what looked like reasonable output but is are there unit tests I can run to test the installation. Thanks very much for any guidance you can offer. . Matthew",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1037
https://github.com/su2code/SU2/pull/1038:432,Deployability,update,updated,432,"## Proposed Changes; Reopen #1030 after changes. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1038
https://github.com/su2code/SU2/pull/1038:359,Testability,test,test,359,"## Proposed Changes; Reopen #1030 after changes. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1038
https://github.com/su2code/SU2/pull/1039:769,Deployability,update,updated,769,"Extra space. ## Proposed Changes; There was an extra space. ## Related Work; Compute polar did not work when I tried to vary the mach number only. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1039
https://github.com/su2code/SU2/pull/1039:697,Testability,test,test,697,"Extra space. ## Proposed Changes; There was an extra space. ## Related Work; Compute polar did not work when I tried to vary the mach number only. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1039
https://github.com/su2code/SU2/pull/1039:319,Usability,guid,guide,319,"Extra space. ## Proposed Changes; There was an extra space. ## Related Work; Compute polar did not work when I tried to vary the mach number only. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1039
https://github.com/su2code/SU2/issues/1040:70,Availability,error,error,70,"**Describe the bug**; When running under valgrind I get the following error message from valgrind for the develop version. ==46590== Invalid read of size 1; ==46590== at 0x8C9CA5: CConfig::SetConfig_Parsing(std::istream&) (CConfig.cpp:2836); ==46590== by 0x8C9A6E: CConfig::SetConfig_Parsing(char*) (CConfig.cpp:2797); ==46590== by 0x8A98F1: CConfig::CConfig(char*, unsigned short) (CConfig.cpp:205); ==46590== by 0x1BD2FA: main (SU2_CFD.cpp:99); ==46590== Address 0x5eae8ef is 1 bytes before a block of size 161 alloc'd. **To Reproduce**; Take e.g. the config file of rae2822 rans test case and run under valgrind. To avoid a lot of MPI warnings, create the sequential executable. **Desktop (please complete the following information):**; - Operating system: Ubuntu 18.04; - C++ compiler and version: g++ (GCC) 8.4.0; - MPI implementation and version: sequential; - SU2 Version: 7.0.5",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1040
https://github.com/su2code/SU2/issues/1040:76,Integrability,message,message,76,"**Describe the bug**; When running under valgrind I get the following error message from valgrind for the develop version. ==46590== Invalid read of size 1; ==46590== at 0x8C9CA5: CConfig::SetConfig_Parsing(std::istream&) (CConfig.cpp:2836); ==46590== by 0x8C9A6E: CConfig::SetConfig_Parsing(char*) (CConfig.cpp:2797); ==46590== by 0x8A98F1: CConfig::CConfig(char*, unsigned short) (CConfig.cpp:205); ==46590== by 0x1BD2FA: main (SU2_CFD.cpp:99); ==46590== Address 0x5eae8ef is 1 bytes before a block of size 161 alloc'd. **To Reproduce**; Take e.g. the config file of rae2822 rans test case and run under valgrind. To avoid a lot of MPI warnings, create the sequential executable. **Desktop (please complete the following information):**; - Operating system: Ubuntu 18.04; - C++ compiler and version: g++ (GCC) 8.4.0; - MPI implementation and version: sequential; - SU2 Version: 7.0.5",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1040
https://github.com/su2code/SU2/issues/1040:554,Modifiability,config,config,554,"**Describe the bug**; When running under valgrind I get the following error message from valgrind for the develop version. ==46590== Invalid read of size 1; ==46590== at 0x8C9CA5: CConfig::SetConfig_Parsing(std::istream&) (CConfig.cpp:2836); ==46590== by 0x8C9A6E: CConfig::SetConfig_Parsing(char*) (CConfig.cpp:2797); ==46590== by 0x8A98F1: CConfig::CConfig(char*, unsigned short) (CConfig.cpp:205); ==46590== by 0x1BD2FA: main (SU2_CFD.cpp:99); ==46590== Address 0x5eae8ef is 1 bytes before a block of size 161 alloc'd. **To Reproduce**; Take e.g. the config file of rae2822 rans test case and run under valgrind. To avoid a lot of MPI warnings, create the sequential executable. **Desktop (please complete the following information):**; - Operating system: Ubuntu 18.04; - C++ compiler and version: g++ (GCC) 8.4.0; - MPI implementation and version: sequential; - SU2 Version: 7.0.5",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1040
https://github.com/su2code/SU2/issues/1040:619,Safety,avoid,avoid,619,"**Describe the bug**; When running under valgrind I get the following error message from valgrind for the develop version. ==46590== Invalid read of size 1; ==46590== at 0x8C9CA5: CConfig::SetConfig_Parsing(std::istream&) (CConfig.cpp:2836); ==46590== by 0x8C9A6E: CConfig::SetConfig_Parsing(char*) (CConfig.cpp:2797); ==46590== by 0x8A98F1: CConfig::CConfig(char*, unsigned short) (CConfig.cpp:205); ==46590== by 0x1BD2FA: main (SU2_CFD.cpp:99); ==46590== Address 0x5eae8ef is 1 bytes before a block of size 161 alloc'd. **To Reproduce**; Take e.g. the config file of rae2822 rans test case and run under valgrind. To avoid a lot of MPI warnings, create the sequential executable. **Desktop (please complete the following information):**; - Operating system: Ubuntu 18.04; - C++ compiler and version: g++ (GCC) 8.4.0; - MPI implementation and version: sequential; - SU2 Version: 7.0.5",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1040
https://github.com/su2code/SU2/issues/1040:582,Testability,test,test,582,"**Describe the bug**; When running under valgrind I get the following error message from valgrind for the develop version. ==46590== Invalid read of size 1; ==46590== at 0x8C9CA5: CConfig::SetConfig_Parsing(std::istream&) (CConfig.cpp:2836); ==46590== by 0x8C9A6E: CConfig::SetConfig_Parsing(char*) (CConfig.cpp:2797); ==46590== by 0x8A98F1: CConfig::CConfig(char*, unsigned short) (CConfig.cpp:205); ==46590== by 0x1BD2FA: main (SU2_CFD.cpp:99); ==46590== Address 0x5eae8ef is 1 bytes before a block of size 161 alloc'd. **To Reproduce**; Take e.g. the config file of rae2822 rans test case and run under valgrind. To avoid a lot of MPI warnings, create the sequential executable. **Desktop (please complete the following information):**; - Operating system: Ubuntu 18.04; - C++ compiler and version: g++ (GCC) 8.4.0; - MPI implementation and version: sequential; - SU2 Version: 7.0.5",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1040
https://github.com/su2code/SU2/pull/1041:765,Deployability,update,updated,765,"## Proposed Changes; This very small PR fixes the valgrind warning mentioned in issue #1040 ; . ## Related Work; Bug fix for issue #1040 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [ X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1041
https://github.com/su2code/SU2/pull/1041:692,Testability,test,test,692,"## Proposed Changes; This very small PR fixes the valgrind warning mentioned in issue #1040 ; . ## Related Work; Bug fix for issue #1040 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [ X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1041
https://github.com/su2code/SU2/pull/1041:311,Usability,guid,guide,311,"## Proposed Changes; This very small PR fixes the valgrind warning mentioned in issue #1040 ; . ## Related Work; Bug fix for issue #1040 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [ X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1041
https://github.com/su2code/SU2/issues/1042:468,Availability,error,error,468,"I am trying to install the newest version of SU2 on our computing cluster; previously I have been running SU2 v6.2. I have successfully installed swig:; ```; $ swig -version. SWIG Version 2.0.10. Compiled with g++ [x86_64-redhat-linux-gnu]. Configured options: +pcre; ```; When I installed mpi4py, I had to install it with the `--user` flag: `$ pip install mpi4py --user`. I then edited my bash file to include the new python path. I have since run into the following error when trying to run `./meson.py`. I am using Python 3.6.8. **Meson Output**; ```; $ python3 ./meson.py build; ninja executable not found. Building ...; bootstrapping ninja...; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; remark #11074: Inlining inhibited by limit max-total-size ; remark #11076: To get full report use -qopt-report=4 -qopt-report-phase ipo; warning: A compatible version of re2c (>= 0.11.3) was not found; changes to src/*.in.cc will not affect your build.; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; remark #11074: Inlining inhibited by limit max-size ; remark #11074: Inlining inhibited by limit max-total-size ; remark #11076: To get full report use -qopt-report=4 -qopt-report-phase ipo; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; remark #11074: Inlining inhibited by limit max-size ; remark #11076: To get full report use -qopt-report=4 -qopt-report-phase ipo; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; remark #11074: Inlining inhibited by limit max-size ; remark #11076: To get full report use -qopt-report=4 -qopt-report-phase ipo; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; remark #11074: Inlini",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1042
https://github.com/su2code/SU2/issues/1042:15,Deployability,install,install,15,"I am trying to install the newest version of SU2 on our computing cluster; previously I have been running SU2 v6.2. I have successfully installed swig:; ```; $ swig -version. SWIG Version 2.0.10. Compiled with g++ [x86_64-redhat-linux-gnu]. Configured options: +pcre; ```; When I installed mpi4py, I had to install it with the `--user` flag: `$ pip install mpi4py --user`. I then edited my bash file to include the new python path. I have since run into the following error when trying to run `./meson.py`. I am using Python 3.6.8. **Meson Output**; ```; $ python3 ./meson.py build; ninja executable not found. Building ...; bootstrapping ninja...; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; remark #11074: Inlining inhibited by limit max-total-size ; remark #11076: To get full report use -qopt-report=4 -qopt-report-phase ipo; warning: A compatible version of re2c (>= 0.11.3) was not found; changes to src/*.in.cc will not affect your build.; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; remark #11074: Inlining inhibited by limit max-size ; remark #11074: Inlining inhibited by limit max-total-size ; remark #11076: To get full report use -qopt-report=4 -qopt-report-phase ipo; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; remark #11074: Inlining inhibited by limit max-size ; remark #11076: To get full report use -qopt-report=4 -qopt-report-phase ipo; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; remark #11074: Inlining inhibited by limit max-size ; remark #11076: To get full report use -qopt-report=4 -qopt-report-phase ipo; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; remark #11074: Inlini",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1042
https://github.com/su2code/SU2/issues/1042:136,Deployability,install,installed,136,"I am trying to install the newest version of SU2 on our computing cluster; previously I have been running SU2 v6.2. I have successfully installed swig:; ```; $ swig -version. SWIG Version 2.0.10. Compiled with g++ [x86_64-redhat-linux-gnu]. Configured options: +pcre; ```; When I installed mpi4py, I had to install it with the `--user` flag: `$ pip install mpi4py --user`. I then edited my bash file to include the new python path. I have since run into the following error when trying to run `./meson.py`. I am using Python 3.6.8. **Meson Output**; ```; $ python3 ./meson.py build; ninja executable not found. Building ...; bootstrapping ninja...; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; remark #11074: Inlining inhibited by limit max-total-size ; remark #11076: To get full report use -qopt-report=4 -qopt-report-phase ipo; warning: A compatible version of re2c (>= 0.11.3) was not found; changes to src/*.in.cc will not affect your build.; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; remark #11074: Inlining inhibited by limit max-size ; remark #11074: Inlining inhibited by limit max-total-size ; remark #11076: To get full report use -qopt-report=4 -qopt-report-phase ipo; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; remark #11074: Inlining inhibited by limit max-size ; remark #11076: To get full report use -qopt-report=4 -qopt-report-phase ipo; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; remark #11074: Inlining inhibited by limit max-size ; remark #11076: To get full report use -qopt-report=4 -qopt-report-phase ipo; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; remark #11074: Inlini",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1042
https://github.com/su2code/SU2/issues/1042:280,Deployability,install,installed,280,"I am trying to install the newest version of SU2 on our computing cluster; previously I have been running SU2 v6.2. I have successfully installed swig:; ```; $ swig -version. SWIG Version 2.0.10. Compiled with g++ [x86_64-redhat-linux-gnu]. Configured options: +pcre; ```; When I installed mpi4py, I had to install it with the `--user` flag: `$ pip install mpi4py --user`. I then edited my bash file to include the new python path. I have since run into the following error when trying to run `./meson.py`. I am using Python 3.6.8. **Meson Output**; ```; $ python3 ./meson.py build; ninja executable not found. Building ...; bootstrapping ninja...; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; remark #11074: Inlining inhibited by limit max-total-size ; remark #11076: To get full report use -qopt-report=4 -qopt-report-phase ipo; warning: A compatible version of re2c (>= 0.11.3) was not found; changes to src/*.in.cc will not affect your build.; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; remark #11074: Inlining inhibited by limit max-size ; remark #11074: Inlining inhibited by limit max-total-size ; remark #11076: To get full report use -qopt-report=4 -qopt-report-phase ipo; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; remark #11074: Inlining inhibited by limit max-size ; remark #11076: To get full report use -qopt-report=4 -qopt-report-phase ipo; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; remark #11074: Inlining inhibited by limit max-size ; remark #11076: To get full report use -qopt-report=4 -qopt-report-phase ipo; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; remark #11074: Inlini",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1042
https://github.com/su2code/SU2/issues/1042:307,Deployability,install,install,307,"I am trying to install the newest version of SU2 on our computing cluster; previously I have been running SU2 v6.2. I have successfully installed swig:; ```; $ swig -version. SWIG Version 2.0.10. Compiled with g++ [x86_64-redhat-linux-gnu]. Configured options: +pcre; ```; When I installed mpi4py, I had to install it with the `--user` flag: `$ pip install mpi4py --user`. I then edited my bash file to include the new python path. I have since run into the following error when trying to run `./meson.py`. I am using Python 3.6.8. **Meson Output**; ```; $ python3 ./meson.py build; ninja executable not found. Building ...; bootstrapping ninja...; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; remark #11074: Inlining inhibited by limit max-total-size ; remark #11076: To get full report use -qopt-report=4 -qopt-report-phase ipo; warning: A compatible version of re2c (>= 0.11.3) was not found; changes to src/*.in.cc will not affect your build.; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; remark #11074: Inlining inhibited by limit max-size ; remark #11074: Inlining inhibited by limit max-total-size ; remark #11076: To get full report use -qopt-report=4 -qopt-report-phase ipo; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; remark #11074: Inlining inhibited by limit max-size ; remark #11076: To get full report use -qopt-report=4 -qopt-report-phase ipo; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; remark #11074: Inlining inhibited by limit max-size ; remark #11076: To get full report use -qopt-report=4 -qopt-report-phase ipo; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; remark #11074: Inlini",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1042
https://github.com/su2code/SU2/issues/1042:349,Deployability,install,install,349,"I am trying to install the newest version of SU2 on our computing cluster; previously I have been running SU2 v6.2. I have successfully installed swig:; ```; $ swig -version. SWIG Version 2.0.10. Compiled with g++ [x86_64-redhat-linux-gnu]. Configured options: +pcre; ```; When I installed mpi4py, I had to install it with the `--user` flag: `$ pip install mpi4py --user`. I then edited my bash file to include the new python path. I have since run into the following error when trying to run `./meson.py`. I am using Python 3.6.8. **Meson Output**; ```; $ python3 ./meson.py build; ninja executable not found. Building ...; bootstrapping ninja...; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; remark #11074: Inlining inhibited by limit max-total-size ; remark #11076: To get full report use -qopt-report=4 -qopt-report-phase ipo; warning: A compatible version of re2c (>= 0.11.3) was not found; changes to src/*.in.cc will not affect your build.; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; remark #11074: Inlining inhibited by limit max-size ; remark #11074: Inlining inhibited by limit max-total-size ; remark #11076: To get full report use -qopt-report=4 -qopt-report-phase ipo; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; remark #11074: Inlining inhibited by limit max-size ; remark #11076: To get full report use -qopt-report=4 -qopt-report-phase ipo; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; remark #11074: Inlining inhibited by limit max-size ; remark #11076: To get full report use -qopt-report=4 -qopt-report-phase ipo; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; remark #11074: Inlini",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1042
https://github.com/su2code/SU2/issues/1042:241,Modifiability,Config,Configured,241,"I am trying to install the newest version of SU2 on our computing cluster; previously I have been running SU2 v6.2. I have successfully installed swig:; ```; $ swig -version. SWIG Version 2.0.10. Compiled with g++ [x86_64-redhat-linux-gnu]. Configured options: +pcre; ```; When I installed mpi4py, I had to install it with the `--user` flag: `$ pip install mpi4py --user`. I then edited my bash file to include the new python path. I have since run into the following error when trying to run `./meson.py`. I am using Python 3.6.8. **Meson Output**; ```; $ python3 ./meson.py build; ninja executable not found. Building ...; bootstrapping ninja...; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; remark #11074: Inlining inhibited by limit max-total-size ; remark #11076: To get full report use -qopt-report=4 -qopt-report-phase ipo; warning: A compatible version of re2c (>= 0.11.3) was not found; changes to src/*.in.cc will not affect your build.; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; remark #11074: Inlining inhibited by limit max-size ; remark #11074: Inlining inhibited by limit max-total-size ; remark #11076: To get full report use -qopt-report=4 -qopt-report-phase ipo; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; remark #11074: Inlining inhibited by limit max-size ; remark #11076: To get full report use -qopt-report=4 -qopt-report-phase ipo; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; remark #11074: Inlining inhibited by limit max-size ; remark #11076: To get full report use -qopt-report=4 -qopt-report-phase ipo; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; remark #11074: Inlini",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1042
https://github.com/su2code/SU2/issues/1042:4544,Modifiability,variab,variable,4544,"cpc: command line remark #10148: option '-fdiagnostics-color' not supported; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; remark #11074: Inlining inhibited by limit max-size ; remark #11074: Inlining inhibited by limit max-total-size ; remark #11076: To get full report use -qopt-report=4 -qopt-report-phase ipo; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; remark #11074: Inlining inhibited by limit max-size ; remark #11074: Inlining inhibited by limit max-total-size ; remark #11076: To get full report use -qopt-report=4 -qopt-report-phase ipo; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; ./src/util.cc(158): warning #3656: variable ""components"" may be used before its value is set; dst = components[component_count - 1];; ^. icpc: command line remark #10148: option '-fdiagnostics-color' not supported; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; remark #11074: Inlining inhibited by limit max-size ; remark #11076: To get full report use -qopt-report=4 -qopt-report-phase ipo; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; ./src/ninja.cc(119): warning #177: function ""<unnamed>::NinjaMain::ToolMSVC"" was declared but never referenced; int ToolMSVC(const Options* options, int argc, char* argv[]);; ^. remark #11074: Inlining inhibited by limit max-size ; remark #11074: Inlining inhibited by limit max-total-size ; remark #11076: To get full report use -qopt-report=4 -qopt-report-phase ipo; wrote build.ninja.; bootstrap complete. rebuilding...; [2/29] CXX build/metrics.o; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; [3/29] CXX build/clparser.o; icpc: command",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1042
https://github.com/su2code/SU2/issues/1042:8294,Modifiability,variab,variable,8294,"k #10148: option '-fdiagnostics-color' not supported; remark #11074: Inlining inhibited by limit max-size ; remark #11076: To get full report use -qopt-report=4 -qopt-report-phase ipo; [15/29] CXX build/version.o; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; [16/29] CXX build/dyndep.o; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; remark #11074: Inlining inhibited by limit max-size ; remark #11074: Inlining inhibited by limit max-total-size ; remark #11076: To get full report use -qopt-report=4 -qopt-report-phase ipo; [17/29] CXX build/clean.o; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; remark #11074: Inlining inhibited by limit max-size ; remark #11076: To get full report use -qopt-report=4 -qopt-report-phase ipo; [18/29] CXX build/util.o; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; src/util.cc(158): warning #3656: variable ""components"" may be used before its value is set; dst = components[component_count - 1];; ^. [19/29] CXX build/eval_env.o; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; [20/29] CXX build/dyndep_parser.o; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; remark #11074: Inlining inhibited by limit max-size ; remark #11076: To get full report use -qopt-report=4 -qopt-report-phase ipo; [21/29] CXX build/subprocess-posix.o; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; remark #11074: Inlining inhibited by limit max-size ; remark #11076: To get full report use -qopt-report=4 -qopt-report-phase ipo; [22/29] CXX build/build_log.o; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; remark #11074: Inlining inhibited by limit max-size ; remark #11076: To get full report use -qopt-report=4 -qopt-report-phase ipo; [23/29] CXX build/graph.o; icpc: command line remark #10148: option '-fdiagnostics-color' not supp",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1042
https://github.com/su2code/SU2/issues/1042:11358,Modifiability,Config,Configure,11358,"emark #11074: Inlining inhibited by limit max-total-size ; remark #11076: To get full report use -qopt-report=4 -qopt-report-phase ipo; [26/29] CXX build/ninja.o; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; src/ninja.cc(119): warning #177: function ""<unnamed>::NinjaMain::ToolMSVC"" was declared but never referenced; int ToolMSVC(const Options* options, int argc, char* argv[]);; ^. remark #11074: Inlining inhibited by limit max-size ; remark #11074: Inlining inhibited by limit max-total-size ; remark #11076: To get full report use -qopt-report=4 -qopt-report-phase ipo; [27/29] CXX build/build.o; icpc: command line remark #10148: option '-fdiagnostics-color' not supported; remark #11074: Inlining inhibited by limit max-size ; remark #11074: Inlining inhibited by limit max-total-size ; remark #11076: To get full report use -qopt-report=4 -qopt-report-phase ipo; [29/29] LINK ninja; Traceback (most recent call last):; File ""./meson.py"", line 85, in <module>; sys.exit(mesonmain.main()); File ""/depot/data/SU2_v7/SU2-v7_modified/externals/meson/mesonbuild/mesonmain.py"", line 228, in main; return run(sys.argv[1:], launcher); File ""/depot/data/SU2_v7/SU2-v7_modified/externals/meson/mesonbuild/mesonmain.py"", line 219, in run; return CommandLineParser().run(args); File ""/depot/data/SU2_v7/SU2-v7_modified/externals/meson/mesonbuild/mesonmain.py"", line 44, in __init__; help_msg='Configure the project'); File ""/depot/data/SU2_v7/SU2-v7_modified/externals/meson/mesonbuild/mesonmain.py"", line 82, in add_command; p = self.subparsers.add_parser(name, help=help_msg, aliases=aliases, formatter_class=self.formatter); File ""/apps/cent7/xalt/libexec/argparse.py"", line 1085, in add_parser; parser = self._parser_class(**kwargs); TypeError: __init__() got an unexpected keyword argument 'aliases'; ```. **Desktop:**; - OS: CentOS x86-64 7.7; - C++ compiler and version: Intel C++ 17.0.1.132; - MPI implementation and version: IMPI 2017.1.132; - SU2 Version: v7.0.5",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1042
https://github.com/su2code/SU2/pull/1043:865,Deployability,update,updated,865,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1043
https://github.com/su2code/SU2/pull/1043:792,Testability,test,test,792,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1043
https://github.com/su2code/SU2/pull/1043:414,Usability,guid,guide,414,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1043
https://github.com/su2code/SU2/pull/1044:472,Deployability,update,updated,472,"## Proposed Changes; As discussed in today's developers meeting. ## Related Work; #1014. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1044
https://github.com/su2code/SU2/pull/1044:399,Testability,test,test,399,"## Proposed Changes; As discussed in today's developers meeting. ## Related Work; #1014. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1044
https://github.com/su2code/SU2/issues/1046:557,Deployability,Update,Update,557,"Hi all,. for multipoint optimization only Linux User were the target group ;-) :. In bin\SU2\eval\functions.py and two times in bin\SU2\eval\gradients.py replace:. string = ""ln -s "" + src + "" "" + dst; stringlist = string.split(); subprocess.Popen(stringlist). with something like:. if os.name == 'nt':; # make windows link; string = ""mklink /d \"""" + dst + ""\"" \"""" + src + ""\""""; stringlist = string.split(); try:; subprocess.Popen(stringlist, stdout = subprocess.PIPE, stderr = subprocess.STDOUT, shell = True); except:; print(""Enable in Windows settings -> Update and Security -> Developer Options, otherwise symbolic links cannot be created""); ; else:; # make unix link; string = ""ln -s "" + src + "" "" + dst; stringlist = string.split(); subprocess.Popen(stringlist). Cheers,. US",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1046
https://github.com/su2code/SU2/issues/1046:24,Performance,optimiz,optimization,24,"Hi all,. for multipoint optimization only Linux User were the target group ;-) :. In bin\SU2\eval\functions.py and two times in bin\SU2\eval\gradients.py replace:. string = ""ln -s "" + src + "" "" + dst; stringlist = string.split(); subprocess.Popen(stringlist). with something like:. if os.name == 'nt':; # make windows link; string = ""mklink /d \"""" + dst + ""\"" \"""" + src + ""\""""; stringlist = string.split(); try:; subprocess.Popen(stringlist, stdout = subprocess.PIPE, stderr = subprocess.STDOUT, shell = True); except:; print(""Enable in Windows settings -> Update and Security -> Developer Options, otherwise symbolic links cannot be created""); ; else:; # make unix link; string = ""ln -s "" + src + "" "" + dst; stringlist = string.split(); subprocess.Popen(stringlist). Cheers,. US",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1046
https://github.com/su2code/SU2/issues/1046:568,Security,Secur,Security,568,"Hi all,. for multipoint optimization only Linux User were the target group ;-) :. In bin\SU2\eval\functions.py and two times in bin\SU2\eval\gradients.py replace:. string = ""ln -s "" + src + "" "" + dst; stringlist = string.split(); subprocess.Popen(stringlist). with something like:. if os.name == 'nt':; # make windows link; string = ""mklink /d \"""" + dst + ""\"" \"""" + src + ""\""""; stringlist = string.split(); try:; subprocess.Popen(stringlist, stdout = subprocess.PIPE, stderr = subprocess.STDOUT, shell = True); except:; print(""Enable in Windows settings -> Update and Security -> Developer Options, otherwise symbolic links cannot be created""); ; else:; # make unix link; string = ""ln -s "" + src + "" "" + dst; stringlist = string.split(); subprocess.Popen(stringlist). Cheers,. US",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1046
https://github.com/su2code/SU2/issues/1047:423,Availability,error,error-,423,"**Describe the bug**; When I run command ""meson.py build"", the following happens; [WinError 123]:The syntax of the file name, directory name, or volume label is incorrect.:'D:\\MinGW\\mingw64\\.......\\libC:\\......\\msmpi.a. ![20200711213011325](https://user-images.githubusercontent.com/49433389/87293481-f35ab200-c534-11ea-9cd5-1e322a442c87.png). (you can see the detail in <https://www.cfd-online.com/Forums/su2/228717-error-su2-7-0-5-installation-source-windows10.html>). **To Reproduce**. **Desktop (please complete the following information):**; - OS: [Win10]; - C++ compiler and version: [MinGW-x64 8.0.1]; - MPI implementation and version: [MS MPI]; - SU2 Version: [v7.0.5]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1047
https://github.com/su2code/SU2/issues/1047:439,Deployability,install,installation-source-,439,"**Describe the bug**; When I run command ""meson.py build"", the following happens; [WinError 123]:The syntax of the file name, directory name, or volume label is incorrect.:'D:\\MinGW\\mingw64\\.......\\libC:\\......\\msmpi.a. ![20200711213011325](https://user-images.githubusercontent.com/49433389/87293481-f35ab200-c534-11ea-9cd5-1e322a442c87.png). (you can see the detail in <https://www.cfd-online.com/Forums/su2/228717-error-su2-7-0-5-installation-source-windows10.html>). **To Reproduce**. **Desktop (please complete the following information):**; - OS: [Win10]; - C++ compiler and version: [MinGW-x64 8.0.1]; - MPI implementation and version: [MS MPI]; - SU2 Version: [v7.0.5]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1047
https://github.com/su2code/SU2/issues/1048:423,Availability,error,error-,423,"**Describe the bug**; When I run command ""meson.py build"", the following happens; [WinError 123]:The syntax of the file name, directory name, or volume label is incorrect.:'D:\\MinGW\\mingw64\\.......\\libC:\\......\\msmpi.a. ![20200711213011325](https://user-images.githubusercontent.com/49433389/87293481-f35ab200-c534-11ea-9cd5-1e322a442c87.png). (you can see the detail in <https://www.cfd-online.com/Forums/su2/228717-error-su2-7-0-5-installation-source-windows10.html>). **To Reproduce**. **Desktop (please complete the following information):**; - OS: [Win10]; - C++ compiler and version: [MinGW-x64 8.0.1]; - MPI implementation and version: [MS MPI]; - SU2 Version: [v7.0.5]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1048
https://github.com/su2code/SU2/issues/1048:439,Deployability,install,installation-source-,439,"**Describe the bug**; When I run command ""meson.py build"", the following happens; [WinError 123]:The syntax of the file name, directory name, or volume label is incorrect.:'D:\\MinGW\\mingw64\\.......\\libC:\\......\\msmpi.a. ![20200711213011325](https://user-images.githubusercontent.com/49433389/87293481-f35ab200-c534-11ea-9cd5-1e322a442c87.png). (you can see the detail in <https://www.cfd-online.com/Forums/su2/228717-error-su2-7-0-5-installation-source-windows10.html>). **To Reproduce**. **Desktop (please complete the following information):**; - OS: [Win10]; - C++ compiler and version: [MinGW-x64 8.0.1]; - MPI implementation and version: [MS MPI]; - SU2 Version: [v7.0.5]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1048
https://github.com/su2code/SU2/pull/1049:21,Deployability,Update,Update,21,## Proposed Changes; Update SU2 to the most recent versions of CoDiPack (1.9.3) and MeDiPack (1.2+).; . ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is consistent with SU2 style.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1049
https://github.com/su2code/SU2/pull/1050:99,Availability,down,download,99,"## Proposed Changes; This PR adds the [Piperno slope limiter](http://citeseerx.ist.psu.edu/viewdoc/download;jsessionid=71E315A30221171183B3425C51A4A33B?doi=10.1.1.493.3132&rep=rep1&type=pdf) and introduces a parameter to control the relative upwind vs central differencing in the MUSCL scheme:; <img width=""359"" alt=""Screen Shot 2020-07-17 at 11 35 28 AM"" src=""https://user-images.githubusercontent.com/19416354/87819813-b981f800-c821-11ea-85b9-c9427e7b5378.png"">; where ; - X=0 gives the original unstructured formulation for second-order variable extrapolation (default); - X=-1 gives second-order fully-upwinded MUSCL-type variable extrapolation; - X=1/2 gives third-order variable extrapolation to the cell face; - X=1/3 gives a third-order approximation to the derivative at the node (the value used in the Piperno limiter to achieve 4th order dissipation). The reasons for these additions are; - The Piperno limiter is implemented in Inria's Wolf solver and seems to be used in a lot of their mesh adaptation work (see these references for [Euler](https://hal.inria.fr/hal-02378738v2/document) and [RANS](https://hal.inria.fr/tel-01962318/file/these_archivage_3570223.pdf)); - Some preliminary tests with the Piperno limiter have converged solutions on triangulated BL meshes that @jayantmukho and I couldn't get to converge with other limiters in SU2 (e.g. triangulated DSMA661 meshes from TMR); - The MUSCL parameter exists in other solvers (FUN3D, CFL3D, Wolf) and is used by the NASA codes for many of the TMR cases (e.g. CFL3D uses 1/3 and FUN3D uses 1/2 for the DSMA661 case). Further testing still needs to be done on the effect of the MUSCL parameter with other limiters, but leaving the value as default won't affect any of the test cases. ## Relevant config parameters; Piperno limiter:; ```; SLOPE_LIMITER_FLOW= PIPERNO; ```; MUSCL parameter:; ```; % Parameter to control upwinding in MUSCL extrapolation; % Kappa = 1/3 for Piperno limiter, Default = 0 otherwise; MUSCL_KAPPA= 0.0; ``",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1050
https://github.com/su2code/SU2/pull/1050:2627,Deployability,update,updated,2627,"=1/3 gives a third-order approximation to the derivative at the node (the value used in the Piperno limiter to achieve 4th order dissipation). The reasons for these additions are; - The Piperno limiter is implemented in Inria's Wolf solver and seems to be used in a lot of their mesh adaptation work (see these references for [Euler](https://hal.inria.fr/hal-02378738v2/document) and [RANS](https://hal.inria.fr/tel-01962318/file/these_archivage_3570223.pdf)); - Some preliminary tests with the Piperno limiter have converged solutions on triangulated BL meshes that @jayantmukho and I couldn't get to converge with other limiters in SU2 (e.g. triangulated DSMA661 meshes from TMR); - The MUSCL parameter exists in other solvers (FUN3D, CFL3D, Wolf) and is used by the NASA codes for many of the TMR cases (e.g. CFL3D uses 1/3 and FUN3D uses 1/2 for the DSMA661 case). Further testing still needs to be done on the effect of the MUSCL parameter with other limiters, but leaving the value as default won't affect any of the test cases. ## Relevant config parameters; Piperno limiter:; ```; SLOPE_LIMITER_FLOW= PIPERNO; ```; MUSCL parameter:; ```; % Parameter to control upwinding in MUSCL extrapolation; % Kappa = 1/3 for Piperno limiter, Default = 0 otherwise; MUSCL_KAPPA= 0.0; ```. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1050
https://github.com/su2code/SU2/pull/1050:1004,Energy Efficiency,adapt,adaptation,1004,"## Proposed Changes; This PR adds the [Piperno slope limiter](http://citeseerx.ist.psu.edu/viewdoc/download;jsessionid=71E315A30221171183B3425C51A4A33B?doi=10.1.1.493.3132&rep=rep1&type=pdf) and introduces a parameter to control the relative upwind vs central differencing in the MUSCL scheme:; <img width=""359"" alt=""Screen Shot 2020-07-17 at 11 35 28 AM"" src=""https://user-images.githubusercontent.com/19416354/87819813-b981f800-c821-11ea-85b9-c9427e7b5378.png"">; where ; - X=0 gives the original unstructured formulation for second-order variable extrapolation (default); - X=-1 gives second-order fully-upwinded MUSCL-type variable extrapolation; - X=1/2 gives third-order variable extrapolation to the cell face; - X=1/3 gives a third-order approximation to the derivative at the node (the value used in the Piperno limiter to achieve 4th order dissipation). The reasons for these additions are; - The Piperno limiter is implemented in Inria's Wolf solver and seems to be used in a lot of their mesh adaptation work (see these references for [Euler](https://hal.inria.fr/hal-02378738v2/document) and [RANS](https://hal.inria.fr/tel-01962318/file/these_archivage_3570223.pdf)); - Some preliminary tests with the Piperno limiter have converged solutions on triangulated BL meshes that @jayantmukho and I couldn't get to converge with other limiters in SU2 (e.g. triangulated DSMA661 meshes from TMR); - The MUSCL parameter exists in other solvers (FUN3D, CFL3D, Wolf) and is used by the NASA codes for many of the TMR cases (e.g. CFL3D uses 1/3 and FUN3D uses 1/2 for the DSMA661 case). Further testing still needs to be done on the effect of the MUSCL parameter with other limiters, but leaving the value as default won't affect any of the test cases. ## Relevant config parameters; Piperno limiter:; ```; SLOPE_LIMITER_FLOW= PIPERNO; ```; MUSCL parameter:; ```; % Parameter to control upwinding in MUSCL extrapolation; % Kappa = 1/3 for Piperno limiter, Default = 0 otherwise; MUSCL_KAPPA= 0.0; ``",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1050
https://github.com/su2code/SU2/pull/1050:540,Modifiability,variab,variable,540,"## Proposed Changes; This PR adds the [Piperno slope limiter](http://citeseerx.ist.psu.edu/viewdoc/download;jsessionid=71E315A30221171183B3425C51A4A33B?doi=10.1.1.493.3132&rep=rep1&type=pdf) and introduces a parameter to control the relative upwind vs central differencing in the MUSCL scheme:; <img width=""359"" alt=""Screen Shot 2020-07-17 at 11 35 28 AM"" src=""https://user-images.githubusercontent.com/19416354/87819813-b981f800-c821-11ea-85b9-c9427e7b5378.png"">; where ; - X=0 gives the original unstructured formulation for second-order variable extrapolation (default); - X=-1 gives second-order fully-upwinded MUSCL-type variable extrapolation; - X=1/2 gives third-order variable extrapolation to the cell face; - X=1/3 gives a third-order approximation to the derivative at the node (the value used in the Piperno limiter to achieve 4th order dissipation). The reasons for these additions are; - The Piperno limiter is implemented in Inria's Wolf solver and seems to be used in a lot of their mesh adaptation work (see these references for [Euler](https://hal.inria.fr/hal-02378738v2/document) and [RANS](https://hal.inria.fr/tel-01962318/file/these_archivage_3570223.pdf)); - Some preliminary tests with the Piperno limiter have converged solutions on triangulated BL meshes that @jayantmukho and I couldn't get to converge with other limiters in SU2 (e.g. triangulated DSMA661 meshes from TMR); - The MUSCL parameter exists in other solvers (FUN3D, CFL3D, Wolf) and is used by the NASA codes for many of the TMR cases (e.g. CFL3D uses 1/3 and FUN3D uses 1/2 for the DSMA661 case). Further testing still needs to be done on the effect of the MUSCL parameter with other limiters, but leaving the value as default won't affect any of the test cases. ## Relevant config parameters; Piperno limiter:; ```; SLOPE_LIMITER_FLOW= PIPERNO; ```; MUSCL parameter:; ```; % Parameter to control upwinding in MUSCL extrapolation; % Kappa = 1/3 for Piperno limiter, Default = 0 otherwise; MUSCL_KAPPA= 0.0; ``",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1050
https://github.com/su2code/SU2/pull/1050:626,Modifiability,variab,variable,626,"## Proposed Changes; This PR adds the [Piperno slope limiter](http://citeseerx.ist.psu.edu/viewdoc/download;jsessionid=71E315A30221171183B3425C51A4A33B?doi=10.1.1.493.3132&rep=rep1&type=pdf) and introduces a parameter to control the relative upwind vs central differencing in the MUSCL scheme:; <img width=""359"" alt=""Screen Shot 2020-07-17 at 11 35 28 AM"" src=""https://user-images.githubusercontent.com/19416354/87819813-b981f800-c821-11ea-85b9-c9427e7b5378.png"">; where ; - X=0 gives the original unstructured formulation for second-order variable extrapolation (default); - X=-1 gives second-order fully-upwinded MUSCL-type variable extrapolation; - X=1/2 gives third-order variable extrapolation to the cell face; - X=1/3 gives a third-order approximation to the derivative at the node (the value used in the Piperno limiter to achieve 4th order dissipation). The reasons for these additions are; - The Piperno limiter is implemented in Inria's Wolf solver and seems to be used in a lot of their mesh adaptation work (see these references for [Euler](https://hal.inria.fr/hal-02378738v2/document) and [RANS](https://hal.inria.fr/tel-01962318/file/these_archivage_3570223.pdf)); - Some preliminary tests with the Piperno limiter have converged solutions on triangulated BL meshes that @jayantmukho and I couldn't get to converge with other limiters in SU2 (e.g. triangulated DSMA661 meshes from TMR); - The MUSCL parameter exists in other solvers (FUN3D, CFL3D, Wolf) and is used by the NASA codes for many of the TMR cases (e.g. CFL3D uses 1/3 and FUN3D uses 1/2 for the DSMA661 case). Further testing still needs to be done on the effect of the MUSCL parameter with other limiters, but leaving the value as default won't affect any of the test cases. ## Relevant config parameters; Piperno limiter:; ```; SLOPE_LIMITER_FLOW= PIPERNO; ```; MUSCL parameter:; ```; % Parameter to control upwinding in MUSCL extrapolation; % Kappa = 1/3 for Piperno limiter, Default = 0 otherwise; MUSCL_KAPPA= 0.0; ``",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1050
https://github.com/su2code/SU2/pull/1050:676,Modifiability,variab,variable,676,"## Proposed Changes; This PR adds the [Piperno slope limiter](http://citeseerx.ist.psu.edu/viewdoc/download;jsessionid=71E315A30221171183B3425C51A4A33B?doi=10.1.1.493.3132&rep=rep1&type=pdf) and introduces a parameter to control the relative upwind vs central differencing in the MUSCL scheme:; <img width=""359"" alt=""Screen Shot 2020-07-17 at 11 35 28 AM"" src=""https://user-images.githubusercontent.com/19416354/87819813-b981f800-c821-11ea-85b9-c9427e7b5378.png"">; where ; - X=0 gives the original unstructured formulation for second-order variable extrapolation (default); - X=-1 gives second-order fully-upwinded MUSCL-type variable extrapolation; - X=1/2 gives third-order variable extrapolation to the cell face; - X=1/3 gives a third-order approximation to the derivative at the node (the value used in the Piperno limiter to achieve 4th order dissipation). The reasons for these additions are; - The Piperno limiter is implemented in Inria's Wolf solver and seems to be used in a lot of their mesh adaptation work (see these references for [Euler](https://hal.inria.fr/hal-02378738v2/document) and [RANS](https://hal.inria.fr/tel-01962318/file/these_archivage_3570223.pdf)); - Some preliminary tests with the Piperno limiter have converged solutions on triangulated BL meshes that @jayantmukho and I couldn't get to converge with other limiters in SU2 (e.g. triangulated DSMA661 meshes from TMR); - The MUSCL parameter exists in other solvers (FUN3D, CFL3D, Wolf) and is used by the NASA codes for many of the TMR cases (e.g. CFL3D uses 1/3 and FUN3D uses 1/2 for the DSMA661 case). Further testing still needs to be done on the effect of the MUSCL parameter with other limiters, but leaving the value as default won't affect any of the test cases. ## Relevant config parameters; Piperno limiter:; ```; SLOPE_LIMITER_FLOW= PIPERNO; ```; MUSCL parameter:; ```; % Parameter to control upwinding in MUSCL extrapolation; % Kappa = 1/3 for Piperno limiter, Default = 0 otherwise; MUSCL_KAPPA= 0.0; ``",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1050
https://github.com/su2code/SU2/pull/1050:1004,Modifiability,adapt,adaptation,1004,"## Proposed Changes; This PR adds the [Piperno slope limiter](http://citeseerx.ist.psu.edu/viewdoc/download;jsessionid=71E315A30221171183B3425C51A4A33B?doi=10.1.1.493.3132&rep=rep1&type=pdf) and introduces a parameter to control the relative upwind vs central differencing in the MUSCL scheme:; <img width=""359"" alt=""Screen Shot 2020-07-17 at 11 35 28 AM"" src=""https://user-images.githubusercontent.com/19416354/87819813-b981f800-c821-11ea-85b9-c9427e7b5378.png"">; where ; - X=0 gives the original unstructured formulation for second-order variable extrapolation (default); - X=-1 gives second-order fully-upwinded MUSCL-type variable extrapolation; - X=1/2 gives third-order variable extrapolation to the cell face; - X=1/3 gives a third-order approximation to the derivative at the node (the value used in the Piperno limiter to achieve 4th order dissipation). The reasons for these additions are; - The Piperno limiter is implemented in Inria's Wolf solver and seems to be used in a lot of their mesh adaptation work (see these references for [Euler](https://hal.inria.fr/hal-02378738v2/document) and [RANS](https://hal.inria.fr/tel-01962318/file/these_archivage_3570223.pdf)); - Some preliminary tests with the Piperno limiter have converged solutions on triangulated BL meshes that @jayantmukho and I couldn't get to converge with other limiters in SU2 (e.g. triangulated DSMA661 meshes from TMR); - The MUSCL parameter exists in other solvers (FUN3D, CFL3D, Wolf) and is used by the NASA codes for many of the TMR cases (e.g. CFL3D uses 1/3 and FUN3D uses 1/2 for the DSMA661 case). Further testing still needs to be done on the effect of the MUSCL parameter with other limiters, but leaving the value as default won't affect any of the test cases. ## Relevant config parameters; Piperno limiter:; ```; SLOPE_LIMITER_FLOW= PIPERNO; ```; MUSCL parameter:; ```; % Parameter to control upwinding in MUSCL extrapolation; % Kappa = 1/3 for Piperno limiter, Default = 0 otherwise; MUSCL_KAPPA= 0.0; ``",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1050
https://github.com/su2code/SU2/pull/1050:1767,Modifiability,config,config,1767,"=1/3 gives a third-order approximation to the derivative at the node (the value used in the Piperno limiter to achieve 4th order dissipation). The reasons for these additions are; - The Piperno limiter is implemented in Inria's Wolf solver and seems to be used in a lot of their mesh adaptation work (see these references for [Euler](https://hal.inria.fr/hal-02378738v2/document) and [RANS](https://hal.inria.fr/tel-01962318/file/these_archivage_3570223.pdf)); - Some preliminary tests with the Piperno limiter have converged solutions on triangulated BL meshes that @jayantmukho and I couldn't get to converge with other limiters in SU2 (e.g. triangulated DSMA661 meshes from TMR); - The MUSCL parameter exists in other solvers (FUN3D, CFL3D, Wolf) and is used by the NASA codes for many of the TMR cases (e.g. CFL3D uses 1/3 and FUN3D uses 1/2 for the DSMA661 case). Further testing still needs to be done on the effect of the MUSCL parameter with other limiters, but leaving the value as default won't affect any of the test cases. ## Relevant config parameters; Piperno limiter:; ```; SLOPE_LIMITER_FLOW= PIPERNO; ```; MUSCL parameter:; ```; % Parameter to control upwinding in MUSCL extrapolation; % Kappa = 1/3 for Piperno limiter, Default = 0 otherwise; MUSCL_KAPPA= 0.0; ```. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1050
https://github.com/su2code/SU2/pull/1050:1200,Testability,test,tests,1200,"ncing in the MUSCL scheme:; <img width=""359"" alt=""Screen Shot 2020-07-17 at 11 35 28 AM"" src=""https://user-images.githubusercontent.com/19416354/87819813-b981f800-c821-11ea-85b9-c9427e7b5378.png"">; where ; - X=0 gives the original unstructured formulation for second-order variable extrapolation (default); - X=-1 gives second-order fully-upwinded MUSCL-type variable extrapolation; - X=1/2 gives third-order variable extrapolation to the cell face; - X=1/3 gives a third-order approximation to the derivative at the node (the value used in the Piperno limiter to achieve 4th order dissipation). The reasons for these additions are; - The Piperno limiter is implemented in Inria's Wolf solver and seems to be used in a lot of their mesh adaptation work (see these references for [Euler](https://hal.inria.fr/hal-02378738v2/document) and [RANS](https://hal.inria.fr/tel-01962318/file/these_archivage_3570223.pdf)); - Some preliminary tests with the Piperno limiter have converged solutions on triangulated BL meshes that @jayantmukho and I couldn't get to converge with other limiters in SU2 (e.g. triangulated DSMA661 meshes from TMR); - The MUSCL parameter exists in other solvers (FUN3D, CFL3D, Wolf) and is used by the NASA codes for many of the TMR cases (e.g. CFL3D uses 1/3 and FUN3D uses 1/2 for the DSMA661 case). Further testing still needs to be done on the effect of the MUSCL parameter with other limiters, but leaving the value as default won't affect any of the test cases. ## Relevant config parameters; Piperno limiter:; ```; SLOPE_LIMITER_FLOW= PIPERNO; ```; MUSCL parameter:; ```; % Parameter to control upwinding in MUSCL extrapolation; % Kappa = 1/3 for Piperno limiter, Default = 0 otherwise; MUSCL_KAPPA= 0.0; ```. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1050
https://github.com/su2code/SU2/pull/1050:1597,Testability,test,testing,1597,"rder variable extrapolation to the cell face; - X=1/3 gives a third-order approximation to the derivative at the node (the value used in the Piperno limiter to achieve 4th order dissipation). The reasons for these additions are; - The Piperno limiter is implemented in Inria's Wolf solver and seems to be used in a lot of their mesh adaptation work (see these references for [Euler](https://hal.inria.fr/hal-02378738v2/document) and [RANS](https://hal.inria.fr/tel-01962318/file/these_archivage_3570223.pdf)); - Some preliminary tests with the Piperno limiter have converged solutions on triangulated BL meshes that @jayantmukho and I couldn't get to converge with other limiters in SU2 (e.g. triangulated DSMA661 meshes from TMR); - The MUSCL parameter exists in other solvers (FUN3D, CFL3D, Wolf) and is used by the NASA codes for many of the TMR cases (e.g. CFL3D uses 1/3 and FUN3D uses 1/2 for the DSMA661 case). Further testing still needs to be done on the effect of the MUSCL parameter with other limiters, but leaving the value as default won't affect any of the test cases. ## Relevant config parameters; Piperno limiter:; ```; SLOPE_LIMITER_FLOW= PIPERNO; ```; MUSCL parameter:; ```; % Parameter to control upwinding in MUSCL extrapolation; % Kappa = 1/3 for Piperno limiter, Default = 0 otherwise; MUSCL_KAPPA= 0.0; ```. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1050
https://github.com/su2code/SU2/pull/1050:1743,Testability,test,test,1743,"rder variable extrapolation to the cell face; - X=1/3 gives a third-order approximation to the derivative at the node (the value used in the Piperno limiter to achieve 4th order dissipation). The reasons for these additions are; - The Piperno limiter is implemented in Inria's Wolf solver and seems to be used in a lot of their mesh adaptation work (see these references for [Euler](https://hal.inria.fr/hal-02378738v2/document) and [RANS](https://hal.inria.fr/tel-01962318/file/these_archivage_3570223.pdf)); - Some preliminary tests with the Piperno limiter have converged solutions on triangulated BL meshes that @jayantmukho and I couldn't get to converge with other limiters in SU2 (e.g. triangulated DSMA661 meshes from TMR); - The MUSCL parameter exists in other solvers (FUN3D, CFL3D, Wolf) and is used by the NASA codes for many of the TMR cases (e.g. CFL3D uses 1/3 and FUN3D uses 1/2 for the DSMA661 case). Further testing still needs to be done on the effect of the MUSCL parameter with other limiters, but leaving the value as default won't affect any of the test cases. ## Relevant config parameters; Piperno limiter:; ```; SLOPE_LIMITER_FLOW= PIPERNO; ```; MUSCL parameter:; ```; % Parameter to control upwinding in MUSCL extrapolation; % Kappa = 1/3 for Piperno limiter, Default = 0 otherwise; MUSCL_KAPPA= 0.0; ```. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1050
https://github.com/su2code/SU2/pull/1050:2554,Testability,test,test,2554,"=1/3 gives a third-order approximation to the derivative at the node (the value used in the Piperno limiter to achieve 4th order dissipation). The reasons for these additions are; - The Piperno limiter is implemented in Inria's Wolf solver and seems to be used in a lot of their mesh adaptation work (see these references for [Euler](https://hal.inria.fr/hal-02378738v2/document) and [RANS](https://hal.inria.fr/tel-01962318/file/these_archivage_3570223.pdf)); - Some preliminary tests with the Piperno limiter have converged solutions on triangulated BL meshes that @jayantmukho and I couldn't get to converge with other limiters in SU2 (e.g. triangulated DSMA661 meshes from TMR); - The MUSCL parameter exists in other solvers (FUN3D, CFL3D, Wolf) and is used by the NASA codes for many of the TMR cases (e.g. CFL3D uses 1/3 and FUN3D uses 1/2 for the DSMA661 case). Further testing still needs to be done on the effect of the MUSCL parameter with other limiters, but leaving the value as default won't affect any of the test cases. ## Relevant config parameters; Piperno limiter:; ```; SLOPE_LIMITER_FLOW= PIPERNO; ```; MUSCL parameter:; ```; % Parameter to control upwinding in MUSCL extrapolation; % Kappa = 1/3 for Piperno limiter, Default = 0 otherwise; MUSCL_KAPPA= 0.0; ```. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1050
https://github.com/su2code/SU2/pull/1050:2176,Usability,guid,guide,2176,"=1/3 gives a third-order approximation to the derivative at the node (the value used in the Piperno limiter to achieve 4th order dissipation). The reasons for these additions are; - The Piperno limiter is implemented in Inria's Wolf solver and seems to be used in a lot of their mesh adaptation work (see these references for [Euler](https://hal.inria.fr/hal-02378738v2/document) and [RANS](https://hal.inria.fr/tel-01962318/file/these_archivage_3570223.pdf)); - Some preliminary tests with the Piperno limiter have converged solutions on triangulated BL meshes that @jayantmukho and I couldn't get to converge with other limiters in SU2 (e.g. triangulated DSMA661 meshes from TMR); - The MUSCL parameter exists in other solvers (FUN3D, CFL3D, Wolf) and is used by the NASA codes for many of the TMR cases (e.g. CFL3D uses 1/3 and FUN3D uses 1/2 for the DSMA661 case). Further testing still needs to be done on the effect of the MUSCL parameter with other limiters, but leaving the value as default won't affect any of the test cases. ## Relevant config parameters; Piperno limiter:; ```; SLOPE_LIMITER_FLOW= PIPERNO; ```; MUSCL parameter:; ```; % Parameter to control upwinding in MUSCL extrapolation; % Kappa = 1/3 for Piperno limiter, Default = 0 otherwise; MUSCL_KAPPA= 0.0; ```. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1050
https://github.com/su2code/SU2/issues/1051:310,Availability,error,error,310,"**Describe the bug**; When setting OUTPUT_FILES= (SURFACE_TECPLOT) the output file is <name>.szplt. According to the code nomenclature, this file extension should be for the binary file: SU2_CFD/src/output/CTecplotBinaryFileWriter.cpp; When using the OUTPUT_FILES= (SURFACE_TECPLOT_BINARY) I get the following error:; OUTPUT_FILES: invalid option value SURFACE_TECPLOT_BINARY. Check current SU2 options in config_template.cfg. I think the nomenclature has changed w.r.t. previous versions but the template config file did not. SURFACE_TECPLOT which should output a "".dat"" file (see SU2_CFD/src/output/CTecplotFileWriter.cpp) is now (v7.0.6) SURFACE_TECPLOT_ASCII; SURFACE_TECPLOT_BINARY which should output a "".szplt"" file (see SU2_CFD/src/output/CTecplotBinaryFileWriter.cpp) is now (v7.0.6) SURFACE_TECPLOT. **Correction**; Update the config file. - SU2 Version: v7.0.5 (also applicable to v7.0.6)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1051
https://github.com/su2code/SU2/issues/1051:826,Deployability,Update,Update,826,"**Describe the bug**; When setting OUTPUT_FILES= (SURFACE_TECPLOT) the output file is <name>.szplt. According to the code nomenclature, this file extension should be for the binary file: SU2_CFD/src/output/CTecplotBinaryFileWriter.cpp; When using the OUTPUT_FILES= (SURFACE_TECPLOT_BINARY) I get the following error:; OUTPUT_FILES: invalid option value SURFACE_TECPLOT_BINARY. Check current SU2 options in config_template.cfg. I think the nomenclature has changed w.r.t. previous versions but the template config file did not. SURFACE_TECPLOT which should output a "".dat"" file (see SU2_CFD/src/output/CTecplotFileWriter.cpp) is now (v7.0.6) SURFACE_TECPLOT_ASCII; SURFACE_TECPLOT_BINARY which should output a "".szplt"" file (see SU2_CFD/src/output/CTecplotBinaryFileWriter.cpp) is now (v7.0.6) SURFACE_TECPLOT. **Correction**; Update the config file. - SU2 Version: v7.0.5 (also applicable to v7.0.6)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1051
https://github.com/su2code/SU2/issues/1051:506,Modifiability,config,config,506,"**Describe the bug**; When setting OUTPUT_FILES= (SURFACE_TECPLOT) the output file is <name>.szplt. According to the code nomenclature, this file extension should be for the binary file: SU2_CFD/src/output/CTecplotBinaryFileWriter.cpp; When using the OUTPUT_FILES= (SURFACE_TECPLOT_BINARY) I get the following error:; OUTPUT_FILES: invalid option value SURFACE_TECPLOT_BINARY. Check current SU2 options in config_template.cfg. I think the nomenclature has changed w.r.t. previous versions but the template config file did not. SURFACE_TECPLOT which should output a "".dat"" file (see SU2_CFD/src/output/CTecplotFileWriter.cpp) is now (v7.0.6) SURFACE_TECPLOT_ASCII; SURFACE_TECPLOT_BINARY which should output a "".szplt"" file (see SU2_CFD/src/output/CTecplotBinaryFileWriter.cpp) is now (v7.0.6) SURFACE_TECPLOT. **Correction**; Update the config file. - SU2 Version: v7.0.5 (also applicable to v7.0.6)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1051
https://github.com/su2code/SU2/issues/1051:837,Modifiability,config,config,837,"**Describe the bug**; When setting OUTPUT_FILES= (SURFACE_TECPLOT) the output file is <name>.szplt. According to the code nomenclature, this file extension should be for the binary file: SU2_CFD/src/output/CTecplotBinaryFileWriter.cpp; When using the OUTPUT_FILES= (SURFACE_TECPLOT_BINARY) I get the following error:; OUTPUT_FILES: invalid option value SURFACE_TECPLOT_BINARY. Check current SU2 options in config_template.cfg. I think the nomenclature has changed w.r.t. previous versions but the template config file did not. SURFACE_TECPLOT which should output a "".dat"" file (see SU2_CFD/src/output/CTecplotFileWriter.cpp) is now (v7.0.6) SURFACE_TECPLOT_ASCII; SURFACE_TECPLOT_BINARY which should output a "".szplt"" file (see SU2_CFD/src/output/CTecplotBinaryFileWriter.cpp) is now (v7.0.6) SURFACE_TECPLOT. **Correction**; Update the config file. - SU2 Version: v7.0.5 (also applicable to v7.0.6)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1051
https://github.com/su2code/SU2/pull/1052:62,Energy Efficiency,sensor,sensors,62,"## Proposed Changes; Not that anyone uses the scheme, but the sensors were missing (i.e. 0 dissipation everywhere all the time). ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1052
https://github.com/su2code/SU2/issues/1053:452,Modifiability,config,config,452,"Hi. I have some questions about SU2 implementation of classical Runge-Kutta method . According to the wikipedia (https://en.wikipedia.org/wiki/Runge%E2%80%93Kutta_methods), the formula is as follows; <img width=""430"" alt=""wiki_Runge-kutta"" src=""https://user-images.githubusercontent.com/31647163/88119795-07b54380-cbf4-11ea-8e21-1baeafbc5c6f.png"">. and the implementation in SU2 is:. ``` ; /*--- Hard-coded classical RK4 coefficients. Will be added to config. ---*/; const su2double RK_FuncCoeff[] = {1.0/6.0, 1.0/3.0, 1.0/3.0, 1.0/6.0};; const su2double RK_TimeCoeff[] = {0.5, 0.5, 1.0, 1.0};; ```. Here, I have no question about RK_FuncCoeff `{1.0/6.0, 1.0/3.0, 1.0/3.0, 1.0/6.0}`, however, the RK_TimeCoeff is ` {0.5, 0.5, 1.0, 1.0}`, Shouldn't It be `{1.0, 0.5, 0.5, 1.0} `from the formula?? Did I think something wrong?. Thanks in advance.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1053
https://github.com/su2code/SU2/pull/1054:1007,Deployability,update,updated,1007,"## Proposed Changes; This is a slight modification to the computation of face normals. Previously, the inputs to SetCoord_CG were swapped depending on whether iPoint < jPoint, but this can result in an inconsistent direction for the normals of each sub-face associated with edge i/j (i.e. for each element connected to edge i/j). This logic is replaced by dotting the sub-face normals with the edge vector from i to j (or j to i if iPoint > jPoint), and flipping the normal if the product is negative. This fix might be needed for the surface elements too, but I was less sure of what's going on in SetBoundControlVolume(). ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1054
https://github.com/su2code/SU2/pull/1054:138,Integrability,depend,depending,138,"## Proposed Changes; This is a slight modification to the computation of face normals. Previously, the inputs to SetCoord_CG were swapped depending on whether iPoint < jPoint, but this can result in an inconsistent direction for the normals of each sub-face associated with edge i/j (i.e. for each element connected to edge i/j). This logic is replaced by dotting the sub-face normals with the edge vector from i to j (or j to i if iPoint > jPoint), and flipping the normal if the product is negative. This fix might be needed for the surface elements too, but I was less sure of what's going on in SetBoundControlVolume(). ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1054
https://github.com/su2code/SU2/pull/1054:335,Testability,log,logic,335,"## Proposed Changes; This is a slight modification to the computation of face normals. Previously, the inputs to SetCoord_CG were swapped depending on whether iPoint < jPoint, but this can result in an inconsistent direction for the normals of each sub-face associated with edge i/j (i.e. for each element connected to edge i/j). This logic is replaced by dotting the sub-face normals with the edge vector from i to j (or j to i if iPoint > jPoint), and flipping the normal if the product is negative. This fix might be needed for the surface elements too, but I was less sure of what's going on in SetBoundControlVolume(). ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1054
https://github.com/su2code/SU2/pull/1054:934,Testability,test,test,934,"## Proposed Changes; This is a slight modification to the computation of face normals. Previously, the inputs to SetCoord_CG were swapped depending on whether iPoint < jPoint, but this can result in an inconsistent direction for the normals of each sub-face associated with edge i/j (i.e. for each element connected to edge i/j). This logic is replaced by dotting the sub-face normals with the edge vector from i to j (or j to i if iPoint > jPoint), and flipping the normal if the product is negative. This fix might be needed for the surface elements too, but I was less sure of what's going on in SetBoundControlVolume(). ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1054
https://github.com/su2code/SU2/pull/1055:274,Security,access,access,274,"## Proposed Changes; Some folks are having issues on Windows: https://www.cfd-online.com/Forums/su2/227916-problem-opening-vtu-file-paraview.html; @talbring and I think it might be the classic ""unsigned long is 32bits on Windows"" problem, maybe this fixes it, I do not have access to a Windows machine, if someone could test this it would be great. ## Related Work; #980; Resolves #1060. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1055
https://github.com/su2code/SU2/pull/1055:320,Testability,test,test,320,"## Proposed Changes; Some folks are having issues on Windows: https://www.cfd-online.com/Forums/su2/227916-problem-opening-vtu-file-paraview.html; @talbring and I think it might be the classic ""unsigned long is 32bits on Windows"" problem, maybe this fixes it, I do not have access to a Windows machine, if someone could test this it would be great. ## Related Work; #980; Resolves #1060. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1055
https://github.com/su2code/SU2/pull/1056:565,Deployability,update,updated,565,"## Proposed Changes; JST with scalar dissipation over predicts drag in friction-dominated problems, the version with matrix dissipation is better. ## Related Work; Depends on #1022. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1056
https://github.com/su2code/SU2/pull/1056:164,Integrability,Depend,Depends,164,"## Proposed Changes; JST with scalar dissipation over predicts drag in friction-dominated problems, the version with matrix dissipation is better. ## Related Work; Depends on #1022. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1056
https://github.com/su2code/SU2/pull/1056:54,Safety,predict,predicts,54,"## Proposed Changes; JST with scalar dissipation over predicts drag in friction-dominated problems, the version with matrix dissipation is better. ## Related Work; Depends on #1022. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1056
https://github.com/su2code/SU2/pull/1056:492,Testability,test,test,492,"## Proposed Changes; JST with scalar dissipation over predicts drag in friction-dominated problems, the version with matrix dissipation is better. ## Related Work; Depends on #1022. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1056
https://github.com/su2code/SU2/pull/1057:1807,Deployability,update,updated,1807,"## Proposed Changes; There was a bug in the CTurbSolver::ComputeUnderRelaxation() that would return a negative UR if the change in solution was too negative (less than the allowable decrease), which could cause the solution to head in the wrong direction. I'm not really sure why the turbulent solver version of this function was written differently than the flow solver (maybe the intention was to have a different allowable increase and decrease but they ended up being the same in the end?), but I changed it to make it consistent with the flow solver version. Also, as I mentioned in #1036, the UR parameters for the flow solver and turbulent solver both took the min of each other and were never reset for steady, meaning it was non-increasing. While on the topic of UR, I was wondering what the community's thoughts are on changing the SST models to use UR instead of solution clipping. The limits seem somewhat arbitrary to me (is there a ref?), and the tests I've done on my mesh adaptation cases have performed well where I've replaced clipping with UR. I realize this is a very limited dataset so if anyone has any strong opinions of why we should be clipping, let me know. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1057
https://github.com/su2code/SU2/pull/1057:988,Energy Efficiency,adapt,adaptation,988,"## Proposed Changes; There was a bug in the CTurbSolver::ComputeUnderRelaxation() that would return a negative UR if the change in solution was too negative (less than the allowable decrease), which could cause the solution to head in the wrong direction. I'm not really sure why the turbulent solver version of this function was written differently than the flow solver (maybe the intention was to have a different allowable increase and decrease but they ended up being the same in the end?), but I changed it to make it consistent with the flow solver version. Also, as I mentioned in #1036, the UR parameters for the flow solver and turbulent solver both took the min of each other and were never reset for steady, meaning it was non-increasing. While on the topic of UR, I was wondering what the community's thoughts are on changing the SST models to use UR instead of solution clipping. The limits seem somewhat arbitrary to me (is there a ref?), and the tests I've done on my mesh adaptation cases have performed well where I've replaced clipping with UR. I realize this is a very limited dataset so if anyone has any strong opinions of why we should be clipping, let me know. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1057
https://github.com/su2code/SU2/pull/1057:988,Modifiability,adapt,adaptation,988,"## Proposed Changes; There was a bug in the CTurbSolver::ComputeUnderRelaxation() that would return a negative UR if the change in solution was too negative (less than the allowable decrease), which could cause the solution to head in the wrong direction. I'm not really sure why the turbulent solver version of this function was written differently than the flow solver (maybe the intention was to have a different allowable increase and decrease but they ended up being the same in the end?), but I changed it to make it consistent with the flow solver version. Also, as I mentioned in #1036, the UR parameters for the flow solver and turbulent solver both took the min of each other and were never reset for steady, meaning it was non-increasing. While on the topic of UR, I was wondering what the community's thoughts are on changing the SST models to use UR instead of solution clipping. The limits seem somewhat arbitrary to me (is there a ref?), and the tests I've done on my mesh adaptation cases have performed well where I've replaced clipping with UR. I realize this is a very limited dataset so if anyone has any strong opinions of why we should be clipping, let me know. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1057
https://github.com/su2code/SU2/pull/1057:1010,Performance,perform,performed,1010,"## Proposed Changes; There was a bug in the CTurbSolver::ComputeUnderRelaxation() that would return a negative UR if the change in solution was too negative (less than the allowable decrease), which could cause the solution to head in the wrong direction. I'm not really sure why the turbulent solver version of this function was written differently than the flow solver (maybe the intention was to have a different allowable increase and decrease but they ended up being the same in the end?), but I changed it to make it consistent with the flow solver version. Also, as I mentioned in #1036, the UR parameters for the flow solver and turbulent solver both took the min of each other and were never reset for steady, meaning it was non-increasing. While on the topic of UR, I was wondering what the community's thoughts are on changing the SST models to use UR instead of solution clipping. The limits seem somewhat arbitrary to me (is there a ref?), and the tests I've done on my mesh adaptation cases have performed well where I've replaced clipping with UR. I realize this is a very limited dataset so if anyone has any strong opinions of why we should be clipping, let me know. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1057
https://github.com/su2code/SU2/pull/1057:961,Testability,test,tests,961,"## Proposed Changes; There was a bug in the CTurbSolver::ComputeUnderRelaxation() that would return a negative UR if the change in solution was too negative (less than the allowable decrease), which could cause the solution to head in the wrong direction. I'm not really sure why the turbulent solver version of this function was written differently than the flow solver (maybe the intention was to have a different allowable increase and decrease but they ended up being the same in the end?), but I changed it to make it consistent with the flow solver version. Also, as I mentioned in #1036, the UR parameters for the flow solver and turbulent solver both took the min of each other and were never reset for steady, meaning it was non-increasing. While on the topic of UR, I was wondering what the community's thoughts are on changing the SST models to use UR instead of solution clipping. The limits seem somewhat arbitrary to me (is there a ref?), and the tests I've done on my mesh adaptation cases have performed well where I've replaced clipping with UR. I realize this is a very limited dataset so if anyone has any strong opinions of why we should be clipping, let me know. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1057
https://github.com/su2code/SU2/pull/1057:1734,Testability,test,test,1734,"## Proposed Changes; There was a bug in the CTurbSolver::ComputeUnderRelaxation() that would return a negative UR if the change in solution was too negative (less than the allowable decrease), which could cause the solution to head in the wrong direction. I'm not really sure why the turbulent solver version of this function was written differently than the flow solver (maybe the intention was to have a different allowable increase and decrease but they ended up being the same in the end?), but I changed it to make it consistent with the flow solver version. Also, as I mentioned in #1036, the UR parameters for the flow solver and turbulent solver both took the min of each other and were never reset for steady, meaning it was non-increasing. While on the topic of UR, I was wondering what the community's thoughts are on changing the SST models to use UR instead of solution clipping. The limits seem somewhat arbitrary to me (is there a ref?), and the tests I've done on my mesh adaptation cases have performed well where I've replaced clipping with UR. I realize this is a very limited dataset so if anyone has any strong opinions of why we should be clipping, let me know. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1057
https://github.com/su2code/SU2/pull/1057:1356,Usability,guid,guide,1356,"## Proposed Changes; There was a bug in the CTurbSolver::ComputeUnderRelaxation() that would return a negative UR if the change in solution was too negative (less than the allowable decrease), which could cause the solution to head in the wrong direction. I'm not really sure why the turbulent solver version of this function was written differently than the flow solver (maybe the intention was to have a different allowable increase and decrease but they ended up being the same in the end?), but I changed it to make it consistent with the flow solver version. Also, as I mentioned in #1036, the UR parameters for the flow solver and turbulent solver both took the min of each other and were never reset for steady, meaning it was non-increasing. While on the topic of UR, I was wondering what the community's thoughts are on changing the SST models to use UR instead of solution clipping. The limits seem somewhat arbitrary to me (is there a ref?), and the tests I've done on my mesh adaptation cases have performed well where I've replaced clipping with UR. I realize this is a very limited dataset so if anyone has any strong opinions of why we should be clipping, let me know. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1057
https://github.com/su2code/SU2/issues/1058:261,Modifiability,extend,extendable,261,"Hi everyone,. First of all, I want to thank you for this marvelous project you're running! Well done!; But I have some suggestions about the ""building"" and design philosophy of SU2. This (programming-related) ""feature request"" is all about making SU2 even more extendable. ## Is my feature request related to a problem?; Maybe! It's not pleasant when I'm forced to link libraries statically. I think it hinders the potential of the C++ language and makes compilation time unnecessarily longer. For example, in [SU2_CFD.cpp](https://github.com/su2code/SU2/blob/master/SU2_CFD/src/SU2_CFD.cpp#L117) the program decides what to do with an if statement and **all drivers need to be linked at compile-time**. What if I want to write my own driver? I need to include my headers in ""SU2_CFD.hpp"" and rebuild the whole thing again!!!. ## The solution I would like; Why not use a [Factory With Self-Registering Classes](https://www.bfilipek.com/2018/02/factory-selfregister.html) instead. Ideally, the parent class (CDriver for example) would have; a static ::new() (or ::create() ) method which will create the appropriate type (child classes) based on **user input** (aka, from config file).; Of course, this way, the table of registered classes (drivers in my example) could be extended if the user requests to; dynamically load his own library (assuming that the library contains a child class that registers itself to the table). There is another vital related issue: Incorporating SU2 code in user-developed code is the main concern of this feature request but we also need a mechanism for getting references to all created objects. In the shared separate library, the user expects to; use already created CVariables, ... etc; how can he get those? An object database that keeps references to most involved objects is needed. **This roughly describes what I think is needed to be done. I'm willing to help and even lead the development of this feature if it gets enough approval**. ### Alternatives?; Can",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058
https://github.com/su2code/SU2/issues/1058:1171,Modifiability,config,config,1171," running! Well done!; But I have some suggestions about the ""building"" and design philosophy of SU2. This (programming-related) ""feature request"" is all about making SU2 even more extendable. ## Is my feature request related to a problem?; Maybe! It's not pleasant when I'm forced to link libraries statically. I think it hinders the potential of the C++ language and makes compilation time unnecessarily longer. For example, in [SU2_CFD.cpp](https://github.com/su2code/SU2/blob/master/SU2_CFD/src/SU2_CFD.cpp#L117) the program decides what to do with an if statement and **all drivers need to be linked at compile-time**. What if I want to write my own driver? I need to include my headers in ""SU2_CFD.hpp"" and rebuild the whole thing again!!!. ## The solution I would like; Why not use a [Factory With Self-Registering Classes](https://www.bfilipek.com/2018/02/factory-selfregister.html) instead. Ideally, the parent class (CDriver for example) would have; a static ::new() (or ::create() ) method which will create the appropriate type (child classes) based on **user input** (aka, from config file).; Of course, this way, the table of registered classes (drivers in my example) could be extended if the user requests to; dynamically load his own library (assuming that the library contains a child class that registers itself to the table). There is another vital related issue: Incorporating SU2 code in user-developed code is the main concern of this feature request but we also need a mechanism for getting references to all created objects. In the shared separate library, the user expects to; use already created CVariables, ... etc; how can he get those? An object database that keeps references to most involved objects is needed. **This roughly describes what I think is needed to be done. I'm willing to help and even lead the development of this feature if it gets enough approval**. ### Alternatives?; Can't think of anything else! This feature will enable devs to effortlessly extend t",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058
https://github.com/su2code/SU2/issues/1058:1272,Modifiability,extend,extended,1272,"d to a problem?; Maybe! It's not pleasant when I'm forced to link libraries statically. I think it hinders the potential of the C++ language and makes compilation time unnecessarily longer. For example, in [SU2_CFD.cpp](https://github.com/su2code/SU2/blob/master/SU2_CFD/src/SU2_CFD.cpp#L117) the program decides what to do with an if statement and **all drivers need to be linked at compile-time**. What if I want to write my own driver? I need to include my headers in ""SU2_CFD.hpp"" and rebuild the whole thing again!!!. ## The solution I would like; Why not use a [Factory With Self-Registering Classes](https://www.bfilipek.com/2018/02/factory-selfregister.html) instead. Ideally, the parent class (CDriver for example) would have; a static ::new() (or ::create() ) method which will create the appropriate type (child classes) based on **user input** (aka, from config file).; Of course, this way, the table of registered classes (drivers in my example) could be extended if the user requests to; dynamically load his own library (assuming that the library contains a child class that registers itself to the table). There is another vital related issue: Incorporating SU2 code in user-developed code is the main concern of this feature request but we also need a mechanism for getting references to all created objects. In the shared separate library, the user expects to; use already created CVariables, ... etc; how can he get those? An object database that keeps references to most involved objects is needed. **This roughly describes what I think is needed to be done. I'm willing to help and even lead the development of this feature if it gets enough approval**. ### Alternatives?; Can't think of anything else! This feature will enable devs to effortlessly extend the software and it even facilitates the building of User Defined Functions in the future as it'll become an important feature when the project gains enough popularity. The only other option is to leave all this behind and c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058
https://github.com/su2code/SU2/issues/1058:2074,Modifiability,extend,extend,2074,"e type (child classes) based on **user input** (aka, from config file).; Of course, this way, the table of registered classes (drivers in my example) could be extended if the user requests to; dynamically load his own library (assuming that the library contains a child class that registers itself to the table). There is another vital related issue: Incorporating SU2 code in user-developed code is the main concern of this feature request but we also need a mechanism for getting references to all created objects. In the shared separate library, the user expects to; use already created CVariables, ... etc; how can he get those? An object database that keeps references to most involved objects is needed. **This roughly describes what I think is needed to be done. I'm willing to help and even lead the development of this feature if it gets enough approval**. ### Alternatives?; Can't think of anything else! This feature will enable devs to effortlessly extend the software and it even facilitates the building of User Defined Functions in the future as it'll become an important feature when the project gains enough popularity. The only other option is to leave all this behind and continue developing following the current design until the project reaches a state where it will become very hard to go back and implement this feature. **Additional context**; 1. The design I described above doesn't take into account C++ templates as I don't see them used that frequently (Is that a thing?). 2. One last thing: Please, Please, we have to stop using raw pointers like that. I ran valgrind on the ""Inviscid Bump in a Channel"" case and discovered that 1Megs got definitely lost (leaked). Of course it will, if raw pointers get used in that way. I fully understand that many of the skilled programmers here come from C/Fortran background but please refrain from using raw pointers everywhere; and use C++ memory management objects (weak_ptr, unique_ptr, shared_ptr ... etc) instead. Make it a cod",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058
https://github.com/su2code/SU2/issues/1058:1318,Performance,load,load,1318,"d to a problem?; Maybe! It's not pleasant when I'm forced to link libraries statically. I think it hinders the potential of the C++ language and makes compilation time unnecessarily longer. For example, in [SU2_CFD.cpp](https://github.com/su2code/SU2/blob/master/SU2_CFD/src/SU2_CFD.cpp#L117) the program decides what to do with an if statement and **all drivers need to be linked at compile-time**. What if I want to write my own driver? I need to include my headers in ""SU2_CFD.hpp"" and rebuild the whole thing again!!!. ## The solution I would like; Why not use a [Factory With Self-Registering Classes](https://www.bfilipek.com/2018/02/factory-selfregister.html) instead. Ideally, the parent class (CDriver for example) would have; a static ::new() (or ::create() ) method which will create the appropriate type (child classes) based on **user input** (aka, from config file).; Of course, this way, the table of registered classes (drivers in my example) could be extended if the user requests to; dynamically load his own library (assuming that the library contains a child class that registers itself to the table). There is another vital related issue: Incorporating SU2 code in user-developed code is the main concern of this feature request but we also need a mechanism for getting references to all created objects. In the shared separate library, the user expects to; use already created CVariables, ... etc; how can he get those? An object database that keeps references to most involved objects is needed. **This roughly describes what I think is needed to be done. I'm willing to help and even lead the development of this feature if it gets enough approval**. ### Alternatives?; Can't think of anything else! This feature will enable devs to effortlessly extend the software and it even facilitates the building of User Defined Functions in the future as it'll become an important feature when the project gains enough popularity. The only other option is to leave all this behind and c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058
https://github.com/su2code/SU2/pull/1059:415,Deployability,update,updated,415,"## Proposed Changes; See below. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1059
https://github.com/su2code/SU2/pull/1059:342,Testability,test,test,342,"## Proposed Changes; See below. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1059
https://github.com/su2code/SU2/issues/1060:61,Deployability,update,update,61,If you see some testcases failing seemingly at random do not update them!; Do `git cherry-pick e71a956b49156fcf3b30b705e0e48e803ba155c1` (fixed in #1055),MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1060
https://github.com/su2code/SU2/issues/1060:16,Testability,test,testcases,16,If you see some testcases failing seemingly at random do not update them!; Do `git cherry-pick e71a956b49156fcf3b30b705e0e48e803ba155c1` (fixed in #1055),MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1060
https://github.com/su2code/SU2/pull/1061:116,Integrability,interface,interfaces,116,"## Proposed Changes; I overlooked something in #951, in that PR I made possible defining many-to-many multi-physics interfaces, i.e. one marker can receive some variables from zone A (e.g. temperature) and others from zone B (e.g. displacements). The problem is that unless the case is very very trivial, this does not work because currently the target geometry can only store donor information (interpolation coefficients and donor point indices) for one donor.; So many-to-many only works if everything matches, interpolation method, point indices, etc. The proposed solution is to move the donor information out of CVertex and into the CInterpolator object, which has a one-to-one relation with the interfaces, hopefully this will make the interfaces generic enough. ## Related Work; #951 . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1061
https://github.com/su2code/SU2/pull/1061:702,Integrability,interface,interfaces,702,"## Proposed Changes; I overlooked something in #951, in that PR I made possible defining many-to-many multi-physics interfaces, i.e. one marker can receive some variables from zone A (e.g. temperature) and others from zone B (e.g. displacements). The problem is that unless the case is very very trivial, this does not work because currently the target geometry can only store donor information (interpolation coefficients and donor point indices) for one donor.; So many-to-many only works if everything matches, interpolation method, point indices, etc. The proposed solution is to move the donor information out of CVertex and into the CInterpolator object, which has a one-to-one relation with the interfaces, hopefully this will make the interfaces generic enough. ## Related Work; #951 . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1061
https://github.com/su2code/SU2/pull/1061:743,Integrability,interface,interfaces,743,"## Proposed Changes; I overlooked something in #951, in that PR I made possible defining many-to-many multi-physics interfaces, i.e. one marker can receive some variables from zone A (e.g. temperature) and others from zone B (e.g. displacements). The problem is that unless the case is very very trivial, this does not work because currently the target geometry can only store donor information (interpolation coefficients and donor point indices) for one donor.; So many-to-many only works if everything matches, interpolation method, point indices, etc. The proposed solution is to move the donor information out of CVertex and into the CInterpolator object, which has a one-to-one relation with the interfaces, hopefully this will make the interfaces generic enough. ## Related Work; #951 . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1061
https://github.com/su2code/SU2/pull/1061:161,Modifiability,variab,variables,161,"## Proposed Changes; I overlooked something in #951, in that PR I made possible defining many-to-many multi-physics interfaces, i.e. one marker can receive some variables from zone A (e.g. temperature) and others from zone B (e.g. displacements). The problem is that unless the case is very very trivial, this does not work because currently the target geometry can only store donor information (interpolation coefficients and donor point indices) for one donor.; So many-to-many only works if everything matches, interpolation method, point indices, etc. The proposed solution is to move the donor information out of CVertex and into the CInterpolator object, which has a one-to-one relation with the interfaces, hopefully this will make the interfaces generic enough. ## Related Work; #951 . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1061
https://github.com/su2code/SU2/pull/1062:1096,Deployability,integrat,integration,1096,"## Proposed Changes; A draft PR for creating self-registering classes with a factory.; The class (CEulerSolver implemented) that wants to register to a factory (CSolverFactory implemented) should:; - Inherit from DBMember template class (new, only handles automatic-registration).; - Provide a ""GetName()"" member method which returns the registered name as a string.; - Provide a ""CreateMethod()"" member with specific signature. This function should handle the full-creation of the object (For CEulerSolver, it makes a pointer and runs Preprocessing on it). The factory class must provide a Register() method that accepts the to-be registered class's name and a pointer to its creation method with the specific signature mentioned above. These design constraints are all enforced in DBMember but no checks where made for now. Instead of meddling with member functions of CSolverFactory, I chose to create the test solver (EULER) directly in CDriver. ### Results so far; 1. Solver gets instantiated successfully, the solver preprocessing phase passes with no problems; 2. When the program gets to integration preprocessing, it fails with out_of_range exception. But that's to be expected as no solver metadata is tracked for the newly created solver yet :). Again, testing on the ""Inviscid bump in a channel"" case. ## Related Work; This PR extends the work on #1058 . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1062
https://github.com/su2code/SU2/pull/1062:1750,Deployability,update,updated,1750,"## Proposed Changes; A draft PR for creating self-registering classes with a factory.; The class (CEulerSolver implemented) that wants to register to a factory (CSolverFactory implemented) should:; - Inherit from DBMember template class (new, only handles automatic-registration).; - Provide a ""GetName()"" member method which returns the registered name as a string.; - Provide a ""CreateMethod()"" member with specific signature. This function should handle the full-creation of the object (For CEulerSolver, it makes a pointer and runs Preprocessing on it). The factory class must provide a Register() method that accepts the to-be registered class's name and a pointer to its creation method with the specific signature mentioned above. These design constraints are all enforced in DBMember but no checks where made for now. Instead of meddling with member functions of CSolverFactory, I chose to create the test solver (EULER) directly in CDriver. ### Results so far; 1. Solver gets instantiated successfully, the solver preprocessing phase passes with no problems; 2. When the program gets to integration preprocessing, it fails with out_of_range exception. But that's to be expected as no solver metadata is tracked for the newly created solver yet :). Again, testing on the ""Inviscid bump in a channel"" case. ## Related Work; This PR extends the work on #1058 . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1062
https://github.com/su2code/SU2/pull/1062:1096,Integrability,integrat,integration,1096,"## Proposed Changes; A draft PR for creating self-registering classes with a factory.; The class (CEulerSolver implemented) that wants to register to a factory (CSolverFactory implemented) should:; - Inherit from DBMember template class (new, only handles automatic-registration).; - Provide a ""GetName()"" member method which returns the registered name as a string.; - Provide a ""CreateMethod()"" member with specific signature. This function should handle the full-creation of the object (For CEulerSolver, it makes a pointer and runs Preprocessing on it). The factory class must provide a Register() method that accepts the to-be registered class's name and a pointer to its creation method with the specific signature mentioned above. These design constraints are all enforced in DBMember but no checks where made for now. Instead of meddling with member functions of CSolverFactory, I chose to create the test solver (EULER) directly in CDriver. ### Results so far; 1. Solver gets instantiated successfully, the solver preprocessing phase passes with no problems; 2. When the program gets to integration preprocessing, it fails with out_of_range exception. But that's to be expected as no solver metadata is tracked for the newly created solver yet :). Again, testing on the ""Inviscid bump in a channel"" case. ## Related Work; This PR extends the work on #1058 . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1062
https://github.com/su2code/SU2/pull/1062:200,Modifiability,Inherit,Inherit,200,"## Proposed Changes; A draft PR for creating self-registering classes with a factory.; The class (CEulerSolver implemented) that wants to register to a factory (CSolverFactory implemented) should:; - Inherit from DBMember template class (new, only handles automatic-registration).; - Provide a ""GetName()"" member method which returns the registered name as a string.; - Provide a ""CreateMethod()"" member with specific signature. This function should handle the full-creation of the object (For CEulerSolver, it makes a pointer and runs Preprocessing on it). The factory class must provide a Register() method that accepts the to-be registered class's name and a pointer to its creation method with the specific signature mentioned above. These design constraints are all enforced in DBMember but no checks where made for now. Instead of meddling with member functions of CSolverFactory, I chose to create the test solver (EULER) directly in CDriver. ### Results so far; 1. Solver gets instantiated successfully, the solver preprocessing phase passes with no problems; 2. When the program gets to integration preprocessing, it fails with out_of_range exception. But that's to be expected as no solver metadata is tracked for the newly created solver yet :). Again, testing on the ""Inviscid bump in a channel"" case. ## Related Work; This PR extends the work on #1058 . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1062
https://github.com/su2code/SU2/pull/1062:1339,Modifiability,extend,extends,1339,"## Proposed Changes; A draft PR for creating self-registering classes with a factory.; The class (CEulerSolver implemented) that wants to register to a factory (CSolverFactory implemented) should:; - Inherit from DBMember template class (new, only handles automatic-registration).; - Provide a ""GetName()"" member method which returns the registered name as a string.; - Provide a ""CreateMethod()"" member with specific signature. This function should handle the full-creation of the object (For CEulerSolver, it makes a pointer and runs Preprocessing on it). The factory class must provide a Register() method that accepts the to-be registered class's name and a pointer to its creation method with the specific signature mentioned above. These design constraints are all enforced in DBMember but no checks where made for now. Instead of meddling with member functions of CSolverFactory, I chose to create the test solver (EULER) directly in CDriver. ### Results so far; 1. Solver gets instantiated successfully, the solver preprocessing phase passes with no problems; 2. When the program gets to integration preprocessing, it fails with out_of_range exception. But that's to be expected as no solver metadata is tracked for the newly created solver yet :). Again, testing on the ""Inviscid bump in a channel"" case. ## Related Work; This PR extends the work on #1058 . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1062
https://github.com/su2code/SU2/pull/1062:909,Testability,test,test,909,"## Proposed Changes; A draft PR for creating self-registering classes with a factory.; The class (CEulerSolver implemented) that wants to register to a factory (CSolverFactory implemented) should:; - Inherit from DBMember template class (new, only handles automatic-registration).; - Provide a ""GetName()"" member method which returns the registered name as a string.; - Provide a ""CreateMethod()"" member with specific signature. This function should handle the full-creation of the object (For CEulerSolver, it makes a pointer and runs Preprocessing on it). The factory class must provide a Register() method that accepts the to-be registered class's name and a pointer to its creation method with the specific signature mentioned above. These design constraints are all enforced in DBMember but no checks where made for now. Instead of meddling with member functions of CSolverFactory, I chose to create the test solver (EULER) directly in CDriver. ### Results so far; 1. Solver gets instantiated successfully, the solver preprocessing phase passes with no problems; 2. When the program gets to integration preprocessing, it fails with out_of_range exception. But that's to be expected as no solver metadata is tracked for the newly created solver yet :). Again, testing on the ""Inviscid bump in a channel"" case. ## Related Work; This PR extends the work on #1058 . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1062
https://github.com/su2code/SU2/pull/1062:1264,Testability,test,testing,1264,"## Proposed Changes; A draft PR for creating self-registering classes with a factory.; The class (CEulerSolver implemented) that wants to register to a factory (CSolverFactory implemented) should:; - Inherit from DBMember template class (new, only handles automatic-registration).; - Provide a ""GetName()"" member method which returns the registered name as a string.; - Provide a ""CreateMethod()"" member with specific signature. This function should handle the full-creation of the object (For CEulerSolver, it makes a pointer and runs Preprocessing on it). The factory class must provide a Register() method that accepts the to-be registered class's name and a pointer to its creation method with the specific signature mentioned above. These design constraints are all enforced in DBMember but no checks where made for now. Instead of meddling with member functions of CSolverFactory, I chose to create the test solver (EULER) directly in CDriver. ### Results so far; 1. Solver gets instantiated successfully, the solver preprocessing phase passes with no problems; 2. When the program gets to integration preprocessing, it fails with out_of_range exception. But that's to be expected as no solver metadata is tracked for the newly created solver yet :). Again, testing on the ""Inviscid bump in a channel"" case. ## Related Work; This PR extends the work on #1058 . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1062
https://github.com/su2code/SU2/pull/1062:1677,Testability,test,test,1677,"## Proposed Changes; A draft PR for creating self-registering classes with a factory.; The class (CEulerSolver implemented) that wants to register to a factory (CSolverFactory implemented) should:; - Inherit from DBMember template class (new, only handles automatic-registration).; - Provide a ""GetName()"" member method which returns the registered name as a string.; - Provide a ""CreateMethod()"" member with specific signature. This function should handle the full-creation of the object (For CEulerSolver, it makes a pointer and runs Preprocessing on it). The factory class must provide a Register() method that accepts the to-be registered class's name and a pointer to its creation method with the specific signature mentioned above. These design constraints are all enforced in DBMember but no checks where made for now. Instead of meddling with member functions of CSolverFactory, I chose to create the test solver (EULER) directly in CDriver. ### Results so far; 1. Solver gets instantiated successfully, the solver preprocessing phase passes with no problems; 2. When the program gets to integration preprocessing, it fails with out_of_range exception. But that's to be expected as no solver metadata is tracked for the newly created solver yet :). Again, testing on the ""Inviscid bump in a channel"" case. ## Related Work; This PR extends the work on #1058 . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1062
https://github.com/su2code/SU2/issues/1065:508,Availability,reliab,reliably,508,"I am wondering what it would take to adapt SU2 to model the flow of (thermally/calorically) non-ideal gases where cp, gamma, etc. vary with the state and for which the relations R = Cp - Cv, H = Cp * T, etc. are not valid. . Do all the computations of flux jacobians etc. formulated in terms of gamma already rely on the ideal gas (or polytropic) assumption? . Is this sort of thing considered unimportant since SU2 is mainly intended for aerodynamics or would it be too demanding for the solver to converge reliably?. To give a ""simple"" example where this would be useful: A converging-diverging nozzle expanding the refrigerant r134a from around 24 bar to 3 bar. Only if gamma is set to the throat value the choked flow rate will be fairly correctly predicted but the outlet temperature will then be very far below the isentropic 1D result with a real EoS. This seems to have consequences not only for the temperature field but also for the performance certainly of more complex devices.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1065
https://github.com/su2code/SU2/issues/1065:37,Energy Efficiency,adapt,adapt,37,"I am wondering what it would take to adapt SU2 to model the flow of (thermally/calorically) non-ideal gases where cp, gamma, etc. vary with the state and for which the relations R = Cp - Cv, H = Cp * T, etc. are not valid. . Do all the computations of flux jacobians etc. formulated in terms of gamma already rely on the ideal gas (or polytropic) assumption? . Is this sort of thing considered unimportant since SU2 is mainly intended for aerodynamics or would it be too demanding for the solver to converge reliably?. To give a ""simple"" example where this would be useful: A converging-diverging nozzle expanding the refrigerant r134a from around 24 bar to 3 bar. Only if gamma is set to the throat value the choked flow rate will be fairly correctly predicted but the outlet temperature will then be very far below the isentropic 1D result with a real EoS. This seems to have consequences not only for the temperature field but also for the performance certainly of more complex devices.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1065
https://github.com/su2code/SU2/issues/1065:37,Modifiability,adapt,adapt,37,"I am wondering what it would take to adapt SU2 to model the flow of (thermally/calorically) non-ideal gases where cp, gamma, etc. vary with the state and for which the relations R = Cp - Cv, H = Cp * T, etc. are not valid. . Do all the computations of flux jacobians etc. formulated in terms of gamma already rely on the ideal gas (or polytropic) assumption? . Is this sort of thing considered unimportant since SU2 is mainly intended for aerodynamics or would it be too demanding for the solver to converge reliably?. To give a ""simple"" example where this would be useful: A converging-diverging nozzle expanding the refrigerant r134a from around 24 bar to 3 bar. Only if gamma is set to the throat value the choked flow rate will be fairly correctly predicted but the outlet temperature will then be very far below the isentropic 1D result with a real EoS. This seems to have consequences not only for the temperature field but also for the performance certainly of more complex devices.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1065
https://github.com/su2code/SU2/issues/1065:943,Performance,perform,performance,943,"I am wondering what it would take to adapt SU2 to model the flow of (thermally/calorically) non-ideal gases where cp, gamma, etc. vary with the state and for which the relations R = Cp - Cv, H = Cp * T, etc. are not valid. . Do all the computations of flux jacobians etc. formulated in terms of gamma already rely on the ideal gas (or polytropic) assumption? . Is this sort of thing considered unimportant since SU2 is mainly intended for aerodynamics or would it be too demanding for the solver to converge reliably?. To give a ""simple"" example where this would be useful: A converging-diverging nozzle expanding the refrigerant r134a from around 24 bar to 3 bar. Only if gamma is set to the throat value the choked flow rate will be fairly correctly predicted but the outlet temperature will then be very far below the isentropic 1D result with a real EoS. This seems to have consequences not only for the temperature field but also for the performance certainly of more complex devices.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1065
https://github.com/su2code/SU2/issues/1065:752,Safety,predict,predicted,752,"I am wondering what it would take to adapt SU2 to model the flow of (thermally/calorically) non-ideal gases where cp, gamma, etc. vary with the state and for which the relations R = Cp - Cv, H = Cp * T, etc. are not valid. . Do all the computations of flux jacobians etc. formulated in terms of gamma already rely on the ideal gas (or polytropic) assumption? . Is this sort of thing considered unimportant since SU2 is mainly intended for aerodynamics or would it be too demanding for the solver to converge reliably?. To give a ""simple"" example where this would be useful: A converging-diverging nozzle expanding the refrigerant r134a from around 24 bar to 3 bar. Only if gamma is set to the throat value the choked flow rate will be fairly correctly predicted but the outlet temperature will then be very far below the isentropic 1D result with a real EoS. This seems to have consequences not only for the temperature field but also for the performance certainly of more complex devices.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1065
https://github.com/su2code/SU2/issues/1065:530,Usability,simpl,simple,530,"I am wondering what it would take to adapt SU2 to model the flow of (thermally/calorically) non-ideal gases where cp, gamma, etc. vary with the state and for which the relations R = Cp - Cv, H = Cp * T, etc. are not valid. . Do all the computations of flux jacobians etc. formulated in terms of gamma already rely on the ideal gas (or polytropic) assumption? . Is this sort of thing considered unimportant since SU2 is mainly intended for aerodynamics or would it be too demanding for the solver to converge reliably?. To give a ""simple"" example where this would be useful: A converging-diverging nozzle expanding the refrigerant r134a from around 24 bar to 3 bar. Only if gamma is set to the throat value the choked flow rate will be fairly correctly predicted but the outlet temperature will then be very far below the isentropic 1D result with a real EoS. This seems to have consequences not only for the temperature field but also for the performance certainly of more complex devices.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1065
https://github.com/su2code/SU2/pull/1066:994,Deployability,Update,Updated,994,"Implementation of the original SA and Negative SA turbulence models as well as their no-ft2 versions. ## Proposed Changes; Implementation of the original version of Spalart-Allmaras turbulence model (https://www.researchgate.net/publication/236888804_A_One-Equation_Turbulence_Model_for_Aerodynamic_Flows).; Implementation of the Spalart-Allmaras turbulence model without the ft2 term.; Implementation of the original version of Negative Spalart-Allmaras turbulence model (https://www.iccfd.org/iccfd7/assets/pdf/papers/ICCFD7-1902_paper.pdf); Implementation of the Negative Spalart-Allmaras turbulence model without the ft2 term neither modified vorticity. On the config file, choose:; SA: Original SA model; SA_NOFT2: SA model without ft2 term (the *same* model found in the develop branch); SA_NEG: Original negative SA model; SA_NEG_NOFT2: Negative SA model (the *same* model found in the develop branch). *They are not the same as in the develop branch, because I corrected a minor bug.*. Updated the template config file to be in accordance with the source code: turbulent models and OUTPUT_FILES tags. ## Related Work; This PR resolves issues #992 and #1051. ## Regression testing; Tested on tutorials:; - Turbulent Flat Plate; - RAE2822; - Turbulent ONERA M6. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1066
https://github.com/su2code/SU2/pull/1066:1651,Deployability,update,updated,1651,"Implementation of the original SA and Negative SA turbulence models as well as their no-ft2 versions. ## Proposed Changes; Implementation of the original version of Spalart-Allmaras turbulence model (https://www.researchgate.net/publication/236888804_A_One-Equation_Turbulence_Model_for_Aerodynamic_Flows).; Implementation of the Spalart-Allmaras turbulence model without the ft2 term.; Implementation of the original version of Negative Spalart-Allmaras turbulence model (https://www.iccfd.org/iccfd7/assets/pdf/papers/ICCFD7-1902_paper.pdf); Implementation of the Negative Spalart-Allmaras turbulence model without the ft2 term neither modified vorticity. On the config file, choose:; SA: Original SA model; SA_NOFT2: SA model without ft2 term (the *same* model found in the develop branch); SA_NEG: Original negative SA model; SA_NEG_NOFT2: Negative SA model (the *same* model found in the develop branch). *They are not the same as in the develop branch, because I corrected a minor bug.*. Updated the template config file to be in accordance with the source code: turbulent models and OUTPUT_FILES tags. ## Related Work; This PR resolves issues #992 and #1051. ## Regression testing; Tested on tutorials:; - Turbulent Flat Plate; - RAE2822; - Turbulent ONERA M6. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1066
https://github.com/su2code/SU2/pull/1066:665,Modifiability,config,config,665,"Implementation of the original SA and Negative SA turbulence models as well as their no-ft2 versions. ## Proposed Changes; Implementation of the original version of Spalart-Allmaras turbulence model (https://www.researchgate.net/publication/236888804_A_One-Equation_Turbulence_Model_for_Aerodynamic_Flows).; Implementation of the Spalart-Allmaras turbulence model without the ft2 term.; Implementation of the original version of Negative Spalart-Allmaras turbulence model (https://www.iccfd.org/iccfd7/assets/pdf/papers/ICCFD7-1902_paper.pdf); Implementation of the Negative Spalart-Allmaras turbulence model without the ft2 term neither modified vorticity. On the config file, choose:; SA: Original SA model; SA_NOFT2: SA model without ft2 term (the *same* model found in the develop branch); SA_NEG: Original negative SA model; SA_NEG_NOFT2: Negative SA model (the *same* model found in the develop branch). *They are not the same as in the develop branch, because I corrected a minor bug.*. Updated the template config file to be in accordance with the source code: turbulent models and OUTPUT_FILES tags. ## Related Work; This PR resolves issues #992 and #1051. ## Regression testing; Tested on tutorials:; - Turbulent Flat Plate; - RAE2822; - Turbulent ONERA M6. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1066
https://github.com/su2code/SU2/pull/1066:1015,Modifiability,config,config,1015,"Implementation of the original SA and Negative SA turbulence models as well as their no-ft2 versions. ## Proposed Changes; Implementation of the original version of Spalart-Allmaras turbulence model (https://www.researchgate.net/publication/236888804_A_One-Equation_Turbulence_Model_for_Aerodynamic_Flows).; Implementation of the Spalart-Allmaras turbulence model without the ft2 term.; Implementation of the original version of Negative Spalart-Allmaras turbulence model (https://www.iccfd.org/iccfd7/assets/pdf/papers/ICCFD7-1902_paper.pdf); Implementation of the Negative Spalart-Allmaras turbulence model without the ft2 term neither modified vorticity. On the config file, choose:; SA: Original SA model; SA_NOFT2: SA model without ft2 term (the *same* model found in the develop branch); SA_NEG: Original negative SA model; SA_NEG_NOFT2: Negative SA model (the *same* model found in the develop branch). *They are not the same as in the develop branch, because I corrected a minor bug.*. Updated the template config file to be in accordance with the source code: turbulent models and OUTPUT_FILES tags. ## Related Work; This PR resolves issues #992 and #1051. ## Regression testing; Tested on tutorials:; - Turbulent Flat Plate; - RAE2822; - Turbulent ONERA M6. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1066
https://github.com/su2code/SU2/pull/1066:1180,Testability,test,testing,1180,"Implementation of the original SA and Negative SA turbulence models as well as their no-ft2 versions. ## Proposed Changes; Implementation of the original version of Spalart-Allmaras turbulence model (https://www.researchgate.net/publication/236888804_A_One-Equation_Turbulence_Model_for_Aerodynamic_Flows).; Implementation of the Spalart-Allmaras turbulence model without the ft2 term.; Implementation of the original version of Negative Spalart-Allmaras turbulence model (https://www.iccfd.org/iccfd7/assets/pdf/papers/ICCFD7-1902_paper.pdf); Implementation of the Negative Spalart-Allmaras turbulence model without the ft2 term neither modified vorticity. On the config file, choose:; SA: Original SA model; SA_NOFT2: SA model without ft2 term (the *same* model found in the develop branch); SA_NEG: Original negative SA model; SA_NEG_NOFT2: Negative SA model (the *same* model found in the develop branch). *They are not the same as in the develop branch, because I corrected a minor bug.*. Updated the template config file to be in accordance with the source code: turbulent models and OUTPUT_FILES tags. ## Related Work; This PR resolves issues #992 and #1051. ## Regression testing; Tested on tutorials:; - Turbulent Flat Plate; - RAE2822; - Turbulent ONERA M6. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1066
https://github.com/su2code/SU2/pull/1066:1189,Testability,Test,Tested,1189,"Implementation of the original SA and Negative SA turbulence models as well as their no-ft2 versions. ## Proposed Changes; Implementation of the original version of Spalart-Allmaras turbulence model (https://www.researchgate.net/publication/236888804_A_One-Equation_Turbulence_Model_for_Aerodynamic_Flows).; Implementation of the Spalart-Allmaras turbulence model without the ft2 term.; Implementation of the original version of Negative Spalart-Allmaras turbulence model (https://www.iccfd.org/iccfd7/assets/pdf/papers/ICCFD7-1902_paper.pdf); Implementation of the Negative Spalart-Allmaras turbulence model without the ft2 term neither modified vorticity. On the config file, choose:; SA: Original SA model; SA_NOFT2: SA model without ft2 term (the *same* model found in the develop branch); SA_NEG: Original negative SA model; SA_NEG_NOFT2: Negative SA model (the *same* model found in the develop branch). *They are not the same as in the develop branch, because I corrected a minor bug.*. Updated the template config file to be in accordance with the source code: turbulent models and OUTPUT_FILES tags. ## Related Work; This PR resolves issues #992 and #1051. ## Regression testing; Tested on tutorials:; - Turbulent Flat Plate; - RAE2822; - Turbulent ONERA M6. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1066
https://github.com/su2code/SU2/pull/1066:1578,Testability,test,test,1578,"Implementation of the original SA and Negative SA turbulence models as well as their no-ft2 versions. ## Proposed Changes; Implementation of the original version of Spalart-Allmaras turbulence model (https://www.researchgate.net/publication/236888804_A_One-Equation_Turbulence_Model_for_Aerodynamic_Flows).; Implementation of the Spalart-Allmaras turbulence model without the ft2 term.; Implementation of the original version of Negative Spalart-Allmaras turbulence model (https://www.iccfd.org/iccfd7/assets/pdf/papers/ICCFD7-1902_paper.pdf); Implementation of the Negative Spalart-Allmaras turbulence model without the ft2 term neither modified vorticity. On the config file, choose:; SA: Original SA model; SA_NOFT2: SA model without ft2 term (the *same* model found in the develop branch); SA_NEG: Original negative SA model; SA_NEG_NOFT2: Negative SA model (the *same* model found in the develop branch). *They are not the same as in the develop branch, because I corrected a minor bug.*. Updated the template config file to be in accordance with the source code: turbulent models and OUTPUT_FILES tags. ## Related Work; This PR resolves issues #992 and #1051. ## Regression testing; Tested on tutorials:; - Turbulent Flat Plate; - RAE2822; - Turbulent ONERA M6. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1066
https://github.com/su2code/SU2/pull/1067:513,Availability,down,down,513,"## Proposed Changes. The draft pull request has changes to fix couple of issues in the incompressible solver for rotating frame and convergence rate of unsteady problems (both with and without grid movement).; ; For the rotating frame, there was a confusion between conservative and primitive variables being used for the numerics. For the convergence rate of unsteady problems, the Jacobian contributions in the dual time residual calculations had been altered to include the preconditioner. However, this slows down the convergence from only an order of 100 iterations needed for converged solution per time step to the order of 1000 iterations. Therefore this has been reverted to regain the previous faster convergence rate and further work is necessary to understand the reason for this change. ## Related Work; PR #652 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1067
https://github.com/su2code/SU2/pull/1067:1450,Deployability,update,updated,1450,"## Proposed Changes. The draft pull request has changes to fix couple of issues in the incompressible solver for rotating frame and convergence rate of unsteady problems (both with and without grid movement).; ; For the rotating frame, there was a confusion between conservative and primitive variables being used for the numerics. For the convergence rate of unsteady problems, the Jacobian contributions in the dual time residual calculations had been altered to include the preconditioner. However, this slows down the convergence from only an order of 100 iterations needed for converged solution per time step to the order of 1000 iterations. Therefore this has been reverted to regain the previous faster convergence rate and further work is necessary to understand the reason for this change. ## Related Work; PR #652 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1067
https://github.com/su2code/SU2/pull/1067:293,Modifiability,variab,variables,293,"## Proposed Changes. The draft pull request has changes to fix couple of issues in the incompressible solver for rotating frame and convergence rate of unsteady problems (both with and without grid movement).; ; For the rotating frame, there was a confusion between conservative and primitive variables being used for the numerics. For the convergence rate of unsteady problems, the Jacobian contributions in the dual time residual calculations had been altered to include the preconditioner. However, this slows down the convergence from only an order of 100 iterations needed for converged solution per time step to the order of 1000 iterations. Therefore this has been reverted to regain the previous faster convergence rate and further work is necessary to understand the reason for this change. ## Related Work; PR #652 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1067
https://github.com/su2code/SU2/pull/1067:1377,Testability,test,test,1377,"## Proposed Changes. The draft pull request has changes to fix couple of issues in the incompressible solver for rotating frame and convergence rate of unsteady problems (both with and without grid movement).; ; For the rotating frame, there was a confusion between conservative and primitive variables being used for the numerics. For the convergence rate of unsteady problems, the Jacobian contributions in the dual time residual calculations had been altered to include the preconditioner. However, this slows down the convergence from only an order of 100 iterations needed for converged solution per time step to the order of 1000 iterations. Therefore this has been reverted to regain the previous faster convergence rate and further work is necessary to understand the reason for this change. ## Related Work; PR #652 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1067
https://github.com/su2code/SU2/pull/1067:999,Usability,guid,guide,999,"## Proposed Changes. The draft pull request has changes to fix couple of issues in the incompressible solver for rotating frame and convergence rate of unsteady problems (both with and without grid movement).; ; For the rotating frame, there was a confusion between conservative and primitive variables being used for the numerics. For the convergence rate of unsteady problems, the Jacobian contributions in the dual time residual calculations had been altered to include the preconditioner. However, this slows down the convergence from only an order of 100 iterations needed for converged solution per time step to the order of 1000 iterations. Therefore this has been reverted to regain the previous faster convergence rate and further work is necessary to understand the reason for this change. ## Related Work; PR #652 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1067
https://github.com/su2code/SU2/pull/1068:954,Deployability,update,updated,954,"## Proposed Changes; As agreed during today's developer's meeting, this PR adds a general square matrix utility to the toolboxes such that it can be used by other people. It is not used in the current source tree of the develop branch and therefore it should not have any affect on current simulations.; . ## Related Work; N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [ X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1068
https://github.com/su2code/SU2/pull/1068:881,Testability,test,test,881,"## Proposed Changes; As agreed during today's developer's meeting, this PR adds a general square matrix utility to the toolboxes such that it can be used by other people. It is not used in the current source tree of the develop branch and therefore it should not have any affect on current simulations.; . ## Related Work; N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [ X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1068
https://github.com/su2code/SU2/pull/1068:500,Usability,guid,guide,500,"## Proposed Changes; As agreed during today's developer's meeting, this PR adds a general square matrix utility to the toolboxes such that it can be used by other people. It is not used in the current source tree of the develop branch and therefore it should not have any affect on current simulations.; . ## Related Work; N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [ X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1068
https://github.com/su2code/SU2/issues/1069:580,Deployability,continuous,continuous,580,"[case728.txt](https://github.com/su2code/SU2/files/5137616/case728.txt). What does:; ```; OPT_BOUND_UPPER= 0.0001; OPT_BOUND_LOWER= -0.0001; ```; achieve?. It shows the upper and lower bounds have been read:; `Lower and upper bound for each independent variable: [(-0.0001, 0.0001), (-0.0001, 0.0001), (-0.0001, 0.0001),...`. However, the max deformation of the FFD box never satisfies this limit. I am getting way more deformations than I want. The limit is only satisfied if I specify:. `OPT_LINE_SEARCH_BOUND=0.0001`; and shown by:; ```; SU2 is fixing the planes to maintain a continuous 2nd order derivative.; Update cartesian coord | FFD box: FFD_BOX. Max Diff: 0.000340635.; Out-of-bounds, re-adjusting scale factor to safisfy line search limit.; Update cartesian coord | FFD box: FFD_BOX. Max Diff: 0.0001.; ```. What is the intended purpose of upper and lower bound options and what is the correct way to use them?. Using SU2 v6.1.0. I don't think this part of the optimization script has changed in the newer version. Config is attached.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1069
https://github.com/su2code/SU2/issues/1069:614,Deployability,Update,Update,614,"[case728.txt](https://github.com/su2code/SU2/files/5137616/case728.txt). What does:; ```; OPT_BOUND_UPPER= 0.0001; OPT_BOUND_LOWER= -0.0001; ```; achieve?. It shows the upper and lower bounds have been read:; `Lower and upper bound for each independent variable: [(-0.0001, 0.0001), (-0.0001, 0.0001), (-0.0001, 0.0001),...`. However, the max deformation of the FFD box never satisfies this limit. I am getting way more deformations than I want. The limit is only satisfied if I specify:. `OPT_LINE_SEARCH_BOUND=0.0001`; and shown by:; ```; SU2 is fixing the planes to maintain a continuous 2nd order derivative.; Update cartesian coord | FFD box: FFD_BOX. Max Diff: 0.000340635.; Out-of-bounds, re-adjusting scale factor to safisfy line search limit.; Update cartesian coord | FFD box: FFD_BOX. Max Diff: 0.0001.; ```. What is the intended purpose of upper and lower bound options and what is the correct way to use them?. Using SU2 v6.1.0. I don't think this part of the optimization script has changed in the newer version. Config is attached.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1069
https://github.com/su2code/SU2/issues/1069:753,Deployability,Update,Update,753,"[case728.txt](https://github.com/su2code/SU2/files/5137616/case728.txt). What does:; ```; OPT_BOUND_UPPER= 0.0001; OPT_BOUND_LOWER= -0.0001; ```; achieve?. It shows the upper and lower bounds have been read:; `Lower and upper bound for each independent variable: [(-0.0001, 0.0001), (-0.0001, 0.0001), (-0.0001, 0.0001),...`. However, the max deformation of the FFD box never satisfies this limit. I am getting way more deformations than I want. The limit is only satisfied if I specify:. `OPT_LINE_SEARCH_BOUND=0.0001`; and shown by:; ```; SU2 is fixing the planes to maintain a continuous 2nd order derivative.; Update cartesian coord | FFD box: FFD_BOX. Max Diff: 0.000340635.; Out-of-bounds, re-adjusting scale factor to safisfy line search limit.; Update cartesian coord | FFD box: FFD_BOX. Max Diff: 0.0001.; ```. What is the intended purpose of upper and lower bound options and what is the correct way to use them?. Using SU2 v6.1.0. I don't think this part of the optimization script has changed in the newer version. Config is attached.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1069
https://github.com/su2code/SU2/issues/1069:253,Modifiability,variab,variable,253,"[case728.txt](https://github.com/su2code/SU2/files/5137616/case728.txt). What does:; ```; OPT_BOUND_UPPER= 0.0001; OPT_BOUND_LOWER= -0.0001; ```; achieve?. It shows the upper and lower bounds have been read:; `Lower and upper bound for each independent variable: [(-0.0001, 0.0001), (-0.0001, 0.0001), (-0.0001, 0.0001),...`. However, the max deformation of the FFD box never satisfies this limit. I am getting way more deformations than I want. The limit is only satisfied if I specify:. `OPT_LINE_SEARCH_BOUND=0.0001`; and shown by:; ```; SU2 is fixing the planes to maintain a continuous 2nd order derivative.; Update cartesian coord | FFD box: FFD_BOX. Max Diff: 0.000340635.; Out-of-bounds, re-adjusting scale factor to safisfy line search limit.; Update cartesian coord | FFD box: FFD_BOX. Max Diff: 0.0001.; ```. What is the intended purpose of upper and lower bound options and what is the correct way to use them?. Using SU2 v6.1.0. I don't think this part of the optimization script has changed in the newer version. Config is attached.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1069
https://github.com/su2code/SU2/issues/1069:1027,Modifiability,Config,Config,1027,"[case728.txt](https://github.com/su2code/SU2/files/5137616/case728.txt). What does:; ```; OPT_BOUND_UPPER= 0.0001; OPT_BOUND_LOWER= -0.0001; ```; achieve?. It shows the upper and lower bounds have been read:; `Lower and upper bound for each independent variable: [(-0.0001, 0.0001), (-0.0001, 0.0001), (-0.0001, 0.0001),...`. However, the max deformation of the FFD box never satisfies this limit. I am getting way more deformations than I want. The limit is only satisfied if I specify:. `OPT_LINE_SEARCH_BOUND=0.0001`; and shown by:; ```; SU2 is fixing the planes to maintain a continuous 2nd order derivative.; Update cartesian coord | FFD box: FFD_BOX. Max Diff: 0.000340635.; Out-of-bounds, re-adjusting scale factor to safisfy line search limit.; Update cartesian coord | FFD box: FFD_BOX. Max Diff: 0.0001.; ```. What is the intended purpose of upper and lower bound options and what is the correct way to use them?. Using SU2 v6.1.0. I don't think this part of the optimization script has changed in the newer version. Config is attached.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1069
https://github.com/su2code/SU2/issues/1069:973,Performance,optimiz,optimization,973,"[case728.txt](https://github.com/su2code/SU2/files/5137616/case728.txt). What does:; ```; OPT_BOUND_UPPER= 0.0001; OPT_BOUND_LOWER= -0.0001; ```; achieve?. It shows the upper and lower bounds have been read:; `Lower and upper bound for each independent variable: [(-0.0001, 0.0001), (-0.0001, 0.0001), (-0.0001, 0.0001),...`. However, the max deformation of the FFD box never satisfies this limit. I am getting way more deformations than I want. The limit is only satisfied if I specify:. `OPT_LINE_SEARCH_BOUND=0.0001`; and shown by:; ```; SU2 is fixing the planes to maintain a continuous 2nd order derivative.; Update cartesian coord | FFD box: FFD_BOX. Max Diff: 0.000340635.; Out-of-bounds, re-adjusting scale factor to safisfy line search limit.; Update cartesian coord | FFD box: FFD_BOX. Max Diff: 0.0001.; ```. What is the intended purpose of upper and lower bound options and what is the correct way to use them?. Using SU2 v6.1.0. I don't think this part of the optimization script has changed in the newer version. Config is attached.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1069
https://github.com/su2code/SU2/pull/1070:435,Availability,avail,available,435,"## Proposed Changes; The OptimalPropeller script provides the optimal load distribution along the propeller radius using only global parameters based on the inviscid theory of optimal propeller developed by Glauert. It also provides the actuator disk data file needed in input for the ""ACTDISK_TYPE = VARIABLE_LOAD"".; This script is useful in case the user would like to use this actuator disk model, but the propeller details are not available.; In this case, using global parameters (thrust coefficient, radius, hub radius, advance ratio, free-stream velocity and blades number), it allows the use of the model.; Input: interactive.; Output: ActuatorDisk.cfg, containing part of the SU2 .cfg file; ActuatorDisk.dat, containing the propeller load distribution to be read by SU2_CFD. Contributors:; Theoretical and Applied Aerodynamic Research Group (TAARG) of University of Naples Federico II.; EttoreSaetta, lorenzorusso07, rtogna. ## Related Work; #1027 . ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1070
https://github.com/su2code/SU2/pull/1070:1342,Deployability,update,updated,1342,"## Proposed Changes; The OptimalPropeller script provides the optimal load distribution along the propeller radius using only global parameters based on the inviscid theory of optimal propeller developed by Glauert. It also provides the actuator disk data file needed in input for the ""ACTDISK_TYPE = VARIABLE_LOAD"".; This script is useful in case the user would like to use this actuator disk model, but the propeller details are not available.; In this case, using global parameters (thrust coefficient, radius, hub radius, advance ratio, free-stream velocity and blades number), it allows the use of the model.; Input: interactive.; Output: ActuatorDisk.cfg, containing part of the SU2 .cfg file; ActuatorDisk.dat, containing the propeller load distribution to be read by SU2_CFD. Contributors:; Theoretical and Applied Aerodynamic Research Group (TAARG) of University of Naples Federico II.; EttoreSaetta, lorenzorusso07, rtogna. ## Related Work; #1027 . ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1070
https://github.com/su2code/SU2/pull/1070:70,Performance,load,load,70,"## Proposed Changes; The OptimalPropeller script provides the optimal load distribution along the propeller radius using only global parameters based on the inviscid theory of optimal propeller developed by Glauert. It also provides the actuator disk data file needed in input for the ""ACTDISK_TYPE = VARIABLE_LOAD"".; This script is useful in case the user would like to use this actuator disk model, but the propeller details are not available.; In this case, using global parameters (thrust coefficient, radius, hub radius, advance ratio, free-stream velocity and blades number), it allows the use of the model.; Input: interactive.; Output: ActuatorDisk.cfg, containing part of the SU2 .cfg file; ActuatorDisk.dat, containing the propeller load distribution to be read by SU2_CFD. Contributors:; Theoretical and Applied Aerodynamic Research Group (TAARG) of University of Naples Federico II.; EttoreSaetta, lorenzorusso07, rtogna. ## Related Work; #1027 . ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1070
https://github.com/su2code/SU2/pull/1070:743,Performance,load,load,743,"## Proposed Changes; The OptimalPropeller script provides the optimal load distribution along the propeller radius using only global parameters based on the inviscid theory of optimal propeller developed by Glauert. It also provides the actuator disk data file needed in input for the ""ACTDISK_TYPE = VARIABLE_LOAD"".; This script is useful in case the user would like to use this actuator disk model, but the propeller details are not available.; In this case, using global parameters (thrust coefficient, radius, hub radius, advance ratio, free-stream velocity and blades number), it allows the use of the model.; Input: interactive.; Output: ActuatorDisk.cfg, containing part of the SU2 .cfg file; ActuatorDisk.dat, containing the propeller load distribution to be read by SU2_CFD. Contributors:; Theoretical and Applied Aerodynamic Research Group (TAARG) of University of Naples Federico II.; EttoreSaetta, lorenzorusso07, rtogna. ## Related Work; #1027 . ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1070
https://github.com/su2code/SU2/pull/1070:1269,Testability,test,test,1269,"## Proposed Changes; The OptimalPropeller script provides the optimal load distribution along the propeller radius using only global parameters based on the inviscid theory of optimal propeller developed by Glauert. It also provides the actuator disk data file needed in input for the ""ACTDISK_TYPE = VARIABLE_LOAD"".; This script is useful in case the user would like to use this actuator disk model, but the propeller details are not available.; In this case, using global parameters (thrust coefficient, radius, hub radius, advance ratio, free-stream velocity and blades number), it allows the use of the model.; Input: interactive.; Output: ActuatorDisk.cfg, containing part of the SU2 .cfg file; ActuatorDisk.dat, containing the propeller load distribution to be read by SU2_CFD. Contributors:; Theoretical and Applied Aerodynamic Research Group (TAARG) of University of Naples Federico II.; EttoreSaetta, lorenzorusso07, rtogna. ## Related Work; #1027 . ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1070
https://github.com/su2code/SU2/pull/1071:217,Availability,robust,robust,217,## Proposed Changes; I started having some issues with the meshes written by SU2_DEF over night (due to some change in the cluster file system) so I cleaned up a couple of the file writers to hopefully make them more robust.; I think what we were doing (all ranks opening the file at the same time and flushing it after each write) was a bit iffy because of implementation dependent buffering aspects. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1071
https://github.com/su2code/SU2/pull/1071:373,Integrability,depend,dependent,373,## Proposed Changes; I started having some issues with the meshes written by SU2_DEF over night (due to some change in the cluster file system) so I cleaned up a couple of the file writers to hopefully make them more robust.; I think what we were doing (all ranks opening the file at the same time and flushing it after each write) was a bit iffy because of implementation dependent buffering aspects. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1071
https://github.com/su2code/SU2/issues/1072:410,Deployability,Release,Release,410,"The SU2 version that is listed during the config process is incorrect. Output of ./configure --enable-mpi --prefix=/apps/intel-2020.2/impi-2020.2/su2-7.0.6/ CC=mpiicc CXX=mpiicpc CXXFLAGS=""-I/apps/intel-2020.2/intel-2020.2/compilers_and_libraries_2020.2.254/linux/mkl/include -g -O2 -std=c++11"". ```; -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 6.2.0 'Falcon' |; | \__ \ |_| |/ / |; | |___/\___//___| Suite |; | |; -------------------------------------------------------------------------. Build Configuration Summary:. Source code location: /tmp/jhrogers/SU2-7.0.6; Install location: 	 /apps/intel-2020.2/impi-2020.2/su2-7.0.6; Version: 6.2.0; C++ Compiler: mpiicpc; C Compiler: mpiicc. ```. OS: CentOS 7.8; Compiler/MPI: Intel 2020/impi 2020; Version: ""7.0.6"" according to the tar ball",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1072
https://github.com/su2code/SU2/issues/1072:569,Deployability,Configurat,Configuration,569,"The SU2 version that is listed during the config process is incorrect. Output of ./configure --enable-mpi --prefix=/apps/intel-2020.2/impi-2020.2/su2-7.0.6/ CC=mpiicc CXX=mpiicpc CXXFLAGS=""-I/apps/intel-2020.2/intel-2020.2/compilers_and_libraries_2020.2.254/linux/mkl/include -g -O2 -std=c++11"". ```; -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 6.2.0 'Falcon' |; | \__ \ |_| |/ / |; | |___/\___//___| Suite |; | |; -------------------------------------------------------------------------. Build Configuration Summary:. Source code location: /tmp/jhrogers/SU2-7.0.6; Install location: 	 /apps/intel-2020.2/impi-2020.2/su2-7.0.6; Version: 6.2.0; C++ Compiler: mpiicpc; C Compiler: mpiicc. ```. OS: CentOS 7.8; Compiler/MPI: Intel 2020/impi 2020; Version: ""7.0.6"" according to the tar ball",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1072
https://github.com/su2code/SU2/issues/1072:640,Deployability,Install,Install,640,"The SU2 version that is listed during the config process is incorrect. Output of ./configure --enable-mpi --prefix=/apps/intel-2020.2/impi-2020.2/su2-7.0.6/ CC=mpiicc CXX=mpiicpc CXXFLAGS=""-I/apps/intel-2020.2/intel-2020.2/compilers_and_libraries_2020.2.254/linux/mkl/include -g -O2 -std=c++11"". ```; -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 6.2.0 'Falcon' |; | \__ \ |_| |/ / |; | |___/\___//___| Suite |; | |; -------------------------------------------------------------------------. Build Configuration Summary:. Source code location: /tmp/jhrogers/SU2-7.0.6; Install location: 	 /apps/intel-2020.2/impi-2020.2/su2-7.0.6; Version: 6.2.0; C++ Compiler: mpiicpc; C Compiler: mpiicc. ```. OS: CentOS 7.8; Compiler/MPI: Intel 2020/impi 2020; Version: ""7.0.6"" according to the tar ball",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1072
https://github.com/su2code/SU2/issues/1072:42,Modifiability,config,config,42,"The SU2 version that is listed during the config process is incorrect. Output of ./configure --enable-mpi --prefix=/apps/intel-2020.2/impi-2020.2/su2-7.0.6/ CC=mpiicc CXX=mpiicpc CXXFLAGS=""-I/apps/intel-2020.2/intel-2020.2/compilers_and_libraries_2020.2.254/linux/mkl/include -g -O2 -std=c++11"". ```; -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 6.2.0 'Falcon' |; | \__ \ |_| |/ / |; | |___/\___//___| Suite |; | |; -------------------------------------------------------------------------. Build Configuration Summary:. Source code location: /tmp/jhrogers/SU2-7.0.6; Install location: 	 /apps/intel-2020.2/impi-2020.2/su2-7.0.6; Version: 6.2.0; C++ Compiler: mpiicpc; C Compiler: mpiicc. ```. OS: CentOS 7.8; Compiler/MPI: Intel 2020/impi 2020; Version: ""7.0.6"" according to the tar ball",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1072
https://github.com/su2code/SU2/issues/1072:83,Modifiability,config,configure,83,"The SU2 version that is listed during the config process is incorrect. Output of ./configure --enable-mpi --prefix=/apps/intel-2020.2/impi-2020.2/su2-7.0.6/ CC=mpiicc CXX=mpiicpc CXXFLAGS=""-I/apps/intel-2020.2/intel-2020.2/compilers_and_libraries_2020.2.254/linux/mkl/include -g -O2 -std=c++11"". ```; -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 6.2.0 'Falcon' |; | \__ \ |_| |/ / |; | |___/\___//___| Suite |; | |; -------------------------------------------------------------------------. Build Configuration Summary:. Source code location: /tmp/jhrogers/SU2-7.0.6; Install location: 	 /apps/intel-2020.2/impi-2020.2/su2-7.0.6; Version: 6.2.0; C++ Compiler: mpiicpc; C Compiler: mpiicc. ```. OS: CentOS 7.8; Compiler/MPI: Intel 2020/impi 2020; Version: ""7.0.6"" according to the tar ball",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1072
https://github.com/su2code/SU2/issues/1072:569,Modifiability,Config,Configuration,569,"The SU2 version that is listed during the config process is incorrect. Output of ./configure --enable-mpi --prefix=/apps/intel-2020.2/impi-2020.2/su2-7.0.6/ CC=mpiicc CXX=mpiicpc CXXFLAGS=""-I/apps/intel-2020.2/intel-2020.2/compilers_and_libraries_2020.2.254/linux/mkl/include -g -O2 -std=c++11"". ```; -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 6.2.0 'Falcon' |; | \__ \ |_| |/ / |; | |___/\___//___| Suite |; | |; -------------------------------------------------------------------------. Build Configuration Summary:. Source code location: /tmp/jhrogers/SU2-7.0.6; Install location: 	 /apps/intel-2020.2/impi-2020.2/su2-7.0.6; Version: 6.2.0; C++ Compiler: mpiicpc; C Compiler: mpiicc. ```. OS: CentOS 7.8; Compiler/MPI: Intel 2020/impi 2020; Version: ""7.0.6"" according to the tar ball",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1072
https://github.com/su2code/SU2/pull/1074:803,Deployability,update,updated,803,"## Proposed Changes; This fix resolves a problem related to mismatched gradients between the forward and reverse mode of AD when considering EFFICIENCY as the objective function. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1074
https://github.com/su2code/SU2/pull/1074:730,Testability,test,test,730,"## Proposed Changes; This fix resolves a problem related to mismatched gradients between the forward and reverse mode of AD when considering EFFICIENCY as the objective function. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1074
https://github.com/su2code/SU2/pull/1074:351,Usability,guid,guide,351,"## Proposed Changes; This fix resolves a problem related to mismatched gradients between the forward and reverse mode of AD when considering EFFICIENCY as the objective function. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1074
https://github.com/su2code/SU2/issues/1075:351,Availability,error,error,351,"The objective functions SURFACE_STATIC_PRESSURE and SURFACE_TOTAL_PRESSURE do not work with the shape_optimization.py script. . This has been verified by running the python optimization using the test case ""multiobjective_wedge"" in the optimization_euler test case folder, using the provided script (""inv_wedge_ROE_multiobj.cfg""). I get the following error: . >Traceback (most recent call last):; File ""/usr/local/bin/shape_optimization.py"", line 183, in <module>; main(); File ""/usr/local/bin/shape_optimization.py"", line 98, in main; options.nzones ); File ""/usr/local/bin/shape_optimization.py"", line 155, in shape_optimization; project = SU2.opt.Project(config,state); File ""/usr/local/bin/SU2/opt/project.py"", line 129, in __init__; group = historyOutFields[this_obj]['GROUP']; KeyError: 'SURFACE_TOTAL_PRESSURE'. The same happens if setting these keywords for the constraints. My environment:. OpenSuse Leap 15.1; Python 3.6.10; gcc 7.5.0; OpenMPI 1.10.7; SU2 v7.0.6",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1075
https://github.com/su2code/SU2/issues/1075:658,Modifiability,config,config,658,"The objective functions SURFACE_STATIC_PRESSURE and SURFACE_TOTAL_PRESSURE do not work with the shape_optimization.py script. . This has been verified by running the python optimization using the test case ""multiobjective_wedge"" in the optimization_euler test case folder, using the provided script (""inv_wedge_ROE_multiobj.cfg""). I get the following error: . >Traceback (most recent call last):; File ""/usr/local/bin/shape_optimization.py"", line 183, in <module>; main(); File ""/usr/local/bin/shape_optimization.py"", line 98, in main; options.nzones ); File ""/usr/local/bin/shape_optimization.py"", line 155, in shape_optimization; project = SU2.opt.Project(config,state); File ""/usr/local/bin/SU2/opt/project.py"", line 129, in __init__; group = historyOutFields[this_obj]['GROUP']; KeyError: 'SURFACE_TOTAL_PRESSURE'. The same happens if setting these keywords for the constraints. My environment:. OpenSuse Leap 15.1; Python 3.6.10; gcc 7.5.0; OpenMPI 1.10.7; SU2 v7.0.6",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1075
https://github.com/su2code/SU2/issues/1075:173,Performance,optimiz,optimization,173,"The objective functions SURFACE_STATIC_PRESSURE and SURFACE_TOTAL_PRESSURE do not work with the shape_optimization.py script. . This has been verified by running the python optimization using the test case ""multiobjective_wedge"" in the optimization_euler test case folder, using the provided script (""inv_wedge_ROE_multiobj.cfg""). I get the following error: . >Traceback (most recent call last):; File ""/usr/local/bin/shape_optimization.py"", line 183, in <module>; main(); File ""/usr/local/bin/shape_optimization.py"", line 98, in main; options.nzones ); File ""/usr/local/bin/shape_optimization.py"", line 155, in shape_optimization; project = SU2.opt.Project(config,state); File ""/usr/local/bin/SU2/opt/project.py"", line 129, in __init__; group = historyOutFields[this_obj]['GROUP']; KeyError: 'SURFACE_TOTAL_PRESSURE'. The same happens if setting these keywords for the constraints. My environment:. OpenSuse Leap 15.1; Python 3.6.10; gcc 7.5.0; OpenMPI 1.10.7; SU2 v7.0.6",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1075
https://github.com/su2code/SU2/issues/1075:196,Testability,test,test,196,"The objective functions SURFACE_STATIC_PRESSURE and SURFACE_TOTAL_PRESSURE do not work with the shape_optimization.py script. . This has been verified by running the python optimization using the test case ""multiobjective_wedge"" in the optimization_euler test case folder, using the provided script (""inv_wedge_ROE_multiobj.cfg""). I get the following error: . >Traceback (most recent call last):; File ""/usr/local/bin/shape_optimization.py"", line 183, in <module>; main(); File ""/usr/local/bin/shape_optimization.py"", line 98, in main; options.nzones ); File ""/usr/local/bin/shape_optimization.py"", line 155, in shape_optimization; project = SU2.opt.Project(config,state); File ""/usr/local/bin/SU2/opt/project.py"", line 129, in __init__; group = historyOutFields[this_obj]['GROUP']; KeyError: 'SURFACE_TOTAL_PRESSURE'. The same happens if setting these keywords for the constraints. My environment:. OpenSuse Leap 15.1; Python 3.6.10; gcc 7.5.0; OpenMPI 1.10.7; SU2 v7.0.6",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1075
https://github.com/su2code/SU2/issues/1075:255,Testability,test,test,255,"The objective functions SURFACE_STATIC_PRESSURE and SURFACE_TOTAL_PRESSURE do not work with the shape_optimization.py script. . This has been verified by running the python optimization using the test case ""multiobjective_wedge"" in the optimization_euler test case folder, using the provided script (""inv_wedge_ROE_multiobj.cfg""). I get the following error: . >Traceback (most recent call last):; File ""/usr/local/bin/shape_optimization.py"", line 183, in <module>; main(); File ""/usr/local/bin/shape_optimization.py"", line 98, in main; options.nzones ); File ""/usr/local/bin/shape_optimization.py"", line 155, in shape_optimization; project = SU2.opt.Project(config,state); File ""/usr/local/bin/SU2/opt/project.py"", line 129, in __init__; group = historyOutFields[this_obj]['GROUP']; KeyError: 'SURFACE_TOTAL_PRESSURE'. The same happens if setting these keywords for the constraints. My environment:. OpenSuse Leap 15.1; Python 3.6.10; gcc 7.5.0; OpenMPI 1.10.7; SU2 v7.0.6",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1075
https://github.com/su2code/SU2/pull/1076:1098,Deployability,update,updated,1098,"## Proposed Changes; After surface deformation, the surface points are checked for self-intersection within the FFD box. If that is the case, a recursive procedure is done to prevent those. After grid deformation, all elements are checked on convexity. If there are nonconvex elements, a procedure is started that starts from the undeformed mesh and recursively changes the deformation magnitude until no nonconvex elements are present. ## Related Work; None that I know of. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. - With respect to the test case: this can be used with virtually any case that has deformation. If the scale in OPT_OBJECTIVE is set to a high enough value, the deformation will be so big that intersections will occur.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1076
https://github.com/su2code/SU2/pull/1076:1025,Testability,test,test,1025,"## Proposed Changes; After surface deformation, the surface points are checked for self-intersection within the FFD box. If that is the case, a recursive procedure is done to prevent those. After grid deformation, all elements are checked on convexity. If there are nonconvex elements, a procedure is started that starts from the undeformed mesh and recursively changes the deformation magnitude until no nonconvex elements are present. ## Related Work; None that I know of. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. - With respect to the test case: this can be used with virtually any case that has deformation. If the scale in OPT_OBJECTIVE is set to a high enough value, the deformation will be so big that intersections will occur.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1076
https://github.com/su2code/SU2/pull/1076:1214,Testability,test,test,1214,"## Proposed Changes; After surface deformation, the surface points are checked for self-intersection within the FFD box. If that is the case, a recursive procedure is done to prevent those. After grid deformation, all elements are checked on convexity. If there are nonconvex elements, a procedure is started that starts from the undeformed mesh and recursively changes the deformation magnitude until no nonconvex elements are present. ## Related Work; None that I know of. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. - With respect to the test case: this can be used with virtually any case that has deformation. If the scale in OPT_OBJECTIVE is set to a high enough value, the deformation will be so big that intersections will occur.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1076
https://github.com/su2code/SU2/pull/1076:647,Usability,guid,guide,647,"## Proposed Changes; After surface deformation, the surface points are checked for self-intersection within the FFD box. If that is the case, a recursive procedure is done to prevent those. After grid deformation, all elements are checked on convexity. If there are nonconvex elements, a procedure is started that starts from the undeformed mesh and recursively changes the deformation magnitude until no nonconvex elements are present. ## Related Work; None that I know of. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. - With respect to the test case: this can be used with virtually any case that has deformation. If the scale in OPT_OBJECTIVE is set to a high enough value, the deformation will be so big that intersections will occur.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1076
https://github.com/su2code/SU2/pull/1077:900,Deployability,update,updated,900,"## Proposed Changes; This PR contains fixes for two memory issues. - The first issue regards AD builds. The reinterpret cast of the dynamically allocated char array to an `su2double` array prevents `su2double` default constructor calls. In that case, the memory must be zero initialized in order for the AD index management to work correctly.; - Regarding the second issue, invalid reads occur when the pointers to the local arrays are used later in `CConfig::SetDefaults()` when the arrays are already out of scope. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1077
https://github.com/su2code/SU2/pull/1077:144,Energy Efficiency,allocate,allocated,144,"## Proposed Changes; This PR contains fixes for two memory issues. - The first issue regards AD builds. The reinterpret cast of the dynamically allocated char array to an `su2double` array prevents `su2double` default constructor calls. In that case, the memory must be zero initialized in order for the AD index management to work correctly.; - Regarding the second issue, invalid reads occur when the pointers to the local arrays are used later in `CConfig::SetDefaults()` when the arrays are already out of scope. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1077
https://github.com/su2code/SU2/pull/1077:827,Testability,test,test,827,"## Proposed Changes; This PR contains fixes for two memory issues. - The first issue regards AD builds. The reinterpret cast of the dynamically allocated char array to an `su2double` array prevents `su2double` default constructor calls. In that case, the memory must be zero initialized in order for the AD index management to work correctly.; - Regarding the second issue, invalid reads occur when the pointers to the local arrays are used later in `CConfig::SetDefaults()` when the arrays are already out of scope. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1077
https://github.com/su2code/SU2/pull/1078:346,Availability,down,down,346,THIS IS A PR TO feature_NEMO. No impact on develop. This pull requests adds preprocessing to the NEMO NS solver and commonpreprocessing functionality seen in develop. Some functions have been extended to deal with eddy viscosity. Regression tests are passing. If the community finds having internal pull request distracting/cluttering I can take down.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1078
https://github.com/su2code/SU2/pull/1078:192,Modifiability,extend,extended,192,THIS IS A PR TO feature_NEMO. No impact on develop. This pull requests adds preprocessing to the NEMO NS solver and commonpreprocessing functionality seen in develop. Some functions have been extended to deal with eddy viscosity. Regression tests are passing. If the community finds having internal pull request distracting/cluttering I can take down.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1078
https://github.com/su2code/SU2/pull/1078:241,Testability,test,tests,241,THIS IS A PR TO feature_NEMO. No impact on develop. This pull requests adds preprocessing to the NEMO NS solver and commonpreprocessing functionality seen in develop. Some functions have been extended to deal with eddy viscosity. Regression tests are passing. If the community finds having internal pull request distracting/cluttering I can take down.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1078
https://github.com/su2code/SU2/issues/1083:178,Deployability,configurat,configuration,178,"Describe the bug; I use SU2-v6.2.0 to optimize a wing. But it seems the SU2_DEF does not change the mesh in accord with the surface sensitivity. Is there something wrong with my configuration file? ; The surface sensitivity I got is here:; ![ed8f67ba4ad091367ee775b7e40408c](https://user-images.githubusercontent.com/55584189/95045704-2c11be00-0715-11eb-97a4-307f2dd0623d.png). The deformation is here:; ![45c257b8f11f820fa5be17e276ae65e](https://user-images.githubusercontent.com/55584189/95045842-6f6c2c80-0715-11eb-80ce-5ad26339217b.png). My configure is here:; [wing_op-200929.cfg.txt](https://github.com/su2code/SU2/files/5325585/wing_op-200929.cfg.txt). **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*. **Desktop (please complete the following information):**; - OS: [e.g., Linux (Redhat 6.6)]; - C++ compiler and version: [e.g., g++ (GCC) 4.8.5]; - MPI implementation and version: [e.g., OpenMPI 3.0.0]; - SU2 Version: [e.g., v6.2.0]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1083
https://github.com/su2code/SU2/issues/1083:178,Modifiability,config,configuration,178,"Describe the bug; I use SU2-v6.2.0 to optimize a wing. But it seems the SU2_DEF does not change the mesh in accord with the surface sensitivity. Is there something wrong with my configuration file? ; The surface sensitivity I got is here:; ![ed8f67ba4ad091367ee775b7e40408c](https://user-images.githubusercontent.com/55584189/95045704-2c11be00-0715-11eb-97a4-307f2dd0623d.png). The deformation is here:; ![45c257b8f11f820fa5be17e276ae65e](https://user-images.githubusercontent.com/55584189/95045842-6f6c2c80-0715-11eb-80ce-5ad26339217b.png). My configure is here:; [wing_op-200929.cfg.txt](https://github.com/su2code/SU2/files/5325585/wing_op-200929.cfg.txt). **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*. **Desktop (please complete the following information):**; - OS: [e.g., Linux (Redhat 6.6)]; - C++ compiler and version: [e.g., g++ (GCC) 4.8.5]; - MPI implementation and version: [e.g., OpenMPI 3.0.0]; - SU2 Version: [e.g., v6.2.0]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1083
https://github.com/su2code/SU2/issues/1083:545,Modifiability,config,configure,545,"Describe the bug; I use SU2-v6.2.0 to optimize a wing. But it seems the SU2_DEF does not change the mesh in accord with the surface sensitivity. Is there something wrong with my configuration file? ; The surface sensitivity I got is here:; ![ed8f67ba4ad091367ee775b7e40408c](https://user-images.githubusercontent.com/55584189/95045704-2c11be00-0715-11eb-97a4-307f2dd0623d.png). The deformation is here:; ![45c257b8f11f820fa5be17e276ae65e](https://user-images.githubusercontent.com/55584189/95045842-6f6c2c80-0715-11eb-80ce-5ad26339217b.png). My configure is here:; [wing_op-200929.cfg.txt](https://github.com/su2code/SU2/files/5325585/wing_op-200929.cfg.txt). **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*. **Desktop (please complete the following information):**; - OS: [e.g., Linux (Redhat 6.6)]; - C++ compiler and version: [e.g., g++ (GCC) 4.8.5]; - MPI implementation and version: [e.g., OpenMPI 3.0.0]; - SU2 Version: [e.g., v6.2.0]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1083
https://github.com/su2code/SU2/issues/1083:696,Modifiability,config,config,696,"Describe the bug; I use SU2-v6.2.0 to optimize a wing. But it seems the SU2_DEF does not change the mesh in accord with the surface sensitivity. Is there something wrong with my configuration file? ; The surface sensitivity I got is here:; ![ed8f67ba4ad091367ee775b7e40408c](https://user-images.githubusercontent.com/55584189/95045704-2c11be00-0715-11eb-97a4-307f2dd0623d.png). The deformation is here:; ![45c257b8f11f820fa5be17e276ae65e](https://user-images.githubusercontent.com/55584189/95045842-6f6c2c80-0715-11eb-80ce-5ad26339217b.png). My configure is here:; [wing_op-200929.cfg.txt](https://github.com/su2code/SU2/files/5325585/wing_op-200929.cfg.txt). **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*. **Desktop (please complete the following information):**; - OS: [e.g., Linux (Redhat 6.6)]; - C++ compiler and version: [e.g., g++ (GCC) 4.8.5]; - MPI implementation and version: [e.g., OpenMPI 3.0.0]; - SU2 Version: [e.g., v6.2.0]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1083
https://github.com/su2code/SU2/issues/1083:38,Performance,optimiz,optimize,38,"Describe the bug; I use SU2-v6.2.0 to optimize a wing. But it seems the SU2_DEF does not change the mesh in accord with the surface sensitivity. Is there something wrong with my configuration file? ; The surface sensitivity I got is here:; ![ed8f67ba4ad091367ee775b7e40408c](https://user-images.githubusercontent.com/55584189/95045704-2c11be00-0715-11eb-97a4-307f2dd0623d.png). The deformation is here:; ![45c257b8f11f820fa5be17e276ae65e](https://user-images.githubusercontent.com/55584189/95045842-6f6c2c80-0715-11eb-80ce-5ad26339217b.png). My configure is here:; [wing_op-200929.cfg.txt](https://github.com/su2code/SU2/files/5325585/wing_op-200929.cfg.txt). **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*. **Desktop (please complete the following information):**; - OS: [e.g., Linux (Redhat 6.6)]; - C++ compiler and version: [e.g., g++ (GCC) 4.8.5]; - MPI implementation and version: [e.g., OpenMPI 3.0.0]; - SU2 Version: [e.g., v6.2.0]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1083
https://github.com/su2code/SU2/pull/1085:865,Deployability,update,updated,865,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1085
https://github.com/su2code/SU2/pull/1085:792,Testability,test,test,792,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1085
https://github.com/su2code/SU2/pull/1085:414,Usability,guid,guide,414,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1085
https://github.com/su2code/SU2/issues/1086:31,Availability,error,error,31,"**Describe the bug**; I met an error while running the test case [centrifugal blade](https://github.com/su2code/SU2/tree/master/TestCases/turbomachinery/centrifugal_blade) which gives. ```; Error in ""void CConfig::SetConfig_Parsing(std::istream&)"": ; -------------------------------------------------------------------------; Line 139 MARKER_NRBC: invalid option name. Check current SU2 options in config_template.cfg.; Line 141 MIXING_PROCESS_TYPE: invalid option name. Check current SU2 options in config_template.cfg.; Line 155 MARKER_TURBO_PERFORMANCE: invalid option name. Check current SU2 options in config_template.cfg.; GRID_MOVEMENT: invalid option value YES. Check current SU2 options in config_template.cfg.; Line 172 GRID_MOVEMENT_KIND: invalid option name. Check current SU2 options in config_template.cfg.; Line 178 ROTATION_RATE_X: invalid option name. Check current SU2 options in config_template.cfg.; Line 178 ROTATION_RATE_Y: invalid option name. Check current SU2 options in config_template.cfg.; Line 178 ROTATION_RATE_Z: invalid option name. Check current SU2 options in config_template.cfg.; ```. **To Reproduce**; Another case that gives me the same problem is the [centrifugal stage](https://github.com/su2code/SU2/tree/master/TestCases/turbomachinery/centrifugal_stage) test case. **Desktop (please complete the following information):**; - OS: [Linux (Ubuntut 16.04 LTS)]; - C++ compiler and version: [g++ (Ubuntu 5.4.0-6ubuntu1~16.04.12) 5.4.0]; - SU2 Version: [v7]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1086
https://github.com/su2code/SU2/issues/1086:190,Availability,Error,Error,190,"**Describe the bug**; I met an error while running the test case [centrifugal blade](https://github.com/su2code/SU2/tree/master/TestCases/turbomachinery/centrifugal_blade) which gives. ```; Error in ""void CConfig::SetConfig_Parsing(std::istream&)"": ; -------------------------------------------------------------------------; Line 139 MARKER_NRBC: invalid option name. Check current SU2 options in config_template.cfg.; Line 141 MIXING_PROCESS_TYPE: invalid option name. Check current SU2 options in config_template.cfg.; Line 155 MARKER_TURBO_PERFORMANCE: invalid option name. Check current SU2 options in config_template.cfg.; GRID_MOVEMENT: invalid option value YES. Check current SU2 options in config_template.cfg.; Line 172 GRID_MOVEMENT_KIND: invalid option name. Check current SU2 options in config_template.cfg.; Line 178 ROTATION_RATE_X: invalid option name. Check current SU2 options in config_template.cfg.; Line 178 ROTATION_RATE_Y: invalid option name. Check current SU2 options in config_template.cfg.; Line 178 ROTATION_RATE_Z: invalid option name. Check current SU2 options in config_template.cfg.; ```. **To Reproduce**; Another case that gives me the same problem is the [centrifugal stage](https://github.com/su2code/SU2/tree/master/TestCases/turbomachinery/centrifugal_stage) test case. **Desktop (please complete the following information):**; - OS: [Linux (Ubuntut 16.04 LTS)]; - C++ compiler and version: [g++ (Ubuntu 5.4.0-6ubuntu1~16.04.12) 5.4.0]; - SU2 Version: [v7]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1086
https://github.com/su2code/SU2/issues/1086:55,Testability,test,test,55,"**Describe the bug**; I met an error while running the test case [centrifugal blade](https://github.com/su2code/SU2/tree/master/TestCases/turbomachinery/centrifugal_blade) which gives. ```; Error in ""void CConfig::SetConfig_Parsing(std::istream&)"": ; -------------------------------------------------------------------------; Line 139 MARKER_NRBC: invalid option name. Check current SU2 options in config_template.cfg.; Line 141 MIXING_PROCESS_TYPE: invalid option name. Check current SU2 options in config_template.cfg.; Line 155 MARKER_TURBO_PERFORMANCE: invalid option name. Check current SU2 options in config_template.cfg.; GRID_MOVEMENT: invalid option value YES. Check current SU2 options in config_template.cfg.; Line 172 GRID_MOVEMENT_KIND: invalid option name. Check current SU2 options in config_template.cfg.; Line 178 ROTATION_RATE_X: invalid option name. Check current SU2 options in config_template.cfg.; Line 178 ROTATION_RATE_Y: invalid option name. Check current SU2 options in config_template.cfg.; Line 178 ROTATION_RATE_Z: invalid option name. Check current SU2 options in config_template.cfg.; ```. **To Reproduce**; Another case that gives me the same problem is the [centrifugal stage](https://github.com/su2code/SU2/tree/master/TestCases/turbomachinery/centrifugal_stage) test case. **Desktop (please complete the following information):**; - OS: [Linux (Ubuntut 16.04 LTS)]; - C++ compiler and version: [g++ (Ubuntu 5.4.0-6ubuntu1~16.04.12) 5.4.0]; - SU2 Version: [v7]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1086
https://github.com/su2code/SU2/issues/1086:128,Testability,Test,TestCases,128,"**Describe the bug**; I met an error while running the test case [centrifugal blade](https://github.com/su2code/SU2/tree/master/TestCases/turbomachinery/centrifugal_blade) which gives. ```; Error in ""void CConfig::SetConfig_Parsing(std::istream&)"": ; -------------------------------------------------------------------------; Line 139 MARKER_NRBC: invalid option name. Check current SU2 options in config_template.cfg.; Line 141 MIXING_PROCESS_TYPE: invalid option name. Check current SU2 options in config_template.cfg.; Line 155 MARKER_TURBO_PERFORMANCE: invalid option name. Check current SU2 options in config_template.cfg.; GRID_MOVEMENT: invalid option value YES. Check current SU2 options in config_template.cfg.; Line 172 GRID_MOVEMENT_KIND: invalid option name. Check current SU2 options in config_template.cfg.; Line 178 ROTATION_RATE_X: invalid option name. Check current SU2 options in config_template.cfg.; Line 178 ROTATION_RATE_Y: invalid option name. Check current SU2 options in config_template.cfg.; Line 178 ROTATION_RATE_Z: invalid option name. Check current SU2 options in config_template.cfg.; ```. **To Reproduce**; Another case that gives me the same problem is the [centrifugal stage](https://github.com/su2code/SU2/tree/master/TestCases/turbomachinery/centrifugal_stage) test case. **Desktop (please complete the following information):**; - OS: [Linux (Ubuntut 16.04 LTS)]; - C++ compiler and version: [g++ (Ubuntu 5.4.0-6ubuntu1~16.04.12) 5.4.0]; - SU2 Version: [v7]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1086
https://github.com/su2code/SU2/issues/1086:1253,Testability,Test,TestCases,1253,"**Describe the bug**; I met an error while running the test case [centrifugal blade](https://github.com/su2code/SU2/tree/master/TestCases/turbomachinery/centrifugal_blade) which gives. ```; Error in ""void CConfig::SetConfig_Parsing(std::istream&)"": ; -------------------------------------------------------------------------; Line 139 MARKER_NRBC: invalid option name. Check current SU2 options in config_template.cfg.; Line 141 MIXING_PROCESS_TYPE: invalid option name. Check current SU2 options in config_template.cfg.; Line 155 MARKER_TURBO_PERFORMANCE: invalid option name. Check current SU2 options in config_template.cfg.; GRID_MOVEMENT: invalid option value YES. Check current SU2 options in config_template.cfg.; Line 172 GRID_MOVEMENT_KIND: invalid option name. Check current SU2 options in config_template.cfg.; Line 178 ROTATION_RATE_X: invalid option name. Check current SU2 options in config_template.cfg.; Line 178 ROTATION_RATE_Y: invalid option name. Check current SU2 options in config_template.cfg.; Line 178 ROTATION_RATE_Z: invalid option name. Check current SU2 options in config_template.cfg.; ```. **To Reproduce**; Another case that gives me the same problem is the [centrifugal stage](https://github.com/su2code/SU2/tree/master/TestCases/turbomachinery/centrifugal_stage) test case. **Desktop (please complete the following information):**; - OS: [Linux (Ubuntut 16.04 LTS)]; - C++ compiler and version: [g++ (Ubuntu 5.4.0-6ubuntu1~16.04.12) 5.4.0]; - SU2 Version: [v7]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1086
https://github.com/su2code/SU2/issues/1086:1297,Testability,test,test,1297,"**Describe the bug**; I met an error while running the test case [centrifugal blade](https://github.com/su2code/SU2/tree/master/TestCases/turbomachinery/centrifugal_blade) which gives. ```; Error in ""void CConfig::SetConfig_Parsing(std::istream&)"": ; -------------------------------------------------------------------------; Line 139 MARKER_NRBC: invalid option name. Check current SU2 options in config_template.cfg.; Line 141 MIXING_PROCESS_TYPE: invalid option name. Check current SU2 options in config_template.cfg.; Line 155 MARKER_TURBO_PERFORMANCE: invalid option name. Check current SU2 options in config_template.cfg.; GRID_MOVEMENT: invalid option value YES. Check current SU2 options in config_template.cfg.; Line 172 GRID_MOVEMENT_KIND: invalid option name. Check current SU2 options in config_template.cfg.; Line 178 ROTATION_RATE_X: invalid option name. Check current SU2 options in config_template.cfg.; Line 178 ROTATION_RATE_Y: invalid option name. Check current SU2 options in config_template.cfg.; Line 178 ROTATION_RATE_Z: invalid option name. Check current SU2 options in config_template.cfg.; ```. **To Reproduce**; Another case that gives me the same problem is the [centrifugal stage](https://github.com/su2code/SU2/tree/master/TestCases/turbomachinery/centrifugal_stage) test case. **Desktop (please complete the following information):**; - OS: [Linux (Ubuntut 16.04 LTS)]; - C++ compiler and version: [g++ (Ubuntu 5.4.0-6ubuntu1~16.04.12) 5.4.0]; - SU2 Version: [v7]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1086
https://github.com/su2code/SU2/issues/1087:212,Integrability,rout,routine,212,"**Is your feature request related to a problem? Please describe.**; When building the AD version of SU2 with the Intel compiler a lot of warnings are given. Most of these warnings are of the type. warning #2196: routine is both ""inline"" and ""noinline"". The files where the warnings come from are; externals/codi/include/codi/tapes/modules/tapeBaseModule.hpp; externals/codi/include/codi/tapes/chunkVector.hpp; externals/codi/include/codi/tools/data/jacobian.hpp. The total number of warnings is roughly 3000, so any other information is very difficult to pick up. **Describe the solution you'd like**; Remove either the inline or noline, if possible. **Describe alternatives you've considered**; We can ignore the warning, if you think it is not a relevant one. However, I cannot judge that. **Additional context**; I can provide more information, e.g. the entire log file of the build process.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1087
https://github.com/su2code/SU2/issues/1087:864,Testability,log,log,864,"**Is your feature request related to a problem? Please describe.**; When building the AD version of SU2 with the Intel compiler a lot of warnings are given. Most of these warnings are of the type. warning #2196: routine is both ""inline"" and ""noinline"". The files where the warnings come from are; externals/codi/include/codi/tapes/modules/tapeBaseModule.hpp; externals/codi/include/codi/tapes/chunkVector.hpp; externals/codi/include/codi/tools/data/jacobian.hpp. The total number of warnings is roughly 3000, so any other information is very difficult to pick up. **Describe the solution you'd like**; Remove either the inline or noline, if possible. **Describe alternatives you've considered**; We can ignore the warning, if you think it is not a relevant one. However, I cannot judge that. **Additional context**; I can provide more information, e.g. the entire log file of the build process.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1087
https://github.com/su2code/SU2/issues/1088:283,Availability,error,errors,283,"Hi guys,. we used bootstrap to get the new autoconf tools and build the configure file. For compilation we use . 1) intel-studio-2019.5 2) mpi/intelmpi/2019.5.281 . There was a problem with an openmp flag which was not set (-qopenmp for intel). After fixing this we are getting this errors:. ```; ""../src/toolboxes/CSymmetricMatrix.cpp(220): error: identifier ""d"" is undefined; dpotrf_(&uplo, &sz, mat.data(), &sz, &info);; ^. ../src/toolboxes/CSymmetricMatrix.cpp(220): error: identifier ""MKL_DC_POTRF_CONVERT"" is undefined; dpotrf_(&uplo, &sz, mat.data(), &sz, &info);; ^; ```. compilation aborted for ../src/toolboxes/CSymmetricMatrix.cpp (code 2); make[1]: *** [../src/toolboxes/libSU2_a-CSymmetricMatrix.o] Error 2"". This part is an . #ifdef part of the codefile. After changing to HAS_LAPACK to HAS_LAPACK_WILL_NEVER_BE_FOUND_1234. the code continus compiling. . Maybe this is an intel specific problem, but it may be a problem for a some users. We don't know if the software work properly without the line 220 of CSymmetricMatrix.cpp. . Kind regards",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1088
https://github.com/su2code/SU2/issues/1088:342,Availability,error,error,342,"Hi guys,. we used bootstrap to get the new autoconf tools and build the configure file. For compilation we use . 1) intel-studio-2019.5 2) mpi/intelmpi/2019.5.281 . There was a problem with an openmp flag which was not set (-qopenmp for intel). After fixing this we are getting this errors:. ```; ""../src/toolboxes/CSymmetricMatrix.cpp(220): error: identifier ""d"" is undefined; dpotrf_(&uplo, &sz, mat.data(), &sz, &info);; ^. ../src/toolboxes/CSymmetricMatrix.cpp(220): error: identifier ""MKL_DC_POTRF_CONVERT"" is undefined; dpotrf_(&uplo, &sz, mat.data(), &sz, &info);; ^; ```. compilation aborted for ../src/toolboxes/CSymmetricMatrix.cpp (code 2); make[1]: *** [../src/toolboxes/libSU2_a-CSymmetricMatrix.o] Error 2"". This part is an . #ifdef part of the codefile. After changing to HAS_LAPACK to HAS_LAPACK_WILL_NEVER_BE_FOUND_1234. the code continus compiling. . Maybe this is an intel specific problem, but it may be a problem for a some users. We don't know if the software work properly without the line 220 of CSymmetricMatrix.cpp. . Kind regards",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1088
https://github.com/su2code/SU2/issues/1088:471,Availability,error,error,471,"Hi guys,. we used bootstrap to get the new autoconf tools and build the configure file. For compilation we use . 1) intel-studio-2019.5 2) mpi/intelmpi/2019.5.281 . There was a problem with an openmp flag which was not set (-qopenmp for intel). After fixing this we are getting this errors:. ```; ""../src/toolboxes/CSymmetricMatrix.cpp(220): error: identifier ""d"" is undefined; dpotrf_(&uplo, &sz, mat.data(), &sz, &info);; ^. ../src/toolboxes/CSymmetricMatrix.cpp(220): error: identifier ""MKL_DC_POTRF_CONVERT"" is undefined; dpotrf_(&uplo, &sz, mat.data(), &sz, &info);; ^; ```. compilation aborted for ../src/toolboxes/CSymmetricMatrix.cpp (code 2); make[1]: *** [../src/toolboxes/libSU2_a-CSymmetricMatrix.o] Error 2"". This part is an . #ifdef part of the codefile. After changing to HAS_LAPACK to HAS_LAPACK_WILL_NEVER_BE_FOUND_1234. the code continus compiling. . Maybe this is an intel specific problem, but it may be a problem for a some users. We don't know if the software work properly without the line 220 of CSymmetricMatrix.cpp. . Kind regards",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1088
https://github.com/su2code/SU2/issues/1088:712,Availability,Error,Error,712,"Hi guys,. we used bootstrap to get the new autoconf tools and build the configure file. For compilation we use . 1) intel-studio-2019.5 2) mpi/intelmpi/2019.5.281 . There was a problem with an openmp flag which was not set (-qopenmp for intel). After fixing this we are getting this errors:. ```; ""../src/toolboxes/CSymmetricMatrix.cpp(220): error: identifier ""d"" is undefined; dpotrf_(&uplo, &sz, mat.data(), &sz, &info);; ^. ../src/toolboxes/CSymmetricMatrix.cpp(220): error: identifier ""MKL_DC_POTRF_CONVERT"" is undefined; dpotrf_(&uplo, &sz, mat.data(), &sz, &info);; ^; ```. compilation aborted for ../src/toolboxes/CSymmetricMatrix.cpp (code 2); make[1]: *** [../src/toolboxes/libSU2_a-CSymmetricMatrix.o] Error 2"". This part is an . #ifdef part of the codefile. After changing to HAS_LAPACK to HAS_LAPACK_WILL_NEVER_BE_FOUND_1234. the code continus compiling. . Maybe this is an intel specific problem, but it may be a problem for a some users. We don't know if the software work properly without the line 220 of CSymmetricMatrix.cpp. . Kind regards",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1088
https://github.com/su2code/SU2/issues/1088:72,Modifiability,config,configure,72,"Hi guys,. we used bootstrap to get the new autoconf tools and build the configure file. For compilation we use . 1) intel-studio-2019.5 2) mpi/intelmpi/2019.5.281 . There was a problem with an openmp flag which was not set (-qopenmp for intel). After fixing this we are getting this errors:. ```; ""../src/toolboxes/CSymmetricMatrix.cpp(220): error: identifier ""d"" is undefined; dpotrf_(&uplo, &sz, mat.data(), &sz, &info);; ^. ../src/toolboxes/CSymmetricMatrix.cpp(220): error: identifier ""MKL_DC_POTRF_CONVERT"" is undefined; dpotrf_(&uplo, &sz, mat.data(), &sz, &info);; ^; ```. compilation aborted for ../src/toolboxes/CSymmetricMatrix.cpp (code 2); make[1]: *** [../src/toolboxes/libSU2_a-CSymmetricMatrix.o] Error 2"". This part is an . #ifdef part of the codefile. After changing to HAS_LAPACK to HAS_LAPACK_WILL_NEVER_BE_FOUND_1234. the code continus compiling. . Maybe this is an intel specific problem, but it may be a problem for a some users. We don't know if the software work properly without the line 220 of CSymmetricMatrix.cpp. . Kind regards",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1088
https://github.com/su2code/SU2/issues/1088:592,Safety,abort,aborted,592,"Hi guys,. we used bootstrap to get the new autoconf tools and build the configure file. For compilation we use . 1) intel-studio-2019.5 2) mpi/intelmpi/2019.5.281 . There was a problem with an openmp flag which was not set (-qopenmp for intel). After fixing this we are getting this errors:. ```; ""../src/toolboxes/CSymmetricMatrix.cpp(220): error: identifier ""d"" is undefined; dpotrf_(&uplo, &sz, mat.data(), &sz, &info);; ^. ../src/toolboxes/CSymmetricMatrix.cpp(220): error: identifier ""MKL_DC_POTRF_CONVERT"" is undefined; dpotrf_(&uplo, &sz, mat.data(), &sz, &info);; ^; ```. compilation aborted for ../src/toolboxes/CSymmetricMatrix.cpp (code 2); make[1]: *** [../src/toolboxes/libSU2_a-CSymmetricMatrix.o] Error 2"". This part is an . #ifdef part of the codefile. After changing to HAS_LAPACK to HAS_LAPACK_WILL_NEVER_BE_FOUND_1234. the code continus compiling. . Maybe this is an intel specific problem, but it may be a problem for a some users. We don't know if the software work properly without the line 220 of CSymmetricMatrix.cpp. . Kind regards",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1088
https://github.com/su2code/SU2/issues/1089:1479,Availability,Error,Error,1479,"After work around the Matrix 220 bug, . there is a problem with mpi. It is simply not found. Still using Intel 2019.5 with intel mpi 2019.5. ```; make[1]: Entering directory `/cluster/software/su2/SU2/SU2_CFD/obj'; CXXLD ../bin/SU2_CFD; ../src/___bin_SU2_CFD-SU2_CFD.o: In function `main':; SU2_CFD.cpp:(.text+0xa49): undefined reference to `MPI_Init_thread'; SU2_CFD.cpp:(.text+0xa5f): undefined reference to `MPI_Comm_rank'; SU2_CFD.cpp:(.text+0xa6e): undefined reference to `MPI_Comm_size'; SU2_CFD.cpp:(.text+0xab6): undefined reference to `MPI_Win_create'. ```; ```; SZLFEPartitionedZoneWriterMPI.cpp:(.text+0x583a): undefined reference to `MPI_Gather'; ../../externals/tecio/teciompisrc/libteciompi.a(libteciompi_a-SZLOrderedPartitionedZoneWriterMPI.o): In function `tecplot::teciompi::SZLOrderedPartitionedZoneWriterMPI::SZLOrderedPartitionedZoneWriterMPI(tecplot::___3933::ItemSetIterator&, int, int, std::vector<char, std::allocator<char> > const&, char, tecplot::___3933::___37&, tecplot::___3933::ZoneInfoCache&, int, int)':; SZLOrderedPartitionedZoneWriterMPI.cpp:(.text+0x22f): undefined reference to `MPI_Comm_rank'; ../../externals/tecio/teciompisrc/libteciompi.a(libteciompi_a-SZLOrderedPartitionedZoneWriterMPI.o): In function `tecplot::teciompi::SZLOrderedPartitionedZoneWriterMPI::writeZoneData(tecplot::___3933::FileWriterInterface&)':; SZLOrderedPartitionedZoneWriterMPI.cpp:(.text+0xa732): undefined reference to `MPI_Gather'; make[1]: *** [../bin/SU2_CFD] Error 1; make[1]: Leaving directory `/cluster/software/su2/SU2/SU2_CFD/obj'; ```; ```; ```",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1089
https://github.com/su2code/SU2/issues/1089:75,Usability,simpl,simply,75,"After work around the Matrix 220 bug, . there is a problem with mpi. It is simply not found. Still using Intel 2019.5 with intel mpi 2019.5. ```; make[1]: Entering directory `/cluster/software/su2/SU2/SU2_CFD/obj'; CXXLD ../bin/SU2_CFD; ../src/___bin_SU2_CFD-SU2_CFD.o: In function `main':; SU2_CFD.cpp:(.text+0xa49): undefined reference to `MPI_Init_thread'; SU2_CFD.cpp:(.text+0xa5f): undefined reference to `MPI_Comm_rank'; SU2_CFD.cpp:(.text+0xa6e): undefined reference to `MPI_Comm_size'; SU2_CFD.cpp:(.text+0xab6): undefined reference to `MPI_Win_create'. ```; ```; SZLFEPartitionedZoneWriterMPI.cpp:(.text+0x583a): undefined reference to `MPI_Gather'; ../../externals/tecio/teciompisrc/libteciompi.a(libteciompi_a-SZLOrderedPartitionedZoneWriterMPI.o): In function `tecplot::teciompi::SZLOrderedPartitionedZoneWriterMPI::SZLOrderedPartitionedZoneWriterMPI(tecplot::___3933::ItemSetIterator&, int, int, std::vector<char, std::allocator<char> > const&, char, tecplot::___3933::___37&, tecplot::___3933::ZoneInfoCache&, int, int)':; SZLOrderedPartitionedZoneWriterMPI.cpp:(.text+0x22f): undefined reference to `MPI_Comm_rank'; ../../externals/tecio/teciompisrc/libteciompi.a(libteciompi_a-SZLOrderedPartitionedZoneWriterMPI.o): In function `tecplot::teciompi::SZLOrderedPartitionedZoneWriterMPI::writeZoneData(tecplot::___3933::FileWriterInterface&)':; SZLOrderedPartitionedZoneWriterMPI.cpp:(.text+0xa732): undefined reference to `MPI_Gather'; make[1]: *** [../bin/SU2_CFD] Error 1; make[1]: Leaving directory `/cluster/software/su2/SU2/SU2_CFD/obj'; ```; ```; ```",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1089
https://github.com/su2code/SU2/issues/1090:521,Deployability,update,updated,521,"**Describe the bug**; There is some issue with having two sets of intersecting periodic boundary conditions. I was attempting to simulate plane channel flow (Poiseuille) between two infinite plates with SU2 v. 7.0.7 using RANS, but the results are not correct. Specifically, I see a lot of garbage in the corners, where the periodic BCs intersect (see pictures). ![corner_problems](https://user-images.githubusercontent.com/6933834/95637061-a5771c80-0a45-11eb-80d9-9e81affa0c89.png). I thought that periodic BCs had been updated and working, and that having multiple periodic BCs was not an issue. Is this not the case, or have I done something wrong?. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*; (See attached). **Desktop (please complete the following information):**; - OS: Arch Linux - Linux Kernel 5.8.14; - C++ compiler and version: GCC 10.2.0; - MPI implementation and version: Open MPI 4.0.5; - SU2 Version: 7.0.7 - branch: develop - commit: e9c824cd70. [channel_bug_files.tar.gz](https://github.com/su2code/SU2/files/5357906/channel_bug_files.tar.gz)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1090
https://github.com/su2code/SU2/issues/1090:689,Modifiability,config,config,689,"**Describe the bug**; There is some issue with having two sets of intersecting periodic boundary conditions. I was attempting to simulate plane channel flow (Poiseuille) between two infinite plates with SU2 v. 7.0.7 using RANS, but the results are not correct. Specifically, I see a lot of garbage in the corners, where the periodic BCs intersect (see pictures). ![corner_problems](https://user-images.githubusercontent.com/6933834/95637061-a5771c80-0a45-11eb-80d9-9e81affa0c89.png). I thought that periodic BCs had been updated and working, and that having multiple periodic BCs was not an issue. Is this not the case, or have I done something wrong?. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*; (See attached). **Desktop (please complete the following information):**; - OS: Arch Linux - Linux Kernel 5.8.14; - C++ compiler and version: GCC 10.2.0; - MPI implementation and version: Open MPI 4.0.5; - SU2 Version: 7.0.7 - branch: develop - commit: e9c824cd70. [channel_bug_files.tar.gz](https://github.com/su2code/SU2/files/5357906/channel_bug_files.tar.gz)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1090
https://github.com/su2code/SU2/pull/1092:1034,Deployability,update,updated,1034,"## Proposed Changes; Fixed all the compiler warnings in SU2 itself when using -Wpedantic for GNU and some warnings of the tecio library. The only remaining warnings using -Wpedantic now come from the tecio library and are of the type -Wmisleading-indentation and -Wclass-memaccess, the latter coming from the calls to memcpy. However, I think it is up to Tecplot to resolve those ones.; . ## Related Work; N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1092
https://github.com/su2code/SU2/pull/1092:961,Testability,test,test,961,"## Proposed Changes; Fixed all the compiler warnings in SU2 itself when using -Wpedantic for GNU and some warnings of the tecio library. The only remaining warnings using -Wpedantic now come from the tecio library and are of the type -Wmisleading-indentation and -Wclass-memaccess, the latter coming from the calls to memcpy. However, I think it is up to Tecplot to resolve those ones.; . ## Related Work; N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1092
https://github.com/su2code/SU2/pull/1092:583,Usability,guid,guide,583,"## Proposed Changes; Fixed all the compiler warnings in SU2 itself when using -Wpedantic for GNU and some warnings of the tecio library. The only remaining warnings using -Wpedantic now come from the tecio library and are of the type -Wmisleading-indentation and -Wclass-memaccess, the latter coming from the calls to memcpy. However, I think it is up to Tecplot to resolve those ones.; . ## Related Work; N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1092
https://github.com/su2code/SU2/issues/1093:163,Availability,error,error,163,"Dear all,. I have tried to install/compile the source code on Windows 10 by following literally the instructions on the documentation page but I got the following error also reported in the attached document:. OSError: [WinError 123] La sintassi del nome del file, della directory o del volume non è corretta: 'C:\\MINGW_W64\\mingw_w64\\posix\\mingw64\\bin\\..\\lib\\gcc\\x86_64-w64-mingw32\\8.1.0\\libC:\\MICROSOFT_SDKs\\MPI\\Lib\\x64\\msmpi.a'. [error.txt](https://github.com/su2code/SU2/files/5379915/error.txt); ; Can you help me to fix it?; Thanks,",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1093
https://github.com/su2code/SU2/issues/1093:448,Availability,error,error,448,"Dear all,. I have tried to install/compile the source code on Windows 10 by following literally the instructions on the documentation page but I got the following error also reported in the attached document:. OSError: [WinError 123] La sintassi del nome del file, della directory o del volume non è corretta: 'C:\\MINGW_W64\\mingw_w64\\posix\\mingw64\\bin\\..\\lib\\gcc\\x86_64-w64-mingw32\\8.1.0\\libC:\\MICROSOFT_SDKs\\MPI\\Lib\\x64\\msmpi.a'. [error.txt](https://github.com/su2code/SU2/files/5379915/error.txt); ; Can you help me to fix it?; Thanks,",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1093
https://github.com/su2code/SU2/issues/1093:504,Availability,error,error,504,"Dear all,. I have tried to install/compile the source code on Windows 10 by following literally the instructions on the documentation page but I got the following error also reported in the attached document:. OSError: [WinError 123] La sintassi del nome del file, della directory o del volume non è corretta: 'C:\\MINGW_W64\\mingw_w64\\posix\\mingw64\\bin\\..\\lib\\gcc\\x86_64-w64-mingw32\\8.1.0\\libC:\\MICROSOFT_SDKs\\MPI\\Lib\\x64\\msmpi.a'. [error.txt](https://github.com/su2code/SU2/files/5379915/error.txt); ; Can you help me to fix it?; Thanks,",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1093
https://github.com/su2code/SU2/issues/1093:27,Deployability,install,install,27,"Dear all,. I have tried to install/compile the source code on Windows 10 by following literally the instructions on the documentation page but I got the following error also reported in the attached document:. OSError: [WinError 123] La sintassi del nome del file, della directory o del volume non è corretta: 'C:\\MINGW_W64\\mingw_w64\\posix\\mingw64\\bin\\..\\lib\\gcc\\x86_64-w64-mingw32\\8.1.0\\libC:\\MICROSOFT_SDKs\\MPI\\Lib\\x64\\msmpi.a'. [error.txt](https://github.com/su2code/SU2/files/5379915/error.txt); ; Can you help me to fix it?; Thanks,",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1093
https://github.com/su2code/SU2/issues/1094:221,Availability,error,error,221,"1.	While running in parallel a Fluid Structure Interaction case in SU2 for square cylinder with beam using the following command: **/usr/local/bin/parallel_computation.py -f config.cfg -n 12**; I am getting the following error: ; //; ('Unexpected error: ', <type 'exceptions.KeyError'>); Traceback (most recent call last):; File ""/usr/local/bin/parallel_computation.py"", line 110, in <module>; main(); File ""/usr/local/bin/parallel_computation.py"", line 57, in main; options.compute ); File ""/usr/local/bin/parallel_computation.py"", line 71, in parallel_computation; config = SU2.io.Config(filename); File ""/usr/local/bin/SU2/io/config.py"", line 93, in __init__; self.read(filename); File ""/usr/local/bin/SU2/io/config.py"", line 142, in read; konfig = read_config(filename); File ""/usr/local/bin/SU2/io/config.py"", line 784, in read_config; Mesh_Filename = data_dict['MESH_FILENAME']; KeyError: 'MESH_FILENAME'; //. 2.	It is running fine in serial using the command : *SU2_CFD config.cfg** . I have also tried with mpirun. ; 3.	Execution command: **mpirun -n 12 /usr/local/bin/SU2_CFD config.cfg** . the simulation is running but I guess parallel execution is not done properly because it is showing the following error: . [DESKTOP-8N08ELC:00100] 11 more processes have sent help message help-btl-vader.txt / cma-permission-denied; [DESKTOP-8N08ELC:00100] Set MCA parameter ""orte_base_help_aggregate"" to 0 to see all help / error messages. Kindly let me know how to resolve the issue. . OS : ubuntu 18.04 ; C++ version : GCC 7.3.0; MPI implementation and version : mpirun (Open MPI) 2.1.1; SU2 version: 7.6.0",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1094
https://github.com/su2code/SU2/issues/1094:247,Availability,error,error,247,"1.	While running in parallel a Fluid Structure Interaction case in SU2 for square cylinder with beam using the following command: **/usr/local/bin/parallel_computation.py -f config.cfg -n 12**; I am getting the following error: ; //; ('Unexpected error: ', <type 'exceptions.KeyError'>); Traceback (most recent call last):; File ""/usr/local/bin/parallel_computation.py"", line 110, in <module>; main(); File ""/usr/local/bin/parallel_computation.py"", line 57, in main; options.compute ); File ""/usr/local/bin/parallel_computation.py"", line 71, in parallel_computation; config = SU2.io.Config(filename); File ""/usr/local/bin/SU2/io/config.py"", line 93, in __init__; self.read(filename); File ""/usr/local/bin/SU2/io/config.py"", line 142, in read; konfig = read_config(filename); File ""/usr/local/bin/SU2/io/config.py"", line 784, in read_config; Mesh_Filename = data_dict['MESH_FILENAME']; KeyError: 'MESH_FILENAME'; //. 2.	It is running fine in serial using the command : *SU2_CFD config.cfg** . I have also tried with mpirun. ; 3.	Execution command: **mpirun -n 12 /usr/local/bin/SU2_CFD config.cfg** . the simulation is running but I guess parallel execution is not done properly because it is showing the following error: . [DESKTOP-8N08ELC:00100] 11 more processes have sent help message help-btl-vader.txt / cma-permission-denied; [DESKTOP-8N08ELC:00100] Set MCA parameter ""orte_base_help_aggregate"" to 0 to see all help / error messages. Kindly let me know how to resolve the issue. . OS : ubuntu 18.04 ; C++ version : GCC 7.3.0; MPI implementation and version : mpirun (Open MPI) 2.1.1; SU2 version: 7.6.0",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1094
https://github.com/su2code/SU2/issues/1094:1214,Availability,error,error,1214,"1.	While running in parallel a Fluid Structure Interaction case in SU2 for square cylinder with beam using the following command: **/usr/local/bin/parallel_computation.py -f config.cfg -n 12**; I am getting the following error: ; //; ('Unexpected error: ', <type 'exceptions.KeyError'>); Traceback (most recent call last):; File ""/usr/local/bin/parallel_computation.py"", line 110, in <module>; main(); File ""/usr/local/bin/parallel_computation.py"", line 57, in main; options.compute ); File ""/usr/local/bin/parallel_computation.py"", line 71, in parallel_computation; config = SU2.io.Config(filename); File ""/usr/local/bin/SU2/io/config.py"", line 93, in __init__; self.read(filename); File ""/usr/local/bin/SU2/io/config.py"", line 142, in read; konfig = read_config(filename); File ""/usr/local/bin/SU2/io/config.py"", line 784, in read_config; Mesh_Filename = data_dict['MESH_FILENAME']; KeyError: 'MESH_FILENAME'; //. 2.	It is running fine in serial using the command : *SU2_CFD config.cfg** . I have also tried with mpirun. ; 3.	Execution command: **mpirun -n 12 /usr/local/bin/SU2_CFD config.cfg** . the simulation is running but I guess parallel execution is not done properly because it is showing the following error: . [DESKTOP-8N08ELC:00100] 11 more processes have sent help message help-btl-vader.txt / cma-permission-denied; [DESKTOP-8N08ELC:00100] Set MCA parameter ""orte_base_help_aggregate"" to 0 to see all help / error messages. Kindly let me know how to resolve the issue. . OS : ubuntu 18.04 ; C++ version : GCC 7.3.0; MPI implementation and version : mpirun (Open MPI) 2.1.1; SU2 version: 7.6.0",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1094
https://github.com/su2code/SU2/issues/1094:1424,Availability,error,error,1424,"1.	While running in parallel a Fluid Structure Interaction case in SU2 for square cylinder with beam using the following command: **/usr/local/bin/parallel_computation.py -f config.cfg -n 12**; I am getting the following error: ; //; ('Unexpected error: ', <type 'exceptions.KeyError'>); Traceback (most recent call last):; File ""/usr/local/bin/parallel_computation.py"", line 110, in <module>; main(); File ""/usr/local/bin/parallel_computation.py"", line 57, in main; options.compute ); File ""/usr/local/bin/parallel_computation.py"", line 71, in parallel_computation; config = SU2.io.Config(filename); File ""/usr/local/bin/SU2/io/config.py"", line 93, in __init__; self.read(filename); File ""/usr/local/bin/SU2/io/config.py"", line 142, in read; konfig = read_config(filename); File ""/usr/local/bin/SU2/io/config.py"", line 784, in read_config; Mesh_Filename = data_dict['MESH_FILENAME']; KeyError: 'MESH_FILENAME'; //. 2.	It is running fine in serial using the command : *SU2_CFD config.cfg** . I have also tried with mpirun. ; 3.	Execution command: **mpirun -n 12 /usr/local/bin/SU2_CFD config.cfg** . the simulation is running but I guess parallel execution is not done properly because it is showing the following error: . [DESKTOP-8N08ELC:00100] 11 more processes have sent help message help-btl-vader.txt / cma-permission-denied; [DESKTOP-8N08ELC:00100] Set MCA parameter ""orte_base_help_aggregate"" to 0 to see all help / error messages. Kindly let me know how to resolve the issue. . OS : ubuntu 18.04 ; C++ version : GCC 7.3.0; MPI implementation and version : mpirun (Open MPI) 2.1.1; SU2 version: 7.6.0",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1094
https://github.com/su2code/SU2/issues/1094:1280,Integrability,message,message,1280,"1.	While running in parallel a Fluid Structure Interaction case in SU2 for square cylinder with beam using the following command: **/usr/local/bin/parallel_computation.py -f config.cfg -n 12**; I am getting the following error: ; //; ('Unexpected error: ', <type 'exceptions.KeyError'>); Traceback (most recent call last):; File ""/usr/local/bin/parallel_computation.py"", line 110, in <module>; main(); File ""/usr/local/bin/parallel_computation.py"", line 57, in main; options.compute ); File ""/usr/local/bin/parallel_computation.py"", line 71, in parallel_computation; config = SU2.io.Config(filename); File ""/usr/local/bin/SU2/io/config.py"", line 93, in __init__; self.read(filename); File ""/usr/local/bin/SU2/io/config.py"", line 142, in read; konfig = read_config(filename); File ""/usr/local/bin/SU2/io/config.py"", line 784, in read_config; Mesh_Filename = data_dict['MESH_FILENAME']; KeyError: 'MESH_FILENAME'; //. 2.	It is running fine in serial using the command : *SU2_CFD config.cfg** . I have also tried with mpirun. ; 3.	Execution command: **mpirun -n 12 /usr/local/bin/SU2_CFD config.cfg** . the simulation is running but I guess parallel execution is not done properly because it is showing the following error: . [DESKTOP-8N08ELC:00100] 11 more processes have sent help message help-btl-vader.txt / cma-permission-denied; [DESKTOP-8N08ELC:00100] Set MCA parameter ""orte_base_help_aggregate"" to 0 to see all help / error messages. Kindly let me know how to resolve the issue. . OS : ubuntu 18.04 ; C++ version : GCC 7.3.0; MPI implementation and version : mpirun (Open MPI) 2.1.1; SU2 version: 7.6.0",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1094
https://github.com/su2code/SU2/issues/1094:1430,Integrability,message,messages,1430,"1.	While running in parallel a Fluid Structure Interaction case in SU2 for square cylinder with beam using the following command: **/usr/local/bin/parallel_computation.py -f config.cfg -n 12**; I am getting the following error: ; //; ('Unexpected error: ', <type 'exceptions.KeyError'>); Traceback (most recent call last):; File ""/usr/local/bin/parallel_computation.py"", line 110, in <module>; main(); File ""/usr/local/bin/parallel_computation.py"", line 57, in main; options.compute ); File ""/usr/local/bin/parallel_computation.py"", line 71, in parallel_computation; config = SU2.io.Config(filename); File ""/usr/local/bin/SU2/io/config.py"", line 93, in __init__; self.read(filename); File ""/usr/local/bin/SU2/io/config.py"", line 142, in read; konfig = read_config(filename); File ""/usr/local/bin/SU2/io/config.py"", line 784, in read_config; Mesh_Filename = data_dict['MESH_FILENAME']; KeyError: 'MESH_FILENAME'; //. 2.	It is running fine in serial using the command : *SU2_CFD config.cfg** . I have also tried with mpirun. ; 3.	Execution command: **mpirun -n 12 /usr/local/bin/SU2_CFD config.cfg** . the simulation is running but I guess parallel execution is not done properly because it is showing the following error: . [DESKTOP-8N08ELC:00100] 11 more processes have sent help message help-btl-vader.txt / cma-permission-denied; [DESKTOP-8N08ELC:00100] Set MCA parameter ""orte_base_help_aggregate"" to 0 to see all help / error messages. Kindly let me know how to resolve the issue. . OS : ubuntu 18.04 ; C++ version : GCC 7.3.0; MPI implementation and version : mpirun (Open MPI) 2.1.1; SU2 version: 7.6.0",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1094
https://github.com/su2code/SU2/issues/1094:174,Modifiability,config,config,174,"1.	While running in parallel a Fluid Structure Interaction case in SU2 for square cylinder with beam using the following command: **/usr/local/bin/parallel_computation.py -f config.cfg -n 12**; I am getting the following error: ; //; ('Unexpected error: ', <type 'exceptions.KeyError'>); Traceback (most recent call last):; File ""/usr/local/bin/parallel_computation.py"", line 110, in <module>; main(); File ""/usr/local/bin/parallel_computation.py"", line 57, in main; options.compute ); File ""/usr/local/bin/parallel_computation.py"", line 71, in parallel_computation; config = SU2.io.Config(filename); File ""/usr/local/bin/SU2/io/config.py"", line 93, in __init__; self.read(filename); File ""/usr/local/bin/SU2/io/config.py"", line 142, in read; konfig = read_config(filename); File ""/usr/local/bin/SU2/io/config.py"", line 784, in read_config; Mesh_Filename = data_dict['MESH_FILENAME']; KeyError: 'MESH_FILENAME'; //. 2.	It is running fine in serial using the command : *SU2_CFD config.cfg** . I have also tried with mpirun. ; 3.	Execution command: **mpirun -n 12 /usr/local/bin/SU2_CFD config.cfg** . the simulation is running but I guess parallel execution is not done properly because it is showing the following error: . [DESKTOP-8N08ELC:00100] 11 more processes have sent help message help-btl-vader.txt / cma-permission-denied; [DESKTOP-8N08ELC:00100] Set MCA parameter ""orte_base_help_aggregate"" to 0 to see all help / error messages. Kindly let me know how to resolve the issue. . OS : ubuntu 18.04 ; C++ version : GCC 7.3.0; MPI implementation and version : mpirun (Open MPI) 2.1.1; SU2 version: 7.6.0",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1094
https://github.com/su2code/SU2/issues/1094:567,Modifiability,config,config,567,"1.	While running in parallel a Fluid Structure Interaction case in SU2 for square cylinder with beam using the following command: **/usr/local/bin/parallel_computation.py -f config.cfg -n 12**; I am getting the following error: ; //; ('Unexpected error: ', <type 'exceptions.KeyError'>); Traceback (most recent call last):; File ""/usr/local/bin/parallel_computation.py"", line 110, in <module>; main(); File ""/usr/local/bin/parallel_computation.py"", line 57, in main; options.compute ); File ""/usr/local/bin/parallel_computation.py"", line 71, in parallel_computation; config = SU2.io.Config(filename); File ""/usr/local/bin/SU2/io/config.py"", line 93, in __init__; self.read(filename); File ""/usr/local/bin/SU2/io/config.py"", line 142, in read; konfig = read_config(filename); File ""/usr/local/bin/SU2/io/config.py"", line 784, in read_config; Mesh_Filename = data_dict['MESH_FILENAME']; KeyError: 'MESH_FILENAME'; //. 2.	It is running fine in serial using the command : *SU2_CFD config.cfg** . I have also tried with mpirun. ; 3.	Execution command: **mpirun -n 12 /usr/local/bin/SU2_CFD config.cfg** . the simulation is running but I guess parallel execution is not done properly because it is showing the following error: . [DESKTOP-8N08ELC:00100] 11 more processes have sent help message help-btl-vader.txt / cma-permission-denied; [DESKTOP-8N08ELC:00100] Set MCA parameter ""orte_base_help_aggregate"" to 0 to see all help / error messages. Kindly let me know how to resolve the issue. . OS : ubuntu 18.04 ; C++ version : GCC 7.3.0; MPI implementation and version : mpirun (Open MPI) 2.1.1; SU2 version: 7.6.0",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1094
https://github.com/su2code/SU2/issues/1094:583,Modifiability,Config,Config,583,"1.	While running in parallel a Fluid Structure Interaction case in SU2 for square cylinder with beam using the following command: **/usr/local/bin/parallel_computation.py -f config.cfg -n 12**; I am getting the following error: ; //; ('Unexpected error: ', <type 'exceptions.KeyError'>); Traceback (most recent call last):; File ""/usr/local/bin/parallel_computation.py"", line 110, in <module>; main(); File ""/usr/local/bin/parallel_computation.py"", line 57, in main; options.compute ); File ""/usr/local/bin/parallel_computation.py"", line 71, in parallel_computation; config = SU2.io.Config(filename); File ""/usr/local/bin/SU2/io/config.py"", line 93, in __init__; self.read(filename); File ""/usr/local/bin/SU2/io/config.py"", line 142, in read; konfig = read_config(filename); File ""/usr/local/bin/SU2/io/config.py"", line 784, in read_config; Mesh_Filename = data_dict['MESH_FILENAME']; KeyError: 'MESH_FILENAME'; //. 2.	It is running fine in serial using the command : *SU2_CFD config.cfg** . I have also tried with mpirun. ; 3.	Execution command: **mpirun -n 12 /usr/local/bin/SU2_CFD config.cfg** . the simulation is running but I guess parallel execution is not done properly because it is showing the following error: . [DESKTOP-8N08ELC:00100] 11 more processes have sent help message help-btl-vader.txt / cma-permission-denied; [DESKTOP-8N08ELC:00100] Set MCA parameter ""orte_base_help_aggregate"" to 0 to see all help / error messages. Kindly let me know how to resolve the issue. . OS : ubuntu 18.04 ; C++ version : GCC 7.3.0; MPI implementation and version : mpirun (Open MPI) 2.1.1; SU2 version: 7.6.0",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1094
https://github.com/su2code/SU2/issues/1094:629,Modifiability,config,config,629,"1.	While running in parallel a Fluid Structure Interaction case in SU2 for square cylinder with beam using the following command: **/usr/local/bin/parallel_computation.py -f config.cfg -n 12**; I am getting the following error: ; //; ('Unexpected error: ', <type 'exceptions.KeyError'>); Traceback (most recent call last):; File ""/usr/local/bin/parallel_computation.py"", line 110, in <module>; main(); File ""/usr/local/bin/parallel_computation.py"", line 57, in main; options.compute ); File ""/usr/local/bin/parallel_computation.py"", line 71, in parallel_computation; config = SU2.io.Config(filename); File ""/usr/local/bin/SU2/io/config.py"", line 93, in __init__; self.read(filename); File ""/usr/local/bin/SU2/io/config.py"", line 142, in read; konfig = read_config(filename); File ""/usr/local/bin/SU2/io/config.py"", line 784, in read_config; Mesh_Filename = data_dict['MESH_FILENAME']; KeyError: 'MESH_FILENAME'; //. 2.	It is running fine in serial using the command : *SU2_CFD config.cfg** . I have also tried with mpirun. ; 3.	Execution command: **mpirun -n 12 /usr/local/bin/SU2_CFD config.cfg** . the simulation is running but I guess parallel execution is not done properly because it is showing the following error: . [DESKTOP-8N08ELC:00100] 11 more processes have sent help message help-btl-vader.txt / cma-permission-denied; [DESKTOP-8N08ELC:00100] Set MCA parameter ""orte_base_help_aggregate"" to 0 to see all help / error messages. Kindly let me know how to resolve the issue. . OS : ubuntu 18.04 ; C++ version : GCC 7.3.0; MPI implementation and version : mpirun (Open MPI) 2.1.1; SU2 version: 7.6.0",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1094
https://github.com/su2code/SU2/issues/1094:712,Modifiability,config,config,712,"1.	While running in parallel a Fluid Structure Interaction case in SU2 for square cylinder with beam using the following command: **/usr/local/bin/parallel_computation.py -f config.cfg -n 12**; I am getting the following error: ; //; ('Unexpected error: ', <type 'exceptions.KeyError'>); Traceback (most recent call last):; File ""/usr/local/bin/parallel_computation.py"", line 110, in <module>; main(); File ""/usr/local/bin/parallel_computation.py"", line 57, in main; options.compute ); File ""/usr/local/bin/parallel_computation.py"", line 71, in parallel_computation; config = SU2.io.Config(filename); File ""/usr/local/bin/SU2/io/config.py"", line 93, in __init__; self.read(filename); File ""/usr/local/bin/SU2/io/config.py"", line 142, in read; konfig = read_config(filename); File ""/usr/local/bin/SU2/io/config.py"", line 784, in read_config; Mesh_Filename = data_dict['MESH_FILENAME']; KeyError: 'MESH_FILENAME'; //. 2.	It is running fine in serial using the command : *SU2_CFD config.cfg** . I have also tried with mpirun. ; 3.	Execution command: **mpirun -n 12 /usr/local/bin/SU2_CFD config.cfg** . the simulation is running but I guess parallel execution is not done properly because it is showing the following error: . [DESKTOP-8N08ELC:00100] 11 more processes have sent help message help-btl-vader.txt / cma-permission-denied; [DESKTOP-8N08ELC:00100] Set MCA parameter ""orte_base_help_aggregate"" to 0 to see all help / error messages. Kindly let me know how to resolve the issue. . OS : ubuntu 18.04 ; C++ version : GCC 7.3.0; MPI implementation and version : mpirun (Open MPI) 2.1.1; SU2 version: 7.6.0",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1094
https://github.com/su2code/SU2/issues/1094:803,Modifiability,config,config,803,"1.	While running in parallel a Fluid Structure Interaction case in SU2 for square cylinder with beam using the following command: **/usr/local/bin/parallel_computation.py -f config.cfg -n 12**; I am getting the following error: ; //; ('Unexpected error: ', <type 'exceptions.KeyError'>); Traceback (most recent call last):; File ""/usr/local/bin/parallel_computation.py"", line 110, in <module>; main(); File ""/usr/local/bin/parallel_computation.py"", line 57, in main; options.compute ); File ""/usr/local/bin/parallel_computation.py"", line 71, in parallel_computation; config = SU2.io.Config(filename); File ""/usr/local/bin/SU2/io/config.py"", line 93, in __init__; self.read(filename); File ""/usr/local/bin/SU2/io/config.py"", line 142, in read; konfig = read_config(filename); File ""/usr/local/bin/SU2/io/config.py"", line 784, in read_config; Mesh_Filename = data_dict['MESH_FILENAME']; KeyError: 'MESH_FILENAME'; //. 2.	It is running fine in serial using the command : *SU2_CFD config.cfg** . I have also tried with mpirun. ; 3.	Execution command: **mpirun -n 12 /usr/local/bin/SU2_CFD config.cfg** . the simulation is running but I guess parallel execution is not done properly because it is showing the following error: . [DESKTOP-8N08ELC:00100] 11 more processes have sent help message help-btl-vader.txt / cma-permission-denied; [DESKTOP-8N08ELC:00100] Set MCA parameter ""orte_base_help_aggregate"" to 0 to see all help / error messages. Kindly let me know how to resolve the issue. . OS : ubuntu 18.04 ; C++ version : GCC 7.3.0; MPI implementation and version : mpirun (Open MPI) 2.1.1; SU2 version: 7.6.0",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1094
https://github.com/su2code/SU2/issues/1094:977,Modifiability,config,config,977,"1.	While running in parallel a Fluid Structure Interaction case in SU2 for square cylinder with beam using the following command: **/usr/local/bin/parallel_computation.py -f config.cfg -n 12**; I am getting the following error: ; //; ('Unexpected error: ', <type 'exceptions.KeyError'>); Traceback (most recent call last):; File ""/usr/local/bin/parallel_computation.py"", line 110, in <module>; main(); File ""/usr/local/bin/parallel_computation.py"", line 57, in main; options.compute ); File ""/usr/local/bin/parallel_computation.py"", line 71, in parallel_computation; config = SU2.io.Config(filename); File ""/usr/local/bin/SU2/io/config.py"", line 93, in __init__; self.read(filename); File ""/usr/local/bin/SU2/io/config.py"", line 142, in read; konfig = read_config(filename); File ""/usr/local/bin/SU2/io/config.py"", line 784, in read_config; Mesh_Filename = data_dict['MESH_FILENAME']; KeyError: 'MESH_FILENAME'; //. 2.	It is running fine in serial using the command : *SU2_CFD config.cfg** . I have also tried with mpirun. ; 3.	Execution command: **mpirun -n 12 /usr/local/bin/SU2_CFD config.cfg** . the simulation is running but I guess parallel execution is not done properly because it is showing the following error: . [DESKTOP-8N08ELC:00100] 11 more processes have sent help message help-btl-vader.txt / cma-permission-denied; [DESKTOP-8N08ELC:00100] Set MCA parameter ""orte_base_help_aggregate"" to 0 to see all help / error messages. Kindly let me know how to resolve the issue. . OS : ubuntu 18.04 ; C++ version : GCC 7.3.0; MPI implementation and version : mpirun (Open MPI) 2.1.1; SU2 version: 7.6.0",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1094
https://github.com/su2code/SU2/issues/1094:1085,Modifiability,config,config,1085,"1.	While running in parallel a Fluid Structure Interaction case in SU2 for square cylinder with beam using the following command: **/usr/local/bin/parallel_computation.py -f config.cfg -n 12**; I am getting the following error: ; //; ('Unexpected error: ', <type 'exceptions.KeyError'>); Traceback (most recent call last):; File ""/usr/local/bin/parallel_computation.py"", line 110, in <module>; main(); File ""/usr/local/bin/parallel_computation.py"", line 57, in main; options.compute ); File ""/usr/local/bin/parallel_computation.py"", line 71, in parallel_computation; config = SU2.io.Config(filename); File ""/usr/local/bin/SU2/io/config.py"", line 93, in __init__; self.read(filename); File ""/usr/local/bin/SU2/io/config.py"", line 142, in read; konfig = read_config(filename); File ""/usr/local/bin/SU2/io/config.py"", line 784, in read_config; Mesh_Filename = data_dict['MESH_FILENAME']; KeyError: 'MESH_FILENAME'; //. 2.	It is running fine in serial using the command : *SU2_CFD config.cfg** . I have also tried with mpirun. ; 3.	Execution command: **mpirun -n 12 /usr/local/bin/SU2_CFD config.cfg** . the simulation is running but I guess parallel execution is not done properly because it is showing the following error: . [DESKTOP-8N08ELC:00100] 11 more processes have sent help message help-btl-vader.txt / cma-permission-denied; [DESKTOP-8N08ELC:00100] Set MCA parameter ""orte_base_help_aggregate"" to 0 to see all help / error messages. Kindly let me know how to resolve the issue. . OS : ubuntu 18.04 ; C++ version : GCC 7.3.0; MPI implementation and version : mpirun (Open MPI) 2.1.1; SU2 version: 7.6.0",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1094
https://github.com/su2code/SU2/pull/1095:288,Testability,test,test,288,"I added the viscous terms to the axisymmetric source but I am not sure it is all correct. I get very reasonable, well converged results with my cases but dissipation seems a little excessive, however I cannot say for sure because there are many other factors in my own cases. There is no test case I believe. Should I try to create one with air like this one https://turbmodels.larc.nasa.gov/axibump_val.html ?. How come in the incompressible version the turbulent heat transfer is ignored? I added it here with the Reynolds analogy as eddyvisc * cp/PrTurb * dT/dy and it seems significant in my cases (with PrTurb = 0.9). Also, I created a generalised version of the axisymmetric source in a separate class which goes with the generalised Roe and AvgGradFlow solvers with any eos. I use it for my cases with a table based fluid model (not included here) but I am not sure it is needed for the existing fluid models because they all use a constant gamma anyway. Perhaps it is because ""Pressure_i = (Gamma-1.0)*U_i[0]*(U_i[nDim+1]/U_i[0]-0.5*sq_vel)"" may not be true for the ""polytropic Van der Waals"" and ""polytropic Peng Robinson"" models. If that is the case the Driver should instantiate the general one for anything other than incompressible, ideal gas and standard air.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1095
https://github.com/su2code/SU2/pull/1096:21,Deployability,Update,Update,21,"## Proposed Changes; Update SU2 to a CoDiPack version that contains the fixes discussed in #1087.; . ## Related Work; #1087. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1096
https://github.com/su2code/SU2/pull/1096:748,Deployability,update,updated,748,"## Proposed Changes; Update SU2 to a CoDiPack version that contains the fixes discussed in #1087.; . ## Related Work; #1087. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1096
https://github.com/su2code/SU2/pull/1096:675,Testability,test,test,675,"## Proposed Changes; Update SU2 to a CoDiPack version that contains the fixes discussed in #1087.; . ## Related Work; #1087. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1096
https://github.com/su2code/SU2/pull/1096:297,Usability,guid,guide,297,"## Proposed Changes; Update SU2 to a CoDiPack version that contains the fixes discussed in #1087.; . ## Related Work; #1087. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1096
https://github.com/su2code/SU2/pull/1097:634,Availability,down,downloaded,634,"## Proposed Changes; We found a possible mistake in the tau wall computation in the rough wall boundary condition for the SST model.; In particular, in the current version, the tau wall is considered to be equal to the skin friction coefficient.; We changed it considering that; ![ImmaginiSU2-2](https://latex.codecogs.com/gif.latex?%5Ctau_w%3Dc_f%5Cfrac%7B1%7D%7B2%7D%5Crho%20V_%5Cinfty%5E2).; We found this possible problem while doing a run on a NACA0012 airfoil.; The problem found is that the skin friction coefficient along the airfoil is too high compared to the theory.; The grid has 257 nodes on the airfoil, and it has been downloaded from the NASA website (https://turbmodels.larc.nasa.gov/naca0012_grids.html).; The solved equations are the RANS with the SST turbulence model, in compressible regime. M=0.1, Re=1e6, TU=10%, mut/mu=0.001; The run is dimensional.; ![ImmaginiSU2-1](https://user-images.githubusercontent.com/53580993/96976601-5688b700-151c-11eb-8a72-ed0e0ff340dc.png); In this figure ""Rough Wall 1"" is the case of tau wall computed with the current version.; ""Rough Wall 2"" is the case of tau wall computed after this modification.; The chosen k+ is 4 because, considering the Wilcox paper ""Formulation of the k-w Turbulence Model Revisited, AIAA Journal, Vol. 46, No. 11, November 2008"", the smooth wall has k+ < 5.; Moreover, the order of magnitude of omega wall is O(1e9). In case of the ""Rough Wall 1"" it is of O(1e6), while in case of ""Rough Wall 2"" it is of O(1e9).; We don't know if the problem is somewhere else, but changing the computation of the tau wall it seems to be fixed.; We hope this could be useful. Authors: TAARG (Theoretical and Applied Aerodynamic Research Group), University of Naples Federico II.; Ettore Saetta, Lorenzo Russo, Renato Tognaccini, Benedetto Mele. ## Related Work; #877 . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextr",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1097
https://github.com/su2code/SU2/pull/1097:2221,Deployability,update,updated,2221,"cogs.com/gif.latex?%5Ctau_w%3Dc_f%5Cfrac%7B1%7D%7B2%7D%5Crho%20V_%5Cinfty%5E2).; We found this possible problem while doing a run on a NACA0012 airfoil.; The problem found is that the skin friction coefficient along the airfoil is too high compared to the theory.; The grid has 257 nodes on the airfoil, and it has been downloaded from the NASA website (https://turbmodels.larc.nasa.gov/naca0012_grids.html).; The solved equations are the RANS with the SST turbulence model, in compressible regime. M=0.1, Re=1e6, TU=10%, mut/mu=0.001; The run is dimensional.; ![ImmaginiSU2-1](https://user-images.githubusercontent.com/53580993/96976601-5688b700-151c-11eb-8a72-ed0e0ff340dc.png); In this figure ""Rough Wall 1"" is the case of tau wall computed with the current version.; ""Rough Wall 2"" is the case of tau wall computed after this modification.; The chosen k+ is 4 because, considering the Wilcox paper ""Formulation of the k-w Turbulence Model Revisited, AIAA Journal, Vol. 46, No. 11, November 2008"", the smooth wall has k+ < 5.; Moreover, the order of magnitude of omega wall is O(1e9). In case of the ""Rough Wall 1"" it is of O(1e6), while in case of ""Rough Wall 2"" it is of O(1e9).; We don't know if the problem is somewhere else, but changing the computation of the tau wall it seems to be fixed.; We hope this could be useful. Authors: TAARG (Theoretical and Applied Aerodynamic Research Group), University of Naples Federico II.; Ettore Saetta, Lorenzo Russo, Renato Tognaccini, Benedetto Mele. ## Related Work; #877 . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1097
https://github.com/su2code/SU2/pull/1097:2148,Testability,test,test,2148,"cogs.com/gif.latex?%5Ctau_w%3Dc_f%5Cfrac%7B1%7D%7B2%7D%5Crho%20V_%5Cinfty%5E2).; We found this possible problem while doing a run on a NACA0012 airfoil.; The problem found is that the skin friction coefficient along the airfoil is too high compared to the theory.; The grid has 257 nodes on the airfoil, and it has been downloaded from the NASA website (https://turbmodels.larc.nasa.gov/naca0012_grids.html).; The solved equations are the RANS with the SST turbulence model, in compressible regime. M=0.1, Re=1e6, TU=10%, mut/mu=0.001; The run is dimensional.; ![ImmaginiSU2-1](https://user-images.githubusercontent.com/53580993/96976601-5688b700-151c-11eb-8a72-ed0e0ff340dc.png); In this figure ""Rough Wall 1"" is the case of tau wall computed with the current version.; ""Rough Wall 2"" is the case of tau wall computed after this modification.; The chosen k+ is 4 because, considering the Wilcox paper ""Formulation of the k-w Turbulence Model Revisited, AIAA Journal, Vol. 46, No. 11, November 2008"", the smooth wall has k+ < 5.; Moreover, the order of magnitude of omega wall is O(1e9). In case of the ""Rough Wall 1"" it is of O(1e6), while in case of ""Rough Wall 2"" it is of O(1e9).; We don't know if the problem is somewhere else, but changing the computation of the tau wall it seems to be fixed.; We hope this could be useful. Authors: TAARG (Theoretical and Applied Aerodynamic Research Group), University of Naples Federico II.; Ettore Saetta, Lorenzo Russo, Renato Tognaccini, Benedetto Mele. ## Related Work; #877 . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1097
https://github.com/su2code/SU2/pull/1098:195,Deployability,update,update,195,## Proposed Changes; I just noticed master is not up to date.; I created a branch from https://github.com/su2code/SU2/commit/1b59f015823d69ad94523452388e9b9ff4a674e7 and I propose we use that to update the master branch since develop already has new changes.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1098
https://github.com/su2code/SU2/issues/1099:411,Availability,error,error,411,"**Describe the bug**; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*. I am running a WMLES channel flow test case with grid size 102 x 31 x 52 = 164424 nodes. When running the problem on a large number of cores, e.g. 128 cores, SU2 fails during the preprocessing step. Running valgrind gives the error; ![image](https://user-images.githubusercontent.com/41386609/97629439-580a2180-19eb-11eb-9e9f-023fc96c05aa.png); which for my version corresponds to this line; ![image](https://user-images.githubusercontent.com/41386609/97629473-66f0d400-19eb-11eb-89c8-9b677c720240.png); It seems that theres a mismatch on the receiver end. The problem disappears if I use smaller number of cores, e.g. 64, and everything will look normal (solution converges and SU2 exit normally). The actual number of MPI cores that triggers the bug seems to be problem dependent. I also ran a couple of finer grids but started to see the bug with 64 cores. For these finer mesh, reducing to a smaller number like 48 cores makes the problem disappear again. Similar problem has been observed by @clarkpede and mentioned in pecos-hybrid/su2#53 but he was using an older version of SU2 (v6.2.0). I should mention another common thing is that we are both using periodic boundary conditions. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*; [wmles_chan_re5200.zip](https://github.com/su2code/SU2/files/5461150/wmles_chan_re5200.zip); (Reminder: This has to be ran with very large number of cores though. I see the problem with 128 cores). **Desktop (please complete the following information):**; - OS: CentOS Linux release 7.6.1810; - C++ compiler and version: gcc/6.3.0 ; - MPI implementation and version: openmpi/3.1.2; - SU2 Version: v7.0.3",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1099
https://github.com/su2code/SU2/issues/1099:1759,Deployability,release,release,1759,"**Describe the bug**; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*. I am running a WMLES channel flow test case with grid size 102 x 31 x 52 = 164424 nodes. When running the problem on a large number of cores, e.g. 128 cores, SU2 fails during the preprocessing step. Running valgrind gives the error; ![image](https://user-images.githubusercontent.com/41386609/97629439-580a2180-19eb-11eb-9e9f-023fc96c05aa.png); which for my version corresponds to this line; ![image](https://user-images.githubusercontent.com/41386609/97629473-66f0d400-19eb-11eb-89c8-9b677c720240.png); It seems that theres a mismatch on the receiver end. The problem disappears if I use smaller number of cores, e.g. 64, and everything will look normal (solution converges and SU2 exit normally). The actual number of MPI cores that triggers the bug seems to be problem dependent. I also ran a couple of finer grids but started to see the bug with 64 cores. For these finer mesh, reducing to a smaller number like 48 cores makes the problem disappear again. Similar problem has been observed by @clarkpede and mentioned in pecos-hybrid/su2#53 but he was using an older version of SU2 (v6.2.0). I should mention another common thing is that we are both using periodic boundary conditions. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*; [wmles_chan_re5200.zip](https://github.com/su2code/SU2/files/5461150/wmles_chan_re5200.zip); (Reminder: This has to be ran with very large number of cores though. I see the problem with 128 cores). **Desktop (please complete the following information):**; - OS: CentOS Linux release 7.6.1810; - C++ compiler and version: gcc/6.3.0 ; - MPI implementation and version: openmpi/3.1.2; - SU2 Version: v7.0.3",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1099
https://github.com/su2code/SU2/issues/1099:957,Integrability,depend,dependent,957,"**Describe the bug**; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*. I am running a WMLES channel flow test case with grid size 102 x 31 x 52 = 164424 nodes. When running the problem on a large number of cores, e.g. 128 cores, SU2 fails during the preprocessing step. Running valgrind gives the error; ![image](https://user-images.githubusercontent.com/41386609/97629439-580a2180-19eb-11eb-9e9f-023fc96c05aa.png); which for my version corresponds to this line; ![image](https://user-images.githubusercontent.com/41386609/97629473-66f0d400-19eb-11eb-89c8-9b677c720240.png); It seems that theres a mismatch on the receiver end. The problem disappears if I use smaller number of cores, e.g. 64, and everything will look normal (solution converges and SU2 exit normally). The actual number of MPI cores that triggers the bug seems to be problem dependent. I also ran a couple of finer grids but started to see the bug with 64 cores. For these finer mesh, reducing to a smaller number like 48 cores makes the problem disappear again. Similar problem has been observed by @clarkpede and mentioned in pecos-hybrid/su2#53 but he was using an older version of SU2 (v6.2.0). I should mention another common thing is that we are both using periodic boundary conditions. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*; [wmles_chan_re5200.zip](https://github.com/su2code/SU2/files/5461150/wmles_chan_re5200.zip); (Reminder: This has to be ran with very large number of cores though. I see the problem with 128 cores). **Desktop (please complete the following information):**; - OS: CentOS Linux release 7.6.1810; - C++ compiler and version: gcc/6.3.0 ; - MPI implementation and version: openmpi/3.1.2; - SU2 Version: v7.0.3",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1099
https://github.com/su2code/SU2/issues/1099:1411,Modifiability,config,config,1411,"**Describe the bug**; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*. I am running a WMLES channel flow test case with grid size 102 x 31 x 52 = 164424 nodes. When running the problem on a large number of cores, e.g. 128 cores, SU2 fails during the preprocessing step. Running valgrind gives the error; ![image](https://user-images.githubusercontent.com/41386609/97629439-580a2180-19eb-11eb-9e9f-023fc96c05aa.png); which for my version corresponds to this line; ![image](https://user-images.githubusercontent.com/41386609/97629473-66f0d400-19eb-11eb-89c8-9b677c720240.png); It seems that theres a mismatch on the receiver end. The problem disappears if I use smaller number of cores, e.g. 64, and everything will look normal (solution converges and SU2 exit normally). The actual number of MPI cores that triggers the bug seems to be problem dependent. I also ran a couple of finer grids but started to see the bug with 64 cores. For these finer mesh, reducing to a smaller number like 48 cores makes the problem disappear again. Similar problem has been observed by @clarkpede and mentioned in pecos-hybrid/su2#53 but he was using an older version of SU2 (v6.2.0). I should mention another common thing is that we are both using periodic boundary conditions. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*; [wmles_chan_re5200.zip](https://github.com/su2code/SU2/files/5461150/wmles_chan_re5200.zip); (Reminder: This has to be ran with very large number of cores though. I see the problem with 128 cores). **Desktop (please complete the following information):**; - OS: CentOS Linux release 7.6.1810; - C++ compiler and version: gcc/6.3.0 ; - MPI implementation and version: openmpi/3.1.2; - SU2 Version: v7.0.3",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1099
https://github.com/su2code/SU2/issues/1099:219,Testability,test,test,219,"**Describe the bug**; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*. I am running a WMLES channel flow test case with grid size 102 x 31 x 52 = 164424 nodes. When running the problem on a large number of cores, e.g. 128 cores, SU2 fails during the preprocessing step. Running valgrind gives the error; ![image](https://user-images.githubusercontent.com/41386609/97629439-580a2180-19eb-11eb-9e9f-023fc96c05aa.png); which for my version corresponds to this line; ![image](https://user-images.githubusercontent.com/41386609/97629473-66f0d400-19eb-11eb-89c8-9b677c720240.png); It seems that theres a mismatch on the receiver end. The problem disappears if I use smaller number of cores, e.g. 64, and everything will look normal (solution converges and SU2 exit normally). The actual number of MPI cores that triggers the bug seems to be problem dependent. I also ran a couple of finer grids but started to see the bug with 64 cores. For these finer mesh, reducing to a smaller number like 48 cores makes the problem disappear again. Similar problem has been observed by @clarkpede and mentioned in pecos-hybrid/su2#53 but he was using an older version of SU2 (v6.2.0). I should mention another common thing is that we are both using periodic boundary conditions. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*; [wmles_chan_re5200.zip](https://github.com/su2code/SU2/files/5461150/wmles_chan_re5200.zip); (Reminder: This has to be ran with very large number of cores though. I see the problem with 128 cores). **Desktop (please complete the following information):**; - OS: CentOS Linux release 7.6.1810; - C++ compiler and version: gcc/6.3.0 ; - MPI implementation and version: openmpi/3.1.2; - SU2 Version: v7.0.3",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1099
https://github.com/su2code/SU2/issues/1099:25,Usability,clear,clear,25,"**Describe the bug**; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*. I am running a WMLES channel flow test case with grid size 102 x 31 x 52 = 164424 nodes. When running the problem on a large number of cores, e.g. 128 cores, SU2 fails during the preprocessing step. Running valgrind gives the error; ![image](https://user-images.githubusercontent.com/41386609/97629439-580a2180-19eb-11eb-9e9f-023fc96c05aa.png); which for my version corresponds to this line; ![image](https://user-images.githubusercontent.com/41386609/97629473-66f0d400-19eb-11eb-89c8-9b677c720240.png); It seems that theres a mismatch on the receiver end. The problem disappears if I use smaller number of cores, e.g. 64, and everything will look normal (solution converges and SU2 exit normally). The actual number of MPI cores that triggers the bug seems to be problem dependent. I also ran a couple of finer grids but started to see the bug with 64 cores. For these finer mesh, reducing to a smaller number like 48 cores makes the problem disappear again. Similar problem has been observed by @clarkpede and mentioned in pecos-hybrid/su2#53 but he was using an older version of SU2 (v6.2.0). I should mention another common thing is that we are both using periodic boundary conditions. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*; [wmles_chan_re5200.zip](https://github.com/su2code/SU2/files/5461150/wmles_chan_re5200.zip); (Reminder: This has to be ran with very large number of cores though. I see the problem with 128 cores). **Desktop (please complete the following information):**; - OS: CentOS Linux release 7.6.1810; - C++ compiler and version: gcc/6.3.0 ; - MPI implementation and version: openmpi/3.1.2; - SU2 Version: v7.0.3",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1099
https://github.com/su2code/SU2/issues/1100:97,Integrability,message,message,97,**Describe the bug**; During the build of the latest develop version I get the following warning message; SHA-1 tag stored in index does not match SHA tag stored in this script. **To Reproduce**; Just run the meson script. **Desktop (please complete the following information):**; - OS: Ubuntu 18.04; - C++ compiler and version: GCC 8.4.0; - MPI implementation and version: OpenMPI 2.1.1; - SU2 Version: 7.0.7,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1100
https://github.com/su2code/SU2/pull/1102:328,Availability,error,errors,328,"## Proposed Changes; Add option `-Dextra-deps=a,b,c` to meson to provide a simpler work around for build problems with MPICH and LAPACK.; For example if you have MPICH but it is not detected (because its pkg config name is not ""mpi"" but ""mpich"" instead), you would do `-Dcustom-mpi=true -Dextra-deps=mpich`.; If you have linker errors because the blas library does not contain LAPACK functions, you would do `-Dextra-deps=lapack`.; The option takes a comma-separated list. I will update the documentation once this goes through. ## Related Work; #991; #1000. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1102
https://github.com/su2code/SU2/pull/1102:480,Deployability,update,update,480,"## Proposed Changes; Add option `-Dextra-deps=a,b,c` to meson to provide a simpler work around for build problems with MPICH and LAPACK.; For example if you have MPICH but it is not detected (because its pkg config name is not ""mpi"" but ""mpich"" instead), you would do `-Dcustom-mpi=true -Dextra-deps=mpich`.; If you have linker errors because the blas library does not contain LAPACK functions, you would do `-Dextra-deps=lapack`.; The option takes a comma-separated list. I will update the documentation once this goes through. ## Related Work; #991; #1000. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1102
https://github.com/su2code/SU2/pull/1102:984,Deployability,update,updated,984,"## Proposed Changes; Add option `-Dextra-deps=a,b,c` to meson to provide a simpler work around for build problems with MPICH and LAPACK.; For example if you have MPICH but it is not detected (because its pkg config name is not ""mpi"" but ""mpich"" instead), you would do `-Dcustom-mpi=true -Dextra-deps=mpich`.; If you have linker errors because the blas library does not contain LAPACK functions, you would do `-Dextra-deps=lapack`.; The option takes a comma-separated list. I will update the documentation once this goes through. ## Related Work; #991; #1000. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1102
https://github.com/su2code/SU2/pull/1102:208,Modifiability,config,config,208,"## Proposed Changes; Add option `-Dextra-deps=a,b,c` to meson to provide a simpler work around for build problems with MPICH and LAPACK.; For example if you have MPICH but it is not detected (because its pkg config name is not ""mpi"" but ""mpich"" instead), you would do `-Dcustom-mpi=true -Dextra-deps=mpich`.; If you have linker errors because the blas library does not contain LAPACK functions, you would do `-Dextra-deps=lapack`.; The option takes a comma-separated list. I will update the documentation once this goes through. ## Related Work; #991; #1000. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1102
https://github.com/su2code/SU2/pull/1102:182,Safety,detect,detected,182,"## Proposed Changes; Add option `-Dextra-deps=a,b,c` to meson to provide a simpler work around for build problems with MPICH and LAPACK.; For example if you have MPICH but it is not detected (because its pkg config name is not ""mpi"" but ""mpich"" instead), you would do `-Dcustom-mpi=true -Dextra-deps=mpich`.; If you have linker errors because the blas library does not contain LAPACK functions, you would do `-Dextra-deps=lapack`.; The option takes a comma-separated list. I will update the documentation once this goes through. ## Related Work; #991; #1000. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1102
https://github.com/su2code/SU2/pull/1102:911,Testability,test,test,911,"## Proposed Changes; Add option `-Dextra-deps=a,b,c` to meson to provide a simpler work around for build problems with MPICH and LAPACK.; For example if you have MPICH but it is not detected (because its pkg config name is not ""mpi"" but ""mpich"" instead), you would do `-Dcustom-mpi=true -Dextra-deps=mpich`.; If you have linker errors because the blas library does not contain LAPACK functions, you would do `-Dextra-deps=lapack`.; The option takes a comma-separated list. I will update the documentation once this goes through. ## Related Work; #991; #1000. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1102
https://github.com/su2code/SU2/pull/1102:75,Usability,simpl,simpler,75,"## Proposed Changes; Add option `-Dextra-deps=a,b,c` to meson to provide a simpler work around for build problems with MPICH and LAPACK.; For example if you have MPICH but it is not detected (because its pkg config name is not ""mpi"" but ""mpich"" instead), you would do `-Dcustom-mpi=true -Dextra-deps=mpich`.; If you have linker errors because the blas library does not contain LAPACK functions, you would do `-Dextra-deps=lapack`.; The option takes a comma-separated list. I will update the documentation once this goes through. ## Related Work; #991; #1000. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1102
https://github.com/su2code/SU2/pull/1102:782,Usability,simpl,simply,782,"## Proposed Changes; Add option `-Dextra-deps=a,b,c` to meson to provide a simpler work around for build problems with MPICH and LAPACK.; For example if you have MPICH but it is not detected (because its pkg config name is not ""mpi"" but ""mpich"" instead), you would do `-Dcustom-mpi=true -Dextra-deps=mpich`.; If you have linker errors because the blas library does not contain LAPACK functions, you would do `-Dextra-deps=lapack`.; The option takes a comma-separated list. I will update the documentation once this goes through. ## Related Work; #991; #1000. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1102
https://github.com/su2code/SU2/issues/1103:176,Deployability,configurat,configuration,176,"Hello guys,; I run the shape_optimization.py to optimize a wing. I want to minimize the drag function. But the drag function increased. And I have not found any setting in the configuration that clearly define the optimization goal is minimize or muximize the objective function. I only found two setting, 'OPT_OBJECTIVE= DRAG * SCALE' and 'OPT_CONSTRAINT= (STATION1_THICKNESS > 0.077) *SCALE' , ralating to optimization objective. Does it default to minimize drag and muxmize lift? ; Can anybody know that?; the second question is about the scale of OPT_OBJECTIVE and OPT_CONSTRAINT. Does the SLSQP change the constrainted question into unconstrainted with the two scale when solve the optimization question. If so, can anyone tell me the transformed function.; Thanks. - SU2 Version: [ v6.2.0]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1103
https://github.com/su2code/SU2/issues/1103:176,Modifiability,config,configuration,176,"Hello guys,; I run the shape_optimization.py to optimize a wing. I want to minimize the drag function. But the drag function increased. And I have not found any setting in the configuration that clearly define the optimization goal is minimize or muximize the objective function. I only found two setting, 'OPT_OBJECTIVE= DRAG * SCALE' and 'OPT_CONSTRAINT= (STATION1_THICKNESS > 0.077) *SCALE' , ralating to optimization objective. Does it default to minimize drag and muxmize lift? ; Can anybody know that?; the second question is about the scale of OPT_OBJECTIVE and OPT_CONSTRAINT. Does the SLSQP change the constrainted question into unconstrainted with the two scale when solve the optimization question. If so, can anyone tell me the transformed function.; Thanks. - SU2 Version: [ v6.2.0]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1103
https://github.com/su2code/SU2/issues/1103:48,Performance,optimiz,optimize,48,"Hello guys,; I run the shape_optimization.py to optimize a wing. I want to minimize the drag function. But the drag function increased. And I have not found any setting in the configuration that clearly define the optimization goal is minimize or muximize the objective function. I only found two setting, 'OPT_OBJECTIVE= DRAG * SCALE' and 'OPT_CONSTRAINT= (STATION1_THICKNESS > 0.077) *SCALE' , ralating to optimization objective. Does it default to minimize drag and muxmize lift? ; Can anybody know that?; the second question is about the scale of OPT_OBJECTIVE and OPT_CONSTRAINT. Does the SLSQP change the constrainted question into unconstrainted with the two scale when solve the optimization question. If so, can anyone tell me the transformed function.; Thanks. - SU2 Version: [ v6.2.0]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1103
https://github.com/su2code/SU2/issues/1103:214,Performance,optimiz,optimization,214,"Hello guys,; I run the shape_optimization.py to optimize a wing. I want to minimize the drag function. But the drag function increased. And I have not found any setting in the configuration that clearly define the optimization goal is minimize or muximize the objective function. I only found two setting, 'OPT_OBJECTIVE= DRAG * SCALE' and 'OPT_CONSTRAINT= (STATION1_THICKNESS > 0.077) *SCALE' , ralating to optimization objective. Does it default to minimize drag and muxmize lift? ; Can anybody know that?; the second question is about the scale of OPT_OBJECTIVE and OPT_CONSTRAINT. Does the SLSQP change the constrainted question into unconstrainted with the two scale when solve the optimization question. If so, can anyone tell me the transformed function.; Thanks. - SU2 Version: [ v6.2.0]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1103
https://github.com/su2code/SU2/issues/1103:408,Performance,optimiz,optimization,408,"Hello guys,; I run the shape_optimization.py to optimize a wing. I want to minimize the drag function. But the drag function increased. And I have not found any setting in the configuration that clearly define the optimization goal is minimize or muximize the objective function. I only found two setting, 'OPT_OBJECTIVE= DRAG * SCALE' and 'OPT_CONSTRAINT= (STATION1_THICKNESS > 0.077) *SCALE' , ralating to optimization objective. Does it default to minimize drag and muxmize lift? ; Can anybody know that?; the second question is about the scale of OPT_OBJECTIVE and OPT_CONSTRAINT. Does the SLSQP change the constrainted question into unconstrainted with the two scale when solve the optimization question. If so, can anyone tell me the transformed function.; Thanks. - SU2 Version: [ v6.2.0]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1103
https://github.com/su2code/SU2/issues/1103:687,Performance,optimiz,optimization,687,"Hello guys,; I run the shape_optimization.py to optimize a wing. I want to minimize the drag function. But the drag function increased. And I have not found any setting in the configuration that clearly define the optimization goal is minimize or muximize the objective function. I only found two setting, 'OPT_OBJECTIVE= DRAG * SCALE' and 'OPT_CONSTRAINT= (STATION1_THICKNESS > 0.077) *SCALE' , ralating to optimization objective. Does it default to minimize drag and muxmize lift? ; Can anybody know that?; the second question is about the scale of OPT_OBJECTIVE and OPT_CONSTRAINT. Does the SLSQP change the constrainted question into unconstrainted with the two scale when solve the optimization question. If so, can anyone tell me the transformed function.; Thanks. - SU2 Version: [ v6.2.0]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1103
https://github.com/su2code/SU2/issues/1103:195,Usability,clear,clearly,195,"Hello guys,; I run the shape_optimization.py to optimize a wing. I want to minimize the drag function. But the drag function increased. And I have not found any setting in the configuration that clearly define the optimization goal is minimize or muximize the objective function. I only found two setting, 'OPT_OBJECTIVE= DRAG * SCALE' and 'OPT_CONSTRAINT= (STATION1_THICKNESS > 0.077) *SCALE' , ralating to optimization objective. Does it default to minimize drag and muxmize lift? ; Can anybody know that?; the second question is about the scale of OPT_OBJECTIVE and OPT_CONSTRAINT. Does the SLSQP change the constrainted question into unconstrainted with the two scale when solve the optimization question. If so, can anyone tell me the transformed function.; Thanks. - SU2 Version: [ v6.2.0]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1103
https://github.com/su2code/SU2/pull/1104:73,Availability,avail,available,73,"## Proposed Changes; Hi, I noticed that the mesh quality metrics are not available in the current output structure, so here they are. ; I removed WRT_MESH_QUALITY and just check&set in the configs postprocessing routine.; Compressible, Incompressible, Heat and Mesh Output are added here as the FEM solvers dont have the dual grid as stated in the original PR. . **Bonus issue:** I noticed that Coordinates are not written in the Volume Output for the cases I tested (also the Quickstart) but haven't really figured out why yet. Doesn't matter whether VOLUME_OUTPUT is set with COORDINATES or not at all. I will look into this again but if you have a hint that would be appreciated💐 **Edit:** of course they are written implicitly otherwise on couldn't open a visu file but what do we have the volume output field COORDINATES for then? Maybe I am just blind, but this is not really part of this PR anyway. Cheers, Tobi. ## Related Work; Initial implementation #778 . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1104
https://github.com/su2code/SU2/pull/1104:1392,Deployability,update,updated,1392,"## Proposed Changes; Hi, I noticed that the mesh quality metrics are not available in the current output structure, so here they are. ; I removed WRT_MESH_QUALITY and just check&set in the configs postprocessing routine.; Compressible, Incompressible, Heat and Mesh Output are added here as the FEM solvers dont have the dual grid as stated in the original PR. . **Bonus issue:** I noticed that Coordinates are not written in the Volume Output for the cases I tested (also the Quickstart) but haven't really figured out why yet. Doesn't matter whether VOLUME_OUTPUT is set with COORDINATES or not at all. I will look into this again but if you have a hint that would be appreciated💐 **Edit:** of course they are written implicitly otherwise on couldn't open a visu file but what do we have the volume output field COORDINATES for then? Maybe I am just blind, but this is not really part of this PR anyway. Cheers, Tobi. ## Related Work; Initial implementation #778 . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1104
https://github.com/su2code/SU2/pull/1104:212,Integrability,rout,routine,212,"## Proposed Changes; Hi, I noticed that the mesh quality metrics are not available in the current output structure, so here they are. ; I removed WRT_MESH_QUALITY and just check&set in the configs postprocessing routine.; Compressible, Incompressible, Heat and Mesh Output are added here as the FEM solvers dont have the dual grid as stated in the original PR. . **Bonus issue:** I noticed that Coordinates are not written in the Volume Output for the cases I tested (also the Quickstart) but haven't really figured out why yet. Doesn't matter whether VOLUME_OUTPUT is set with COORDINATES or not at all. I will look into this again but if you have a hint that would be appreciated💐 **Edit:** of course they are written implicitly otherwise on couldn't open a visu file but what do we have the volume output field COORDINATES for then? Maybe I am just blind, but this is not really part of this PR anyway. Cheers, Tobi. ## Related Work; Initial implementation #778 . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1104
https://github.com/su2code/SU2/pull/1104:189,Modifiability,config,configs,189,"## Proposed Changes; Hi, I noticed that the mesh quality metrics are not available in the current output structure, so here they are. ; I removed WRT_MESH_QUALITY and just check&set in the configs postprocessing routine.; Compressible, Incompressible, Heat and Mesh Output are added here as the FEM solvers dont have the dual grid as stated in the original PR. . **Bonus issue:** I noticed that Coordinates are not written in the Volume Output for the cases I tested (also the Quickstart) but haven't really figured out why yet. Doesn't matter whether VOLUME_OUTPUT is set with COORDINATES or not at all. I will look into this again but if you have a hint that would be appreciated💐 **Edit:** of course they are written implicitly otherwise on couldn't open a visu file but what do we have the volume output field COORDINATES for then? Maybe I am just blind, but this is not really part of this PR anyway. Cheers, Tobi. ## Related Work; Initial implementation #778 . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1104
https://github.com/su2code/SU2/pull/1104:460,Testability,test,tested,460,"## Proposed Changes; Hi, I noticed that the mesh quality metrics are not available in the current output structure, so here they are. ; I removed WRT_MESH_QUALITY and just check&set in the configs postprocessing routine.; Compressible, Incompressible, Heat and Mesh Output are added here as the FEM solvers dont have the dual grid as stated in the original PR. . **Bonus issue:** I noticed that Coordinates are not written in the Volume Output for the cases I tested (also the Quickstart) but haven't really figured out why yet. Doesn't matter whether VOLUME_OUTPUT is set with COORDINATES or not at all. I will look into this again but if you have a hint that would be appreciated💐 **Edit:** of course they are written implicitly otherwise on couldn't open a visu file but what do we have the volume output field COORDINATES for then? Maybe I am just blind, but this is not really part of this PR anyway. Cheers, Tobi. ## Related Work; Initial implementation #778 . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1104
https://github.com/su2code/SU2/pull/1104:1319,Testability,test,test,1319,"## Proposed Changes; Hi, I noticed that the mesh quality metrics are not available in the current output structure, so here they are. ; I removed WRT_MESH_QUALITY and just check&set in the configs postprocessing routine.; Compressible, Incompressible, Heat and Mesh Output are added here as the FEM solvers dont have the dual grid as stated in the original PR. . **Bonus issue:** I noticed that Coordinates are not written in the Volume Output for the cases I tested (also the Quickstart) but haven't really figured out why yet. Doesn't matter whether VOLUME_OUTPUT is set with COORDINATES or not at all. I will look into this again but if you have a hint that would be appreciated💐 **Edit:** of course they are written implicitly otherwise on couldn't open a visu file but what do we have the volume output field COORDINATES for then? Maybe I am just blind, but this is not really part of this PR anyway. Cheers, Tobi. ## Related Work; Initial implementation #778 . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1104
https://github.com/su2code/SU2/pull/1104:1190,Usability,simpl,simply,1190,"## Proposed Changes; Hi, I noticed that the mesh quality metrics are not available in the current output structure, so here they are. ; I removed WRT_MESH_QUALITY and just check&set in the configs postprocessing routine.; Compressible, Incompressible, Heat and Mesh Output are added here as the FEM solvers dont have the dual grid as stated in the original PR. . **Bonus issue:** I noticed that Coordinates are not written in the Volume Output for the cases I tested (also the Quickstart) but haven't really figured out why yet. Doesn't matter whether VOLUME_OUTPUT is set with COORDINATES or not at all. I will look into this again but if you have a hint that would be appreciated💐 **Edit:** of course they are written implicitly otherwise on couldn't open a visu file but what do we have the volume output field COORDINATES for then? Maybe I am just blind, but this is not really part of this PR anyway. Cheers, Tobi. ## Related Work; Initial implementation #778 . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1104
https://github.com/su2code/SU2/pull/1105:923,Deployability,update,updated,923,"## Proposed Changes; Check for Nan in the monitored values of COutput (was already done for time domain).; For SU2_CFD_AD and SU2_DOT_AD the default MATH_PROBLEM becomes DISCRETE_ADJOINT; When the MATH_PROBLEM is DISCRETE_ADJOINT the linear solver and preconditioner of primal solvers is made the same as the DISCADJ_** ones, i.e. LINEAR_SOLVER and LINEAR_SOLVER_PREC are ignored (see why I think it makes sense in #942, and let me know if you think it doesn't make sense). ## Related Work; #942 . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1105
https://github.com/su2code/SU2/pull/1105:42,Energy Efficiency,monitor,monitored,42,"## Proposed Changes; Check for Nan in the monitored values of COutput (was already done for time domain).; For SU2_CFD_AD and SU2_DOT_AD the default MATH_PROBLEM becomes DISCRETE_ADJOINT; When the MATH_PROBLEM is DISCRETE_ADJOINT the linear solver and preconditioner of primal solvers is made the same as the DISCADJ_** ones, i.e. LINEAR_SOLVER and LINEAR_SOLVER_PREC are ignored (see why I think it makes sense in #942, and let me know if you think it doesn't make sense). ## Related Work; #942 . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1105
https://github.com/su2code/SU2/pull/1105:850,Testability,test,test,850,"## Proposed Changes; Check for Nan in the monitored values of COutput (was already done for time domain).; For SU2_CFD_AD and SU2_DOT_AD the default MATH_PROBLEM becomes DISCRETE_ADJOINT; When the MATH_PROBLEM is DISCRETE_ADJOINT the linear solver and preconditioner of primal solvers is made the same as the DISCADJ_** ones, i.e. LINEAR_SOLVER and LINEAR_SOLVER_PREC are ignored (see why I think it makes sense in #942, and let me know if you think it doesn't make sense). ## Related Work; #942 . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1105
https://github.com/su2code/SU2/pull/1105:721,Usability,simpl,simply,721,"## Proposed Changes; Check for Nan in the monitored values of COutput (was already done for time domain).; For SU2_CFD_AD and SU2_DOT_AD the default MATH_PROBLEM becomes DISCRETE_ADJOINT; When the MATH_PROBLEM is DISCRETE_ADJOINT the linear solver and preconditioner of primal solvers is made the same as the DISCADJ_** ones, i.e. LINEAR_SOLVER and LINEAR_SOLVER_PREC are ignored (see why I think it makes sense in #942, and let me know if you think it doesn't make sense). ## Related Work; #942 . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1105
https://github.com/su2code/SU2/pull/1107:951,Deployability,update,updated,951,"## Proposed Changes; I think one sign was flipped in the Jacobian of the CHT boundary.; I replaced the isothermal BC for a stronger(?) alternative (flying by the seat of my pants here, if it's wrong let me know, but the solver converges better like this).; Fixes issues with deforming heat domains by generalising CDiscAdjMeshSolver::SetSensitivity to accept any solver as ""target"" (instead of considering always the ADJFLOW_SOL position in the solver container). ## Related Work; #951 ; #1061 ; (third time lucky I hope...). ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1107
https://github.com/su2code/SU2/pull/1107:878,Testability,test,test,878,"## Proposed Changes; I think one sign was flipped in the Jacobian of the CHT boundary.; I replaced the isothermal BC for a stronger(?) alternative (flying by the seat of my pants here, if it's wrong let me know, but the solver converges better like this).; Fixes issues with deforming heat domains by generalising CDiscAdjMeshSolver::SetSensitivity to accept any solver as ""target"" (instead of considering always the ADJFLOW_SOL position in the solver container). ## Related Work; #951 ; #1061 ; (third time lucky I hope...). ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1107
https://github.com/su2code/SU2/pull/1107:749,Usability,simpl,simply,749,"## Proposed Changes; I think one sign was flipped in the Jacobian of the CHT boundary.; I replaced the isothermal BC for a stronger(?) alternative (flying by the seat of my pants here, if it's wrong let me know, but the solver converges better like this).; Fixes issues with deforming heat domains by generalising CDiscAdjMeshSolver::SetSensitivity to accept any solver as ""target"" (instead of considering always the ADJFLOW_SOL position in the solver container). ## Related Work; #951 ; #1061 ; (third time lucky I hope...). ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1107
https://github.com/su2code/SU2/issues/1109:885,Modifiability,config,config,885,"**Describe the bug**; In #1104 I re-enabled the mesh quality output originally implemented in #778. In some cases the output for all 3 metrics is 0 in the domain and just on the boundary actual values are computed. If you know more, have hints feel free to join. Even an info if it runs works for your case might help cornering the problem. I haven't looked in depth into this but already wanted to open this such that you know :building_construction: . The output for the Quickstart for example is fine: :+1: ; ![image](https://user-images.githubusercontent.com/31306376/99533521-53130f00-29a6-11eb-8c01-b7951322740e.png). Testcases/incomp_navierstokes/bend in comparison exhibits the mentioned problem: :-1: ; ![image](https://user-images.githubusercontent.com/31306376/99533921-ea786200-29a6-11eb-9315-3aa3b9b0287b.png). **To Reproduce**; Run the bend Testcase using the additional config entry `VOLUME_OUTPUT= (MESH_QUALITY)`. **Desktop (please complete the following information):**; This already occurred on multiple platforms with different OS compiler and MPI version so I consider this to be actual problem in the code; - SU2 Version: latest develop [18 Nov 2020]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1109
https://github.com/su2code/SU2/issues/1109:624,Testability,Test,Testcases,624,"**Describe the bug**; In #1104 I re-enabled the mesh quality output originally implemented in #778. In some cases the output for all 3 metrics is 0 in the domain and just on the boundary actual values are computed. If you know more, have hints feel free to join. Even an info if it runs works for your case might help cornering the problem. I haven't looked in depth into this but already wanted to open this such that you know :building_construction: . The output for the Quickstart for example is fine: :+1: ; ![image](https://user-images.githubusercontent.com/31306376/99533521-53130f00-29a6-11eb-8c01-b7951322740e.png). Testcases/incomp_navierstokes/bend in comparison exhibits the mentioned problem: :-1: ; ![image](https://user-images.githubusercontent.com/31306376/99533921-ea786200-29a6-11eb-9315-3aa3b9b0287b.png). **To Reproduce**; Run the bend Testcase using the additional config entry `VOLUME_OUTPUT= (MESH_QUALITY)`. **Desktop (please complete the following information):**; This already occurred on multiple platforms with different OS compiler and MPI version so I consider this to be actual problem in the code; - SU2 Version: latest develop [18 Nov 2020]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1109
https://github.com/su2code/SU2/issues/1109:855,Testability,Test,Testcase,855,"**Describe the bug**; In #1104 I re-enabled the mesh quality output originally implemented in #778. In some cases the output for all 3 metrics is 0 in the domain and just on the boundary actual values are computed. If you know more, have hints feel free to join. Even an info if it runs works for your case might help cornering the problem. I haven't looked in depth into this but already wanted to open this such that you know :building_construction: . The output for the Quickstart for example is fine: :+1: ; ![image](https://user-images.githubusercontent.com/31306376/99533521-53130f00-29a6-11eb-8c01-b7951322740e.png). Testcases/incomp_navierstokes/bend in comparison exhibits the mentioned problem: :-1: ; ![image](https://user-images.githubusercontent.com/31306376/99533921-ea786200-29a6-11eb-9315-3aa3b9b0287b.png). **To Reproduce**; Run the bend Testcase using the additional config entry `VOLUME_OUTPUT= (MESH_QUALITY)`. **Desktop (please complete the following information):**; This already occurred on multiple platforms with different OS compiler and MPI version so I consider this to be actual problem in the code; - SU2 Version: latest develop [18 Nov 2020]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1109
https://github.com/su2code/SU2/issues/1110:495,Integrability,depend,depending,495,"From searches in the code of the develop branch, I suspect that the members ; unsigned short *Local_to_Global_Marker{nullptr}; /*!< \brief Local to Global marker. */; unsigned short *Global_to_Local_Marker{nullptr}; /*!< \brief Global to Local marker. */; of CPhysicalGeometry are not initialized anywhere in the code right now. Apart from this, from a comparison with `Global_to_Local_Point` I would infer that `G_to_L_Marker` should be of type `unordered_map<unsigned short, unsigned short>`, depending on the intended functionality of course.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1110
https://github.com/su2code/SU2/pull/1111:449,Deployability,Update,Updated,449,"This is a pull request to merge in progress made in the NEMO solver. The goal here is keep the pull requests to reasonable sizes. As such, there may be multiple PRs to prevent this from being a monumental task. This pull request addresses some of the following:; -adoption of code structure in develop; - CommonPreproccessing, SU2 screen output, etc.; -Incorporation of Smoluchowski-Maxwell BC; -general formatting; -correcting headers and briefs; -Updated test cases. - [ x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ x] My contribution is commented and consistent with SU2 style.; - [ x] I have added a test case that demonstrates my contribution, if necessary.; - [ x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1111
https://github.com/su2code/SU2/pull/1111:881,Deployability,update,updated,881,"This is a pull request to merge in progress made in the NEMO solver. The goal here is keep the pull requests to reasonable sizes. As such, there may be multiple PRs to prevent this from being a monumental task. This pull request addresses some of the following:; -adoption of code structure in develop; - CommonPreproccessing, SU2 screen output, etc.; -Incorporation of Smoluchowski-Maxwell BC; -general formatting; -correcting headers and briefs; -Updated test cases. - [ x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ x] My contribution is commented and consistent with SU2 style.; - [ x] I have added a test case that demonstrates my contribution, if necessary.; - [ x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1111
https://github.com/su2code/SU2/pull/1111:457,Testability,test,test,457,"This is a pull request to merge in progress made in the NEMO solver. The goal here is keep the pull requests to reasonable sizes. As such, there may be multiple PRs to prevent this from being a monumental task. This pull request addresses some of the following:; -adoption of code structure in develop; - CommonPreproccessing, SU2 screen output, etc.; -Incorporation of Smoluchowski-Maxwell BC; -general formatting; -correcting headers and briefs; -Updated test cases. - [ x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ x] My contribution is commented and consistent with SU2 style.; - [ x] I have added a test case that demonstrates my contribution, if necessary.; - [ x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1111
https://github.com/su2code/SU2/pull/1111:807,Testability,test,test,807,"This is a pull request to merge in progress made in the NEMO solver. The goal here is keep the pull requests to reasonable sizes. As such, there may be multiple PRs to prevent this from being a monumental task. This pull request addresses some of the following:; -adoption of code structure in develop; - CommonPreproccessing, SU2 screen output, etc.; -Incorporation of Smoluchowski-Maxwell BC; -general formatting; -correcting headers and briefs; -Updated test cases. - [ x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ x] My contribution is commented and consistent with SU2 style.; - [ x] I have added a test case that demonstrates my contribution, if necessary.; - [ x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1111
https://github.com/su2code/SU2/pull/1111:676,Usability,simpl,simply,676,"This is a pull request to merge in progress made in the NEMO solver. The goal here is keep the pull requests to reasonable sizes. As such, there may be multiple PRs to prevent this from being a monumental task. This pull request addresses some of the following:; -adoption of code structure in develop; - CommonPreproccessing, SU2 screen output, etc.; -Incorporation of Smoluchowski-Maxwell BC; -general formatting; -correcting headers and briefs; -Updated test cases. - [ x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ x] My contribution is commented and consistent with SU2 style.; - [ x] I have added a test case that demonstrates my contribution, if necessary.; - [ x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1111
https://github.com/su2code/SU2/issues/1112:113,Availability,error,error,113,"**Describe the bug**; In PR #1105 an `isnan(SU2_TYPE::GetValue(monitor))` check was introduced. I get a compiler error (serial build, no AD DD involved) `call of overload isnan(souble&) is ambiguos` so the complier is probably confused about the return type of `SU2_TYPE::GetValue(monitor)` which is `passivedouble` which itself is hardcoded to be `double` in `datatype_structure.hpp`. Or sth else is happening idk. ![image](https://user-images.githubusercontent.com/31306376/99810957-c5b9f100-2b44-11eb-80e6-b58ce4277bd2.png). I only have the problem with gcc5.3.0. On the same system I have an unsupported gcc7.4.0 that works. My private machine with gcc10.2.0 works fine as well. So I guess it is a specific compiler problem. In my I hit the :keyboard: a few times without actually knowing what I am doing:; - use `isnan(monitor)` ... same error; - use `isnan(static_cast<double>(monitor))` ... same error; - use `isnan(static_cast<double>(SU2_TYPE::GetValue(monitor)))` ... same error; - changed the return type of `GetValue` to `double` ...same error. I guess this problem is really specific to my setup. gcc5.3.0 is old but not grandpa kinda old with the release dec 2015 ... well ok maybe it is :older_man: ; I would be happy with some suggestions what to try out maybe, also if I misinterpret the error a pointer in the right direction would help. If @pcarruscag could have a quick look that would be great. . Thanks and warm regards, Tobi. **To Reproduce**; You probably cant without an old enough compiler. **Desktop (please complete the following information):**; - OS: RHES 7.6; - C++ compiler and version: g++ (GCC) 5.3.0; - SU2 Version: latest develop",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1112
https://github.com/su2code/SU2/issues/1112:843,Availability,error,error,843,"**Describe the bug**; In PR #1105 an `isnan(SU2_TYPE::GetValue(monitor))` check was introduced. I get a compiler error (serial build, no AD DD involved) `call of overload isnan(souble&) is ambiguos` so the complier is probably confused about the return type of `SU2_TYPE::GetValue(monitor)` which is `passivedouble` which itself is hardcoded to be `double` in `datatype_structure.hpp`. Or sth else is happening idk. ![image](https://user-images.githubusercontent.com/31306376/99810957-c5b9f100-2b44-11eb-80e6-b58ce4277bd2.png). I only have the problem with gcc5.3.0. On the same system I have an unsupported gcc7.4.0 that works. My private machine with gcc10.2.0 works fine as well. So I guess it is a specific compiler problem. In my I hit the :keyboard: a few times without actually knowing what I am doing:; - use `isnan(monitor)` ... same error; - use `isnan(static_cast<double>(monitor))` ... same error; - use `isnan(static_cast<double>(SU2_TYPE::GetValue(monitor)))` ... same error; - changed the return type of `GetValue` to `double` ...same error. I guess this problem is really specific to my setup. gcc5.3.0 is old but not grandpa kinda old with the release dec 2015 ... well ok maybe it is :older_man: ; I would be happy with some suggestions what to try out maybe, also if I misinterpret the error a pointer in the right direction would help. If @pcarruscag could have a quick look that would be great. . Thanks and warm regards, Tobi. **To Reproduce**; You probably cant without an old enough compiler. **Desktop (please complete the following information):**; - OS: RHES 7.6; - C++ compiler and version: g++ (GCC) 5.3.0; - SU2 Version: latest develop",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1112
https://github.com/su2code/SU2/issues/1112:903,Availability,error,error,903,"**Describe the bug**; In PR #1105 an `isnan(SU2_TYPE::GetValue(monitor))` check was introduced. I get a compiler error (serial build, no AD DD involved) `call of overload isnan(souble&) is ambiguos` so the complier is probably confused about the return type of `SU2_TYPE::GetValue(monitor)` which is `passivedouble` which itself is hardcoded to be `double` in `datatype_structure.hpp`. Or sth else is happening idk. ![image](https://user-images.githubusercontent.com/31306376/99810957-c5b9f100-2b44-11eb-80e6-b58ce4277bd2.png). I only have the problem with gcc5.3.0. On the same system I have an unsupported gcc7.4.0 that works. My private machine with gcc10.2.0 works fine as well. So I guess it is a specific compiler problem. In my I hit the :keyboard: a few times without actually knowing what I am doing:; - use `isnan(monitor)` ... same error; - use `isnan(static_cast<double>(monitor))` ... same error; - use `isnan(static_cast<double>(SU2_TYPE::GetValue(monitor)))` ... same error; - changed the return type of `GetValue` to `double` ...same error. I guess this problem is really specific to my setup. gcc5.3.0 is old but not grandpa kinda old with the release dec 2015 ... well ok maybe it is :older_man: ; I would be happy with some suggestions what to try out maybe, also if I misinterpret the error a pointer in the right direction would help. If @pcarruscag could have a quick look that would be great. . Thanks and warm regards, Tobi. **To Reproduce**; You probably cant without an old enough compiler. **Desktop (please complete the following information):**; - OS: RHES 7.6; - C++ compiler and version: g++ (GCC) 5.3.0; - SU2 Version: latest develop",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1112
https://github.com/su2code/SU2/issues/1112:983,Availability,error,error,983,"**Describe the bug**; In PR #1105 an `isnan(SU2_TYPE::GetValue(monitor))` check was introduced. I get a compiler error (serial build, no AD DD involved) `call of overload isnan(souble&) is ambiguos` so the complier is probably confused about the return type of `SU2_TYPE::GetValue(monitor)` which is `passivedouble` which itself is hardcoded to be `double` in `datatype_structure.hpp`. Or sth else is happening idk. ![image](https://user-images.githubusercontent.com/31306376/99810957-c5b9f100-2b44-11eb-80e6-b58ce4277bd2.png). I only have the problem with gcc5.3.0. On the same system I have an unsupported gcc7.4.0 that works. My private machine with gcc10.2.0 works fine as well. So I guess it is a specific compiler problem. In my I hit the :keyboard: a few times without actually knowing what I am doing:; - use `isnan(monitor)` ... same error; - use `isnan(static_cast<double>(monitor))` ... same error; - use `isnan(static_cast<double>(SU2_TYPE::GetValue(monitor)))` ... same error; - changed the return type of `GetValue` to `double` ...same error. I guess this problem is really specific to my setup. gcc5.3.0 is old but not grandpa kinda old with the release dec 2015 ... well ok maybe it is :older_man: ; I would be happy with some suggestions what to try out maybe, also if I misinterpret the error a pointer in the right direction would help. If @pcarruscag could have a quick look that would be great. . Thanks and warm regards, Tobi. **To Reproduce**; You probably cant without an old enough compiler. **Desktop (please complete the following information):**; - OS: RHES 7.6; - C++ compiler and version: g++ (GCC) 5.3.0; - SU2 Version: latest develop",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1112
https://github.com/su2code/SU2/issues/1112:1050,Availability,error,error,1050,"**Describe the bug**; In PR #1105 an `isnan(SU2_TYPE::GetValue(monitor))` check was introduced. I get a compiler error (serial build, no AD DD involved) `call of overload isnan(souble&) is ambiguos` so the complier is probably confused about the return type of `SU2_TYPE::GetValue(monitor)` which is `passivedouble` which itself is hardcoded to be `double` in `datatype_structure.hpp`. Or sth else is happening idk. ![image](https://user-images.githubusercontent.com/31306376/99810957-c5b9f100-2b44-11eb-80e6-b58ce4277bd2.png). I only have the problem with gcc5.3.0. On the same system I have an unsupported gcc7.4.0 that works. My private machine with gcc10.2.0 works fine as well. So I guess it is a specific compiler problem. In my I hit the :keyboard: a few times without actually knowing what I am doing:; - use `isnan(monitor)` ... same error; - use `isnan(static_cast<double>(monitor))` ... same error; - use `isnan(static_cast<double>(SU2_TYPE::GetValue(monitor)))` ... same error; - changed the return type of `GetValue` to `double` ...same error. I guess this problem is really specific to my setup. gcc5.3.0 is old but not grandpa kinda old with the release dec 2015 ... well ok maybe it is :older_man: ; I would be happy with some suggestions what to try out maybe, also if I misinterpret the error a pointer in the right direction would help. If @pcarruscag could have a quick look that would be great. . Thanks and warm regards, Tobi. **To Reproduce**; You probably cant without an old enough compiler. **Desktop (please complete the following information):**; - OS: RHES 7.6; - C++ compiler and version: g++ (GCC) 5.3.0; - SU2 Version: latest develop",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1112
https://github.com/su2code/SU2/issues/1112:1305,Availability,error,error,1305,"**Describe the bug**; In PR #1105 an `isnan(SU2_TYPE::GetValue(monitor))` check was introduced. I get a compiler error (serial build, no AD DD involved) `call of overload isnan(souble&) is ambiguos` so the complier is probably confused about the return type of `SU2_TYPE::GetValue(monitor)` which is `passivedouble` which itself is hardcoded to be `double` in `datatype_structure.hpp`. Or sth else is happening idk. ![image](https://user-images.githubusercontent.com/31306376/99810957-c5b9f100-2b44-11eb-80e6-b58ce4277bd2.png). I only have the problem with gcc5.3.0. On the same system I have an unsupported gcc7.4.0 that works. My private machine with gcc10.2.0 works fine as well. So I guess it is a specific compiler problem. In my I hit the :keyboard: a few times without actually knowing what I am doing:; - use `isnan(monitor)` ... same error; - use `isnan(static_cast<double>(monitor))` ... same error; - use `isnan(static_cast<double>(SU2_TYPE::GetValue(monitor)))` ... same error; - changed the return type of `GetValue` to `double` ...same error. I guess this problem is really specific to my setup. gcc5.3.0 is old but not grandpa kinda old with the release dec 2015 ... well ok maybe it is :older_man: ; I would be happy with some suggestions what to try out maybe, also if I misinterpret the error a pointer in the right direction would help. If @pcarruscag could have a quick look that would be great. . Thanks and warm regards, Tobi. **To Reproduce**; You probably cant without an old enough compiler. **Desktop (please complete the following information):**; - OS: RHES 7.6; - C++ compiler and version: g++ (GCC) 5.3.0; - SU2 Version: latest develop",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1112
https://github.com/su2code/SU2/issues/1112:1161,Deployability,release,release,1161,"**Describe the bug**; In PR #1105 an `isnan(SU2_TYPE::GetValue(monitor))` check was introduced. I get a compiler error (serial build, no AD DD involved) `call of overload isnan(souble&) is ambiguos` so the complier is probably confused about the return type of `SU2_TYPE::GetValue(monitor)` which is `passivedouble` which itself is hardcoded to be `double` in `datatype_structure.hpp`. Or sth else is happening idk. ![image](https://user-images.githubusercontent.com/31306376/99810957-c5b9f100-2b44-11eb-80e6-b58ce4277bd2.png). I only have the problem with gcc5.3.0. On the same system I have an unsupported gcc7.4.0 that works. My private machine with gcc10.2.0 works fine as well. So I guess it is a specific compiler problem. In my I hit the :keyboard: a few times without actually knowing what I am doing:; - use `isnan(monitor)` ... same error; - use `isnan(static_cast<double>(monitor))` ... same error; - use `isnan(static_cast<double>(SU2_TYPE::GetValue(monitor)))` ... same error; - changed the return type of `GetValue` to `double` ...same error. I guess this problem is really specific to my setup. gcc5.3.0 is old but not grandpa kinda old with the release dec 2015 ... well ok maybe it is :older_man: ; I would be happy with some suggestions what to try out maybe, also if I misinterpret the error a pointer in the right direction would help. If @pcarruscag could have a quick look that would be great. . Thanks and warm regards, Tobi. **To Reproduce**; You probably cant without an old enough compiler. **Desktop (please complete the following information):**; - OS: RHES 7.6; - C++ compiler and version: g++ (GCC) 5.3.0; - SU2 Version: latest develop",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1112
https://github.com/su2code/SU2/issues/1112:63,Energy Efficiency,monitor,monitor,63,"**Describe the bug**; In PR #1105 an `isnan(SU2_TYPE::GetValue(monitor))` check was introduced. I get a compiler error (serial build, no AD DD involved) `call of overload isnan(souble&) is ambiguos` so the complier is probably confused about the return type of `SU2_TYPE::GetValue(monitor)` which is `passivedouble` which itself is hardcoded to be `double` in `datatype_structure.hpp`. Or sth else is happening idk. ![image](https://user-images.githubusercontent.com/31306376/99810957-c5b9f100-2b44-11eb-80e6-b58ce4277bd2.png). I only have the problem with gcc5.3.0. On the same system I have an unsupported gcc7.4.0 that works. My private machine with gcc10.2.0 works fine as well. So I guess it is a specific compiler problem. In my I hit the :keyboard: a few times without actually knowing what I am doing:; - use `isnan(monitor)` ... same error; - use `isnan(static_cast<double>(monitor))` ... same error; - use `isnan(static_cast<double>(SU2_TYPE::GetValue(monitor)))` ... same error; - changed the return type of `GetValue` to `double` ...same error. I guess this problem is really specific to my setup. gcc5.3.0 is old but not grandpa kinda old with the release dec 2015 ... well ok maybe it is :older_man: ; I would be happy with some suggestions what to try out maybe, also if I misinterpret the error a pointer in the right direction would help. If @pcarruscag could have a quick look that would be great. . Thanks and warm regards, Tobi. **To Reproduce**; You probably cant without an old enough compiler. **Desktop (please complete the following information):**; - OS: RHES 7.6; - C++ compiler and version: g++ (GCC) 5.3.0; - SU2 Version: latest develop",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1112
https://github.com/su2code/SU2/issues/1112:281,Energy Efficiency,monitor,monitor,281,"**Describe the bug**; In PR #1105 an `isnan(SU2_TYPE::GetValue(monitor))` check was introduced. I get a compiler error (serial build, no AD DD involved) `call of overload isnan(souble&) is ambiguos` so the complier is probably confused about the return type of `SU2_TYPE::GetValue(monitor)` which is `passivedouble` which itself is hardcoded to be `double` in `datatype_structure.hpp`. Or sth else is happening idk. ![image](https://user-images.githubusercontent.com/31306376/99810957-c5b9f100-2b44-11eb-80e6-b58ce4277bd2.png). I only have the problem with gcc5.3.0. On the same system I have an unsupported gcc7.4.0 that works. My private machine with gcc10.2.0 works fine as well. So I guess it is a specific compiler problem. In my I hit the :keyboard: a few times without actually knowing what I am doing:; - use `isnan(monitor)` ... same error; - use `isnan(static_cast<double>(monitor))` ... same error; - use `isnan(static_cast<double>(SU2_TYPE::GetValue(monitor)))` ... same error; - changed the return type of `GetValue` to `double` ...same error. I guess this problem is really specific to my setup. gcc5.3.0 is old but not grandpa kinda old with the release dec 2015 ... well ok maybe it is :older_man: ; I would be happy with some suggestions what to try out maybe, also if I misinterpret the error a pointer in the right direction would help. If @pcarruscag could have a quick look that would be great. . Thanks and warm regards, Tobi. **To Reproduce**; You probably cant without an old enough compiler. **Desktop (please complete the following information):**; - OS: RHES 7.6; - C++ compiler and version: g++ (GCC) 5.3.0; - SU2 Version: latest develop",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1112
https://github.com/su2code/SU2/issues/1112:824,Energy Efficiency,monitor,monitor,824,"**Describe the bug**; In PR #1105 an `isnan(SU2_TYPE::GetValue(monitor))` check was introduced. I get a compiler error (serial build, no AD DD involved) `call of overload isnan(souble&) is ambiguos` so the complier is probably confused about the return type of `SU2_TYPE::GetValue(monitor)` which is `passivedouble` which itself is hardcoded to be `double` in `datatype_structure.hpp`. Or sth else is happening idk. ![image](https://user-images.githubusercontent.com/31306376/99810957-c5b9f100-2b44-11eb-80e6-b58ce4277bd2.png). I only have the problem with gcc5.3.0. On the same system I have an unsupported gcc7.4.0 that works. My private machine with gcc10.2.0 works fine as well. So I guess it is a specific compiler problem. In my I hit the :keyboard: a few times without actually knowing what I am doing:; - use `isnan(monitor)` ... same error; - use `isnan(static_cast<double>(monitor))` ... same error; - use `isnan(static_cast<double>(SU2_TYPE::GetValue(monitor)))` ... same error; - changed the return type of `GetValue` to `double` ...same error. I guess this problem is really specific to my setup. gcc5.3.0 is old but not grandpa kinda old with the release dec 2015 ... well ok maybe it is :older_man: ; I would be happy with some suggestions what to try out maybe, also if I misinterpret the error a pointer in the right direction would help. If @pcarruscag could have a quick look that would be great. . Thanks and warm regards, Tobi. **To Reproduce**; You probably cant without an old enough compiler. **Desktop (please complete the following information):**; - OS: RHES 7.6; - C++ compiler and version: g++ (GCC) 5.3.0; - SU2 Version: latest develop",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1112
https://github.com/su2code/SU2/issues/1112:883,Energy Efficiency,monitor,monitor,883,"**Describe the bug**; In PR #1105 an `isnan(SU2_TYPE::GetValue(monitor))` check was introduced. I get a compiler error (serial build, no AD DD involved) `call of overload isnan(souble&) is ambiguos` so the complier is probably confused about the return type of `SU2_TYPE::GetValue(monitor)` which is `passivedouble` which itself is hardcoded to be `double` in `datatype_structure.hpp`. Or sth else is happening idk. ![image](https://user-images.githubusercontent.com/31306376/99810957-c5b9f100-2b44-11eb-80e6-b58ce4277bd2.png). I only have the problem with gcc5.3.0. On the same system I have an unsupported gcc7.4.0 that works. My private machine with gcc10.2.0 works fine as well. So I guess it is a specific compiler problem. In my I hit the :keyboard: a few times without actually knowing what I am doing:; - use `isnan(monitor)` ... same error; - use `isnan(static_cast<double>(monitor))` ... same error; - use `isnan(static_cast<double>(SU2_TYPE::GetValue(monitor)))` ... same error; - changed the return type of `GetValue` to `double` ...same error. I guess this problem is really specific to my setup. gcc5.3.0 is old but not grandpa kinda old with the release dec 2015 ... well ok maybe it is :older_man: ; I would be happy with some suggestions what to try out maybe, also if I misinterpret the error a pointer in the right direction would help. If @pcarruscag could have a quick look that would be great. . Thanks and warm regards, Tobi. **To Reproduce**; You probably cant without an old enough compiler. **Desktop (please complete the following information):**; - OS: RHES 7.6; - C++ compiler and version: g++ (GCC) 5.3.0; - SU2 Version: latest develop",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1112
https://github.com/su2code/SU2/issues/1112:962,Energy Efficiency,monitor,monitor,962,"**Describe the bug**; In PR #1105 an `isnan(SU2_TYPE::GetValue(monitor))` check was introduced. I get a compiler error (serial build, no AD DD involved) `call of overload isnan(souble&) is ambiguos` so the complier is probably confused about the return type of `SU2_TYPE::GetValue(monitor)` which is `passivedouble` which itself is hardcoded to be `double` in `datatype_structure.hpp`. Or sth else is happening idk. ![image](https://user-images.githubusercontent.com/31306376/99810957-c5b9f100-2b44-11eb-80e6-b58ce4277bd2.png). I only have the problem with gcc5.3.0. On the same system I have an unsupported gcc7.4.0 that works. My private machine with gcc10.2.0 works fine as well. So I guess it is a specific compiler problem. In my I hit the :keyboard: a few times without actually knowing what I am doing:; - use `isnan(monitor)` ... same error; - use `isnan(static_cast<double>(monitor))` ... same error; - use `isnan(static_cast<double>(SU2_TYPE::GetValue(monitor)))` ... same error; - changed the return type of `GetValue` to `double` ...same error. I guess this problem is really specific to my setup. gcc5.3.0 is old but not grandpa kinda old with the release dec 2015 ... well ok maybe it is :older_man: ; I would be happy with some suggestions what to try out maybe, also if I misinterpret the error a pointer in the right direction would help. If @pcarruscag could have a quick look that would be great. . Thanks and warm regards, Tobi. **To Reproduce**; You probably cant without an old enough compiler. **Desktop (please complete the following information):**; - OS: RHES 7.6; - C++ compiler and version: g++ (GCC) 5.3.0; - SU2 Version: latest develop",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1112
https://github.com/su2code/SU2/pull/1114:87,Availability,down,down,87,This should fix github issues I have experienced on Windows. . It looks like somewhere down the line a blank file named ' ' was added.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1114
https://github.com/su2code/SU2/pull/1115:728,Deployability,update,updated,728,"## Proposed Changes; We need to do something about these 20k lines of legacy.; ATM it is a little hard to see what might need to be ported so I'm trying to remove unused chunks to hopefully make the task easier.; @vdweide it looks like all the legacy output FEM routines are not needed, it that right?. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1115
https://github.com/su2code/SU2/pull/1115:262,Integrability,rout,routines,262,"## Proposed Changes; We need to do something about these 20k lines of legacy.; ATM it is a little hard to see what might need to be ported so I'm trying to remove unused chunks to hopefully make the task easier.; @vdweide it looks like all the legacy output FEM routines are not needed, it that right?. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1115
https://github.com/su2code/SU2/pull/1115:655,Testability,test,test,655,"## Proposed Changes; We need to do something about these 20k lines of legacy.; ATM it is a little hard to see what might need to be ported so I'm trying to remove unused chunks to hopefully make the task easier.; @vdweide it looks like all the legacy output FEM routines are not needed, it that right?. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1115
https://github.com/su2code/SU2/pull/1115:526,Usability,simpl,simply,526,"## Proposed Changes; We need to do something about these 20k lines of legacy.; ATM it is a little hard to see what might need to be ported so I'm trying to remove unused chunks to hopefully make the task easier.; @vdweide it looks like all the legacy output FEM routines are not needed, it that right?. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1115
https://github.com/su2code/SU2/pull/1116:1186,Availability,failure,failure,1186,"Hey there :wave:,. This is an ***automated PR*** to migrate recent [DEP](https://github.com/apps/dep) App users to a new [GitHub action](https://github.com/features/actions) called [Dependent Issues]( https://github.com/marketplace/actions/dependent-issues). . If you received this PR it means you have DEP installed on the organization level (not necessarily enabled on this repository). If you think this is a mistake, I'm sorry. Please close this PR. ### :newspaper: TLDR. * The current DEP app has _been deprecated in favor of the new [Dependent Issues](https://github.com/marketplace/actions/dependent-issues)_ Github Action and it will be removed soon.; * The new Action works the same way the bot did but with additional features/changes:; - Works with both _PRs and issues_ (disabled by default).; - Works with _cross-repository_ dependencies e.g. `microsoft/vscode#999`.; - It _notifies users by writing a comment_ with the list of dependencies and keep their states updated. This is especially useful when having the action enabled for non-PR issues.; - Keywords and the label _can now be customized._; - It sets the state of the head commit on a PR _to `pending` instead of `failure`_ (shows as :orange_circle: instead of a :x: ) when some dependencies are not yet ready (i.e. closed). Breaking changes? Nothing. You can use the action the same way as before. eg. Writing `Depends on #number` or `Depends on owner/repo#number` clause(s) on the PR/issue description. For more info please visit :point_right: https://github.com/marketplace/actions/dependent-issues. ### :bulb: Usage. ![example](https://raw.githubusercontent.com/z0al/dependent-issues/main/demo.png)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1116
https://github.com/su2code/SU2/pull/1116:307,Deployability,install,installed,307,"Hey there :wave:,. This is an ***automated PR*** to migrate recent [DEP](https://github.com/apps/dep) App users to a new [GitHub action](https://github.com/features/actions) called [Dependent Issues]( https://github.com/marketplace/actions/dependent-issues). . If you received this PR it means you have DEP installed on the organization level (not necessarily enabled on this repository). If you think this is a mistake, I'm sorry. Please close this PR. ### :newspaper: TLDR. * The current DEP app has _been deprecated in favor of the new [Dependent Issues](https://github.com/marketplace/actions/dependent-issues)_ Github Action and it will be removed soon.; * The new Action works the same way the bot did but with additional features/changes:; - Works with both _PRs and issues_ (disabled by default).; - Works with _cross-repository_ dependencies e.g. `microsoft/vscode#999`.; - It _notifies users by writing a comment_ with the list of dependencies and keep their states updated. This is especially useful when having the action enabled for non-PR issues.; - Keywords and the label _can now be customized._; - It sets the state of the head commit on a PR _to `pending` instead of `failure`_ (shows as :orange_circle: instead of a :x: ) when some dependencies are not yet ready (i.e. closed). Breaking changes? Nothing. You can use the action the same way as before. eg. Writing `Depends on #number` or `Depends on owner/repo#number` clause(s) on the PR/issue description. For more info please visit :point_right: https://github.com/marketplace/actions/dependent-issues. ### :bulb: Usage. ![example](https://raw.githubusercontent.com/z0al/dependent-issues/main/demo.png)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1116
https://github.com/su2code/SU2/pull/1116:976,Deployability,update,updated,976,"Hey there :wave:,. This is an ***automated PR*** to migrate recent [DEP](https://github.com/apps/dep) App users to a new [GitHub action](https://github.com/features/actions) called [Dependent Issues]( https://github.com/marketplace/actions/dependent-issues). . If you received this PR it means you have DEP installed on the organization level (not necessarily enabled on this repository). If you think this is a mistake, I'm sorry. Please close this PR. ### :newspaper: TLDR. * The current DEP app has _been deprecated in favor of the new [Dependent Issues](https://github.com/marketplace/actions/dependent-issues)_ Github Action and it will be removed soon.; * The new Action works the same way the bot did but with additional features/changes:; - Works with both _PRs and issues_ (disabled by default).; - Works with _cross-repository_ dependencies e.g. `microsoft/vscode#999`.; - It _notifies users by writing a comment_ with the list of dependencies and keep their states updated. This is especially useful when having the action enabled for non-PR issues.; - Keywords and the label _can now be customized._; - It sets the state of the head commit on a PR _to `pending` instead of `failure`_ (shows as :orange_circle: instead of a :x: ) when some dependencies are not yet ready (i.e. closed). Breaking changes? Nothing. You can use the action the same way as before. eg. Writing `Depends on #number` or `Depends on owner/repo#number` clause(s) on the PR/issue description. For more info please visit :point_right: https://github.com/marketplace/actions/dependent-issues. ### :bulb: Usage. ![example](https://raw.githubusercontent.com/z0al/dependent-issues/main/demo.png)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1116
https://github.com/su2code/SU2/pull/1116:182,Integrability,Depend,Dependent,182,"Hey there :wave:,. This is an ***automated PR*** to migrate recent [DEP](https://github.com/apps/dep) App users to a new [GitHub action](https://github.com/features/actions) called [Dependent Issues]( https://github.com/marketplace/actions/dependent-issues). . If you received this PR it means you have DEP installed on the organization level (not necessarily enabled on this repository). If you think this is a mistake, I'm sorry. Please close this PR. ### :newspaper: TLDR. * The current DEP app has _been deprecated in favor of the new [Dependent Issues](https://github.com/marketplace/actions/dependent-issues)_ Github Action and it will be removed soon.; * The new Action works the same way the bot did but with additional features/changes:; - Works with both _PRs and issues_ (disabled by default).; - Works with _cross-repository_ dependencies e.g. `microsoft/vscode#999`.; - It _notifies users by writing a comment_ with the list of dependencies and keep their states updated. This is especially useful when having the action enabled for non-PR issues.; - Keywords and the label _can now be customized._; - It sets the state of the head commit on a PR _to `pending` instead of `failure`_ (shows as :orange_circle: instead of a :x: ) when some dependencies are not yet ready (i.e. closed). Breaking changes? Nothing. You can use the action the same way as before. eg. Writing `Depends on #number` or `Depends on owner/repo#number` clause(s) on the PR/issue description. For more info please visit :point_right: https://github.com/marketplace/actions/dependent-issues. ### :bulb: Usage. ![example](https://raw.githubusercontent.com/z0al/dependent-issues/main/demo.png)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1116
https://github.com/su2code/SU2/pull/1116:240,Integrability,depend,dependent-issues,240,"Hey there :wave:,. This is an ***automated PR*** to migrate recent [DEP](https://github.com/apps/dep) App users to a new [GitHub action](https://github.com/features/actions) called [Dependent Issues]( https://github.com/marketplace/actions/dependent-issues). . If you received this PR it means you have DEP installed on the organization level (not necessarily enabled on this repository). If you think this is a mistake, I'm sorry. Please close this PR. ### :newspaper: TLDR. * The current DEP app has _been deprecated in favor of the new [Dependent Issues](https://github.com/marketplace/actions/dependent-issues)_ Github Action and it will be removed soon.; * The new Action works the same way the bot did but with additional features/changes:; - Works with both _PRs and issues_ (disabled by default).; - Works with _cross-repository_ dependencies e.g. `microsoft/vscode#999`.; - It _notifies users by writing a comment_ with the list of dependencies and keep their states updated. This is especially useful when having the action enabled for non-PR issues.; - Keywords and the label _can now be customized._; - It sets the state of the head commit on a PR _to `pending` instead of `failure`_ (shows as :orange_circle: instead of a :x: ) when some dependencies are not yet ready (i.e. closed). Breaking changes? Nothing. You can use the action the same way as before. eg. Writing `Depends on #number` or `Depends on owner/repo#number` clause(s) on the PR/issue description. For more info please visit :point_right: https://github.com/marketplace/actions/dependent-issues. ### :bulb: Usage. ![example](https://raw.githubusercontent.com/z0al/dependent-issues/main/demo.png)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1116
https://github.com/su2code/SU2/pull/1116:540,Integrability,Depend,Dependent,540,"Hey there :wave:,. This is an ***automated PR*** to migrate recent [DEP](https://github.com/apps/dep) App users to a new [GitHub action](https://github.com/features/actions) called [Dependent Issues]( https://github.com/marketplace/actions/dependent-issues). . If you received this PR it means you have DEP installed on the organization level (not necessarily enabled on this repository). If you think this is a mistake, I'm sorry. Please close this PR. ### :newspaper: TLDR. * The current DEP app has _been deprecated in favor of the new [Dependent Issues](https://github.com/marketplace/actions/dependent-issues)_ Github Action and it will be removed soon.; * The new Action works the same way the bot did but with additional features/changes:; - Works with both _PRs and issues_ (disabled by default).; - Works with _cross-repository_ dependencies e.g. `microsoft/vscode#999`.; - It _notifies users by writing a comment_ with the list of dependencies and keep their states updated. This is especially useful when having the action enabled for non-PR issues.; - Keywords and the label _can now be customized._; - It sets the state of the head commit on a PR _to `pending` instead of `failure`_ (shows as :orange_circle: instead of a :x: ) when some dependencies are not yet ready (i.e. closed). Breaking changes? Nothing. You can use the action the same way as before. eg. Writing `Depends on #number` or `Depends on owner/repo#number` clause(s) on the PR/issue description. For more info please visit :point_right: https://github.com/marketplace/actions/dependent-issues. ### :bulb: Usage. ![example](https://raw.githubusercontent.com/z0al/dependent-issues/main/demo.png)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1116
https://github.com/su2code/SU2/pull/1116:597,Integrability,depend,dependent-issues,597,"Hey there :wave:,. This is an ***automated PR*** to migrate recent [DEP](https://github.com/apps/dep) App users to a new [GitHub action](https://github.com/features/actions) called [Dependent Issues]( https://github.com/marketplace/actions/dependent-issues). . If you received this PR it means you have DEP installed on the organization level (not necessarily enabled on this repository). If you think this is a mistake, I'm sorry. Please close this PR. ### :newspaper: TLDR. * The current DEP app has _been deprecated in favor of the new [Dependent Issues](https://github.com/marketplace/actions/dependent-issues)_ Github Action and it will be removed soon.; * The new Action works the same way the bot did but with additional features/changes:; - Works with both _PRs and issues_ (disabled by default).; - Works with _cross-repository_ dependencies e.g. `microsoft/vscode#999`.; - It _notifies users by writing a comment_ with the list of dependencies and keep their states updated. This is especially useful when having the action enabled for non-PR issues.; - Keywords and the label _can now be customized._; - It sets the state of the head commit on a PR _to `pending` instead of `failure`_ (shows as :orange_circle: instead of a :x: ) when some dependencies are not yet ready (i.e. closed). Breaking changes? Nothing. You can use the action the same way as before. eg. Writing `Depends on #number` or `Depends on owner/repo#number` clause(s) on the PR/issue description. For more info please visit :point_right: https://github.com/marketplace/actions/dependent-issues. ### :bulb: Usage. ![example](https://raw.githubusercontent.com/z0al/dependent-issues/main/demo.png)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1116
https://github.com/su2code/SU2/pull/1116:838,Integrability,depend,dependencies,838,"Hey there :wave:,. This is an ***automated PR*** to migrate recent [DEP](https://github.com/apps/dep) App users to a new [GitHub action](https://github.com/features/actions) called [Dependent Issues]( https://github.com/marketplace/actions/dependent-issues). . If you received this PR it means you have DEP installed on the organization level (not necessarily enabled on this repository). If you think this is a mistake, I'm sorry. Please close this PR. ### :newspaper: TLDR. * The current DEP app has _been deprecated in favor of the new [Dependent Issues](https://github.com/marketplace/actions/dependent-issues)_ Github Action and it will be removed soon.; * The new Action works the same way the bot did but with additional features/changes:; - Works with both _PRs and issues_ (disabled by default).; - Works with _cross-repository_ dependencies e.g. `microsoft/vscode#999`.; - It _notifies users by writing a comment_ with the list of dependencies and keep their states updated. This is especially useful when having the action enabled for non-PR issues.; - Keywords and the label _can now be customized._; - It sets the state of the head commit on a PR _to `pending` instead of `failure`_ (shows as :orange_circle: instead of a :x: ) when some dependencies are not yet ready (i.e. closed). Breaking changes? Nothing. You can use the action the same way as before. eg. Writing `Depends on #number` or `Depends on owner/repo#number` clause(s) on the PR/issue description. For more info please visit :point_right: https://github.com/marketplace/actions/dependent-issues. ### :bulb: Usage. ![example](https://raw.githubusercontent.com/z0al/dependent-issues/main/demo.png)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1116
https://github.com/su2code/SU2/pull/1116:941,Integrability,depend,dependencies,941,"Hey there :wave:,. This is an ***automated PR*** to migrate recent [DEP](https://github.com/apps/dep) App users to a new [GitHub action](https://github.com/features/actions) called [Dependent Issues]( https://github.com/marketplace/actions/dependent-issues). . If you received this PR it means you have DEP installed on the organization level (not necessarily enabled on this repository). If you think this is a mistake, I'm sorry. Please close this PR. ### :newspaper: TLDR. * The current DEP app has _been deprecated in favor of the new [Dependent Issues](https://github.com/marketplace/actions/dependent-issues)_ Github Action and it will be removed soon.; * The new Action works the same way the bot did but with additional features/changes:; - Works with both _PRs and issues_ (disabled by default).; - Works with _cross-repository_ dependencies e.g. `microsoft/vscode#999`.; - It _notifies users by writing a comment_ with the list of dependencies and keep their states updated. This is especially useful when having the action enabled for non-PR issues.; - Keywords and the label _can now be customized._; - It sets the state of the head commit on a PR _to `pending` instead of `failure`_ (shows as :orange_circle: instead of a :x: ) when some dependencies are not yet ready (i.e. closed). Breaking changes? Nothing. You can use the action the same way as before. eg. Writing `Depends on #number` or `Depends on owner/repo#number` clause(s) on the PR/issue description. For more info please visit :point_right: https://github.com/marketplace/actions/dependent-issues. ### :bulb: Usage. ![example](https://raw.githubusercontent.com/z0al/dependent-issues/main/demo.png)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1116
https://github.com/su2code/SU2/pull/1116:1251,Integrability,depend,dependencies,1251,"Hey there :wave:,. This is an ***automated PR*** to migrate recent [DEP](https://github.com/apps/dep) App users to a new [GitHub action](https://github.com/features/actions) called [Dependent Issues]( https://github.com/marketplace/actions/dependent-issues). . If you received this PR it means you have DEP installed on the organization level (not necessarily enabled on this repository). If you think this is a mistake, I'm sorry. Please close this PR. ### :newspaper: TLDR. * The current DEP app has _been deprecated in favor of the new [Dependent Issues](https://github.com/marketplace/actions/dependent-issues)_ Github Action and it will be removed soon.; * The new Action works the same way the bot did but with additional features/changes:; - Works with both _PRs and issues_ (disabled by default).; - Works with _cross-repository_ dependencies e.g. `microsoft/vscode#999`.; - It _notifies users by writing a comment_ with the list of dependencies and keep their states updated. This is especially useful when having the action enabled for non-PR issues.; - Keywords and the label _can now be customized._; - It sets the state of the head commit on a PR _to `pending` instead of `failure`_ (shows as :orange_circle: instead of a :x: ) when some dependencies are not yet ready (i.e. closed). Breaking changes? Nothing. You can use the action the same way as before. eg. Writing `Depends on #number` or `Depends on owner/repo#number` clause(s) on the PR/issue description. For more info please visit :point_right: https://github.com/marketplace/actions/dependent-issues. ### :bulb: Usage. ![example](https://raw.githubusercontent.com/z0al/dependent-issues/main/demo.png)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1116
https://github.com/su2code/SU2/pull/1116:1384,Integrability,Depend,Depends,1384,"Hey there :wave:,. This is an ***automated PR*** to migrate recent [DEP](https://github.com/apps/dep) App users to a new [GitHub action](https://github.com/features/actions) called [Dependent Issues]( https://github.com/marketplace/actions/dependent-issues). . If you received this PR it means you have DEP installed on the organization level (not necessarily enabled on this repository). If you think this is a mistake, I'm sorry. Please close this PR. ### :newspaper: TLDR. * The current DEP app has _been deprecated in favor of the new [Dependent Issues](https://github.com/marketplace/actions/dependent-issues)_ Github Action and it will be removed soon.; * The new Action works the same way the bot did but with additional features/changes:; - Works with both _PRs and issues_ (disabled by default).; - Works with _cross-repository_ dependencies e.g. `microsoft/vscode#999`.; - It _notifies users by writing a comment_ with the list of dependencies and keep their states updated. This is especially useful when having the action enabled for non-PR issues.; - Keywords and the label _can now be customized._; - It sets the state of the head commit on a PR _to `pending` instead of `failure`_ (shows as :orange_circle: instead of a :x: ) when some dependencies are not yet ready (i.e. closed). Breaking changes? Nothing. You can use the action the same way as before. eg. Writing `Depends on #number` or `Depends on owner/repo#number` clause(s) on the PR/issue description. For more info please visit :point_right: https://github.com/marketplace/actions/dependent-issues. ### :bulb: Usage. ![example](https://raw.githubusercontent.com/z0al/dependent-issues/main/demo.png)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1116
https://github.com/su2code/SU2/pull/1116:1408,Integrability,Depend,Depends,1408,"Hey there :wave:,. This is an ***automated PR*** to migrate recent [DEP](https://github.com/apps/dep) App users to a new [GitHub action](https://github.com/features/actions) called [Dependent Issues]( https://github.com/marketplace/actions/dependent-issues). . If you received this PR it means you have DEP installed on the organization level (not necessarily enabled on this repository). If you think this is a mistake, I'm sorry. Please close this PR. ### :newspaper: TLDR. * The current DEP app has _been deprecated in favor of the new [Dependent Issues](https://github.com/marketplace/actions/dependent-issues)_ Github Action and it will be removed soon.; * The new Action works the same way the bot did but with additional features/changes:; - Works with both _PRs and issues_ (disabled by default).; - Works with _cross-repository_ dependencies e.g. `microsoft/vscode#999`.; - It _notifies users by writing a comment_ with the list of dependencies and keep their states updated. This is especially useful when having the action enabled for non-PR issues.; - Keywords and the label _can now be customized._; - It sets the state of the head commit on a PR _to `pending` instead of `failure`_ (shows as :orange_circle: instead of a :x: ) when some dependencies are not yet ready (i.e. closed). Breaking changes? Nothing. You can use the action the same way as before. eg. Writing `Depends on #number` or `Depends on owner/repo#number` clause(s) on the PR/issue description. For more info please visit :point_right: https://github.com/marketplace/actions/dependent-issues. ### :bulb: Usage. ![example](https://raw.githubusercontent.com/z0al/dependent-issues/main/demo.png)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1116
https://github.com/su2code/SU2/pull/1116:1557,Integrability,depend,dependent-issues,1557,"Hey there :wave:,. This is an ***automated PR*** to migrate recent [DEP](https://github.com/apps/dep) App users to a new [GitHub action](https://github.com/features/actions) called [Dependent Issues]( https://github.com/marketplace/actions/dependent-issues). . If you received this PR it means you have DEP installed on the organization level (not necessarily enabled on this repository). If you think this is a mistake, I'm sorry. Please close this PR. ### :newspaper: TLDR. * The current DEP app has _been deprecated in favor of the new [Dependent Issues](https://github.com/marketplace/actions/dependent-issues)_ Github Action and it will be removed soon.; * The new Action works the same way the bot did but with additional features/changes:; - Works with both _PRs and issues_ (disabled by default).; - Works with _cross-repository_ dependencies e.g. `microsoft/vscode#999`.; - It _notifies users by writing a comment_ with the list of dependencies and keep their states updated. This is especially useful when having the action enabled for non-PR issues.; - Keywords and the label _can now be customized._; - It sets the state of the head commit on a PR _to `pending` instead of `failure`_ (shows as :orange_circle: instead of a :x: ) when some dependencies are not yet ready (i.e. closed). Breaking changes? Nothing. You can use the action the same way as before. eg. Writing `Depends on #number` or `Depends on owner/repo#number` clause(s) on the PR/issue description. For more info please visit :point_right: https://github.com/marketplace/actions/dependent-issues. ### :bulb: Usage. ![example](https://raw.githubusercontent.com/z0al/dependent-issues/main/demo.png)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1116
https://github.com/su2code/SU2/pull/1116:1643,Integrability,depend,dependent-issues,1643,"Hey there :wave:,. This is an ***automated PR*** to migrate recent [DEP](https://github.com/apps/dep) App users to a new [GitHub action](https://github.com/features/actions) called [Dependent Issues]( https://github.com/marketplace/actions/dependent-issues). . If you received this PR it means you have DEP installed on the organization level (not necessarily enabled on this repository). If you think this is a mistake, I'm sorry. Please close this PR. ### :newspaper: TLDR. * The current DEP app has _been deprecated in favor of the new [Dependent Issues](https://github.com/marketplace/actions/dependent-issues)_ Github Action and it will be removed soon.; * The new Action works the same way the bot did but with additional features/changes:; - Works with both _PRs and issues_ (disabled by default).; - Works with _cross-repository_ dependencies e.g. `microsoft/vscode#999`.; - It _notifies users by writing a comment_ with the list of dependencies and keep their states updated. This is especially useful when having the action enabled for non-PR issues.; - Keywords and the label _can now be customized._; - It sets the state of the head commit on a PR _to `pending` instead of `failure`_ (shows as :orange_circle: instead of a :x: ) when some dependencies are not yet ready (i.e. closed). Breaking changes? Nothing. You can use the action the same way as before. eg. Writing `Depends on #number` or `Depends on owner/repo#number` clause(s) on the PR/issue description. For more info please visit :point_right: https://github.com/marketplace/actions/dependent-issues. ### :bulb: Usage. ![example](https://raw.githubusercontent.com/z0al/dependent-issues/main/demo.png)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1116
https://github.com/su2code/SU2/pull/1117:1317,Deployability,update,updated,1317,"This pull request is another in a series of pull requests to merge developments of the NEMO branch into develop without a massive PR. . This pull requests addresses:; -Fixes non-operable schemes (ROE, MSW, LAX); -AUSMPWPLUS remains functional but extremely unstable => flag to make unusable.; -Removes config->GetGamma() in with an appropriate function; -Renames 'Get' functions to 'Compute' where applicable. Somethings that are in the works/on the radar:; -Migrate toward Geometry:ToolBox functions (Remove GetBasis function); -Centralize the INDEX information; . ## Related Work; This is related to feature_NEMO and previous pull requests (#1111) . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1117
https://github.com/su2code/SU2/pull/1117:302,Modifiability,config,config,302,"This pull request is another in a series of pull requests to merge developments of the NEMO branch into develop without a massive PR. . This pull requests addresses:; -Fixes non-operable schemes (ROE, MSW, LAX); -AUSMPWPLUS remains functional but extremely unstable => flag to make unusable.; -Removes config->GetGamma() in with an appropriate function; -Renames 'Get' functions to 'Compute' where applicable. Somethings that are in the works/on the radar:; -Migrate toward Geometry:ToolBox functions (Remove GetBasis function); -Centralize the INDEX information; . ## Related Work; This is related to feature_NEMO and previous pull requests (#1111) . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1117
https://github.com/su2code/SU2/pull/1117:1244,Testability,test,test,1244,"This pull request is another in a series of pull requests to merge developments of the NEMO branch into develop without a massive PR. . This pull requests addresses:; -Fixes non-operable schemes (ROE, MSW, LAX); -AUSMPWPLUS remains functional but extremely unstable => flag to make unusable.; -Removes config->GetGamma() in with an appropriate function; -Renames 'Get' functions to 'Compute' where applicable. Somethings that are in the works/on the radar:; -Migrate toward Geometry:ToolBox functions (Remove GetBasis function); -Centralize the INDEX information; . ## Related Work; This is related to feature_NEMO and previous pull requests (#1111) . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1117
https://github.com/su2code/SU2/pull/1117:824,Usability,guid,guide,824,"This pull request is another in a series of pull requests to merge developments of the NEMO branch into develop without a massive PR. . This pull requests addresses:; -Fixes non-operable schemes (ROE, MSW, LAX); -AUSMPWPLUS remains functional but extremely unstable => flag to make unusable.; -Removes config->GetGamma() in with an appropriate function; -Renames 'Get' functions to 'Compute' where applicable. Somethings that are in the works/on the radar:; -Migrate toward Geometry:ToolBox functions (Remove GetBasis function); -Centralize the INDEX information; . ## Related Work; This is related to feature_NEMO and previous pull requests (#1111) . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1117
https://github.com/su2code/SU2/pull/1117:1115,Usability,simpl,simply,1115,"This pull request is another in a series of pull requests to merge developments of the NEMO branch into develop without a massive PR. . This pull requests addresses:; -Fixes non-operable schemes (ROE, MSW, LAX); -AUSMPWPLUS remains functional but extremely unstable => flag to make unusable.; -Removes config->GetGamma() in with an appropriate function; -Renames 'Get' functions to 'Compute' where applicable. Somethings that are in the works/on the radar:; -Migrate toward Geometry:ToolBox functions (Remove GetBasis function); -Centralize the INDEX information; . ## Related Work; This is related to feature_NEMO and previous pull requests (#1111) . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1117
https://github.com/su2code/SU2/pull/1120:1243,Deployability,update,updated,1243,"## Proposed Changes; This PR adds Wall Model LES (and also Wall Resolved LES) capabilities to SU2. Several wall models were included, including the Equilibrium Algebraic and Adverse Pressure Gradient Wall Models. The Vreman and WALE with constant model coefficients are used to model the subgrid-scales but others SGS models can be easily added.; It is worth noting that the exchange location interpolation for the wall model inputs is not included here (see feature_WallModelLES branch). Thus, the wall model will use the information of the 1st grid point off the wall.; ; ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X ] My contribution is commented and consistent with SU2 style.; - [X ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1120
https://github.com/su2code/SU2/pull/1120:1170,Testability,test,test,1170,"## Proposed Changes; This PR adds Wall Model LES (and also Wall Resolved LES) capabilities to SU2. Several wall models were included, including the Equilibrium Algebraic and Adverse Pressure Gradient Wall Models. The Vreman and WALE with constant model coefficients are used to model the subgrid-scales but others SGS models can be easily added.; It is worth noting that the exchange location interpolation for the wall model inputs is not included here (see feature_WallModelLES branch). Thus, the wall model will use the information of the 1st grid point off the wall.; ; ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X ] My contribution is commented and consistent with SU2 style.; - [X ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1120
https://github.com/su2code/SU2/pull/1120:746,Usability,guid,guide,746,"## Proposed Changes; This PR adds Wall Model LES (and also Wall Resolved LES) capabilities to SU2. Several wall models were included, including the Equilibrium Algebraic and Adverse Pressure Gradient Wall Models. The Vreman and WALE with constant model coefficients are used to model the subgrid-scales but others SGS models can be easily added.; It is worth noting that the exchange location interpolation for the wall model inputs is not included here (see feature_WallModelLES branch). Thus, the wall model will use the information of the 1st grid point off the wall.; ; ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X ] My contribution is commented and consistent with SU2 style.; - [X ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1120
https://github.com/su2code/SU2/pull/1120:1039,Usability,simpl,simply,1039,"## Proposed Changes; This PR adds Wall Model LES (and also Wall Resolved LES) capabilities to SU2. Several wall models were included, including the Equilibrium Algebraic and Adverse Pressure Gradient Wall Models. The Vreman and WALE with constant model coefficients are used to model the subgrid-scales but others SGS models can be easily added.; It is worth noting that the exchange location interpolation for the wall model inputs is not included here (see feature_WallModelLES branch). Thus, the wall model will use the information of the 1st grid point off the wall.; ; ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X ] My contribution is commented and consistent with SU2 style.; - [X ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1120
https://github.com/su2code/SU2/issues/1122:612,Availability,avail,avail,612,"My goal is to have a simple pressure pulse propagate within the domain to ensure my setup is not wrong (boundary conditions, axisymmetry etc). The procedure I follow:; - I set the reference conditions to a quiscent flow condition. ; - Then have SU2 write a RESTART_ASCII file.; - I then modify this ASCII file to now have a Gaussian pressure pulse at the domain center.; - Next, I ask SU2 to read this restart_file.csv as the solution_file.; - However, the very next iteration from SU2 using this initial condition (IC) is a quiescent one. ; - I have tried different solvers and time steps and CFL numbers to no avail. ; - I suspect my configuration file is time stepping away from the pulse IC so quickly that there is no evidence of it in the next time steps I have SU2 write. . Please share any thought you might have regarding the issue my Config file is attached to this comment. . [AcousticPulseTS.txt](https://github.com/su2code/SU2/files/5643539/AcousticPulseTS.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1122
https://github.com/su2code/SU2/issues/1122:636,Deployability,configurat,configuration,636,"My goal is to have a simple pressure pulse propagate within the domain to ensure my setup is not wrong (boundary conditions, axisymmetry etc). The procedure I follow:; - I set the reference conditions to a quiscent flow condition. ; - Then have SU2 write a RESTART_ASCII file.; - I then modify this ASCII file to now have a Gaussian pressure pulse at the domain center.; - Next, I ask SU2 to read this restart_file.csv as the solution_file.; - However, the very next iteration from SU2 using this initial condition (IC) is a quiescent one. ; - I have tried different solvers and time steps and CFL numbers to no avail. ; - I suspect my configuration file is time stepping away from the pulse IC so quickly that there is no evidence of it in the next time steps I have SU2 write. . Please share any thought you might have regarding the issue my Config file is attached to this comment. . [AcousticPulseTS.txt](https://github.com/su2code/SU2/files/5643539/AcousticPulseTS.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1122
https://github.com/su2code/SU2/issues/1122:636,Modifiability,config,configuration,636,"My goal is to have a simple pressure pulse propagate within the domain to ensure my setup is not wrong (boundary conditions, axisymmetry etc). The procedure I follow:; - I set the reference conditions to a quiscent flow condition. ; - Then have SU2 write a RESTART_ASCII file.; - I then modify this ASCII file to now have a Gaussian pressure pulse at the domain center.; - Next, I ask SU2 to read this restart_file.csv as the solution_file.; - However, the very next iteration from SU2 using this initial condition (IC) is a quiescent one. ; - I have tried different solvers and time steps and CFL numbers to no avail. ; - I suspect my configuration file is time stepping away from the pulse IC so quickly that there is no evidence of it in the next time steps I have SU2 write. . Please share any thought you might have regarding the issue my Config file is attached to this comment. . [AcousticPulseTS.txt](https://github.com/su2code/SU2/files/5643539/AcousticPulseTS.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1122
https://github.com/su2code/SU2/issues/1122:844,Modifiability,Config,Config,844,"My goal is to have a simple pressure pulse propagate within the domain to ensure my setup is not wrong (boundary conditions, axisymmetry etc). The procedure I follow:; - I set the reference conditions to a quiscent flow condition. ; - Then have SU2 write a RESTART_ASCII file.; - I then modify this ASCII file to now have a Gaussian pressure pulse at the domain center.; - Next, I ask SU2 to read this restart_file.csv as the solution_file.; - However, the very next iteration from SU2 using this initial condition (IC) is a quiescent one. ; - I have tried different solvers and time steps and CFL numbers to no avail. ; - I suspect my configuration file is time stepping away from the pulse IC so quickly that there is no evidence of it in the next time steps I have SU2 write. . Please share any thought you might have regarding the issue my Config file is attached to this comment. . [AcousticPulseTS.txt](https://github.com/su2code/SU2/files/5643539/AcousticPulseTS.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1122
https://github.com/su2code/SU2/issues/1122:21,Usability,simpl,simple,21,"My goal is to have a simple pressure pulse propagate within the domain to ensure my setup is not wrong (boundary conditions, axisymmetry etc). The procedure I follow:; - I set the reference conditions to a quiscent flow condition. ; - Then have SU2 write a RESTART_ASCII file.; - I then modify this ASCII file to now have a Gaussian pressure pulse at the domain center.; - Next, I ask SU2 to read this restart_file.csv as the solution_file.; - However, the very next iteration from SU2 using this initial condition (IC) is a quiescent one. ; - I have tried different solvers and time steps and CFL numbers to no avail. ; - I suspect my configuration file is time stepping away from the pulse IC so quickly that there is no evidence of it in the next time steps I have SU2 write. . Please share any thought you might have regarding the issue my Config file is attached to this comment. . [AcousticPulseTS.txt](https://github.com/su2code/SU2/files/5643539/AcousticPulseTS.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1122
https://github.com/su2code/SU2/issues/1123:230,Availability,down,down,230,"**Describe the bug**; Hi, ; 1. compile SU2 with debug flags and autodiff; 2. run /Testcases/coupled_cht/incomp_2d with SU2_CFD_AD; 3. segfault coming from `partial_sort` in CNearestNeighbor.cpp ll. 142-147. The actual segfault is down in the stl std::__adjust_heap 🤷 . The problem occurs with another CHT problem of mine but I suspect it is a related to multizone in general. The segfault does not occur when using `KIND_INTERPOLATION= RADIAL_BASIS_FUNCTION`. As I used only gcc I am not sure whether it might be an stl bug (or feature because the code is wrong) so trying with clang or intel might be worth a shot. I know I had this issue already quite some time ago but forgot about it. . If you know sth about it plz let me know 📣 👂 . **To Reproduce**; described above. **Desktop (please complete the following information):**; - OS: Manjaro and RHLES; - C++ compiler and version: gcc 5.3.0 and 10.2.0; - MPI implementation and version: 3.1.6 and 4.0.4; - SU2 Version: latest develop",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1123
https://github.com/su2code/SU2/issues/1123:82,Testability,Test,Testcases,82,"**Describe the bug**; Hi, ; 1. compile SU2 with debug flags and autodiff; 2. run /Testcases/coupled_cht/incomp_2d with SU2_CFD_AD; 3. segfault coming from `partial_sort` in CNearestNeighbor.cpp ll. 142-147. The actual segfault is down in the stl std::__adjust_heap 🤷 . The problem occurs with another CHT problem of mine but I suspect it is a related to multizone in general. The segfault does not occur when using `KIND_INTERPOLATION= RADIAL_BASIS_FUNCTION`. As I used only gcc I am not sure whether it might be an stl bug (or feature because the code is wrong) so trying with clang or intel might be worth a shot. I know I had this issue already quite some time ago but forgot about it. . If you know sth about it plz let me know 📣 👂 . **To Reproduce**; described above. **Desktop (please complete the following information):**; - OS: Manjaro and RHLES; - C++ compiler and version: gcc 5.3.0 and 10.2.0; - MPI implementation and version: 3.1.6 and 4.0.4; - SU2 Version: latest develop",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1123
https://github.com/su2code/SU2/pull/1124:119,Deployability,update,update,119,"## Proposed changes. Dear all,. I am very new to collaboration on a open source project, but I have been working on an update for the FSI computation in python that I think may be useful also for other researcher. Would you mind giving me a feedback about the modifications?. In few words, I have updated the python interface for fluid structure interaction to the new version of SU2, including the new driver, the new mesh deformation methods and few other modifications in the python scripts. It works with python3. As far as the C++ code is concerned, I only added the possibility to separate the symmetry boundary conditions for the fluid solver from the ones of the mesh solver. There is an explanation of this modification in the ReadMe file in SU2_PY/FSI_tools, together with an example of application. . The interface is still general and new structural solvers can be coupled by adding it to the fsi_computation.py file. With the present pull request I only include one structural solver, which provides a coupling with the commercial code Nastran. I added ReadMe files to explain in detail all the modifications and also the keywords to be used in the config files. Finally, there is also a complete test case where the flutter of a flat plate is studied. I am looking forward for your comments. Nicola. ## PR checklist. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1124
https://github.com/su2code/SU2/pull/1124:297,Deployability,update,updated,297,"## Proposed changes. Dear all,. I am very new to collaboration on a open source project, but I have been working on an update for the FSI computation in python that I think may be useful also for other researcher. Would you mind giving me a feedback about the modifications?. In few words, I have updated the python interface for fluid structure interaction to the new version of SU2, including the new driver, the new mesh deformation methods and few other modifications in the python scripts. It works with python3. As far as the C++ code is concerned, I only added the possibility to separate the symmetry boundary conditions for the fluid solver from the ones of the mesh solver. There is an explanation of this modification in the ReadMe file in SU2_PY/FSI_tools, together with an example of application. . The interface is still general and new structural solvers can be coupled by adding it to the fsi_computation.py file. With the present pull request I only include one structural solver, which provides a coupling with the commercial code Nastran. I added ReadMe files to explain in detail all the modifications and also the keywords to be used in the config files. Finally, there is also a complete test case where the flutter of a flat plate is studied. I am looking forward for your comments. Nicola. ## PR checklist. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1124
https://github.com/su2code/SU2/pull/1124:1739,Deployability,update,updated,1739,"## Proposed changes. Dear all,. I am very new to collaboration on a open source project, but I have been working on an update for the FSI computation in python that I think may be useful also for other researcher. Would you mind giving me a feedback about the modifications?. In few words, I have updated the python interface for fluid structure interaction to the new version of SU2, including the new driver, the new mesh deformation methods and few other modifications in the python scripts. It works with python3. As far as the C++ code is concerned, I only added the possibility to separate the symmetry boundary conditions for the fluid solver from the ones of the mesh solver. There is an explanation of this modification in the ReadMe file in SU2_PY/FSI_tools, together with an example of application. . The interface is still general and new structural solvers can be coupled by adding it to the fsi_computation.py file. With the present pull request I only include one structural solver, which provides a coupling with the commercial code Nastran. I added ReadMe files to explain in detail all the modifications and also the keywords to be used in the config files. Finally, there is also a complete test case where the flutter of a flat plate is studied. I am looking forward for your comments. Nicola. ## PR checklist. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1124
https://github.com/su2code/SU2/pull/1124:316,Integrability,interface,interface,316,"## Proposed changes. Dear all,. I am very new to collaboration on a open source project, but I have been working on an update for the FSI computation in python that I think may be useful also for other researcher. Would you mind giving me a feedback about the modifications?. In few words, I have updated the python interface for fluid structure interaction to the new version of SU2, including the new driver, the new mesh deformation methods and few other modifications in the python scripts. It works with python3. As far as the C++ code is concerned, I only added the possibility to separate the symmetry boundary conditions for the fluid solver from the ones of the mesh solver. There is an explanation of this modification in the ReadMe file in SU2_PY/FSI_tools, together with an example of application. . The interface is still general and new structural solvers can be coupled by adding it to the fsi_computation.py file. With the present pull request I only include one structural solver, which provides a coupling with the commercial code Nastran. I added ReadMe files to explain in detail all the modifications and also the keywords to be used in the config files. Finally, there is also a complete test case where the flutter of a flat plate is studied. I am looking forward for your comments. Nicola. ## PR checklist. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1124
https://github.com/su2code/SU2/pull/1124:816,Integrability,interface,interface,816,"## Proposed changes. Dear all,. I am very new to collaboration on a open source project, but I have been working on an update for the FSI computation in python that I think may be useful also for other researcher. Would you mind giving me a feedback about the modifications?. In few words, I have updated the python interface for fluid structure interaction to the new version of SU2, including the new driver, the new mesh deformation methods and few other modifications in the python scripts. It works with python3. As far as the C++ code is concerned, I only added the possibility to separate the symmetry boundary conditions for the fluid solver from the ones of the mesh solver. There is an explanation of this modification in the ReadMe file in SU2_PY/FSI_tools, together with an example of application. . The interface is still general and new structural solvers can be coupled by adding it to the fsi_computation.py file. With the present pull request I only include one structural solver, which provides a coupling with the commercial code Nastran. I added ReadMe files to explain in detail all the modifications and also the keywords to be used in the config files. Finally, there is also a complete test case where the flutter of a flat plate is studied. I am looking forward for your comments. Nicola. ## PR checklist. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1124
https://github.com/su2code/SU2/pull/1124:1015,Modifiability,coupling,coupling,1015,"## Proposed changes. Dear all,. I am very new to collaboration on a open source project, but I have been working on an update for the FSI computation in python that I think may be useful also for other researcher. Would you mind giving me a feedback about the modifications?. In few words, I have updated the python interface for fluid structure interaction to the new version of SU2, including the new driver, the new mesh deformation methods and few other modifications in the python scripts. It works with python3. As far as the C++ code is concerned, I only added the possibility to separate the symmetry boundary conditions for the fluid solver from the ones of the mesh solver. There is an explanation of this modification in the ReadMe file in SU2_PY/FSI_tools, together with an example of application. . The interface is still general and new structural solvers can be coupled by adding it to the fsi_computation.py file. With the present pull request I only include one structural solver, which provides a coupling with the commercial code Nastran. I added ReadMe files to explain in detail all the modifications and also the keywords to be used in the config files. Finally, there is also a complete test case where the flutter of a flat plate is studied. I am looking forward for your comments. Nicola. ## PR checklist. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1124
https://github.com/su2code/SU2/pull/1124:1162,Modifiability,config,config,1162,"## Proposed changes. Dear all,. I am very new to collaboration on a open source project, but I have been working on an update for the FSI computation in python that I think may be useful also for other researcher. Would you mind giving me a feedback about the modifications?. In few words, I have updated the python interface for fluid structure interaction to the new version of SU2, including the new driver, the new mesh deformation methods and few other modifications in the python scripts. It works with python3. As far as the C++ code is concerned, I only added the possibility to separate the symmetry boundary conditions for the fluid solver from the ones of the mesh solver. There is an explanation of this modification in the ReadMe file in SU2_PY/FSI_tools, together with an example of application. . The interface is still general and new structural solvers can be coupled by adding it to the fsi_computation.py file. With the present pull request I only include one structural solver, which provides a coupling with the commercial code Nastran. I added ReadMe files to explain in detail all the modifications and also the keywords to be used in the config files. Finally, there is also a complete test case where the flutter of a flat plate is studied. I am looking forward for your comments. Nicola. ## PR checklist. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1124
https://github.com/su2code/SU2/pull/1124:1210,Testability,test,test,1210,"## Proposed changes. Dear all,. I am very new to collaboration on a open source project, but I have been working on an update for the FSI computation in python that I think may be useful also for other researcher. Would you mind giving me a feedback about the modifications?. In few words, I have updated the python interface for fluid structure interaction to the new version of SU2, including the new driver, the new mesh deformation methods and few other modifications in the python scripts. It works with python3. As far as the C++ code is concerned, I only added the possibility to separate the symmetry boundary conditions for the fluid solver from the ones of the mesh solver. There is an explanation of this modification in the ReadMe file in SU2_PY/FSI_tools, together with an example of application. . The interface is still general and new structural solvers can be coupled by adding it to the fsi_computation.py file. With the present pull request I only include one structural solver, which provides a coupling with the commercial code Nastran. I added ReadMe files to explain in detail all the modifications and also the keywords to be used in the config files. Finally, there is also a complete test case where the flutter of a flat plate is studied. I am looking forward for your comments. Nicola. ## PR checklist. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1124
https://github.com/su2code/SU2/pull/1124:1666,Testability,test,test,1666,"## Proposed changes. Dear all,. I am very new to collaboration on a open source project, but I have been working on an update for the FSI computation in python that I think may be useful also for other researcher. Would you mind giving me a feedback about the modifications?. In few words, I have updated the python interface for fluid structure interaction to the new version of SU2, including the new driver, the new mesh deformation methods and few other modifications in the python scripts. It works with python3. As far as the C++ code is concerned, I only added the possibility to separate the symmetry boundary conditions for the fluid solver from the ones of the mesh solver. There is an explanation of this modification in the ReadMe file in SU2_PY/FSI_tools, together with an example of application. . The interface is still general and new structural solvers can be coupled by adding it to the fsi_computation.py file. With the present pull request I only include one structural solver, which provides a coupling with the commercial code Nastran. I added ReadMe files to explain in detail all the modifications and also the keywords to be used in the config files. Finally, there is also a complete test case where the flutter of a flat plate is studied. I am looking forward for your comments. Nicola. ## PR checklist. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1124
https://github.com/su2code/SU2/pull/1124:241,Usability,feedback,feedback,241,"## Proposed changes. Dear all,. I am very new to collaboration on a open source project, but I have been working on an update for the FSI computation in python that I think may be useful also for other researcher. Would you mind giving me a feedback about the modifications?. In few words, I have updated the python interface for fluid structure interaction to the new version of SU2, including the new driver, the new mesh deformation methods and few other modifications in the python scripts. It works with python3. As far as the C++ code is concerned, I only added the possibility to separate the symmetry boundary conditions for the fluid solver from the ones of the mesh solver. There is an explanation of this modification in the ReadMe file in SU2_PY/FSI_tools, together with an example of application. . The interface is still general and new structural solvers can be coupled by adding it to the fsi_computation.py file. With the present pull request I only include one structural solver, which provides a coupling with the commercial code Nastran. I added ReadMe files to explain in detail all the modifications and also the keywords to be used in the config files. Finally, there is also a complete test case where the flutter of a flat plate is studied. I am looking forward for your comments. Nicola. ## PR checklist. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1124
https://github.com/su2code/SU2/pull/1124:1537,Usability,simpl,simply,1537,"## Proposed changes. Dear all,. I am very new to collaboration on a open source project, but I have been working on an update for the FSI computation in python that I think may be useful also for other researcher. Would you mind giving me a feedback about the modifications?. In few words, I have updated the python interface for fluid structure interaction to the new version of SU2, including the new driver, the new mesh deformation methods and few other modifications in the python scripts. It works with python3. As far as the C++ code is concerned, I only added the possibility to separate the symmetry boundary conditions for the fluid solver from the ones of the mesh solver. There is an explanation of this modification in the ReadMe file in SU2_PY/FSI_tools, together with an example of application. . The interface is still general and new structural solvers can be coupled by adding it to the fsi_computation.py file. With the present pull request I only include one structural solver, which provides a coupling with the commercial code Nastran. I added ReadMe files to explain in detail all the modifications and also the keywords to be used in the config files. Finally, there is also a complete test case where the flutter of a flat plate is studied. I am looking forward for your comments. Nicola. ## PR checklist. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1124
https://github.com/su2code/SU2/issues/1125:1391,Deployability,release,release,1391,"**Describe the bug**; Hello to everyone,; my research group and I found some differences in the computation of the skin friction coefficient between the JST and ROE schemes near the symmetry plane.; The difference is that when using the JST scheme, there is a gradient of the skin friction coefficient at the symmetry plane.; I expect that on the symmetry plane there would be no gradient. This issue is present only for the skin friction coefficient.; We found this difference for a straight wing, but we reproduced the same issue for the SU2 test case OneraM6.; <img src=""https://user-images.githubusercontent.com/53580993/101330251-ab855000-3872-11eb-90df-561ddfe3ed38.png"" width=""400"" height=""400""> <img src=""https://user-images.githubusercontent.com/53580993/101330317-be982000-3872-11eb-9b55-4fa87e55bef6.png"" width=""400"" height=""400"">. For the case of our straight wing, maybe it could be more clear, so here is the comparison for our case.; <img src=""https://user-images.githubusercontent.com/53580993/101330692-36fee100-3873-11eb-8638-827bc9008128.png"" width=""400"" height=""400""> <img src=""https://user-images.githubusercontent.com/53580993/101330706-3bc39500-3873-11eb-8d35-bc28fe432ffc.png"" width=""400"" height=""400"">. I think that there could be a problem on the symmetry plane boundary condition when using the JST scheme.; This issue is present since SU2 V6.2.0 until the latest release 7.0.8.; Thank you in advance for your help. **To Reproduce**; To reproduce the problem you can use the OneraM6 test case in the TestCases folder, just changing the scheme between ROE and JST. **Desktop (please complete the following information):**; - OS: Linux (Ubuntu 20.04.1 LTS); - C++ compiler and version: gcc 9.3.0; - MPI implementation and version: mpich 3.3.2; - SU2 Version: from 6.2.0 to 7.0.8",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1125
https://github.com/su2code/SU2/issues/1125:544,Testability,test,test,544,"**Describe the bug**; Hello to everyone,; my research group and I found some differences in the computation of the skin friction coefficient between the JST and ROE schemes near the symmetry plane.; The difference is that when using the JST scheme, there is a gradient of the skin friction coefficient at the symmetry plane.; I expect that on the symmetry plane there would be no gradient. This issue is present only for the skin friction coefficient.; We found this difference for a straight wing, but we reproduced the same issue for the SU2 test case OneraM6.; <img src=""https://user-images.githubusercontent.com/53580993/101330251-ab855000-3872-11eb-90df-561ddfe3ed38.png"" width=""400"" height=""400""> <img src=""https://user-images.githubusercontent.com/53580993/101330317-be982000-3872-11eb-9b55-4fa87e55bef6.png"" width=""400"" height=""400"">. For the case of our straight wing, maybe it could be more clear, so here is the comparison for our case.; <img src=""https://user-images.githubusercontent.com/53580993/101330692-36fee100-3873-11eb-8638-827bc9008128.png"" width=""400"" height=""400""> <img src=""https://user-images.githubusercontent.com/53580993/101330706-3bc39500-3873-11eb-8d35-bc28fe432ffc.png"" width=""400"" height=""400"">. I think that there could be a problem on the symmetry plane boundary condition when using the JST scheme.; This issue is present since SU2 V6.2.0 until the latest release 7.0.8.; Thank you in advance for your help. **To Reproduce**; To reproduce the problem you can use the OneraM6 test case in the TestCases folder, just changing the scheme between ROE and JST. **Desktop (please complete the following information):**; - OS: Linux (Ubuntu 20.04.1 LTS); - C++ compiler and version: gcc 9.3.0; - MPI implementation and version: mpich 3.3.2; - SU2 Version: from 6.2.0 to 7.0.8",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1125
https://github.com/su2code/SU2/issues/1125:1510,Testability,test,test,1510,"**Describe the bug**; Hello to everyone,; my research group and I found some differences in the computation of the skin friction coefficient between the JST and ROE schemes near the symmetry plane.; The difference is that when using the JST scheme, there is a gradient of the skin friction coefficient at the symmetry plane.; I expect that on the symmetry plane there would be no gradient. This issue is present only for the skin friction coefficient.; We found this difference for a straight wing, but we reproduced the same issue for the SU2 test case OneraM6.; <img src=""https://user-images.githubusercontent.com/53580993/101330251-ab855000-3872-11eb-90df-561ddfe3ed38.png"" width=""400"" height=""400""> <img src=""https://user-images.githubusercontent.com/53580993/101330317-be982000-3872-11eb-9b55-4fa87e55bef6.png"" width=""400"" height=""400"">. For the case of our straight wing, maybe it could be more clear, so here is the comparison for our case.; <img src=""https://user-images.githubusercontent.com/53580993/101330692-36fee100-3873-11eb-8638-827bc9008128.png"" width=""400"" height=""400""> <img src=""https://user-images.githubusercontent.com/53580993/101330706-3bc39500-3873-11eb-8d35-bc28fe432ffc.png"" width=""400"" height=""400"">. I think that there could be a problem on the symmetry plane boundary condition when using the JST scheme.; This issue is present since SU2 V6.2.0 until the latest release 7.0.8.; Thank you in advance for your help. **To Reproduce**; To reproduce the problem you can use the OneraM6 test case in the TestCases folder, just changing the scheme between ROE and JST. **Desktop (please complete the following information):**; - OS: Linux (Ubuntu 20.04.1 LTS); - C++ compiler and version: gcc 9.3.0; - MPI implementation and version: mpich 3.3.2; - SU2 Version: from 6.2.0 to 7.0.8",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1125
https://github.com/su2code/SU2/issues/1125:1527,Testability,Test,TestCases,1527,"**Describe the bug**; Hello to everyone,; my research group and I found some differences in the computation of the skin friction coefficient between the JST and ROE schemes near the symmetry plane.; The difference is that when using the JST scheme, there is a gradient of the skin friction coefficient at the symmetry plane.; I expect that on the symmetry plane there would be no gradient. This issue is present only for the skin friction coefficient.; We found this difference for a straight wing, but we reproduced the same issue for the SU2 test case OneraM6.; <img src=""https://user-images.githubusercontent.com/53580993/101330251-ab855000-3872-11eb-90df-561ddfe3ed38.png"" width=""400"" height=""400""> <img src=""https://user-images.githubusercontent.com/53580993/101330317-be982000-3872-11eb-9b55-4fa87e55bef6.png"" width=""400"" height=""400"">. For the case of our straight wing, maybe it could be more clear, so here is the comparison for our case.; <img src=""https://user-images.githubusercontent.com/53580993/101330692-36fee100-3873-11eb-8638-827bc9008128.png"" width=""400"" height=""400""> <img src=""https://user-images.githubusercontent.com/53580993/101330706-3bc39500-3873-11eb-8d35-bc28fe432ffc.png"" width=""400"" height=""400"">. I think that there could be a problem on the symmetry plane boundary condition when using the JST scheme.; This issue is present since SU2 V6.2.0 until the latest release 7.0.8.; Thank you in advance for your help. **To Reproduce**; To reproduce the problem you can use the OneraM6 test case in the TestCases folder, just changing the scheme between ROE and JST. **Desktop (please complete the following information):**; - OS: Linux (Ubuntu 20.04.1 LTS); - C++ compiler and version: gcc 9.3.0; - MPI implementation and version: mpich 3.3.2; - SU2 Version: from 6.2.0 to 7.0.8",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1125
https://github.com/su2code/SU2/issues/1125:901,Usability,clear,clear,901,"**Describe the bug**; Hello to everyone,; my research group and I found some differences in the computation of the skin friction coefficient between the JST and ROE schemes near the symmetry plane.; The difference is that when using the JST scheme, there is a gradient of the skin friction coefficient at the symmetry plane.; I expect that on the symmetry plane there would be no gradient. This issue is present only for the skin friction coefficient.; We found this difference for a straight wing, but we reproduced the same issue for the SU2 test case OneraM6.; <img src=""https://user-images.githubusercontent.com/53580993/101330251-ab855000-3872-11eb-90df-561ddfe3ed38.png"" width=""400"" height=""400""> <img src=""https://user-images.githubusercontent.com/53580993/101330317-be982000-3872-11eb-9b55-4fa87e55bef6.png"" width=""400"" height=""400"">. For the case of our straight wing, maybe it could be more clear, so here is the comparison for our case.; <img src=""https://user-images.githubusercontent.com/53580993/101330692-36fee100-3873-11eb-8638-827bc9008128.png"" width=""400"" height=""400""> <img src=""https://user-images.githubusercontent.com/53580993/101330706-3bc39500-3873-11eb-8d35-bc28fe432ffc.png"" width=""400"" height=""400"">. I think that there could be a problem on the symmetry plane boundary condition when using the JST scheme.; This issue is present since SU2 V6.2.0 until the latest release 7.0.8.; Thank you in advance for your help. **To Reproduce**; To reproduce the problem you can use the OneraM6 test case in the TestCases folder, just changing the scheme between ROE and JST. **Desktop (please complete the following information):**; - OS: Linux (Ubuntu 20.04.1 LTS); - C++ compiler and version: gcc 9.3.0; - MPI implementation and version: mpich 3.3.2; - SU2 Version: from 6.2.0 to 7.0.8",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1125
https://github.com/su2code/SU2/pull/1126:662,Deployability,update,updated,662,"## Proposed Changes; Fix the output of FFD paraview files;; Maybe fix #1123 (@TobiKattmann give it a try if you can); Deprecate VISUALIZE_VOLUME/SURFACE_DEF options for the reasons in #942;; Implements ""HOLD_GRID_FIXED"" for CMeshSolver. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1126
https://github.com/su2code/SU2/pull/1126:589,Testability,test,test,589,"## Proposed Changes; Fix the output of FFD paraview files;; Maybe fix #1123 (@TobiKattmann give it a try if you can); Deprecate VISUALIZE_VOLUME/SURFACE_DEF options for the reasons in #942;; Implements ""HOLD_GRID_FIXED"" for CMeshSolver. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1126
https://github.com/su2code/SU2/pull/1126:460,Usability,simpl,simply,460,"## Proposed Changes; Fix the output of FFD paraview files;; Maybe fix #1123 (@TobiKattmann give it a try if you can); Deprecate VISUALIZE_VOLUME/SURFACE_DEF options for the reasons in #942;; Implements ""HOLD_GRID_FIXED"" for CMeshSolver. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1126
https://github.com/su2code/SU2/pull/1127:475,Availability,error,errors,475,"## Proposed Changes; Provide a function `CNumerics::ComputeStressTensor` to compute the laminar and turbulent stress tensor. Replace the code blocks currently computing it, which exist at many locations inside the code, by function calls. ## Related Work; ?. ## To be discussed; Is CNumerics the best location for this function? . 4 of the 5 `rans_uq` regression tests fail (in addition to those that failed before the change already). This seems to be due to floating-point errors in `CSourcePieceWise_TurbSST::SetReynoldsStressMatrix`, `CAvgGrad_Base::SetReynoldsStressMatrix`. These little deviations (relative difference around 1e-16) are probably amplified over the 10 iterations, so that the solver takes a notably different path to the steady state solution and the intermediate logarithmic residuals differ. I checked (for the `1c` and `2c` test cases) that the converged solutions are nearly equal though. (I can supply vtu files and plots if requested.); Should I update the stored residual values in `serial_regression.py` then?. Also I am not sure whether I have found all code blocks that can be replaced by the new function. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1127
https://github.com/su2code/SU2/pull/1127:974,Deployability,update,update,974,"## Proposed Changes; Provide a function `CNumerics::ComputeStressTensor` to compute the laminar and turbulent stress tensor. Replace the code blocks currently computing it, which exist at many locations inside the code, by function calls. ## Related Work; ?. ## To be discussed; Is CNumerics the best location for this function? . 4 of the 5 `rans_uq` regression tests fail (in addition to those that failed before the change already). This seems to be due to floating-point errors in `CSourcePieceWise_TurbSST::SetReynoldsStressMatrix`, `CAvgGrad_Base::SetReynoldsStressMatrix`. These little deviations (relative difference around 1e-16) are probably amplified over the 10 iterations, so that the solver takes a notably different path to the steady state solution and the intermediate logarithmic residuals differ. I checked (for the `1c` and `2c` test cases) that the converged solutions are nearly equal though. (I can supply vtu files and plots if requested.); Should I update the stored residual values in `serial_regression.py` then?. Also I am not sure whether I have found all code blocks that can be replaced by the new function. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1127
https://github.com/su2code/SU2/pull/1127:1807,Deployability,update,updated,1807,"## Proposed Changes; Provide a function `CNumerics::ComputeStressTensor` to compute the laminar and turbulent stress tensor. Replace the code blocks currently computing it, which exist at many locations inside the code, by function calls. ## Related Work; ?. ## To be discussed; Is CNumerics the best location for this function? . 4 of the 5 `rans_uq` regression tests fail (in addition to those that failed before the change already). This seems to be due to floating-point errors in `CSourcePieceWise_TurbSST::SetReynoldsStressMatrix`, `CAvgGrad_Base::SetReynoldsStressMatrix`. These little deviations (relative difference around 1e-16) are probably amplified over the 10 iterations, so that the solver takes a notably different path to the steady state solution and the intermediate logarithmic residuals differ. I checked (for the `1c` and `2c` test cases) that the converged solutions are nearly equal though. (I can supply vtu files and plots if requested.); Should I update the stored residual values in `serial_regression.py` then?. Also I am not sure whether I have found all code blocks that can be replaced by the new function. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1127
https://github.com/su2code/SU2/pull/1127:363,Testability,test,tests,363,"## Proposed Changes; Provide a function `CNumerics::ComputeStressTensor` to compute the laminar and turbulent stress tensor. Replace the code blocks currently computing it, which exist at many locations inside the code, by function calls. ## Related Work; ?. ## To be discussed; Is CNumerics the best location for this function? . 4 of the 5 `rans_uq` regression tests fail (in addition to those that failed before the change already). This seems to be due to floating-point errors in `CSourcePieceWise_TurbSST::SetReynoldsStressMatrix`, `CAvgGrad_Base::SetReynoldsStressMatrix`. These little deviations (relative difference around 1e-16) are probably amplified over the 10 iterations, so that the solver takes a notably different path to the steady state solution and the intermediate logarithmic residuals differ. I checked (for the `1c` and `2c` test cases) that the converged solutions are nearly equal though. (I can supply vtu files and plots if requested.); Should I update the stored residual values in `serial_regression.py` then?. Also I am not sure whether I have found all code blocks that can be replaced by the new function. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1127
https://github.com/su2code/SU2/pull/1127:786,Testability,log,logarithmic,786,"## Proposed Changes; Provide a function `CNumerics::ComputeStressTensor` to compute the laminar and turbulent stress tensor. Replace the code blocks currently computing it, which exist at many locations inside the code, by function calls. ## Related Work; ?. ## To be discussed; Is CNumerics the best location for this function? . 4 of the 5 `rans_uq` regression tests fail (in addition to those that failed before the change already). This seems to be due to floating-point errors in `CSourcePieceWise_TurbSST::SetReynoldsStressMatrix`, `CAvgGrad_Base::SetReynoldsStressMatrix`. These little deviations (relative difference around 1e-16) are probably amplified over the 10 iterations, so that the solver takes a notably different path to the steady state solution and the intermediate logarithmic residuals differ. I checked (for the `1c` and `2c` test cases) that the converged solutions are nearly equal though. (I can supply vtu files and plots if requested.); Should I update the stored residual values in `serial_regression.py` then?. Also I am not sure whether I have found all code blocks that can be replaced by the new function. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1127
https://github.com/su2code/SU2/pull/1127:849,Testability,test,test,849,"## Proposed Changes; Provide a function `CNumerics::ComputeStressTensor` to compute the laminar and turbulent stress tensor. Replace the code blocks currently computing it, which exist at many locations inside the code, by function calls. ## Related Work; ?. ## To be discussed; Is CNumerics the best location for this function? . 4 of the 5 `rans_uq` regression tests fail (in addition to those that failed before the change already). This seems to be due to floating-point errors in `CSourcePieceWise_TurbSST::SetReynoldsStressMatrix`, `CAvgGrad_Base::SetReynoldsStressMatrix`. These little deviations (relative difference around 1e-16) are probably amplified over the 10 iterations, so that the solver takes a notably different path to the steady state solution and the intermediate logarithmic residuals differ. I checked (for the `1c` and `2c` test cases) that the converged solutions are nearly equal though. (I can supply vtu files and plots if requested.); Should I update the stored residual values in `serial_regression.py` then?. Also I am not sure whether I have found all code blocks that can be replaced by the new function. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1127
https://github.com/su2code/SU2/pull/1127:1734,Testability,test,test,1734,"## Proposed Changes; Provide a function `CNumerics::ComputeStressTensor` to compute the laminar and turbulent stress tensor. Replace the code blocks currently computing it, which exist at many locations inside the code, by function calls. ## Related Work; ?. ## To be discussed; Is CNumerics the best location for this function? . 4 of the 5 `rans_uq` regression tests fail (in addition to those that failed before the change already). This seems to be due to floating-point errors in `CSourcePieceWise_TurbSST::SetReynoldsStressMatrix`, `CAvgGrad_Base::SetReynoldsStressMatrix`. These little deviations (relative difference around 1e-16) are probably amplified over the 10 iterations, so that the solver takes a notably different path to the steady state solution and the intermediate logarithmic residuals differ. I checked (for the `1c` and `2c` test cases) that the converged solutions are nearly equal though. (I can supply vtu files and plots if requested.); Should I update the stored residual values in `serial_regression.py` then?. Also I am not sure whether I have found all code blocks that can be replaced by the new function. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1127
https://github.com/su2code/SU2/pull/1127:1311,Usability,guid,guide,1311,"## Proposed Changes; Provide a function `CNumerics::ComputeStressTensor` to compute the laminar and turbulent stress tensor. Replace the code blocks currently computing it, which exist at many locations inside the code, by function calls. ## Related Work; ?. ## To be discussed; Is CNumerics the best location for this function? . 4 of the 5 `rans_uq` regression tests fail (in addition to those that failed before the change already). This seems to be due to floating-point errors in `CSourcePieceWise_TurbSST::SetReynoldsStressMatrix`, `CAvgGrad_Base::SetReynoldsStressMatrix`. These little deviations (relative difference around 1e-16) are probably amplified over the 10 iterations, so that the solver takes a notably different path to the steady state solution and the intermediate logarithmic residuals differ. I checked (for the `1c` and `2c` test cases) that the converged solutions are nearly equal though. (I can supply vtu files and plots if requested.); Should I update the stored residual values in `serial_regression.py` then?. Also I am not sure whether I have found all code blocks that can be replaced by the new function. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1127
https://github.com/su2code/SU2/pull/1127:1604,Usability,simpl,simply,1604,"## Proposed Changes; Provide a function `CNumerics::ComputeStressTensor` to compute the laminar and turbulent stress tensor. Replace the code blocks currently computing it, which exist at many locations inside the code, by function calls. ## Related Work; ?. ## To be discussed; Is CNumerics the best location for this function? . 4 of the 5 `rans_uq` regression tests fail (in addition to those that failed before the change already). This seems to be due to floating-point errors in `CSourcePieceWise_TurbSST::SetReynoldsStressMatrix`, `CAvgGrad_Base::SetReynoldsStressMatrix`. These little deviations (relative difference around 1e-16) are probably amplified over the 10 iterations, so that the solver takes a notably different path to the steady state solution and the intermediate logarithmic residuals differ. I checked (for the `1c` and `2c` test cases) that the converged solutions are nearly equal though. (I can supply vtu files and plots if requested.); Should I update the stored residual values in `serial_regression.py` then?. Also I am not sure whether I have found all code blocks that can be replaced by the new function. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1127
https://github.com/su2code/SU2/pull/1128:808,Deployability,update,updated,808,"## Proposed Changes; Hello to everyone,; I added a tutorial for the actuator disk with variable load in the Tutorials repository.; Because of this I changed the regression tests moving from parallel_regression.py to tutorials.py.; Hope this could be useful. ## Related Work; PR from SU2 repository: #1027; PR from su2code.github.io repository: #44; PR from Tutorials repository: #4. ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1128
https://github.com/su2code/SU2/pull/1128:87,Modifiability,variab,variable,87,"## Proposed Changes; Hello to everyone,; I added a tutorial for the actuator disk with variable load in the Tutorials repository.; Because of this I changed the regression tests moving from parallel_regression.py to tutorials.py.; Hope this could be useful. ## Related Work; PR from SU2 repository: #1027; PR from su2code.github.io repository: #44; PR from Tutorials repository: #4. ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1128
https://github.com/su2code/SU2/pull/1128:96,Performance,load,load,96,"## Proposed Changes; Hello to everyone,; I added a tutorial for the actuator disk with variable load in the Tutorials repository.; Because of this I changed the regression tests moving from parallel_regression.py to tutorials.py.; Hope this could be useful. ## Related Work; PR from SU2 repository: #1027; PR from su2code.github.io repository: #44; PR from Tutorials repository: #4. ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1128
https://github.com/su2code/SU2/pull/1128:172,Testability,test,tests,172,"## Proposed Changes; Hello to everyone,; I added a tutorial for the actuator disk with variable load in the Tutorials repository.; Because of this I changed the regression tests moving from parallel_regression.py to tutorials.py.; Hope this could be useful. ## Related Work; PR from SU2 repository: #1027; PR from su2code.github.io repository: #44; PR from Tutorials repository: #4. ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1128
https://github.com/su2code/SU2/pull/1128:735,Testability,test,test,735,"## Proposed Changes; Hello to everyone,; I added a tutorial for the actuator disk with variable load in the Tutorials repository.; Because of this I changed the regression tests moving from parallel_regression.py to tutorials.py.; Hope this could be useful. ## Related Work; PR from SU2 repository: #1027; PR from su2code.github.io repository: #44; PR from Tutorials repository: #4. ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1128
https://github.com/su2code/SU2/pull/1128:606,Usability,simpl,simply,606,"## Proposed Changes; Hello to everyone,; I added a tutorial for the actuator disk with variable load in the Tutorials repository.; Because of this I changed the regression tests moving from parallel_regression.py to tutorials.py.; Hope this could be useful. ## Related Work; PR from SU2 repository: #1027; PR from su2code.github.io repository: #44; PR from Tutorials repository: #4. ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1128
https://github.com/su2code/SU2/pull/1129:1683,Deployability,update,updated,1683,"## Proposed Changes; Hi all,; Following a bit the idea of #942 this PR mostly gets rid of stuff. - `WRT_RESIDUALS` unused; - `WRT_LIMITERS` unused; - `WRT_CON_FREQ_DUALTIME` only used in legacy output ... so I thought I just go for it; - removed `SetMeshFile` function as it not used anywhere and CSU2MeshFileWriter is the new cool kid on the block 🛴 ; - Added some options to the config_template which were missing; - Added output of the mpi rank to volume output of (in-)compressible and heat solver. I used that for debugging mostly but it might be interesting for others as well. Yes yes I know, one could think of putting COORDS, MESH_QUALITY (except for FEM) and now RANK into a centralized place to avoid duplication... next PR... I promise ... maybe; - and a few tiny things; - EDIT: yeah and some more options after my initial PR, see CConfig.cpp in `files changed` for all. There is a lot of other things to deprecate so feel free to add here. I have to check the tutorials for these options as well... ✔️ done and open PR (see below) but not merged yet to wait for reviews. This fails to reg tests of tutorials. (p.s. github now has a dark mode, which makes writing this on Thursday nights much nicer 🕶️). ## Related Work; none. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary. **not necessary**; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. **not necessary**",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1129
https://github.com/su2code/SU2/pull/1129:706,Safety,avoid,avoid,706,"## Proposed Changes; Hi all,; Following a bit the idea of #942 this PR mostly gets rid of stuff. - `WRT_RESIDUALS` unused; - `WRT_LIMITERS` unused; - `WRT_CON_FREQ_DUALTIME` only used in legacy output ... so I thought I just go for it; - removed `SetMeshFile` function as it not used anywhere and CSU2MeshFileWriter is the new cool kid on the block 🛴 ; - Added some options to the config_template which were missing; - Added output of the mpi rank to volume output of (in-)compressible and heat solver. I used that for debugging mostly but it might be interesting for others as well. Yes yes I know, one could think of putting COORDS, MESH_QUALITY (except for FEM) and now RANK into a centralized place to avoid duplication... next PR... I promise ... maybe; - and a few tiny things; - EDIT: yeah and some more options after my initial PR, see CConfig.cpp in `files changed` for all. There is a lot of other things to deprecate so feel free to add here. I have to check the tutorials for these options as well... ✔️ done and open PR (see below) but not merged yet to wait for reviews. This fails to reg tests of tutorials. (p.s. github now has a dark mode, which makes writing this on Thursday nights much nicer 🕶️). ## Related Work; none. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary. **not necessary**; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. **not necessary**",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1129
https://github.com/su2code/SU2/pull/1129:1103,Testability,test,tests,1103,"## Proposed Changes; Hi all,; Following a bit the idea of #942 this PR mostly gets rid of stuff. - `WRT_RESIDUALS` unused; - `WRT_LIMITERS` unused; - `WRT_CON_FREQ_DUALTIME` only used in legacy output ... so I thought I just go for it; - removed `SetMeshFile` function as it not used anywhere and CSU2MeshFileWriter is the new cool kid on the block 🛴 ; - Added some options to the config_template which were missing; - Added output of the mpi rank to volume output of (in-)compressible and heat solver. I used that for debugging mostly but it might be interesting for others as well. Yes yes I know, one could think of putting COORDS, MESH_QUALITY (except for FEM) and now RANK into a centralized place to avoid duplication... next PR... I promise ... maybe; - and a few tiny things; - EDIT: yeah and some more options after my initial PR, see CConfig.cpp in `files changed` for all. There is a lot of other things to deprecate so feel free to add here. I have to check the tutorials for these options as well... ✔️ done and open PR (see below) but not merged yet to wait for reviews. This fails to reg tests of tutorials. (p.s. github now has a dark mode, which makes writing this on Thursday nights much nicer 🕶️). ## Related Work; none. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary. **not necessary**; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. **not necessary**",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1129
https://github.com/su2code/SU2/pull/1129:1592,Testability,test,test,1592,"## Proposed Changes; Hi all,; Following a bit the idea of #942 this PR mostly gets rid of stuff. - `WRT_RESIDUALS` unused; - `WRT_LIMITERS` unused; - `WRT_CON_FREQ_DUALTIME` only used in legacy output ... so I thought I just go for it; - removed `SetMeshFile` function as it not used anywhere and CSU2MeshFileWriter is the new cool kid on the block 🛴 ; - Added some options to the config_template which were missing; - Added output of the mpi rank to volume output of (in-)compressible and heat solver. I used that for debugging mostly but it might be interesting for others as well. Yes yes I know, one could think of putting COORDS, MESH_QUALITY (except for FEM) and now RANK into a centralized place to avoid duplication... next PR... I promise ... maybe; - and a few tiny things; - EDIT: yeah and some more options after my initial PR, see CConfig.cpp in `files changed` for all. There is a lot of other things to deprecate so feel free to add here. I have to check the tutorials for these options as well... ✔️ done and open PR (see below) but not merged yet to wait for reviews. This fails to reg tests of tutorials. (p.s. github now has a dark mode, which makes writing this on Thursday nights much nicer 🕶️). ## Related Work; none. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary. **not necessary**; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. **not necessary**",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1129
https://github.com/su2code/SU2/pull/1129:1463,Usability,simpl,simply,1463,"## Proposed Changes; Hi all,; Following a bit the idea of #942 this PR mostly gets rid of stuff. - `WRT_RESIDUALS` unused; - `WRT_LIMITERS` unused; - `WRT_CON_FREQ_DUALTIME` only used in legacy output ... so I thought I just go for it; - removed `SetMeshFile` function as it not used anywhere and CSU2MeshFileWriter is the new cool kid on the block 🛴 ; - Added some options to the config_template which were missing; - Added output of the mpi rank to volume output of (in-)compressible and heat solver. I used that for debugging mostly but it might be interesting for others as well. Yes yes I know, one could think of putting COORDS, MESH_QUALITY (except for FEM) and now RANK into a centralized place to avoid duplication... next PR... I promise ... maybe; - and a few tiny things; - EDIT: yeah and some more options after my initial PR, see CConfig.cpp in `files changed` for all. There is a lot of other things to deprecate so feel free to add here. I have to check the tutorials for these options as well... ✔️ done and open PR (see below) but not merged yet to wait for reviews. This fails to reg tests of tutorials. (p.s. github now has a dark mode, which makes writing this on Thursday nights much nicer 🕶️). ## Related Work; none. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary. **not necessary**; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. **not necessary**",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1129
https://github.com/su2code/SU2/issues/1130:391,Availability,error,error,391,"Hi all!. I'm using SU2 v.7.0.3 to compute the flow field over a wing of particular shape and I'd need LM transition model to match experimental results. I already tried Spalart Allmaras with Bas-Cakmakcioglu without success. In the SU2 source code I found that classes for LM model are already defined, but when I try to activate it with the option:; KIND_TRANS_MODEL= LM; a bad termination error occurs during the Numerics Preprocessing phase. I posted this thread on the online CFD forum (https://www.cfd-online.com/Forums/su2/232347-info-current-status-lm-transition-model-su2.html) and it seems that the ""creation logic"" is broken and the code has to be fixed. I have been redirected here, since someone could possibly have already solved the problem. Thanks in advance for any kind of help!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1130
https://github.com/su2code/SU2/issues/1130:618,Testability,log,logic,618,"Hi all!. I'm using SU2 v.7.0.3 to compute the flow field over a wing of particular shape and I'd need LM transition model to match experimental results. I already tried Spalart Allmaras with Bas-Cakmakcioglu without success. In the SU2 source code I found that classes for LM model are already defined, but when I try to activate it with the option:; KIND_TRANS_MODEL= LM; a bad termination error occurs during the Numerics Preprocessing phase. I posted this thread on the online CFD forum (https://www.cfd-online.com/Forums/su2/232347-info-current-status-lm-transition-model-su2.html) and it seems that the ""creation logic"" is broken and the code has to be fixed. I have been redirected here, since someone could possibly have already solved the problem. Thanks in advance for any kind of help!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1130
https://github.com/su2code/SU2/pull/1131:994,Deployability,update,updated,994,"## Proposed Changes; Hello to everyone,; my research group and I are working on the implementation of the CGNS output format.; We think that this could be an useful feature. For the moment, in order to provide the output file in CGNS format you should choose `CGNS` in the `OUTPUT_FILES` option.; This is a first implementation that will need some improvements.; We hope that this could be useful. Authors: Ettore Saetta, Lorenzo Russo, Renato Tognaccini.; TAARG (Theoretical and Applied Aerodynamics Research Group), University of Naples Federico II. ## Related Work. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1131
https://github.com/su2code/SU2/pull/1131:921,Testability,test,test,921,"## Proposed Changes; Hello to everyone,; my research group and I are working on the implementation of the CGNS output format.; We think that this could be an useful feature. For the moment, in order to provide the output file in CGNS format you should choose `CGNS` in the `OUTPUT_FILES` option.; This is a first implementation that will need some improvements.; We hope that this could be useful. Authors: Ettore Saetta, Lorenzo Russo, Renato Tognaccini.; TAARG (Theoretical and Applied Aerodynamics Research Group), University of Naples Federico II. ## Related Work. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1131
https://github.com/su2code/SU2/pull/1131:792,Usability,simpl,simply,792,"## Proposed Changes; Hello to everyone,; my research group and I are working on the implementation of the CGNS output format.; We think that this could be an useful feature. For the moment, in order to provide the output file in CGNS format you should choose `CGNS` in the `OUTPUT_FILES` option.; This is a first implementation that will need some improvements.; We hope that this could be useful. Authors: Ettore Saetta, Lorenzo Russo, Renato Tognaccini.; TAARG (Theoretical and Applied Aerodynamics Research Group), University of Naples Federico II. ## Related Work. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1131
https://github.com/su2code/SU2/pull/1132:21,Deployability,Update,Updated,21,"## Proposed Changes; Updated the Term2 of the BC Transition model, which eliminates some deficiencies in the previous version.The update is based on:. 1- Cakmakcioglu, S. C., Bas, O., Mura, R., and Kaynak, U., ""A Revised One-Equation Transitional Model for External Aerodynamics,"" AIAA Paper 2020-2706, June 2020, https://doi.org/10.2514/6.2020-2706.; 2- Mura, R. and Cakmakcioglu, S. C., ""A Revised One-Equation Transitional Model for External Aerodynamics - Part I: Theory, Validation and Base Cases,"" AIAA Paper 2020-2714, June 2020, https://doi.org/10.2514/6.2020-2714. which is also presented here: https://turbmodels.larc.nasa.gov/sa-bc_1eqn.html. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X ] I am submitting my contribution to the develop branch.; - [ X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ X ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1132
https://github.com/su2code/SU2/pull/1132:130,Deployability,update,update,130,"## Proposed Changes; Updated the Term2 of the BC Transition model, which eliminates some deficiencies in the previous version.The update is based on:. 1- Cakmakcioglu, S. C., Bas, O., Mura, R., and Kaynak, U., ""A Revised One-Equation Transitional Model for External Aerodynamics,"" AIAA Paper 2020-2706, June 2020, https://doi.org/10.2514/6.2020-2706.; 2- Mura, R. and Cakmakcioglu, S. C., ""A Revised One-Equation Transitional Model for External Aerodynamics - Part I: Theory, Validation and Base Cases,"" AIAA Paper 2020-2714, June 2020, https://doi.org/10.2514/6.2020-2714. which is also presented here: https://turbmodels.larc.nasa.gov/sa-bc_1eqn.html. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X ] I am submitting my contribution to the develop branch.; - [ X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ X ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1132
https://github.com/su2code/SU2/pull/1132:1473,Deployability,update,updated,1473,"## Proposed Changes; Updated the Term2 of the BC Transition model, which eliminates some deficiencies in the previous version.The update is based on:. 1- Cakmakcioglu, S. C., Bas, O., Mura, R., and Kaynak, U., ""A Revised One-Equation Transitional Model for External Aerodynamics,"" AIAA Paper 2020-2706, June 2020, https://doi.org/10.2514/6.2020-2706.; 2- Mura, R. and Cakmakcioglu, S. C., ""A Revised One-Equation Transitional Model for External Aerodynamics - Part I: Theory, Validation and Base Cases,"" AIAA Paper 2020-2714, June 2020, https://doi.org/10.2514/6.2020-2714. which is also presented here: https://turbmodels.larc.nasa.gov/sa-bc_1eqn.html. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X ] I am submitting my contribution to the develop branch.; - [ X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ X ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1132
https://github.com/su2code/SU2/pull/1132:476,Security,Validat,Validation,476,"## Proposed Changes; Updated the Term2 of the BC Transition model, which eliminates some deficiencies in the previous version.The update is based on:. 1- Cakmakcioglu, S. C., Bas, O., Mura, R., and Kaynak, U., ""A Revised One-Equation Transitional Model for External Aerodynamics,"" AIAA Paper 2020-2706, June 2020, https://doi.org/10.2514/6.2020-2706.; 2- Mura, R. and Cakmakcioglu, S. C., ""A Revised One-Equation Transitional Model for External Aerodynamics - Part I: Theory, Validation and Base Cases,"" AIAA Paper 2020-2714, June 2020, https://doi.org/10.2514/6.2020-2714. which is also presented here: https://turbmodels.larc.nasa.gov/sa-bc_1eqn.html. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X ] I am submitting my contribution to the develop branch.; - [ X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ X ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1132
https://github.com/su2code/SU2/pull/1132:1400,Testability,test,test,1400,"## Proposed Changes; Updated the Term2 of the BC Transition model, which eliminates some deficiencies in the previous version.The update is based on:. 1- Cakmakcioglu, S. C., Bas, O., Mura, R., and Kaynak, U., ""A Revised One-Equation Transitional Model for External Aerodynamics,"" AIAA Paper 2020-2706, June 2020, https://doi.org/10.2514/6.2020-2706.; 2- Mura, R. and Cakmakcioglu, S. C., ""A Revised One-Equation Transitional Model for External Aerodynamics - Part I: Theory, Validation and Base Cases,"" AIAA Paper 2020-2714, June 2020, https://doi.org/10.2514/6.2020-2714. which is also presented here: https://turbmodels.larc.nasa.gov/sa-bc_1eqn.html. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X ] I am submitting my contribution to the develop branch.; - [ X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ X ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1132
https://github.com/su2code/SU2/pull/1132:974,Usability,guid,guide,974,"## Proposed Changes; Updated the Term2 of the BC Transition model, which eliminates some deficiencies in the previous version.The update is based on:. 1- Cakmakcioglu, S. C., Bas, O., Mura, R., and Kaynak, U., ""A Revised One-Equation Transitional Model for External Aerodynamics,"" AIAA Paper 2020-2706, June 2020, https://doi.org/10.2514/6.2020-2706.; 2- Mura, R. and Cakmakcioglu, S. C., ""A Revised One-Equation Transitional Model for External Aerodynamics - Part I: Theory, Validation and Base Cases,"" AIAA Paper 2020-2714, June 2020, https://doi.org/10.2514/6.2020-2714. which is also presented here: https://turbmodels.larc.nasa.gov/sa-bc_1eqn.html. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X ] I am submitting my contribution to the develop branch.; - [ X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ X ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1132
https://github.com/su2code/SU2/pull/1132:1269,Usability,simpl,simply,1269,"## Proposed Changes; Updated the Term2 of the BC Transition model, which eliminates some deficiencies in the previous version.The update is based on:. 1- Cakmakcioglu, S. C., Bas, O., Mura, R., and Kaynak, U., ""A Revised One-Equation Transitional Model for External Aerodynamics,"" AIAA Paper 2020-2706, June 2020, https://doi.org/10.2514/6.2020-2706.; 2- Mura, R. and Cakmakcioglu, S. C., ""A Revised One-Equation Transitional Model for External Aerodynamics - Part I: Theory, Validation and Base Cases,"" AIAA Paper 2020-2714, June 2020, https://doi.org/10.2514/6.2020-2714. which is also presented here: https://turbmodels.larc.nasa.gov/sa-bc_1eqn.html. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X ] I am submitting my contribution to the develop branch.; - [ X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ X ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1132
https://github.com/su2code/SU2/pull/1133:688,Deployability,update,updated,688,"## Proposed Changes; Move a few files, mainly mpi_structure.hpp, remove the .inl and make the mpi functions const correct according to the modern versions of the MPI standard.; Compilation with ancient MPI will probably need -fpermissive. ## Related Work; #583 . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1133
https://github.com/su2code/SU2/pull/1133:615,Testability,test,test,615,"## Proposed Changes; Move a few files, mainly mpi_structure.hpp, remove the .inl and make the mpi functions const correct according to the modern versions of the MPI standard.; Compilation with ancient MPI will probably need -fpermissive. ## Related Work; #583 . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1133
https://github.com/su2code/SU2/pull/1133:486,Usability,simpl,simply,486,"## Proposed Changes; Move a few files, mainly mpi_structure.hpp, remove the .inl and make the mpi functions const correct according to the modern versions of the MPI standard.; Compilation with ancient MPI will probably need -fpermissive. ## Related Work; #583 . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1133
https://github.com/su2code/SU2/issues/1134:46,Availability,error,error,46,"Sorry if this is a simple question. I have an error trying to compile v7.0.8 on a HPC system. To try and identify the issue, I removed most of the AD/mkl/mpi flags. I tried running:; ```; ./meson.py build -Denable-pywrapper=true --prefix=/home/user/programs/su2/SU2-7.0.8; ./ninja -j2 -C build install; ```. but I get the following:. ```; ninja: Entering directory `build'; [360/448] Compiling C++ object SU2_CFD/src/libSU2core.a.p/solvers_CIncNSSolver.cpp.o; FAILED: SU2_CFD/src/libSU2core.a.p/solvers_CIncNSSolver.cpp.o ; c++ -ISU2_CFD/src/libSU2core.a.p -ISU2_CFD/src -I../SU2_CFD/src -I../externals/CLI11 -I../externals/cgns/adf -Iexternals/cgns -I../externals/cgns -I../externals/metis/include -I../externals/metis/GKlib -I../externals/metis/libmetis -I../externals/parmetis/include -I../externals/parmetis/libparmetis -Iexternals/tecio -I../externals/tecio -Iexternals/tecio/teciompisrc -I../externals/tecio/teciompisrc -ICommon/src -I../Common/src -I/work/A/openmpi/3.0.0_intel2018u2/include -pipe -D_FILE_OFFSET_BITS=64 -std=c++11 -O3 -fPIC -pthread -Wno-empty-body -Wno-unused-parameter -Wno-format-security -Wno-deprecated-declarations -Wno-non-virtual-dtor -DHAVE_CGNS -DNDEBUG -DHAVE_MPI -DHAVE_METIS -DHAVE_PARMETIS -DHAVE_TECIO -DTECIOMPI -MD -MQ SU2_CFD/src/libSU2core.a.p/solvers_CIncNSSolver.cpp.o -MF 'SU2_CFD/src/libSU2core.a.p/solvers_CIncNSSolver.cpp.o.d' -o SU2_CFD/src/libSU2core.a.p/solvers_CIncNSSolver.cpp.o -c ../SU2_CFD/src/solvers/CIncNSSolver.cpp; In file included from ../SU2_CFD/src/solvers/../../include/solvers/../fluid/../../../Common/include/containers/C2DContainer.hpp:32:0,; from ../SU2_CFD/src/solvers/../../include/solvers/../fluid/../../../Common/include/containers/container_decorators.hpp:31,; from ../SU2_CFD/src/solvers/../../include/solvers/../fluid/../../../Common/include/CConfig.hpp:47,; from ../SU2_CFD/src/solvers/../../include/solvers/../fluid/CFluidModel.hpp:33,; from ../SU2_CFD/src/solvers/../../include/solvers/CSolver.hpp:43,; from ../SU2_CFD/s",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1134
https://github.com/su2code/SU2/issues/1134:2682,Availability,error,error,2682,"AVE_TECIO -DTECIOMPI -MD -MQ SU2_CFD/src/libSU2core.a.p/solvers_CIncNSSolver.cpp.o -MF 'SU2_CFD/src/libSU2core.a.p/solvers_CIncNSSolver.cpp.o.d' -o SU2_CFD/src/libSU2core.a.p/solvers_CIncNSSolver.cpp.o -c ../SU2_CFD/src/solvers/CIncNSSolver.cpp; In file included from ../SU2_CFD/src/solvers/../../include/solvers/../fluid/../../../Common/include/containers/C2DContainer.hpp:32:0,; from ../SU2_CFD/src/solvers/../../include/solvers/../fluid/../../../Common/include/containers/container_decorators.hpp:31,; from ../SU2_CFD/src/solvers/../../include/solvers/../fluid/../../../Common/include/CConfig.hpp:47,; from ../SU2_CFD/src/solvers/../../include/solvers/../fluid/CFluidModel.hpp:33,; from ../SU2_CFD/src/solvers/../../include/solvers/CSolver.hpp:43,; from ../SU2_CFD/src/solvers/../../include/solvers/CFVMFlowSolverBase.hpp:31,; from ../SU2_CFD/src/solvers/../../include/solvers/CIncEulerSolver.hpp:30,; from ../SU2_CFD/src/solvers/../../include/solvers/CIncNSSolver.hpp:30,; from ../SU2_CFD/src/solvers/CIncNSSolver.cpp:28:; ../SU2_CFD/src/solvers/../../include/solvers/../fluid/../../../Common/include/containers/../parallelization/vectorization.hpp: In instantiation of ‘class simd::Array<long unsigned int, 2ul>’:; ../SU2_CFD/src/solvers/../../include/solvers/CFVMFlowSolverBase.inl:1306:16: required from here; ../SU2_CFD/src/solvers/../../include/solvers/../fluid/../../../Common/include/containers/../parallelization/vectorization.hpp:81:29: error: requested alignment is not an integer constant; alignas(Align) Scalar x_[N];; ^; [361/448] Compiling C++ object SU2_CFD/src/libSU2core.a.p/solvers_CIncEulerSolver.cpp.o; ninja: build stopped: subcommand failed.; ```. Can you give me a hint on what to check or follow up?. **Desktop (please complete the following information):**; - OS: Linux 3.10.0-862.el7.x86_64; - C++ compiler and version: g++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-28); - MPI implementation and version: Intel (Open MPI) 3.0.0; - SU2 Version: v7.0.8. Thanks and regards,; Tim",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1134
https://github.com/su2code/SU2/issues/1134:294,Deployability,install,install,294,"Sorry if this is a simple question. I have an error trying to compile v7.0.8 on a HPC system. To try and identify the issue, I removed most of the AD/mkl/mpi flags. I tried running:; ```; ./meson.py build -Denable-pywrapper=true --prefix=/home/user/programs/su2/SU2-7.0.8; ./ninja -j2 -C build install; ```. but I get the following:. ```; ninja: Entering directory `build'; [360/448] Compiling C++ object SU2_CFD/src/libSU2core.a.p/solvers_CIncNSSolver.cpp.o; FAILED: SU2_CFD/src/libSU2core.a.p/solvers_CIncNSSolver.cpp.o ; c++ -ISU2_CFD/src/libSU2core.a.p -ISU2_CFD/src -I../SU2_CFD/src -I../externals/CLI11 -I../externals/cgns/adf -Iexternals/cgns -I../externals/cgns -I../externals/metis/include -I../externals/metis/GKlib -I../externals/metis/libmetis -I../externals/parmetis/include -I../externals/parmetis/libparmetis -Iexternals/tecio -I../externals/tecio -Iexternals/tecio/teciompisrc -I../externals/tecio/teciompisrc -ICommon/src -I../Common/src -I/work/A/openmpi/3.0.0_intel2018u2/include -pipe -D_FILE_OFFSET_BITS=64 -std=c++11 -O3 -fPIC -pthread -Wno-empty-body -Wno-unused-parameter -Wno-format-security -Wno-deprecated-declarations -Wno-non-virtual-dtor -DHAVE_CGNS -DNDEBUG -DHAVE_MPI -DHAVE_METIS -DHAVE_PARMETIS -DHAVE_TECIO -DTECIOMPI -MD -MQ SU2_CFD/src/libSU2core.a.p/solvers_CIncNSSolver.cpp.o -MF 'SU2_CFD/src/libSU2core.a.p/solvers_CIncNSSolver.cpp.o.d' -o SU2_CFD/src/libSU2core.a.p/solvers_CIncNSSolver.cpp.o -c ../SU2_CFD/src/solvers/CIncNSSolver.cpp; In file included from ../SU2_CFD/src/solvers/../../include/solvers/../fluid/../../../Common/include/containers/C2DContainer.hpp:32:0,; from ../SU2_CFD/src/solvers/../../include/solvers/../fluid/../../../Common/include/containers/container_decorators.hpp:31,; from ../SU2_CFD/src/solvers/../../include/solvers/../fluid/../../../Common/include/CConfig.hpp:47,; from ../SU2_CFD/src/solvers/../../include/solvers/../fluid/CFluidModel.hpp:33,; from ../SU2_CFD/src/solvers/../../include/solvers/CSolver.hpp:43,; from ../SU2_CFD/s",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1134
https://github.com/su2code/SU2/issues/1134:1108,Security,secur,security,1108,"oved most of the AD/mkl/mpi flags. I tried running:; ```; ./meson.py build -Denable-pywrapper=true --prefix=/home/user/programs/su2/SU2-7.0.8; ./ninja -j2 -C build install; ```. but I get the following:. ```; ninja: Entering directory `build'; [360/448] Compiling C++ object SU2_CFD/src/libSU2core.a.p/solvers_CIncNSSolver.cpp.o; FAILED: SU2_CFD/src/libSU2core.a.p/solvers_CIncNSSolver.cpp.o ; c++ -ISU2_CFD/src/libSU2core.a.p -ISU2_CFD/src -I../SU2_CFD/src -I../externals/CLI11 -I../externals/cgns/adf -Iexternals/cgns -I../externals/cgns -I../externals/metis/include -I../externals/metis/GKlib -I../externals/metis/libmetis -I../externals/parmetis/include -I../externals/parmetis/libparmetis -Iexternals/tecio -I../externals/tecio -Iexternals/tecio/teciompisrc -I../externals/tecio/teciompisrc -ICommon/src -I../Common/src -I/work/A/openmpi/3.0.0_intel2018u2/include -pipe -D_FILE_OFFSET_BITS=64 -std=c++11 -O3 -fPIC -pthread -Wno-empty-body -Wno-unused-parameter -Wno-format-security -Wno-deprecated-declarations -Wno-non-virtual-dtor -DHAVE_CGNS -DNDEBUG -DHAVE_MPI -DHAVE_METIS -DHAVE_PARMETIS -DHAVE_TECIO -DTECIOMPI -MD -MQ SU2_CFD/src/libSU2core.a.p/solvers_CIncNSSolver.cpp.o -MF 'SU2_CFD/src/libSU2core.a.p/solvers_CIncNSSolver.cpp.o.d' -o SU2_CFD/src/libSU2core.a.p/solvers_CIncNSSolver.cpp.o -c ../SU2_CFD/src/solvers/CIncNSSolver.cpp; In file included from ../SU2_CFD/src/solvers/../../include/solvers/../fluid/../../../Common/include/containers/C2DContainer.hpp:32:0,; from ../SU2_CFD/src/solvers/../../include/solvers/../fluid/../../../Common/include/containers/container_decorators.hpp:31,; from ../SU2_CFD/src/solvers/../../include/solvers/../fluid/../../../Common/include/CConfig.hpp:47,; from ../SU2_CFD/src/solvers/../../include/solvers/../fluid/CFluidModel.hpp:33,; from ../SU2_CFD/src/solvers/../../include/solvers/CSolver.hpp:43,; from ../SU2_CFD/src/solvers/../../include/solvers/CFVMFlowSolverBase.hpp:31,; from ../SU2_CFD/src/solvers/../../include/solvers/CIncEulerSolver.hpp",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1134
https://github.com/su2code/SU2/issues/1134:19,Usability,simpl,simple,19,"Sorry if this is a simple question. I have an error trying to compile v7.0.8 on a HPC system. To try and identify the issue, I removed most of the AD/mkl/mpi flags. I tried running:; ```; ./meson.py build -Denable-pywrapper=true --prefix=/home/user/programs/su2/SU2-7.0.8; ./ninja -j2 -C build install; ```. but I get the following:. ```; ninja: Entering directory `build'; [360/448] Compiling C++ object SU2_CFD/src/libSU2core.a.p/solvers_CIncNSSolver.cpp.o; FAILED: SU2_CFD/src/libSU2core.a.p/solvers_CIncNSSolver.cpp.o ; c++ -ISU2_CFD/src/libSU2core.a.p -ISU2_CFD/src -I../SU2_CFD/src -I../externals/CLI11 -I../externals/cgns/adf -Iexternals/cgns -I../externals/cgns -I../externals/metis/include -I../externals/metis/GKlib -I../externals/metis/libmetis -I../externals/parmetis/include -I../externals/parmetis/libparmetis -Iexternals/tecio -I../externals/tecio -Iexternals/tecio/teciompisrc -I../externals/tecio/teciompisrc -ICommon/src -I../Common/src -I/work/A/openmpi/3.0.0_intel2018u2/include -pipe -D_FILE_OFFSET_BITS=64 -std=c++11 -O3 -fPIC -pthread -Wno-empty-body -Wno-unused-parameter -Wno-format-security -Wno-deprecated-declarations -Wno-non-virtual-dtor -DHAVE_CGNS -DNDEBUG -DHAVE_MPI -DHAVE_METIS -DHAVE_PARMETIS -DHAVE_TECIO -DTECIOMPI -MD -MQ SU2_CFD/src/libSU2core.a.p/solvers_CIncNSSolver.cpp.o -MF 'SU2_CFD/src/libSU2core.a.p/solvers_CIncNSSolver.cpp.o.d' -o SU2_CFD/src/libSU2core.a.p/solvers_CIncNSSolver.cpp.o -c ../SU2_CFD/src/solvers/CIncNSSolver.cpp; In file included from ../SU2_CFD/src/solvers/../../include/solvers/../fluid/../../../Common/include/containers/C2DContainer.hpp:32:0,; from ../SU2_CFD/src/solvers/../../include/solvers/../fluid/../../../Common/include/containers/container_decorators.hpp:31,; from ../SU2_CFD/src/solvers/../../include/solvers/../fluid/../../../Common/include/CConfig.hpp:47,; from ../SU2_CFD/src/solvers/../../include/solvers/../fluid/CFluidModel.hpp:33,; from ../SU2_CFD/src/solvers/../../include/solvers/CSolver.hpp:43,; from ../SU2_CFD/s",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1134
https://github.com/su2code/SU2/pull/1135:113,Availability,mainten,maintenance,113,"This change should have removed all the tabs in SU2.; Hopefully code-factor agrees with me.; ; This is a general maintenance pr. . - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1135
https://github.com/su2code/SU2/pull/1135:539,Deployability,update,updated,539,"This change should have removed all the tabs in SU2.; Hopefully code-factor agrees with me.; ; This is a general maintenance pr. . - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1135
https://github.com/su2code/SU2/pull/1135:466,Testability,test,test,466,"This change should have removed all the tabs in SU2.; Hopefully code-factor agrees with me.; ; This is a general maintenance pr. . - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1135
https://github.com/su2code/SU2/pull/1135:337,Usability,simpl,simply,337,"This change should have removed all the tabs in SU2.; Hopefully code-factor agrees with me.; ; This is a general maintenance pr. . - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1135
https://github.com/su2code/SU2/pull/1137:301,Availability,Mainten,Maintenance,301,"## Proposed Changes; This PR changes the Area computation loops with the geometry toolbox. There may be better ways to include the ; toolboxes, and Im happy to change that around.; ; There is a still a lot of dot products, norms, etc. that can be updated. One step at a time. ## Related Work; General Maintenance work. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1137
https://github.com/su2code/SU2/pull/1137:247,Deployability,update,updated,247,"## Proposed Changes; This PR changes the Area computation loops with the geometry toolbox. There may be better ways to include the ; toolboxes, and Im happy to change that around.; ; There is a still a lot of dot products, norms, etc. that can be updated. One step at a time. ## Related Work; General Maintenance work. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1137
https://github.com/su2code/SU2/pull/1137:987,Deployability,update,updated,987,"## Proposed Changes; This PR changes the Area computation loops with the geometry toolbox. There may be better ways to include the ; toolboxes, and Im happy to change that around.; ; There is a still a lot of dot products, norms, etc. that can be updated. One step at a time. ## Related Work; General Maintenance work. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1137
https://github.com/su2code/SU2/pull/1137:913,Testability,test,test,913,"## Proposed Changes; This PR changes the Area computation loops with the geometry toolbox. There may be better ways to include the ; toolboxes, and Im happy to change that around.; ; There is a still a lot of dot products, norms, etc. that can be updated. One step at a time. ## Related Work; General Maintenance work. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1137
https://github.com/su2code/SU2/pull/1137:493,Usability,guid,guide,493,"## Proposed Changes; This PR changes the Area computation loops with the geometry toolbox. There may be better ways to include the ; toolboxes, and Im happy to change that around.; ; There is a still a lot of dot products, norms, etc. that can be updated. One step at a time. ## Related Work; General Maintenance work. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1137
https://github.com/su2code/SU2/pull/1137:784,Usability,simpl,simply,784,"## Proposed Changes; This PR changes the Area computation loops with the geometry toolbox. There may be better ways to include the ; toolboxes, and Im happy to change that around.; ; There is a still a lot of dot products, norms, etc. that can be updated. One step at a time. ## Related Work; General Maintenance work. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1137
https://github.com/su2code/SU2/pull/1138:144,Usability,simpl,simply,144,"- [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1138
https://github.com/su2code/SU2/pull/1139:345,Availability,error,errors,345,"## Proposed Changes; The PR changes the current limiter routine with the NEMO solver from a conservative variable limiter scheme to limiting on the basis of the primitive variables. This also updates some routines within SU2-NEMO to look/behave/take advantage of the standard SU2 implementations. I also tried tried to remove any other compiler errors. ## Related Work; This was first done with the AUSM scheme by @fmpmorgado. ; This is working towards functional implicit and dual-time capabilities in SU2-NEMO. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1139
https://github.com/su2code/SU2/pull/1139:192,Deployability,update,updates,192,"## Proposed Changes; The PR changes the current limiter routine with the NEMO solver from a conservative variable limiter scheme to limiting on the basis of the primitive variables. This also updates some routines within SU2-NEMO to look/behave/take advantage of the standard SU2 implementations. I also tried tried to remove any other compiler errors. ## Related Work; This was first done with the AUSM scheme by @fmpmorgado. ; This is working towards functional implicit and dual-time capabilities in SU2-NEMO. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1139
https://github.com/su2code/SU2/pull/1139:1178,Deployability,update,updated,1178,"## Proposed Changes; The PR changes the current limiter routine with the NEMO solver from a conservative variable limiter scheme to limiting on the basis of the primitive variables. This also updates some routines within SU2-NEMO to look/behave/take advantage of the standard SU2 implementations. I also tried tried to remove any other compiler errors. ## Related Work; This was first done with the AUSM scheme by @fmpmorgado. ; This is working towards functional implicit and dual-time capabilities in SU2-NEMO. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1139
https://github.com/su2code/SU2/pull/1139:56,Integrability,rout,routine,56,"## Proposed Changes; The PR changes the current limiter routine with the NEMO solver from a conservative variable limiter scheme to limiting on the basis of the primitive variables. This also updates some routines within SU2-NEMO to look/behave/take advantage of the standard SU2 implementations. I also tried tried to remove any other compiler errors. ## Related Work; This was first done with the AUSM scheme by @fmpmorgado. ; This is working towards functional implicit and dual-time capabilities in SU2-NEMO. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1139
https://github.com/su2code/SU2/pull/1139:205,Integrability,rout,routines,205,"## Proposed Changes; The PR changes the current limiter routine with the NEMO solver from a conservative variable limiter scheme to limiting on the basis of the primitive variables. This also updates some routines within SU2-NEMO to look/behave/take advantage of the standard SU2 implementations. I also tried tried to remove any other compiler errors. ## Related Work; This was first done with the AUSM scheme by @fmpmorgado. ; This is working towards functional implicit and dual-time capabilities in SU2-NEMO. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1139
https://github.com/su2code/SU2/pull/1139:105,Modifiability,variab,variable,105,"## Proposed Changes; The PR changes the current limiter routine with the NEMO solver from a conservative variable limiter scheme to limiting on the basis of the primitive variables. This also updates some routines within SU2-NEMO to look/behave/take advantage of the standard SU2 implementations. I also tried tried to remove any other compiler errors. ## Related Work; This was first done with the AUSM scheme by @fmpmorgado. ; This is working towards functional implicit and dual-time capabilities in SU2-NEMO. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1139
https://github.com/su2code/SU2/pull/1139:171,Modifiability,variab,variables,171,"## Proposed Changes; The PR changes the current limiter routine with the NEMO solver from a conservative variable limiter scheme to limiting on the basis of the primitive variables. This also updates some routines within SU2-NEMO to look/behave/take advantage of the standard SU2 implementations. I also tried tried to remove any other compiler errors. ## Related Work; This was first done with the AUSM scheme by @fmpmorgado. ; This is working towards functional implicit and dual-time capabilities in SU2-NEMO. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1139
https://github.com/su2code/SU2/pull/1139:1105,Testability,test,test,1105,"## Proposed Changes; The PR changes the current limiter routine with the NEMO solver from a conservative variable limiter scheme to limiting on the basis of the primitive variables. This also updates some routines within SU2-NEMO to look/behave/take advantage of the standard SU2 implementations. I also tried tried to remove any other compiler errors. ## Related Work; This was first done with the AUSM scheme by @fmpmorgado. ; This is working towards functional implicit and dual-time capabilities in SU2-NEMO. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1139
https://github.com/su2code/SU2/pull/1139:685,Usability,guid,guide,685,"## Proposed Changes; The PR changes the current limiter routine with the NEMO solver from a conservative variable limiter scheme to limiting on the basis of the primitive variables. This also updates some routines within SU2-NEMO to look/behave/take advantage of the standard SU2 implementations. I also tried tried to remove any other compiler errors. ## Related Work; This was first done with the AUSM scheme by @fmpmorgado. ; This is working towards functional implicit and dual-time capabilities in SU2-NEMO. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1139
https://github.com/su2code/SU2/pull/1139:976,Usability,simpl,simply,976,"## Proposed Changes; The PR changes the current limiter routine with the NEMO solver from a conservative variable limiter scheme to limiting on the basis of the primitive variables. This also updates some routines within SU2-NEMO to look/behave/take advantage of the standard SU2 implementations. I also tried tried to remove any other compiler errors. ## Related Work; This was first done with the AUSM scheme by @fmpmorgado. ; This is working towards functional implicit and dual-time capabilities in SU2-NEMO. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1139
https://github.com/su2code/SU2/issues/1140:68,Availability,error,error,68,"I am working on this new cgns grid and having trouble with this new error . Can please someone help me with this error? ; What could be the reason? ; Error in ""void CMeshFEM_DG::CreateFaces(CConfig*)"": ; -------------------------------------------------------------------------; 2 non-matching internal faces found.; This is not supported yet.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1140
https://github.com/su2code/SU2/issues/1140:113,Availability,error,error,113,"I am working on this new cgns grid and having trouble with this new error . Can please someone help me with this error? ; What could be the reason? ; Error in ""void CMeshFEM_DG::CreateFaces(CConfig*)"": ; -------------------------------------------------------------------------; 2 non-matching internal faces found.; This is not supported yet.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1140
https://github.com/su2code/SU2/issues/1140:150,Availability,Error,Error,150,"I am working on this new cgns grid and having trouble with this new error . Can please someone help me with this error? ; What could be the reason? ; Error in ""void CMeshFEM_DG::CreateFaces(CConfig*)"": ; -------------------------------------------------------------------------; 2 non-matching internal faces found.; This is not supported yet.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1140
https://github.com/su2code/SU2/issues/1141:71,Usability,clear,clear,71,**Is your feature request related to a problem? Please describe.**; *A clear and concise description of what the problem is. Ex. I'm always frustrated when [...]*. **Describe the solution you'd like**; *A clear and concise description of what you want to happen.*. **Describe alternatives you've considered**; *A clear and concise description of any alternative solutions or features you've considered.*. **Additional context**; *Add any other context or screenshots about the feature request here.*,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1141
https://github.com/su2code/SU2/issues/1141:205,Usability,clear,clear,205,**Is your feature request related to a problem? Please describe.**; *A clear and concise description of what the problem is. Ex. I'm always frustrated when [...]*. **Describe the solution you'd like**; *A clear and concise description of what you want to happen.*. **Describe alternatives you've considered**; *A clear and concise description of any alternative solutions or features you've considered.*. **Additional context**; *Add any other context or screenshots about the feature request here.*,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1141
https://github.com/su2code/SU2/issues/1141:313,Usability,clear,clear,313,**Is your feature request related to a problem? Please describe.**; *A clear and concise description of what the problem is. Ex. I'm always frustrated when [...]*. **Describe the solution you'd like**; *A clear and concise description of what you want to happen.*. **Describe alternatives you've considered**; *A clear and concise description of any alternative solutions or features you've considered.*. **Additional context**; *Add any other context or screenshots about the feature request here.*,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1141
https://github.com/su2code/SU2/issues/1143:391,Availability,error,error,391,"I noticed that there is a 'Grid Adaptation Strategy' section in the v7 .cfg files but I'm not entirely sure how to get it working (running a supersonic Euler). I changed `KIND_ADAPT= GRAD_FLOW` and tried running `SU2_CFD` but no mesh adaptation seemed to take place. After digging around the github comments, I tried running `SU2_src/SU2_PY/mesh_adaptation.py` with python but it gave me an error:. ```; ------------------------- Exit Success (SU2_CFD) ------------------------. Traceback (most recent call last):; File ""/home/user/programs/su2/SU2_src/SU2_PY/mesh_adaptation.py"", line 106, in <module>; main(); File ""/home/user/programs/su2/SU2_src/SU2_PY/mesh_adaptation.py"", line 62, in main; options.save_all ); File ""/home/user/programs/su2/SU2_src/SU2_PY/mesh_adaptation.py"", line 93, in mesh_adaptation; SU2.run.MSH(config); File ""/home/user/programs/su2/SU2_src/SU2_PY/SU2/run/interface.py"", line 134, in MSH; run_command( the_Command ); File ""/home/user/programs/su2/SU2_src/SU2_PY/SU2/run/interface.py"", line 292, in run_command; raise exception(message); RuntimeError: Path = /home/user/projects/mesh_adapt_testing/,; Command = /home/user/programs/su2/SU2-7.0.8/bin/SU2_MSH config_MSH.cfg; SU2 process returned error '127'; /bin/sh: /home/user/programs/su2/SU2-7.0.8/bin/SU2_MSH: No such file or directory; ```. And indeed, when I checked the compiled SU2 bin, `SU2_MSH` seemed to be missing. Has this functionality been removed and is that why the python script is not in the compiled SU2 bin?. I found that some people have had success using the `feature_adap` branch instead but that is running on v7.0.3. I also tried compiling this version but there appears to be a `mesh_adaptation.py` and `mesh_adaptation_amg.py`. If one wants to use mesh adaptation, is this the recommended branch?. Wishing all a Merry Christmas, good health and a happy New Year.; Thanks and regards,; Tim. **Desktop (please complete the following information):**; - OS: Linux CentOS 8; - C++ compiler and version",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1143
https://github.com/su2code/SU2/issues/1143:1222,Availability,error,error,1222,"t entirely sure how to get it working (running a supersonic Euler). I changed `KIND_ADAPT= GRAD_FLOW` and tried running `SU2_CFD` but no mesh adaptation seemed to take place. After digging around the github comments, I tried running `SU2_src/SU2_PY/mesh_adaptation.py` with python but it gave me an error:. ```; ------------------------- Exit Success (SU2_CFD) ------------------------. Traceback (most recent call last):; File ""/home/user/programs/su2/SU2_src/SU2_PY/mesh_adaptation.py"", line 106, in <module>; main(); File ""/home/user/programs/su2/SU2_src/SU2_PY/mesh_adaptation.py"", line 62, in main; options.save_all ); File ""/home/user/programs/su2/SU2_src/SU2_PY/mesh_adaptation.py"", line 93, in mesh_adaptation; SU2.run.MSH(config); File ""/home/user/programs/su2/SU2_src/SU2_PY/SU2/run/interface.py"", line 134, in MSH; run_command( the_Command ); File ""/home/user/programs/su2/SU2_src/SU2_PY/SU2/run/interface.py"", line 292, in run_command; raise exception(message); RuntimeError: Path = /home/user/projects/mesh_adapt_testing/,; Command = /home/user/programs/su2/SU2-7.0.8/bin/SU2_MSH config_MSH.cfg; SU2 process returned error '127'; /bin/sh: /home/user/programs/su2/SU2-7.0.8/bin/SU2_MSH: No such file or directory; ```. And indeed, when I checked the compiled SU2 bin, `SU2_MSH` seemed to be missing. Has this functionality been removed and is that why the python script is not in the compiled SU2 bin?. I found that some people have had success using the `feature_adap` branch instead but that is running on v7.0.3. I also tried compiling this version but there appears to be a `mesh_adaptation.py` and `mesh_adaptation_amg.py`. If one wants to use mesh adaptation, is this the recommended branch?. Wishing all a Merry Christmas, good health and a happy New Year.; Thanks and regards,; Tim. **Desktop (please complete the following information):**; - OS: Linux CentOS 8; - C++ compiler and version: GCC 8.22; - MPI implementation and version: Intel (Open MPI) 3.0.0; - SU2 Version: v7.0.8",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1143
https://github.com/su2code/SU2/issues/1143:32,Energy Efficiency,Adapt,Adaptation,32,"I noticed that there is a 'Grid Adaptation Strategy' section in the v7 .cfg files but I'm not entirely sure how to get it working (running a supersonic Euler). I changed `KIND_ADAPT= GRAD_FLOW` and tried running `SU2_CFD` but no mesh adaptation seemed to take place. After digging around the github comments, I tried running `SU2_src/SU2_PY/mesh_adaptation.py` with python but it gave me an error:. ```; ------------------------- Exit Success (SU2_CFD) ------------------------. Traceback (most recent call last):; File ""/home/user/programs/su2/SU2_src/SU2_PY/mesh_adaptation.py"", line 106, in <module>; main(); File ""/home/user/programs/su2/SU2_src/SU2_PY/mesh_adaptation.py"", line 62, in main; options.save_all ); File ""/home/user/programs/su2/SU2_src/SU2_PY/mesh_adaptation.py"", line 93, in mesh_adaptation; SU2.run.MSH(config); File ""/home/user/programs/su2/SU2_src/SU2_PY/SU2/run/interface.py"", line 134, in MSH; run_command( the_Command ); File ""/home/user/programs/su2/SU2_src/SU2_PY/SU2/run/interface.py"", line 292, in run_command; raise exception(message); RuntimeError: Path = /home/user/projects/mesh_adapt_testing/,; Command = /home/user/programs/su2/SU2-7.0.8/bin/SU2_MSH config_MSH.cfg; SU2 process returned error '127'; /bin/sh: /home/user/programs/su2/SU2-7.0.8/bin/SU2_MSH: No such file or directory; ```. And indeed, when I checked the compiled SU2 bin, `SU2_MSH` seemed to be missing. Has this functionality been removed and is that why the python script is not in the compiled SU2 bin?. I found that some people have had success using the `feature_adap` branch instead but that is running on v7.0.3. I also tried compiling this version but there appears to be a `mesh_adaptation.py` and `mesh_adaptation_amg.py`. If one wants to use mesh adaptation, is this the recommended branch?. Wishing all a Merry Christmas, good health and a happy New Year.; Thanks and regards,; Tim. **Desktop (please complete the following information):**; - OS: Linux CentOS 8; - C++ compiler and version",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1143
https://github.com/su2code/SU2/issues/1143:234,Energy Efficiency,adapt,adaptation,234,"I noticed that there is a 'Grid Adaptation Strategy' section in the v7 .cfg files but I'm not entirely sure how to get it working (running a supersonic Euler). I changed `KIND_ADAPT= GRAD_FLOW` and tried running `SU2_CFD` but no mesh adaptation seemed to take place. After digging around the github comments, I tried running `SU2_src/SU2_PY/mesh_adaptation.py` with python but it gave me an error:. ```; ------------------------- Exit Success (SU2_CFD) ------------------------. Traceback (most recent call last):; File ""/home/user/programs/su2/SU2_src/SU2_PY/mesh_adaptation.py"", line 106, in <module>; main(); File ""/home/user/programs/su2/SU2_src/SU2_PY/mesh_adaptation.py"", line 62, in main; options.save_all ); File ""/home/user/programs/su2/SU2_src/SU2_PY/mesh_adaptation.py"", line 93, in mesh_adaptation; SU2.run.MSH(config); File ""/home/user/programs/su2/SU2_src/SU2_PY/SU2/run/interface.py"", line 134, in MSH; run_command( the_Command ); File ""/home/user/programs/su2/SU2_src/SU2_PY/SU2/run/interface.py"", line 292, in run_command; raise exception(message); RuntimeError: Path = /home/user/projects/mesh_adapt_testing/,; Command = /home/user/programs/su2/SU2-7.0.8/bin/SU2_MSH config_MSH.cfg; SU2 process returned error '127'; /bin/sh: /home/user/programs/su2/SU2-7.0.8/bin/SU2_MSH: No such file or directory; ```. And indeed, when I checked the compiled SU2 bin, `SU2_MSH` seemed to be missing. Has this functionality been removed and is that why the python script is not in the compiled SU2 bin?. I found that some people have had success using the `feature_adap` branch instead but that is running on v7.0.3. I also tried compiling this version but there appears to be a `mesh_adaptation.py` and `mesh_adaptation_amg.py`. If one wants to use mesh adaptation, is this the recommended branch?. Wishing all a Merry Christmas, good health and a happy New Year.; Thanks and regards,; Tim. **Desktop (please complete the following information):**; - OS: Linux CentOS 8; - C++ compiler and version",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1143
https://github.com/su2code/SU2/issues/1143:1758,Energy Efficiency,adapt,adaptation,1758,"t entirely sure how to get it working (running a supersonic Euler). I changed `KIND_ADAPT= GRAD_FLOW` and tried running `SU2_CFD` but no mesh adaptation seemed to take place. After digging around the github comments, I tried running `SU2_src/SU2_PY/mesh_adaptation.py` with python but it gave me an error:. ```; ------------------------- Exit Success (SU2_CFD) ------------------------. Traceback (most recent call last):; File ""/home/user/programs/su2/SU2_src/SU2_PY/mesh_adaptation.py"", line 106, in <module>; main(); File ""/home/user/programs/su2/SU2_src/SU2_PY/mesh_adaptation.py"", line 62, in main; options.save_all ); File ""/home/user/programs/su2/SU2_src/SU2_PY/mesh_adaptation.py"", line 93, in mesh_adaptation; SU2.run.MSH(config); File ""/home/user/programs/su2/SU2_src/SU2_PY/SU2/run/interface.py"", line 134, in MSH; run_command( the_Command ); File ""/home/user/programs/su2/SU2_src/SU2_PY/SU2/run/interface.py"", line 292, in run_command; raise exception(message); RuntimeError: Path = /home/user/projects/mesh_adapt_testing/,; Command = /home/user/programs/su2/SU2-7.0.8/bin/SU2_MSH config_MSH.cfg; SU2 process returned error '127'; /bin/sh: /home/user/programs/su2/SU2-7.0.8/bin/SU2_MSH: No such file or directory; ```. And indeed, when I checked the compiled SU2 bin, `SU2_MSH` seemed to be missing. Has this functionality been removed and is that why the python script is not in the compiled SU2 bin?. I found that some people have had success using the `feature_adap` branch instead but that is running on v7.0.3. I also tried compiling this version but there appears to be a `mesh_adaptation.py` and `mesh_adaptation_amg.py`. If one wants to use mesh adaptation, is this the recommended branch?. Wishing all a Merry Christmas, good health and a happy New Year.; Thanks and regards,; Tim. **Desktop (please complete the following information):**; - OS: Linux CentOS 8; - C++ compiler and version: GCC 8.22; - MPI implementation and version: Intel (Open MPI) 3.0.0; - SU2 Version: v7.0.8",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1143
https://github.com/su2code/SU2/issues/1143:885,Integrability,interface,interface,885,"I noticed that there is a 'Grid Adaptation Strategy' section in the v7 .cfg files but I'm not entirely sure how to get it working (running a supersonic Euler). I changed `KIND_ADAPT= GRAD_FLOW` and tried running `SU2_CFD` but no mesh adaptation seemed to take place. After digging around the github comments, I tried running `SU2_src/SU2_PY/mesh_adaptation.py` with python but it gave me an error:. ```; ------------------------- Exit Success (SU2_CFD) ------------------------. Traceback (most recent call last):; File ""/home/user/programs/su2/SU2_src/SU2_PY/mesh_adaptation.py"", line 106, in <module>; main(); File ""/home/user/programs/su2/SU2_src/SU2_PY/mesh_adaptation.py"", line 62, in main; options.save_all ); File ""/home/user/programs/su2/SU2_src/SU2_PY/mesh_adaptation.py"", line 93, in mesh_adaptation; SU2.run.MSH(config); File ""/home/user/programs/su2/SU2_src/SU2_PY/SU2/run/interface.py"", line 134, in MSH; run_command( the_Command ); File ""/home/user/programs/su2/SU2_src/SU2_PY/SU2/run/interface.py"", line 292, in run_command; raise exception(message); RuntimeError: Path = /home/user/projects/mesh_adapt_testing/,; Command = /home/user/programs/su2/SU2-7.0.8/bin/SU2_MSH config_MSH.cfg; SU2 process returned error '127'; /bin/sh: /home/user/programs/su2/SU2-7.0.8/bin/SU2_MSH: No such file or directory; ```. And indeed, when I checked the compiled SU2 bin, `SU2_MSH` seemed to be missing. Has this functionality been removed and is that why the python script is not in the compiled SU2 bin?. I found that some people have had success using the `feature_adap` branch instead but that is running on v7.0.3. I also tried compiling this version but there appears to be a `mesh_adaptation.py` and `mesh_adaptation_amg.py`. If one wants to use mesh adaptation, is this the recommended branch?. Wishing all a Merry Christmas, good health and a happy New Year.; Thanks and regards,; Tim. **Desktop (please complete the following information):**; - OS: Linux CentOS 8; - C++ compiler and version",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1143
https://github.com/su2code/SU2/issues/1143:999,Integrability,interface,interface,999,"I noticed that there is a 'Grid Adaptation Strategy' section in the v7 .cfg files but I'm not entirely sure how to get it working (running a supersonic Euler). I changed `KIND_ADAPT= GRAD_FLOW` and tried running `SU2_CFD` but no mesh adaptation seemed to take place. After digging around the github comments, I tried running `SU2_src/SU2_PY/mesh_adaptation.py` with python but it gave me an error:. ```; ------------------------- Exit Success (SU2_CFD) ------------------------. Traceback (most recent call last):; File ""/home/user/programs/su2/SU2_src/SU2_PY/mesh_adaptation.py"", line 106, in <module>; main(); File ""/home/user/programs/su2/SU2_src/SU2_PY/mesh_adaptation.py"", line 62, in main; options.save_all ); File ""/home/user/programs/su2/SU2_src/SU2_PY/mesh_adaptation.py"", line 93, in mesh_adaptation; SU2.run.MSH(config); File ""/home/user/programs/su2/SU2_src/SU2_PY/SU2/run/interface.py"", line 134, in MSH; run_command( the_Command ); File ""/home/user/programs/su2/SU2_src/SU2_PY/SU2/run/interface.py"", line 292, in run_command; raise exception(message); RuntimeError: Path = /home/user/projects/mesh_adapt_testing/,; Command = /home/user/programs/su2/SU2-7.0.8/bin/SU2_MSH config_MSH.cfg; SU2 process returned error '127'; /bin/sh: /home/user/programs/su2/SU2-7.0.8/bin/SU2_MSH: No such file or directory; ```. And indeed, when I checked the compiled SU2 bin, `SU2_MSH` seemed to be missing. Has this functionality been removed and is that why the python script is not in the compiled SU2 bin?. I found that some people have had success using the `feature_adap` branch instead but that is running on v7.0.3. I also tried compiling this version but there appears to be a `mesh_adaptation.py` and `mesh_adaptation_amg.py`. If one wants to use mesh adaptation, is this the recommended branch?. Wishing all a Merry Christmas, good health and a happy New Year.; Thanks and regards,; Tim. **Desktop (please complete the following information):**; - OS: Linux CentOS 8; - C++ compiler and version",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1143
https://github.com/su2code/SU2/issues/1143:1056,Integrability,message,message,1056," not entirely sure how to get it working (running a supersonic Euler). I changed `KIND_ADAPT= GRAD_FLOW` and tried running `SU2_CFD` but no mesh adaptation seemed to take place. After digging around the github comments, I tried running `SU2_src/SU2_PY/mesh_adaptation.py` with python but it gave me an error:. ```; ------------------------- Exit Success (SU2_CFD) ------------------------. Traceback (most recent call last):; File ""/home/user/programs/su2/SU2_src/SU2_PY/mesh_adaptation.py"", line 106, in <module>; main(); File ""/home/user/programs/su2/SU2_src/SU2_PY/mesh_adaptation.py"", line 62, in main; options.save_all ); File ""/home/user/programs/su2/SU2_src/SU2_PY/mesh_adaptation.py"", line 93, in mesh_adaptation; SU2.run.MSH(config); File ""/home/user/programs/su2/SU2_src/SU2_PY/SU2/run/interface.py"", line 134, in MSH; run_command( the_Command ); File ""/home/user/programs/su2/SU2_src/SU2_PY/SU2/run/interface.py"", line 292, in run_command; raise exception(message); RuntimeError: Path = /home/user/projects/mesh_adapt_testing/,; Command = /home/user/programs/su2/SU2-7.0.8/bin/SU2_MSH config_MSH.cfg; SU2 process returned error '127'; /bin/sh: /home/user/programs/su2/SU2-7.0.8/bin/SU2_MSH: No such file or directory; ```. And indeed, when I checked the compiled SU2 bin, `SU2_MSH` seemed to be missing. Has this functionality been removed and is that why the python script is not in the compiled SU2 bin?. I found that some people have had success using the `feature_adap` branch instead but that is running on v7.0.3. I also tried compiling this version but there appears to be a `mesh_adaptation.py` and `mesh_adaptation_amg.py`. If one wants to use mesh adaptation, is this the recommended branch?. Wishing all a Merry Christmas, good health and a happy New Year.; Thanks and regards,; Tim. **Desktop (please complete the following information):**; - OS: Linux CentOS 8; - C++ compiler and version: GCC 8.22; - MPI implementation and version: Intel (Open MPI) 3.0.0; - SU2 Version: v7.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1143
https://github.com/su2code/SU2/issues/1143:32,Modifiability,Adapt,Adaptation,32,"I noticed that there is a 'Grid Adaptation Strategy' section in the v7 .cfg files but I'm not entirely sure how to get it working (running a supersonic Euler). I changed `KIND_ADAPT= GRAD_FLOW` and tried running `SU2_CFD` but no mesh adaptation seemed to take place. After digging around the github comments, I tried running `SU2_src/SU2_PY/mesh_adaptation.py` with python but it gave me an error:. ```; ------------------------- Exit Success (SU2_CFD) ------------------------. Traceback (most recent call last):; File ""/home/user/programs/su2/SU2_src/SU2_PY/mesh_adaptation.py"", line 106, in <module>; main(); File ""/home/user/programs/su2/SU2_src/SU2_PY/mesh_adaptation.py"", line 62, in main; options.save_all ); File ""/home/user/programs/su2/SU2_src/SU2_PY/mesh_adaptation.py"", line 93, in mesh_adaptation; SU2.run.MSH(config); File ""/home/user/programs/su2/SU2_src/SU2_PY/SU2/run/interface.py"", line 134, in MSH; run_command( the_Command ); File ""/home/user/programs/su2/SU2_src/SU2_PY/SU2/run/interface.py"", line 292, in run_command; raise exception(message); RuntimeError: Path = /home/user/projects/mesh_adapt_testing/,; Command = /home/user/programs/su2/SU2-7.0.8/bin/SU2_MSH config_MSH.cfg; SU2 process returned error '127'; /bin/sh: /home/user/programs/su2/SU2-7.0.8/bin/SU2_MSH: No such file or directory; ```. And indeed, when I checked the compiled SU2 bin, `SU2_MSH` seemed to be missing. Has this functionality been removed and is that why the python script is not in the compiled SU2 bin?. I found that some people have had success using the `feature_adap` branch instead but that is running on v7.0.3. I also tried compiling this version but there appears to be a `mesh_adaptation.py` and `mesh_adaptation_amg.py`. If one wants to use mesh adaptation, is this the recommended branch?. Wishing all a Merry Christmas, good health and a happy New Year.; Thanks and regards,; Tim. **Desktop (please complete the following information):**; - OS: Linux CentOS 8; - C++ compiler and version",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1143
https://github.com/su2code/SU2/issues/1143:234,Modifiability,adapt,adaptation,234,"I noticed that there is a 'Grid Adaptation Strategy' section in the v7 .cfg files but I'm not entirely sure how to get it working (running a supersonic Euler). I changed `KIND_ADAPT= GRAD_FLOW` and tried running `SU2_CFD` but no mesh adaptation seemed to take place. After digging around the github comments, I tried running `SU2_src/SU2_PY/mesh_adaptation.py` with python but it gave me an error:. ```; ------------------------- Exit Success (SU2_CFD) ------------------------. Traceback (most recent call last):; File ""/home/user/programs/su2/SU2_src/SU2_PY/mesh_adaptation.py"", line 106, in <module>; main(); File ""/home/user/programs/su2/SU2_src/SU2_PY/mesh_adaptation.py"", line 62, in main; options.save_all ); File ""/home/user/programs/su2/SU2_src/SU2_PY/mesh_adaptation.py"", line 93, in mesh_adaptation; SU2.run.MSH(config); File ""/home/user/programs/su2/SU2_src/SU2_PY/SU2/run/interface.py"", line 134, in MSH; run_command( the_Command ); File ""/home/user/programs/su2/SU2_src/SU2_PY/SU2/run/interface.py"", line 292, in run_command; raise exception(message); RuntimeError: Path = /home/user/projects/mesh_adapt_testing/,; Command = /home/user/programs/su2/SU2-7.0.8/bin/SU2_MSH config_MSH.cfg; SU2 process returned error '127'; /bin/sh: /home/user/programs/su2/SU2-7.0.8/bin/SU2_MSH: No such file or directory; ```. And indeed, when I checked the compiled SU2 bin, `SU2_MSH` seemed to be missing. Has this functionality been removed and is that why the python script is not in the compiled SU2 bin?. I found that some people have had success using the `feature_adap` branch instead but that is running on v7.0.3. I also tried compiling this version but there appears to be a `mesh_adaptation.py` and `mesh_adaptation_amg.py`. If one wants to use mesh adaptation, is this the recommended branch?. Wishing all a Merry Christmas, good health and a happy New Year.; Thanks and regards,; Tim. **Desktop (please complete the following information):**; - OS: Linux CentOS 8; - C++ compiler and version",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1143
https://github.com/su2code/SU2/issues/1143:823,Modifiability,config,config,823,"I noticed that there is a 'Grid Adaptation Strategy' section in the v7 .cfg files but I'm not entirely sure how to get it working (running a supersonic Euler). I changed `KIND_ADAPT= GRAD_FLOW` and tried running `SU2_CFD` but no mesh adaptation seemed to take place. After digging around the github comments, I tried running `SU2_src/SU2_PY/mesh_adaptation.py` with python but it gave me an error:. ```; ------------------------- Exit Success (SU2_CFD) ------------------------. Traceback (most recent call last):; File ""/home/user/programs/su2/SU2_src/SU2_PY/mesh_adaptation.py"", line 106, in <module>; main(); File ""/home/user/programs/su2/SU2_src/SU2_PY/mesh_adaptation.py"", line 62, in main; options.save_all ); File ""/home/user/programs/su2/SU2_src/SU2_PY/mesh_adaptation.py"", line 93, in mesh_adaptation; SU2.run.MSH(config); File ""/home/user/programs/su2/SU2_src/SU2_PY/SU2/run/interface.py"", line 134, in MSH; run_command( the_Command ); File ""/home/user/programs/su2/SU2_src/SU2_PY/SU2/run/interface.py"", line 292, in run_command; raise exception(message); RuntimeError: Path = /home/user/projects/mesh_adapt_testing/,; Command = /home/user/programs/su2/SU2-7.0.8/bin/SU2_MSH config_MSH.cfg; SU2 process returned error '127'; /bin/sh: /home/user/programs/su2/SU2-7.0.8/bin/SU2_MSH: No such file or directory; ```. And indeed, when I checked the compiled SU2 bin, `SU2_MSH` seemed to be missing. Has this functionality been removed and is that why the python script is not in the compiled SU2 bin?. I found that some people have had success using the `feature_adap` branch instead but that is running on v7.0.3. I also tried compiling this version but there appears to be a `mesh_adaptation.py` and `mesh_adaptation_amg.py`. If one wants to use mesh adaptation, is this the recommended branch?. Wishing all a Merry Christmas, good health and a happy New Year.; Thanks and regards,; Tim. **Desktop (please complete the following information):**; - OS: Linux CentOS 8; - C++ compiler and version",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1143
https://github.com/su2code/SU2/issues/1143:1758,Modifiability,adapt,adaptation,1758,"t entirely sure how to get it working (running a supersonic Euler). I changed `KIND_ADAPT= GRAD_FLOW` and tried running `SU2_CFD` but no mesh adaptation seemed to take place. After digging around the github comments, I tried running `SU2_src/SU2_PY/mesh_adaptation.py` with python but it gave me an error:. ```; ------------------------- Exit Success (SU2_CFD) ------------------------. Traceback (most recent call last):; File ""/home/user/programs/su2/SU2_src/SU2_PY/mesh_adaptation.py"", line 106, in <module>; main(); File ""/home/user/programs/su2/SU2_src/SU2_PY/mesh_adaptation.py"", line 62, in main; options.save_all ); File ""/home/user/programs/su2/SU2_src/SU2_PY/mesh_adaptation.py"", line 93, in mesh_adaptation; SU2.run.MSH(config); File ""/home/user/programs/su2/SU2_src/SU2_PY/SU2/run/interface.py"", line 134, in MSH; run_command( the_Command ); File ""/home/user/programs/su2/SU2_src/SU2_PY/SU2/run/interface.py"", line 292, in run_command; raise exception(message); RuntimeError: Path = /home/user/projects/mesh_adapt_testing/,; Command = /home/user/programs/su2/SU2-7.0.8/bin/SU2_MSH config_MSH.cfg; SU2 process returned error '127'; /bin/sh: /home/user/programs/su2/SU2-7.0.8/bin/SU2_MSH: No such file or directory; ```. And indeed, when I checked the compiled SU2 bin, `SU2_MSH` seemed to be missing. Has this functionality been removed and is that why the python script is not in the compiled SU2 bin?. I found that some people have had success using the `feature_adap` branch instead but that is running on v7.0.3. I also tried compiling this version but there appears to be a `mesh_adaptation.py` and `mesh_adaptation_amg.py`. If one wants to use mesh adaptation, is this the recommended branch?. Wishing all a Merry Christmas, good health and a happy New Year.; Thanks and regards,; Tim. **Desktop (please complete the following information):**; - OS: Linux CentOS 8; - C++ compiler and version: GCC 8.22; - MPI implementation and version: Intel (Open MPI) 3.0.0; - SU2 Version: v7.0.8",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1143
https://github.com/su2code/SU2/pull/1145:749,Deployability,update,updated,749,"## Proposed Changes; Fix Xcode project and relative paths.; . ## Related Work; N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1145
https://github.com/su2code/SU2/pull/1145:676,Testability,test,test,676,"## Proposed Changes; Fix Xcode project and relative paths.; . ## Related Work; N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1145
https://github.com/su2code/SU2/pull/1145:256,Usability,guid,guide,256,"## Proposed Changes; Fix Xcode project and relative paths.; . ## Related Work; N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1145
https://github.com/su2code/SU2/pull/1145:547,Usability,simpl,simply,547,"## Proposed Changes; Fix Xcode project and relative paths.; . ## Related Work; N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1145
https://github.com/su2code/SU2/pull/1148:2102,Deployability,update,updated,2102,"p towards an automatic identification of the aerodynamic transfer functions for state-space models.; * Some changes in the outputs; * The introduction of a test case for this feature. Regarding the last point, I am having issues trying to understand how to appropriately set up the regression. In particular, the fsi interface needs two additional packages to run (libspatialindex and petsc) with their counterparts in python (rtree and petsc4py). @pcarruscag suggested me to add the apt-get lines in the regression.yml file, but I am really not sure where to place them and I do not want to mess it up. ; Further, the files in the tutorial folder cannot be used for this scope. Indeed, in the tutorial, there are the cfg files that can be used to reproduce the same behaviour predicted by the theory of Theodorsen. However, in order to do so, some iterations of fluid only simulation must be performed before the coupling. This takes time so I prepared a test case where the two solvers (fluid and structure) are coupled from the beginning. Unfortunately, the mesh is ignored by git in the TestCase folder, so I am not sure how to make it run. I would really appreciate if you could help me with this last point.; ; ## Related Work; #1124 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1148
https://github.com/su2code/SU2/pull/1148:92,Integrability,interface,interface,92,"## Proposed Changes; Dear all, in this PR there are few modification related to the new fsi interface in python, namely:; * A different treatment for imposed motions. This is actually a first step towards an automatic identification of the aerodynamic transfer functions for state-space models.; * Some changes in the outputs; * The introduction of a test case for this feature. Regarding the last point, I am having issues trying to understand how to appropriately set up the regression. In particular, the fsi interface needs two additional packages to run (libspatialindex and petsc) with their counterparts in python (rtree and petsc4py). @pcarruscag suggested me to add the apt-get lines in the regression.yml file, but I am really not sure where to place them and I do not want to mess it up. ; Further, the files in the tutorial folder cannot be used for this scope. Indeed, in the tutorial, there are the cfg files that can be used to reproduce the same behaviour predicted by the theory of Theodorsen. However, in order to do so, some iterations of fluid only simulation must be performed before the coupling. This takes time so I prepared a test case where the two solvers (fluid and structure) are coupled from the beginning. Unfortunately, the mesh is ignored by git in the TestCase folder, so I am not sure how to make it run. I would really appreciate if you could help me with this last point.; ; ## Related Work; #1124 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 s",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1148
https://github.com/su2code/SU2/pull/1148:512,Integrability,interface,interface,512,"## Proposed Changes; Dear all, in this PR there are few modification related to the new fsi interface in python, namely:; * A different treatment for imposed motions. This is actually a first step towards an automatic identification of the aerodynamic transfer functions for state-space models.; * Some changes in the outputs; * The introduction of a test case for this feature. Regarding the last point, I am having issues trying to understand how to appropriately set up the regression. In particular, the fsi interface needs two additional packages to run (libspatialindex and petsc) with their counterparts in python (rtree and petsc4py). @pcarruscag suggested me to add the apt-get lines in the regression.yml file, but I am really not sure where to place them and I do not want to mess it up. ; Further, the files in the tutorial folder cannot be used for this scope. Indeed, in the tutorial, there are the cfg files that can be used to reproduce the same behaviour predicted by the theory of Theodorsen. However, in order to do so, some iterations of fluid only simulation must be performed before the coupling. This takes time so I prepared a test case where the two solvers (fluid and structure) are coupled from the beginning. Unfortunately, the mesh is ignored by git in the TestCase folder, so I am not sure how to make it run. I would really appreciate if you could help me with this last point.; ; ## Related Work; #1124 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 s",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1148
https://github.com/su2code/SU2/pull/1148:1109,Modifiability,coupling,coupling,1109,"tion related to the new fsi interface in python, namely:; * A different treatment for imposed motions. This is actually a first step towards an automatic identification of the aerodynamic transfer functions for state-space models.; * Some changes in the outputs; * The introduction of a test case for this feature. Regarding the last point, I am having issues trying to understand how to appropriately set up the regression. In particular, the fsi interface needs two additional packages to run (libspatialindex and petsc) with their counterparts in python (rtree and petsc4py). @pcarruscag suggested me to add the apt-get lines in the regression.yml file, but I am really not sure where to place them and I do not want to mess it up. ; Further, the files in the tutorial folder cannot be used for this scope. Indeed, in the tutorial, there are the cfg files that can be used to reproduce the same behaviour predicted by the theory of Theodorsen. However, in order to do so, some iterations of fluid only simulation must be performed before the coupling. This takes time so I prepared a test case where the two solvers (fluid and structure) are coupled from the beginning. Unfortunately, the mesh is ignored by git in the TestCase folder, so I am not sure how to make it run. I would really appreciate if you could help me with this last point.; ; ## Related Work; #1124 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my cont",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1148
https://github.com/su2code/SU2/pull/1148:1088,Performance,perform,performed,1088,"tion related to the new fsi interface in python, namely:; * A different treatment for imposed motions. This is actually a first step towards an automatic identification of the aerodynamic transfer functions for state-space models.; * Some changes in the outputs; * The introduction of a test case for this feature. Regarding the last point, I am having issues trying to understand how to appropriately set up the regression. In particular, the fsi interface needs two additional packages to run (libspatialindex and petsc) with their counterparts in python (rtree and petsc4py). @pcarruscag suggested me to add the apt-get lines in the regression.yml file, but I am really not sure where to place them and I do not want to mess it up. ; Further, the files in the tutorial folder cannot be used for this scope. Indeed, in the tutorial, there are the cfg files that can be used to reproduce the same behaviour predicted by the theory of Theodorsen. However, in order to do so, some iterations of fluid only simulation must be performed before the coupling. This takes time so I prepared a test case where the two solvers (fluid and structure) are coupled from the beginning. Unfortunately, the mesh is ignored by git in the TestCase folder, so I am not sure how to make it run. I would really appreciate if you could help me with this last point.; ; ## Related Work; #1124 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my cont",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1148
https://github.com/su2code/SU2/pull/1148:972,Safety,predict,predicted,972,"## Proposed Changes; Dear all, in this PR there are few modification related to the new fsi interface in python, namely:; * A different treatment for imposed motions. This is actually a first step towards an automatic identification of the aerodynamic transfer functions for state-space models.; * Some changes in the outputs; * The introduction of a test case for this feature. Regarding the last point, I am having issues trying to understand how to appropriately set up the regression. In particular, the fsi interface needs two additional packages to run (libspatialindex and petsc) with their counterparts in python (rtree and petsc4py). @pcarruscag suggested me to add the apt-get lines in the regression.yml file, but I am really not sure where to place them and I do not want to mess it up. ; Further, the files in the tutorial folder cannot be used for this scope. Indeed, in the tutorial, there are the cfg files that can be used to reproduce the same behaviour predicted by the theory of Theodorsen. However, in order to do so, some iterations of fluid only simulation must be performed before the coupling. This takes time so I prepared a test case where the two solvers (fluid and structure) are coupled from the beginning. Unfortunately, the mesh is ignored by git in the TestCase folder, so I am not sure how to make it run. I would really appreciate if you could help me with this last point.; ; ## Related Work; #1124 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 s",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1148
https://github.com/su2code/SU2/pull/1148:351,Testability,test,test,351,"## Proposed Changes; Dear all, in this PR there are few modification related to the new fsi interface in python, namely:; * A different treatment for imposed motions. This is actually a first step towards an automatic identification of the aerodynamic transfer functions for state-space models.; * Some changes in the outputs; * The introduction of a test case for this feature. Regarding the last point, I am having issues trying to understand how to appropriately set up the regression. In particular, the fsi interface needs two additional packages to run (libspatialindex and petsc) with their counterparts in python (rtree and petsc4py). @pcarruscag suggested me to add the apt-get lines in the regression.yml file, but I am really not sure where to place them and I do not want to mess it up. ; Further, the files in the tutorial folder cannot be used for this scope. Indeed, in the tutorial, there are the cfg files that can be used to reproduce the same behaviour predicted by the theory of Theodorsen. However, in order to do so, some iterations of fluid only simulation must be performed before the coupling. This takes time so I prepared a test case where the two solvers (fluid and structure) are coupled from the beginning. Unfortunately, the mesh is ignored by git in the TestCase folder, so I am not sure how to make it run. I would really appreciate if you could help me with this last point.; ; ## Related Work; #1124 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 s",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1148
https://github.com/su2code/SU2/pull/1148:1151,Testability,test,test,1151,"tually a first step towards an automatic identification of the aerodynamic transfer functions for state-space models.; * Some changes in the outputs; * The introduction of a test case for this feature. Regarding the last point, I am having issues trying to understand how to appropriately set up the regression. In particular, the fsi interface needs two additional packages to run (libspatialindex and petsc) with their counterparts in python (rtree and petsc4py). @pcarruscag suggested me to add the apt-get lines in the regression.yml file, but I am really not sure where to place them and I do not want to mess it up. ; Further, the files in the tutorial folder cannot be used for this scope. Indeed, in the tutorial, there are the cfg files that can be used to reproduce the same behaviour predicted by the theory of Theodorsen. However, in order to do so, some iterations of fluid only simulation must be performed before the coupling. This takes time so I prepared a test case where the two solvers (fluid and structure) are coupled from the beginning. Unfortunately, the mesh is ignored by git in the TestCase folder, so I am not sure how to make it run. I would really appreciate if you could help me with this last point.; ; ## Related Work; #1124 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cp",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1148
https://github.com/su2code/SU2/pull/1148:1286,Testability,Test,TestCase,1286,"p towards an automatic identification of the aerodynamic transfer functions for state-space models.; * Some changes in the outputs; * The introduction of a test case for this feature. Regarding the last point, I am having issues trying to understand how to appropriately set up the regression. In particular, the fsi interface needs two additional packages to run (libspatialindex and petsc) with their counterparts in python (rtree and petsc4py). @pcarruscag suggested me to add the apt-get lines in the regression.yml file, but I am really not sure where to place them and I do not want to mess it up. ; Further, the files in the tutorial folder cannot be used for this scope. Indeed, in the tutorial, there are the cfg files that can be used to reproduce the same behaviour predicted by the theory of Theodorsen. However, in order to do so, some iterations of fluid only simulation must be performed before the coupling. This takes time so I prepared a test case where the two solvers (fluid and structure) are coupled from the beginning. Unfortunately, the mesh is ignored by git in the TestCase folder, so I am not sure how to make it run. I would really appreciate if you could help me with this last point.; ; ## Related Work; #1124 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1148
https://github.com/su2code/SU2/pull/1148:2029,Testability,test,test,2029,"p towards an automatic identification of the aerodynamic transfer functions for state-space models.; * Some changes in the outputs; * The introduction of a test case for this feature. Regarding the last point, I am having issues trying to understand how to appropriately set up the regression. In particular, the fsi interface needs two additional packages to run (libspatialindex and petsc) with their counterparts in python (rtree and petsc4py). @pcarruscag suggested me to add the apt-get lines in the regression.yml file, but I am really not sure where to place them and I do not want to mess it up. ; Further, the files in the tutorial folder cannot be used for this scope. Indeed, in the tutorial, there are the cfg files that can be used to reproduce the same behaviour predicted by the theory of Theodorsen. However, in order to do so, some iterations of fluid only simulation must be performed before the coupling. This takes time so I prepared a test case where the two solvers (fluid and structure) are coupled from the beginning. Unfortunately, the mesh is ignored by git in the TestCase folder, so I am not sure how to make it run. I would really appreciate if you could help me with this last point.; ; ## Related Work; #1124 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1148
https://github.com/su2code/SU2/pull/1148:1609,Usability,guid,guide,1609,"p towards an automatic identification of the aerodynamic transfer functions for state-space models.; * Some changes in the outputs; * The introduction of a test case for this feature. Regarding the last point, I am having issues trying to understand how to appropriately set up the regression. In particular, the fsi interface needs two additional packages to run (libspatialindex and petsc) with their counterparts in python (rtree and petsc4py). @pcarruscag suggested me to add the apt-get lines in the regression.yml file, but I am really not sure where to place them and I do not want to mess it up. ; Further, the files in the tutorial folder cannot be used for this scope. Indeed, in the tutorial, there are the cfg files that can be used to reproduce the same behaviour predicted by the theory of Theodorsen. However, in order to do so, some iterations of fluid only simulation must be performed before the coupling. This takes time so I prepared a test case where the two solvers (fluid and structure) are coupled from the beginning. Unfortunately, the mesh is ignored by git in the TestCase folder, so I am not sure how to make it run. I would really appreciate if you could help me with this last point.; ; ## Related Work; #1124 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1148
https://github.com/su2code/SU2/pull/1148:1900,Usability,simpl,simply,1900,"p towards an automatic identification of the aerodynamic transfer functions for state-space models.; * Some changes in the outputs; * The introduction of a test case for this feature. Regarding the last point, I am having issues trying to understand how to appropriately set up the regression. In particular, the fsi interface needs two additional packages to run (libspatialindex and petsc) with their counterparts in python (rtree and petsc4py). @pcarruscag suggested me to add the apt-get lines in the regression.yml file, but I am really not sure where to place them and I do not want to mess it up. ; Further, the files in the tutorial folder cannot be used for this scope. Indeed, in the tutorial, there are the cfg files that can be used to reproduce the same behaviour predicted by the theory of Theodorsen. However, in order to do so, some iterations of fluid only simulation must be performed before the coupling. This takes time so I prepared a test case where the two solvers (fluid and structure) are coupled from the beginning. Unfortunately, the mesh is ignored by git in the TestCase folder, so I am not sure how to make it run. I would really appreciate if you could help me with this last point.; ; ## Related Work; #1124 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1148
https://github.com/su2code/SU2/pull/1149:780,Deployability,update,updated,780,"## Proposed Changes; This allows UQ and NICF features to be used with the vectorized centered schemes.; UQ can also be used with the vectorized Roe scheme, but not NICF as that would not be equivalent to the general Roe implementation.; With this the older implementations were removed as they are never used as boundary numerics. ## Related Work; #1022. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1149
https://github.com/su2code/SU2/pull/1149:707,Testability,test,test,707,"## Proposed Changes; This allows UQ and NICF features to be used with the vectorized centered schemes.; UQ can also be used with the vectorized Roe scheme, but not NICF as that would not be equivalent to the general Roe implementation.; With this the older implementations were removed as they are never used as boundary numerics. ## Related Work; #1022. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1149
https://github.com/su2code/SU2/pull/1149:578,Usability,simpl,simply,578,"## Proposed Changes; This allows UQ and NICF features to be used with the vectorized centered schemes.; UQ can also be used with the vectorized Roe scheme, but not NICF as that would not be equivalent to the general Roe implementation.; With this the older implementations were removed as they are never used as boundary numerics. ## Related Work; #1022. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1149
https://github.com/su2code/SU2/issues/1150:1074,Availability,error,error,1074,"**Describe the bug**; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*. Python wrapper hangs on Set_MPI_ActDisk in CEulerSolver.cpp line 1091 ""SU2_MPI::Barrier(MPI_COMM_WORLD);""; If the SU2_CFD is called without python wrapper, it runs ok. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*. Go to the test case solver, choose the propeller one and run the following script. mpirun -np 2 python launch_su2.py --parallel -f propeller.cfg; [launch_su2.py.txt](https://github.com/su2code/SU2/files/5762218/launch_su2.py.txt). There is no issue when SU2_CFD is called directly:; mpirun -np 2 SU2_CFD propeller.cfg. **Desktop (please complete the following information):**; - OS: [Ubuntu 16.04.6 LTS]; - C++ compiler and version: [g++ (GCC) 9.3.0]; - MPI implementation and version: [OpenMPI 4.0.5]; - SU2 Version: [develop]; - Python Version: 3.6.12; - MPI4Py Version: 3.0.3. In order to fully reproduce the error one can try running the following commands under Anaconda Python Manager, although the same error appears using the default ubuntu python3 and openmpi compilers :; ->conda create -n su2code python=3.6; ->conda activate su2code; ->conda install -c conda-forge c-compiler compilers cxx-compiler openmpi swig mpi4py numpy scipy. Install SU2 with the following script:. #!/bin/bash; export CC=/path/anaconda3/envs/su2code/bin/mpicc; export CXX=/path/anaconda3/envs/su2code/bin/mpicxx; export CXXFLAGS=${CXXFLAGS}:""-lmpi""; rm -rf SU2/build; rm -rf SU2_exec_dev/bin; cd SU2; ./meson.py build -Denable-pywrapper=true -Dcustom-mpi=true --prefix=/path/SU2_exec_dev; ./ninja -C build install",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1150
https://github.com/su2code/SU2/issues/1150:1172,Availability,error,error,1172,"**Describe the bug**; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*. Python wrapper hangs on Set_MPI_ActDisk in CEulerSolver.cpp line 1091 ""SU2_MPI::Barrier(MPI_COMM_WORLD);""; If the SU2_CFD is called without python wrapper, it runs ok. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*. Go to the test case solver, choose the propeller one and run the following script. mpirun -np 2 python launch_su2.py --parallel -f propeller.cfg; [launch_su2.py.txt](https://github.com/su2code/SU2/files/5762218/launch_su2.py.txt). There is no issue when SU2_CFD is called directly:; mpirun -np 2 SU2_CFD propeller.cfg. **Desktop (please complete the following information):**; - OS: [Ubuntu 16.04.6 LTS]; - C++ compiler and version: [g++ (GCC) 9.3.0]; - MPI implementation and version: [OpenMPI 4.0.5]; - SU2 Version: [develop]; - Python Version: 3.6.12; - MPI4Py Version: 3.0.3. In order to fully reproduce the error one can try running the following commands under Anaconda Python Manager, although the same error appears using the default ubuntu python3 and openmpi compilers :; ->conda create -n su2code python=3.6; ->conda activate su2code; ->conda install -c conda-forge c-compiler compilers cxx-compiler openmpi swig mpi4py numpy scipy. Install SU2 with the following script:. #!/bin/bash; export CC=/path/anaconda3/envs/su2code/bin/mpicc; export CXX=/path/anaconda3/envs/su2code/bin/mpicxx; export CXXFLAGS=${CXXFLAGS}:""-lmpi""; rm -rf SU2/build; rm -rf SU2_exec_dev/bin; cd SU2; ./meson.py build -Denable-pywrapper=true -Dcustom-mpi=true --prefix=/path/SU2_exec_dev; ./ninja -C build install",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1150
https://github.com/su2code/SU2/issues/1150:1316,Deployability,install,install,1316,"**Describe the bug**; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*. Python wrapper hangs on Set_MPI_ActDisk in CEulerSolver.cpp line 1091 ""SU2_MPI::Barrier(MPI_COMM_WORLD);""; If the SU2_CFD is called without python wrapper, it runs ok. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*. Go to the test case solver, choose the propeller one and run the following script. mpirun -np 2 python launch_su2.py --parallel -f propeller.cfg; [launch_su2.py.txt](https://github.com/su2code/SU2/files/5762218/launch_su2.py.txt). There is no issue when SU2_CFD is called directly:; mpirun -np 2 SU2_CFD propeller.cfg. **Desktop (please complete the following information):**; - OS: [Ubuntu 16.04.6 LTS]; - C++ compiler and version: [g++ (GCC) 9.3.0]; - MPI implementation and version: [OpenMPI 4.0.5]; - SU2 Version: [develop]; - Python Version: 3.6.12; - MPI4Py Version: 3.0.3. In order to fully reproduce the error one can try running the following commands under Anaconda Python Manager, although the same error appears using the default ubuntu python3 and openmpi compilers :; ->conda create -n su2code python=3.6; ->conda activate su2code; ->conda install -c conda-forge c-compiler compilers cxx-compiler openmpi swig mpi4py numpy scipy. Install SU2 with the following script:. #!/bin/bash; export CC=/path/anaconda3/envs/su2code/bin/mpicc; export CXX=/path/anaconda3/envs/su2code/bin/mpicxx; export CXXFLAGS=${CXXFLAGS}:""-lmpi""; rm -rf SU2/build; rm -rf SU2_exec_dev/bin; cd SU2; ./meson.py build -Denable-pywrapper=true -Dcustom-mpi=true --prefix=/path/SU2_exec_dev; ./ninja -C build install",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1150
https://github.com/su2code/SU2/issues/1150:1406,Deployability,Install,Install,1406,"**Describe the bug**; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*. Python wrapper hangs on Set_MPI_ActDisk in CEulerSolver.cpp line 1091 ""SU2_MPI::Barrier(MPI_COMM_WORLD);""; If the SU2_CFD is called without python wrapper, it runs ok. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*. Go to the test case solver, choose the propeller one and run the following script. mpirun -np 2 python launch_su2.py --parallel -f propeller.cfg; [launch_su2.py.txt](https://github.com/su2code/SU2/files/5762218/launch_su2.py.txt). There is no issue when SU2_CFD is called directly:; mpirun -np 2 SU2_CFD propeller.cfg. **Desktop (please complete the following information):**; - OS: [Ubuntu 16.04.6 LTS]; - C++ compiler and version: [g++ (GCC) 9.3.0]; - MPI implementation and version: [OpenMPI 4.0.5]; - SU2 Version: [develop]; - Python Version: 3.6.12; - MPI4Py Version: 3.0.3. In order to fully reproduce the error one can try running the following commands under Anaconda Python Manager, although the same error appears using the default ubuntu python3 and openmpi compilers :; ->conda create -n su2code python=3.6; ->conda activate su2code; ->conda install -c conda-forge c-compiler compilers cxx-compiler openmpi swig mpi4py numpy scipy. Install SU2 with the following script:. #!/bin/bash; export CC=/path/anaconda3/envs/su2code/bin/mpicc; export CXX=/path/anaconda3/envs/su2code/bin/mpicxx; export CXXFLAGS=${CXXFLAGS}:""-lmpi""; rm -rf SU2/build; rm -rf SU2_exec_dev/bin; cd SU2; ./meson.py build -Denable-pywrapper=true -Dcustom-mpi=true --prefix=/path/SU2_exec_dev; ./ninja -C build install",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1150
https://github.com/su2code/SU2/issues/1150:1754,Deployability,install,install,1754,"**Describe the bug**; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*. Python wrapper hangs on Set_MPI_ActDisk in CEulerSolver.cpp line 1091 ""SU2_MPI::Barrier(MPI_COMM_WORLD);""; If the SU2_CFD is called without python wrapper, it runs ok. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*. Go to the test case solver, choose the propeller one and run the following script. mpirun -np 2 python launch_su2.py --parallel -f propeller.cfg; [launch_su2.py.txt](https://github.com/su2code/SU2/files/5762218/launch_su2.py.txt). There is no issue when SU2_CFD is called directly:; mpirun -np 2 SU2_CFD propeller.cfg. **Desktop (please complete the following information):**; - OS: [Ubuntu 16.04.6 LTS]; - C++ compiler and version: [g++ (GCC) 9.3.0]; - MPI implementation and version: [OpenMPI 4.0.5]; - SU2 Version: [develop]; - Python Version: 3.6.12; - MPI4Py Version: 3.0.3. In order to fully reproduce the error one can try running the following commands under Anaconda Python Manager, although the same error appears using the default ubuntu python3 and openmpi compilers :; ->conda create -n su2code python=3.6; ->conda activate su2code; ->conda install -c conda-forge c-compiler compilers cxx-compiler openmpi swig mpi4py numpy scipy. Install SU2 with the following script:. #!/bin/bash; export CC=/path/anaconda3/envs/su2code/bin/mpicc; export CXX=/path/anaconda3/envs/su2code/bin/mpicxx; export CXXFLAGS=${CXXFLAGS}:""-lmpi""; rm -rf SU2/build; rm -rf SU2_exec_dev/bin; cd SU2; ./meson.py build -Denable-pywrapper=true -Dcustom-mpi=true --prefix=/path/SU2_exec_dev; ./ninja -C build install",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1150
https://github.com/su2code/SU2/issues/1150:192,Integrability,wrap,wrapper,192,"**Describe the bug**; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*. Python wrapper hangs on Set_MPI_ActDisk in CEulerSolver.cpp line 1091 ""SU2_MPI::Barrier(MPI_COMM_WORLD);""; If the SU2_CFD is called without python wrapper, it runs ok. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*. Go to the test case solver, choose the propeller one and run the following script. mpirun -np 2 python launch_su2.py --parallel -f propeller.cfg; [launch_su2.py.txt](https://github.com/su2code/SU2/files/5762218/launch_su2.py.txt). There is no issue when SU2_CFD is called directly:; mpirun -np 2 SU2_CFD propeller.cfg. **Desktop (please complete the following information):**; - OS: [Ubuntu 16.04.6 LTS]; - C++ compiler and version: [g++ (GCC) 9.3.0]; - MPI implementation and version: [OpenMPI 4.0.5]; - SU2 Version: [develop]; - Python Version: 3.6.12; - MPI4Py Version: 3.0.3. In order to fully reproduce the error one can try running the following commands under Anaconda Python Manager, although the same error appears using the default ubuntu python3 and openmpi compilers :; ->conda create -n su2code python=3.6; ->conda activate su2code; ->conda install -c conda-forge c-compiler compilers cxx-compiler openmpi swig mpi4py numpy scipy. Install SU2 with the following script:. #!/bin/bash; export CC=/path/anaconda3/envs/su2code/bin/mpicc; export CXX=/path/anaconda3/envs/su2code/bin/mpicxx; export CXXFLAGS=${CXXFLAGS}:""-lmpi""; rm -rf SU2/build; rm -rf SU2_exec_dev/bin; cd SU2; ./meson.py build -Denable-pywrapper=true -Dcustom-mpi=true --prefix=/path/SU2_exec_dev; ./ninja -C build install",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1150
https://github.com/su2code/SU2/issues/1150:332,Integrability,wrap,wrapper,332,"**Describe the bug**; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*. Python wrapper hangs on Set_MPI_ActDisk in CEulerSolver.cpp line 1091 ""SU2_MPI::Barrier(MPI_COMM_WORLD);""; If the SU2_CFD is called without python wrapper, it runs ok. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*. Go to the test case solver, choose the propeller one and run the following script. mpirun -np 2 python launch_su2.py --parallel -f propeller.cfg; [launch_su2.py.txt](https://github.com/su2code/SU2/files/5762218/launch_su2.py.txt). There is no issue when SU2_CFD is called directly:; mpirun -np 2 SU2_CFD propeller.cfg. **Desktop (please complete the following information):**; - OS: [Ubuntu 16.04.6 LTS]; - C++ compiler and version: [g++ (GCC) 9.3.0]; - MPI implementation and version: [OpenMPI 4.0.5]; - SU2 Version: [develop]; - Python Version: 3.6.12; - MPI4Py Version: 3.0.3. In order to fully reproduce the error one can try running the following commands under Anaconda Python Manager, although the same error appears using the default ubuntu python3 and openmpi compilers :; ->conda create -n su2code python=3.6; ->conda activate su2code; ->conda install -c conda-forge c-compiler compilers cxx-compiler openmpi swig mpi4py numpy scipy. Install SU2 with the following script:. #!/bin/bash; export CC=/path/anaconda3/envs/su2code/bin/mpicc; export CXX=/path/anaconda3/envs/su2code/bin/mpicxx; export CXXFLAGS=${CXXFLAGS}:""-lmpi""; rm -rf SU2/build; rm -rf SU2_exec_dev/bin; cd SU2; ./meson.py build -Denable-pywrapper=true -Dcustom-mpi=true --prefix=/path/SU2_exec_dev; ./ninja -C build install",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1150
https://github.com/su2code/SU2/issues/1150:389,Modifiability,config,config,389,"**Describe the bug**; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*. Python wrapper hangs on Set_MPI_ActDisk in CEulerSolver.cpp line 1091 ""SU2_MPI::Barrier(MPI_COMM_WORLD);""; If the SU2_CFD is called without python wrapper, it runs ok. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*. Go to the test case solver, choose the propeller one and run the following script. mpirun -np 2 python launch_su2.py --parallel -f propeller.cfg; [launch_su2.py.txt](https://github.com/su2code/SU2/files/5762218/launch_su2.py.txt). There is no issue when SU2_CFD is called directly:; mpirun -np 2 SU2_CFD propeller.cfg. **Desktop (please complete the following information):**; - OS: [Ubuntu 16.04.6 LTS]; - C++ compiler and version: [g++ (GCC) 9.3.0]; - MPI implementation and version: [OpenMPI 4.0.5]; - SU2 Version: [develop]; - Python Version: 3.6.12; - MPI4Py Version: 3.0.3. In order to fully reproduce the error one can try running the following commands under Anaconda Python Manager, although the same error appears using the default ubuntu python3 and openmpi compilers :; ->conda create -n su2code python=3.6; ->conda activate su2code; ->conda install -c conda-forge c-compiler compilers cxx-compiler openmpi swig mpi4py numpy scipy. Install SU2 with the following script:. #!/bin/bash; export CC=/path/anaconda3/envs/su2code/bin/mpicc; export CXX=/path/anaconda3/envs/su2code/bin/mpicxx; export CXXFLAGS=${CXXFLAGS}:""-lmpi""; rm -rf SU2/build; rm -rf SU2_exec_dev/bin; cd SU2; ./meson.py build -Denable-pywrapper=true -Dcustom-mpi=true --prefix=/path/SU2_exec_dev; ./ninja -C build install",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1150
https://github.com/su2code/SU2/issues/1150:472,Testability,test,test,472,"**Describe the bug**; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*. Python wrapper hangs on Set_MPI_ActDisk in CEulerSolver.cpp line 1091 ""SU2_MPI::Barrier(MPI_COMM_WORLD);""; If the SU2_CFD is called without python wrapper, it runs ok. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*. Go to the test case solver, choose the propeller one and run the following script. mpirun -np 2 python launch_su2.py --parallel -f propeller.cfg; [launch_su2.py.txt](https://github.com/su2code/SU2/files/5762218/launch_su2.py.txt). There is no issue when SU2_CFD is called directly:; mpirun -np 2 SU2_CFD propeller.cfg. **Desktop (please complete the following information):**; - OS: [Ubuntu 16.04.6 LTS]; - C++ compiler and version: [g++ (GCC) 9.3.0]; - MPI implementation and version: [OpenMPI 4.0.5]; - SU2 Version: [develop]; - Python Version: 3.6.12; - MPI4Py Version: 3.0.3. In order to fully reproduce the error one can try running the following commands under Anaconda Python Manager, although the same error appears using the default ubuntu python3 and openmpi compilers :; ->conda create -n su2code python=3.6; ->conda activate su2code; ->conda install -c conda-forge c-compiler compilers cxx-compiler openmpi swig mpi4py numpy scipy. Install SU2 with the following script:. #!/bin/bash; export CC=/path/anaconda3/envs/su2code/bin/mpicc; export CXX=/path/anaconda3/envs/su2code/bin/mpicxx; export CXXFLAGS=${CXXFLAGS}:""-lmpi""; rm -rf SU2/build; rm -rf SU2_exec_dev/bin; cd SU2; ./meson.py build -Denable-pywrapper=true -Dcustom-mpi=true --prefix=/path/SU2_exec_dev; ./ninja -C build install",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1150
https://github.com/su2code/SU2/issues/1150:25,Usability,clear,clear,25,"**Describe the bug**; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*. Python wrapper hangs on Set_MPI_ActDisk in CEulerSolver.cpp line 1091 ""SU2_MPI::Barrier(MPI_COMM_WORLD);""; If the SU2_CFD is called without python wrapper, it runs ok. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*. Go to the test case solver, choose the propeller one and run the following script. mpirun -np 2 python launch_su2.py --parallel -f propeller.cfg; [launch_su2.py.txt](https://github.com/su2code/SU2/files/5762218/launch_su2.py.txt). There is no issue when SU2_CFD is called directly:; mpirun -np 2 SU2_CFD propeller.cfg. **Desktop (please complete the following information):**; - OS: [Ubuntu 16.04.6 LTS]; - C++ compiler and version: [g++ (GCC) 9.3.0]; - MPI implementation and version: [OpenMPI 4.0.5]; - SU2 Version: [develop]; - Python Version: 3.6.12; - MPI4Py Version: 3.0.3. In order to fully reproduce the error one can try running the following commands under Anaconda Python Manager, although the same error appears using the default ubuntu python3 and openmpi compilers :; ->conda create -n su2code python=3.6; ->conda activate su2code; ->conda install -c conda-forge c-compiler compilers cxx-compiler openmpi swig mpi4py numpy scipy. Install SU2 with the following script:. #!/bin/bash; export CC=/path/anaconda3/envs/su2code/bin/mpicc; export CXX=/path/anaconda3/envs/su2code/bin/mpicxx; export CXXFLAGS=${CXXFLAGS}:""-lmpi""; rm -rf SU2/build; rm -rf SU2_exec_dev/bin; cd SU2; ./meson.py build -Denable-pywrapper=true -Dcustom-mpi=true --prefix=/path/SU2_exec_dev; ./ninja -C build install",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1150
https://github.com/su2code/SU2/issues/1151:188,Availability,error,error,188,"I had raised the issue #1000 and followed the development when #1102 was proposed. I tried to install SU2 on my new PC with the proposed changes but the ninja built failed with [this long error](https://www.dropbox.com/s/mh3x98kcv8pifv7/ninjarun.log?dl=0). **To Reproduce:**; Run the meson script similar to the following command: `./meson.py build -Denable-openblas=true -Denable-autodiff=true -Denable-directdiff=true -Dwith-mpi=enabled -Dcustom-mpi=true -Denable-pywrapper=true -Dextra-deps=lapack,mpich -Denable-pastix=false --prefix=/home/slimshady/UserPackages/su2-test/SU2_INSTALL`. **Desktop:**; - OS: Arch Linux: Kernel 5.10.4; - C++ compiler and version: gcc (GCC) 10.2.0; - MPI implementation and version: mpich 3.3.2; - SU2 Version: 7.0.8. I was able to install it by changing the meson.build file like so:; ```; # mpi_dep = [dependency('mpi', language: 'c', required : get_option('with-mpi')),; # dependency('mpi', language: 'cpp', required : get_option('with-mpi'))]; mpi_dep = [dependency('mpich', required : get_option('with-mpi')), #new-change; dependency('mpich', required : get_option('with-mpi'))] #new-change; ```; and then configuring without the custom-mpi flag. What could be the issue? Am I using the flags wrong?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1151
https://github.com/su2code/SU2/issues/1151:94,Deployability,install,install,94,"I had raised the issue #1000 and followed the development when #1102 was proposed. I tried to install SU2 on my new PC with the proposed changes but the ninja built failed with [this long error](https://www.dropbox.com/s/mh3x98kcv8pifv7/ninjarun.log?dl=0). **To Reproduce:**; Run the meson script similar to the following command: `./meson.py build -Denable-openblas=true -Denable-autodiff=true -Denable-directdiff=true -Dwith-mpi=enabled -Dcustom-mpi=true -Denable-pywrapper=true -Dextra-deps=lapack,mpich -Denable-pastix=false --prefix=/home/slimshady/UserPackages/su2-test/SU2_INSTALL`. **Desktop:**; - OS: Arch Linux: Kernel 5.10.4; - C++ compiler and version: gcc (GCC) 10.2.0; - MPI implementation and version: mpich 3.3.2; - SU2 Version: 7.0.8. I was able to install it by changing the meson.build file like so:; ```; # mpi_dep = [dependency('mpi', language: 'c', required : get_option('with-mpi')),; # dependency('mpi', language: 'cpp', required : get_option('with-mpi'))]; mpi_dep = [dependency('mpich', required : get_option('with-mpi')), #new-change; dependency('mpich', required : get_option('with-mpi'))] #new-change; ```; and then configuring without the custom-mpi flag. What could be the issue? Am I using the flags wrong?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1151
https://github.com/su2code/SU2/issues/1151:766,Deployability,install,install,766,"I had raised the issue #1000 and followed the development when #1102 was proposed. I tried to install SU2 on my new PC with the proposed changes but the ninja built failed with [this long error](https://www.dropbox.com/s/mh3x98kcv8pifv7/ninjarun.log?dl=0). **To Reproduce:**; Run the meson script similar to the following command: `./meson.py build -Denable-openblas=true -Denable-autodiff=true -Denable-directdiff=true -Dwith-mpi=enabled -Dcustom-mpi=true -Denable-pywrapper=true -Dextra-deps=lapack,mpich -Denable-pastix=false --prefix=/home/slimshady/UserPackages/su2-test/SU2_INSTALL`. **Desktop:**; - OS: Arch Linux: Kernel 5.10.4; - C++ compiler and version: gcc (GCC) 10.2.0; - MPI implementation and version: mpich 3.3.2; - SU2 Version: 7.0.8. I was able to install it by changing the meson.build file like so:; ```; # mpi_dep = [dependency('mpi', language: 'c', required : get_option('with-mpi')),; # dependency('mpi', language: 'cpp', required : get_option('with-mpi'))]; mpi_dep = [dependency('mpich', required : get_option('with-mpi')), #new-change; dependency('mpich', required : get_option('with-mpi'))] #new-change; ```; and then configuring without the custom-mpi flag. What could be the issue? Am I using the flags wrong?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1151
https://github.com/su2code/SU2/issues/1151:838,Integrability,depend,dependency,838,"I had raised the issue #1000 and followed the development when #1102 was proposed. I tried to install SU2 on my new PC with the proposed changes but the ninja built failed with [this long error](https://www.dropbox.com/s/mh3x98kcv8pifv7/ninjarun.log?dl=0). **To Reproduce:**; Run the meson script similar to the following command: `./meson.py build -Denable-openblas=true -Denable-autodiff=true -Denable-directdiff=true -Dwith-mpi=enabled -Dcustom-mpi=true -Denable-pywrapper=true -Dextra-deps=lapack,mpich -Denable-pastix=false --prefix=/home/slimshady/UserPackages/su2-test/SU2_INSTALL`. **Desktop:**; - OS: Arch Linux: Kernel 5.10.4; - C++ compiler and version: gcc (GCC) 10.2.0; - MPI implementation and version: mpich 3.3.2; - SU2 Version: 7.0.8. I was able to install it by changing the meson.build file like so:; ```; # mpi_dep = [dependency('mpi', language: 'c', required : get_option('with-mpi')),; # dependency('mpi', language: 'cpp', required : get_option('with-mpi'))]; mpi_dep = [dependency('mpich', required : get_option('with-mpi')), #new-change; dependency('mpich', required : get_option('with-mpi'))] #new-change; ```; and then configuring without the custom-mpi flag. What could be the issue? Am I using the flags wrong?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1151
https://github.com/su2code/SU2/issues/1151:910,Integrability,depend,dependency,910,"I had raised the issue #1000 and followed the development when #1102 was proposed. I tried to install SU2 on my new PC with the proposed changes but the ninja built failed with [this long error](https://www.dropbox.com/s/mh3x98kcv8pifv7/ninjarun.log?dl=0). **To Reproduce:**; Run the meson script similar to the following command: `./meson.py build -Denable-openblas=true -Denable-autodiff=true -Denable-directdiff=true -Dwith-mpi=enabled -Dcustom-mpi=true -Denable-pywrapper=true -Dextra-deps=lapack,mpich -Denable-pastix=false --prefix=/home/slimshady/UserPackages/su2-test/SU2_INSTALL`. **Desktop:**; - OS: Arch Linux: Kernel 5.10.4; - C++ compiler and version: gcc (GCC) 10.2.0; - MPI implementation and version: mpich 3.3.2; - SU2 Version: 7.0.8. I was able to install it by changing the meson.build file like so:; ```; # mpi_dep = [dependency('mpi', language: 'c', required : get_option('with-mpi')),; # dependency('mpi', language: 'cpp', required : get_option('with-mpi'))]; mpi_dep = [dependency('mpich', required : get_option('with-mpi')), #new-change; dependency('mpich', required : get_option('with-mpi'))] #new-change; ```; and then configuring without the custom-mpi flag. What could be the issue? Am I using the flags wrong?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1151
https://github.com/su2code/SU2/issues/1151:993,Integrability,depend,dependency,993,"I had raised the issue #1000 and followed the development when #1102 was proposed. I tried to install SU2 on my new PC with the proposed changes but the ninja built failed with [this long error](https://www.dropbox.com/s/mh3x98kcv8pifv7/ninjarun.log?dl=0). **To Reproduce:**; Run the meson script similar to the following command: `./meson.py build -Denable-openblas=true -Denable-autodiff=true -Denable-directdiff=true -Dwith-mpi=enabled -Dcustom-mpi=true -Denable-pywrapper=true -Dextra-deps=lapack,mpich -Denable-pastix=false --prefix=/home/slimshady/UserPackages/su2-test/SU2_INSTALL`. **Desktop:**; - OS: Arch Linux: Kernel 5.10.4; - C++ compiler and version: gcc (GCC) 10.2.0; - MPI implementation and version: mpich 3.3.2; - SU2 Version: 7.0.8. I was able to install it by changing the meson.build file like so:; ```; # mpi_dep = [dependency('mpi', language: 'c', required : get_option('with-mpi')),; # dependency('mpi', language: 'cpp', required : get_option('with-mpi'))]; mpi_dep = [dependency('mpich', required : get_option('with-mpi')), #new-change; dependency('mpich', required : get_option('with-mpi'))] #new-change; ```; and then configuring without the custom-mpi flag. What could be the issue? Am I using the flags wrong?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1151
https://github.com/su2code/SU2/issues/1151:1062,Integrability,depend,dependency,1062,"I had raised the issue #1000 and followed the development when #1102 was proposed. I tried to install SU2 on my new PC with the proposed changes but the ninja built failed with [this long error](https://www.dropbox.com/s/mh3x98kcv8pifv7/ninjarun.log?dl=0). **To Reproduce:**; Run the meson script similar to the following command: `./meson.py build -Denable-openblas=true -Denable-autodiff=true -Denable-directdiff=true -Dwith-mpi=enabled -Dcustom-mpi=true -Denable-pywrapper=true -Dextra-deps=lapack,mpich -Denable-pastix=false --prefix=/home/slimshady/UserPackages/su2-test/SU2_INSTALL`. **Desktop:**; - OS: Arch Linux: Kernel 5.10.4; - C++ compiler and version: gcc (GCC) 10.2.0; - MPI implementation and version: mpich 3.3.2; - SU2 Version: 7.0.8. I was able to install it by changing the meson.build file like so:; ```; # mpi_dep = [dependency('mpi', language: 'c', required : get_option('with-mpi')),; # dependency('mpi', language: 'cpp', required : get_option('with-mpi'))]; mpi_dep = [dependency('mpich', required : get_option('with-mpi')), #new-change; dependency('mpich', required : get_option('with-mpi'))] #new-change; ```; and then configuring without the custom-mpi flag. What could be the issue? Am I using the flags wrong?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1151
https://github.com/su2code/SU2/issues/1151:1145,Modifiability,config,configuring,1145,"I had raised the issue #1000 and followed the development when #1102 was proposed. I tried to install SU2 on my new PC with the proposed changes but the ninja built failed with [this long error](https://www.dropbox.com/s/mh3x98kcv8pifv7/ninjarun.log?dl=0). **To Reproduce:**; Run the meson script similar to the following command: `./meson.py build -Denable-openblas=true -Denable-autodiff=true -Denable-directdiff=true -Dwith-mpi=enabled -Dcustom-mpi=true -Denable-pywrapper=true -Dextra-deps=lapack,mpich -Denable-pastix=false --prefix=/home/slimshady/UserPackages/su2-test/SU2_INSTALL`. **Desktop:**; - OS: Arch Linux: Kernel 5.10.4; - C++ compiler and version: gcc (GCC) 10.2.0; - MPI implementation and version: mpich 3.3.2; - SU2 Version: 7.0.8. I was able to install it by changing the meson.build file like so:; ```; # mpi_dep = [dependency('mpi', language: 'c', required : get_option('with-mpi')),; # dependency('mpi', language: 'cpp', required : get_option('with-mpi'))]; mpi_dep = [dependency('mpich', required : get_option('with-mpi')), #new-change; dependency('mpich', required : get_option('with-mpi'))] #new-change; ```; and then configuring without the custom-mpi flag. What could be the issue? Am I using the flags wrong?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1151
https://github.com/su2code/SU2/issues/1151:246,Testability,log,log,246,"I had raised the issue #1000 and followed the development when #1102 was proposed. I tried to install SU2 on my new PC with the proposed changes but the ninja built failed with [this long error](https://www.dropbox.com/s/mh3x98kcv8pifv7/ninjarun.log?dl=0). **To Reproduce:**; Run the meson script similar to the following command: `./meson.py build -Denable-openblas=true -Denable-autodiff=true -Denable-directdiff=true -Dwith-mpi=enabled -Dcustom-mpi=true -Denable-pywrapper=true -Dextra-deps=lapack,mpich -Denable-pastix=false --prefix=/home/slimshady/UserPackages/su2-test/SU2_INSTALL`. **Desktop:**; - OS: Arch Linux: Kernel 5.10.4; - C++ compiler and version: gcc (GCC) 10.2.0; - MPI implementation and version: mpich 3.3.2; - SU2 Version: 7.0.8. I was able to install it by changing the meson.build file like so:; ```; # mpi_dep = [dependency('mpi', language: 'c', required : get_option('with-mpi')),; # dependency('mpi', language: 'cpp', required : get_option('with-mpi'))]; mpi_dep = [dependency('mpich', required : get_option('with-mpi')), #new-change; dependency('mpich', required : get_option('with-mpi'))] #new-change; ```; and then configuring without the custom-mpi flag. What could be the issue? Am I using the flags wrong?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1151
https://github.com/su2code/SU2/issues/1151:571,Testability,test,test,571,"I had raised the issue #1000 and followed the development when #1102 was proposed. I tried to install SU2 on my new PC with the proposed changes but the ninja built failed with [this long error](https://www.dropbox.com/s/mh3x98kcv8pifv7/ninjarun.log?dl=0). **To Reproduce:**; Run the meson script similar to the following command: `./meson.py build -Denable-openblas=true -Denable-autodiff=true -Denable-directdiff=true -Dwith-mpi=enabled -Dcustom-mpi=true -Denable-pywrapper=true -Dextra-deps=lapack,mpich -Denable-pastix=false --prefix=/home/slimshady/UserPackages/su2-test/SU2_INSTALL`. **Desktop:**; - OS: Arch Linux: Kernel 5.10.4; - C++ compiler and version: gcc (GCC) 10.2.0; - MPI implementation and version: mpich 3.3.2; - SU2 Version: 7.0.8. I was able to install it by changing the meson.build file like so:; ```; # mpi_dep = [dependency('mpi', language: 'c', required : get_option('with-mpi')),; # dependency('mpi', language: 'cpp', required : get_option('with-mpi'))]; mpi_dep = [dependency('mpich', required : get_option('with-mpi')), #new-change; dependency('mpich', required : get_option('with-mpi'))] #new-change; ```; and then configuring without the custom-mpi flag. What could be the issue? Am I using the flags wrong?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1151
https://github.com/su2code/SU2/pull/1153:681,Deployability,update,updated,681,"## Proposed Changes; This removes some leftovers from when we deprecated the mesh adaptation.; I had a look at the ""adap"" branches and it seems that the new interface has completely new scripts and these are not needed, @bmunguia correct me if I am wrong. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1153
https://github.com/su2code/SU2/pull/1153:82,Energy Efficiency,adapt,adaptation,82,"## Proposed Changes; This removes some leftovers from when we deprecated the mesh adaptation.; I had a look at the ""adap"" branches and it seems that the new interface has completely new scripts and these are not needed, @bmunguia correct me if I am wrong. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1153
https://github.com/su2code/SU2/pull/1153:157,Integrability,interface,interface,157,"## Proposed Changes; This removes some leftovers from when we deprecated the mesh adaptation.; I had a look at the ""adap"" branches and it seems that the new interface has completely new scripts and these are not needed, @bmunguia correct me if I am wrong. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1153
https://github.com/su2code/SU2/pull/1153:82,Modifiability,adapt,adaptation,82,"## Proposed Changes; This removes some leftovers from when we deprecated the mesh adaptation.; I had a look at the ""adap"" branches and it seems that the new interface has completely new scripts and these are not needed, @bmunguia correct me if I am wrong. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1153
https://github.com/su2code/SU2/pull/1153:608,Testability,test,test,608,"## Proposed Changes; This removes some leftovers from when we deprecated the mesh adaptation.; I had a look at the ""adap"" branches and it seems that the new interface has completely new scripts and these are not needed, @bmunguia correct me if I am wrong. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1153
https://github.com/su2code/SU2/pull/1153:479,Usability,simpl,simply,479,"## Proposed Changes; This removes some leftovers from when we deprecated the mesh adaptation.; I had a look at the ""adap"" branches and it seems that the new interface has completely new scripts and these are not needed, @bmunguia correct me if I am wrong. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1153
https://github.com/su2code/SU2/issues/1154:394,Availability,avail,available,394,"**Is your feature request related to a problem? **; PR #1076 is missing documentation and a testcase. This is the PR where we check the mesh validity after a mesh deformation.; Specifically, we check if a mesh is self-intersecting. **Describe the solution you'd like**; A testcase explaining and showing the usage of the method (config options and description) should be added. ; A testcase is available from the thesis of L.Tol: https://pure.tue.nl/ws/portalfiles/portal/165889356/0894988_Tol.pdf",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1154
https://github.com/su2code/SU2/issues/1154:329,Modifiability,config,config,329,"**Is your feature request related to a problem? **; PR #1076 is missing documentation and a testcase. This is the PR where we check the mesh validity after a mesh deformation.; Specifically, we check if a mesh is self-intersecting. **Describe the solution you'd like**; A testcase explaining and showing the usage of the method (config options and description) should be added. ; A testcase is available from the thesis of L.Tol: https://pure.tue.nl/ws/portalfiles/portal/165889356/0894988_Tol.pdf",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1154
https://github.com/su2code/SU2/issues/1154:92,Testability,test,testcase,92,"**Is your feature request related to a problem? **; PR #1076 is missing documentation and a testcase. This is the PR where we check the mesh validity after a mesh deformation.; Specifically, we check if a mesh is self-intersecting. **Describe the solution you'd like**; A testcase explaining and showing the usage of the method (config options and description) should be added. ; A testcase is available from the thesis of L.Tol: https://pure.tue.nl/ws/portalfiles/portal/165889356/0894988_Tol.pdf",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1154
https://github.com/su2code/SU2/issues/1154:272,Testability,test,testcase,272,"**Is your feature request related to a problem? **; PR #1076 is missing documentation and a testcase. This is the PR where we check the mesh validity after a mesh deformation.; Specifically, we check if a mesh is self-intersecting. **Describe the solution you'd like**; A testcase explaining and showing the usage of the method (config options and description) should be added. ; A testcase is available from the thesis of L.Tol: https://pure.tue.nl/ws/portalfiles/portal/165889356/0894988_Tol.pdf",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1154
https://github.com/su2code/SU2/issues/1154:382,Testability,test,testcase,382,"**Is your feature request related to a problem? **; PR #1076 is missing documentation and a testcase. This is the PR where we check the mesh validity after a mesh deformation.; Specifically, we check if a mesh is self-intersecting. **Describe the solution you'd like**; A testcase explaining and showing the usage of the method (config options and description) should be added. ; A testcase is available from the thesis of L.Tol: https://pure.tue.nl/ws/portalfiles/portal/165889356/0894988_Tol.pdf",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1154
https://github.com/su2code/SU2/issues/1155:127,Availability,robust,robustly,127,"**Is your feature request related to a problem? Please describe.**. The currently implemented wall model for SA is not working robustly, and needs be modified for incompressible flows. The model has not been implemented for SST but can easily be implemented from the SA wall model. The SA wall model implementation in @EduardoMolina 'feature_WallModelLES' works well with almost no modifications and the implementation can be based on this version. . **Describe the solution you'd like**; Current implementation of wall model extended to incompressible flows for SA and SST.; Also needed is proper computation of y+ and wall shear stress in output files.; Validation test case replicating literature performance. Currently available to me: Buice & Eaton Diffuser. **Describe alternatives you've considered**; -. **Additional context**; I performed a preliminary implementation and validation for isothermal walls (Buice & Eaton diffuser).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1155
https://github.com/su2code/SU2/issues/1155:723,Availability,avail,available,723,"**Is your feature request related to a problem? Please describe.**. The currently implemented wall model for SA is not working robustly, and needs be modified for incompressible flows. The model has not been implemented for SST but can easily be implemented from the SA wall model. The SA wall model implementation in @EduardoMolina 'feature_WallModelLES' works well with almost no modifications and the implementation can be based on this version. . **Describe the solution you'd like**; Current implementation of wall model extended to incompressible flows for SA and SST.; Also needed is proper computation of y+ and wall shear stress in output files.; Validation test case replicating literature performance. Currently available to me: Buice & Eaton Diffuser. **Describe alternatives you've considered**; -. **Additional context**; I performed a preliminary implementation and validation for isothermal walls (Buice & Eaton diffuser).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1155
https://github.com/su2code/SU2/issues/1155:526,Modifiability,extend,extended,526,"**Is your feature request related to a problem? Please describe.**. The currently implemented wall model for SA is not working robustly, and needs be modified for incompressible flows. The model has not been implemented for SST but can easily be implemented from the SA wall model. The SA wall model implementation in @EduardoMolina 'feature_WallModelLES' works well with almost no modifications and the implementation can be based on this version. . **Describe the solution you'd like**; Current implementation of wall model extended to incompressible flows for SA and SST.; Also needed is proper computation of y+ and wall shear stress in output files.; Validation test case replicating literature performance. Currently available to me: Buice & Eaton Diffuser. **Describe alternatives you've considered**; -. **Additional context**; I performed a preliminary implementation and validation for isothermal walls (Buice & Eaton diffuser).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1155
https://github.com/su2code/SU2/issues/1155:700,Performance,perform,performance,700,"**Is your feature request related to a problem? Please describe.**. The currently implemented wall model for SA is not working robustly, and needs be modified for incompressible flows. The model has not been implemented for SST but can easily be implemented from the SA wall model. The SA wall model implementation in @EduardoMolina 'feature_WallModelLES' works well with almost no modifications and the implementation can be based on this version. . **Describe the solution you'd like**; Current implementation of wall model extended to incompressible flows for SA and SST.; Also needed is proper computation of y+ and wall shear stress in output files.; Validation test case replicating literature performance. Currently available to me: Buice & Eaton Diffuser. **Describe alternatives you've considered**; -. **Additional context**; I performed a preliminary implementation and validation for isothermal walls (Buice & Eaton diffuser).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1155
https://github.com/su2code/SU2/issues/1155:838,Performance,perform,performed,838,"**Is your feature request related to a problem? Please describe.**. The currently implemented wall model for SA is not working robustly, and needs be modified for incompressible flows. The model has not been implemented for SST but can easily be implemented from the SA wall model. The SA wall model implementation in @EduardoMolina 'feature_WallModelLES' works well with almost no modifications and the implementation can be based on this version. . **Describe the solution you'd like**; Current implementation of wall model extended to incompressible flows for SA and SST.; Also needed is proper computation of y+ and wall shear stress in output files.; Validation test case replicating literature performance. Currently available to me: Buice & Eaton Diffuser. **Describe alternatives you've considered**; -. **Additional context**; I performed a preliminary implementation and validation for isothermal walls (Buice & Eaton diffuser).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1155
https://github.com/su2code/SU2/issues/1155:656,Security,Validat,Validation,656,"**Is your feature request related to a problem? Please describe.**. The currently implemented wall model for SA is not working robustly, and needs be modified for incompressible flows. The model has not been implemented for SST but can easily be implemented from the SA wall model. The SA wall model implementation in @EduardoMolina 'feature_WallModelLES' works well with almost no modifications and the implementation can be based on this version. . **Describe the solution you'd like**; Current implementation of wall model extended to incompressible flows for SA and SST.; Also needed is proper computation of y+ and wall shear stress in output files.; Validation test case replicating literature performance. Currently available to me: Buice & Eaton Diffuser. **Describe alternatives you've considered**; -. **Additional context**; I performed a preliminary implementation and validation for isothermal walls (Buice & Eaton diffuser).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1155
https://github.com/su2code/SU2/issues/1155:881,Security,validat,validation,881,"**Is your feature request related to a problem? Please describe.**. The currently implemented wall model for SA is not working robustly, and needs be modified for incompressible flows. The model has not been implemented for SST but can easily be implemented from the SA wall model. The SA wall model implementation in @EduardoMolina 'feature_WallModelLES' works well with almost no modifications and the implementation can be based on this version. . **Describe the solution you'd like**; Current implementation of wall model extended to incompressible flows for SA and SST.; Also needed is proper computation of y+ and wall shear stress in output files.; Validation test case replicating literature performance. Currently available to me: Buice & Eaton Diffuser. **Describe alternatives you've considered**; -. **Additional context**; I performed a preliminary implementation and validation for isothermal walls (Buice & Eaton diffuser).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1155
https://github.com/su2code/SU2/issues/1155:667,Testability,test,test,667,"**Is your feature request related to a problem? Please describe.**. The currently implemented wall model for SA is not working robustly, and needs be modified for incompressible flows. The model has not been implemented for SST but can easily be implemented from the SA wall model. The SA wall model implementation in @EduardoMolina 'feature_WallModelLES' works well with almost no modifications and the implementation can be based on this version. . **Describe the solution you'd like**; Current implementation of wall model extended to incompressible flows for SA and SST.; Also needed is proper computation of y+ and wall shear stress in output files.; Validation test case replicating literature performance. Currently available to me: Buice & Eaton Diffuser. **Describe alternatives you've considered**; -. **Additional context**; I performed a preliminary implementation and validation for isothermal walls (Buice & Eaton diffuser).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1155
https://github.com/su2code/SU2/issues/1156:447,Availability,ERROR,ERROR,447,"Hi, I'm opening a new thread since it seems that this issue isn't directly related to the AMG mesh refinement itself, but feel free to close or move this to a more appropriate place @pcarruscag . I'm having an issue when running `SU2_CFD` in the `feature_adap` branch (so this means that it also fails when trying to run the mesh refinement script). It seems to run fine for the `TestCase/euler/naca0012` but when I try it on my mesh I get a `UCX ERROR`. On running: `mpirun -n 40 --use-hwthread-cpus /opt/su2/SU2v7_adap/bin/SU2_CFD test.cfg`, I seem to get variations on this message in my screen output:; ```; | 49| -2.095057| 0.015781| 0.001431| 0.000000| 9.1667e+04|; | 50| -2.140503| 0.015781| 0.001431| 0.000000| 9.1667e+04|; +-----------------------------------------------------------------------+; | File Writing Summary | Filename |; +-----------------------------------------------------------------------+; |SU2 restart |restart_flow.dat |; |Paraview binary |flow.vtk |; |Paraview binary surface |surface_flow.vtk |; [1609922278.175246] [super:1134625:0] sock.c:344 UCX ERROR recv(fd=56) failed: Bad address; [1609922278.175301] [super:1134625:0] sock.c:344 UCX ERROR recv(fd=54) failed: Connection reset by peer; [1609922278.175551] [super:1134625:0] sock.c:344 UCX ERROR sendv(fd=-1) failed: Bad file descriptor. SU2_CFD: ../externals/parmetis/libparmetis/match.c:243: libparmetis__Match_Global: Assertion `k >= firstvtx && k < lastvtx' failed.; [super:1134138] *** Process received signal ***; [super:1134138] Signal: Aborted (6); [super:1134138] Signal code: (-6); [super:1134138] [ 0] /lib64/libpthread.so.0(+0x12b20)[0x7fb93d021b20]; [super:1134138] [ 1] /lib64/libc.so.6(gsignal+0x10f)[0x7fb93c1507ff]; [super:1134138] [ 2] /lib64/libc.so.6(abort+0x127)[0x7fb93c13ac35]; [super:1134138] [ 3] /lib64/libc.so.6(+0x21b09)[0x7fb93c13ab09]; [super:1134138] [ 4] /lib64/libc.so.6(+0x2fde6)[0x7fb93c148de6]; [super:1134138] [ 5] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x1a9be03]; [super:1134138] ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1156
https://github.com/su2code/SU2/issues/1156:1082,Availability,ERROR,ERROR,1082,"inement itself, but feel free to close or move this to a more appropriate place @pcarruscag . I'm having an issue when running `SU2_CFD` in the `feature_adap` branch (so this means that it also fails when trying to run the mesh refinement script). It seems to run fine for the `TestCase/euler/naca0012` but when I try it on my mesh I get a `UCX ERROR`. On running: `mpirun -n 40 --use-hwthread-cpus /opt/su2/SU2v7_adap/bin/SU2_CFD test.cfg`, I seem to get variations on this message in my screen output:; ```; | 49| -2.095057| 0.015781| 0.001431| 0.000000| 9.1667e+04|; | 50| -2.140503| 0.015781| 0.001431| 0.000000| 9.1667e+04|; +-----------------------------------------------------------------------+; | File Writing Summary | Filename |; +-----------------------------------------------------------------------+; |SU2 restart |restart_flow.dat |; |Paraview binary |flow.vtk |; |Paraview binary surface |surface_flow.vtk |; [1609922278.175246] [super:1134625:0] sock.c:344 UCX ERROR recv(fd=56) failed: Bad address; [1609922278.175301] [super:1134625:0] sock.c:344 UCX ERROR recv(fd=54) failed: Connection reset by peer; [1609922278.175551] [super:1134625:0] sock.c:344 UCX ERROR sendv(fd=-1) failed: Bad file descriptor. SU2_CFD: ../externals/parmetis/libparmetis/match.c:243: libparmetis__Match_Global: Assertion `k >= firstvtx && k < lastvtx' failed.; [super:1134138] *** Process received signal ***; [super:1134138] Signal: Aborted (6); [super:1134138] Signal code: (-6); [super:1134138] [ 0] /lib64/libpthread.so.0(+0x12b20)[0x7fb93d021b20]; [super:1134138] [ 1] /lib64/libc.so.6(gsignal+0x10f)[0x7fb93c1507ff]; [super:1134138] [ 2] /lib64/libc.so.6(abort+0x127)[0x7fb93c13ac35]; [super:1134138] [ 3] /lib64/libc.so.6(+0x21b09)[0x7fb93c13ab09]; [super:1134138] [ 4] /lib64/libc.so.6(+0x2fde6)[0x7fb93c148de6]; [super:1134138] [ 5] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x1a9be03]; [super:1134138] [ 6] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x1a94e76]; [super:1134138] [ 7] /opt/su2/SU2v7_adap/bin/SU2_CFD[",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1156
https://github.com/su2code/SU2/issues/1156:1174,Availability,ERROR,ERROR,1174,"aving an issue when running `SU2_CFD` in the `feature_adap` branch (so this means that it also fails when trying to run the mesh refinement script). It seems to run fine for the `TestCase/euler/naca0012` but when I try it on my mesh I get a `UCX ERROR`. On running: `mpirun -n 40 --use-hwthread-cpus /opt/su2/SU2v7_adap/bin/SU2_CFD test.cfg`, I seem to get variations on this message in my screen output:; ```; | 49| -2.095057| 0.015781| 0.001431| 0.000000| 9.1667e+04|; | 50| -2.140503| 0.015781| 0.001431| 0.000000| 9.1667e+04|; +-----------------------------------------------------------------------+; | File Writing Summary | Filename |; +-----------------------------------------------------------------------+; |SU2 restart |restart_flow.dat |; |Paraview binary |flow.vtk |; |Paraview binary surface |surface_flow.vtk |; [1609922278.175246] [super:1134625:0] sock.c:344 UCX ERROR recv(fd=56) failed: Bad address; [1609922278.175301] [super:1134625:0] sock.c:344 UCX ERROR recv(fd=54) failed: Connection reset by peer; [1609922278.175551] [super:1134625:0] sock.c:344 UCX ERROR sendv(fd=-1) failed: Bad file descriptor. SU2_CFD: ../externals/parmetis/libparmetis/match.c:243: libparmetis__Match_Global: Assertion `k >= firstvtx && k < lastvtx' failed.; [super:1134138] *** Process received signal ***; [super:1134138] Signal: Aborted (6); [super:1134138] Signal code: (-6); [super:1134138] [ 0] /lib64/libpthread.so.0(+0x12b20)[0x7fb93d021b20]; [super:1134138] [ 1] /lib64/libc.so.6(gsignal+0x10f)[0x7fb93c1507ff]; [super:1134138] [ 2] /lib64/libc.so.6(abort+0x127)[0x7fb93c13ac35]; [super:1134138] [ 3] /lib64/libc.so.6(+0x21b09)[0x7fb93c13ab09]; [super:1134138] [ 4] /lib64/libc.so.6(+0x2fde6)[0x7fb93c148de6]; [super:1134138] [ 5] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x1a9be03]; [super:1134138] [ 6] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x1a94e76]; [super:1134138] [ 7] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x1a9590d]; [super:1134138] [ 8] /opt/su2/SU2v7_adap/bin/SU2_CFD[0xabb1bb]; [super:1134138] [ 9] /",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1156
https://github.com/su2code/SU2/issues/1156:1279,Availability,ERROR,ERROR,1279,"ails when trying to run the mesh refinement script). It seems to run fine for the `TestCase/euler/naca0012` but when I try it on my mesh I get a `UCX ERROR`. On running: `mpirun -n 40 --use-hwthread-cpus /opt/su2/SU2v7_adap/bin/SU2_CFD test.cfg`, I seem to get variations on this message in my screen output:; ```; | 49| -2.095057| 0.015781| 0.001431| 0.000000| 9.1667e+04|; | 50| -2.140503| 0.015781| 0.001431| 0.000000| 9.1667e+04|; +-----------------------------------------------------------------------+; | File Writing Summary | Filename |; +-----------------------------------------------------------------------+; |SU2 restart |restart_flow.dat |; |Paraview binary |flow.vtk |; |Paraview binary surface |surface_flow.vtk |; [1609922278.175246] [super:1134625:0] sock.c:344 UCX ERROR recv(fd=56) failed: Bad address; [1609922278.175301] [super:1134625:0] sock.c:344 UCX ERROR recv(fd=54) failed: Connection reset by peer; [1609922278.175551] [super:1134625:0] sock.c:344 UCX ERROR sendv(fd=-1) failed: Bad file descriptor. SU2_CFD: ../externals/parmetis/libparmetis/match.c:243: libparmetis__Match_Global: Assertion `k >= firstvtx && k < lastvtx' failed.; [super:1134138] *** Process received signal ***; [super:1134138] Signal: Aborted (6); [super:1134138] Signal code: (-6); [super:1134138] [ 0] /lib64/libpthread.so.0(+0x12b20)[0x7fb93d021b20]; [super:1134138] [ 1] /lib64/libc.so.6(gsignal+0x10f)[0x7fb93c1507ff]; [super:1134138] [ 2] /lib64/libc.so.6(abort+0x127)[0x7fb93c13ac35]; [super:1134138] [ 3] /lib64/libc.so.6(+0x21b09)[0x7fb93c13ab09]; [super:1134138] [ 4] /lib64/libc.so.6(+0x2fde6)[0x7fb93c148de6]; [super:1134138] [ 5] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x1a9be03]; [super:1134138] [ 6] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x1a94e76]; [super:1134138] [ 7] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x1a9590d]; [super:1134138] [ 8] /opt/su2/SU2v7_adap/bin/SU2_CFD[0xabb1bb]; [super:1134138] [ 9] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x7ddf6b]; [super:1134138] [10] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1156
https://github.com/su2code/SU2/issues/1156:2669,Availability,error,error,2669,"6(gsignal+0x10f)[0x7fb93c1507ff]; [super:1134138] [ 2] /lib64/libc.so.6(abort+0x127)[0x7fb93c13ac35]; [super:1134138] [ 3] /lib64/libc.so.6(+0x21b09)[0x7fb93c13ab09]; [super:1134138] [ 4] /lib64/libc.so.6(+0x2fde6)[0x7fb93c148de6]; [super:1134138] [ 5] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x1a9be03]; [super:1134138] [ 6] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x1a94e76]; [super:1134138] [ 7] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x1a9590d]; [super:1134138] [ 8] /opt/su2/SU2v7_adap/bin/SU2_CFD[0xabb1bb]; [super:1134138] [ 9] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x7ddf6b]; [super:1134138] [10] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x7ded07]; [super:1134138] [11] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x7df356]; [super:1134138] [12] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x7e445f]; [super:1134138] [13] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x45ba61]; [super:1134138] [14] /lib64/libc.so.6(__libc_start_main+0xf3)[0x7fb93c13c7b3]; [super:1134138] [15] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x47216e]; [super:1134138] *** End of error message ***; --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; --------------------------------------------------------------------------; mpirun noticed that process rank 38 with PID 0 on node super exited on signal 6 (Aborted).; --------------------------------------------------------------------------; ```. Sometimes it hangs to the `UCX ERROR` lines straight after `Building the graph adjacency structure.` in Geometry Preprocessing and other times, it seems to run fine for the first batch of iterations until it hits the first solution file writing iteration (as set by `OUTPUT_WRT_FREQ`) show in the above output snip. Do you have any hints on how to debug this or what might be causing this? Thanks. **To Reproduce**; I've attached the mesh and config file in [this link](http",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1156
https://github.com/su2code/SU2/issues/1156:3246,Availability,ERROR,ERROR,3246,":1134138] [ 6] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x1a94e76]; [super:1134138] [ 7] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x1a9590d]; [super:1134138] [ 8] /opt/su2/SU2v7_adap/bin/SU2_CFD[0xabb1bb]; [super:1134138] [ 9] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x7ddf6b]; [super:1134138] [10] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x7ded07]; [super:1134138] [11] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x7df356]; [super:1134138] [12] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x7e445f]; [super:1134138] [13] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x45ba61]; [super:1134138] [14] /lib64/libc.so.6(__libc_start_main+0xf3)[0x7fb93c13c7b3]; [super:1134138] [15] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x47216e]; [super:1134138] *** End of error message ***; --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; --------------------------------------------------------------------------; mpirun noticed that process rank 38 with PID 0 on node super exited on signal 6 (Aborted).; --------------------------------------------------------------------------; ```. Sometimes it hangs to the `UCX ERROR` lines straight after `Building the graph adjacency structure.` in Geometry Preprocessing and other times, it seems to run fine for the first batch of iterations until it hits the first solution file writing iteration (as set by `OUTPUT_WRT_FREQ`) show in the above output snip. Do you have any hints on how to debug this or what might be causing this? Thanks. **To Reproduce**; I've attached the mesh and config file in [this link](https://drive.google.com/drive/folders/12J3u9NsowQoVz8Dl7eQaFia7BaBflenJ?usp=sharing). **Desktop (please complete the following information):**; - OS: Linux CentOS 8; - C++ compiler and version: GCC 8.22; - MPI implementation and version: Intel (Open MPI) 3.0.0; - SU2 Version: v7.0.3 (feature_adap branch)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1156
https://github.com/su2code/SU2/issues/1156:577,Integrability,message,message,577,"Hi, I'm opening a new thread since it seems that this issue isn't directly related to the AMG mesh refinement itself, but feel free to close or move this to a more appropriate place @pcarruscag . I'm having an issue when running `SU2_CFD` in the `feature_adap` branch (so this means that it also fails when trying to run the mesh refinement script). It seems to run fine for the `TestCase/euler/naca0012` but when I try it on my mesh I get a `UCX ERROR`. On running: `mpirun -n 40 --use-hwthread-cpus /opt/su2/SU2v7_adap/bin/SU2_CFD test.cfg`, I seem to get variations on this message in my screen output:; ```; | 49| -2.095057| 0.015781| 0.001431| 0.000000| 9.1667e+04|; | 50| -2.140503| 0.015781| 0.001431| 0.000000| 9.1667e+04|; +-----------------------------------------------------------------------+; | File Writing Summary | Filename |; +-----------------------------------------------------------------------+; |SU2 restart |restart_flow.dat |; |Paraview binary |flow.vtk |; |Paraview binary surface |surface_flow.vtk |; [1609922278.175246] [super:1134625:0] sock.c:344 UCX ERROR recv(fd=56) failed: Bad address; [1609922278.175301] [super:1134625:0] sock.c:344 UCX ERROR recv(fd=54) failed: Connection reset by peer; [1609922278.175551] [super:1134625:0] sock.c:344 UCX ERROR sendv(fd=-1) failed: Bad file descriptor. SU2_CFD: ../externals/parmetis/libparmetis/match.c:243: libparmetis__Match_Global: Assertion `k >= firstvtx && k < lastvtx' failed.; [super:1134138] *** Process received signal ***; [super:1134138] Signal: Aborted (6); [super:1134138] Signal code: (-6); [super:1134138] [ 0] /lib64/libpthread.so.0(+0x12b20)[0x7fb93d021b20]; [super:1134138] [ 1] /lib64/libc.so.6(gsignal+0x10f)[0x7fb93c1507ff]; [super:1134138] [ 2] /lib64/libc.so.6(abort+0x127)[0x7fb93c13ac35]; [super:1134138] [ 3] /lib64/libc.so.6(+0x21b09)[0x7fb93c13ab09]; [super:1134138] [ 4] /lib64/libc.so.6(+0x2fde6)[0x7fb93c148de6]; [super:1134138] [ 5] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x1a9be03]; [super:1134138] ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1156
https://github.com/su2code/SU2/issues/1156:2675,Integrability,message,message,2675,"6(gsignal+0x10f)[0x7fb93c1507ff]; [super:1134138] [ 2] /lib64/libc.so.6(abort+0x127)[0x7fb93c13ac35]; [super:1134138] [ 3] /lib64/libc.so.6(+0x21b09)[0x7fb93c13ab09]; [super:1134138] [ 4] /lib64/libc.so.6(+0x2fde6)[0x7fb93c148de6]; [super:1134138] [ 5] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x1a9be03]; [super:1134138] [ 6] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x1a94e76]; [super:1134138] [ 7] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x1a9590d]; [super:1134138] [ 8] /opt/su2/SU2v7_adap/bin/SU2_CFD[0xabb1bb]; [super:1134138] [ 9] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x7ddf6b]; [super:1134138] [10] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x7ded07]; [super:1134138] [11] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x7df356]; [super:1134138] [12] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x7e445f]; [super:1134138] [13] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x45ba61]; [super:1134138] [14] /lib64/libc.so.6(__libc_start_main+0xf3)[0x7fb93c13c7b3]; [super:1134138] [15] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x47216e]; [super:1134138] *** End of error message ***; --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; --------------------------------------------------------------------------; mpirun noticed that process rank 38 with PID 0 on node super exited on signal 6 (Aborted).; --------------------------------------------------------------------------; ```. Sometimes it hangs to the `UCX ERROR` lines straight after `Building the graph adjacency structure.` in Geometry Preprocessing and other times, it seems to run fine for the first batch of iterations until it hits the first solution file writing iteration (as set by `OUTPUT_WRT_FREQ`) show in the above output snip. Do you have any hints on how to debug this or what might be causing this? Thanks. **To Reproduce**; I've attached the mesh and config file in [this link](http",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1156
https://github.com/su2code/SU2/issues/1156:3658,Modifiability,config,config,3658,":1134138] [ 6] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x1a94e76]; [super:1134138] [ 7] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x1a9590d]; [super:1134138] [ 8] /opt/su2/SU2v7_adap/bin/SU2_CFD[0xabb1bb]; [super:1134138] [ 9] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x7ddf6b]; [super:1134138] [10] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x7ded07]; [super:1134138] [11] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x7df356]; [super:1134138] [12] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x7e445f]; [super:1134138] [13] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x45ba61]; [super:1134138] [14] /lib64/libc.so.6(__libc_start_main+0xf3)[0x7fb93c13c7b3]; [super:1134138] [15] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x47216e]; [super:1134138] *** End of error message ***; --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; --------------------------------------------------------------------------; mpirun noticed that process rank 38 with PID 0 on node super exited on signal 6 (Aborted).; --------------------------------------------------------------------------; ```. Sometimes it hangs to the `UCX ERROR` lines straight after `Building the graph adjacency structure.` in Geometry Preprocessing and other times, it seems to run fine for the first batch of iterations until it hits the first solution file writing iteration (as set by `OUTPUT_WRT_FREQ`) show in the above output snip. Do you have any hints on how to debug this or what might be causing this? Thanks. **To Reproduce**; I've attached the mesh and config file in [this link](https://drive.google.com/drive/folders/12J3u9NsowQoVz8Dl7eQaFia7BaBflenJ?usp=sharing). **Desktop (please complete the following information):**; - OS: Linux CentOS 8; - C++ compiler and version: GCC 8.22; - MPI implementation and version: Intel (Open MPI) 3.0.0; - SU2 Version: v7.0.3 (feature_adap branch)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1156
https://github.com/su2code/SU2/issues/1156:1533,Safety,Abort,Aborted,1533,"fg`, I seem to get variations on this message in my screen output:; ```; | 49| -2.095057| 0.015781| 0.001431| 0.000000| 9.1667e+04|; | 50| -2.140503| 0.015781| 0.001431| 0.000000| 9.1667e+04|; +-----------------------------------------------------------------------+; | File Writing Summary | Filename |; +-----------------------------------------------------------------------+; |SU2 restart |restart_flow.dat |; |Paraview binary |flow.vtk |; |Paraview binary surface |surface_flow.vtk |; [1609922278.175246] [super:1134625:0] sock.c:344 UCX ERROR recv(fd=56) failed: Bad address; [1609922278.175301] [super:1134625:0] sock.c:344 UCX ERROR recv(fd=54) failed: Connection reset by peer; [1609922278.175551] [super:1134625:0] sock.c:344 UCX ERROR sendv(fd=-1) failed: Bad file descriptor. SU2_CFD: ../externals/parmetis/libparmetis/match.c:243: libparmetis__Match_Global: Assertion `k >= firstvtx && k < lastvtx' failed.; [super:1134138] *** Process received signal ***; [super:1134138] Signal: Aborted (6); [super:1134138] Signal code: (-6); [super:1134138] [ 0] /lib64/libpthread.so.0(+0x12b20)[0x7fb93d021b20]; [super:1134138] [ 1] /lib64/libc.so.6(gsignal+0x10f)[0x7fb93c1507ff]; [super:1134138] [ 2] /lib64/libc.so.6(abort+0x127)[0x7fb93c13ac35]; [super:1134138] [ 3] /lib64/libc.so.6(+0x21b09)[0x7fb93c13ab09]; [super:1134138] [ 4] /lib64/libc.so.6(+0x2fde6)[0x7fb93c148de6]; [super:1134138] [ 5] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x1a9be03]; [super:1134138] [ 6] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x1a94e76]; [super:1134138] [ 7] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x1a9590d]; [super:1134138] [ 8] /opt/su2/SU2v7_adap/bin/SU2_CFD[0xabb1bb]; [super:1134138] [ 9] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x7ddf6b]; [super:1134138] [10] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x7ded07]; [super:1134138] [11] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x7df356]; [super:1134138] [12] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x7e445f]; [super:1134138] [13] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x45ba61]; [super:1134138] [14] /lib64/libc.so.6(__",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1156
https://github.com/su2code/SU2/issues/1156:1760,Safety,abort,abort,1760,--------------+; | File Writing Summary | Filename |; +-----------------------------------------------------------------------+; |SU2 restart |restart_flow.dat |; |Paraview binary |flow.vtk |; |Paraview binary surface |surface_flow.vtk |; [1609922278.175246] [super:1134625:0] sock.c:344 UCX ERROR recv(fd=56) failed: Bad address; [1609922278.175301] [super:1134625:0] sock.c:344 UCX ERROR recv(fd=54) failed: Connection reset by peer; [1609922278.175551] [super:1134625:0] sock.c:344 UCX ERROR sendv(fd=-1) failed: Bad file descriptor. SU2_CFD: ../externals/parmetis/libparmetis/match.c:243: libparmetis__Match_Global: Assertion `k >= firstvtx && k < lastvtx' failed.; [super:1134138] *** Process received signal ***; [super:1134138] Signal: Aborted (6); [super:1134138] Signal code: (-6); [super:1134138] [ 0] /lib64/libpthread.so.0(+0x12b20)[0x7fb93d021b20]; [super:1134138] [ 1] /lib64/libc.so.6(gsignal+0x10f)[0x7fb93c1507ff]; [super:1134138] [ 2] /lib64/libc.so.6(abort+0x127)[0x7fb93c13ac35]; [super:1134138] [ 3] /lib64/libc.so.6(+0x21b09)[0x7fb93c13ab09]; [super:1134138] [ 4] /lib64/libc.so.6(+0x2fde6)[0x7fb93c148de6]; [super:1134138] [ 5] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x1a9be03]; [super:1134138] [ 6] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x1a94e76]; [super:1134138] [ 7] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x1a9590d]; [super:1134138] [ 8] /opt/su2/SU2v7_adap/bin/SU2_CFD[0xabb1bb]; [super:1134138] [ 9] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x7ddf6b]; [super:1134138] [10] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x7ded07]; [super:1134138] [11] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x7df356]; [super:1134138] [12] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x7e445f]; [super:1134138] [13] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x45ba61]; [super:1134138] [14] /lib64/libc.so.6(__libc_start_main+0xf3)[0x7fb93c13c7b3]; [super:1134138] [15] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x47216e]; [super:1134138] *** End of error message ***; --------------------------------------------------------------------------; Primary job terminated norm,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1156
https://github.com/su2code/SU2/issues/1156:2880,Safety,abort,aborted,2880,"4138] [ 4] /lib64/libc.so.6(+0x2fde6)[0x7fb93c148de6]; [super:1134138] [ 5] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x1a9be03]; [super:1134138] [ 6] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x1a94e76]; [super:1134138] [ 7] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x1a9590d]; [super:1134138] [ 8] /opt/su2/SU2v7_adap/bin/SU2_CFD[0xabb1bb]; [super:1134138] [ 9] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x7ddf6b]; [super:1134138] [10] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x7ded07]; [super:1134138] [11] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x7df356]; [super:1134138] [12] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x7e445f]; [super:1134138] [13] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x45ba61]; [super:1134138] [14] /lib64/libc.so.6(__libc_start_main+0xf3)[0x7fb93c13c7b3]; [super:1134138] [15] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x47216e]; [super:1134138] *** End of error message ***; --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; --------------------------------------------------------------------------; mpirun noticed that process rank 38 with PID 0 on node super exited on signal 6 (Aborted).; --------------------------------------------------------------------------; ```. Sometimes it hangs to the `UCX ERROR` lines straight after `Building the graph adjacency structure.` in Geometry Preprocessing and other times, it seems to run fine for the first batch of iterations until it hits the first solution file writing iteration (as set by `OUTPUT_WRT_FREQ`) show in the above output snip. Do you have any hints on how to debug this or what might be causing this? Thanks. **To Reproduce**; I've attached the mesh and config file in [this link](https://drive.google.com/drive/folders/12J3u9NsowQoVz8Dl7eQaFia7BaBflenJ?usp=sharing). **Desktop (please complete the following information):**; - OS: Linux CentOS 8; - C++ compile",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1156
https://github.com/su2code/SU2/issues/1156:3123,Safety,Abort,Aborted,3123,":1134138] [ 6] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x1a94e76]; [super:1134138] [ 7] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x1a9590d]; [super:1134138] [ 8] /opt/su2/SU2v7_adap/bin/SU2_CFD[0xabb1bb]; [super:1134138] [ 9] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x7ddf6b]; [super:1134138] [10] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x7ded07]; [super:1134138] [11] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x7df356]; [super:1134138] [12] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x7e445f]; [super:1134138] [13] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x45ba61]; [super:1134138] [14] /lib64/libc.so.6(__libc_start_main+0xf3)[0x7fb93c13c7b3]; [super:1134138] [15] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x47216e]; [super:1134138] *** End of error message ***; --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; --------------------------------------------------------------------------; mpirun noticed that process rank 38 with PID 0 on node super exited on signal 6 (Aborted).; --------------------------------------------------------------------------; ```. Sometimes it hangs to the `UCX ERROR` lines straight after `Building the graph adjacency structure.` in Geometry Preprocessing and other times, it seems to run fine for the first batch of iterations until it hits the first solution file writing iteration (as set by `OUTPUT_WRT_FREQ`) show in the above output snip. Do you have any hints on how to debug this or what might be causing this? Thanks. **To Reproduce**; I've attached the mesh and config file in [this link](https://drive.google.com/drive/folders/12J3u9NsowQoVz8Dl7eQaFia7BaBflenJ?usp=sharing). **Desktop (please complete the following information):**; - OS: Linux CentOS 8; - C++ compiler and version: GCC 8.22; - MPI implementation and version: Intel (Open MPI) 3.0.0; - SU2 Version: v7.0.3 (feature_adap branch)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1156
https://github.com/su2code/SU2/issues/1156:380,Testability,Test,TestCase,380,"Hi, I'm opening a new thread since it seems that this issue isn't directly related to the AMG mesh refinement itself, but feel free to close or move this to a more appropriate place @pcarruscag . I'm having an issue when running `SU2_CFD` in the `feature_adap` branch (so this means that it also fails when trying to run the mesh refinement script). It seems to run fine for the `TestCase/euler/naca0012` but when I try it on my mesh I get a `UCX ERROR`. On running: `mpirun -n 40 --use-hwthread-cpus /opt/su2/SU2v7_adap/bin/SU2_CFD test.cfg`, I seem to get variations on this message in my screen output:; ```; | 49| -2.095057| 0.015781| 0.001431| 0.000000| 9.1667e+04|; | 50| -2.140503| 0.015781| 0.001431| 0.000000| 9.1667e+04|; +-----------------------------------------------------------------------+; | File Writing Summary | Filename |; +-----------------------------------------------------------------------+; |SU2 restart |restart_flow.dat |; |Paraview binary |flow.vtk |; |Paraview binary surface |surface_flow.vtk |; [1609922278.175246] [super:1134625:0] sock.c:344 UCX ERROR recv(fd=56) failed: Bad address; [1609922278.175301] [super:1134625:0] sock.c:344 UCX ERROR recv(fd=54) failed: Connection reset by peer; [1609922278.175551] [super:1134625:0] sock.c:344 UCX ERROR sendv(fd=-1) failed: Bad file descriptor. SU2_CFD: ../externals/parmetis/libparmetis/match.c:243: libparmetis__Match_Global: Assertion `k >= firstvtx && k < lastvtx' failed.; [super:1134138] *** Process received signal ***; [super:1134138] Signal: Aborted (6); [super:1134138] Signal code: (-6); [super:1134138] [ 0] /lib64/libpthread.so.0(+0x12b20)[0x7fb93d021b20]; [super:1134138] [ 1] /lib64/libc.so.6(gsignal+0x10f)[0x7fb93c1507ff]; [super:1134138] [ 2] /lib64/libc.so.6(abort+0x127)[0x7fb93c13ac35]; [super:1134138] [ 3] /lib64/libc.so.6(+0x21b09)[0x7fb93c13ab09]; [super:1134138] [ 4] /lib64/libc.so.6(+0x2fde6)[0x7fb93c148de6]; [super:1134138] [ 5] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x1a9be03]; [super:1134138] ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1156
https://github.com/su2code/SU2/issues/1156:533,Testability,test,test,533,"Hi, I'm opening a new thread since it seems that this issue isn't directly related to the AMG mesh refinement itself, but feel free to close or move this to a more appropriate place @pcarruscag . I'm having an issue when running `SU2_CFD` in the `feature_adap` branch (so this means that it also fails when trying to run the mesh refinement script). It seems to run fine for the `TestCase/euler/naca0012` but when I try it on my mesh I get a `UCX ERROR`. On running: `mpirun -n 40 --use-hwthread-cpus /opt/su2/SU2v7_adap/bin/SU2_CFD test.cfg`, I seem to get variations on this message in my screen output:; ```; | 49| -2.095057| 0.015781| 0.001431| 0.000000| 9.1667e+04|; | 50| -2.140503| 0.015781| 0.001431| 0.000000| 9.1667e+04|; +-----------------------------------------------------------------------+; | File Writing Summary | Filename |; +-----------------------------------------------------------------------+; |SU2 restart |restart_flow.dat |; |Paraview binary |flow.vtk |; |Paraview binary surface |surface_flow.vtk |; [1609922278.175246] [super:1134625:0] sock.c:344 UCX ERROR recv(fd=56) failed: Bad address; [1609922278.175301] [super:1134625:0] sock.c:344 UCX ERROR recv(fd=54) failed: Connection reset by peer; [1609922278.175551] [super:1134625:0] sock.c:344 UCX ERROR sendv(fd=-1) failed: Bad file descriptor. SU2_CFD: ../externals/parmetis/libparmetis/match.c:243: libparmetis__Match_Global: Assertion `k >= firstvtx && k < lastvtx' failed.; [super:1134138] *** Process received signal ***; [super:1134138] Signal: Aborted (6); [super:1134138] Signal code: (-6); [super:1134138] [ 0] /lib64/libpthread.so.0(+0x12b20)[0x7fb93d021b20]; [super:1134138] [ 1] /lib64/libc.so.6(gsignal+0x10f)[0x7fb93c1507ff]; [super:1134138] [ 2] /lib64/libc.so.6(abort+0x127)[0x7fb93c13ac35]; [super:1134138] [ 3] /lib64/libc.so.6(+0x21b09)[0x7fb93c13ab09]; [super:1134138] [ 4] /lib64/libc.so.6(+0x2fde6)[0x7fb93c148de6]; [super:1134138] [ 5] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x1a9be03]; [super:1134138] ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1156
https://github.com/su2code/SU2/issues/1156:1410,Testability,Assert,Assertion,1410,"ry it on my mesh I get a `UCX ERROR`. On running: `mpirun -n 40 --use-hwthread-cpus /opt/su2/SU2v7_adap/bin/SU2_CFD test.cfg`, I seem to get variations on this message in my screen output:; ```; | 49| -2.095057| 0.015781| 0.001431| 0.000000| 9.1667e+04|; | 50| -2.140503| 0.015781| 0.001431| 0.000000| 9.1667e+04|; +-----------------------------------------------------------------------+; | File Writing Summary | Filename |; +-----------------------------------------------------------------------+; |SU2 restart |restart_flow.dat |; |Paraview binary |flow.vtk |; |Paraview binary surface |surface_flow.vtk |; [1609922278.175246] [super:1134625:0] sock.c:344 UCX ERROR recv(fd=56) failed: Bad address; [1609922278.175301] [super:1134625:0] sock.c:344 UCX ERROR recv(fd=54) failed: Connection reset by peer; [1609922278.175551] [super:1134625:0] sock.c:344 UCX ERROR sendv(fd=-1) failed: Bad file descriptor. SU2_CFD: ../externals/parmetis/libparmetis/match.c:243: libparmetis__Match_Global: Assertion `k >= firstvtx && k < lastvtx' failed.; [super:1134138] *** Process received signal ***; [super:1134138] Signal: Aborted (6); [super:1134138] Signal code: (-6); [super:1134138] [ 0] /lib64/libpthread.so.0(+0x12b20)[0x7fb93d021b20]; [super:1134138] [ 1] /lib64/libc.so.6(gsignal+0x10f)[0x7fb93c1507ff]; [super:1134138] [ 2] /lib64/libc.so.6(abort+0x127)[0x7fb93c13ac35]; [super:1134138] [ 3] /lib64/libc.so.6(+0x21b09)[0x7fb93c13ab09]; [super:1134138] [ 4] /lib64/libc.so.6(+0x2fde6)[0x7fb93c148de6]; [super:1134138] [ 5] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x1a9be03]; [super:1134138] [ 6] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x1a94e76]; [super:1134138] [ 7] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x1a9590d]; [super:1134138] [ 8] /opt/su2/SU2v7_adap/bin/SU2_CFD[0xabb1bb]; [super:1134138] [ 9] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x7ddf6b]; [super:1134138] [10] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x7ded07]; [super:1134138] [11] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x7df356]; [super:1134138] [12] /opt/su2/SU2v7_adap/bin/S",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1156
https://github.com/su2code/SU2/pull/1157:27,Availability,error,error,27,"## Proposed Changes; Throw error for LM, print message that BC is the 2020 version. ## Related Work; #1132; #1130. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1157
https://github.com/su2code/SU2/pull/1157:540,Deployability,update,updated,540,"## Proposed Changes; Throw error for LM, print message that BC is the 2020 version. ## Related Work; #1132; #1130. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1157
https://github.com/su2code/SU2/pull/1157:47,Integrability,message,message,47,"## Proposed Changes; Throw error for LM, print message that BC is the 2020 version. ## Related Work; #1132; #1130. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1157
https://github.com/su2code/SU2/pull/1157:467,Testability,test,test,467,"## Proposed Changes; Throw error for LM, print message that BC is the 2020 version. ## Related Work; #1132; #1130. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1157
https://github.com/su2code/SU2/pull/1157:338,Usability,simpl,simply,338,"## Proposed Changes; Throw error for LM, print message that BC is the 2020 version. ## Related Work; #1132; #1130. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1157
https://github.com/su2code/SU2/pull/1158:49,Availability,repair,repair,49,"## Proposed Changes; added testcase to check and repair self-intersecting mesh and nonconvex cells after deformation ; ; ## Related Work; fixes #1154, addition to implementation of #1076. ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1158
https://github.com/su2code/SU2/pull/1158:613,Deployability,update,updated,613,"## Proposed Changes; added testcase to check and repair self-intersecting mesh and nonconvex cells after deformation ; ; ## Related Work; fixes #1154, addition to implementation of #1076. ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1158
https://github.com/su2code/SU2/pull/1158:27,Testability,test,testcase,27,"## Proposed Changes; added testcase to check and repair self-intersecting mesh and nonconvex cells after deformation ; ; ## Related Work; fixes #1154, addition to implementation of #1076. ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1158
https://github.com/su2code/SU2/pull/1158:540,Testability,test,test,540,"## Proposed Changes; added testcase to check and repair self-intersecting mesh and nonconvex cells after deformation ; ; ## Related Work; fixes #1154, addition to implementation of #1076. ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1158
https://github.com/su2code/SU2/pull/1158:411,Usability,simpl,simply,411,"## Proposed Changes; added testcase to check and repair self-intersecting mesh and nonconvex cells after deformation ; ; ## Related Work; fixes #1154, addition to implementation of #1076. ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1158
https://github.com/su2code/SU2/pull/1159:1125,Deployability,update,updated,1125,"## Proposed Changes; On the RANS onera m6 case (43k hex grid) the tape for the geometric recording becomes 13% smaller by:; - Computing element CG's together with their contributions to the dual volumes and edge normal vectors;; - Using preaccumulation ""per element"" instead of for each of the individual computations done for each element. On the hybrid grid for the same geometry we have in TestCases the reduction is 32%. Some additional memory reduction is achieved by not storing the primal element face CG's and the edge CG's, these are only needed when building dual volumes and they are easy to recompute with the data already accessed where they are currently needed. ## Related Work; #594. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1159
https://github.com/su2code/SU2/pull/1159:635,Security,access,accessed,635,"## Proposed Changes; On the RANS onera m6 case (43k hex grid) the tape for the geometric recording becomes 13% smaller by:; - Computing element CG's together with their contributions to the dual volumes and edge normal vectors;; - Using preaccumulation ""per element"" instead of for each of the individual computations done for each element. On the hybrid grid for the same geometry we have in TestCases the reduction is 32%. Some additional memory reduction is achieved by not storing the primal element face CG's and the edge CG's, these are only needed when building dual volumes and they are easy to recompute with the data already accessed where they are currently needed. ## Related Work; #594. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1159
https://github.com/su2code/SU2/pull/1159:393,Testability,Test,TestCases,393,"## Proposed Changes; On the RANS onera m6 case (43k hex grid) the tape for the geometric recording becomes 13% smaller by:; - Computing element CG's together with their contributions to the dual volumes and edge normal vectors;; - Using preaccumulation ""per element"" instead of for each of the individual computations done for each element. On the hybrid grid for the same geometry we have in TestCases the reduction is 32%. Some additional memory reduction is achieved by not storing the primal element face CG's and the edge CG's, these are only needed when building dual volumes and they are easy to recompute with the data already accessed where they are currently needed. ## Related Work; #594. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1159
https://github.com/su2code/SU2/pull/1159:1052,Testability,test,test,1052,"## Proposed Changes; On the RANS onera m6 case (43k hex grid) the tape for the geometric recording becomes 13% smaller by:; - Computing element CG's together with their contributions to the dual volumes and edge normal vectors;; - Using preaccumulation ""per element"" instead of for each of the individual computations done for each element. On the hybrid grid for the same geometry we have in TestCases the reduction is 32%. Some additional memory reduction is achieved by not storing the primal element face CG's and the edge CG's, these are only needed when building dual volumes and they are easy to recompute with the data already accessed where they are currently needed. ## Related Work; #594. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1159
https://github.com/su2code/SU2/pull/1159:923,Usability,simpl,simply,923,"## Proposed Changes; On the RANS onera m6 case (43k hex grid) the tape for the geometric recording becomes 13% smaller by:; - Computing element CG's together with their contributions to the dual volumes and edge normal vectors;; - Using preaccumulation ""per element"" instead of for each of the individual computations done for each element. On the hybrid grid for the same geometry we have in TestCases the reduction is 32%. Some additional memory reduction is achieved by not storing the primal element face CG's and the edge CG's, these are only needed when building dual volumes and they are easy to recompute with the data already accessed where they are currently needed. ## Related Work; #594. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1159
https://github.com/su2code/SU2/pull/1160:378,Deployability,configurat,configuration,378,"## Proposed Changes; This PR; -changes the name of the class CUserDefinedTCLib to CSU2TCLib (class that refers to the SU2 native fluid model for nonequilibrium flows); -introduces another nonequilibrium fluid model that refers to the support of Mutation++ library. CMutationTCLib class is introduced at the same level of CSU2TCLib, as a child of CFluidModel; -sets up the meson configuration of Mutation++ as a git submodule (since Mutation++ is a cmake library, it needs to be treated as meson subproject). For appropriate review of this PR; 1. please test the link to mutation++ with:; `$./meson.py <build_dir> --prefix=<path_to_su2> -Denable-mpp=true`; and follow the instructions at the end of the meson log; 2. run the regression test in TestCases/nonequilibrium/viscwedge_mpp. ## Related Work; This PR follows a series of PRs to migrate the full NEMO solver to the develop/master branch, with @WallyMaier and @fmpmorgado . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1160
https://github.com/su2code/SU2/pull/1160:1594,Deployability,update,updated,1594,"## Proposed Changes; This PR; -changes the name of the class CUserDefinedTCLib to CSU2TCLib (class that refers to the SU2 native fluid model for nonequilibrium flows); -introduces another nonequilibrium fluid model that refers to the support of Mutation++ library. CMutationTCLib class is introduced at the same level of CSU2TCLib, as a child of CFluidModel; -sets up the meson configuration of Mutation++ as a git submodule (since Mutation++ is a cmake library, it needs to be treated as meson subproject). For appropriate review of this PR; 1. please test the link to mutation++ with:; `$./meson.py <build_dir> --prefix=<path_to_su2> -Denable-mpp=true`; and follow the instructions at the end of the meson log; 2. run the regression test in TestCases/nonequilibrium/viscwedge_mpp. ## Related Work; This PR follows a series of PRs to migrate the full NEMO solver to the develop/master branch, with @WallyMaier and @fmpmorgado . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1160
https://github.com/su2code/SU2/pull/1160:378,Modifiability,config,configuration,378,"## Proposed Changes; This PR; -changes the name of the class CUserDefinedTCLib to CSU2TCLib (class that refers to the SU2 native fluid model for nonequilibrium flows); -introduces another nonequilibrium fluid model that refers to the support of Mutation++ library. CMutationTCLib class is introduced at the same level of CSU2TCLib, as a child of CFluidModel; -sets up the meson configuration of Mutation++ as a git submodule (since Mutation++ is a cmake library, it needs to be treated as meson subproject). For appropriate review of this PR; 1. please test the link to mutation++ with:; `$./meson.py <build_dir> --prefix=<path_to_su2> -Denable-mpp=true`; and follow the instructions at the end of the meson log; 2. run the regression test in TestCases/nonequilibrium/viscwedge_mpp. ## Related Work; This PR follows a series of PRs to migrate the full NEMO solver to the develop/master branch, with @WallyMaier and @fmpmorgado . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1160
https://github.com/su2code/SU2/pull/1160:553,Testability,test,test,553,"## Proposed Changes; This PR; -changes the name of the class CUserDefinedTCLib to CSU2TCLib (class that refers to the SU2 native fluid model for nonequilibrium flows); -introduces another nonequilibrium fluid model that refers to the support of Mutation++ library. CMutationTCLib class is introduced at the same level of CSU2TCLib, as a child of CFluidModel; -sets up the meson configuration of Mutation++ as a git submodule (since Mutation++ is a cmake library, it needs to be treated as meson subproject). For appropriate review of this PR; 1. please test the link to mutation++ with:; `$./meson.py <build_dir> --prefix=<path_to_su2> -Denable-mpp=true`; and follow the instructions at the end of the meson log; 2. run the regression test in TestCases/nonequilibrium/viscwedge_mpp. ## Related Work; This PR follows a series of PRs to migrate the full NEMO solver to the develop/master branch, with @WallyMaier and @fmpmorgado . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1160
https://github.com/su2code/SU2/pull/1160:708,Testability,log,log,708,"## Proposed Changes; This PR; -changes the name of the class CUserDefinedTCLib to CSU2TCLib (class that refers to the SU2 native fluid model for nonequilibrium flows); -introduces another nonequilibrium fluid model that refers to the support of Mutation++ library. CMutationTCLib class is introduced at the same level of CSU2TCLib, as a child of CFluidModel; -sets up the meson configuration of Mutation++ as a git submodule (since Mutation++ is a cmake library, it needs to be treated as meson subproject). For appropriate review of this PR; 1. please test the link to mutation++ with:; `$./meson.py <build_dir> --prefix=<path_to_su2> -Denable-mpp=true`; and follow the instructions at the end of the meson log; 2. run the regression test in TestCases/nonequilibrium/viscwedge_mpp. ## Related Work; This PR follows a series of PRs to migrate the full NEMO solver to the develop/master branch, with @WallyMaier and @fmpmorgado . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1160
https://github.com/su2code/SU2/pull/1160:735,Testability,test,test,735,"## Proposed Changes; This PR; -changes the name of the class CUserDefinedTCLib to CSU2TCLib (class that refers to the SU2 native fluid model for nonequilibrium flows); -introduces another nonequilibrium fluid model that refers to the support of Mutation++ library. CMutationTCLib class is introduced at the same level of CSU2TCLib, as a child of CFluidModel; -sets up the meson configuration of Mutation++ as a git submodule (since Mutation++ is a cmake library, it needs to be treated as meson subproject). For appropriate review of this PR; 1. please test the link to mutation++ with:; `$./meson.py <build_dir> --prefix=<path_to_su2> -Denable-mpp=true`; and follow the instructions at the end of the meson log; 2. run the regression test in TestCases/nonequilibrium/viscwedge_mpp. ## Related Work; This PR follows a series of PRs to migrate the full NEMO solver to the develop/master branch, with @WallyMaier and @fmpmorgado . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1160
https://github.com/su2code/SU2/pull/1160:743,Testability,Test,TestCases,743,"## Proposed Changes; This PR; -changes the name of the class CUserDefinedTCLib to CSU2TCLib (class that refers to the SU2 native fluid model for nonequilibrium flows); -introduces another nonequilibrium fluid model that refers to the support of Mutation++ library. CMutationTCLib class is introduced at the same level of CSU2TCLib, as a child of CFluidModel; -sets up the meson configuration of Mutation++ as a git submodule (since Mutation++ is a cmake library, it needs to be treated as meson subproject). For appropriate review of this PR; 1. please test the link to mutation++ with:; `$./meson.py <build_dir> --prefix=<path_to_su2> -Denable-mpp=true`; and follow the instructions at the end of the meson log; 2. run the regression test in TestCases/nonequilibrium/viscwedge_mpp. ## Related Work; This PR follows a series of PRs to migrate the full NEMO solver to the develop/master branch, with @WallyMaier and @fmpmorgado . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1160
https://github.com/su2code/SU2/pull/1160:1521,Testability,test,test,1521,"## Proposed Changes; This PR; -changes the name of the class CUserDefinedTCLib to CSU2TCLib (class that refers to the SU2 native fluid model for nonequilibrium flows); -introduces another nonequilibrium fluid model that refers to the support of Mutation++ library. CMutationTCLib class is introduced at the same level of CSU2TCLib, as a child of CFluidModel; -sets up the meson configuration of Mutation++ as a git submodule (since Mutation++ is a cmake library, it needs to be treated as meson subproject). For appropriate review of this PR; 1. please test the link to mutation++ with:; `$./meson.py <build_dir> --prefix=<path_to_su2> -Denable-mpp=true`; and follow the instructions at the end of the meson log; 2. run the regression test in TestCases/nonequilibrium/viscwedge_mpp. ## Related Work; This PR follows a series of PRs to migrate the full NEMO solver to the develop/master branch, with @WallyMaier and @fmpmorgado . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1160
https://github.com/su2code/SU2/pull/1160:1101,Usability,guid,guide,1101,"## Proposed Changes; This PR; -changes the name of the class CUserDefinedTCLib to CSU2TCLib (class that refers to the SU2 native fluid model for nonequilibrium flows); -introduces another nonequilibrium fluid model that refers to the support of Mutation++ library. CMutationTCLib class is introduced at the same level of CSU2TCLib, as a child of CFluidModel; -sets up the meson configuration of Mutation++ as a git submodule (since Mutation++ is a cmake library, it needs to be treated as meson subproject). For appropriate review of this PR; 1. please test the link to mutation++ with:; `$./meson.py <build_dir> --prefix=<path_to_su2> -Denable-mpp=true`; and follow the instructions at the end of the meson log; 2. run the regression test in TestCases/nonequilibrium/viscwedge_mpp. ## Related Work; This PR follows a series of PRs to migrate the full NEMO solver to the develop/master branch, with @WallyMaier and @fmpmorgado . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1160
https://github.com/su2code/SU2/pull/1160:1392,Usability,simpl,simply,1392,"## Proposed Changes; This PR; -changes the name of the class CUserDefinedTCLib to CSU2TCLib (class that refers to the SU2 native fluid model for nonequilibrium flows); -introduces another nonequilibrium fluid model that refers to the support of Mutation++ library. CMutationTCLib class is introduced at the same level of CSU2TCLib, as a child of CFluidModel; -sets up the meson configuration of Mutation++ as a git submodule (since Mutation++ is a cmake library, it needs to be treated as meson subproject). For appropriate review of this PR; 1. please test the link to mutation++ with:; `$./meson.py <build_dir> --prefix=<path_to_su2> -Denable-mpp=true`; and follow the instructions at the end of the meson log; 2. run the regression test in TestCases/nonequilibrium/viscwedge_mpp. ## Related Work; This PR follows a series of PRs to migrate the full NEMO solver to the develop/master branch, with @WallyMaier and @fmpmorgado . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1160
https://github.com/su2code/SU2/pull/1162:996,Deployability,update,updated,996,"## Proposed Changes; . - Additional source terms are implemented in the residual computation for NEMO planar axisymmetric flows. This allows inviscid and viscous axisymmetric simulations. . ## Related Work. - Built upon framework in PR #1106 by FlorianDM, which introduced viscous axisymmetric source terms for non-reacting flows. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1162
https://github.com/su2code/SU2/pull/1162:923,Testability,test,test,923,"## Proposed Changes; . - Additional source terms are implemented in the residual computation for NEMO planar axisymmetric flows. This allows inviscid and viscous axisymmetric simulations. . ## Related Work. - Built upon framework in PR #1106 by FlorianDM, which introduced viscous axisymmetric source terms for non-reacting flows. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1162
https://github.com/su2code/SU2/pull/1162:503,Usability,guid,guide,503,"## Proposed Changes; . - Additional source terms are implemented in the residual computation for NEMO planar axisymmetric flows. This allows inviscid and viscous axisymmetric simulations. . ## Related Work. - Built upon framework in PR #1106 by FlorianDM, which introduced viscous axisymmetric source terms for non-reacting flows. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1162
https://github.com/su2code/SU2/pull/1162:794,Usability,simpl,simply,794,"## Proposed Changes; . - Additional source terms are implemented in the residual computation for NEMO planar axisymmetric flows. This allows inviscid and viscous axisymmetric simulations. . ## Related Work. - Built upon framework in PR #1106 by FlorianDM, which introduced viscous axisymmetric source terms for non-reacting flows. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1162
https://github.com/su2code/SU2/pull/1163:663,Deployability,update,updated,663,"## Proposed Changes; Use Isend instead of Bsend (to avoid having to attach / resize buffers).; Disclaimer: No idea if this is the right way, like a good programmer I got the solution from stackoverflow. ## Related Work; Should fix #1150. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1163
https://github.com/su2code/SU2/pull/1163:52,Safety,avoid,avoid,52,"## Proposed Changes; Use Isend instead of Bsend (to avoid having to attach / resize buffers).; Disclaimer: No idea if this is the right way, like a good programmer I got the solution from stackoverflow. ## Related Work; Should fix #1150. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1163
https://github.com/su2code/SU2/pull/1163:590,Testability,test,test,590,"## Proposed Changes; Use Isend instead of Bsend (to avoid having to attach / resize buffers).; Disclaimer: No idea if this is the right way, like a good programmer I got the solution from stackoverflow. ## Related Work; Should fix #1150. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1163
https://github.com/su2code/SU2/pull/1163:461,Usability,simpl,simply,461,"## Proposed Changes; Use Isend instead of Bsend (to avoid having to attach / resize buffers).; Disclaimer: No idea if this is the right way, like a good programmer I got the solution from stackoverflow. ## Related Work; Should fix #1150. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1163
https://github.com/su2code/SU2/pull/1166:590,Deployability,update,updated,590,"## Proposed Changes; Leaks and stuff, @WallyMaier I did not check if the method is implemented correctly, looked decent on the naca0012. ## Related Work; fix #1161. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1166
https://github.com/su2code/SU2/pull/1166:517,Testability,test,test,517,"## Proposed Changes; Leaks and stuff, @WallyMaier I did not check if the method is implemented correctly, looked decent on the naca0012. ## Related Work; fix #1161. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1166
https://github.com/su2code/SU2/pull/1166:388,Usability,simpl,simply,388,"## Proposed Changes; Leaks and stuff, @WallyMaier I did not check if the method is implemented correctly, looked decent on the naca0012. ## Related Work; fix #1161. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1166
https://github.com/su2code/SU2/pull/1167:715,Deployability,update,updated,715,"## Proposed Changes; I tried to do something about the OF's that are not working with the python scripts.; If I got it right, the OF string needs to match the name used for history/screen output, at least to allow the automatically generated history map to be used. ## Related Work; #1075. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1167
https://github.com/su2code/SU2/pull/1167:642,Testability,test,test,642,"## Proposed Changes; I tried to do something about the OF's that are not working with the python scripts.; If I got it right, the OF string needs to match the name used for history/screen output, at least to allow the automatically generated history map to be used. ## Related Work; #1075. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1167
https://github.com/su2code/SU2/pull/1167:513,Usability,simpl,simply,513,"## Proposed Changes; I tried to do something about the OF's that are not working with the python scripts.; If I got it right, the OF string needs to match the name used for history/screen output, at least to allow the automatically generated history map to be used. ## Related Work; #1075. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1167
https://github.com/su2code/SU2/pull/1168:1171,Deployability,update,updated,1171,"in symmetry planes;; - ~Calculates new residuals to take into account the symmetry of the mesh;~ Only corrects momentum residual vector in current version.; - ~Uses a modified volume to calculate the solution in symmetry planes;~ Does not require modified volume in current version. ## Related Work; #657. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. ## Results. For the sake of demonstrating the capability of the new Symmetry Boundary condition, the image shows a comparison of pressure at the surface, using the new implementation and the old symmetry boundary condition, for a flow over a 3D cylinder and considering the lateral and bottom surfaces as symmetry plane:. ### New Implementation vs Old Implementation for N2 mixture (2nd Order - NEMO_NS solver - AUSM scheme). ![Screenshot from 2021-01-20 23-28-31](https://user-images.githubusercontent.com/29612207/105253606-b6244c00-5b77-11eb-8689-c6e6190b4b5b.png). I have run this test without changing the viscous eigenvalues, and it converges to the same value. However, for unsteady simulations, changing the eigenvalues provides better results. ### New Implementation (on NEMO) vs Current SU2 Implementation for AIR5 mixture (2nd Order - NS solver - AUSM scheme). ![image](https://user-images.githubusercontent.com/29612207/105",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1168
https://github.com/su2code/SU2/pull/1168:1098,Testability,test,test,1098,"he implementation works as follows:*; - Calculates new viscous eigenvalues for nodes in symmetry planes;; - ~Calculates new residuals to take into account the symmetry of the mesh;~ Only corrects momentum residual vector in current version.; - ~Uses a modified volume to calculate the solution in symmetry planes;~ Does not require modified volume in current version. ## Related Work; #657. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. ## Results. For the sake of demonstrating the capability of the new Symmetry Boundary condition, the image shows a comparison of pressure at the surface, using the new implementation and the old symmetry boundary condition, for a flow over a 3D cylinder and considering the lateral and bottom surfaces as symmetry plane:. ### New Implementation vs Old Implementation for N2 mixture (2nd Order - NEMO_NS solver - AUSM scheme). ![Screenshot from 2021-01-20 23-28-31](https://user-images.githubusercontent.com/29612207/105253606-b6244c00-5b77-11eb-8689-c6e6190b4b5b.png). I have run this test without changing the viscous eigenvalues, and it converges to the same value. However, for unsteady simulations, changing the eigenvalues provides better results. ### New Implementation (on NEMO) vs Current SU2 Implementation for AIR5 mixture (2nd Order - NS so",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1168
https://github.com/su2code/SU2/pull/1168:1850,Testability,test,test,1850," to take into account the symmetry of the mesh;~ Only corrects momentum residual vector in current version.; - ~Uses a modified volume to calculate the solution in symmetry planes;~ Does not require modified volume in current version. ## Related Work; #657. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. ## Results. For the sake of demonstrating the capability of the new Symmetry Boundary condition, the image shows a comparison of pressure at the surface, using the new implementation and the old symmetry boundary condition, for a flow over a 3D cylinder and considering the lateral and bottom surfaces as symmetry plane:. ### New Implementation vs Old Implementation for N2 mixture (2nd Order - NEMO_NS solver - AUSM scheme). ![Screenshot from 2021-01-20 23-28-31](https://user-images.githubusercontent.com/29612207/105253606-b6244c00-5b77-11eb-8689-c6e6190b4b5b.png). I have run this test without changing the viscous eigenvalues, and it converges to the same value. However, for unsteady simulations, changing the eigenvalues provides better results. ### New Implementation (on NEMO) vs Current SU2 Implementation for AIR5 mixture (2nd Order - NS solver - AUSM scheme). ![image](https://user-images.githubusercontent.com/29612207/105254215-f1734a80-5b78-11eb-939f-46a34f558faf.png)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1168
https://github.com/su2code/SU2/pull/1168:678,Usability,guid,guide,678,"## Proposed Changes; *Implementation of a new boundary condition for symmetry plane instead of using Euler Wall.; The implementation works as follows:*; - Calculates new viscous eigenvalues for nodes in symmetry planes;; - ~Calculates new residuals to take into account the symmetry of the mesh;~ Only corrects momentum residual vector in current version.; - ~Uses a modified volume to calculate the solution in symmetry planes;~ Does not require modified volume in current version. ## Related Work; #657. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. ## Results. For the sake of demonstrating the capability of the new Symmetry Boundary condition, the image shows a comparison of pressure at the surface, using the new implementation and the old symmetry boundary condition, for a flow over a 3D cylinder and considering the lateral and bottom surfaces as symmetry plane:. ### New Implementation vs Old Implementation for N2 mixture (2nd Order - NEMO_NS solver - AUSM scheme). ![Screenshot from 2021-01-20 23-28-31](https://user-images.githubusercontent.com/29612207/105253606-b6244c00-5b77-11eb-8689-c6e6190b4b5b.png). I have run this test without changing the viscous eigenvalues, and it converges to the same value. However, for unsteady simulations, changing the eigenvalues provides",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1168
https://github.com/su2code/SU2/pull/1168:969,Usability,simpl,simply,969,"## Proposed Changes; *Implementation of a new boundary condition for symmetry plane instead of using Euler Wall.; The implementation works as follows:*; - Calculates new viscous eigenvalues for nodes in symmetry planes;; - ~Calculates new residuals to take into account the symmetry of the mesh;~ Only corrects momentum residual vector in current version.; - ~Uses a modified volume to calculate the solution in symmetry planes;~ Does not require modified volume in current version. ## Related Work; #657. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. ## Results. For the sake of demonstrating the capability of the new Symmetry Boundary condition, the image shows a comparison of pressure at the surface, using the new implementation and the old symmetry boundary condition, for a flow over a 3D cylinder and considering the lateral and bottom surfaces as symmetry plane:. ### New Implementation vs Old Implementation for N2 mixture (2nd Order - NEMO_NS solver - AUSM scheme). ![Screenshot from 2021-01-20 23-28-31](https://user-images.githubusercontent.com/29612207/105253606-b6244c00-5b77-11eb-8689-c6e6190b4b5b.png). I have run this test without changing the viscous eigenvalues, and it converges to the same value. However, for unsteady simulations, changing the eigenvalues provides",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1168
https://github.com/su2code/SU2/pull/1169:799,Deployability,update,updated,799,"## Proposed Changes; Remove unused `CPhysicalGeometry::Local_to_Global_Marker`, `Global_to_Local_Marker`; . ## Related Work; #1110. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1169
https://github.com/su2code/SU2/pull/1169:726,Testability,test,test,726,"## Proposed Changes; Remove unused `CPhysicalGeometry::Local_to_Global_Marker`, `Global_to_Local_Marker`; . ## Related Work; #1110. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1169
https://github.com/su2code/SU2/pull/1169:304,Usability,guid,guide,304,"## Proposed Changes; Remove unused `CPhysicalGeometry::Local_to_Global_Marker`, `Global_to_Local_Marker`; . ## Related Work; #1110. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1169
https://github.com/su2code/SU2/pull/1169:596,Usability,simpl,simply,596,"## Proposed Changes; Remove unused `CPhysicalGeometry::Local_to_Global_Marker`, `Global_to_Local_Marker`; . ## Related Work; #1110. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1169
https://github.com/su2code/SU2/pull/1170:309,Availability,redundant,redundant,309,"## Proposed Changes. - This PR addresses an issue I found in my previous implementation where the chemistry source residual was being computed incorrectly when the axisymmetric source residual was called. ; - This implementation fixes that issue, caused by using outer and inner loops. ; - This PR eliminates redundant set functions, and restructures the code blocks to minimize the number of loops. . ## Related Work. - Fixes bug found in PR #1162 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1170
https://github.com/su2code/SU2/pull/1170:1116,Deployability,update,updated,1116,"## Proposed Changes. - This PR addresses an issue I found in my previous implementation where the chemistry source residual was being computed incorrectly when the axisymmetric source residual was called. ; - This implementation fixes that issue, caused by using outer and inner loops. ; - This PR eliminates redundant set functions, and restructures the code blocks to minimize the number of loops. . ## Related Work. - Fixes bug found in PR #1162 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1170
https://github.com/su2code/SU2/pull/1170:309,Safety,redund,redundant,309,"## Proposed Changes. - This PR addresses an issue I found in my previous implementation where the chemistry source residual was being computed incorrectly when the axisymmetric source residual was called. ; - This implementation fixes that issue, caused by using outer and inner loops. ; - This PR eliminates redundant set functions, and restructures the code blocks to minimize the number of loops. . ## Related Work. - Fixes bug found in PR #1162 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1170
https://github.com/su2code/SU2/pull/1170:1043,Testability,test,test,1043,"## Proposed Changes. - This PR addresses an issue I found in my previous implementation where the chemistry source residual was being computed incorrectly when the axisymmetric source residual was called. ; - This implementation fixes that issue, caused by using outer and inner loops. ; - This PR eliminates redundant set functions, and restructures the code blocks to minimize the number of loops. . ## Related Work. - Fixes bug found in PR #1162 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1170
https://github.com/su2code/SU2/pull/1170:623,Usability,guid,guide,623,"## Proposed Changes. - This PR addresses an issue I found in my previous implementation where the chemistry source residual was being computed incorrectly when the axisymmetric source residual was called. ; - This implementation fixes that issue, caused by using outer and inner loops. ; - This PR eliminates redundant set functions, and restructures the code blocks to minimize the number of loops. . ## Related Work. - Fixes bug found in PR #1162 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1170
https://github.com/su2code/SU2/pull/1170:914,Usability,simpl,simply,914,"## Proposed Changes. - This PR addresses an issue I found in my previous implementation where the chemistry source residual was being computed incorrectly when the axisymmetric source residual was called. ; - This implementation fixes that issue, caused by using outer and inner loops. ; - This PR eliminates redundant set functions, and restructures the code blocks to minimize the number of loops. . ## Related Work. - Fixes bug found in PR #1162 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1170
https://github.com/su2code/SU2/issues/1171:60,Integrability,rout,routine,60,"**Describe the bug**; A compiler warning brought me to this routine.; The logic to check for convexity of 3D elements seems flawed, I left two comments in the code in #1167 (it will be in develop soon enough) of what seems odd about it.; I think this routine was introduced in #1076, and it seems the intention is to check the volume of the tet associated with each corner of an element, a similar method is used in CPhysicalGeometry::Check_IntElem_Orientation. I am not planning to fix this myself :)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1171
https://github.com/su2code/SU2/issues/1171:251,Integrability,rout,routine,251,"**Describe the bug**; A compiler warning brought me to this routine.; The logic to check for convexity of 3D elements seems flawed, I left two comments in the code in #1167 (it will be in develop soon enough) of what seems odd about it.; I think this routine was introduced in #1076, and it seems the intention is to check the volume of the tet associated with each corner of an element, a similar method is used in CPhysicalGeometry::Check_IntElem_Orientation. I am not planning to fix this myself :)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1171
https://github.com/su2code/SU2/issues/1171:74,Testability,log,logic,74,"**Describe the bug**; A compiler warning brought me to this routine.; The logic to check for convexity of 3D elements seems flawed, I left two comments in the code in #1167 (it will be in develop soon enough) of what seems odd about it.; I think this routine was introduced in #1076, and it seems the intention is to check the volume of the tet associated with each corner of an element, a similar method is used in CPhysicalGeometry::Check_IntElem_Orientation. I am not planning to fix this myself :)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1171
https://github.com/su2code/SU2/pull/1174:1168,Deployability,update,updated,1168,"## Proposed Changes. This PR enforces the continuity of velocity explicitly at the fluid structure interface for each time step. The velocity was previously recalculated for the fluid nodes based on displacement history of the nodes. This is still needed for fluid only problems with deforming meshes. However, for FSI problems, the velocity at the interface can be transferred from the structural solution and propagated to the fluid nodes similarly to the displacement which ensures exact agreement at the interface at each time-step. This change has been validated using a typical FSI benchmark of square cylinder with a flexible cantilever beam, which gives good agreement in peak tip displacement and Strouhal number.; . ## Related Work. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174
https://github.com/su2code/SU2/pull/1174:99,Integrability,interface,interface,99,"## Proposed Changes. This PR enforces the continuity of velocity explicitly at the fluid structure interface for each time step. The velocity was previously recalculated for the fluid nodes based on displacement history of the nodes. This is still needed for fluid only problems with deforming meshes. However, for FSI problems, the velocity at the interface can be transferred from the structural solution and propagated to the fluid nodes similarly to the displacement which ensures exact agreement at the interface at each time-step. This change has been validated using a typical FSI benchmark of square cylinder with a flexible cantilever beam, which gives good agreement in peak tip displacement and Strouhal number.; . ## Related Work. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174
https://github.com/su2code/SU2/pull/1174:349,Integrability,interface,interface,349,"## Proposed Changes. This PR enforces the continuity of velocity explicitly at the fluid structure interface for each time step. The velocity was previously recalculated for the fluid nodes based on displacement history of the nodes. This is still needed for fluid only problems with deforming meshes. However, for FSI problems, the velocity at the interface can be transferred from the structural solution and propagated to the fluid nodes similarly to the displacement which ensures exact agreement at the interface at each time-step. This change has been validated using a typical FSI benchmark of square cylinder with a flexible cantilever beam, which gives good agreement in peak tip displacement and Strouhal number.; . ## Related Work. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174
https://github.com/su2code/SU2/pull/1174:508,Integrability,interface,interface,508,"## Proposed Changes. This PR enforces the continuity of velocity explicitly at the fluid structure interface for each time step. The velocity was previously recalculated for the fluid nodes based on displacement history of the nodes. This is still needed for fluid only problems with deforming meshes. However, for FSI problems, the velocity at the interface can be transferred from the structural solution and propagated to the fluid nodes similarly to the displacement which ensures exact agreement at the interface at each time-step. This change has been validated using a typical FSI benchmark of square cylinder with a flexible cantilever beam, which gives good agreement in peak tip displacement and Strouhal number.; . ## Related Work. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174
https://github.com/su2code/SU2/pull/1174:624,Modifiability,flexible,flexible,624,"## Proposed Changes. This PR enforces the continuity of velocity explicitly at the fluid structure interface for each time step. The velocity was previously recalculated for the fluid nodes based on displacement history of the nodes. This is still needed for fluid only problems with deforming meshes. However, for FSI problems, the velocity at the interface can be transferred from the structural solution and propagated to the fluid nodes similarly to the displacement which ensures exact agreement at the interface at each time-step. This change has been validated using a typical FSI benchmark of square cylinder with a flexible cantilever beam, which gives good agreement in peak tip displacement and Strouhal number.; . ## Related Work. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174
https://github.com/su2code/SU2/pull/1174:558,Security,validat,validated,558,"## Proposed Changes. This PR enforces the continuity of velocity explicitly at the fluid structure interface for each time step. The velocity was previously recalculated for the fluid nodes based on displacement history of the nodes. This is still needed for fluid only problems with deforming meshes. However, for FSI problems, the velocity at the interface can be transferred from the structural solution and propagated to the fluid nodes similarly to the displacement which ensures exact agreement at the interface at each time-step. This change has been validated using a typical FSI benchmark of square cylinder with a flexible cantilever beam, which gives good agreement in peak tip displacement and Strouhal number.; . ## Related Work. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174
https://github.com/su2code/SU2/pull/1174:588,Testability,benchmark,benchmark,588,"## Proposed Changes. This PR enforces the continuity of velocity explicitly at the fluid structure interface for each time step. The velocity was previously recalculated for the fluid nodes based on displacement history of the nodes. This is still needed for fluid only problems with deforming meshes. However, for FSI problems, the velocity at the interface can be transferred from the structural solution and propagated to the fluid nodes similarly to the displacement which ensures exact agreement at the interface at each time-step. This change has been validated using a typical FSI benchmark of square cylinder with a flexible cantilever beam, which gives good agreement in peak tip displacement and Strouhal number.; . ## Related Work. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174
https://github.com/su2code/SU2/pull/1174:1095,Testability,test,test,1095,"## Proposed Changes. This PR enforces the continuity of velocity explicitly at the fluid structure interface for each time step. The velocity was previously recalculated for the fluid nodes based on displacement history of the nodes. This is still needed for fluid only problems with deforming meshes. However, for FSI problems, the velocity at the interface can be transferred from the structural solution and propagated to the fluid nodes similarly to the displacement which ensures exact agreement at the interface at each time-step. This change has been validated using a typical FSI benchmark of square cylinder with a flexible cantilever beam, which gives good agreement in peak tip displacement and Strouhal number.; . ## Related Work. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174
https://github.com/su2code/SU2/pull/1174:966,Usability,simpl,simply,966,"## Proposed Changes. This PR enforces the continuity of velocity explicitly at the fluid structure interface for each time step. The velocity was previously recalculated for the fluid nodes based on displacement history of the nodes. This is still needed for fluid only problems with deforming meshes. However, for FSI problems, the velocity at the interface can be transferred from the structural solution and propagated to the fluid nodes similarly to the displacement which ensures exact agreement at the interface at each time-step. This change has been validated using a typical FSI benchmark of square cylinder with a flexible cantilever beam, which gives good agreement in peak tip displacement and Strouhal number.; . ## Related Work. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174
https://github.com/su2code/SU2/issues/1175:781,Energy Efficiency,monitor,monitors,781,"Hello SU2 Community! . I am simulating flow over a 6-blade propeller and modeling 1/6th of the domain with an assumption that it is axisymmetric. I meshed the computational domain generating an unstructured grid using ANSYS Meshing with a targetted y+<1 and simulated the case using a pressure-based (SIMPLE) solver with S-A turbulence model in Fluent. It is a steady-state simulation and used a frozen rotor approach. Fluent converged after the reduction of continuity residuals by four orders of magnitude. For simulating the domain in SU2, I had converted the mesh into CGNS format, simulated with similar settings using SU2's RANS Solver (S-A) with rotating domain and periodic boundary conditions. The simulation converges as the residuals drop by two orders of magnitude and monitors stabilize after 30k iterations. . On checking the contours, the SU2 predicts relatively high y+ values, especially near the junction of propeller blade root and spinner, where the values go up to y+~250, while it is around y+=1-2 in the rest of the domain. Whereas, Fluent predicts the y+<1 throughout for the same mesh. The values of forces and moment are off by two orders, on comparing it with the Fluent and experimental results. But, flow-field and contours of pressure distribution look similar for both SU2 and Fluent. I'm wondering what might have led to the difference in the results. I have refined the mesh, but it only reduces y+ by a small number. I have attached the config file and would like some inputs. Thanks in advance. [Prop_config.txt](https://github.com/su2code/SU2/files/5857368/Prop_config.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1175
https://github.com/su2code/SU2/issues/1175:1421,Energy Efficiency,reduce,reduces,1421,"Hello SU2 Community! . I am simulating flow over a 6-blade propeller and modeling 1/6th of the domain with an assumption that it is axisymmetric. I meshed the computational domain generating an unstructured grid using ANSYS Meshing with a targetted y+<1 and simulated the case using a pressure-based (SIMPLE) solver with S-A turbulence model in Fluent. It is a steady-state simulation and used a frozen rotor approach. Fluent converged after the reduction of continuity residuals by four orders of magnitude. For simulating the domain in SU2, I had converted the mesh into CGNS format, simulated with similar settings using SU2's RANS Solver (S-A) with rotating domain and periodic boundary conditions. The simulation converges as the residuals drop by two orders of magnitude and monitors stabilize after 30k iterations. . On checking the contours, the SU2 predicts relatively high y+ values, especially near the junction of propeller blade root and spinner, where the values go up to y+~250, while it is around y+=1-2 in the rest of the domain. Whereas, Fluent predicts the y+<1 throughout for the same mesh. The values of forces and moment are off by two orders, on comparing it with the Fluent and experimental results. But, flow-field and contours of pressure distribution look similar for both SU2 and Fluent. I'm wondering what might have led to the difference in the results. I have refined the mesh, but it only reduces y+ by a small number. I have attached the config file and would like some inputs. Thanks in advance. [Prop_config.txt](https://github.com/su2code/SU2/files/5857368/Prop_config.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1175
https://github.com/su2code/SU2/issues/1175:1471,Modifiability,config,config,1471,"Hello SU2 Community! . I am simulating flow over a 6-blade propeller and modeling 1/6th of the domain with an assumption that it is axisymmetric. I meshed the computational domain generating an unstructured grid using ANSYS Meshing with a targetted y+<1 and simulated the case using a pressure-based (SIMPLE) solver with S-A turbulence model in Fluent. It is a steady-state simulation and used a frozen rotor approach. Fluent converged after the reduction of continuity residuals by four orders of magnitude. For simulating the domain in SU2, I had converted the mesh into CGNS format, simulated with similar settings using SU2's RANS Solver (S-A) with rotating domain and periodic boundary conditions. The simulation converges as the residuals drop by two orders of magnitude and monitors stabilize after 30k iterations. . On checking the contours, the SU2 predicts relatively high y+ values, especially near the junction of propeller blade root and spinner, where the values go up to y+~250, while it is around y+=1-2 in the rest of the domain. Whereas, Fluent predicts the y+<1 throughout for the same mesh. The values of forces and moment are off by two orders, on comparing it with the Fluent and experimental results. But, flow-field and contours of pressure distribution look similar for both SU2 and Fluent. I'm wondering what might have led to the difference in the results. I have refined the mesh, but it only reduces y+ by a small number. I have attached the config file and would like some inputs. Thanks in advance. [Prop_config.txt](https://github.com/su2code/SU2/files/5857368/Prop_config.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1175
https://github.com/su2code/SU2/issues/1175:858,Safety,predict,predicts,858,"Hello SU2 Community! . I am simulating flow over a 6-blade propeller and modeling 1/6th of the domain with an assumption that it is axisymmetric. I meshed the computational domain generating an unstructured grid using ANSYS Meshing with a targetted y+<1 and simulated the case using a pressure-based (SIMPLE) solver with S-A turbulence model in Fluent. It is a steady-state simulation and used a frozen rotor approach. Fluent converged after the reduction of continuity residuals by four orders of magnitude. For simulating the domain in SU2, I had converted the mesh into CGNS format, simulated with similar settings using SU2's RANS Solver (S-A) with rotating domain and periodic boundary conditions. The simulation converges as the residuals drop by two orders of magnitude and monitors stabilize after 30k iterations. . On checking the contours, the SU2 predicts relatively high y+ values, especially near the junction of propeller blade root and spinner, where the values go up to y+~250, while it is around y+=1-2 in the rest of the domain. Whereas, Fluent predicts the y+<1 throughout for the same mesh. The values of forces and moment are off by two orders, on comparing it with the Fluent and experimental results. But, flow-field and contours of pressure distribution look similar for both SU2 and Fluent. I'm wondering what might have led to the difference in the results. I have refined the mesh, but it only reduces y+ by a small number. I have attached the config file and would like some inputs. Thanks in advance. [Prop_config.txt](https://github.com/su2code/SU2/files/5857368/Prop_config.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1175
https://github.com/su2code/SU2/issues/1175:1063,Safety,predict,predicts,1063,"Hello SU2 Community! . I am simulating flow over a 6-blade propeller and modeling 1/6th of the domain with an assumption that it is axisymmetric. I meshed the computational domain generating an unstructured grid using ANSYS Meshing with a targetted y+<1 and simulated the case using a pressure-based (SIMPLE) solver with S-A turbulence model in Fluent. It is a steady-state simulation and used a frozen rotor approach. Fluent converged after the reduction of continuity residuals by four orders of magnitude. For simulating the domain in SU2, I had converted the mesh into CGNS format, simulated with similar settings using SU2's RANS Solver (S-A) with rotating domain and periodic boundary conditions. The simulation converges as the residuals drop by two orders of magnitude and monitors stabilize after 30k iterations. . On checking the contours, the SU2 predicts relatively high y+ values, especially near the junction of propeller blade root and spinner, where the values go up to y+~250, while it is around y+=1-2 in the rest of the domain. Whereas, Fluent predicts the y+<1 throughout for the same mesh. The values of forces and moment are off by two orders, on comparing it with the Fluent and experimental results. But, flow-field and contours of pressure distribution look similar for both SU2 and Fluent. I'm wondering what might have led to the difference in the results. I have refined the mesh, but it only reduces y+ by a small number. I have attached the config file and would like some inputs. Thanks in advance. [Prop_config.txt](https://github.com/su2code/SU2/files/5857368/Prop_config.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1175
