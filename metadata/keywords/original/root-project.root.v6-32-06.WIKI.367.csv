id,quality_attribute,keyword,matched_word,match_idx,sentence,source,filename,author,repo,version,wiki,url
https://root.cern/root/html534/ClassIndex.html:109109,Integrability,Interface,Interface,109109,VA::PDEFoamKernelLinN next neighbor PDEFoam kernel estimator; TMVA::PDEFoamKernelTrivial trivial PDEFoam kernel estimator; TMVA::PDEFoamMultiTarget Tree of PDEFoamCells; TMVA::PDEFoamTarget Tree of PDEFoamCells; TMVA::PDEFoamTargetDensity Class for Target density; TMVA::PDEFoamVect n-dimensional vector with dynamical allocation; TMVA::PDF PDF wrapper for histograms; TMVA::QuickMVAProbEstimator Interface to different separation critiera used in training algorithms; TMVA::ROCCalc ; TMVA::Ranking Method-specific ranking for input variables ; TMVA::Reader Interpret the trained MVAs in an analysis context; TMVA::RegressionVariance Interface to different separation critiera used in training algorithms; TMVA::RootFinder Root finding using Brents algorithm; TMVA::RuleFit Calculations for Friedman's RuleFit method; TMVA::RuleFitAPI Friedman's RuleFit method; TMVA::SVEvent Event for SVM; TMVA::SdivSqrtSplusB Implementation of the SdivSqrtSplusB as separation criterion; TMVA::SeparationBase Interface to different separation critiera used in training algorithms; TMVA::SimulatedAnnealing Base class for Simulated Annealing fitting; TMVA::SimulatedAnnealingFitter Fitter using a Simulated Annealing Algorithm; TMVA::TActivation Interface for TNeuron activation function classes; TMVA::TActivationChooser Class for choosing activation functions; TMVA::TActivationIdentity Identity activation function for TNeuron; TMVA::TActivationRadial Radial basis activation function for TNeuron; TMVA::TActivationSigmoid Sigmoid activation function for TNeuron; TMVA::TActivationTanh Tanh sigmoid activation function for TNeuron; TMVA::TNeuron Neuron class used by MethodANNBase derivative ANNs; TMVA::TNeuronInput Interface for TNeuron input calculation classes; TMVA::TNeuronInputAbs Calculates the sum of the absolute values of the weighted inputs; TMVA::TNeuronInputChooser Class for choosing neuron input functions ; TMVA::TNeuronInputSqSum Calculates square of weighted sum of neuron inputs; TMVA::TNeuro,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:109345,Integrability,Interface,Interface,109345,ty Class for Target density; TMVA::PDEFoamVect n-dimensional vector with dynamical allocation; TMVA::PDF PDF wrapper for histograms; TMVA::QuickMVAProbEstimator Interface to different separation critiera used in training algorithms; TMVA::ROCCalc ; TMVA::Ranking Method-specific ranking for input variables ; TMVA::Reader Interpret the trained MVAs in an analysis context; TMVA::RegressionVariance Interface to different separation critiera used in training algorithms; TMVA::RootFinder Root finding using Brents algorithm; TMVA::RuleFit Calculations for Friedman's RuleFit method; TMVA::RuleFitAPI Friedman's RuleFit method; TMVA::SVEvent Event for SVM; TMVA::SdivSqrtSplusB Implementation of the SdivSqrtSplusB as separation criterion; TMVA::SeparationBase Interface to different separation critiera used in training algorithms; TMVA::SimulatedAnnealing Base class for Simulated Annealing fitting; TMVA::SimulatedAnnealingFitter Fitter using a Simulated Annealing Algorithm; TMVA::TActivation Interface for TNeuron activation function classes; TMVA::TActivationChooser Class for choosing activation functions; TMVA::TActivationIdentity Identity activation function for TNeuron; TMVA::TActivationRadial Radial basis activation function for TNeuron; TMVA::TActivationSigmoid Sigmoid activation function for TNeuron; TMVA::TActivationTanh Tanh sigmoid activation function for TNeuron; TMVA::TNeuron Neuron class used by MethodANNBase derivative ANNs; TMVA::TNeuronInput Interface for TNeuron input calculation classes; TMVA::TNeuronInputAbs Calculates the sum of the absolute values of the weighted inputs; TMVA::TNeuronInputChooser Class for choosing neuron input functions ; TMVA::TNeuronInputSqSum Calculates square of weighted sum of neuron inputs; TMVA::TNeuronInputSum Calculates weighted sum of neuron inputs; TMVA::TSpline1 Linear interpolation class; TMVA::TSpline2 Quadratic interpolation class (using quadrax); TMVA::TSynapse Synapse class used by MethodANNBase and derivatives; TMVA::Timer,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:109819,Integrability,Interface,Interface,109819,::RootFinder Root finding using Brents algorithm; TMVA::RuleFit Calculations for Friedman's RuleFit method; TMVA::RuleFitAPI Friedman's RuleFit method; TMVA::SVEvent Event for SVM; TMVA::SdivSqrtSplusB Implementation of the SdivSqrtSplusB as separation criterion; TMVA::SeparationBase Interface to different separation critiera used in training algorithms; TMVA::SimulatedAnnealing Base class for Simulated Annealing fitting; TMVA::SimulatedAnnealingFitter Fitter using a Simulated Annealing Algorithm; TMVA::TActivation Interface for TNeuron activation function classes; TMVA::TActivationChooser Class for choosing activation functions; TMVA::TActivationIdentity Identity activation function for TNeuron; TMVA::TActivationRadial Radial basis activation function for TNeuron; TMVA::TActivationSigmoid Sigmoid activation function for TNeuron; TMVA::TActivationTanh Tanh sigmoid activation function for TNeuron; TMVA::TNeuron Neuron class used by MethodANNBase derivative ANNs; TMVA::TNeuronInput Interface for TNeuron input calculation classes; TMVA::TNeuronInputAbs Calculates the sum of the absolute values of the weighted inputs; TMVA::TNeuronInputChooser Class for choosing neuron input functions ; TMVA::TNeuronInputSqSum Calculates square of weighted sum of neuron inputs; TMVA::TNeuronInputSum Calculates weighted sum of neuron inputs; TMVA::TSpline1 Linear interpolation class; TMVA::TSpline2 Quadratic interpolation class (using quadrax); TMVA::TSynapse Synapse class used by MethodANNBase and derivatives; TMVA::Timer Timing information for training and evaluation of MVA methods; TMVA::Tools ; TMVA::Types ; TMVA::VariableDecorrTransform Variable transformation: decorrelation; TMVA::VariableGaussTransform Variable transformation: Gauss transformation; TMVA::VariableIdentityTransform Variable transformation: identity; TMVA::VariableNormalizeTransform Variable transformation: normalization; TMVA::VariablePCATransform Variable transformation: Principal Value Composition; TMVA::VariableR,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:114207,Integrability,interface,interface,114207,"eneral Matrix Flat Representation class; TMatrixTFlat_const<float> Template of General Matrix Flat Representation class; TMatrixTLazy<double> Template of Lazy Matrix class; TMatrixTLazy<float> Template of Lazy Matrix class; TMatrixTRow<double> Template of General Matrix Row Access class; TMatrixTRow<float> Template of General Matrix Row Access class; TMatrixTRow_const<double> Template of General Matrix Row Access class; TMatrixTRow_const<float> Template of General Matrix Row Access class; TMatrixTSparse<double> Template of Sparse Matrix class; TMatrixTSparse<float> Template of Sparse Matrix class; TMatrixTSparseDiag<double> Template of Sparse Matrix Diagonal Access class; TMatrixTSparseDiag<float> Template of Sparse Matrix Diagonal Access class; TMatrixTSparseDiag_const<double> Template of Sparse Matrix Diagonal Access class; TMatrixTSparseDiag_const<float> Template of Sparse Matrix Diagonal Access class; TMatrixTSparseRow<double> Template of Sparse Matrix Row Access class; TMatrixTSparseRow<float> Template of Sparse Matrix Row Access class; TMatrixTSparseRow_const<double> Template of Sparse Matrix Row Access class; TMatrixTSparseRow_const<float> Template of Sparse Matrix Row Access class; TMatrixTSub<double> Template of Sub Matrix Access class; TMatrixTSub<float> Template of Sub Matrix Access class; TMatrixTSub_const<double> Template of Sub Matrix Access class; TMatrixTSub_const<float> Template of Sub Matrix Access class; TMatrixTSym<double> Template of Symmetric Matrix class; TMatrixTSym<float> Template of Symmetric Matrix class; TMatrixTSymCramerInv ; TMatrixTSymLazy<double> Template of Lazy Symmeytric class; TMatrixTSymLazy<float> Template of Lazy Symmeytric class; TMehrotraSolver Mehrotra Qp Solver class; TMemFile A ROOT file that reads/writes via HDFS; TMemStat a user interface class of MemStat; TMemStatShow class to visualize the results of TMemStat ; TMemberInspector ABC for inspecting class data members; TMemberStreamer ; TMergerInfo Basic info on merger, i.",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:114441,Integrability,Message,Message,114441,,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:114487,Integrability,message,message,114487,,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:114683,Integrability,interface,interface,114683,,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:114834,Integrability,interface,interface,114834,,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:116664,Integrability,Interface,Interface,116664,"ection of TGraph objects; TMultiLayerPerceptron a Neural Network; TMutex Mutex lock class; TMutexImp Mutex lock implementation ABC; TMySQLResult MySQL query result; TMySQLRow One row of MySQL query result; TMySQLServer Connection to MySQL server; TMySQLStatement SQL statement class for MySQL DB; TNDArray Base for n-dimensional array; TNDArrayRef<Long64_t> subdimension of a TNDArray; TNDArrayRef<ULong64_t> subdimension of a TNDArray; TNDArrayRef<char> subdimension of a TNDArray; TNDArrayRef<double> subdimension of a TNDArray; TNDArrayRef<float> subdimension of a TNDArray; TNDArrayRef<int> subdimension of a TNDArray; TNDArrayRef<long> subdimension of a TNDArray; TNDArrayRef<short> subdimension of a TNDArray; TNDArrayRef<unsigned int> subdimension of a TNDArray; TNDArrayRef<unsigned long> subdimension of a TNDArray; TNDArrayRef<unsigned short> subdimension of a TNDArray; TNDArrayT<Long64_t> N-dimensional array; TNDArrayT<ULong64_t> N-dimensional array; TNDArrayT<char> N-dimensional array; TNDArrayT<double> N-dimensional array; TNDArrayT<float> N-dimensional array; TNDArrayT<int> N-dimensional array; TNDArrayT<long> N-dimensional array; TNDArrayT<short> N-dimensional array; TNDArrayT<unsigned int> N-dimensional array; TNDArrayT<unsigned long> N-dimensional array; TNDArrayT<unsigned short> N-dimensional array; TNamed The basis for a named object (name, title); TNetFile A ROOT file that reads/writes via a rootd server; TNetFileStager Implementation for a 'rootd' backend; TNetSystem Directory handler for NetSystem; TNetXNGFile ROOT class definition; TNetXNGFileStager ! Interface to a 'XRD' staging; TNetXNGSystem ROOT class definition; TNeuron Neuron for MultiLayerPerceptrons; TNewChainDlg New chain dialog; TNewQueryDlg New query dialog; TNode Description of parameters to position a 3-D geometry object; TNodeDiv Description of parameters to divide a 3-D geometry object; TNonSplitBrowsable Helper object to browse unsplit objects; TNtuple A simple tree with branches of floats.",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:117328,Integrability,wrap,wrapper,117328, via a rootd server; TNetFileStager Implementation for a 'rootd' backend; TNetSystem Directory handler for NetSystem; TNetXNGFile ROOT class definition; TNetXNGFileStager ! Interface to a 'XRD' staging; TNetXNGSystem ROOT class definition; TNeuron Neuron for MultiLayerPerceptrons; TNewChainDlg New chain dialog; TNewQueryDlg New query dialog; TNode Description of parameters to position a 3-D geometry object; TNodeDiv Description of parameters to divide a 3-D geometry object; TNonSplitBrowsable Helper object to browse unsplit objects; TNtuple A simple tree with branches of floats.; TNtupleD A simple tree with branches of floats.; TObjArray An array of objects; TObjArrayIter Object array iterator; TObjString Collectable string class; TObject Basic ROOT object; TObjectRefSpy Spy object reference for deletion; TObjectSet TDataSet wrapper for TObject class objects; TObjectSpy Spy object pointer for deletion; TObjectTable Table of active objects; TOrdCollection An ordered collection; TOrdCollectionIter Ordered collection iterator; TOutputListSelectorDataMap Converter from output list to TSelector data members; TPARA PARA shape; TPBHandleDSType Streamable PBHandleDSType; TPBHistType Streamable PBHistType; TPBReadType Streamable PBReadType; TPCON PCON shape; TPDF PDF driver; TPGON PGON shape; TPMERegexp Wrapper for Perl-like regular expression matching.; TPRegexp Perl Compatible Regular Expression Class; TPServerSocket Parallel server socket; TPSocket Parallel client socket; TPackageDescription Package description; TPacketizer Generate work packets for parallel processing; TPacketizerAdaptive Generate work packets for parallel processing; TPacketizerFile Generate work packets for parallel processing; TPacketizerMulti Generate work packets for parallel processing; TPacketizerUnit Generate work packets for parallel processing; TPad A Graphics pad; TPadEditor editor of TPad objects; TPadPainter Abstract interface for painting in TPad; TPainter3dAlgorithms Hidden line removal pa,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:117807,Integrability,Wrap,Wrapper,117807, via a rootd server; TNetFileStager Implementation for a 'rootd' backend; TNetSystem Directory handler for NetSystem; TNetXNGFile ROOT class definition; TNetXNGFileStager ! Interface to a 'XRD' staging; TNetXNGSystem ROOT class definition; TNeuron Neuron for MultiLayerPerceptrons; TNewChainDlg New chain dialog; TNewQueryDlg New query dialog; TNode Description of parameters to position a 3-D geometry object; TNodeDiv Description of parameters to divide a 3-D geometry object; TNonSplitBrowsable Helper object to browse unsplit objects; TNtuple A simple tree with branches of floats.; TNtupleD A simple tree with branches of floats.; TObjArray An array of objects; TObjArrayIter Object array iterator; TObjString Collectable string class; TObject Basic ROOT object; TObjectRefSpy Spy object reference for deletion; TObjectSet TDataSet wrapper for TObject class objects; TObjectSpy Spy object pointer for deletion; TObjectTable Table of active objects; TOrdCollection An ordered collection; TOrdCollectionIter Ordered collection iterator; TOutputListSelectorDataMap Converter from output list to TSelector data members; TPARA PARA shape; TPBHandleDSType Streamable PBHandleDSType; TPBHistType Streamable PBHistType; TPBReadType Streamable PBReadType; TPCON PCON shape; TPDF PDF driver; TPGON PGON shape; TPMERegexp Wrapper for Perl-like regular expression matching.; TPRegexp Perl Compatible Regular Expression Class; TPServerSocket Parallel server socket; TPSocket Parallel client socket; TPackageDescription Package description; TPacketizer Generate work packets for parallel processing; TPacketizerAdaptive Generate work packets for parallel processing; TPacketizerFile Generate work packets for parallel processing; TPacketizerMulti Generate work packets for parallel processing; TPacketizerUnit Generate work packets for parallel processing; TPad A Graphics pad; TPadEditor editor of TPad objects; TPadPainter Abstract interface for painting in TPad; TPainter3dAlgorithms Hidden line removal pa,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:118416,Integrability,interface,interface,118416,"bject reference for deletion; TObjectSet TDataSet wrapper for TObject class objects; TObjectSpy Spy object pointer for deletion; TObjectTable Table of active objects; TOrdCollection An ordered collection; TOrdCollectionIter Ordered collection iterator; TOutputListSelectorDataMap Converter from output list to TSelector data members; TPARA PARA shape; TPBHandleDSType Streamable PBHandleDSType; TPBHistType Streamable PBHistType; TPBReadType Streamable PBReadType; TPCON PCON shape; TPDF PDF driver; TPGON PGON shape; TPMERegexp Wrapper for Perl-like regular expression matching.; TPRegexp Perl Compatible Regular Expression Class; TPServerSocket Parallel server socket; TPSocket Parallel client socket; TPackageDescription Package description; TPacketizer Generate work packets for parallel processing; TPacketizerAdaptive Generate work packets for parallel processing; TPacketizerFile Generate work packets for parallel processing; TPacketizerMulti Generate work packets for parallel processing; TPacketizerUnit Generate work packets for parallel processing; TPad A Graphics pad; TPadEditor editor of TPad objects; TPadPainter Abstract interface for painting in TPad; TPainter3dAlgorithms Hidden line removal package; TPair Pair TObject*, TObject*; TPaletteAxis class used to display a color palette axis for 2-d plots; TPaletteEditor Base class for palette editor; TParallelCoord To display parallel coordinates plots.; TParallelCoordEditor GUI for editing the parallel coordinates plot attributes.; TParallelCoordRange A TParallelCoordRange is a range used for parallel coordinates plots.; TParallelCoordSelect A TParallelCoordSelect is a specialised TList to hold TParallelCoordRanges used by TParallelCoord.; TParallelCoordVar A Variable of a parallel coordinates plot.; TParallelMergingFile TFile specialization that will semi-automatically upload its content to a merging server.; TParameter<Long64_t> Named templated parameter type; TParameter<bool> Named templated parameter type; TParamete",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:122621,Integrability,interface,interface,122621, proxy for running chains on PROOF; TProofCondor PROOF control class for slaves allocated by condor; TProofDebug ; TProofDesc Small class describing a proof session; TProofDraw Tree drawing selector for PROOF; TProofDrawEntryList A Selectoor to fill a TEntryList from TTree::Draw; TProofDrawEventList Tree drawing selector for PROOF; TProofDrawGraph Tree drawing selector for PROOF; TProofDrawHist Tree drawing selector for PROOF; TProofDrawListOfGraphs Tree drawing selector for PROOF; TProofDrawListOfGraphs::Point3D_t ; TProofDrawListOfPolyMarkers3D Tree drawing selector for PROOF; TProofDrawListOfPolyMarkers3D::Point4D_t ; TProofDrawPolyMarker3D Tree drawing selector for PROOF; TProofDrawProfile Tree drawing selector for PROOF; TProofDrawProfile2D Tree drawing selector for PROOF; TProofLimitsFinder Find and communicate best axis limits; TProofLite PROOF-Lite control class; TProofLog PROOF session log handler; TProofLogElem PROOF session log element; TProofMgr Abstract PROOF manager interface; TProofMgrLite XrdProofd PROOF manager interface; TProofMonSender Interface for PROOF monitoring; TProofMonSenderML Interface for PROOF monitoring; TProofMonSenderSQL Interface for PROOF monitoring; TProofNodeInfo Class describing a PROOF node; TProofNodes Node and worker information; TProofOutputFile Wrapper class to steer the merging of files produced on workers; TProofOutputList Output list specific TList derivation; TProofPerfAnalysis Set of tools to analyse the performance tree; TProofPlayer Basic PROOF player; TProofPlayerLite PROOF player running in PROOF-Lite; TProofPlayerLocal PROOF player running on client; TProofPlayerRemote PROOF player running on master server; TProofPlayerSlave PROOF player running on slave server; TProofPlayerSuperMaster PROOF player running on super master; TProofProgressDialog PROOF progress dialog; TProofProgressInfo Progress information; TProofProgressLog Class implementing a log graphic box; TProofProgressMemoryPlot PROOF progress memory plots;,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:122670,Integrability,interface,interface,122670,PROOF control class for slaves allocated by condor; TProofDebug ; TProofDesc Small class describing a proof session; TProofDraw Tree drawing selector for PROOF; TProofDrawEntryList A Selectoor to fill a TEntryList from TTree::Draw; TProofDrawEventList Tree drawing selector for PROOF; TProofDrawGraph Tree drawing selector for PROOF; TProofDrawHist Tree drawing selector for PROOF; TProofDrawListOfGraphs Tree drawing selector for PROOF; TProofDrawListOfGraphs::Point3D_t ; TProofDrawListOfPolyMarkers3D Tree drawing selector for PROOF; TProofDrawListOfPolyMarkers3D::Point4D_t ; TProofDrawPolyMarker3D Tree drawing selector for PROOF; TProofDrawProfile Tree drawing selector for PROOF; TProofDrawProfile2D Tree drawing selector for PROOF; TProofLimitsFinder Find and communicate best axis limits; TProofLite PROOF-Lite control class; TProofLog PROOF session log handler; TProofLogElem PROOF session log element; TProofMgr Abstract PROOF manager interface; TProofMgrLite XrdProofd PROOF manager interface; TProofMonSender Interface for PROOF monitoring; TProofMonSenderML Interface for PROOF monitoring; TProofMonSenderSQL Interface for PROOF monitoring; TProofNodeInfo Class describing a PROOF node; TProofNodes Node and worker information; TProofOutputFile Wrapper class to steer the merging of files produced on workers; TProofOutputList Output list specific TList derivation; TProofPerfAnalysis Set of tools to analyse the performance tree; TProofPlayer Basic PROOF player; TProofPlayerLite PROOF player running in PROOF-Lite; TProofPlayerLocal PROOF player running on client; TProofPlayerRemote PROOF player running on master server; TProofPlayerSlave PROOF player running on slave server; TProofPlayerSuperMaster PROOF player running on super master; TProofProgressDialog PROOF progress dialog; TProofProgressInfo Progress information; TProofProgressLog Class implementing a log graphic box; TProofProgressMemoryPlot PROOF progress memory plots; TProofProgressStatus Proof progress status class,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:122697,Integrability,Interface,Interface,122697,ves allocated by condor; TProofDebug ; TProofDesc Small class describing a proof session; TProofDraw Tree drawing selector for PROOF; TProofDrawEntryList A Selectoor to fill a TEntryList from TTree::Draw; TProofDrawEventList Tree drawing selector for PROOF; TProofDrawGraph Tree drawing selector for PROOF; TProofDrawHist Tree drawing selector for PROOF; TProofDrawListOfGraphs Tree drawing selector for PROOF; TProofDrawListOfGraphs::Point3D_t ; TProofDrawListOfPolyMarkers3D Tree drawing selector for PROOF; TProofDrawListOfPolyMarkers3D::Point4D_t ; TProofDrawPolyMarker3D Tree drawing selector for PROOF; TProofDrawProfile Tree drawing selector for PROOF; TProofDrawProfile2D Tree drawing selector for PROOF; TProofLimitsFinder Find and communicate best axis limits; TProofLite PROOF-Lite control class; TProofLog PROOF session log handler; TProofLogElem PROOF session log element; TProofMgr Abstract PROOF manager interface; TProofMgrLite XrdProofd PROOF manager interface; TProofMonSender Interface for PROOF monitoring; TProofMonSenderML Interface for PROOF monitoring; TProofMonSenderSQL Interface for PROOF monitoring; TProofNodeInfo Class describing a PROOF node; TProofNodes Node and worker information; TProofOutputFile Wrapper class to steer the merging of files produced on workers; TProofOutputList Output list specific TList derivation; TProofPerfAnalysis Set of tools to analyse the performance tree; TProofPlayer Basic PROOF player; TProofPlayerLite PROOF player running in PROOF-Lite; TProofPlayerLocal PROOF player running on client; TProofPlayerRemote PROOF player running on master server; TProofPlayerSlave PROOF player running on slave server; TProofPlayerSuperMaster PROOF player running on super master; TProofProgressDialog PROOF progress dialog; TProofProgressInfo Progress information; TProofProgressLog Class implementing a log graphic box; TProofProgressMemoryPlot PROOF progress memory plots; TProofProgressStatus Proof progress status class; TProofQueryResult Class d,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:122747,Integrability,Interface,Interface,122747,Small class describing a proof session; TProofDraw Tree drawing selector for PROOF; TProofDrawEntryList A Selectoor to fill a TEntryList from TTree::Draw; TProofDrawEventList Tree drawing selector for PROOF; TProofDrawGraph Tree drawing selector for PROOF; TProofDrawHist Tree drawing selector for PROOF; TProofDrawListOfGraphs Tree drawing selector for PROOF; TProofDrawListOfGraphs::Point3D_t ; TProofDrawListOfPolyMarkers3D Tree drawing selector for PROOF; TProofDrawListOfPolyMarkers3D::Point4D_t ; TProofDrawPolyMarker3D Tree drawing selector for PROOF; TProofDrawProfile Tree drawing selector for PROOF; TProofDrawProfile2D Tree drawing selector for PROOF; TProofLimitsFinder Find and communicate best axis limits; TProofLite PROOF-Lite control class; TProofLog PROOF session log handler; TProofLogElem PROOF session log element; TProofMgr Abstract PROOF manager interface; TProofMgrLite XrdProofd PROOF manager interface; TProofMonSender Interface for PROOF monitoring; TProofMonSenderML Interface for PROOF monitoring; TProofMonSenderSQL Interface for PROOF monitoring; TProofNodeInfo Class describing a PROOF node; TProofNodes Node and worker information; TProofOutputFile Wrapper class to steer the merging of files produced on workers; TProofOutputList Output list specific TList derivation; TProofPerfAnalysis Set of tools to analyse the performance tree; TProofPlayer Basic PROOF player; TProofPlayerLite PROOF player running in PROOF-Lite; TProofPlayerLocal PROOF player running on client; TProofPlayerRemote PROOF player running on master server; TProofPlayerSlave PROOF player running on slave server; TProofPlayerSuperMaster PROOF player running on super master; TProofProgressDialog PROOF progress dialog; TProofProgressInfo Progress information; TProofProgressLog Class implementing a log graphic box; TProofProgressMemoryPlot PROOF progress memory plots; TProofProgressStatus Proof progress status class; TProofQueryResult Class describing a PROOF query; TProofResources Abstract ,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:122798,Integrability,Interface,Interface,122798,Tree drawing selector for PROOF; TProofDrawEntryList A Selectoor to fill a TEntryList from TTree::Draw; TProofDrawEventList Tree drawing selector for PROOF; TProofDrawGraph Tree drawing selector for PROOF; TProofDrawHist Tree drawing selector for PROOF; TProofDrawListOfGraphs Tree drawing selector for PROOF; TProofDrawListOfGraphs::Point3D_t ; TProofDrawListOfPolyMarkers3D Tree drawing selector for PROOF; TProofDrawListOfPolyMarkers3D::Point4D_t ; TProofDrawPolyMarker3D Tree drawing selector for PROOF; TProofDrawProfile Tree drawing selector for PROOF; TProofDrawProfile2D Tree drawing selector for PROOF; TProofLimitsFinder Find and communicate best axis limits; TProofLite PROOF-Lite control class; TProofLog PROOF session log handler; TProofLogElem PROOF session log element; TProofMgr Abstract PROOF manager interface; TProofMgrLite XrdProofd PROOF manager interface; TProofMonSender Interface for PROOF monitoring; TProofMonSenderML Interface for PROOF monitoring; TProofMonSenderSQL Interface for PROOF monitoring; TProofNodeInfo Class describing a PROOF node; TProofNodes Node and worker information; TProofOutputFile Wrapper class to steer the merging of files produced on workers; TProofOutputList Output list specific TList derivation; TProofPerfAnalysis Set of tools to analyse the performance tree; TProofPlayer Basic PROOF player; TProofPlayerLite PROOF player running in PROOF-Lite; TProofPlayerLocal PROOF player running on client; TProofPlayerRemote PROOF player running on master server; TProofPlayerSlave PROOF player running on slave server; TProofPlayerSuperMaster PROOF player running on super master; TProofProgressDialog PROOF progress dialog; TProofProgressInfo Progress information; TProofProgressLog Class implementing a log graphic box; TProofProgressMemoryPlot PROOF progress memory plots; TProofProgressStatus Proof progress status class; TProofQueryResult Class describing a PROOF query; TProofResources Abstract class describing PROOF resources; TProofResourcesSt,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:122934,Integrability,Wrap,Wrapper,122934,g selector for PROOF; TProofDrawGraph Tree drawing selector for PROOF; TProofDrawHist Tree drawing selector for PROOF; TProofDrawListOfGraphs Tree drawing selector for PROOF; TProofDrawListOfGraphs::Point3D_t ; TProofDrawListOfPolyMarkers3D Tree drawing selector for PROOF; TProofDrawListOfPolyMarkers3D::Point4D_t ; TProofDrawPolyMarker3D Tree drawing selector for PROOF; TProofDrawProfile Tree drawing selector for PROOF; TProofDrawProfile2D Tree drawing selector for PROOF; TProofLimitsFinder Find and communicate best axis limits; TProofLite PROOF-Lite control class; TProofLog PROOF session log handler; TProofLogElem PROOF session log element; TProofMgr Abstract PROOF manager interface; TProofMgrLite XrdProofd PROOF manager interface; TProofMonSender Interface for PROOF monitoring; TProofMonSenderML Interface for PROOF monitoring; TProofMonSenderSQL Interface for PROOF monitoring; TProofNodeInfo Class describing a PROOF node; TProofNodes Node and worker information; TProofOutputFile Wrapper class to steer the merging of files produced on workers; TProofOutputList Output list specific TList derivation; TProofPerfAnalysis Set of tools to analyse the performance tree; TProofPlayer Basic PROOF player; TProofPlayerLite PROOF player running in PROOF-Lite; TProofPlayerLocal PROOF player running on client; TProofPlayerRemote PROOF player running on master server; TProofPlayerSlave PROOF player running on slave server; TProofPlayerSuperMaster PROOF player running on super master; TProofProgressDialog PROOF progress dialog; TProofProgressInfo Progress information; TProofProgressLog Class implementing a log graphic box; TProofProgressMemoryPlot PROOF progress memory plots; TProofProgressStatus Proof progress status class; TProofQueryResult Class describing a PROOF query; TProofResources Abstract class describing PROOF resources; TProofResourcesStatic Class to handle PROOF static config; TProofServ PROOF Server Application Interface; TProofServLite PROOF-Lite Server Application I,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:123881,Integrability,Interface,Interface,123881,s Node and worker information; TProofOutputFile Wrapper class to steer the merging of files produced on workers; TProofOutputList Output list specific TList derivation; TProofPerfAnalysis Set of tools to analyse the performance tree; TProofPlayer Basic PROOF player; TProofPlayerLite PROOF player running in PROOF-Lite; TProofPlayerLocal PROOF player running on client; TProofPlayerRemote PROOF player running on master server; TProofPlayerSlave PROOF player running on slave server; TProofPlayerSuperMaster PROOF player running on super master; TProofProgressDialog PROOF progress dialog; TProofProgressInfo Progress information; TProofProgressLog Class implementing a log graphic box; TProofProgressMemoryPlot PROOF progress memory plots; TProofProgressStatus Proof progress status class; TProofQueryResult Class describing a PROOF query; TProofResources Abstract class describing PROOF resources; TProofResourcesStatic Class to handle PROOF static config; TProofServ PROOF Server Application Interface; TProofServLite PROOF-Lite Server Application Interface; TProofSuperMaster PROOF control class for making submasters; TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t> Class describing a vector container; TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t> Class describing a vector container; TPyDispatcher Python dispatcher class; TPyMultiGenFunction Python for Math::IMultiGenFunction equivalent; TPyMultiGradFunction Python for Math::IMultiGradFunction equivalent; TPyReturn Python morphing return object; TPySelector Python equivalent base class for PROOF; TPythia8 Interface class of Pythia8; TPythia8Decayer Particle Decayer using Pythia8; TPython Access to the python interpreter; TQApplication creates ROOT environment with the Qt windowing system; TQCanvasImp ABC describing Qt GUI independent main window; TQCanvasMenu interface to Qt based context sensitive popup menus; TQClass Class with connections; TQCommand encapsulates the information for undo/redo a single,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:123937,Integrability,Interface,Interface,123937,and worker information; TProofOutputFile Wrapper class to steer the merging of files produced on workers; TProofOutputList Output list specific TList derivation; TProofPerfAnalysis Set of tools to analyse the performance tree; TProofPlayer Basic PROOF player; TProofPlayerLite PROOF player running in PROOF-Lite; TProofPlayerLocal PROOF player running on client; TProofPlayerRemote PROOF player running on master server; TProofPlayerSlave PROOF player running on slave server; TProofPlayerSuperMaster PROOF player running on super master; TProofProgressDialog PROOF progress dialog; TProofProgressInfo Progress information; TProofProgressLog Class implementing a log graphic box; TProofProgressMemoryPlot PROOF progress memory plots; TProofProgressStatus Proof progress status class; TProofQueryResult Class describing a PROOF query; TProofResources Abstract class describing PROOF resources; TProofResourcesStatic Class to handle PROOF static config; TProofServ PROOF Server Application Interface; TProofServLite PROOF-Lite Server Application Interface; TProofSuperMaster PROOF control class for making submasters; TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t> Class describing a vector container; TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t> Class describing a vector container; TPyDispatcher Python dispatcher class; TPyMultiGenFunction Python for Math::IMultiGenFunction equivalent; TPyMultiGradFunction Python for Math::IMultiGradFunction equivalent; TPyReturn Python morphing return object; TPySelector Python equivalent base class for PROOF; TPythia8 Interface class of Pythia8; TPythia8Decayer Particle Decayer using Pythia8; TPython Access to the python interpreter; TQApplication creates ROOT environment with the Qt windowing system; TQCanvasImp ABC describing Qt GUI independent main window; TQCanvasMenu interface to Qt based context sensitive popup menus; TQClass Class with connections; TQCommand encapsulates the information for undo/redo a single action.,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:124481,Integrability,Interface,Interface,124481,and worker information; TProofOutputFile Wrapper class to steer the merging of files produced on workers; TProofOutputList Output list specific TList derivation; TProofPerfAnalysis Set of tools to analyse the performance tree; TProofPlayer Basic PROOF player; TProofPlayerLite PROOF player running in PROOF-Lite; TProofPlayerLocal PROOF player running on client; TProofPlayerRemote PROOF player running on master server; TProofPlayerSlave PROOF player running on slave server; TProofPlayerSuperMaster PROOF player running on super master; TProofProgressDialog PROOF progress dialog; TProofProgressInfo Progress information; TProofProgressLog Class implementing a log graphic box; TProofProgressMemoryPlot PROOF progress memory plots; TProofProgressStatus Proof progress status class; TProofQueryResult Class describing a PROOF query; TProofResources Abstract class describing PROOF resources; TProofResourcesStatic Class to handle PROOF static config; TProofServ PROOF Server Application Interface; TProofServLite PROOF-Lite Server Application Interface; TProofSuperMaster PROOF control class for making submasters; TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t> Class describing a vector container; TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t> Class describing a vector container; TPyDispatcher Python dispatcher class; TPyMultiGenFunction Python for Math::IMultiGenFunction equivalent; TPyMultiGradFunction Python for Math::IMultiGradFunction equivalent; TPyReturn Python morphing return object; TPySelector Python equivalent base class for PROOF; TPythia8 Interface class of Pythia8; TPythia8Decayer Particle Decayer using Pythia8; TPython Access to the python interpreter; TQApplication creates ROOT environment with the Qt windowing system; TQCanvasImp ABC describing Qt GUI independent main window; TQCanvasMenu interface to Qt based context sensitive popup menus; TQClass Class with connections; TQCommand encapsulates the information for undo/redo a single action.,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:124740,Integrability,interface,interface,124740,and worker information; TProofOutputFile Wrapper class to steer the merging of files produced on workers; TProofOutputList Output list specific TList derivation; TProofPerfAnalysis Set of tools to analyse the performance tree; TProofPlayer Basic PROOF player; TProofPlayerLite PROOF player running in PROOF-Lite; TProofPlayerLocal PROOF player running on client; TProofPlayerRemote PROOF player running on master server; TProofPlayerSlave PROOF player running on slave server; TProofPlayerSuperMaster PROOF player running on super master; TProofProgressDialog PROOF progress dialog; TProofProgressInfo Progress information; TProofProgressLog Class implementing a log graphic box; TProofProgressMemoryPlot PROOF progress memory plots; TProofProgressStatus Proof progress status class; TProofQueryResult Class describing a PROOF query; TProofResources Abstract class describing PROOF resources; TProofResourcesStatic Class to handle PROOF static config; TProofServ PROOF Server Application Interface; TProofServLite PROOF-Lite Server Application Interface; TProofSuperMaster PROOF control class for making submasters; TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t> Class describing a vector container; TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t> Class describing a vector container; TPyDispatcher Python dispatcher class; TPyMultiGenFunction Python for Math::IMultiGenFunction equivalent; TPyMultiGradFunction Python for Math::IMultiGradFunction equivalent; TPyReturn Python morphing return object; TPySelector Python equivalent base class for PROOF; TPythia8 Interface class of Pythia8; TPythia8Decayer Particle Decayer using Pythia8; TPython Access to the python interpreter; TQApplication creates ROOT environment with the Qt windowing system; TQCanvasImp ABC describing Qt GUI independent main window; TQCanvasMenu interface to Qt based context sensitive popup menus; TQClass Class with connections; TQCommand encapsulates the information for undo/redo a single action.,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:125159,Integrability,interface,interface,125159,"Command encapsulates the information for undo/redo a single action.; TQConnection Internal class used in the object communication mechanism; TQMimeTypes Pool of mime type objects; TQObjSender Used to ""delegate"" TQObject functionality; TQObject Base class for object communication mechanism; TQRootApplication creates Qt environment interface with the ROOT windowing system; TQRootCanvas interface to Qt eventloop to handle user input; TQRootDialog prompt for the arguments of an object's member function; TQRootGuiFactory Qt ROOT Gui factory; TQUndoManager recorder of operations for undo and redo; TQpDataBase Qp Base Data class; TQpDataDens Qp Data class for Dens formulation; TQpDataSparse Qp Data class for Sparse formulation; TQpLinSolverBase Qp linear solver base class; TQpLinSolverDens Qp linear solver class for Dens formulation; TQpLinSolverSparse Qp linear solver class for Sparse formulation; TQpProbBase Qp problem formulation base class; TQpProbDens Qp dens problem formulation class; TQpProbSparse Qp sparse problem formulation class; TQpResidual Qp Residual class; TQpSolverBase Qp Solver class; TQpVar Qp Variables class; TQtApplication Instantiate the Qt system within ROOT environment; TQtBrush create QBrush object based on the ROOT ""fill"" attributes ; TQtClientFilter Map Qt and ROOT event; TQtClientWidget QFrame implementation backing ROOT TGWindow objects; TQtMarker Convert ROOT TMarker objects on to QPointArray; TQtPadFont < Create Qt QFont object based on ROOT TAttText attributes; TQtRootSlot ; TQtTimer QTimer to awake the ROOT event loop from Qt event loop; TQtWidget QWidget to back ROOT TCanvas (Can be used with Qt designer); TQuaternion a quaternion class; TQueryDescription Query description; TQueryResult Class describing a query; TQueryResultManager PROOF query result manager; TROOT Top level (or root) structure for all classes; TRWLock Reader/writer lock; TRadialGradient Radial gradient fill.; TRandom Simple Random number generator (periodicity = 10**9); TRa",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:125214,Integrability,interface,interface,125214,"Command encapsulates the information for undo/redo a single action.; TQConnection Internal class used in the object communication mechanism; TQMimeTypes Pool of mime type objects; TQObjSender Used to ""delegate"" TQObject functionality; TQObject Base class for object communication mechanism; TQRootApplication creates Qt environment interface with the ROOT windowing system; TQRootCanvas interface to Qt eventloop to handle user input; TQRootDialog prompt for the arguments of an object's member function; TQRootGuiFactory Qt ROOT Gui factory; TQUndoManager recorder of operations for undo and redo; TQpDataBase Qp Base Data class; TQpDataDens Qp Data class for Dens formulation; TQpDataSparse Qp Data class for Sparse formulation; TQpLinSolverBase Qp linear solver base class; TQpLinSolverDens Qp linear solver class for Dens formulation; TQpLinSolverSparse Qp linear solver class for Sparse formulation; TQpProbBase Qp problem formulation base class; TQpProbDens Qp dens problem formulation class; TQpProbSparse Qp sparse problem formulation class; TQpResidual Qp Residual class; TQpSolverBase Qp Solver class; TQpVar Qp Variables class; TQtApplication Instantiate the Qt system within ROOT environment; TQtBrush create QBrush object based on the ROOT ""fill"" attributes ; TQtClientFilter Map Qt and ROOT event; TQtClientWidget QFrame implementation backing ROOT TGWindow objects; TQtMarker Convert ROOT TMarker objects on to QPointArray; TQtPadFont < Create Qt QFont object based on ROOT TAttText attributes; TQtRootSlot ; TQtTimer QTimer to awake the ROOT event loop from Qt event loop; TQtWidget QWidget to back ROOT TCanvas (Can be used with Qt designer); TQuaternion a quaternion class; TQueryDescription Query description; TQueryResult Class describing a query; TQueryResultManager PROOF query result manager; TROOT Top level (or root) structure for all classes; TRWLock Reader/writer lock; TRadialGradient Radial gradient fill.; TRandom Simple Random number generator (periodicity = 10**9); TRa",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:127204,Integrability,interface,interface,127204,T TAttText attributes; TQtRootSlot ; TQtTimer QTimer to awake the ROOT event loop from Qt event loop; TQtWidget QWidget to back ROOT TCanvas (Can be used with Qt designer); TQuaternion a quaternion class; TQueryDescription Query description; TQueryResult Class describing a query; TQueryResultManager PROOF query result manager; TROOT Top level (or root) structure for all classes; TRWLock Reader/writer lock; TRadialGradient Radial gradient fill.; TRandom Simple Random number generator (periodicity = 10**9); TRandom1 Ranlux Random number generators with periodicity > 10**14; TRandom2 Random number generator with periodicity of 10**26; TRandom3 Random number generator: Mersenne Twister; TRealData Description of persistent data members; TRecCmdEvent Class stores information about 1 commandline event (= 1 command typed by user in commandline); TRecEvent Abstract class. Defines basic interface for storing information about ROOT events; TRecExtraEvent Class stores information about extra events; TRecGuiEvent Class stores information about 1 GUI event in ROOT; TRecWinPair Class used for storing of window IDs mapping. Needed for replaying events.; TRecorder Class provides direct recorder/replayer interface for a user.; TRecorderInactive Represents state of TRecorder after its creation; TRecorderPaused Represents state of TRecorder when paused; TRecorderRecording Represents state of TRecorder when recording events; TRecorderReplaying Represents state of TRecorder when replaying; TRecorderState Abstract class that defines interface for a state of recorder; TRedirectOutputGuard Exception safe output redirection; TRef Persistent Reference link to a TObject; TRefArray An array of references to TObjects; TRefArrayIter Object array iterator; TRefCnt ; TRefTable Table of referenced objects during an I/O operation; TRegexp Regular expression class; TRemoteObject A remote object; TResponseTable Generic Geant detector response table; TRint ROOT Interactive Application Interface; TRobust,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:127520,Integrability,interface,interface,127520,ternion class; TQueryDescription Query description; TQueryResult Class describing a query; TQueryResultManager PROOF query result manager; TROOT Top level (or root) structure for all classes; TRWLock Reader/writer lock; TRadialGradient Radial gradient fill.; TRandom Simple Random number generator (periodicity = 10**9); TRandom1 Ranlux Random number generators with periodicity > 10**14; TRandom2 Random number generator with periodicity of 10**26; TRandom3 Random number generator: Mersenne Twister; TRealData Description of persistent data members; TRecCmdEvent Class stores information about 1 commandline event (= 1 command typed by user in commandline); TRecEvent Abstract class. Defines basic interface for storing information about ROOT events; TRecExtraEvent Class stores information about extra events; TRecGuiEvent Class stores information about 1 GUI event in ROOT; TRecWinPair Class used for storing of window IDs mapping. Needed for replaying events.; TRecorder Class provides direct recorder/replayer interface for a user.; TRecorderInactive Represents state of TRecorder after its creation; TRecorderPaused Represents state of TRecorder when paused; TRecorderRecording Represents state of TRecorder when recording events; TRecorderReplaying Represents state of TRecorder when replaying; TRecorderState Abstract class that defines interface for a state of recorder; TRedirectOutputGuard Exception safe output redirection; TRef Persistent Reference link to a TObject; TRefArray An array of references to TObjects; TRefArrayIter Object array iterator; TRefCnt ; TRefTable Table of referenced objects during an I/O operation; TRegexp Regular expression class; TRemoteObject A remote object; TResponseTable Generic Geant detector response table; TRint ROOT Interactive Application Interface; TRobustEstimator Minimum Covariance Determinant Estimator; TRolke ; TRootApplication ROOT native GUI application environment; TRootAuth client auth interface; TRootBrowser New ROOT Browser; TRootBro,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:127850,Integrability,interface,interface,127850,,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:128296,Integrability,Interface,Interface,128296,,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:128455,Integrability,interface,interface,128455,,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:129963,Integrability,interface,interface,129963,"lay help text; TRootIOCtor ; TRootSecContext Class providing host specific authentication information; TRootSniffer Sniffer of ROOT objects; TRootSnifferScanRec Scan record for objects sniffer; TRootSnifferStore structure for results store of objects sniffer; TRootSnifferStoreJson json results store of objects sniffer; TRootSnifferStoreXml xml results store of objects sniffer; TRotMatrix Rotation Matrix for 3-D geometry objects; TRotation Rotations of TVector3 objects; TS3HTTPRequest Create generic HTTP request for Amazon S3 and Google Storage services; TS3WebFile Read a ROOT file from a S3 server; TSAXParser SAX Parser; TSPHE SPHE shape; TSPlot class to disentangle signal from background; TSQLClassColumnInfo Keeps information about single column in class table; TSQLClassInfo Keeps the table information relevant for one class ; TSQLColumnData Single SQL column data.; TSQLColumnInfo Summury information about column from SQL table; TSQLFile ROOT TFile interface to SQL database; TSQLMonitoringWriter Sending monitoring data to a SQL DB; TSQLObjectData Keeps the data requested from the SQL server for an object.; TSQLObjectDataPool XML object keeper class ; TSQLObjectInfo Info (classname, version) about object in database ; TSQLResult SQL query result; TSQLRow One row of an SQL query result; TSQLServer Connection to SQL server; TSQLStatement SQL statement; TSQLStructure Table/structure description used internally by YBufferSQL.; TSQLTableData Collection of columns data for single SQL table; TSQLTableInfo Summury information about SQL table; TSSLSocket SSL wrapped socket; TSVDUnfold Data unfolding using Singular Value Decomposition (hep-ph/9509307) ; TSVG SVG driver; TSecContext Class providing host specific authentication information; TSecContextCleanup Update the remote authentication table; TSelVerifyDataSet PROOF selector for parallel dataset verification; TSelector A utility class for tree and object processing; TSelectorCint A utility class for tree and object process",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:130575,Integrability,wrap,wrapped,130575,"Pool XML object keeper class ; TSQLObjectInfo Info (classname, version) about object in database ; TSQLResult SQL query result; TSQLRow One row of an SQL query result; TSQLServer Connection to SQL server; TSQLStatement SQL statement; TSQLStructure Table/structure description used internally by YBufferSQL.; TSQLTableData Collection of columns data for single SQL table; TSQLTableInfo Summury information about SQL table; TSSLSocket SSL wrapped socket; TSVDUnfold Data unfolding using Singular Value Decomposition (hep-ph/9509307) ; TSVG SVG driver; TSecContext Class providing host specific authentication information; TSecContextCleanup Update the remote authentication table; TSelVerifyDataSet PROOF selector for parallel dataset verification; TSelector A utility class for tree and object processing; TSelectorCint A utility class for tree and object processing (interpreted version); TSelectorDraw A specialized TSelector for TTree::Draw; TSelectorEntries A specialized TSelector for TTree::GetEntries(selection); TSelectorList Special TList used in the TSelector; TSelectorScalar Mergable scalar; TSemaphore Counting semaphore class; TSeqCollection Sequenceable collection ABC; TServerSocket This class implements server sockets; TSessionDescription Session description; TSessionFrame Session frame; TSessionInputFrame Input frame; TSessionLogView PROOF progress dialog; TSessionOutputFrame Output frame; TSessionQueryFrame Query frame; TSessionServerFrame Server frame; TSessionViewer Session Viewer; TShape Basic shape; TSignalHandler Signal event handler; TSlave PROOF slave server; TSlaveInfo basic info on workers; TSlaveLite PROOF lite worker server; TSlider A user interface slider.; TSliderBox The moving box of a TSlider; TSocket This class implements client sockets; TSortedList A sorted list; TSpectrum Peak Finder, background estimator, Deconvolution; TSpectrum2 Peak Finder, background estimator, Deconvolution for 2-D histograms; TSpectrum2Fit Spectrum2 Fitter using algorithm with",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:131816,Integrability,interface,interface,131816,"Pool XML object keeper class ; TSQLObjectInfo Info (classname, version) about object in database ; TSQLResult SQL query result; TSQLRow One row of an SQL query result; TSQLServer Connection to SQL server; TSQLStatement SQL statement; TSQLStructure Table/structure description used internally by YBufferSQL.; TSQLTableData Collection of columns data for single SQL table; TSQLTableInfo Summury information about SQL table; TSSLSocket SSL wrapped socket; TSVDUnfold Data unfolding using Singular Value Decomposition (hep-ph/9509307) ; TSVG SVG driver; TSecContext Class providing host specific authentication information; TSecContextCleanup Update the remote authentication table; TSelVerifyDataSet PROOF selector for parallel dataset verification; TSelector A utility class for tree and object processing; TSelectorCint A utility class for tree and object processing (interpreted version); TSelectorDraw A specialized TSelector for TTree::Draw; TSelectorEntries A specialized TSelector for TTree::GetEntries(selection); TSelectorList Special TList used in the TSelector; TSelectorScalar Mergable scalar; TSemaphore Counting semaphore class; TSeqCollection Sequenceable collection ABC; TServerSocket This class implements server sockets; TSessionDescription Session description; TSessionFrame Session frame; TSessionInputFrame Input frame; TSessionLogView PROOF progress dialog; TSessionOutputFrame Output frame; TSessionQueryFrame Query frame; TSessionServerFrame Server frame; TSessionViewer Session Viewer; TShape Basic shape; TSignalHandler Signal event handler; TSlave PROOF slave server; TSlaveInfo basic info on workers; TSlaveLite PROOF lite worker server; TSlider A user interface slider.; TSliderBox The moving box of a TSlider; TSocket This class implements client sockets; TSortedList A sorted list; TSpectrum Peak Finder, background estimator, Deconvolution; TSpectrum2 Peak Finder, background estimator, Deconvolution for 2-D histograms; TSpectrum2Fit Spectrum2 Fitter using algorithm with",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:133342,Integrability,inject,injected,133342,"ctrum2Fit Spectrum2 Fitter using algorithm without matrix inversion and conjugate gradient method for symmetrical matrices (Stiefel-Hestens method); TSpectrum2Painter TSpectrum 3d graphics package; TSpectrum2Transform Spectrum2 Transformer, it calculates classic orthogonal 2D transforms; TSpectrum3 Peak Finder, Background estimator, Markov smoothing and Deconvolution for 3-D histograms; TSpectrumFit Spectrum Fitter using algorithm without matrix inversion and conjugate gradient method for symmetrical matrices (Stiefel-Hestens method); TSpectrumTransform Spectrum Transformer, it calculates classic orthogonal 1D transforms; TSpider Helper class to draw spider; TSpiderEditor GUI for editing the spider plot attributes.; TSpline Spline base class; TSpline3 Class to create third natural splines; TSpline5 Class to create quintic natural splines; TSplinePoly Spline polynomial terms; TSplinePoly3 Third spline polynomial terms; TSplinePoly5 Quintic spline polynomial terms; TStatistic Named statistical variable; TStatsFeedback Present PROOF query feedback; TStatus Status class; TStdExceptionHandler C++ exception handler; TStopwatch A stopwatch which times real and cpu time; TStorage Storage manager class; TStreamerArtificial StreamerElement injected by a TSchemaRule. Transient only to preverse forward compatibility.; TStreamerBase Streamer element of type base class; TStreamerBasicPointer Streamer element for a pointer to a basic type; TStreamerBasicType Streamer element for a basic type; TStreamerElement Base class for one element (data member) to be Streamed; TStreamerInfo Streamer information for one class version; TStreamerInfoActions ; TStreamerInfoActions::TActionSequence ; TStreamerInfoActions::TConfiguration ; TStreamerInfoActions::TConfiguredAction A configured action; TStreamerLoop Streamer element for a pointer to an array of objects; TStreamerObject Streamer element of type object; TStreamerObjectAny Streamer element of type object other than TObject; TStreamerObje",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:134892,Integrability,Interface,Interface,134892,"element of type STL container; TStreamerSTLstring Streamer element of type C++ string; TStreamerString Streamer element of type TString; TString Basic string class; TStringLong Long string class (more than 255 chars); TStringToken String tokenizer using PCRE for finding next tokens.; TStructNode Node with information about class; TStructNodeEditor GUI fo editing TStructNode; TStructNodeProperty Class with nodes color property; TStructViewer A 3D struct viewer; TStructViewerGUI A GUI fo 3D struct viewer ; TStyle A collection of all graphics attributes; TStyleDialog Dialog box used by the TStyleManager class; TStyleManager Graphical User Interface for managing styles; TStylePreview Preview window used by the TStyleManager class; TSubString ; TSynapse simple weighted bidirectionnal connection between 2 neurons; TSysEvtHandler ABC for handling system events; TSystem ABC defining a generic interface to the OS; TSystemDirectory A system directory; TSystemFile A system file; TTF Interface to TTF font handling; TTRAP TRAP shape; TTRD1 TRD1 shape; TTRD2 TRD2 shape; TTUBE TUBE shape; TTUBS TUBS shape; TTVLVContainer A dragging-capable LVContainer; TTVLVEntry Item that goes into the tree list view widget; TTVRecord A draw record for TTreeViewer; TTVSession A tree viewer session; TTabCom Perform command line completion when hitting <TAB>; TTable vector of the C structures; TTable3Points A 3-D Points; TTable::iterator ; TTableDescriptor descrpitor defining the internal layout of TTable objects; TTableIter Iterator over ""sorted"" TTable objects; TTableMap ""Map"" array for TTable object; TTablePadView3D ; TTablePoints Defines the TTable as an element of ""event"" geometry; TTableRange Range used in TGTable.; TTableSorter Is an ""observer"" class to sort the TTable objects; TTask Base class for tasks; TTeXDump Tex driver; TText Text; TTextEditor text editor; TThread Thread class; TThreadFactory Thread factory ABC; TThreadImp ThreadImp class; TTime Basic time type with milli second precis",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:135146,Integrability,interface,interface,135146,"element of type STL container; TStreamerSTLstring Streamer element of type C++ string; TStreamerString Streamer element of type TString; TString Basic string class; TStringLong Long string class (more than 255 chars); TStringToken String tokenizer using PCRE for finding next tokens.; TStructNode Node with information about class; TStructNodeEditor GUI fo editing TStructNode; TStructNodeProperty Class with nodes color property; TStructViewer A 3D struct viewer; TStructViewerGUI A GUI fo 3D struct viewer ; TStyle A collection of all graphics attributes; TStyleDialog Dialog box used by the TStyleManager class; TStyleManager Graphical User Interface for managing styles; TStylePreview Preview window used by the TStyleManager class; TSubString ; TSynapse simple weighted bidirectionnal connection between 2 neurons; TSysEvtHandler ABC for handling system events; TSystem ABC defining a generic interface to the OS; TSystemDirectory A system directory; TSystemFile A system file; TTF Interface to TTF font handling; TTRAP TRAP shape; TTRD1 TRD1 shape; TTRD2 TRD2 shape; TTUBE TUBE shape; TTUBS TUBS shape; TTVLVContainer A dragging-capable LVContainer; TTVLVEntry Item that goes into the tree list view widget; TTVRecord A draw record for TTreeViewer; TTVSession A tree viewer session; TTabCom Perform command line completion when hitting <TAB>; TTable vector of the C structures; TTable3Points A 3-D Points; TTable::iterator ; TTableDescriptor descrpitor defining the internal layout of TTable objects; TTableIter Iterator over ""sorted"" TTable objects; TTableMap ""Map"" array for TTable object; TTablePadView3D ; TTablePoints Defines the TTable as an element of ""event"" geometry; TTableRange Range used in TGTable.; TTableSorter Is an ""observer"" class to sort the TTable objects; TTask Base class for tasks; TTeXDump Tex driver; TText Text; TTextEditor text editor; TThread Thread class; TThreadFactory Thread factory ABC; TThreadImp ThreadImp class; TTime Basic time type with milli second precis",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:135235,Integrability,Interface,Interface,135235,"element of type STL container; TStreamerSTLstring Streamer element of type C++ string; TStreamerString Streamer element of type TString; TString Basic string class; TStringLong Long string class (more than 255 chars); TStringToken String tokenizer using PCRE for finding next tokens.; TStructNode Node with information about class; TStructNodeEditor GUI fo editing TStructNode; TStructNodeProperty Class with nodes color property; TStructViewer A 3D struct viewer; TStructViewerGUI A GUI fo 3D struct viewer ; TStyle A collection of all graphics attributes; TStyleDialog Dialog box used by the TStyleManager class; TStyleManager Graphical User Interface for managing styles; TStylePreview Preview window used by the TStyleManager class; TSubString ; TSynapse simple weighted bidirectionnal connection between 2 neurons; TSysEvtHandler ABC for handling system events; TSystem ABC defining a generic interface to the OS; TSystemDirectory A system directory; TSystemFile A system file; TTF Interface to TTF font handling; TTRAP TRAP shape; TTRD1 TRD1 shape; TTRD2 TRD2 shape; TTUBE TUBE shape; TTUBS TUBS shape; TTVLVContainer A dragging-capable LVContainer; TTVLVEntry Item that goes into the tree list view widget; TTVRecord A draw record for TTreeViewer; TTVSession A tree viewer session; TTabCom Perform command line completion when hitting <TAB>; TTable vector of the C structures; TTable3Points A 3-D Points; TTable::iterator ; TTableDescriptor descrpitor defining the internal layout of TTable objects; TTableIter Iterator over ""sorted"" TTable objects; TTableMap ""Map"" array for TTable object; TTablePadView3D ; TTablePoints Defines the TTable as an element of ""event"" geometry; TTableRange Range used in TGTable.; TTableSorter Is an ""observer"" class to sort the TTable objects; TTask Base class for tasks; TTeXDump Tex driver; TText Text; TTextEditor text editor; TThread Thread class; TThreadFactory Thread factory ABC; TThreadImp ThreadImp class; TTime Basic time type with milli second precis",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:137224,Integrability,Interface,Interface,137224,,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:137631,Integrability,Interface,Interface,137631,,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:137723,Integrability,wrap,wrappers,137723,,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:137749,Integrability,Wrap,Wrapper,137749,,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:137825,Integrability,Wrap,Wrapper,137825,,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:137897,Integrability,Wrap,Wrapper,137897,,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:137961,Integrability,Wrap,Wrapper,137961,,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:138292,Integrability,interface,interface,138292,PSocket This class implements UDP client sockets; TUUID Universally Unique IDentifier; TUnfold Unfolding with support for L-curve analysis; TUnfoldBinning Complex binning schemes for TUnfoldDensity; TUnfoldDensity Unfolding with densisty regularisation; TUnfoldSys Unfolding with support for systematic error propagation; TUnixSystem Interface to Unix OS services; TUnuran ; TUnuranBaseDist Base class for Unuran distribution wrappers; TUnuranContDist Wrapper class for one dimensional continuous distribution; TUnuranDiscrDist Wrapper class for one dimensional discrete distribution; TUnuranEmpDist Wrapper class for empirical distribution ; TUnuranMultiContDist Wrapper class for multi dimensional continuous distribution; TUnuranSampler ; TUploadDataSetDlg New query dialog; TUri Represents an URI; TUrl Represents an URL; TVector2 A 2D physics vector; TVector3 A 3D physics vector; TVectorT<double> Template of Vector class; TVectorT<float> Template of Vector class; TView 3-D View abstract interface for 3-D views; TView3D 3-D View; TViewer3DPad A 3D Viewer painter for TPads; TViewerX3D Interface to the X3D viewer; TVirtualArray ; TVirtualAuth client auth interface; TVirtualBranchBrowsable Base class for helper objects used for browsing; TVirtualCollectionProxy ; TVirtualDragManager drag and drop manager; TVirtualFFT abstract interface for FFT calculations; TVirtualFitter Abstract interface for fitting; TVirtualGLManip Interface for GL manipulator; TVirtualGLPainter Interface for OpenGL painter; TVirtualGeoPainter Abstract interface for geometry painters; TVirtualGeoTrack virtual geometry tracks; TVirtualGraphPainter Abstract interface for histogram painters; TVirtualHistPainter Abstract interface for histogram painters; TVirtualIndex Abstract interface for Tree Index; TVirtualIsAProxy ; TVirtualMC Interface to Monte Carlo; TVirtualMCApplication Interface to MonteCarlo application; TVirtualMCDecayer Particle Decayer Base Class; TVirtualMCGeometry Interface to Monte Carlo geome,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:138390,Integrability,Interface,Interface,138390,olding with support for L-curve analysis; TUnfoldBinning Complex binning schemes for TUnfoldDensity; TUnfoldDensity Unfolding with densisty regularisation; TUnfoldSys Unfolding with support for systematic error propagation; TUnixSystem Interface to Unix OS services; TUnuran ; TUnuranBaseDist Base class for Unuran distribution wrappers; TUnuranContDist Wrapper class for one dimensional continuous distribution; TUnuranDiscrDist Wrapper class for one dimensional discrete distribution; TUnuranEmpDist Wrapper class for empirical distribution ; TUnuranMultiContDist Wrapper class for multi dimensional continuous distribution; TUnuranSampler ; TUploadDataSetDlg New query dialog; TUri Represents an URI; TUrl Represents an URL; TVector2 A 2D physics vector; TVector3 A 3D physics vector; TVectorT<double> Template of Vector class; TVectorT<float> Template of Vector class; TView 3-D View abstract interface for 3-D views; TView3D 3-D View; TViewer3DPad A 3D Viewer painter for TPads; TViewerX3D Interface to the X3D viewer; TVirtualArray ; TVirtualAuth client auth interface; TVirtualBranchBrowsable Base class for helper objects used for browsing; TVirtualCollectionProxy ; TVirtualDragManager drag and drop manager; TVirtualFFT abstract interface for FFT calculations; TVirtualFitter Abstract interface for fitting; TVirtualGLManip Interface for GL manipulator; TVirtualGLPainter Interface for OpenGL painter; TVirtualGeoPainter Abstract interface for geometry painters; TVirtualGeoTrack virtual geometry tracks; TVirtualGraphPainter Abstract interface for histogram painters; TVirtualHistPainter Abstract interface for histogram painters; TVirtualIndex Abstract interface for Tree Index; TVirtualIsAProxy ; TVirtualMC Interface to Monte Carlo; TVirtualMCApplication Interface to MonteCarlo application; TVirtualMCDecayer Particle Decayer Base Class; TVirtualMCGeometry Interface to Monte Carlo geometry construction; TVirtualMCStack Interface to a particles stack; TVirtualMagField Abstract base f,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:138460,Integrability,interface,interface,138460,ng schemes for TUnfoldDensity; TUnfoldDensity Unfolding with densisty regularisation; TUnfoldSys Unfolding with support for systematic error propagation; TUnixSystem Interface to Unix OS services; TUnuran ; TUnuranBaseDist Base class for Unuran distribution wrappers; TUnuranContDist Wrapper class for one dimensional continuous distribution; TUnuranDiscrDist Wrapper class for one dimensional discrete distribution; TUnuranEmpDist Wrapper class for empirical distribution ; TUnuranMultiContDist Wrapper class for multi dimensional continuous distribution; TUnuranSampler ; TUploadDataSetDlg New query dialog; TUri Represents an URI; TUrl Represents an URL; TVector2 A 2D physics vector; TVector3 A 3D physics vector; TVectorT<double> Template of Vector class; TVectorT<float> Template of Vector class; TView 3-D View abstract interface for 3-D views; TView3D 3-D View; TViewer3DPad A 3D Viewer painter for TPads; TViewerX3D Interface to the X3D viewer; TVirtualArray ; TVirtualAuth client auth interface; TVirtualBranchBrowsable Base class for helper objects used for browsing; TVirtualCollectionProxy ; TVirtualDragManager drag and drop manager; TVirtualFFT abstract interface for FFT calculations; TVirtualFitter Abstract interface for fitting; TVirtualGLManip Interface for GL manipulator; TVirtualGLPainter Interface for OpenGL painter; TVirtualGeoPainter Abstract interface for geometry painters; TVirtualGeoTrack virtual geometry tracks; TVirtualGraphPainter Abstract interface for histogram painters; TVirtualHistPainter Abstract interface for histogram painters; TVirtualIndex Abstract interface for Tree Index; TVirtualIsAProxy ; TVirtualMC Interface to Monte Carlo; TVirtualMCApplication Interface to MonteCarlo application; TVirtualMCDecayer Particle Decayer Base Class; TVirtualMCGeometry Interface to Monte Carlo geometry construction; TVirtualMCStack Interface to a particles stack; TVirtualMagField Abstract base field class; TVirtualMonitoringReader ABC for Reading Monitoring Inform,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:138634,Integrability,interface,interface,138634,e to Unix OS services; TUnuran ; TUnuranBaseDist Base class for Unuran distribution wrappers; TUnuranContDist Wrapper class for one dimensional continuous distribution; TUnuranDiscrDist Wrapper class for one dimensional discrete distribution; TUnuranEmpDist Wrapper class for empirical distribution ; TUnuranMultiContDist Wrapper class for multi dimensional continuous distribution; TUnuranSampler ; TUploadDataSetDlg New query dialog; TUri Represents an URI; TUrl Represents an URL; TVector2 A 2D physics vector; TVector3 A 3D physics vector; TVectorT<double> Template of Vector class; TVectorT<float> Template of Vector class; TView 3-D View abstract interface for 3-D views; TView3D 3-D View; TViewer3DPad A 3D Viewer painter for TPads; TViewerX3D Interface to the X3D viewer; TVirtualArray ; TVirtualAuth client auth interface; TVirtualBranchBrowsable Base class for helper objects used for browsing; TVirtualCollectionProxy ; TVirtualDragManager drag and drop manager; TVirtualFFT abstract interface for FFT calculations; TVirtualFitter Abstract interface for fitting; TVirtualGLManip Interface for GL manipulator; TVirtualGLPainter Interface for OpenGL painter; TVirtualGeoPainter Abstract interface for geometry painters; TVirtualGeoTrack virtual geometry tracks; TVirtualGraphPainter Abstract interface for histogram painters; TVirtualHistPainter Abstract interface for histogram painters; TVirtualIndex Abstract interface for Tree Index; TVirtualIsAProxy ; TVirtualMC Interface to Monte Carlo; TVirtualMCApplication Interface to MonteCarlo application; TVirtualMCDecayer Particle Decayer Base Class; TVirtualMCGeometry Interface to Monte Carlo geometry construction; TVirtualMCStack Interface to a particles stack; TVirtualMagField Abstract base field class; TVirtualMonitoringReader ABC for Reading Monitoring Information; TVirtualMonitoringWriter ABC for Sending Monitoring Information; TVirtualMutex Virtual mutex lock class; TVirtualObject ; TVirtualPS Abstract interface to a PostScript,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:138690,Integrability,interface,interface,138690,ass for Unuran distribution wrappers; TUnuranContDist Wrapper class for one dimensional continuous distribution; TUnuranDiscrDist Wrapper class for one dimensional discrete distribution; TUnuranEmpDist Wrapper class for empirical distribution ; TUnuranMultiContDist Wrapper class for multi dimensional continuous distribution; TUnuranSampler ; TUploadDataSetDlg New query dialog; TUri Represents an URI; TUrl Represents an URL; TVector2 A 2D physics vector; TVector3 A 3D physics vector; TVectorT<double> Template of Vector class; TVectorT<float> Template of Vector class; TView 3-D View abstract interface for 3-D views; TView3D 3-D View; TViewer3DPad A 3D Viewer painter for TPads; TViewerX3D Interface to the X3D viewer; TVirtualArray ; TVirtualAuth client auth interface; TVirtualBranchBrowsable Base class for helper objects used for browsing; TVirtualCollectionProxy ; TVirtualDragManager drag and drop manager; TVirtualFFT abstract interface for FFT calculations; TVirtualFitter Abstract interface for fitting; TVirtualGLManip Interface for GL manipulator; TVirtualGLPainter Interface for OpenGL painter; TVirtualGeoPainter Abstract interface for geometry painters; TVirtualGeoTrack virtual geometry tracks; TVirtualGraphPainter Abstract interface for histogram painters; TVirtualHistPainter Abstract interface for histogram painters; TVirtualIndex Abstract interface for Tree Index; TVirtualIsAProxy ; TVirtualMC Interface to Monte Carlo; TVirtualMCApplication Interface to MonteCarlo application; TVirtualMCDecayer Particle Decayer Base Class; TVirtualMCGeometry Interface to Monte Carlo geometry construction; TVirtualMCStack Interface to a particles stack; TVirtualMagField Abstract base field class; TVirtualMonitoringReader ABC for Reading Monitoring Information; TVirtualMonitoringWriter ABC for Sending Monitoring Information; TVirtualMutex Virtual mutex lock class; TVirtualObject ; TVirtualPS Abstract interface to a PostScript driver; TVirtualPacketizer Generate work packets for pa,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:138729,Integrability,Interface,Interface,138729,UnuranContDist Wrapper class for one dimensional continuous distribution; TUnuranDiscrDist Wrapper class for one dimensional discrete distribution; TUnuranEmpDist Wrapper class for empirical distribution ; TUnuranMultiContDist Wrapper class for multi dimensional continuous distribution; TUnuranSampler ; TUploadDataSetDlg New query dialog; TUri Represents an URI; TUrl Represents an URL; TVector2 A 2D physics vector; TVector3 A 3D physics vector; TVectorT<double> Template of Vector class; TVectorT<float> Template of Vector class; TView 3-D View abstract interface for 3-D views; TView3D 3-D View; TViewer3DPad A 3D Viewer painter for TPads; TViewerX3D Interface to the X3D viewer; TVirtualArray ; TVirtualAuth client auth interface; TVirtualBranchBrowsable Base class for helper objects used for browsing; TVirtualCollectionProxy ; TVirtualDragManager drag and drop manager; TVirtualFFT abstract interface for FFT calculations; TVirtualFitter Abstract interface for fitting; TVirtualGLManip Interface for GL manipulator; TVirtualGLPainter Interface for OpenGL painter; TVirtualGeoPainter Abstract interface for geometry painters; TVirtualGeoTrack virtual geometry tracks; TVirtualGraphPainter Abstract interface for histogram painters; TVirtualHistPainter Abstract interface for histogram painters; TVirtualIndex Abstract interface for Tree Index; TVirtualIsAProxy ; TVirtualMC Interface to Monte Carlo; TVirtualMCApplication Interface to MonteCarlo application; TVirtualMCDecayer Particle Decayer Base Class; TVirtualMCGeometry Interface to Monte Carlo geometry construction; TVirtualMCStack Interface to a particles stack; TVirtualMagField Abstract base field class; TVirtualMonitoringReader ABC for Reading Monitoring Information; TVirtualMonitoringWriter ABC for Sending Monitoring Information; TVirtualMutex Virtual mutex lock class; TVirtualObject ; TVirtualPS Abstract interface to a PostScript driver; TVirtualPacketizer Generate work packets for parallel processing; TVirtualPad Abstract,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:138777,Integrability,Interface,Interface,138777, continuous distribution; TUnuranDiscrDist Wrapper class for one dimensional discrete distribution; TUnuranEmpDist Wrapper class for empirical distribution ; TUnuranMultiContDist Wrapper class for multi dimensional continuous distribution; TUnuranSampler ; TUploadDataSetDlg New query dialog; TUri Represents an URI; TUrl Represents an URL; TVector2 A 2D physics vector; TVector3 A 3D physics vector; TVectorT<double> Template of Vector class; TVectorT<float> Template of Vector class; TView 3-D View abstract interface for 3-D views; TView3D 3-D View; TViewer3DPad A 3D Viewer painter for TPads; TViewerX3D Interface to the X3D viewer; TVirtualArray ; TVirtualAuth client auth interface; TVirtualBranchBrowsable Base class for helper objects used for browsing; TVirtualCollectionProxy ; TVirtualDragManager drag and drop manager; TVirtualFFT abstract interface for FFT calculations; TVirtualFitter Abstract interface for fitting; TVirtualGLManip Interface for GL manipulator; TVirtualGLPainter Interface for OpenGL painter; TVirtualGeoPainter Abstract interface for geometry painters; TVirtualGeoTrack virtual geometry tracks; TVirtualGraphPainter Abstract interface for histogram painters; TVirtualHistPainter Abstract interface for histogram painters; TVirtualIndex Abstract interface for Tree Index; TVirtualIsAProxy ; TVirtualMC Interface to Monte Carlo; TVirtualMCApplication Interface to MonteCarlo application; TVirtualMCDecayer Particle Decayer Base Class; TVirtualMCGeometry Interface to Monte Carlo geometry construction; TVirtualMCStack Interface to a particles stack; TVirtualMagField Abstract base field class; TVirtualMonitoringReader ABC for Reading Monitoring Information; TVirtualMonitoringWriter ABC for Sending Monitoring Information; TVirtualMutex Virtual mutex lock class; TVirtualObject ; TVirtualPS Abstract interface to a PostScript driver; TVirtualPacketizer Generate work packets for parallel processing; TVirtualPad Abstract base class for Pads and Canvases; TVirtualPadEd,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:138835,Integrability,interface,interface,138835,or one dimensional discrete distribution; TUnuranEmpDist Wrapper class for empirical distribution ; TUnuranMultiContDist Wrapper class for multi dimensional continuous distribution; TUnuranSampler ; TUploadDataSetDlg New query dialog; TUri Represents an URI; TUrl Represents an URL; TVector2 A 2D physics vector; TVector3 A 3D physics vector; TVectorT<double> Template of Vector class; TVectorT<float> Template of Vector class; TView 3-D View abstract interface for 3-D views; TView3D 3-D View; TViewer3DPad A 3D Viewer painter for TPads; TViewerX3D Interface to the X3D viewer; TVirtualArray ; TVirtualAuth client auth interface; TVirtualBranchBrowsable Base class for helper objects used for browsing; TVirtualCollectionProxy ; TVirtualDragManager drag and drop manager; TVirtualFFT abstract interface for FFT calculations; TVirtualFitter Abstract interface for fitting; TVirtualGLManip Interface for GL manipulator; TVirtualGLPainter Interface for OpenGL painter; TVirtualGeoPainter Abstract interface for geometry painters; TVirtualGeoTrack virtual geometry tracks; TVirtualGraphPainter Abstract interface for histogram painters; TVirtualHistPainter Abstract interface for histogram painters; TVirtualIndex Abstract interface for Tree Index; TVirtualIsAProxy ; TVirtualMC Interface to Monte Carlo; TVirtualMCApplication Interface to MonteCarlo application; TVirtualMCDecayer Particle Decayer Base Class; TVirtualMCGeometry Interface to Monte Carlo geometry construction; TVirtualMCStack Interface to a particles stack; TVirtualMagField Abstract base field class; TVirtualMonitoringReader ABC for Reading Monitoring Information; TVirtualMonitoringWriter ABC for Sending Monitoring Information; TVirtualMutex Virtual mutex lock class; TVirtualObject ; TVirtualPS Abstract interface to a PostScript driver; TVirtualPacketizer Generate work packets for parallel processing; TVirtualPad Abstract base class for Pads and Canvases; TVirtualPadEditor Abstract interface for graphics pad editor; TVirtualP,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:138940,Integrability,interface,interface,138940,ution; TUnuranEmpDist Wrapper class for empirical distribution ; TUnuranMultiContDist Wrapper class for multi dimensional continuous distribution; TUnuranSampler ; TUploadDataSetDlg New query dialog; TUri Represents an URI; TUrl Represents an URL; TVector2 A 2D physics vector; TVector3 A 3D physics vector; TVectorT<double> Template of Vector class; TVectorT<float> Template of Vector class; TView 3-D View abstract interface for 3-D views; TView3D 3-D View; TViewer3DPad A 3D Viewer painter for TPads; TViewerX3D Interface to the X3D viewer; TVirtualArray ; TVirtualAuth client auth interface; TVirtualBranchBrowsable Base class for helper objects used for browsing; TVirtualCollectionProxy ; TVirtualDragManager drag and drop manager; TVirtualFFT abstract interface for FFT calculations; TVirtualFitter Abstract interface for fitting; TVirtualGLManip Interface for GL manipulator; TVirtualGLPainter Interface for OpenGL painter; TVirtualGeoPainter Abstract interface for geometry painters; TVirtualGeoTrack virtual geometry tracks; TVirtualGraphPainter Abstract interface for histogram painters; TVirtualHistPainter Abstract interface for histogram painters; TVirtualIndex Abstract interface for Tree Index; TVirtualIsAProxy ; TVirtualMC Interface to Monte Carlo; TVirtualMCApplication Interface to MonteCarlo application; TVirtualMCDecayer Particle Decayer Base Class; TVirtualMCGeometry Interface to Monte Carlo geometry construction; TVirtualMCStack Interface to a particles stack; TVirtualMagField Abstract base field class; TVirtualMonitoringReader ABC for Reading Monitoring Information; TVirtualMonitoringWriter ABC for Sending Monitoring Information; TVirtualMutex Virtual mutex lock class; TVirtualObject ; TVirtualPS Abstract interface to a PostScript driver; TVirtualPacketizer Generate work packets for parallel processing; TVirtualPad Abstract base class for Pads and Canvases; TVirtualPadEditor Abstract interface for graphics pad editor; TVirtualPadPainter Painter interface for pad.,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:139003,Integrability,interface,interface,139003,ution; TUnuranEmpDist Wrapper class for empirical distribution ; TUnuranMultiContDist Wrapper class for multi dimensional continuous distribution; TUnuranSampler ; TUploadDataSetDlg New query dialog; TUri Represents an URI; TUrl Represents an URL; TVector2 A 2D physics vector; TVector3 A 3D physics vector; TVectorT<double> Template of Vector class; TVectorT<float> Template of Vector class; TView 3-D View abstract interface for 3-D views; TView3D 3-D View; TViewer3DPad A 3D Viewer painter for TPads; TViewerX3D Interface to the X3D viewer; TVirtualArray ; TVirtualAuth client auth interface; TVirtualBranchBrowsable Base class for helper objects used for browsing; TVirtualCollectionProxy ; TVirtualDragManager drag and drop manager; TVirtualFFT abstract interface for FFT calculations; TVirtualFitter Abstract interface for fitting; TVirtualGLManip Interface for GL manipulator; TVirtualGLPainter Interface for OpenGL painter; TVirtualGeoPainter Abstract interface for geometry painters; TVirtualGeoTrack virtual geometry tracks; TVirtualGraphPainter Abstract interface for histogram painters; TVirtualHistPainter Abstract interface for histogram painters; TVirtualIndex Abstract interface for Tree Index; TVirtualIsAProxy ; TVirtualMC Interface to Monte Carlo; TVirtualMCApplication Interface to MonteCarlo application; TVirtualMCDecayer Particle Decayer Base Class; TVirtualMCGeometry Interface to Monte Carlo geometry construction; TVirtualMCStack Interface to a particles stack; TVirtualMagField Abstract base field class; TVirtualMonitoringReader ABC for Reading Monitoring Information; TVirtualMonitoringWriter ABC for Sending Monitoring Information; TVirtualMutex Virtual mutex lock class; TVirtualObject ; TVirtualPS Abstract interface to a PostScript driver; TVirtualPacketizer Generate work packets for parallel processing; TVirtualPad Abstract base class for Pads and Canvases; TVirtualPadEditor Abstract interface for graphics pad editor; TVirtualPadPainter Painter interface for pad.,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:139060,Integrability,interface,interface,139060,ution; TUnuranEmpDist Wrapper class for empirical distribution ; TUnuranMultiContDist Wrapper class for multi dimensional continuous distribution; TUnuranSampler ; TUploadDataSetDlg New query dialog; TUri Represents an URI; TUrl Represents an URL; TVector2 A 2D physics vector; TVector3 A 3D physics vector; TVectorT<double> Template of Vector class; TVectorT<float> Template of Vector class; TView 3-D View abstract interface for 3-D views; TView3D 3-D View; TViewer3DPad A 3D Viewer painter for TPads; TViewerX3D Interface to the X3D viewer; TVirtualArray ; TVirtualAuth client auth interface; TVirtualBranchBrowsable Base class for helper objects used for browsing; TVirtualCollectionProxy ; TVirtualDragManager drag and drop manager; TVirtualFFT abstract interface for FFT calculations; TVirtualFitter Abstract interface for fitting; TVirtualGLManip Interface for GL manipulator; TVirtualGLPainter Interface for OpenGL painter; TVirtualGeoPainter Abstract interface for geometry painters; TVirtualGeoTrack virtual geometry tracks; TVirtualGraphPainter Abstract interface for histogram painters; TVirtualHistPainter Abstract interface for histogram painters; TVirtualIndex Abstract interface for Tree Index; TVirtualIsAProxy ; TVirtualMC Interface to Monte Carlo; TVirtualMCApplication Interface to MonteCarlo application; TVirtualMCDecayer Particle Decayer Base Class; TVirtualMCGeometry Interface to Monte Carlo geometry construction; TVirtualMCStack Interface to a particles stack; TVirtualMagField Abstract base field class; TVirtualMonitoringReader ABC for Reading Monitoring Information; TVirtualMonitoringWriter ABC for Sending Monitoring Information; TVirtualMutex Virtual mutex lock class; TVirtualObject ; TVirtualPS Abstract interface to a PostScript driver; TVirtualPacketizer Generate work packets for parallel processing; TVirtualPad Abstract base class for Pads and Canvases; TVirtualPadEditor Abstract interface for graphics pad editor; TVirtualPadPainter Painter interface for pad.,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:139116,Integrability,Interface,Interface,139116,ution; TUnuranEmpDist Wrapper class for empirical distribution ; TUnuranMultiContDist Wrapper class for multi dimensional continuous distribution; TUnuranSampler ; TUploadDataSetDlg New query dialog; TUri Represents an URI; TUrl Represents an URL; TVector2 A 2D physics vector; TVector3 A 3D physics vector; TVectorT<double> Template of Vector class; TVectorT<float> Template of Vector class; TView 3-D View abstract interface for 3-D views; TView3D 3-D View; TViewer3DPad A 3D Viewer painter for TPads; TViewerX3D Interface to the X3D viewer; TVirtualArray ; TVirtualAuth client auth interface; TVirtualBranchBrowsable Base class for helper objects used for browsing; TVirtualCollectionProxy ; TVirtualDragManager drag and drop manager; TVirtualFFT abstract interface for FFT calculations; TVirtualFitter Abstract interface for fitting; TVirtualGLManip Interface for GL manipulator; TVirtualGLPainter Interface for OpenGL painter; TVirtualGeoPainter Abstract interface for geometry painters; TVirtualGeoTrack virtual geometry tracks; TVirtualGraphPainter Abstract interface for histogram painters; TVirtualHistPainter Abstract interface for histogram painters; TVirtualIndex Abstract interface for Tree Index; TVirtualIsAProxy ; TVirtualMC Interface to Monte Carlo; TVirtualMCApplication Interface to MonteCarlo application; TVirtualMCDecayer Particle Decayer Base Class; TVirtualMCGeometry Interface to Monte Carlo geometry construction; TVirtualMCStack Interface to a particles stack; TVirtualMagField Abstract base field class; TVirtualMonitoringReader ABC for Reading Monitoring Information; TVirtualMonitoringWriter ABC for Sending Monitoring Information; TVirtualMutex Virtual mutex lock class; TVirtualObject ; TVirtualPS Abstract interface to a PostScript driver; TVirtualPacketizer Generate work packets for parallel processing; TVirtualPad Abstract base class for Pads and Canvases; TVirtualPadEditor Abstract interface for graphics pad editor; TVirtualPadPainter Painter interface for pad.,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:139164,Integrability,Interface,Interface,139164,ution; TUnuranEmpDist Wrapper class for empirical distribution ; TUnuranMultiContDist Wrapper class for multi dimensional continuous distribution; TUnuranSampler ; TUploadDataSetDlg New query dialog; TUri Represents an URI; TUrl Represents an URL; TVector2 A 2D physics vector; TVector3 A 3D physics vector; TVectorT<double> Template of Vector class; TVectorT<float> Template of Vector class; TView 3-D View abstract interface for 3-D views; TView3D 3-D View; TViewer3DPad A 3D Viewer painter for TPads; TViewerX3D Interface to the X3D viewer; TVirtualArray ; TVirtualAuth client auth interface; TVirtualBranchBrowsable Base class for helper objects used for browsing; TVirtualCollectionProxy ; TVirtualDragManager drag and drop manager; TVirtualFFT abstract interface for FFT calculations; TVirtualFitter Abstract interface for fitting; TVirtualGLManip Interface for GL manipulator; TVirtualGLPainter Interface for OpenGL painter; TVirtualGeoPainter Abstract interface for geometry painters; TVirtualGeoTrack virtual geometry tracks; TVirtualGraphPainter Abstract interface for histogram painters; TVirtualHistPainter Abstract interface for histogram painters; TVirtualIndex Abstract interface for Tree Index; TVirtualIsAProxy ; TVirtualMC Interface to Monte Carlo; TVirtualMCApplication Interface to MonteCarlo application; TVirtualMCDecayer Particle Decayer Base Class; TVirtualMCGeometry Interface to Monte Carlo geometry construction; TVirtualMCStack Interface to a particles stack; TVirtualMagField Abstract base field class; TVirtualMonitoringReader ABC for Reading Monitoring Information; TVirtualMonitoringWriter ABC for Sending Monitoring Information; TVirtualMutex Virtual mutex lock class; TVirtualObject ; TVirtualPS Abstract interface to a PostScript driver; TVirtualPacketizer Generate work packets for parallel processing; TVirtualPad Abstract base class for Pads and Canvases; TVirtualPadEditor Abstract interface for graphics pad editor; TVirtualPadPainter Painter interface for pad.,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:139267,Integrability,Interface,Interface,139267,ution; TUnuranEmpDist Wrapper class for empirical distribution ; TUnuranMultiContDist Wrapper class for multi dimensional continuous distribution; TUnuranSampler ; TUploadDataSetDlg New query dialog; TUri Represents an URI; TUrl Represents an URL; TVector2 A 2D physics vector; TVector3 A 3D physics vector; TVectorT<double> Template of Vector class; TVectorT<float> Template of Vector class; TView 3-D View abstract interface for 3-D views; TView3D 3-D View; TViewer3DPad A 3D Viewer painter for TPads; TViewerX3D Interface to the X3D viewer; TVirtualArray ; TVirtualAuth client auth interface; TVirtualBranchBrowsable Base class for helper objects used for browsing; TVirtualCollectionProxy ; TVirtualDragManager drag and drop manager; TVirtualFFT abstract interface for FFT calculations; TVirtualFitter Abstract interface for fitting; TVirtualGLManip Interface for GL manipulator; TVirtualGLPainter Interface for OpenGL painter; TVirtualGeoPainter Abstract interface for geometry painters; TVirtualGeoTrack virtual geometry tracks; TVirtualGraphPainter Abstract interface for histogram painters; TVirtualHistPainter Abstract interface for histogram painters; TVirtualIndex Abstract interface for Tree Index; TVirtualIsAProxy ; TVirtualMC Interface to Monte Carlo; TVirtualMCApplication Interface to MonteCarlo application; TVirtualMCDecayer Particle Decayer Base Class; TVirtualMCGeometry Interface to Monte Carlo geometry construction; TVirtualMCStack Interface to a particles stack; TVirtualMagField Abstract base field class; TVirtualMonitoringReader ABC for Reading Monitoring Information; TVirtualMonitoringWriter ABC for Sending Monitoring Information; TVirtualMutex Virtual mutex lock class; TVirtualObject ; TVirtualPS Abstract interface to a PostScript driver; TVirtualPacketizer Generate work packets for parallel processing; TVirtualPad Abstract base class for Pads and Canvases; TVirtualPadEditor Abstract interface for graphics pad editor; TVirtualPadPainter Painter interface for pad.,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:139331,Integrability,Interface,Interface,139331,ution; TUnuranEmpDist Wrapper class for empirical distribution ; TUnuranMultiContDist Wrapper class for multi dimensional continuous distribution; TUnuranSampler ; TUploadDataSetDlg New query dialog; TUri Represents an URI; TUrl Represents an URL; TVector2 A 2D physics vector; TVector3 A 3D physics vector; TVectorT<double> Template of Vector class; TVectorT<float> Template of Vector class; TView 3-D View abstract interface for 3-D views; TView3D 3-D View; TViewer3DPad A 3D Viewer painter for TPads; TViewerX3D Interface to the X3D viewer; TVirtualArray ; TVirtualAuth client auth interface; TVirtualBranchBrowsable Base class for helper objects used for browsing; TVirtualCollectionProxy ; TVirtualDragManager drag and drop manager; TVirtualFFT abstract interface for FFT calculations; TVirtualFitter Abstract interface for fitting; TVirtualGLManip Interface for GL manipulator; TVirtualGLPainter Interface for OpenGL painter; TVirtualGeoPainter Abstract interface for geometry painters; TVirtualGeoTrack virtual geometry tracks; TVirtualGraphPainter Abstract interface for histogram painters; TVirtualHistPainter Abstract interface for histogram painters; TVirtualIndex Abstract interface for Tree Index; TVirtualIsAProxy ; TVirtualMC Interface to Monte Carlo; TVirtualMCApplication Interface to MonteCarlo application; TVirtualMCDecayer Particle Decayer Base Class; TVirtualMCGeometry Interface to Monte Carlo geometry construction; TVirtualMCStack Interface to a particles stack; TVirtualMagField Abstract base field class; TVirtualMonitoringReader ABC for Reading Monitoring Information; TVirtualMonitoringWriter ABC for Sending Monitoring Information; TVirtualMutex Virtual mutex lock class; TVirtualObject ; TVirtualPS Abstract interface to a PostScript driver; TVirtualPacketizer Generate work packets for parallel processing; TVirtualPad Abstract base class for Pads and Canvases; TVirtualPadEditor Abstract interface for graphics pad editor; TVirtualPadPainter Painter interface for pad.,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:139614,Integrability,interface,interface,139614,ution; TUnuranEmpDist Wrapper class for empirical distribution ; TUnuranMultiContDist Wrapper class for multi dimensional continuous distribution; TUnuranSampler ; TUploadDataSetDlg New query dialog; TUri Represents an URI; TUrl Represents an URL; TVector2 A 2D physics vector; TVector3 A 3D physics vector; TVectorT<double> Template of Vector class; TVectorT<float> Template of Vector class; TView 3-D View abstract interface for 3-D views; TView3D 3-D View; TViewer3DPad A 3D Viewer painter for TPads; TViewerX3D Interface to the X3D viewer; TVirtualArray ; TVirtualAuth client auth interface; TVirtualBranchBrowsable Base class for helper objects used for browsing; TVirtualCollectionProxy ; TVirtualDragManager drag and drop manager; TVirtualFFT abstract interface for FFT calculations; TVirtualFitter Abstract interface for fitting; TVirtualGLManip Interface for GL manipulator; TVirtualGLPainter Interface for OpenGL painter; TVirtualGeoPainter Abstract interface for geometry painters; TVirtualGeoTrack virtual geometry tracks; TVirtualGraphPainter Abstract interface for histogram painters; TVirtualHistPainter Abstract interface for histogram painters; TVirtualIndex Abstract interface for Tree Index; TVirtualIsAProxy ; TVirtualMC Interface to Monte Carlo; TVirtualMCApplication Interface to MonteCarlo application; TVirtualMCDecayer Particle Decayer Base Class; TVirtualMCGeometry Interface to Monte Carlo geometry construction; TVirtualMCStack Interface to a particles stack; TVirtualMagField Abstract base field class; TVirtualMonitoringReader ABC for Reading Monitoring Information; TVirtualMonitoringWriter ABC for Sending Monitoring Information; TVirtualMutex Virtual mutex lock class; TVirtualObject ; TVirtualPS Abstract interface to a PostScript driver; TVirtualPacketizer Generate work packets for parallel processing; TVirtualPad Abstract base class for Pads and Canvases; TVirtualPadEditor Abstract interface for graphics pad editor; TVirtualPadPainter Painter interface for pad.,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:139796,Integrability,interface,interface,139796,ution; TUnuranEmpDist Wrapper class for empirical distribution ; TUnuranMultiContDist Wrapper class for multi dimensional continuous distribution; TUnuranSampler ; TUploadDataSetDlg New query dialog; TUri Represents an URI; TUrl Represents an URL; TVector2 A 2D physics vector; TVector3 A 3D physics vector; TVectorT<double> Template of Vector class; TVectorT<float> Template of Vector class; TView 3-D View abstract interface for 3-D views; TView3D 3-D View; TViewer3DPad A 3D Viewer painter for TPads; TViewerX3D Interface to the X3D viewer; TVirtualArray ; TVirtualAuth client auth interface; TVirtualBranchBrowsable Base class for helper objects used for browsing; TVirtualCollectionProxy ; TVirtualDragManager drag and drop manager; TVirtualFFT abstract interface for FFT calculations; TVirtualFitter Abstract interface for fitting; TVirtualGLManip Interface for GL manipulator; TVirtualGLPainter Interface for OpenGL painter; TVirtualGeoPainter Abstract interface for geometry painters; TVirtualGeoTrack virtual geometry tracks; TVirtualGraphPainter Abstract interface for histogram painters; TVirtualHistPainter Abstract interface for histogram painters; TVirtualIndex Abstract interface for Tree Index; TVirtualIsAProxy ; TVirtualMC Interface to Monte Carlo; TVirtualMCApplication Interface to MonteCarlo application; TVirtualMCDecayer Particle Decayer Base Class; TVirtualMCGeometry Interface to Monte Carlo geometry construction; TVirtualMCStack Interface to a particles stack; TVirtualMagField Abstract base field class; TVirtualMonitoringReader ABC for Reading Monitoring Information; TVirtualMonitoringWriter ABC for Sending Monitoring Information; TVirtualMutex Virtual mutex lock class; TVirtualObject ; TVirtualPS Abstract interface to a PostScript driver; TVirtualPacketizer Generate work packets for parallel processing; TVirtualPad Abstract base class for Pads and Canvases; TVirtualPadEditor Abstract interface for graphics pad editor; TVirtualPadPainter Painter interface for pad.,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:139858,Integrability,interface,interface,139858,ution; TUnuranEmpDist Wrapper class for empirical distribution ; TUnuranMultiContDist Wrapper class for multi dimensional continuous distribution; TUnuranSampler ; TUploadDataSetDlg New query dialog; TUri Represents an URI; TUrl Represents an URL; TVector2 A 2D physics vector; TVector3 A 3D physics vector; TVectorT<double> Template of Vector class; TVectorT<float> Template of Vector class; TView 3-D View abstract interface for 3-D views; TView3D 3-D View; TViewer3DPad A 3D Viewer painter for TPads; TViewerX3D Interface to the X3D viewer; TVirtualArray ; TVirtualAuth client auth interface; TVirtualBranchBrowsable Base class for helper objects used for browsing; TVirtualCollectionProxy ; TVirtualDragManager drag and drop manager; TVirtualFFT abstract interface for FFT calculations; TVirtualFitter Abstract interface for fitting; TVirtualGLManip Interface for GL manipulator; TVirtualGLPainter Interface for OpenGL painter; TVirtualGeoPainter Abstract interface for geometry painters; TVirtualGeoTrack virtual geometry tracks; TVirtualGraphPainter Abstract interface for histogram painters; TVirtualHistPainter Abstract interface for histogram painters; TVirtualIndex Abstract interface for Tree Index; TVirtualIsAProxy ; TVirtualMC Interface to Monte Carlo; TVirtualMCApplication Interface to MonteCarlo application; TVirtualMCDecayer Particle Decayer Base Class; TVirtualMCGeometry Interface to Monte Carlo geometry construction; TVirtualMCStack Interface to a particles stack; TVirtualMagField Abstract base field class; TVirtualMonitoringReader ABC for Reading Monitoring Information; TVirtualMonitoringWriter ABC for Sending Monitoring Information; TVirtualMutex Virtual mutex lock class; TVirtualObject ; TVirtualPS Abstract interface to a PostScript driver; TVirtualPacketizer Generate work packets for parallel processing; TVirtualPad Abstract base class for Pads and Canvases; TVirtualPadEditor Abstract interface for graphics pad editor; TVirtualPadPainter Painter interface for pad.,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:140006,Integrability,Interface,Interface,140006,"nding Monitoring Information; TVirtualMutex Virtual mutex lock class; TVirtualObject ; TVirtualPS Abstract interface to a PostScript driver; TVirtualPacketizer Generate work packets for parallel processing; TVirtualPad Abstract base class for Pads and Canvases; TVirtualPadEditor Abstract interface for graphics pad editor; TVirtualPadPainter Painter interface for pad.; TVirtualPerfStats ABC for collecting PROOF statistics; TVirtualProofPlayer Abstract PROOF player; TVirtualStreamerInfo Abstract Interface describing Streamer information for one class; TVirtualTableInterface ; TVirtualTreePlayer Abstract interface for Tree players; TVirtualViewer3D Abstract interface to 3D viewers; TVirtualX ABC defining a generic interface to graphics system; TVolume Description of parameters to position a 3-D geometry object; TVolumePosition Description of parameters to position a 3-D geometry object; TVolumeView Special kind of TDataSet; TVolumeViewIter Volume view iterator; TWbox A window box (box with 3-D effects); TWebFile A ROOT file that reads via a http server; TWebSystem Directory handler for HTTP (TWebFiles); TX11GLManager X11-specific version of TGLManager; TXHandler Template class for handling of async events; TXMLAttr XML attribute pair; TXMLDocument XML document created by the DOM parser; TXMLEngine ROOT XML I/O parser, user by TXMLFile to read/write xml files; TXMLFile ROOT file in XML format; TXMLNode XML node under DOM tree; TXMLParser XML SAX parser; TXMLPlayer Generation of external xml streamers; TXMLSetup settings to be stored in XML files; TXNetFile TFile implementation to deal with new xrootd server.; TXNetFileStager Interface to a 'XRD' staging; TXNetSystem System management class for xrootd servers; TXProofMgr XrdProofd PROOF manager interface; TXProofServ XRD PROOF Server Application Interface; TXSlave Xrd PROOF slave server; TXSocket A high level connection class for PROOF; TXSocketHandler Input handler class for xproofd sockets; TXTRU TXTRU shape; TXUnixSoc",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:140116,Integrability,interface,interface,140116,"nding Monitoring Information; TVirtualMutex Virtual mutex lock class; TVirtualObject ; TVirtualPS Abstract interface to a PostScript driver; TVirtualPacketizer Generate work packets for parallel processing; TVirtualPad Abstract base class for Pads and Canvases; TVirtualPadEditor Abstract interface for graphics pad editor; TVirtualPadPainter Painter interface for pad.; TVirtualPerfStats ABC for collecting PROOF statistics; TVirtualProofPlayer Abstract PROOF player; TVirtualStreamerInfo Abstract Interface describing Streamer information for one class; TVirtualTableInterface ; TVirtualTreePlayer Abstract interface for Tree players; TVirtualViewer3D Abstract interface to 3D viewers; TVirtualX ABC defining a generic interface to graphics system; TVolume Description of parameters to position a 3-D geometry object; TVolumePosition Description of parameters to position a 3-D geometry object; TVolumeView Special kind of TDataSet; TVolumeViewIter Volume view iterator; TWbox A window box (box with 3-D effects); TWebFile A ROOT file that reads via a http server; TWebSystem Directory handler for HTTP (TWebFiles); TX11GLManager X11-specific version of TGLManager; TXHandler Template class for handling of async events; TXMLAttr XML attribute pair; TXMLDocument XML document created by the DOM parser; TXMLEngine ROOT XML I/O parser, user by TXMLFile to read/write xml files; TXMLFile ROOT file in XML format; TXMLNode XML node under DOM tree; TXMLParser XML SAX parser; TXMLPlayer Generation of external xml streamers; TXMLSetup settings to be stored in XML files; TXNetFile TFile implementation to deal with new xrootd server.; TXNetFileStager Interface to a 'XRD' staging; TXNetSystem System management class for xrootd servers; TXProofMgr XrdProofd PROOF manager interface; TXProofServ XRD PROOF Server Application Interface; TXSlave Xrd PROOF slave server; TXSocket A high level connection class for PROOF; TXSocketHandler Input handler class for xproofd sockets; TXTRU TXTRU shape; TXUnixSoc",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:140170,Integrability,interface,interface,140170,"nding Monitoring Information; TVirtualMutex Virtual mutex lock class; TVirtualObject ; TVirtualPS Abstract interface to a PostScript driver; TVirtualPacketizer Generate work packets for parallel processing; TVirtualPad Abstract base class for Pads and Canvases; TVirtualPadEditor Abstract interface for graphics pad editor; TVirtualPadPainter Painter interface for pad.; TVirtualPerfStats ABC for collecting PROOF statistics; TVirtualProofPlayer Abstract PROOF player; TVirtualStreamerInfo Abstract Interface describing Streamer information for one class; TVirtualTableInterface ; TVirtualTreePlayer Abstract interface for Tree players; TVirtualViewer3D Abstract interface to 3D viewers; TVirtualX ABC defining a generic interface to graphics system; TVolume Description of parameters to position a 3-D geometry object; TVolumePosition Description of parameters to position a 3-D geometry object; TVolumeView Special kind of TDataSet; TVolumeViewIter Volume view iterator; TWbox A window box (box with 3-D effects); TWebFile A ROOT file that reads via a http server; TWebSystem Directory handler for HTTP (TWebFiles); TX11GLManager X11-specific version of TGLManager; TXHandler Template class for handling of async events; TXMLAttr XML attribute pair; TXMLDocument XML document created by the DOM parser; TXMLEngine ROOT XML I/O parser, user by TXMLFile to read/write xml files; TXMLFile ROOT file in XML format; TXMLNode XML node under DOM tree; TXMLParser XML SAX parser; TXMLPlayer Generation of external xml streamers; TXMLSetup settings to be stored in XML files; TXNetFile TFile implementation to deal with new xrootd server.; TXNetFileStager Interface to a 'XRD' staging; TXNetSystem System management class for xrootd servers; TXProofMgr XrdProofd PROOF manager interface; TXProofServ XRD PROOF Server Application Interface; TXSlave Xrd PROOF slave server; TXSocket A high level connection class for PROOF; TXSocketHandler Input handler class for xproofd sockets; TXTRU TXTRU shape; TXUnixSoc",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:140228,Integrability,interface,interface,140228,"nding Monitoring Information; TVirtualMutex Virtual mutex lock class; TVirtualObject ; TVirtualPS Abstract interface to a PostScript driver; TVirtualPacketizer Generate work packets for parallel processing; TVirtualPad Abstract base class for Pads and Canvases; TVirtualPadEditor Abstract interface for graphics pad editor; TVirtualPadPainter Painter interface for pad.; TVirtualPerfStats ABC for collecting PROOF statistics; TVirtualProofPlayer Abstract PROOF player; TVirtualStreamerInfo Abstract Interface describing Streamer information for one class; TVirtualTableInterface ; TVirtualTreePlayer Abstract interface for Tree players; TVirtualViewer3D Abstract interface to 3D viewers; TVirtualX ABC defining a generic interface to graphics system; TVolume Description of parameters to position a 3-D geometry object; TVolumePosition Description of parameters to position a 3-D geometry object; TVolumeView Special kind of TDataSet; TVolumeViewIter Volume view iterator; TWbox A window box (box with 3-D effects); TWebFile A ROOT file that reads via a http server; TWebSystem Directory handler for HTTP (TWebFiles); TX11GLManager X11-specific version of TGLManager; TXHandler Template class for handling of async events; TXMLAttr XML attribute pair; TXMLDocument XML document created by the DOM parser; TXMLEngine ROOT XML I/O parser, user by TXMLFile to read/write xml files; TXMLFile ROOT file in XML format; TXMLNode XML node under DOM tree; TXMLParser XML SAX parser; TXMLPlayer Generation of external xml streamers; TXMLSetup settings to be stored in XML files; TXNetFile TFile implementation to deal with new xrootd server.; TXNetFileStager Interface to a 'XRD' staging; TXNetSystem System management class for xrootd servers; TXProofMgr XrdProofd PROOF manager interface; TXProofServ XRD PROOF Server Application Interface; TXSlave Xrd PROOF slave server; TXSocket A high level connection class for PROOF; TXSocketHandler Input handler class for xproofd sockets; TXTRU TXTRU shape; TXUnixSoc",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:141156,Integrability,Interface,Interface,141156,"stract Interface describing Streamer information for one class; TVirtualTableInterface ; TVirtualTreePlayer Abstract interface for Tree players; TVirtualViewer3D Abstract interface to 3D viewers; TVirtualX ABC defining a generic interface to graphics system; TVolume Description of parameters to position a 3-D geometry object; TVolumePosition Description of parameters to position a 3-D geometry object; TVolumeView Special kind of TDataSet; TVolumeViewIter Volume view iterator; TWbox A window box (box with 3-D effects); TWebFile A ROOT file that reads via a http server; TWebSystem Directory handler for HTTP (TWebFiles); TX11GLManager X11-specific version of TGLManager; TXHandler Template class for handling of async events; TXMLAttr XML attribute pair; TXMLDocument XML document created by the DOM parser; TXMLEngine ROOT XML I/O parser, user by TXMLFile to read/write xml files; TXMLFile ROOT file in XML format; TXMLNode XML node under DOM tree; TXMLParser XML SAX parser; TXMLPlayer Generation of external xml streamers; TXMLSetup settings to be stored in XML files; TXNetFile TFile implementation to deal with new xrootd server.; TXNetFileStager Interface to a 'XRD' staging; TXNetSystem System management class for xrootd servers; TXProofMgr XrdProofd PROOF manager interface; TXProofServ XRD PROOF Server Application Interface; TXSlave Xrd PROOF slave server; TXSocket A high level connection class for PROOF; TXSocketHandler Input handler class for xproofd sockets; TXTRU TXTRU shape; TXUnixSocket Connection class for Xrd PROOF using UNIX sockets; TZIPFile A ZIP archive file; TZIPMember A ZIP archive member file; ToolBarData_t ; UserGroup_t ; WindowAttributes_t ; memstat ; memstat::TMemStatMng a manager of memstat sessions.; tableDescriptor_st ; timespec . » Last changed: 2015-09-08 16:58 » Last generated: 2015-09-08 16:58; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:141277,Integrability,interface,interface,141277,"stract Interface describing Streamer information for one class; TVirtualTableInterface ; TVirtualTreePlayer Abstract interface for Tree players; TVirtualViewer3D Abstract interface to 3D viewers; TVirtualX ABC defining a generic interface to graphics system; TVolume Description of parameters to position a 3-D geometry object; TVolumePosition Description of parameters to position a 3-D geometry object; TVolumeView Special kind of TDataSet; TVolumeViewIter Volume view iterator; TWbox A window box (box with 3-D effects); TWebFile A ROOT file that reads via a http server; TWebSystem Directory handler for HTTP (TWebFiles); TX11GLManager X11-specific version of TGLManager; TXHandler Template class for handling of async events; TXMLAttr XML attribute pair; TXMLDocument XML document created by the DOM parser; TXMLEngine ROOT XML I/O parser, user by TXMLFile to read/write xml files; TXMLFile ROOT file in XML format; TXMLNode XML node under DOM tree; TXMLParser XML SAX parser; TXMLPlayer Generation of external xml streamers; TXMLSetup settings to be stored in XML files; TXNetFile TFile implementation to deal with new xrootd server.; TXNetFileStager Interface to a 'XRD' staging; TXNetSystem System management class for xrootd servers; TXProofMgr XrdProofd PROOF manager interface; TXProofServ XRD PROOF Server Application Interface; TXSlave Xrd PROOF slave server; TXSocket A high level connection class for PROOF; TXSocketHandler Input handler class for xproofd sockets; TXTRU TXTRU shape; TXUnixSocket Connection class for Xrd PROOF using UNIX sockets; TZIPFile A ZIP archive file; TZIPMember A ZIP archive member file; ToolBarData_t ; UserGroup_t ; WindowAttributes_t ; memstat ; memstat::TMemStatMng a manager of memstat sessions.; tableDescriptor_st ; timespec . » Last changed: 2015-09-08 16:58 » Last generated: 2015-09-08 16:58; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:141329,Integrability,Interface,Interface,141329,"stract Interface describing Streamer information for one class; TVirtualTableInterface ; TVirtualTreePlayer Abstract interface for Tree players; TVirtualViewer3D Abstract interface to 3D viewers; TVirtualX ABC defining a generic interface to graphics system; TVolume Description of parameters to position a 3-D geometry object; TVolumePosition Description of parameters to position a 3-D geometry object; TVolumeView Special kind of TDataSet; TVolumeViewIter Volume view iterator; TWbox A window box (box with 3-D effects); TWebFile A ROOT file that reads via a http server; TWebSystem Directory handler for HTTP (TWebFiles); TX11GLManager X11-specific version of TGLManager; TXHandler Template class for handling of async events; TXMLAttr XML attribute pair; TXMLDocument XML document created by the DOM parser; TXMLEngine ROOT XML I/O parser, user by TXMLFile to read/write xml files; TXMLFile ROOT file in XML format; TXMLNode XML node under DOM tree; TXMLParser XML SAX parser; TXMLPlayer Generation of external xml streamers; TXMLSetup settings to be stored in XML files; TXNetFile TFile implementation to deal with new xrootd server.; TXNetFileStager Interface to a 'XRD' staging; TXNetSystem System management class for xrootd servers; TXProofMgr XrdProofd PROOF manager interface; TXProofServ XRD PROOF Server Application Interface; TXSlave Xrd PROOF slave server; TXSocket A high level connection class for PROOF; TXSocketHandler Input handler class for xproofd sockets; TXTRU TXTRU shape; TXUnixSocket Connection class for Xrd PROOF using UNIX sockets; TZIPFile A ZIP archive file; TZIPMember A ZIP archive member file; ToolBarData_t ; UserGroup_t ; WindowAttributes_t ; memstat ; memstat::TMemStatMng a manager of memstat sessions.; tableDescriptor_st ; timespec . » Last changed: 2015-09-08 16:58 » Last generated: 2015-09-08 16:58; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:1767,Modifiability,Adapt,AdaptiveIntegratorMultiDim,1767,; PyROOT ; PyROOT::TPyException C++ exception for throwing python exceptions; PyROOT::TPyROOTApplication Setup interactive application; ROOT ; ROOT::Fit ; ROOT::Fit::BinData ; ROOT::Fit::Chi2FCN<ROOT::Math::IBaseFunctionMultiDim> ; ROOT::Fit::Chi2FCN<ROOT::Math::IGradientFunctionMultiDim> ; ROOT::Fit::DataOptions ; ROOT::Fit::DataRange ; ROOT::Fit::FitConfig ; ROOT::Fit::FitData ; ROOT::Fit::FitResult ; ROOT::Fit::Fitter ; ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim> ; ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim> ; ROOT::Fit::ParameterSettings ; ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim> ; ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim> ; ROOT::Fit::SparseData ; ROOT::Fit::UnBinData ; ROOT::Math ; ROOT::Math::AdaptiveIntegratorMultiDim ; ROOT::Math::AxisAngle ; ROOT::Math::BaseIntegratorOptions ; ROOT::Math::BasicFitMethodFunction<ROOT::Math::IBaseFunctionMultiDim> ; ROOT::Math::BasicFitMethodFunction<ROOT::Math::IGradientFunctionMultiDim>,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:21123,Modifiability,Variab,VariableMetricMinimizer,21123,":Math::VirtualIntegratorOneDim ; ROOT::Math::WrappedMultiTF1 ; ROOT::Math::WrappedTF1 ; ROOT::MathMore ; ROOT::Minuit2::CombinedMinimizer ; ROOT::Minuit2::FCNBase ; ROOT::Minuit2::FCNGradientBase ; ROOT::Minuit2::FumiliFCNBase ; ROOT::Minuit2::FumiliMinimizer ; ROOT::Minuit2::FunctionMinimizer ; ROOT::Minuit2::FunctionMinimum ; ROOT::Minuit2::GenericFunction ; ROOT::Minuit2::MinosError ; ROOT::Minuit2::Minuit2Minimizer ; ROOT::Minuit2::MinuitParameter ; ROOT::Minuit2::MnApplication ; ROOT::Minuit2::MnContours ; ROOT::Minuit2::MnFumiliMinimize ; ROOT::Minuit2::MnHesse ; ROOT::Minuit2::MnMachinePrecision ; ROOT::Minuit2::MnMigrad ; ROOT::Minuit2::MnMinimize ; ROOT::Minuit2::MnMinos ; ROOT::Minuit2::MnPlot ; ROOT::Minuit2::MnScan ; ROOT::Minuit2::MnSimplex ; ROOT::Minuit2::MnStrategy ; ROOT::Minuit2::MnUserParameterState ; ROOT::Minuit2::MnUserParameters ; ROOT::Minuit2::ModularFunctionMinimizer ; ROOT::Minuit2::ScanMinimizer ; ROOT::Minuit2::SimplexMinimizer ; ROOT::Minuit2::VariableMetricMinimizer ; ROOT::TArrayProxy<ROOT::TArrayType<Long64_t,0> > ; ROOT::TArrayProxy<ROOT::TArrayType<ULong64_t,0> > ; ROOT::TArrayProxy<ROOT::TArrayType<bool,0> > ; ROOT::TArrayProxy<ROOT::TArrayType<char,0> > ; ROOT::TArrayProxy<ROOT::TArrayType<double,0> > ; ROOT::TArrayProxy<ROOT::TArrayType<float,0> > ; ROOT::TArrayProxy<ROOT::TArrayType<int,0> > ; ROOT::TArrayProxy<ROOT::TArrayType<long,0> > ; ROOT::TArrayProxy<ROOT::TArrayType<short,0> > ; ROOT::TArrayProxy<ROOT::TArrayType<unsigned char,0> > ; ROOT::TArrayProxy<ROOT::TArrayType<unsigned int,0> > ; ROOT::TArrayProxy<ROOT::TArrayType<unsigned long,0> > ; ROOT::TArrayProxy<ROOT::TArrayType<unsigned short,0> > ; ROOT::TBranchProxy ; ROOT::TBranchProxyClassDescriptor Class to cache the information we gathered about the branch and its content; ROOT::TBranchProxyDescriptor Describe the proxy for a branch; ROOT::TBranchProxyDirector ; ROOT::TClaArrayProxy<ROOT::TArrayType<Long64_t,0> > ; ROOT::TClaArrayProxy<ROOT::TArrayType<ULong64_t,0>",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:24755,Modifiability,Variab,VariableBuilder,24755,<unsigned int> ; ROOT::TClaImpProxy<unsigned long> ; ROOT::TClaImpProxy<unsigned short> ; ROOT::TFriendProxy ; ROOT::TFriendProxyDescriptor Describe a branch from a TTreeFriend.; ROOT::THnBaseBrowsable Browser-helper for THnBase; ROOT::TImpProxy<Long64_t> ; ROOT::TImpProxy<ULong64_t> ; ROOT::TImpProxy<bool> ; ROOT::TImpProxy<char> ; ROOT::TImpProxy<double> ; ROOT::TImpProxy<float> ; ROOT::TImpProxy<int> ; ROOT::TImpProxy<long> ; ROOT::TImpProxy<short> ; ROOT::TImpProxy<unsigned char> ; ROOT::TImpProxy<unsigned int> ; ROOT::TImpProxy<unsigned long> ; ROOT::TImpProxy<unsigned short> ; ROOT::TSchemaMatch ; ROOT::TSchemaRule ; ROOT::TSchemaRule::TSources ; ROOT::TSchemaRuleSet ; Rectangle_t ; RedirectHandle_t ; Reflex ; Reflex::Any ; Reflex::Base ; Reflex::ClassBuilder ; Reflex::ClassBuilderImpl ; Reflex::CollFuncTable ; Reflex::Dummy ; Reflex::EnumBuilder ; Reflex::FunctionBuilder ; Reflex::FunctionBuilderImpl ; Reflex::ICallback ; Reflex::Instance ; Reflex::Member ; Reflex::MemberTemplate ; Reflex::NamespaceBuilder ; Reflex::NewDelFunctions ; Reflex::NullType ; Reflex::Object ; Reflex::PrivateClass ; Reflex::PrivateEnum ; Reflex::PrivateStruct ; Reflex::PrivateUnion ; Reflex::ProtectedClass ; Reflex::ProtectedEnum ; Reflex::ProtectedStruct ; Reflex::ProtectedUnion ; Reflex::RuntimeError ; Reflex::Scope ; Reflex::Selection::AUTOSELECT ; Reflex::Selection::NODEFAULT ; Reflex::Selection::NO_SELF_AUTOSELECT ; Reflex::Selection::TRANSIENT ; Reflex::Tools ; Reflex::Type ; Reflex::TypeTemplate ; Reflex::TypedefBuilderImpl ; Reflex::UnionBuilderImpl ; Reflex::UnknownType ; Reflex::UnnamedClass ; Reflex::UnnamedEnum ; Reflex::UnnamedNamespace ; Reflex::UnnamedStruct ; Reflex::UnnamedUnion ; Reflex::VariableBuilder ; Reflex::VariableBuilderImpl ; Rgl ; Roo1DMomentMorphFunction Your description goes here...; Roo1DTable 1-dimensional table; Roo2DKeysPdf Two-dimensional kernel estimation p.d.f.; Roo2DMomentMorphFunction ; RooAICRegistry Registry for analytical integration codes; R,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:24781,Modifiability,Variab,VariableBuilderImpl,24781,<unsigned int> ; ROOT::TClaImpProxy<unsigned long> ; ROOT::TClaImpProxy<unsigned short> ; ROOT::TFriendProxy ; ROOT::TFriendProxyDescriptor Describe a branch from a TTreeFriend.; ROOT::THnBaseBrowsable Browser-helper for THnBase; ROOT::TImpProxy<Long64_t> ; ROOT::TImpProxy<ULong64_t> ; ROOT::TImpProxy<bool> ; ROOT::TImpProxy<char> ; ROOT::TImpProxy<double> ; ROOT::TImpProxy<float> ; ROOT::TImpProxy<int> ; ROOT::TImpProxy<long> ; ROOT::TImpProxy<short> ; ROOT::TImpProxy<unsigned char> ; ROOT::TImpProxy<unsigned int> ; ROOT::TImpProxy<unsigned long> ; ROOT::TImpProxy<unsigned short> ; ROOT::TSchemaMatch ; ROOT::TSchemaRule ; ROOT::TSchemaRule::TSources ; ROOT::TSchemaRuleSet ; Rectangle_t ; RedirectHandle_t ; Reflex ; Reflex::Any ; Reflex::Base ; Reflex::ClassBuilder ; Reflex::ClassBuilderImpl ; Reflex::CollFuncTable ; Reflex::Dummy ; Reflex::EnumBuilder ; Reflex::FunctionBuilder ; Reflex::FunctionBuilderImpl ; Reflex::ICallback ; Reflex::Instance ; Reflex::Member ; Reflex::MemberTemplate ; Reflex::NamespaceBuilder ; Reflex::NewDelFunctions ; Reflex::NullType ; Reflex::Object ; Reflex::PrivateClass ; Reflex::PrivateEnum ; Reflex::PrivateStruct ; Reflex::PrivateUnion ; Reflex::ProtectedClass ; Reflex::ProtectedEnum ; Reflex::ProtectedStruct ; Reflex::ProtectedUnion ; Reflex::RuntimeError ; Reflex::Scope ; Reflex::Selection::AUTOSELECT ; Reflex::Selection::NODEFAULT ; Reflex::Selection::NO_SELF_AUTOSELECT ; Reflex::Selection::TRANSIENT ; Reflex::Tools ; Reflex::Type ; Reflex::TypeTemplate ; Reflex::TypedefBuilderImpl ; Reflex::UnionBuilderImpl ; Reflex::UnknownType ; Reflex::UnnamedClass ; Reflex::UnnamedEnum ; Reflex::UnnamedNamespace ; Reflex::UnnamedStruct ; Reflex::UnnamedUnion ; Reflex::VariableBuilder ; Reflex::VariableBuilderImpl ; Rgl ; Roo1DMomentMorphFunction Your description goes here...; Roo1DTable 1-dimensional table; Roo2DKeysPdf Two-dimensional kernel estimation p.d.f.; Roo2DMomentMorphFunction ; RooAICRegistry Registry for analytical integration codes; R,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:25108,Modifiability,variab,variable,25108,x::PrivateClass ; Reflex::PrivateEnum ; Reflex::PrivateStruct ; Reflex::PrivateUnion ; Reflex::ProtectedClass ; Reflex::ProtectedEnum ; Reflex::ProtectedStruct ; Reflex::ProtectedUnion ; Reflex::RuntimeError ; Reflex::Scope ; Reflex::Selection::AUTOSELECT ; Reflex::Selection::NODEFAULT ; Reflex::Selection::NO_SELF_AUTOSELECT ; Reflex::Selection::TRANSIENT ; Reflex::Tools ; Reflex::Type ; Reflex::TypeTemplate ; Reflex::TypedefBuilderImpl ; Reflex::UnionBuilderImpl ; Reflex::UnknownType ; Reflex::UnnamedClass ; Reflex::UnnamedEnum ; Reflex::UnnamedNamespace ; Reflex::UnnamedStruct ; Reflex::UnnamedUnion ; Reflex::VariableBuilder ; Reflex::VariableBuilderImpl ; Rgl ; Roo1DMomentMorphFunction Your description goes here...; Roo1DTable 1-dimensional table; Roo2DKeysPdf Two-dimensional kernel estimation p.d.f.; Roo2DMomentMorphFunction ; RooAICRegistry Registry for analytical integration codes; RooAbsAnaConvPdf Abstract Composite Convoluted PDF; RooAbsArg Abstract variable; RooAbsBinning Abstract base class for binning specification; RooAbsCache Base class for cache managers ; RooAbsCacheElement Base class for cache elements; RooAbsCachedPdf Abstract base class for cached p.d.f.s; RooAbsCachedReal Abstract base class for cached p.d.f.s; RooAbsCategory Abstract discrete variable; RooAbsCategoryLValue Abstract modifiable index variable ; RooAbsCollection Collection of RooAbsArg objects; RooAbsData Abstract data collection; RooAbsDataStore Abstract Data Storage class; RooAbsFunc Abstract real-valued function interface; RooAbsGenContext Abstract context for generating a dataset from a PDF; RooAbsHiddenReal Abstract hidden real-valued variable; RooAbsIntegrator Abstract interface for real-valued function integrators; RooAbsLValue Abstract variable; RooAbsMCStudyModule Monte Carlo study manager add-on module; RooAbsMoment Abstract representation of moment in a RooAbsReal in a given RooRealVar; RooAbsNumGenerator Abstract base class for numeric event generator algorithms; RooAbsO,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:25419,Modifiability,variab,variable,25419,RooAICRegistry Registry for analytical integration codes; RooAbsAnaConvPdf Abstract Composite Convoluted PDF; RooAbsArg Abstract variable; RooAbsBinning Abstract base class for binning specification; RooAbsCache Base class for cache managers ; RooAbsCacheElement Base class for cache elements; RooAbsCachedPdf Abstract base class for cached p.d.f.s; RooAbsCachedReal Abstract base class for cached p.d.f.s; RooAbsCategory Abstract discrete variable; RooAbsCategoryLValue Abstract modifiable index variable ; RooAbsCollection Collection of RooAbsArg objects; RooAbsData Abstract data collection; RooAbsDataStore Abstract Data Storage class; RooAbsFunc Abstract real-valued function interface; RooAbsGenContext Abstract context for generating a dataset from a PDF; RooAbsHiddenReal Abstract hidden real-valued variable; RooAbsIntegrator Abstract interface for real-valued function integrators; RooAbsLValue Abstract variable; RooAbsMCStudyModule Monte Carlo study manager add-on module; RooAbsMoment Abstract representation of moment in a RooAbsReal in a given RooRealVar; RooAbsNumGenerator Abstract base class for numeric event generator algorithms; RooAbsOptTestStatistic Abstract base class for optimized test statistics; RooAbsPdf Abstract PDF with normalization support; RooAbsPdf::GenSpec Generation specification; RooAbsProxy Abstract proxy interface; RooAbsReal Abstract real-valued variable; RooAbsRealLValue Abstract modifiable real-valued object; RooAbsRootFinder Abstract interface for 1-dim real-valued function root finders; RooAbsSelfCachedPdf Abstract base class for self-caching p.d.f.s; RooAbsSelfCachedReal Abstract base class for self-caching functions; RooAbsString Abstract string-valued variable; RooAbsStudy Abstract base class for RooStudyManager modules; RooAbsTestStatistic Abstract base class for real-valued test statistics; RooAcceptReject Context for generating a dataset from a PDF; RooAdaptiveGaussKronrodIntegrator1D 1-dimensional adaptive Gauss-Kronrod numerical inte,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:25476,Modifiability,variab,variable,25476,RooAICRegistry Registry for analytical integration codes; RooAbsAnaConvPdf Abstract Composite Convoluted PDF; RooAbsArg Abstract variable; RooAbsBinning Abstract base class for binning specification; RooAbsCache Base class for cache managers ; RooAbsCacheElement Base class for cache elements; RooAbsCachedPdf Abstract base class for cached p.d.f.s; RooAbsCachedReal Abstract base class for cached p.d.f.s; RooAbsCategory Abstract discrete variable; RooAbsCategoryLValue Abstract modifiable index variable ; RooAbsCollection Collection of RooAbsArg objects; RooAbsData Abstract data collection; RooAbsDataStore Abstract Data Storage class; RooAbsFunc Abstract real-valued function interface; RooAbsGenContext Abstract context for generating a dataset from a PDF; RooAbsHiddenReal Abstract hidden real-valued variable; RooAbsIntegrator Abstract interface for real-valued function integrators; RooAbsLValue Abstract variable; RooAbsMCStudyModule Monte Carlo study manager add-on module; RooAbsMoment Abstract representation of moment in a RooAbsReal in a given RooRealVar; RooAbsNumGenerator Abstract base class for numeric event generator algorithms; RooAbsOptTestStatistic Abstract base class for optimized test statistics; RooAbsPdf Abstract PDF with normalization support; RooAbsPdf::GenSpec Generation specification; RooAbsProxy Abstract proxy interface; RooAbsReal Abstract real-valued variable; RooAbsRealLValue Abstract modifiable real-valued object; RooAbsRootFinder Abstract interface for 1-dim real-valued function root finders; RooAbsSelfCachedPdf Abstract base class for self-caching p.d.f.s; RooAbsSelfCachedReal Abstract base class for self-caching functions; RooAbsString Abstract string-valued variable; RooAbsStudy Abstract base class for RooStudyManager modules; RooAbsTestStatistic Abstract base class for real-valued test statistics; RooAcceptReject Context for generating a dataset from a PDF; RooAdaptiveGaussKronrodIntegrator1D 1-dimensional adaptive Gauss-Kronrod numerical inte,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:25787,Modifiability,variab,variable,25787,RooAICRegistry Registry for analytical integration codes; RooAbsAnaConvPdf Abstract Composite Convoluted PDF; RooAbsArg Abstract variable; RooAbsBinning Abstract base class for binning specification; RooAbsCache Base class for cache managers ; RooAbsCacheElement Base class for cache elements; RooAbsCachedPdf Abstract base class for cached p.d.f.s; RooAbsCachedReal Abstract base class for cached p.d.f.s; RooAbsCategory Abstract discrete variable; RooAbsCategoryLValue Abstract modifiable index variable ; RooAbsCollection Collection of RooAbsArg objects; RooAbsData Abstract data collection; RooAbsDataStore Abstract Data Storage class; RooAbsFunc Abstract real-valued function interface; RooAbsGenContext Abstract context for generating a dataset from a PDF; RooAbsHiddenReal Abstract hidden real-valued variable; RooAbsIntegrator Abstract interface for real-valued function integrators; RooAbsLValue Abstract variable; RooAbsMCStudyModule Monte Carlo study manager add-on module; RooAbsMoment Abstract representation of moment in a RooAbsReal in a given RooRealVar; RooAbsNumGenerator Abstract base class for numeric event generator algorithms; RooAbsOptTestStatistic Abstract base class for optimized test statistics; RooAbsPdf Abstract PDF with normalization support; RooAbsPdf::GenSpec Generation specification; RooAbsProxy Abstract proxy interface; RooAbsReal Abstract real-valued variable; RooAbsRealLValue Abstract modifiable real-valued object; RooAbsRootFinder Abstract interface for 1-dim real-valued function root finders; RooAbsSelfCachedPdf Abstract base class for self-caching p.d.f.s; RooAbsSelfCachedReal Abstract base class for self-caching functions; RooAbsString Abstract string-valued variable; RooAbsStudy Abstract base class for RooStudyManager modules; RooAbsTestStatistic Abstract base class for real-valued test statistics; RooAcceptReject Context for generating a dataset from a PDF; RooAdaptiveGaussKronrodIntegrator1D 1-dimensional adaptive Gauss-Kronrod numerical inte,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:25893,Modifiability,variab,variable,25893,RooAICRegistry Registry for analytical integration codes; RooAbsAnaConvPdf Abstract Composite Convoluted PDF; RooAbsArg Abstract variable; RooAbsBinning Abstract base class for binning specification; RooAbsCache Base class for cache managers ; RooAbsCacheElement Base class for cache elements; RooAbsCachedPdf Abstract base class for cached p.d.f.s; RooAbsCachedReal Abstract base class for cached p.d.f.s; RooAbsCategory Abstract discrete variable; RooAbsCategoryLValue Abstract modifiable index variable ; RooAbsCollection Collection of RooAbsArg objects; RooAbsData Abstract data collection; RooAbsDataStore Abstract Data Storage class; RooAbsFunc Abstract real-valued function interface; RooAbsGenContext Abstract context for generating a dataset from a PDF; RooAbsHiddenReal Abstract hidden real-valued variable; RooAbsIntegrator Abstract interface for real-valued function integrators; RooAbsLValue Abstract variable; RooAbsMCStudyModule Monte Carlo study manager add-on module; RooAbsMoment Abstract representation of moment in a RooAbsReal in a given RooRealVar; RooAbsNumGenerator Abstract base class for numeric event generator algorithms; RooAbsOptTestStatistic Abstract base class for optimized test statistics; RooAbsPdf Abstract PDF with normalization support; RooAbsPdf::GenSpec Generation specification; RooAbsProxy Abstract proxy interface; RooAbsReal Abstract real-valued variable; RooAbsRealLValue Abstract modifiable real-valued object; RooAbsRootFinder Abstract interface for 1-dim real-valued function root finders; RooAbsSelfCachedPdf Abstract base class for self-caching p.d.f.s; RooAbsSelfCachedReal Abstract base class for self-caching functions; RooAbsString Abstract string-valued variable; RooAbsStudy Abstract base class for RooStudyManager modules; RooAbsTestStatistic Abstract base class for real-valued test statistics; RooAcceptReject Context for generating a dataset from a PDF; RooAdaptiveGaussKronrodIntegrator1D 1-dimensional adaptive Gauss-Kronrod numerical inte,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:26369,Modifiability,variab,variable,26369,RooAICRegistry Registry for analytical integration codes; RooAbsAnaConvPdf Abstract Composite Convoluted PDF; RooAbsArg Abstract variable; RooAbsBinning Abstract base class for binning specification; RooAbsCache Base class for cache managers ; RooAbsCacheElement Base class for cache elements; RooAbsCachedPdf Abstract base class for cached p.d.f.s; RooAbsCachedReal Abstract base class for cached p.d.f.s; RooAbsCategory Abstract discrete variable; RooAbsCategoryLValue Abstract modifiable index variable ; RooAbsCollection Collection of RooAbsArg objects; RooAbsData Abstract data collection; RooAbsDataStore Abstract Data Storage class; RooAbsFunc Abstract real-valued function interface; RooAbsGenContext Abstract context for generating a dataset from a PDF; RooAbsHiddenReal Abstract hidden real-valued variable; RooAbsIntegrator Abstract interface for real-valued function integrators; RooAbsLValue Abstract variable; RooAbsMCStudyModule Monte Carlo study manager add-on module; RooAbsMoment Abstract representation of moment in a RooAbsReal in a given RooRealVar; RooAbsNumGenerator Abstract base class for numeric event generator algorithms; RooAbsOptTestStatistic Abstract base class for optimized test statistics; RooAbsPdf Abstract PDF with normalization support; RooAbsPdf::GenSpec Generation specification; RooAbsProxy Abstract proxy interface; RooAbsReal Abstract real-valued variable; RooAbsRealLValue Abstract modifiable real-valued object; RooAbsRootFinder Abstract interface for 1-dim real-valued function root finders; RooAbsSelfCachedPdf Abstract base class for self-caching p.d.f.s; RooAbsSelfCachedReal Abstract base class for self-caching functions; RooAbsString Abstract string-valued variable; RooAbsStudy Abstract base class for RooStudyManager modules; RooAbsTestStatistic Abstract base class for real-valued test statistics; RooAcceptReject Context for generating a dataset from a PDF; RooAdaptiveGaussKronrodIntegrator1D 1-dimensional adaptive Gauss-Kronrod numerical inte,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:26688,Modifiability,variab,variable,26688,or numeric event generator algorithms; RooAbsOptTestStatistic Abstract base class for optimized test statistics; RooAbsPdf Abstract PDF with normalization support; RooAbsPdf::GenSpec Generation specification; RooAbsProxy Abstract proxy interface; RooAbsReal Abstract real-valued variable; RooAbsRealLValue Abstract modifiable real-valued object; RooAbsRootFinder Abstract interface for 1-dim real-valued function root finders; RooAbsSelfCachedPdf Abstract base class for self-caching p.d.f.s; RooAbsSelfCachedReal Abstract base class for self-caching functions; RooAbsString Abstract string-valued variable; RooAbsStudy Abstract base class for RooStudyManager modules; RooAbsTestStatistic Abstract base class for real-valued test statistics; RooAcceptReject Context for generating a dataset from a PDF; RooAdaptiveGaussKronrodIntegrator1D 1-dimensional adaptive Gauss-Kronrod numerical integration engine; RooAdaptiveIntegratorND N-dimensional adaptive integration (interface to MathCore integrator); RooAddGenContext Specialized context for generating a dataset from a RooAddPdf; RooAddModel Resolution model representing a sum of resolution models; RooAddPdf PDF representing a sum of PDFs; RooAddition Sum of RooAbsReal objects; RooArgList Ordered list of RooAbsArg objects; RooArgProxy Abstract proxy for RooAbsArg objects; RooArgSet Set of RooAbsArg objects; RooArgusBG Argus background shape PDF; RooBCPEffDecay B Mixing decay PDF; RooBCPGenDecay B decay time distribution with CP violation; RooBDecay P.d.f of general description of B decay time distribution; RooBMixDecay B Mixing decay PDF; RooBernstein Bernstein polynomial PDF; RooBifurGauss Bifurcated Gaussian PDF; RooBinIntegrator 1-dimensional numerical integration engine; RooBinnedGenContext Specialized context for generating a dataset from a binned pdf; RooBinning Generic binning specification; RooBinningCategory RealVar-to-Category function defined by bin boundaries on input var; RooBlindTools Root implementation of BlindTools,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:26943,Modifiability,adapt,adaptive,26943,or numeric event generator algorithms; RooAbsOptTestStatistic Abstract base class for optimized test statistics; RooAbsPdf Abstract PDF with normalization support; RooAbsPdf::GenSpec Generation specification; RooAbsProxy Abstract proxy interface; RooAbsReal Abstract real-valued variable; RooAbsRealLValue Abstract modifiable real-valued object; RooAbsRootFinder Abstract interface for 1-dim real-valued function root finders; RooAbsSelfCachedPdf Abstract base class for self-caching p.d.f.s; RooAbsSelfCachedReal Abstract base class for self-caching functions; RooAbsString Abstract string-valued variable; RooAbsStudy Abstract base class for RooStudyManager modules; RooAbsTestStatistic Abstract base class for real-valued test statistics; RooAcceptReject Context for generating a dataset from a PDF; RooAdaptiveGaussKronrodIntegrator1D 1-dimensional adaptive Gauss-Kronrod numerical integration engine; RooAdaptiveIntegratorND N-dimensional adaptive integration (interface to MathCore integrator); RooAddGenContext Specialized context for generating a dataset from a RooAddPdf; RooAddModel Resolution model representing a sum of resolution models; RooAddPdf PDF representing a sum of PDFs; RooAddition Sum of RooAbsReal objects; RooArgList Ordered list of RooAbsArg objects; RooArgProxy Abstract proxy for RooAbsArg objects; RooArgSet Set of RooAbsArg objects; RooArgusBG Argus background shape PDF; RooBCPEffDecay B Mixing decay PDF; RooBCPGenDecay B decay time distribution with CP violation; RooBDecay P.d.f of general description of B decay time distribution; RooBMixDecay B Mixing decay PDF; RooBernstein Bernstein polynomial PDF; RooBifurGauss Bifurcated Gaussian PDF; RooBinIntegrator 1-dimensional numerical integration engine; RooBinnedGenContext Specialized context for generating a dataset from a binned pdf; RooBinning Generic binning specification; RooBinningCategory RealVar-to-Category function defined by bin boundaries on input var; RooBlindTools Root implementation of BlindTools,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:27034,Modifiability,adapt,adaptive,27034,or numeric event generator algorithms; RooAbsOptTestStatistic Abstract base class for optimized test statistics; RooAbsPdf Abstract PDF with normalization support; RooAbsPdf::GenSpec Generation specification; RooAbsProxy Abstract proxy interface; RooAbsReal Abstract real-valued variable; RooAbsRealLValue Abstract modifiable real-valued object; RooAbsRootFinder Abstract interface for 1-dim real-valued function root finders; RooAbsSelfCachedPdf Abstract base class for self-caching p.d.f.s; RooAbsSelfCachedReal Abstract base class for self-caching functions; RooAbsString Abstract string-valued variable; RooAbsStudy Abstract base class for RooStudyManager modules; RooAbsTestStatistic Abstract base class for real-valued test statistics; RooAcceptReject Context for generating a dataset from a PDF; RooAdaptiveGaussKronrodIntegrator1D 1-dimensional adaptive Gauss-Kronrod numerical integration engine; RooAdaptiveIntegratorND N-dimensional adaptive integration (interface to MathCore integrator); RooAddGenContext Specialized context for generating a dataset from a RooAddPdf; RooAddModel Resolution model representing a sum of resolution models; RooAddPdf PDF representing a sum of PDFs; RooAddition Sum of RooAbsReal objects; RooArgList Ordered list of RooAbsArg objects; RooArgProxy Abstract proxy for RooAbsArg objects; RooArgSet Set of RooAbsArg objects; RooArgusBG Argus background shape PDF; RooBCPEffDecay B Mixing decay PDF; RooBCPGenDecay B decay time distribution with CP violation; RooBDecay P.d.f of general description of B decay time distribution; RooBMixDecay B Mixing decay PDF; RooBernstein Bernstein polynomial PDF; RooBifurGauss Bifurcated Gaussian PDF; RooBinIntegrator 1-dimensional numerical integration engine; RooBinnedGenContext Specialized context for generating a dataset from a binned pdf; RooBinning Generic binning specification; RooBinningCategory RealVar-to-Category function defined by bin boundaries on input var; RooBlindTools Root implementation of BlindTools,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:33065,Modifiability,variab,variable,33065,"tions; RooCFunction4PdfBinding<double,double,double,double,double> RooAbsReal binding to external C functions; RooCFunction4PdfBinding<double,double,double,double,int> RooAbsReal binding to external C functions; RooCFunction4Ref<double,double,double,double,bool> Persistable reference to C function pointer; RooCFunction4Ref<double,double,double,double,double> Persistable reference to C function pointer; RooCFunction4Ref<double,double,double,double,int> Persistable reference to C function pointer; RooCacheManager<RooAbsCacheElement> Cache Manager class generic objects; RooCacheManager<vector<double> > Cache Manager class generic objects; RooCachedPdf P.d.f class that wraps another p.d.f and caches its output ; RooCachedReal P.d.f class that wraps another p.d.f and caches its output ; RooCatType Category state, (name,index) pair; RooCategory Discrete valued variable type; RooCategoryProxy Proxy for a RooAbsCategory object; RooCategorySharedProperties Shared properties of a RooCategory clone set; RooChangeTracker Meta object that tracks changes in set of other arguments; RooChebychev Chebychev polynomial PDF; RooChi2MCSModule MCStudy module to calculate chi2 between binned data and fit ; RooChi2Var Chi^2 function of p.d.f w.r.t a binned dataset; RooChiSquarePdf Chi Square distribution (eg. the PDF ); RooCintUtils ; RooClassFactory RooFit class code and instance factory ; RooCmdArg Generic named argument container; RooCmdConfig Configurable parse of RooCmdArg objects; RooComplex a non-persistent bare-bones complex class; RooCompositeDataStore Composite Data Storage class; RooConstVar Constant RooAbsReal value object; RooConstraintSum sum of -log of set of RooAbsPdf representing parameter constraints; RooConvCoefVar Auxiliary class representing the coefficient of a RooAbsAnaConvPdf as a RooAbsReal; RooConvGenContext Context for generating a dataset from a PDF; RooConvIntegrandBinding RooAbsFunc representation of convolution integrands; RooCurve 1-dimensional smooth curve f",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:33645,Modifiability,Config,Configurable,33645,"ss that wraps another p.d.f and caches its output ; RooCatType Category state, (name,index) pair; RooCategory Discrete valued variable type; RooCategoryProxy Proxy for a RooAbsCategory object; RooCategorySharedProperties Shared properties of a RooCategory clone set; RooChangeTracker Meta object that tracks changes in set of other arguments; RooChebychev Chebychev polynomial PDF; RooChi2MCSModule MCStudy module to calculate chi2 between binned data and fit ; RooChi2Var Chi^2 function of p.d.f w.r.t a binned dataset; RooChiSquarePdf Chi Square distribution (eg. the PDF ); RooCintUtils ; RooClassFactory RooFit class code and instance factory ; RooCmdArg Generic named argument container; RooCmdConfig Configurable parse of RooCmdArg objects; RooComplex a non-persistent bare-bones complex class; RooCompositeDataStore Composite Data Storage class; RooConstVar Constant RooAbsReal value object; RooConstraintSum sum of -log of set of RooAbsPdf representing parameter constraints; RooConvCoefVar Auxiliary class representing the coefficient of a RooAbsAnaConvPdf as a RooAbsReal; RooConvGenContext Context for generating a dataset from a PDF; RooConvIntegrandBinding RooAbsFunc representation of convolution integrands; RooCurve 1-dimensional smooth curve for use in RooPlots; RooCustomizer Editing tool for RooAbsArg composite object expressions; RooDLLSignificanceMCSModule MCStudy module to calculate Delta(-logL) significance w.r.t given null hypothesis; RooDataHist Binned data set; RooDataHistSliceIter Iterator over a one-dimensional slice of a RooDataHist; RooDataProjBinding RealFunc/Dataset binding for data projection of a real function; RooDataSet Unbinned data set; RooDataWeightedAverage Optimized calculator of data weighted average of a RooAbsReal; RooDecay General decay function p.d.f ; RooDerivative Representation of derivative of any RooAbsReal; RooDirItem Base class for RooFit objects that are listed TDirectories; RooDouble Container class for Double_t; RooDstD0BG D*-D0 ma",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:35196,Modifiability,variab,variables,35196,le to calculate Delta(-logL) significance w.r.t given null hypothesis; RooDataHist Binned data set; RooDataHistSliceIter Iterator over a one-dimensional slice of a RooDataHist; RooDataProjBinding RealFunc/Dataset binding for data projection of a real function; RooDataSet Unbinned data set; RooDataWeightedAverage Optimized calculator of data weighted average of a RooAbsReal; RooDecay General decay function p.d.f ; RooDerivative Representation of derivative of any RooAbsReal; RooDirItem Base class for RooFit objects that are listed TDirectories; RooDouble Container class for Double_t; RooDstD0BG D*-D0 mass difference background PDF; RooEffGenContext Context for generating a dataset from a PDF; RooEffProd Product operator p.d.f of (PDF x efficiency) implementing optimized generator context; RooEfficiency Generic PDF defined by string expression and list of variables; RooEllipse 2-dimensional contour; RooErrorVar RooAbsRealLValue representation of an error of a RooRealVar; RooExpensiveObjectCache Singleton class that serves as session repository for expensive objects; RooExpensiveObjectCache::ExpensiveObject Cache element containing expensive object and parameter values for which object is valid; RooExponential Exponential PDF; RooExtendPdf Wrapper p.d.f adding an extended likelihood term to an existing p.d.f; RooExtendedBinding Your description goes here...; RooExtendedTerm Meta-p.d.f flat in all observables introducing only extended ML term; RooFFTConvPdf Convolution operator p.d.f based on numeric Fourier transforms; RooFIter ; RooFactoryWSTool RooFit class code and instance factory ; RooFirstMoment Representation of moment in a RooAbsReal in a given RooRealVar; RooFit ; RooFitResult Container class for fit result; RooFitShortHand ; RooFoamGenerator Context for generating a dataset from a PDF using the TFoam class; RooFormula TFormula derived class interfacing with RooAbsArg objects; RooFormulaVar Real-valued function of other RooAbsArgs calculated by a TFormula expr,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:35611,Modifiability,extend,extended,35611,"taWeightedAverage Optimized calculator of data weighted average of a RooAbsReal; RooDecay General decay function p.d.f ; RooDerivative Representation of derivative of any RooAbsReal; RooDirItem Base class for RooFit objects that are listed TDirectories; RooDouble Container class for Double_t; RooDstD0BG D*-D0 mass difference background PDF; RooEffGenContext Context for generating a dataset from a PDF; RooEffProd Product operator p.d.f of (PDF x efficiency) implementing optimized generator context; RooEfficiency Generic PDF defined by string expression and list of variables; RooEllipse 2-dimensional contour; RooErrorVar RooAbsRealLValue representation of an error of a RooRealVar; RooExpensiveObjectCache Singleton class that serves as session repository for expensive objects; RooExpensiveObjectCache::ExpensiveObject Cache element containing expensive object and parameter values for which object is valid; RooExponential Exponential PDF; RooExtendPdf Wrapper p.d.f adding an extended likelihood term to an existing p.d.f; RooExtendedBinding Your description goes here...; RooExtendedTerm Meta-p.d.f flat in all observables introducing only extended ML term; RooFFTConvPdf Convolution operator p.d.f based on numeric Fourier transforms; RooFIter ; RooFactoryWSTool RooFit class code and instance factory ; RooFirstMoment Representation of moment in a RooAbsReal in a given RooRealVar; RooFit ; RooFitResult Container class for fit result; RooFitShortHand ; RooFoamGenerator Context for generating a dataset from a PDF using the TFoam class; RooFormula TFormula derived class interfacing with RooAbsArg objects; RooFormulaVar Real-valued function of other RooAbsArgs calculated by a TFormula expression; RooFracRemainder Utility function calculating remainder fraction, i.e. 1-sum_i(a_i); RooFunctor Export RooAbsReal as functor; RooFunctor1DBinding RooAbsReal binding to a ROOT::Math::IBaseFunctionOneDim; RooFunctor1DPdfBinding RooAbsPdf binding to a ROOT::Math::IBaseFunctionOneDim; RooFun",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:35776,Modifiability,extend,extended,35776,"ivative of any RooAbsReal; RooDirItem Base class for RooFit objects that are listed TDirectories; RooDouble Container class for Double_t; RooDstD0BG D*-D0 mass difference background PDF; RooEffGenContext Context for generating a dataset from a PDF; RooEffProd Product operator p.d.f of (PDF x efficiency) implementing optimized generator context; RooEfficiency Generic PDF defined by string expression and list of variables; RooEllipse 2-dimensional contour; RooErrorVar RooAbsRealLValue representation of an error of a RooRealVar; RooExpensiveObjectCache Singleton class that serves as session repository for expensive objects; RooExpensiveObjectCache::ExpensiveObject Cache element containing expensive object and parameter values for which object is valid; RooExponential Exponential PDF; RooExtendPdf Wrapper p.d.f adding an extended likelihood term to an existing p.d.f; RooExtendedBinding Your description goes here...; RooExtendedTerm Meta-p.d.f flat in all observables introducing only extended ML term; RooFFTConvPdf Convolution operator p.d.f based on numeric Fourier transforms; RooFIter ; RooFactoryWSTool RooFit class code and instance factory ; RooFirstMoment Representation of moment in a RooAbsReal in a given RooRealVar; RooFit ; RooFitResult Container class for fit result; RooFitShortHand ; RooFoamGenerator Context for generating a dataset from a PDF using the TFoam class; RooFormula TFormula derived class interfacing with RooAbsArg objects; RooFormulaVar Real-valued function of other RooAbsArgs calculated by a TFormula expression; RooFracRemainder Utility function calculating remainder fraction, i.e. 1-sum_i(a_i); RooFunctor Export RooAbsReal as functor; RooFunctor1DBinding RooAbsReal binding to a ROOT::Math::IBaseFunctionOneDim; RooFunctor1DPdfBinding RooAbsPdf binding to a ROOT::Math::IBaseFunctionOneDim; RooFunctorBinding RooAbsReal binding to a ROOT::Math::IBaseFunctionMultiDim; RooFunctorPdfBinding RooAbsPdf binding to a ROOT::Math::IBaseFunctionMultiDim; RooGEx",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:37430,Modifiability,variab,variables,37430,"-sum_i(a_i); RooFunctor Export RooAbsReal as functor; RooFunctor1DBinding RooAbsReal binding to a ROOT::Math::IBaseFunctionOneDim; RooFunctor1DPdfBinding RooAbsPdf binding to a ROOT::Math::IBaseFunctionOneDim; RooFunctorBinding RooAbsReal binding to a ROOT::Math::IBaseFunctionMultiDim; RooFunctorPdfBinding RooAbsPdf binding to a ROOT::Math::IBaseFunctionMultiDim; RooGExpModel Gauss (x) Expontial resolution model; RooGamma Gaussian PDF; RooGaussKronrodIntegrator1D 1-dimensional Gauss-Kronrod numerical integration engine; RooGaussModel Gaussian Resolution Model; RooGaussian Gaussian PDF; RooGenCategory Generic category-to-category function based on user supplied mapping function; RooGenContext Universal context for generating toy MC data from any p.d.f; RooGenFitStudy Generate-and-Fit study module; RooGenFunction Export RooAbsReal as functor; RooGenProdProj General form of projected integral of product of PDFs, utility class for RooProdPdf; RooGenericPdf Generic PDF defined by string expression and list of variables; RooGlobalFunc ; RooGrid Utility class for RooMCIntegrator holding a multi-dimensional grid; RooHashTable Hash table; RooHist 1-dimensional histogram with error bars; RooHistConstraint Your description goes here...; RooHistError Utility class for calculating histogram errors; RooHistFunc Histogram based function; RooHistPdf Histogram based PDF; RooImproperIntegrator1D 1-dimensional improper integration engine; RooInt Container class for Int_t; RooIntegralMorph Linear shape interpolation operator p.d.f; RooIntegrator1D 1-dimensional numerical integration engine; RooIntegrator2D 2-dimensional numerical integration engine; RooIntegratorBinding Function binding representing output of numeric integrator; RooInvTransform Function binding returning inverse of other function binding; RooJeffreysPrior Sum of RooAbsReal objects; RooKeysPdf One-dimensional non-parametric kernel estimation p.d.f.; RooLandau Landau Distribution PDF; RooLegendre Legendre polynomial; RooL",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:39191,Modifiability,variab,variable,39191,"ator1D 1-dimensional numerical integration engine; RooIntegrator2D 2-dimensional numerical integration engine; RooIntegratorBinding Function binding representing output of numeric integrator; RooInvTransform Function binding returning inverse of other function binding; RooJeffreysPrior Sum of RooAbsReal objects; RooKeysPdf One-dimensional non-parametric kernel estimation p.d.f.; RooLandau Landau Distribution PDF; RooLegendre Legendre polynomial; RooLinTransBinning Linear transformation of binning specification; RooLinearVar Lvalue linear transformation function ; RooLinkedList Doubly linked list for storage of RooAbsArg objects; RooLinkedListElem Element of RooLinkedList container class; RooLinkedListIter Iterator for RooLinkedList container class; RooList TList with extra support for Option_t associations; RooListProxy Proxy class for a RooArgList; RooLognormal log-normal PDF; RooMCIntegrator VEGAS based multi-dimensional numerical integration engine; RooMCStudy A general purpose toy Monte Carlo study manager; RooMPSentinel Singleton class that terminate MP server processes when parent exists; RooMapCatEntry Utility class, holding a map expression from a index label regexp to a RooCatType; RooMappedCategory Index variable, derived from another index using pattern-matching based mapping; RooMappedCategory::Entry Map cat entry definition; RooMath math utility routines; RooMinimizer RooFit interface to ROOT::Fit::Fitter; RooMinimizerFcn ; RooMinuit RooFit minimizer based on MINUIT; RooMoment Representation of moment in a RooAbsReal in a given RooRealVar; RooMomentMorph Your description goes here...; RooMsgService RooFit Message Service Singleton class; RooMsgService::StreamConfig ; RooMultiBinomial Simultaneous pdf of N Binomial distributions with associated efficiency functions; RooMultiCatIter Iterator over all state permutations of a list of categories; RooMultiCategory Product operator for categories; RooMultiGenFunction Export RooAbsReal as functor; RooMultiVarGau",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:40182,Modifiability,extend,extended,40182,"dCategory Index variable, derived from another index using pattern-matching based mapping; RooMappedCategory::Entry Map cat entry definition; RooMath math utility routines; RooMinimizer RooFit interface to ROOT::Fit::Fitter; RooMinimizerFcn ; RooMinuit RooFit minimizer based on MINUIT; RooMoment Representation of moment in a RooAbsReal in a given RooRealVar; RooMomentMorph Your description goes here...; RooMsgService RooFit Message Service Singleton class; RooMsgService::StreamConfig ; RooMultiBinomial Simultaneous pdf of N Binomial distributions with associated efficiency functions; RooMultiCatIter Iterator over all state permutations of a list of categories; RooMultiCategory Product operator for categories; RooMultiGenFunction Export RooAbsReal as functor; RooMultiVarGaussian Multivariate Gaussian PDF with correlations; RooMultiVarGaussian::AnaIntData ; RooMultiVarGaussian::GenData ; RooNDKeysPdf General N-dimensional non-parametric kernel estimation p.d.f; RooNLLVar Function representing (extended) -log(L) of p.d.f and dataset; RooNameReg String name registry; RooNameSet A sterile version of RooArgSet, containing only the names of the contained RooAbsArgs; RooNonCPEigenDecay PDF to model CP-violating decays to final states which are not CP eigenstates; RooNonCentralChiSquare non-central chisquare pdf; RooNormSetCache Management tool for tracking sets of similar integration/normalization sets; RooNovosibirsk Novosibirsk PDF; RooNumCdf Numeric calculator for CDF for a given PDF; RooNumConvPdf Operator PDF implementing numeric convolution of 2 input PDFs; RooNumConvolution Operator PDF implementing numeric convolution of 2 input functions; RooNumGenConfig Numeric (MC) Event generator configuration ; RooNumGenFactory Numeric Generator factory; RooNumIntConfig Numeric Integrator configuration ; RooNumIntFactory Numeric Integrator factory; RooNumRunningInt Numeric calculator for running integral of a given function; RooNumber wrapper class for portable numerics; RooObjC",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:40888,Modifiability,config,configuration,40888,"tate permutations of a list of categories; RooMultiCategory Product operator for categories; RooMultiGenFunction Export RooAbsReal as functor; RooMultiVarGaussian Multivariate Gaussian PDF with correlations; RooMultiVarGaussian::AnaIntData ; RooMultiVarGaussian::GenData ; RooNDKeysPdf General N-dimensional non-parametric kernel estimation p.d.f; RooNLLVar Function representing (extended) -log(L) of p.d.f and dataset; RooNameReg String name registry; RooNameSet A sterile version of RooArgSet, containing only the names of the contained RooAbsArgs; RooNonCPEigenDecay PDF to model CP-violating decays to final states which are not CP eigenstates; RooNonCentralChiSquare non-central chisquare pdf; RooNormSetCache Management tool for tracking sets of similar integration/normalization sets; RooNovosibirsk Novosibirsk PDF; RooNumCdf Numeric calculator for CDF for a given PDF; RooNumConvPdf Operator PDF implementing numeric convolution of 2 input PDFs; RooNumConvolution Operator PDF implementing numeric convolution of 2 input functions; RooNumGenConfig Numeric (MC) Event generator configuration ; RooNumGenFactory Numeric Generator factory; RooNumIntConfig Numeric Integrator configuration ; RooNumIntFactory Numeric Integrator factory; RooNumRunningInt Numeric calculator for running integral of a given function; RooNumber wrapper class for portable numerics; RooObjCacheManager Cache manager for generic caches that contain RooAbsArg objects; RooParamBinning Binning specification with ranges parameterized by external RooAbsReal functions; RooParamHistFunc Your description goes here...; RooParametricStepFunction Parametric Step Function Pdf; RooPlot Plot frame and container for graphics objects; RooPlotable Abstract interface for plotable objects in a RooPlot; RooPoisson A Poisson PDF; RooPolyVar Polynomial function; RooPolynomial Polynomial PDF; RooPrintable Interface for printable objects; RooProdGenContext Context for efficient generation of a a dataset from a RooProdPdf; RooPro",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:40983,Modifiability,config,configuration,40983,"tate permutations of a list of categories; RooMultiCategory Product operator for categories; RooMultiGenFunction Export RooAbsReal as functor; RooMultiVarGaussian Multivariate Gaussian PDF with correlations; RooMultiVarGaussian::AnaIntData ; RooMultiVarGaussian::GenData ; RooNDKeysPdf General N-dimensional non-parametric kernel estimation p.d.f; RooNLLVar Function representing (extended) -log(L) of p.d.f and dataset; RooNameReg String name registry; RooNameSet A sterile version of RooArgSet, containing only the names of the contained RooAbsArgs; RooNonCPEigenDecay PDF to model CP-violating decays to final states which are not CP eigenstates; RooNonCentralChiSquare non-central chisquare pdf; RooNormSetCache Management tool for tracking sets of similar integration/normalization sets; RooNovosibirsk Novosibirsk PDF; RooNumCdf Numeric calculator for CDF for a given PDF; RooNumConvPdf Operator PDF implementing numeric convolution of 2 input PDFs; RooNumConvolution Operator PDF implementing numeric convolution of 2 input functions; RooNumGenConfig Numeric (MC) Event generator configuration ; RooNumGenFactory Numeric Generator factory; RooNumIntConfig Numeric Integrator configuration ; RooNumIntFactory Numeric Integrator factory; RooNumRunningInt Numeric calculator for running integral of a given function; RooNumber wrapper class for portable numerics; RooObjCacheManager Cache manager for generic caches that contain RooAbsArg objects; RooParamBinning Binning specification with ranges parameterized by external RooAbsReal functions; RooParamHistFunc Your description goes here...; RooParametricStepFunction Parametric Step Function Pdf; RooPlot Plot frame and container for graphics objects; RooPlotable Abstract interface for plotable objects in a RooPlot; RooPoisson A Poisson PDF; RooPolyVar Polynomial function; RooPolynomial Polynomial PDF; RooPrintable Interface for printable objects; RooProdGenContext Context for efficient generation of a a dataset from a RooProdPdf; RooPro",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:41150,Modifiability,portab,portable,41150,"tate permutations of a list of categories; RooMultiCategory Product operator for categories; RooMultiGenFunction Export RooAbsReal as functor; RooMultiVarGaussian Multivariate Gaussian PDF with correlations; RooMultiVarGaussian::AnaIntData ; RooMultiVarGaussian::GenData ; RooNDKeysPdf General N-dimensional non-parametric kernel estimation p.d.f; RooNLLVar Function representing (extended) -log(L) of p.d.f and dataset; RooNameReg String name registry; RooNameSet A sterile version of RooArgSet, containing only the names of the contained RooAbsArgs; RooNonCPEigenDecay PDF to model CP-violating decays to final states which are not CP eigenstates; RooNonCentralChiSquare non-central chisquare pdf; RooNormSetCache Management tool for tracking sets of similar integration/normalization sets; RooNovosibirsk Novosibirsk PDF; RooNumCdf Numeric calculator for CDF for a given PDF; RooNumConvPdf Operator PDF implementing numeric convolution of 2 input PDFs; RooNumConvolution Operator PDF implementing numeric convolution of 2 input functions; RooNumGenConfig Numeric (MC) Event generator configuration ; RooNumGenFactory Numeric Generator factory; RooNumIntConfig Numeric Integrator configuration ; RooNumIntFactory Numeric Integrator factory; RooNumRunningInt Numeric calculator for running integral of a given function; RooNumber wrapper class for portable numerics; RooObjCacheManager Cache manager for generic caches that contain RooAbsArg objects; RooParamBinning Binning specification with ranges parameterized by external RooAbsReal functions; RooParamHistFunc Your description goes here...; RooParametricStepFunction Parametric Step Function Pdf; RooPlot Plot frame and container for graphics objects; RooPlotable Abstract interface for plotable objects in a RooPlot; RooPoisson A Poisson PDF; RooPolyVar Polynomial function; RooPolynomial Polynomial PDF; RooPrintable Interface for printable objects; RooProdGenContext Context for efficient generation of a a dataset from a RooProdPdf; RooPro",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:41303,Modifiability,parameteriz,parameterized,41303,"tate permutations of a list of categories; RooMultiCategory Product operator for categories; RooMultiGenFunction Export RooAbsReal as functor; RooMultiVarGaussian Multivariate Gaussian PDF with correlations; RooMultiVarGaussian::AnaIntData ; RooMultiVarGaussian::GenData ; RooNDKeysPdf General N-dimensional non-parametric kernel estimation p.d.f; RooNLLVar Function representing (extended) -log(L) of p.d.f and dataset; RooNameReg String name registry; RooNameSet A sterile version of RooArgSet, containing only the names of the contained RooAbsArgs; RooNonCPEigenDecay PDF to model CP-violating decays to final states which are not CP eigenstates; RooNonCentralChiSquare non-central chisquare pdf; RooNormSetCache Management tool for tracking sets of similar integration/normalization sets; RooNovosibirsk Novosibirsk PDF; RooNumCdf Numeric calculator for CDF for a given PDF; RooNumConvPdf Operator PDF implementing numeric convolution of 2 input PDFs; RooNumConvolution Operator PDF implementing numeric convolution of 2 input functions; RooNumGenConfig Numeric (MC) Event generator configuration ; RooNumGenFactory Numeric Generator factory; RooNumIntConfig Numeric Integrator configuration ; RooNumIntFactory Numeric Integrator factory; RooNumRunningInt Numeric calculator for running integral of a given function; RooNumber wrapper class for portable numerics; RooObjCacheManager Cache manager for generic caches that contain RooAbsArg objects; RooParamBinning Binning specification with ranges parameterized by external RooAbsReal functions; RooParamHistFunc Your description goes here...; RooParametricStepFunction Parametric Step Function Pdf; RooPlot Plot frame and container for graphics objects; RooPlotable Abstract interface for plotable objects in a RooPlot; RooPoisson A Poisson PDF; RooPolyVar Polynomial function; RooPolynomial Polynomial PDF; RooPrintable Interface for printable objects; RooProdGenContext Context for efficient generation of a a dataset from a RooProdPdf; RooPro",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:42958,Modifiability,variab,variable,42958,n; RooPolynomial Polynomial PDF; RooPrintable Interface for printable objects; RooProdGenContext Context for efficient generation of a a dataset from a RooProdPdf; RooProdPdf PDF representing a product of PDFs; RooProduct Product of RooAbsReal and/or RooAbsCategory terms; RooProfileLL Real-valued function representing profile likelihood of external (likelihood) function; RooProjectedPdf Operator p.d.f calculating projection of another p.d.f; RooProofDriverSelector ; RooPullVar Calculation of pull of measurement w.r.t a truth value; RooQuasiRandomGenerator Quasi-random number generator; RooRandom Random number generator interface; RooRandomizeParamMCSModule MCStudy module to vary one or more input parameters during fit/generation cycle; RooRangeBinning Binning that only defines the total range; RooRangeBoolean Polynomial function; RooRealAnalytic Function binding to an analytical integral of a RooAbsReal; RooRealBinding Function binding to RooAbsReal object; RooRealConstant RooRealVar constants factory; RooRealIntegral Real-valued function representing an integral over a RooAbsReal object; RooRealMPFE Multi-process front-end for parallel calculation of a real valued function ; RooRealProxy Proxy for a RooAbsReal object; RooRealSumPdf PDF constructed from a sum of (non-pdf) functions; RooRealVar Real-valued variable ; RooRealVarSharedProperties Shared properties of a RooRealVar clone set; RooRecursiveFraction Recursive fraction formula f1*(1-f2)*(1-f3) etc...; RooRefArray Helper class for proxy lists; RooRefCountList RooLinkedList with reference counting; RooResolutionModel Abstract Resolution Model; RooScaledFunc Function binding applying scaling to another function binding; RooSecondMoment Representation of moment in a RooAbsReal in a given RooRealVar; RooSegmentedIntegrator1D 1-dimensional piece-wise numerical integration engine; RooSegmentedIntegrator2D 2-dimensional piece-wise numerical integration engine; RooSentinel ; RooSetPair Utility class holding a pair of ,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:44242,Modifiability,config,configuration,44242,"ng scaling to another function binding; RooSecondMoment Representation of moment in a RooAbsReal in a given RooRealVar; RooSegmentedIntegrator1D 1-dimensional piece-wise numerical integration engine; RooSegmentedIntegrator2D 2-dimensional piece-wise numerical integration engine; RooSentinel ; RooSetPair Utility class holding a pair of RooArgSet pointers; RooSetProxy Proxy class for a RooArgSet; RooSharedProperties Abstract interface for shared property implementations; RooSharedPropertiesList Manager for shared properties among clones of certain RooAbsArg-derived types; RooSimGenContext Context for efficiently generating a dataset from a RooSimultaneous PDF; RooSimPdfBuilder RooSimultaneous PDF Builder (obsolete); RooSimSplitGenContext Context for efficiently generating a dataset from a RooSimultaneous PDF; RooSimWSTool Workspace oriented tool for customized cloning of p.d.f. into a simultaneous p.d.f; RooSimWSTool::BuildConfig Build configuration object for RooSimWSTool; RooSimWSTool::MultiBuildConfig Build configuration object for RooSimWSTool with multiple prototype p.d.f.; RooSimWSTool::ObjBuildConfig Validated RooSimWSTool build configuration; RooSimWSTool::ObjSplitRule Validated RooSimWSTool split rule; RooSimWSTool::SplitRule Split rule specification for prototype p.d.f; RooSimultaneous Simultaneous operator p.d.f, functions like C++ 'switch()' on input p.d.fs operating on index category5A; RooSpHarmonic SpHarmonic polynomial; RooStats ; RooStats::AcceptanceRegion A simple class for acceptance regions used for ConfidenceBelt; RooStats::AsymptoticCalculator ; RooStats::BayesianCalculator BayesianCalculator class; RooStats::BernsteinCorrection A utility to add polynomial corrrection terms to a model to improve the description of data.; RooStats::CombinedCalculator A base class that is for tools that can be both HypoTestCalculators and IntervalCalculators; RooStats::ConfInterval Interface for Confidence Intervals; RooStats::ConfidenceBelt A confidence belt for th",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:44318,Modifiability,config,configuration,44318,"ng scaling to another function binding; RooSecondMoment Representation of moment in a RooAbsReal in a given RooRealVar; RooSegmentedIntegrator1D 1-dimensional piece-wise numerical integration engine; RooSegmentedIntegrator2D 2-dimensional piece-wise numerical integration engine; RooSentinel ; RooSetPair Utility class holding a pair of RooArgSet pointers; RooSetProxy Proxy class for a RooArgSet; RooSharedProperties Abstract interface for shared property implementations; RooSharedPropertiesList Manager for shared properties among clones of certain RooAbsArg-derived types; RooSimGenContext Context for efficiently generating a dataset from a RooSimultaneous PDF; RooSimPdfBuilder RooSimultaneous PDF Builder (obsolete); RooSimSplitGenContext Context for efficiently generating a dataset from a RooSimultaneous PDF; RooSimWSTool Workspace oriented tool for customized cloning of p.d.f. into a simultaneous p.d.f; RooSimWSTool::BuildConfig Build configuration object for RooSimWSTool; RooSimWSTool::MultiBuildConfig Build configuration object for RooSimWSTool with multiple prototype p.d.f.; RooSimWSTool::ObjBuildConfig Validated RooSimWSTool build configuration; RooSimWSTool::ObjSplitRule Validated RooSimWSTool split rule; RooSimWSTool::SplitRule Split rule specification for prototype p.d.f; RooSimultaneous Simultaneous operator p.d.f, functions like C++ 'switch()' on input p.d.fs operating on index category5A; RooSpHarmonic SpHarmonic polynomial; RooStats ; RooStats::AcceptanceRegion A simple class for acceptance regions used for ConfidenceBelt; RooStats::AsymptoticCalculator ; RooStats::BayesianCalculator BayesianCalculator class; RooStats::BernsteinCorrection A utility to add polynomial corrrection terms to a model to improve the description of data.; RooStats::CombinedCalculator A base class that is for tools that can be both HypoTestCalculators and IntervalCalculators; RooStats::ConfInterval Interface for Confidence Intervals; RooStats::ConfidenceBelt A confidence belt for th",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:44446,Modifiability,config,configuration,44446,"ngine; RooSegmentedIntegrator2D 2-dimensional piece-wise numerical integration engine; RooSentinel ; RooSetPair Utility class holding a pair of RooArgSet pointers; RooSetProxy Proxy class for a RooArgSet; RooSharedProperties Abstract interface for shared property implementations; RooSharedPropertiesList Manager for shared properties among clones of certain RooAbsArg-derived types; RooSimGenContext Context for efficiently generating a dataset from a RooSimultaneous PDF; RooSimPdfBuilder RooSimultaneous PDF Builder (obsolete); RooSimSplitGenContext Context for efficiently generating a dataset from a RooSimultaneous PDF; RooSimWSTool Workspace oriented tool for customized cloning of p.d.f. into a simultaneous p.d.f; RooSimWSTool::BuildConfig Build configuration object for RooSimWSTool; RooSimWSTool::MultiBuildConfig Build configuration object for RooSimWSTool with multiple prototype p.d.f.; RooSimWSTool::ObjBuildConfig Validated RooSimWSTool build configuration; RooSimWSTool::ObjSplitRule Validated RooSimWSTool split rule; RooSimWSTool::SplitRule Split rule specification for prototype p.d.f; RooSimultaneous Simultaneous operator p.d.f, functions like C++ 'switch()' on input p.d.fs operating on index category5A; RooSpHarmonic SpHarmonic polynomial; RooStats ; RooStats::AcceptanceRegion A simple class for acceptance regions used for ConfidenceBelt; RooStats::AsymptoticCalculator ; RooStats::BayesianCalculator BayesianCalculator class; RooStats::BernsteinCorrection A utility to add polynomial corrrection terms to a model to improve the description of data.; RooStats::CombinedCalculator A base class that is for tools that can be both HypoTestCalculators and IntervalCalculators; RooStats::ConfInterval Interface for Confidence Intervals; RooStats::ConfidenceBelt A confidence belt for the Neyman Construction; RooStats::DebuggingSampler A simple implementation of the DistributionCreator interface; RooStats::DebuggingTestStat A concrete implementation of the TestStatistic inter",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:45926,Modifiability,Config,ConfigParser,45926," model to improve the description of data.; RooStats::CombinedCalculator A base class that is for tools that can be both HypoTestCalculators and IntervalCalculators; RooStats::ConfInterval Interface for Confidence Intervals; RooStats::ConfidenceBelt A confidence belt for the Neyman Construction; RooStats::DebuggingSampler A simple implementation of the DistributionCreator interface; RooStats::DebuggingTestStat A concrete implementation of the TestStatistic interface, useful for debugging.; RooStats::DetailedOutputAggregator ; RooStats::FeldmanCousins Interface for tools setting limits (producing confidence intervals); RooStats::FrequentistCalculator ; RooStats::HLFactory The high Level Model Factory to create models from datacards; RooStats::Heaviside Your description goes here...; RooStats::HistFactory ; RooStats::HistFactory::Asimov ; RooStats::HistFactory::Channel ; RooStats::HistFactory::ConfigParser ; RooStats::HistFactory::Constraint ; RooStats::HistFactory::Data ; RooStats::HistFactory::EstimateSummary ; RooStats::HistFactory::FlexibleInterpVar flexible interpolation; RooStats::HistFactory::HistFactoryNavigation ; RooStats::HistFactory::HistFactorySimultaneous Simultaneous operator p.d.f, functions like C++ 'switch()' on input p.d.fs operating on index category5A; RooStats::HistFactory::HistRef ; RooStats::HistFactory::HistoFactor ; RooStats::HistFactory::HistoSys ; RooStats::HistFactory::HistoToWorkspaceFactory ; RooStats::HistFactory::HistoToWorkspaceFactoryFast ; RooStats::HistFactory::LinInterpVar Piecewise linear interpolation; RooStats::HistFactory::Measurement ; RooStats::HistFactory::NormFactor ; RooStats::HistFactory::OverallSys ; RooStats::HistFactory::PreprocessFunction ; RooStats::HistFactory::RooBarlowBeestonLL Real-valued function representing a Barlow-Beeston minimized profile likelihood of external (likelihood) function; RooStats::HistFactory::Sample ; RooStats::HistFactory::ShapeFactor ; RooStats::HistFactory::ShapeSys ; RooStats::HistFactory:",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:46071,Modifiability,Flexible,FlexibleInterpVar,46071," model to improve the description of data.; RooStats::CombinedCalculator A base class that is for tools that can be both HypoTestCalculators and IntervalCalculators; RooStats::ConfInterval Interface for Confidence Intervals; RooStats::ConfidenceBelt A confidence belt for the Neyman Construction; RooStats::DebuggingSampler A simple implementation of the DistributionCreator interface; RooStats::DebuggingTestStat A concrete implementation of the TestStatistic interface, useful for debugging.; RooStats::DetailedOutputAggregator ; RooStats::FeldmanCousins Interface for tools setting limits (producing confidence intervals); RooStats::FrequentistCalculator ; RooStats::HLFactory The high Level Model Factory to create models from datacards; RooStats::Heaviside Your description goes here...; RooStats::HistFactory ; RooStats::HistFactory::Asimov ; RooStats::HistFactory::Channel ; RooStats::HistFactory::ConfigParser ; RooStats::HistFactory::Constraint ; RooStats::HistFactory::Data ; RooStats::HistFactory::EstimateSummary ; RooStats::HistFactory::FlexibleInterpVar flexible interpolation; RooStats::HistFactory::HistFactoryNavigation ; RooStats::HistFactory::HistFactorySimultaneous Simultaneous operator p.d.f, functions like C++ 'switch()' on input p.d.fs operating on index category5A; RooStats::HistFactory::HistRef ; RooStats::HistFactory::HistoFactor ; RooStats::HistFactory::HistoSys ; RooStats::HistFactory::HistoToWorkspaceFactory ; RooStats::HistFactory::HistoToWorkspaceFactoryFast ; RooStats::HistFactory::LinInterpVar Piecewise linear interpolation; RooStats::HistFactory::Measurement ; RooStats::HistFactory::NormFactor ; RooStats::HistFactory::OverallSys ; RooStats::HistFactory::PreprocessFunction ; RooStats::HistFactory::RooBarlowBeestonLL Real-valued function representing a Barlow-Beeston minimized profile likelihood of external (likelihood) function; RooStats::HistFactory::Sample ; RooStats::HistFactory::ShapeFactor ; RooStats::HistFactory::ShapeSys ; RooStats::HistFactory:",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:46089,Modifiability,flexible,flexible,46089," model to improve the description of data.; RooStats::CombinedCalculator A base class that is for tools that can be both HypoTestCalculators and IntervalCalculators; RooStats::ConfInterval Interface for Confidence Intervals; RooStats::ConfidenceBelt A confidence belt for the Neyman Construction; RooStats::DebuggingSampler A simple implementation of the DistributionCreator interface; RooStats::DebuggingTestStat A concrete implementation of the TestStatistic interface, useful for debugging.; RooStats::DetailedOutputAggregator ; RooStats::FeldmanCousins Interface for tools setting limits (producing confidence intervals); RooStats::FrequentistCalculator ; RooStats::HLFactory The high Level Model Factory to create models from datacards; RooStats::Heaviside Your description goes here...; RooStats::HistFactory ; RooStats::HistFactory::Asimov ; RooStats::HistFactory::Channel ; RooStats::HistFactory::ConfigParser ; RooStats::HistFactory::Constraint ; RooStats::HistFactory::Data ; RooStats::HistFactory::EstimateSummary ; RooStats::HistFactory::FlexibleInterpVar flexible interpolation; RooStats::HistFactory::HistFactoryNavigation ; RooStats::HistFactory::HistFactorySimultaneous Simultaneous operator p.d.f, functions like C++ 'switch()' on input p.d.fs operating on index category5A; RooStats::HistFactory::HistRef ; RooStats::HistFactory::HistoFactor ; RooStats::HistFactory::HistoSys ; RooStats::HistFactory::HistoToWorkspaceFactory ; RooStats::HistFactory::HistoToWorkspaceFactoryFast ; RooStats::HistFactory::LinInterpVar Piecewise linear interpolation; RooStats::HistFactory::Measurement ; RooStats::HistFactory::NormFactor ; RooStats::HistFactory::OverallSys ; RooStats::HistFactory::PreprocessFunction ; RooStats::HistFactory::RooBarlowBeestonLL Real-valued function representing a Barlow-Beeston minimized profile likelihood of external (likelihood) function; RooStats::HistFactory::Sample ; RooStats::HistFactory::ShapeFactor ; RooStats::HistFactory::ShapeSys ; RooStats::HistFactory:",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:48665,Modifiability,config,configuration,48665,y::ShapeFactor ; RooStats::HistFactory::ShapeSys ; RooStats::HistFactory::StatError ; RooStats::HistFactory::StatErrorConfig ; RooStats::HybridCalculator ; RooStats::HybridCalculatorOriginal Hypothesis test calculator using a Bayesian-frequentist hybrid method; RooStats::HybridPlot Provides the plots for an HybridResult; RooStats::HybridResult Class containing the results of the HybridCalculator; RooStats::HypoTestCalculator Interface for tools doing hypothesis tests; RooStats::HypoTestCalculatorGeneric ; RooStats::HypoTestInverter HypoTestInverter class; RooStats::HypoTestInverterOriginal HypoTestInverterOriginal class; RooStats::HypoTestInverterPlot HypoTestInverterPlot class; RooStats::HypoTestInverterResult HypoTestInverterResult class ; RooStats::HypoTestPlot ; RooStats::HypoTestResult Base class to represent results of a hypothesis test; RooStats::IntervalCalculator Interface for tools setting limits (producing confidence intervals); RooStats::LikelihoodInterval Concrete implementation of a ConfInterval based on a likelihood ratio; RooStats::LikelihoodIntervalPlot Class containing the results of the IntervalCalculator; RooStats::MCMCCalculator Markov Chain Monte Carlo calculator for Bayesian credible intervals; RooStats::MCMCInterval Concrete implementation of a ConfInterval based on MCMC calculation; RooStats::MCMCIntervalPlot Class containing the results of the MCMCCalculator; RooStats::MarkovChain ; RooStats::MaxLikelihoodEstimateTestStat ; RooStats::MetropolisHastings Markov Chain Monte Carlo calculator for Bayesian credible intervals; RooStats::MinNLLTestStat implements the minimum NLL as a test statistic to be used with several tools; RooStats::ModelConfig A class that holds configuration information for a model using a workspace as a store; RooStats::NeymanConstruction Interface for tools setting limits (producing confidence intervals); RooStats::NumEventsTestStat ; RooStats::NumberCountingPdfFactory A factory specific to common number counting problems.,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:49477,Modifiability,Config,Configuration,49477,"tat ; RooStats::MetropolisHastings Markov Chain Monte Carlo calculator for Bayesian credible intervals; RooStats::MinNLLTestStat implements the minimum NLL as a test statistic to be used with several tools; RooStats::ModelConfig A class that holds configuration information for a model using a workspace as a store; RooStats::NeymanConstruction Interface for tools setting limits (producing confidence intervals); RooStats::NumEventsTestStat ; RooStats::NumberCountingPdfFactory A factory specific to common number counting problems.; RooStats::NumberCountingUtils ; RooStats::PdfProposal ; RooStats::PointSetInterval Concrete implementation of ConfInterval for simple 1-D intervals in the form [a,b]; RooStats::ProfileInspector Class containing the results of the IntervalCalculator; RooStats::ProfileLikelihoodCalculator A concrete implementation of CombinedCalculator that uses the ProfileLikelihood ratio.; RooStats::ProfileLikelihoodTestStat implements the profile likelihood ratio as a test statistic to be used with several tools; RooStats::ProofConfig Configuration options for proof.; RooStats::ProposalFunction Interface for the proposal function used with Markov Chain Monte Carlo; RooStats::ProposalHelper ; RooStats::RatioOfProfiledLikelihoodsTestStat implements the ratio of profiled likelihood as test statistic; RooStats::SPlot Class used for making sPlots; RooStats::SamplingDistPlot Class containing the results of the HybridCalculator; RooStats::SamplingDistribution Class containing the results of the HybridCalculator; RooStats::SamplingSummary A summary of acceptance regions for confidence belt; RooStats::SamplingSummaryLookup A simple class used by ConfidenceBelt; RooStats::SequentialProposal A concrete implementation of ProposalFunction, that uniformly samples the parameter space.; RooStats::SimpleInterval Concrete implementation of ConfInterval for simple 1-D intervals in the form [a,b]; RooStats::SimpleLikelihoodRatioTestStat ; RooStats::TestStatSampler Interface for",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:51104,Modifiability,variab,variable,51104,,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:52756,Modifiability,variab,variables,52756,"to calculate upperlimit of a given poi; RooStepFunction Step Function; RooStreamParser Utility class that parses std::iostream data into tokens; RooStringVar String-valued variable ; RooStudyManager A general purpose workspace oriented parallelizing study manager; RooStudyPackage A general purpose workspace oriented parallelizing study manager; RooSuperCategory Lvalue product operator for catategory lvalues; RooTFnBinding RooAbsReal binding to ROOT TF[123] functions; RooTFnPdfBinding RooAbsPdf binding to ROOT TF[123] functions; RooTFoamBinding Function binding to RooAbsReal object; RooTObjWrap Container class for Int_t; RooTable Abstract interface for tables; RooThreshEntry Utility class for RooThresholdCategory, holding a threshold/category state pair; RooThresholdCategory Real-to-Category function defined by series of threshold; RooTrace Memory tracer utility for RooFit objects; RooTreeData Dummy class for legacy RooDataSet support; RooTreeDataStore TTree-based Data Storage class; RooTruthModel Truth resolution model (delta function); RooUnblindCPAsymVar CP-Asymmetry unblinding transformation; RooUnblindOffset Offset unblinding transformation; RooUnblindPrecision Precision unblinding transformation; RooUnblindUniform Uniform unblinding transformation; RooUniform Flat PDF in N dimensions; RooUniformBinning Uniform binning specification; RooUnitTest Abstract base class for RooFit/RooStats unit regression tests; RooVectorDataStore STL-vector-based Data Storage class; RooVectorDataStore::CatVector STL-vector-based Data Storage class; RooVectorDataStore::RealFullVector STL-vector-based Data Storage class; RooVectorDataStore::RealVector STL-vector-based Data Storage class; RooVoigtian Voigtian PDF (Gauss (x) BreitWigner); RooWorkspace Persistable project container for (composite) pdfs, functions, variables and datasets; RooWorkspace::CodeRepo Code repository for RooWorkspace; RooWorkspace::WSDir TDirectory representation of RooWorkspace; RooXYChi2Var Chi^2 function of p.",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:53121,Modifiability,plugin,plugin,53121,,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:53198,Modifiability,plugin,plugin,53198,,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:55529,Modifiability,plugin,plugin,55529,ray of longs; TArrayL64 Array of long64s; TArrayS Array of shorts; TArrow An arrow (line with a arrowhead); TArrowEditor GUI for editing arrow attributes; TAtomicCount ; TAtt3D 3D attributes; TAttAxis Axis attributes; TAttBBox Helper for management of bounding-box information; TAttBBox2D 2D bounding box attributes; TAttCanvas Canvas attributes; TAttFill Fill area attributes; TAttFillEditor GUI for editing fill attributes; TAttImage Image attributes; TAttLine Line attributes; TAttLineEditor GUI for editing line attributes; TAttMarker Marker attributes; TAttMarkerEditor GUI for editing marker attributes; TAttPad Pad attributes; TAttParticle Particle definition; TAttText Text attributes; TAttTextEditor GUI for editing text attributes; TAuthenticate Class providing remote authentication service; TAxis Axis class; TAxis3D 3-D ruler painting class; TAxisEditor axis editor; TBRIK TBRIK shape; TBackCompFitter Class providing backward compatibility for fitting by implementing the TVirtualFitter interface; TBase64 Base64 encoding/decoding; TBaseClass Description of a base class; TBasket the TBranch buffers; TBasketSQL the TBranch buffers; TBenchmark ROOT utility to help benchmarking applications; TBinomialEfficiencyFitter Binomial Fitter for the division of two histograms; TBits Bit container; TBits::TReference ; TBox Box class; TBranch Branch descriptor; TBranchClones Branch in case of an array of clone objects; TBranchElement Branch in case of an object; TBranchObject Branch in case of an object; TBranchRef to support referenced objects on other branches; TBranchSTL Branch handling STL collection of pointers; TBrowser ROOT Object Browser; TBrowserImp ABC describing browser implementation protocol; TBrowserPlugin basic plugin description class; TBtree A B-tree; TBtreeIter B-tree iterator; TBuffer Buffer base class used for serializing objects; TBuffer3D 3D primitives description; TBufferFile concrete implementation of TBuffer for writing/reading to/from a ROOT file or socket.,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:57074,Modifiability,inherit,inheritance,57074,"a to SQL statements or read data from SQL tables; TBufferXML a specialized TBuffer to read/write to XML files; TButton A user interface button.; TCL C++ replacement for CERNLIB matrix / triangle matrix packages: F110 and F112; TCONE CONE shape; TCONS CONS shape; TCTUB The Cut Tube shape; TCanvas Graphics canvas; TCanvasImp ABC describing main window protocol; TChain A chain of TTrees; TChainElement A chain element; TChainIndex A Tree Index with majorname and minorname.; TChainIndex::TChainIndexEntry ; TChair A base class to provide a user custom interface to TTable class objects; TCint Interface to CINT C/C++ interpreter; TCivetweb http server implementation, based on civetweb embedded server; TClass Dictionary containing class information; TClassDocInfo info cache for class documentation; TClassDocOutput generates documentation web pages for a class; TClassEdit ; TClassGenerator interface for TClass generators; TClassMenuItem One element of the class context menu; TClassRef ; TClassStreamer ; TClassTable Table of known classes; TClassTree Manager class to draw classes inheritance tree and relations; TClonesArray An array of clone objects; TCollection Collection abstract base class; TCollectionClassStreamer ; TCollectionMemberStreamer ; TCollectionMethodBrowsable Helper object to browse a collection's methods; TCollectionPropertyBrowsable Helper object to add browsable collection properties; TCollectionProxyFactory ; TCollectionStreamer ; TColor Color defined by RGB or HLS; TColorGradient Gradient fill.; TColorGradient::Point ; TColorWheel The ROOT Color Wheel; TColumnView Helper to represent one TTable column; TComplex Complex Class; TCondition Condition variable class; TConditionImp Condition variable implementation ABC; TCondor Interface to the Condor System; TCondorSlave Describes a claimed slave; TConfidenceLevel output for TLimit functions; TContextMenu Context sensitive popup menu; TContextMenuImp Context sensitive popup menu implementation; TControlBar Contro",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:57672,Modifiability,variab,variable,57672,ment of the class context menu; TClassRef ; TClassStreamer ; TClassTable Table of known classes; TClassTree Manager class to draw classes inheritance tree and relations; TClonesArray An array of clone objects; TCollection Collection abstract base class; TCollectionClassStreamer ; TCollectionMemberStreamer ; TCollectionMethodBrowsable Helper object to browse a collection's methods; TCollectionPropertyBrowsable Helper object to add browsable collection properties; TCollectionProxyFactory ; TCollectionStreamer ; TColor Color defined by RGB or HLS; TColorGradient Gradient fill.; TColorGradient::Point ; TColorWheel The ROOT Color Wheel; TColumnView Helper to represent one TTable column; TComplex Complex Class; TCondition Condition variable class; TConditionImp Condition variable implementation ABC; TCondor Interface to the Condor System; TCondorSlave Describes a claimed slave; TConfidenceLevel output for TLimit functions; TContextMenu Context sensitive popup menu; TContextMenuImp Context sensitive popup menu implementation; TControlBar Control bar; TControlBarButton The Control bar button; TControlBarImp GUI independent controlbar abc; TCrown A crown or segment of crown; TCurlyArc A curly arc; TCurlyArcEditor GUI for editing arrow attributes; TCurlyLine A curly polyline; TCurlyLineEditor GUI for editing arrow attributes; TCut A specialized string object used for TTree selections; TCutG A Graphical cut.; TDNDData Drag and drop specific data; TDOMParser DOM Parser; TDSet Data set for remote processing (PROOF); TDSetElement A TDSet element; TDSetProxy TDSet proxy for use on slaves; TDataMember Dictionary for a class data member; TDataSet The base class to create the hierarchical data structures; TDataSetIter class-iterator to navigate TDataSet structure; TDataSetManager Abstract data set manager class; TDataSetManagerFile DataSet manager for files; TDataType Basic data type descriptor; TDatabasePDG PDG particle database; TDatime Date and time 950130 124559; TDecayChannel Cl,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:57712,Modifiability,variab,variable,57712,ment of the class context menu; TClassRef ; TClassStreamer ; TClassTable Table of known classes; TClassTree Manager class to draw classes inheritance tree and relations; TClonesArray An array of clone objects; TCollection Collection abstract base class; TCollectionClassStreamer ; TCollectionMemberStreamer ; TCollectionMethodBrowsable Helper object to browse a collection's methods; TCollectionPropertyBrowsable Helper object to add browsable collection properties; TCollectionProxyFactory ; TCollectionStreamer ; TColor Color defined by RGB or HLS; TColorGradient Gradient fill.; TColorGradient::Point ; TColorWheel The ROOT Color Wheel; TColumnView Helper to represent one TTable column; TComplex Complex Class; TCondition Condition variable class; TConditionImp Condition variable implementation ABC; TCondor Interface to the Condor System; TCondorSlave Describes a claimed slave; TConfidenceLevel output for TLimit functions; TContextMenu Context sensitive popup menu; TContextMenuImp Context sensitive popup menu implementation; TControlBar Control bar; TControlBarButton The Control bar button; TControlBarImp GUI independent controlbar abc; TCrown A crown or segment of crown; TCurlyArc A curly arc; TCurlyArcEditor GUI for editing arrow attributes; TCurlyLine A curly polyline; TCurlyLineEditor GUI for editing arrow attributes; TCut A specialized string object used for TTree selections; TCutG A Graphical cut.; TDNDData Drag and drop specific data; TDOMParser DOM Parser; TDSet Data set for remote processing (PROOF); TDSetElement A TDSet element; TDSetProxy TDSet proxy for use on slaves; TDataMember Dictionary for a class data member; TDataSet The base class to create the hierarchical data structures; TDataSetIter class-iterator to navigate TDataSet structure; TDataSetManager Abstract data set manager class; TDataSetManagerFile DataSet manager for files; TDataType Basic data type descriptor; TDatabasePDG PDG particle database; TDatime Date and time 950130 124559; TDecayChannel Cl,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:60488,Modifiability,config,configuration,60488,"; TDecompBK Matrix Decomposition Bunch-Kaufman; TDecompBase Matrix Decomposition Base; TDecompChol Matrix Decompositition Cholesky; TDecompLU Matrix Decompositition LU; TDecompQRH Matrix Decompositition QRH; TDecompSVD Matrix Decompositition SVD; TDecompSparse Matrix Decompositition LU; TDialogCanvas A specialized canvas to set attributes.; TDiamond Diamond class; TDictAttributeMap Container for name/value pairs of TDictionary attributes; TDictionary ABC defining interface to dictionary; TDirectory Describe directory structure in memory; TDirectoryFile Describe directory structure in a ROOT file; TDocDirective THtml directive handler; TDocHtmlDirective Handler for ""Begin_Html""/""End_Html"" for raw HTML in documentation comments; TDocLatexDirective Handler for ""Begin_Latex""/""End_Latex"" to generate an image from latex; TDocMacroDirective Handler for ""Begin_Macro""/""End_Macro"" for code that is executed and that can generate an image for documentation; TDocOutput generates documentation web pages; TDocParser parser for reference documentation; TDrawFeedback Present PROOF query feedback; TELTU ELTU shape; TEditQueryFrame Edit query frame; TEfficiency calculating efficiencies; TEllipse An ellipse; TEmulatedCollectionProxy ; TEmulatedMapProxy ; TEntryList A list of entries in a TTree; TEntryListArray A list of entries and subentries in a TTree; TEntryListBlock Used internally in TEntryList to store the entry numbers; TEntryListFromFile Manager for entry lists from different files; TEnv Handle ROOT configuration resources; TEnvRec Individual TEnv records; TEve3DProjection 3D scaling ""projection""; TEveArrow Class for gl visualisation of arrow.; TEveArrowEditor GUI editor for TEveArrow.; TEveArrowGL GL renderer class for TEveArrow.; TEveBox 3D box with arbitrary vertices.; TEveBoxGL GL renderer class for TEveBox.; TEveBoxProjected Projection of TEveBox.; TEveBoxProjectedGL GL renderer class for TEveBoxProjected.; TEveBoxSet Collection of 3D primitives (fixed-size boxes, boxes of",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:64580,Modifiability,variab,variable,64580,"se class for event management and navigation.; TEveException Exception-type thrown by Eve classes.; TEveFrameBox Description of a 2D or 3D frame that can be used to visually group a set of objects.; TEveFrameBoxGL GL-renderer for TEveFrameBox class.; TEveGDoubleValuator Composite GUI element for selection of range (label, two number-entries and double-slider).; TEveGListTreeEditorFrame Composite GUI frame for parallel display of a TGListTree and TEveGedEditor.; TEveGTriVecValuator Composite GUI element for setting three numerical values (label, three number-entries).; TEveGValuator Composite GUI element for single value selection (supports label, number-entry and slider).; TEveGValuatorBase Base class for composite GUI elements for setting of numeric values.; TEveGedEditor Specialization of TGedEditor for proper update propagation to TEveManager.; TEveGedNameFrame Top name-frame used in EVE.; TEveGedNameTextButton Button for GED name-frame.; TEveGeoManagerHolder Exception-safe wrapper for temporary setting of gGeoManager variable.; TEveGeoNode Wrapper for TGeoNode that allows it to be shown in GUI and controlled as a TEveElement.; TEveGeoNodeEditor Editor for TEveGeoNode class.; TEveGeoPolyShape A shape with arbitrary tesselation for visualization of CSG shapes.; TEveGeoShape Wrapper for TGeoShape with absolute positioning and color attributes allowing display of extracted TGeoShape's (without an active TGeoManager) and simplified geometries (needed for NLT projections).; TEveGeoShapeExtract Globally positioned TGeoShape with rendering attributes and an optional list of daughter shape-extracts.; TEveGeoShapeProjected ; TEveGeoTopNode Top-level TEveGeoNode with a pointer to TGeoManager and controls for steering of TGeoPainter.; TEveGeoTopNodeEditor Editor for TEveGeoTopNode class.; TEveGridStepper Provide discrete position coordinates for placement of objects on regular grids.; TEveGridStepperEditor Editor for TEveGridStepper class.; TEveGridStepperSubEditor Sub-edit",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:66994,Modifiability,variab,variable,66994,"trary polyline with fixed line and marker attributes.; TEveLineEditor Editor for TEveLine class.; TEveLineGL GL-renderer for TEveLine class.; TEveLineProjected Projected replica of a TEveLine.; TEveListTreeItem Special llist-tree-item for Eve.; TEveMCRecCrossRef Cross-reference of sim/rec data per particle (also used in VSD).; TEveMCTrack Monte Carlo track (also used in VSD).; TEveMacro TMacro wrapper (attempting to fix issues with different macro loading and execution schemes).; TEveMagField Abstract interface to magnetic field; TEveMagFieldConst Interface to constant magnetic field.; TEveMagFieldDuo Interface to magnetic field with two different values depending on radius.; TEveManager Eve application manager.; TEveManager::TExceptionHandler Exception handler for Eve exceptions.; TEveManager::TRedrawDisabler Exception-safe EVE redraw-disabler.; TEvePad Internal TEveUtil pad class (sub-class of TPad) overriding handling of updates and 3D-viewers.; TEvePadHolder Exception-safe wrapper for temporary setting of gPad variable.; TEveParamList Eve element to store generic configuration information.; TEveParamList::BoolConfig_t ; TEveParamList::FloatConfig_t ; TEveParamList::IntConfig_t ; TEveParamListEditor GUI editor for TEveParamList.; TEvePathMarkT<double> Template for a special point on a track: position/momentum reference, daughter creation or decay.; TEvePathMarkT<float> Template for a special point on a track: position/momentum reference, daughter creation or decay.; TEvePlot3D Short description.; TEvePlot3DGL GL renderer class for TEvePlot3D.; TEvePointSelector TSelector for direct extraction of point-like data from a Tree.; TEvePointSelectorConsumer Virtual base for classes that can be filled from TTree data via the TEvePointSelector class.; TEvePointSet Set of 3D points with same marker attributes; optionally each point can be assigned an external TRef or a number of integer indices.; TEvePointSetArray Array of TEvePointSet's filled via a common point-source; r",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:67048,Modifiability,config,configuration,67048,"or for TEveLine class.; TEveLineGL GL-renderer for TEveLine class.; TEveLineProjected Projected replica of a TEveLine.; TEveListTreeItem Special llist-tree-item for Eve.; TEveMCRecCrossRef Cross-reference of sim/rec data per particle (also used in VSD).; TEveMCTrack Monte Carlo track (also used in VSD).; TEveMacro TMacro wrapper (attempting to fix issues with different macro loading and execution schemes).; TEveMagField Abstract interface to magnetic field; TEveMagFieldConst Interface to constant magnetic field.; TEveMagFieldDuo Interface to magnetic field with two different values depending on radius.; TEveManager Eve application manager.; TEveManager::TExceptionHandler Exception handler for Eve exceptions.; TEveManager::TRedrawDisabler Exception-safe EVE redraw-disabler.; TEvePad Internal TEveUtil pad class (sub-class of TPad) overriding handling of updates and 3D-viewers.; TEvePadHolder Exception-safe wrapper for temporary setting of gPad variable.; TEveParamList Eve element to store generic configuration information.; TEveParamList::BoolConfig_t ; TEveParamList::FloatConfig_t ; TEveParamList::IntConfig_t ; TEveParamListEditor GUI editor for TEveParamList.; TEvePathMarkT<double> Template for a special point on a track: position/momentum reference, daughter creation or decay.; TEvePathMarkT<float> Template for a special point on a track: position/momentum reference, daughter creation or decay.; TEvePlot3D Short description.; TEvePlot3DGL GL renderer class for TEvePlot3D.; TEvePointSelector TSelector for direct extraction of point-like data from a Tree.; TEvePointSelectorConsumer Virtual base for classes that can be filled from TTree data via the TEvePointSelector class.; TEvePointSet Set of 3D points with same marker attributes; optionally each point can be assigned an external TRef or a number of integer indices.; TEvePointSetArray Array of TEvePointSet's filled via a common point-source; range of displayed TEvePointSet's can be controlled, based on a separating q",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:72588,Modifiability,inherit,inheritance,72588, holding TEveTrackProjected objects.; TEveTrackProjected Projected copy of a TEveTrack.; TEveTrackProjectedGL GL-renderer for TEveTrackProjected class.; TEveTrackPropagator Calculates path of a particle taking into account special path-marks and imposed boundaries.; TEveTrackPropagatorEditor Editor for TEveTrackPropagator class.; TEveTrackPropagatorSubEditor Sub-editor for TEveTrackPropagator class.; TEveTrans Column-major 4x4 transforamtion matrix for homogeneous coordinates.; TEveTransEditor Editor for TEveTrans class.; TEveTransSubEditor Sub-editor for TEveTrans class.; TEveTriangleSet Generic mesh or soup of triangles with per-triangle normals and colors.; TEveTriangleSetEditor Editor for TEveTriangleSet class.; TEveTriangleSetGL GL-renderer for TEveTriangleSet class.; TEveUtil Standard utility functions for Reve.; TEveVSD Visualization Summary Data - a collection of trees holding standard event data in experiment independent format.; TEveVector2T<double> // A two-vector template without TObject inheritance and virtual functions.; TEveVector2T<float> // A two-vector template without TObject inheritance and virtual functions.; TEveVector4T<double> A four-vector template without TObject inheritance and virtual functions.; TEveVector4T<float> A four-vector template without TObject inheritance and virtual functions.; TEveVectorT<double> A three-vector template without TObject inheritance and virtual functions.; TEveVectorT<float> A three-vector template without TObject inheritance and virtual functions.; TEveViewer Reve representation of TGLViewer.; TEveViewerList List of Viewers providing common operations on TEveViewer collections.; TEveViewerListEditor GUI editor for TEveViewerList.; TEveWindow Abstract base-class for eve-windows.; TEveWindowEditor GUI editor for TEveWindow.; TEveWindowFrame Eve-window containing any TGFrame.; TEveWindowManager Manager for EVE windows.; TEveWindowPack Eve-window containing a TGPack.; TEveWindowSlot An unoccupied eve-window slot.;,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:72685,Modifiability,inherit,inheritance,72685,kProjectedGL GL-renderer for TEveTrackProjected class.; TEveTrackPropagator Calculates path of a particle taking into account special path-marks and imposed boundaries.; TEveTrackPropagatorEditor Editor for TEveTrackPropagator class.; TEveTrackPropagatorSubEditor Sub-editor for TEveTrackPropagator class.; TEveTrans Column-major 4x4 transforamtion matrix for homogeneous coordinates.; TEveTransEditor Editor for TEveTrans class.; TEveTransSubEditor Sub-editor for TEveTrans class.; TEveTriangleSet Generic mesh or soup of triangles with per-triangle normals and colors.; TEveTriangleSetEditor Editor for TEveTriangleSet class.; TEveTriangleSetGL GL-renderer for TEveTriangleSet class.; TEveUtil Standard utility functions for Reve.; TEveVSD Visualization Summary Data - a collection of trees holding standard event data in experiment independent format.; TEveVector2T<double> // A two-vector template without TObject inheritance and virtual functions.; TEveVector2T<float> // A two-vector template without TObject inheritance and virtual functions.; TEveVector4T<double> A four-vector template without TObject inheritance and virtual functions.; TEveVector4T<float> A four-vector template without TObject inheritance and virtual functions.; TEveVectorT<double> A three-vector template without TObject inheritance and virtual functions.; TEveVectorT<float> A three-vector template without TObject inheritance and virtual functions.; TEveViewer Reve representation of TGLViewer.; TEveViewerList List of Viewers providing common operations on TEveViewer collections.; TEveViewerListEditor GUI editor for TEveViewerList.; TEveWindow Abstract base-class for eve-windows.; TEveWindowEditor GUI editor for TEveWindow.; TEveWindowFrame Eve-window containing any TGFrame.; TEveWindowManager Manager for EVE windows.; TEveWindowPack Eve-window containing a TGPack.; TEveWindowSlot An unoccupied eve-window slot.; TEveWindowTab Eve-window containing a TGTab.; TEventIter Event iterator used by TProofPlayer's; T,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:72781,Modifiability,inherit,inheritance,72781,particle taking into account special path-marks and imposed boundaries.; TEveTrackPropagatorEditor Editor for TEveTrackPropagator class.; TEveTrackPropagatorSubEditor Sub-editor for TEveTrackPropagator class.; TEveTrans Column-major 4x4 transforamtion matrix for homogeneous coordinates.; TEveTransEditor Editor for TEveTrans class.; TEveTransSubEditor Sub-editor for TEveTrans class.; TEveTriangleSet Generic mesh or soup of triangles with per-triangle normals and colors.; TEveTriangleSetEditor Editor for TEveTriangleSet class.; TEveTriangleSetGL GL-renderer for TEveTriangleSet class.; TEveUtil Standard utility functions for Reve.; TEveVSD Visualization Summary Data - a collection of trees holding standard event data in experiment independent format.; TEveVector2T<double> // A two-vector template without TObject inheritance and virtual functions.; TEveVector2T<float> // A two-vector template without TObject inheritance and virtual functions.; TEveVector4T<double> A four-vector template without TObject inheritance and virtual functions.; TEveVector4T<float> A four-vector template without TObject inheritance and virtual functions.; TEveVectorT<double> A three-vector template without TObject inheritance and virtual functions.; TEveVectorT<float> A three-vector template without TObject inheritance and virtual functions.; TEveViewer Reve representation of TGLViewer.; TEveViewerList List of Viewers providing common operations on TEveViewer collections.; TEveViewerListEditor GUI editor for TEveViewerList.; TEveWindow Abstract base-class for eve-windows.; TEveWindowEditor GUI editor for TEveWindow.; TEveWindowFrame Eve-window containing any TGFrame.; TEveWindowManager Manager for EVE windows.; TEveWindowPack Eve-window containing a TGPack.; TEveWindowSlot An unoccupied eve-window slot.; TEveWindowTab Eve-window containing a TGTab.; TEventIter Event iterator used by TProofPlayer's; TEventIterObj Event iterator for objects; TEventIterTree Event iterator for Trees; TEventIterUnit,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:72876,Modifiability,inherit,inheritance,72876,tor Editor for TEveTrackPropagator class.; TEveTrackPropagatorSubEditor Sub-editor for TEveTrackPropagator class.; TEveTrans Column-major 4x4 transforamtion matrix for homogeneous coordinates.; TEveTransEditor Editor for TEveTrans class.; TEveTransSubEditor Sub-editor for TEveTrans class.; TEveTriangleSet Generic mesh or soup of triangles with per-triangle normals and colors.; TEveTriangleSetEditor Editor for TEveTriangleSet class.; TEveTriangleSetGL GL-renderer for TEveTriangleSet class.; TEveUtil Standard utility functions for Reve.; TEveVSD Visualization Summary Data - a collection of trees holding standard event data in experiment independent format.; TEveVector2T<double> // A two-vector template without TObject inheritance and virtual functions.; TEveVector2T<float> // A two-vector template without TObject inheritance and virtual functions.; TEveVector4T<double> A four-vector template without TObject inheritance and virtual functions.; TEveVector4T<float> A four-vector template without TObject inheritance and virtual functions.; TEveVectorT<double> A three-vector template without TObject inheritance and virtual functions.; TEveVectorT<float> A three-vector template without TObject inheritance and virtual functions.; TEveViewer Reve representation of TGLViewer.; TEveViewerList List of Viewers providing common operations on TEveViewer collections.; TEveViewerListEditor GUI editor for TEveViewerList.; TEveWindow Abstract base-class for eve-windows.; TEveWindowEditor GUI editor for TEveWindow.; TEveWindowFrame Eve-window containing any TGFrame.; TEveWindowManager Manager for EVE windows.; TEveWindowPack Eve-window containing a TGPack.; TEveWindowSlot An unoccupied eve-window slot.; TEveWindowTab Eve-window containing a TGTab.; TEventIter Event iterator used by TProofPlayer's; TEventIterObj Event iterator for objects; TEventIterTree Event iterator for Trees; TEventIterUnit Event iterator for objects; TEventList A list of selected entries in a TTree.; TExMap Map with ,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:72972,Modifiability,inherit,inheritance,72972,Propagator class.; TEveTrans Column-major 4x4 transforamtion matrix for homogeneous coordinates.; TEveTransEditor Editor for TEveTrans class.; TEveTransSubEditor Sub-editor for TEveTrans class.; TEveTriangleSet Generic mesh or soup of triangles with per-triangle normals and colors.; TEveTriangleSetEditor Editor for TEveTriangleSet class.; TEveTriangleSetGL GL-renderer for TEveTriangleSet class.; TEveUtil Standard utility functions for Reve.; TEveVSD Visualization Summary Data - a collection of trees holding standard event data in experiment independent format.; TEveVector2T<double> // A two-vector template without TObject inheritance and virtual functions.; TEveVector2T<float> // A two-vector template without TObject inheritance and virtual functions.; TEveVector4T<double> A four-vector template without TObject inheritance and virtual functions.; TEveVector4T<float> A four-vector template without TObject inheritance and virtual functions.; TEveVectorT<double> A three-vector template without TObject inheritance and virtual functions.; TEveVectorT<float> A three-vector template without TObject inheritance and virtual functions.; TEveViewer Reve representation of TGLViewer.; TEveViewerList List of Viewers providing common operations on TEveViewer collections.; TEveViewerListEditor GUI editor for TEveViewerList.; TEveWindow Abstract base-class for eve-windows.; TEveWindowEditor GUI editor for TEveWindow.; TEveWindowFrame Eve-window containing any TGFrame.; TEveWindowManager Manager for EVE windows.; TEveWindowPack Eve-window containing a TGPack.; TEveWindowSlot An unoccupied eve-window slot.; TEveWindowTab Eve-window containing a TGTab.; TEventIter Event iterator used by TProofPlayer's; TEventIterObj Event iterator for objects; TEventIterTree Event iterator for Trees; TEventIterUnit Event iterator for objects; TEventList A list of selected entries in a TTree.; TExMap Map with external hash; TExMapIter TExMap iterator; TExec To execute a CINT command; TF1 The Parametric ,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:73067,Modifiability,inherit,inheritance,73067,.; TEveTransEditor Editor for TEveTrans class.; TEveTransSubEditor Sub-editor for TEveTrans class.; TEveTriangleSet Generic mesh or soup of triangles with per-triangle normals and colors.; TEveTriangleSetEditor Editor for TEveTriangleSet class.; TEveTriangleSetGL GL-renderer for TEveTriangleSet class.; TEveUtil Standard utility functions for Reve.; TEveVSD Visualization Summary Data - a collection of trees holding standard event data in experiment independent format.; TEveVector2T<double> // A two-vector template without TObject inheritance and virtual functions.; TEveVector2T<float> // A two-vector template without TObject inheritance and virtual functions.; TEveVector4T<double> A four-vector template without TObject inheritance and virtual functions.; TEveVector4T<float> A four-vector template without TObject inheritance and virtual functions.; TEveVectorT<double> A three-vector template without TObject inheritance and virtual functions.; TEveVectorT<float> A three-vector template without TObject inheritance and virtual functions.; TEveViewer Reve representation of TGLViewer.; TEveViewerList List of Viewers providing common operations on TEveViewer collections.; TEveViewerListEditor GUI editor for TEveViewerList.; TEveWindow Abstract base-class for eve-windows.; TEveWindowEditor GUI editor for TEveWindow.; TEveWindowFrame Eve-window containing any TGFrame.; TEveWindowManager Manager for EVE windows.; TEveWindowPack Eve-window containing a TGPack.; TEveWindowSlot An unoccupied eve-window slot.; TEveWindowTab Eve-window containing a TGTab.; TEventIter Event iterator used by TProofPlayer's; TEventIterObj Event iterator for objects; TEventIterTree Event iterator for Trees; TEventIterUnit Event iterator for objects; TEventList A list of selected entries in a TTree.; TExMap Map with external hash; TExMapIter TExMap iterator; TExec To execute a CINT command; TF1 The Parametric 1-D function; TF12 Projection of a TF2 along x or y; TF1Editor user interface for TF1 objects; T,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:75552,Modifiability,adapt,adapting,75552," ROOT file; TFileCacheRead TFile cache when reading; TFileCacheWrite TFile cache when writing; TFileCollection Collection of TFileInfo objects; TFileDrawMap Draw a 2-d map of the objects in a file; TFileHandler Handles events on file descriptors; TFileInfo Describes generic file info including meta data information; TFileInfoMeta Describes TFileInfo meta data; TFileIter TFile class iterator; TFileMergeInfo ; TFileMerger File copying and merging services; TFilePrefetch File block prefetcher; TFileSet TDataSet class to read the native file system directory structure in; TFileStager ABC defining interface to a stager; TFitEditor Fit Panel interface; TFitParametersDialog Fit function parameters dialog; TFitResult Class holding the result of the fit ; TFitResultPtr indirection to TFitResult; TFitter The ROOT standard fitter based on TMinuit; TFitterFumili Fitter based on new Fumili method (Fumili2); TFitterMinuit The ROOT fitter based on new Minuit (Minuit2); TFoam General purpose self-adapting Monte Carlo event generator; TFoamCell Single cell of FOAM; TFoamIntegrand n-dimensional real positive integrand of FOAM; TFoamMaxwt Controlling of the MC weight (maximum weight); TFoamSampler ; TFoamVect n-dimensional vector with dynamical allocation; TFolder Describe a folder: a list of objects and folders; TFormula The formula base class f(x,y,z,par); TFormulaPrimitive The primitive formula ; TFractionFitter Fits MC fractions to data histogram; TFrame Pad graphics frame; TFrameEditor editor of TFrame objects; TFree Description of free segments on a file; TFriendElement A friend element of another TTree; TFumili The FUMILI Minimization package; TFumiliMinimizer Implementation of Minimizer interface using TFumili ; TFunction Dictionary for global function; TFunctionParametersDialog Function parameters dialog; TG16ColorSelector 16 color cells; TGApplication GUI application singleton; TGButton Button widget abstract base class; TGButtonGroup Organizes TGButtons in a group; TGCanvas ",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:77060,Modifiability,plugin,plugin,77060,"nterface to a stager; TFitEditor Fit Panel interface; TFitParametersDialog Fit function parameters dialog; TFitResult Class holding the result of the fit ; TFitResultPtr indirection to TFitResult; TFitter The ROOT standard fitter based on TMinuit; TFitterFumili Fitter based on new Fumili method (Fumili2); TFitterMinuit The ROOT fitter based on new Minuit (Minuit2); TFoam General purpose self-adapting Monte Carlo event generator; TFoamCell Single cell of FOAM; TFoamIntegrand n-dimensional real positive integrand of FOAM; TFoamMaxwt Controlling of the MC weight (maximum weight); TFoamSampler ; TFoamVect n-dimensional vector with dynamical allocation; TFolder Describe a folder: a list of objects and folders; TFormula The formula base class f(x,y,z,par); TFormulaPrimitive The primitive formula ; TFractionFitter Fits MC fractions to data histogram; TFrame Pad graphics frame; TFrameEditor editor of TFrame objects; TFree Description of free segments on a file; TFriendElement A friend element of another TTree; TFumili The FUMILI Minimization package; TFumiliMinimizer Implementation of Minimizer interface using TFumili ; TFunction Dictionary for global function; TFunctionParametersDialog Function parameters dialog; TG16ColorSelector 16 color cells; TGApplication GUI application singleton; TGButton Button widget abstract base class; TGButtonGroup Organizes TGButtons in a group; TGCanvas A canvas with two scrollbars and a viewport; TGCheckButton A check button widget; TGClient Class making connection to display server; TGColorDialog Color selection dialog; TGColorFrame Frame for color cell; TGColorPalette Color palette widget; TGColorPick Color picker widget; TGColorPopup Color selector popup; TGColorSelect Color selection checkbutton; TGColumnLayout Column layout manager; TGComboBox Combo box widget; TGComboBoxPopup Combobox popup window; TGCommandPlugin Command (I/O redirection) plugin for the new ROOT Browser; TGCompositeFrame Base class for composite widgets (menubars, etc.",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:92390,Modifiability,plugin,plugins,92390,"TGeoConeSeg conical tube segment class ; TGeoConeSegEditor TGeoConeSeg editor; TGeoCtub cut tube segment class ; TGeoCtubEditor TGeoCtub editor; TGeoDecayChannel Decay channel for Elements; TGeoElemIter Iterator for radionuclide chains.; TGeoElement base element class; TGeoElementRN radionuclides class; TGeoElementTable table of elements; TGeoEltu elliptical tube class; TGeoEltuEditor TGeoEltu editor; TGeoExtension User extension for volumes and nodes; TGeoGedFrame Common base-class for geombuilder editors.; TGeoGenTrans rotation + translation + scale; TGeoGlobalMagField Global field manager; TGeoGtra G3 GTRA shape; TGeoGtraEditor TGeoGtra editor; TGeoHMatrix global matrix class; TGeoHalfSpace half-space class; TGeoHelix helix class; TGeoHype hyperboloid class; TGeoHypeEditor TGeoHype editor; TGeoIdentity identity transformation class; TGeoIntersection intersection node; TGeoIsotope Isotope class defined by Z,N,A; TGeoIterator Iterator for geometry.; TGeoIteratorPlugin ABC for user plugins connecter to a geometry iterator.; TGeoMCGeometry VMC TGeo Geometry builder; TGeoManager geometry manager; TGeoManagerEditor TGeoManager editor; TGeoMaterial base material class; TGeoMaterialDialog List-Tree based material dialog; TGeoMaterialEditor TGeoMaterial editor; TGeoMatrix base geometrical transformation class; TGeoMatrixDialog List-Tree based matrix dialog; TGeoMedium tracking medium; TGeoMediumDialog List-Tree based medium dialog; TGeoMediumEditor TGeoMedium editor; TGeoMixture material mixtures; TGeoMixtureEditor TGeoMixture editor; TGeoNavigator geometry navigator class; TGeoNavigatorArray An array of navigators; TGeoNode base class for all geometry nodes; TGeoNodeCache cache of reusable physical nodes; TGeoNodeEditor TGeoNode editor; TGeoNodeMatrix a geometry node in the general case; TGeoNodeOffset a geometry node with just an offset; TGeoOverlap base class for geometical overlaps; TGeoPNEntry a physical node entry with unique name; TGeoPainter geometry painter; TGeoP",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:95894,Modifiability,variab,variable,95894,"orus class; TGeoTorusEditor TGeoTorus editor; TGeoTrack geometry tracks class; TGeoTransientPanel List-Tree based dialog; TGeoTranslation translation class; TGeoTranslationEditor TGeoTranslation editor; TGeoTrap G3 TRAP shape; TGeoTrapEditor TGeoTrap editor; TGeoTrd1 TRD1 shape class; TGeoTrd1Editor TGeoTrd1 editor; TGeoTrd2 TRD2 shape class; TGeoTrd2Editor TGeoTrd2 editor; TGeoTreeDialog List-Tree based dialog; TGeoTube cylindrical tube class; TGeoTubeEditor TGeoTube editor; TGeoTubeSeg cylindrical tube segment class ; TGeoTubeSegEditor TGeoTubeSeg editor; TGeoUniformMagField Uniform magnetic field ; TGeoUnion union node; TGeoVolume geometry volume descriptor; TGeoVolumeAssembly an assembly of volumes; TGeoVolumeDialog List-Tree based volume dialog; TGeoVolumeEditor TGeoVolume editor; TGeoVolumeMulti class to handle multiple volumes in one step; TGeoVoxelFinder voxel finder class; TGeoXtru extruded polygon class ; TGeometry Structure for Matrices, Shapes and Nodes; TGlobal Global variable class; TGondzioSolver Gondzio Qp Solver class; TGraph Graph graphics class; TGraph2D Set of n x[n],y[n],z[n] points with 3-d graphics including Delaunay triangulation; TGraph2DErrors A 2D graph with error bars; TGraph2DPainter TGraph2D painter; TGraphAsymmErrors A graph with asymmetric error bars; TGraphBentErrors A graph with bent, asymmetric error bars; TGraphDelaunay Delaunay triangulation; TGraphEdge Graph edge class; TGraphEditor graph editor; TGraphErrors A graph with error bars; TGraphNode Graph node class; TGraphPainter TGraph painter; TGraphPolar Polar graph; TGraphPolargram Polar axis; TGraphQQ to create and to draw quantile-quantile plots; TGraphSmooth Graph Smoother; TGraphStruct Graph structure class; TGraphTime An array of objects evolving with time; TGrid ABC defining interface to GRID services; TGridCollection ABC managing collection of files on the Grid; TGridJDL ABC defining interface JDL generator; TGridJob ABC defining interface to a GRID job; TGridJobStatus ABC",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:101767,Modifiability,plugin,plugins,101767,"ulti-dimensional histogram with templated storage; THnT<int> multi-dimensional histogram with templated storage; THnT<long> multi-dimensional histogram with templated storage; THnT<short> multi-dimensional histogram with templated storage; THnT<unsigned int> multi-dimensional histogram with templated storage; THnT<unsigned long> multi-dimensional histogram with templated storage; THnT<unsigned short> multi-dimensional histogram with templated storage; THostAuth Class providing host specific authentication information; THtml Convert class(es) into HTML file(s); THtml::TFileDefinition helper class to determine a class's source files; THtml::TFileSysDB instance of file system data; THtml::TFileSysDir an directory of the local file system; THtml::TFileSysEntry an entry of the local file system; THtml::TFileSysRoot an root directory of the local file system; THtml::THelperBase a helper object's base class; THtml::TModuleDefinition helper class to determine a class's module; THtml::TPathDefinition helper class to determine directory layouts; THttpCallArg Arguments for single HTTP call; THttpEngine abstract class which should provide http-based protocol for server; THttpServer HTTP server for ROOT analysis; TImage Abstract image class; TImageDump create image in batch mode; TImagePalette Color Palette for value -> color conversion; TImagePlugin base class for different image format handlers(plugins); TIndArray ; TIndexTable ""Index"" array for TTable object; TIndexTable::iterator ; TInetAddress Represents an Internet Protocol (IP) address; TInspectCanvas The canvas Inspector; TInspectorImp GUI independent inspector abc; TInterpreter ABC defining interface to generic interpreter; TIsAProxy ; TIter Iterator wrapper; TIterator Iterator abstract base class; TKDE One dimensional semi-parametric Kernel Density Estimation; TKDTree<int,double> KD tree; TKDTree<int,float> KD tree; TKDTreeBinning ; TKSocket General kerberized socket; TKey Header description of a logical record on file.",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:102663,Modifiability,variab,variable,102663,"olor Palette for value -> color conversion; TImagePlugin base class for different image format handlers(plugins); TIndArray ; TIndexTable ""Index"" array for TTable object; TIndexTable::iterator ; TInetAddress Represents an Internet Protocol (IP) address; TInspectCanvas The canvas Inspector; TInspectorImp GUI independent inspector abc; TInterpreter ABC defining interface to generic interpreter; TIsAProxy ; TIter Iterator wrapper; TIterator Iterator abstract base class; TKDE One dimensional semi-parametric Kernel Density Estimation; TKDTree<int,double> KD tree; TKDTree<int,float> KD tree; TKDTreeBinning ; TKSocket General kerberized socket; TKey Header description of a logical record on file.; TKeyMapFile Utility class for browsing TMapFile objects.; TKeySQL a special TKey for SQL data base; TKeyXML a special TKey for XML files ; TLatex The Latex-style text processor class; TLeaf Leaf: description of a Branch data type; TLeafB A TLeaf for an 8 bit Integer data type.; TLeafC A TLeaf for a variable length string.; TLeafD A TLeaf for a 64 bit floating point data type.; TLeafElement A TLeaf for a general object derived from TObject.; TLeafF A TLeaf for a 32 bit floating point data type.; TLeafI A TLeaf for an Integer data type.; TLeafL A TLeaf for a 64 bit Integer data type.; TLeafO A TLeaf for an 8 bit Integer data type.; TLeafObject A TLeaf for a general object derived from TObject.; TLeafS A TLeaf for a 16 bit Integer data type.; TLegend Legend of markers/lines/boxes to represent obj's; TLegendEntry Storage class for one entry of a TLegend; TLibraryDocInfo documentation for a library; TLimit Class to compute 95% CL limits; TLimitDataSource input for TLimit routines; TLine A line segment; TLineEditor GUI for editing Line attributes; TLinearFitter fit a set of data points with a linear combination of functions; TLinearGradient Linear gradient fill.; TLinearMinimizer Implementation of the Minimizer interface using TLinearFitter ; TLink Link: hypertext link to an object; TL",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:104363,Modifiability,Config,Config,104363,,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:104397,Modifiability,config,configuration,104397,,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:104427,Modifiability,Config,Config,104427,,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:104451,Modifiability,Config,Config,104451,,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:104459,Modifiability,Variab,VariablePlotting,104459,,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:104484,Modifiability,Config,Configurable,104484,,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:108647,Modifiability,variab,variables,108647,DEFoam; TMVA::PDEFoamDecisionTreeDensity Class for decision tree like PDEFoam density; TMVA::PDEFoamDensityBase PDEFoam event density interface; TMVA::PDEFoamDiscriminant Tree of PDEFoamCells; TMVA::PDEFoamDiscriminantDensity Class for Discriminant density; TMVA::PDEFoamEvent Tree of PDEFoamCells; TMVA::PDEFoamEventDensity Class for Event density; TMVA::PDEFoamKernelBase PDEFoam kernel interface; TMVA::PDEFoamKernelGauss Gaussian PDEFoam kernel estimator; TMVA::PDEFoamKernelLinN next neighbor PDEFoam kernel estimator; TMVA::PDEFoamKernelTrivial trivial PDEFoam kernel estimator; TMVA::PDEFoamMultiTarget Tree of PDEFoamCells; TMVA::PDEFoamTarget Tree of PDEFoamCells; TMVA::PDEFoamTargetDensity Class for Target density; TMVA::PDEFoamVect n-dimensional vector with dynamical allocation; TMVA::PDF PDF wrapper for histograms; TMVA::QuickMVAProbEstimator Interface to different separation critiera used in training algorithms; TMVA::ROCCalc ; TMVA::Ranking Method-specific ranking for input variables ; TMVA::Reader Interpret the trained MVAs in an analysis context; TMVA::RegressionVariance Interface to different separation critiera used in training algorithms; TMVA::RootFinder Root finding using Brents algorithm; TMVA::RuleFit Calculations for Friedman's RuleFit method; TMVA::RuleFitAPI Friedman's RuleFit method; TMVA::SVEvent Event for SVM; TMVA::SdivSqrtSplusB Implementation of the SdivSqrtSplusB as separation criterion; TMVA::SeparationBase Interface to different separation critiera used in training algorithms; TMVA::SimulatedAnnealing Base class for Simulated Annealing fitting; TMVA::SimulatedAnnealingFitter Fitter using a Simulated Annealing Algorithm; TMVA::TActivation Interface for TNeuron activation function classes; TMVA::TActivationChooser Class for choosing activation functions; TMVA::TActivationIdentity Identity activation function for TNeuron; TMVA::TActivationRadial Radial basis activation function for TNeuron; TMVA::TActivationSigmoid Sigmoid activation function,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:110448,Modifiability,Variab,VariableDecorrTransform,110448,lementation of the SdivSqrtSplusB as separation criterion; TMVA::SeparationBase Interface to different separation critiera used in training algorithms; TMVA::SimulatedAnnealing Base class for Simulated Annealing fitting; TMVA::SimulatedAnnealingFitter Fitter using a Simulated Annealing Algorithm; TMVA::TActivation Interface for TNeuron activation function classes; TMVA::TActivationChooser Class for choosing activation functions; TMVA::TActivationIdentity Identity activation function for TNeuron; TMVA::TActivationRadial Radial basis activation function for TNeuron; TMVA::TActivationSigmoid Sigmoid activation function for TNeuron; TMVA::TActivationTanh Tanh sigmoid activation function for TNeuron; TMVA::TNeuron Neuron class used by MethodANNBase derivative ANNs; TMVA::TNeuronInput Interface for TNeuron input calculation classes; TMVA::TNeuronInputAbs Calculates the sum of the absolute values of the weighted inputs; TMVA::TNeuronInputChooser Class for choosing neuron input functions ; TMVA::TNeuronInputSqSum Calculates square of weighted sum of neuron inputs; TMVA::TNeuronInputSum Calculates weighted sum of neuron inputs; TMVA::TSpline1 Linear interpolation class; TMVA::TSpline2 Quadratic interpolation class (using quadrax); TMVA::TSynapse Synapse class used by MethodANNBase and derivatives; TMVA::Timer Timing information for training and evaluation of MVA methods; TMVA::Tools ; TMVA::Types ; TMVA::VariableDecorrTransform Variable transformation: decorrelation; TMVA::VariableGaussTransform Variable transformation: Gauss transformation; TMVA::VariableIdentityTransform Variable transformation: identity; TMVA::VariableNormalizeTransform Variable transformation: normalization; TMVA::VariablePCATransform Variable transformation: Principal Value Composition; TMVA::VariableRearrangeTransform Variable transformation: normalization; TMVA::VariableTransformBase Base class for variable transformations; TMVA::kNN::Event ; TMacro Class supporting a collection of lines with C++ code.,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:110472,Modifiability,Variab,Variable,110472,lementation of the SdivSqrtSplusB as separation criterion; TMVA::SeparationBase Interface to different separation critiera used in training algorithms; TMVA::SimulatedAnnealing Base class for Simulated Annealing fitting; TMVA::SimulatedAnnealingFitter Fitter using a Simulated Annealing Algorithm; TMVA::TActivation Interface for TNeuron activation function classes; TMVA::TActivationChooser Class for choosing activation functions; TMVA::TActivationIdentity Identity activation function for TNeuron; TMVA::TActivationRadial Radial basis activation function for TNeuron; TMVA::TActivationSigmoid Sigmoid activation function for TNeuron; TMVA::TActivationTanh Tanh sigmoid activation function for TNeuron; TMVA::TNeuron Neuron class used by MethodANNBase derivative ANNs; TMVA::TNeuronInput Interface for TNeuron input calculation classes; TMVA::TNeuronInputAbs Calculates the sum of the absolute values of the weighted inputs; TMVA::TNeuronInputChooser Class for choosing neuron input functions ; TMVA::TNeuronInputSqSum Calculates square of weighted sum of neuron inputs; TMVA::TNeuronInputSum Calculates weighted sum of neuron inputs; TMVA::TSpline1 Linear interpolation class; TMVA::TSpline2 Quadratic interpolation class (using quadrax); TMVA::TSynapse Synapse class used by MethodANNBase and derivatives; TMVA::Timer Timing information for training and evaluation of MVA methods; TMVA::Tools ; TMVA::Types ; TMVA::VariableDecorrTransform Variable transformation: decorrelation; TMVA::VariableGaussTransform Variable transformation: Gauss transformation; TMVA::VariableIdentityTransform Variable transformation: identity; TMVA::VariableNormalizeTransform Variable transformation: normalization; TMVA::VariablePCATransform Variable transformation: Principal Value Composition; TMVA::VariableRearrangeTransform Variable transformation: normalization; TMVA::VariableTransformBase Base class for variable transformations; TMVA::kNN::Event ; TMacro Class supporting a collection of lines with C++ code.,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:110518,Modifiability,Variab,VariableGaussTransform,110518,lementation of the SdivSqrtSplusB as separation criterion; TMVA::SeparationBase Interface to different separation critiera used in training algorithms; TMVA::SimulatedAnnealing Base class for Simulated Annealing fitting; TMVA::SimulatedAnnealingFitter Fitter using a Simulated Annealing Algorithm; TMVA::TActivation Interface for TNeuron activation function classes; TMVA::TActivationChooser Class for choosing activation functions; TMVA::TActivationIdentity Identity activation function for TNeuron; TMVA::TActivationRadial Radial basis activation function for TNeuron; TMVA::TActivationSigmoid Sigmoid activation function for TNeuron; TMVA::TActivationTanh Tanh sigmoid activation function for TNeuron; TMVA::TNeuron Neuron class used by MethodANNBase derivative ANNs; TMVA::TNeuronInput Interface for TNeuron input calculation classes; TMVA::TNeuronInputAbs Calculates the sum of the absolute values of the weighted inputs; TMVA::TNeuronInputChooser Class for choosing neuron input functions ; TMVA::TNeuronInputSqSum Calculates square of weighted sum of neuron inputs; TMVA::TNeuronInputSum Calculates weighted sum of neuron inputs; TMVA::TSpline1 Linear interpolation class; TMVA::TSpline2 Quadratic interpolation class (using quadrax); TMVA::TSynapse Synapse class used by MethodANNBase and derivatives; TMVA::Timer Timing information for training and evaluation of MVA methods; TMVA::Tools ; TMVA::Types ; TMVA::VariableDecorrTransform Variable transformation: decorrelation; TMVA::VariableGaussTransform Variable transformation: Gauss transformation; TMVA::VariableIdentityTransform Variable transformation: identity; TMVA::VariableNormalizeTransform Variable transformation: normalization; TMVA::VariablePCATransform Variable transformation: Principal Value Composition; TMVA::VariableRearrangeTransform Variable transformation: normalization; TMVA::VariableTransformBase Base class for variable transformations; TMVA::kNN::Event ; TMacro Class supporting a collection of lines with C++ code.,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:110541,Modifiability,Variab,Variable,110541,lementation of the SdivSqrtSplusB as separation criterion; TMVA::SeparationBase Interface to different separation critiera used in training algorithms; TMVA::SimulatedAnnealing Base class for Simulated Annealing fitting; TMVA::SimulatedAnnealingFitter Fitter using a Simulated Annealing Algorithm; TMVA::TActivation Interface for TNeuron activation function classes; TMVA::TActivationChooser Class for choosing activation functions; TMVA::TActivationIdentity Identity activation function for TNeuron; TMVA::TActivationRadial Radial basis activation function for TNeuron; TMVA::TActivationSigmoid Sigmoid activation function for TNeuron; TMVA::TActivationTanh Tanh sigmoid activation function for TNeuron; TMVA::TNeuron Neuron class used by MethodANNBase derivative ANNs; TMVA::TNeuronInput Interface for TNeuron input calculation classes; TMVA::TNeuronInputAbs Calculates the sum of the absolute values of the weighted inputs; TMVA::TNeuronInputChooser Class for choosing neuron input functions ; TMVA::TNeuronInputSqSum Calculates square of weighted sum of neuron inputs; TMVA::TNeuronInputSum Calculates weighted sum of neuron inputs; TMVA::TSpline1 Linear interpolation class; TMVA::TSpline2 Quadratic interpolation class (using quadrax); TMVA::TSynapse Synapse class used by MethodANNBase and derivatives; TMVA::Timer Timing information for training and evaluation of MVA methods; TMVA::Tools ; TMVA::Types ; TMVA::VariableDecorrTransform Variable transformation: decorrelation; TMVA::VariableGaussTransform Variable transformation: Gauss transformation; TMVA::VariableIdentityTransform Variable transformation: identity; TMVA::VariableNormalizeTransform Variable transformation: normalization; TMVA::VariablePCATransform Variable transformation: Principal Value Composition; TMVA::VariableRearrangeTransform Variable transformation: normalization; TMVA::VariableTransformBase Base class for variable transformations; TMVA::kNN::Event ; TMacro Class supporting a collection of lines with C++ code.,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:110594,Modifiability,Variab,VariableIdentityTransform,110594,lementation of the SdivSqrtSplusB as separation criterion; TMVA::SeparationBase Interface to different separation critiera used in training algorithms; TMVA::SimulatedAnnealing Base class for Simulated Annealing fitting; TMVA::SimulatedAnnealingFitter Fitter using a Simulated Annealing Algorithm; TMVA::TActivation Interface for TNeuron activation function classes; TMVA::TActivationChooser Class for choosing activation functions; TMVA::TActivationIdentity Identity activation function for TNeuron; TMVA::TActivationRadial Radial basis activation function for TNeuron; TMVA::TActivationSigmoid Sigmoid activation function for TNeuron; TMVA::TActivationTanh Tanh sigmoid activation function for TNeuron; TMVA::TNeuron Neuron class used by MethodANNBase derivative ANNs; TMVA::TNeuronInput Interface for TNeuron input calculation classes; TMVA::TNeuronInputAbs Calculates the sum of the absolute values of the weighted inputs; TMVA::TNeuronInputChooser Class for choosing neuron input functions ; TMVA::TNeuronInputSqSum Calculates square of weighted sum of neuron inputs; TMVA::TNeuronInputSum Calculates weighted sum of neuron inputs; TMVA::TSpline1 Linear interpolation class; TMVA::TSpline2 Quadratic interpolation class (using quadrax); TMVA::TSynapse Synapse class used by MethodANNBase and derivatives; TMVA::Timer Timing information for training and evaluation of MVA methods; TMVA::Tools ; TMVA::Types ; TMVA::VariableDecorrTransform Variable transformation: decorrelation; TMVA::VariableGaussTransform Variable transformation: Gauss transformation; TMVA::VariableIdentityTransform Variable transformation: identity; TMVA::VariableNormalizeTransform Variable transformation: normalization; TMVA::VariablePCATransform Variable transformation: Principal Value Composition; TMVA::VariableRearrangeTransform Variable transformation: normalization; TMVA::VariableTransformBase Base class for variable transformations; TMVA::kNN::Event ; TMacro Class supporting a collection of lines with C++ code.,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:110620,Modifiability,Variab,Variable,110620,lementation of the SdivSqrtSplusB as separation criterion; TMVA::SeparationBase Interface to different separation critiera used in training algorithms; TMVA::SimulatedAnnealing Base class for Simulated Annealing fitting; TMVA::SimulatedAnnealingFitter Fitter using a Simulated Annealing Algorithm; TMVA::TActivation Interface for TNeuron activation function classes; TMVA::TActivationChooser Class for choosing activation functions; TMVA::TActivationIdentity Identity activation function for TNeuron; TMVA::TActivationRadial Radial basis activation function for TNeuron; TMVA::TActivationSigmoid Sigmoid activation function for TNeuron; TMVA::TActivationTanh Tanh sigmoid activation function for TNeuron; TMVA::TNeuron Neuron class used by MethodANNBase derivative ANNs; TMVA::TNeuronInput Interface for TNeuron input calculation classes; TMVA::TNeuronInputAbs Calculates the sum of the absolute values of the weighted inputs; TMVA::TNeuronInputChooser Class for choosing neuron input functions ; TMVA::TNeuronInputSqSum Calculates square of weighted sum of neuron inputs; TMVA::TNeuronInputSum Calculates weighted sum of neuron inputs; TMVA::TSpline1 Linear interpolation class; TMVA::TSpline2 Quadratic interpolation class (using quadrax); TMVA::TSynapse Synapse class used by MethodANNBase and derivatives; TMVA::Timer Timing information for training and evaluation of MVA methods; TMVA::Tools ; TMVA::Types ; TMVA::VariableDecorrTransform Variable transformation: decorrelation; TMVA::VariableGaussTransform Variable transformation: Gauss transformation; TMVA::VariableIdentityTransform Variable transformation: identity; TMVA::VariableNormalizeTransform Variable transformation: normalization; TMVA::VariablePCATransform Variable transformation: Principal Value Composition; TMVA::VariableRearrangeTransform Variable transformation: normalization; TMVA::VariableTransformBase Base class for variable transformations; TMVA::kNN::Event ; TMacro Class supporting a collection of lines with C++ code.,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:110661,Modifiability,Variab,VariableNormalizeTransform,110661,lementation of the SdivSqrtSplusB as separation criterion; TMVA::SeparationBase Interface to different separation critiera used in training algorithms; TMVA::SimulatedAnnealing Base class for Simulated Annealing fitting; TMVA::SimulatedAnnealingFitter Fitter using a Simulated Annealing Algorithm; TMVA::TActivation Interface for TNeuron activation function classes; TMVA::TActivationChooser Class for choosing activation functions; TMVA::TActivationIdentity Identity activation function for TNeuron; TMVA::TActivationRadial Radial basis activation function for TNeuron; TMVA::TActivationSigmoid Sigmoid activation function for TNeuron; TMVA::TActivationTanh Tanh sigmoid activation function for TNeuron; TMVA::TNeuron Neuron class used by MethodANNBase derivative ANNs; TMVA::TNeuronInput Interface for TNeuron input calculation classes; TMVA::TNeuronInputAbs Calculates the sum of the absolute values of the weighted inputs; TMVA::TNeuronInputChooser Class for choosing neuron input functions ; TMVA::TNeuronInputSqSum Calculates square of weighted sum of neuron inputs; TMVA::TNeuronInputSum Calculates weighted sum of neuron inputs; TMVA::TSpline1 Linear interpolation class; TMVA::TSpline2 Quadratic interpolation class (using quadrax); TMVA::TSynapse Synapse class used by MethodANNBase and derivatives; TMVA::Timer Timing information for training and evaluation of MVA methods; TMVA::Tools ; TMVA::Types ; TMVA::VariableDecorrTransform Variable transformation: decorrelation; TMVA::VariableGaussTransform Variable transformation: Gauss transformation; TMVA::VariableIdentityTransform Variable transformation: identity; TMVA::VariableNormalizeTransform Variable transformation: normalization; TMVA::VariablePCATransform Variable transformation: Principal Value Composition; TMVA::VariableRearrangeTransform Variable transformation: normalization; TMVA::VariableTransformBase Base class for variable transformations; TMVA::kNN::Event ; TMacro Class supporting a collection of lines with C++ code.,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:110688,Modifiability,Variab,Variable,110688,lementation of the SdivSqrtSplusB as separation criterion; TMVA::SeparationBase Interface to different separation critiera used in training algorithms; TMVA::SimulatedAnnealing Base class for Simulated Annealing fitting; TMVA::SimulatedAnnealingFitter Fitter using a Simulated Annealing Algorithm; TMVA::TActivation Interface for TNeuron activation function classes; TMVA::TActivationChooser Class for choosing activation functions; TMVA::TActivationIdentity Identity activation function for TNeuron; TMVA::TActivationRadial Radial basis activation function for TNeuron; TMVA::TActivationSigmoid Sigmoid activation function for TNeuron; TMVA::TActivationTanh Tanh sigmoid activation function for TNeuron; TMVA::TNeuron Neuron class used by MethodANNBase derivative ANNs; TMVA::TNeuronInput Interface for TNeuron input calculation classes; TMVA::TNeuronInputAbs Calculates the sum of the absolute values of the weighted inputs; TMVA::TNeuronInputChooser Class for choosing neuron input functions ; TMVA::TNeuronInputSqSum Calculates square of weighted sum of neuron inputs; TMVA::TNeuronInputSum Calculates weighted sum of neuron inputs; TMVA::TSpline1 Linear interpolation class; TMVA::TSpline2 Quadratic interpolation class (using quadrax); TMVA::TSynapse Synapse class used by MethodANNBase and derivatives; TMVA::Timer Timing information for training and evaluation of MVA methods; TMVA::Tools ; TMVA::Types ; TMVA::VariableDecorrTransform Variable transformation: decorrelation; TMVA::VariableGaussTransform Variable transformation: Gauss transformation; TMVA::VariableIdentityTransform Variable transformation: identity; TMVA::VariableNormalizeTransform Variable transformation: normalization; TMVA::VariablePCATransform Variable transformation: Principal Value Composition; TMVA::VariableRearrangeTransform Variable transformation: normalization; TMVA::VariableTransformBase Base class for variable transformations; TMVA::kNN::Event ; TMacro Class supporting a collection of lines with C++ code.,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:110734,Modifiability,Variab,VariablePCATransform,110734,lementation of the SdivSqrtSplusB as separation criterion; TMVA::SeparationBase Interface to different separation critiera used in training algorithms; TMVA::SimulatedAnnealing Base class for Simulated Annealing fitting; TMVA::SimulatedAnnealingFitter Fitter using a Simulated Annealing Algorithm; TMVA::TActivation Interface for TNeuron activation function classes; TMVA::TActivationChooser Class for choosing activation functions; TMVA::TActivationIdentity Identity activation function for TNeuron; TMVA::TActivationRadial Radial basis activation function for TNeuron; TMVA::TActivationSigmoid Sigmoid activation function for TNeuron; TMVA::TActivationTanh Tanh sigmoid activation function for TNeuron; TMVA::TNeuron Neuron class used by MethodANNBase derivative ANNs; TMVA::TNeuronInput Interface for TNeuron input calculation classes; TMVA::TNeuronInputAbs Calculates the sum of the absolute values of the weighted inputs; TMVA::TNeuronInputChooser Class for choosing neuron input functions ; TMVA::TNeuronInputSqSum Calculates square of weighted sum of neuron inputs; TMVA::TNeuronInputSum Calculates weighted sum of neuron inputs; TMVA::TSpline1 Linear interpolation class; TMVA::TSpline2 Quadratic interpolation class (using quadrax); TMVA::TSynapse Synapse class used by MethodANNBase and derivatives; TMVA::Timer Timing information for training and evaluation of MVA methods; TMVA::Tools ; TMVA::Types ; TMVA::VariableDecorrTransform Variable transformation: decorrelation; TMVA::VariableGaussTransform Variable transformation: Gauss transformation; TMVA::VariableIdentityTransform Variable transformation: identity; TMVA::VariableNormalizeTransform Variable transformation: normalization; TMVA::VariablePCATransform Variable transformation: Principal Value Composition; TMVA::VariableRearrangeTransform Variable transformation: normalization; TMVA::VariableTransformBase Base class for variable transformations; TMVA::kNN::Event ; TMacro Class supporting a collection of lines with C++ code.,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:110755,Modifiability,Variab,Variable,110755,lementation of the SdivSqrtSplusB as separation criterion; TMVA::SeparationBase Interface to different separation critiera used in training algorithms; TMVA::SimulatedAnnealing Base class for Simulated Annealing fitting; TMVA::SimulatedAnnealingFitter Fitter using a Simulated Annealing Algorithm; TMVA::TActivation Interface for TNeuron activation function classes; TMVA::TActivationChooser Class for choosing activation functions; TMVA::TActivationIdentity Identity activation function for TNeuron; TMVA::TActivationRadial Radial basis activation function for TNeuron; TMVA::TActivationSigmoid Sigmoid activation function for TNeuron; TMVA::TActivationTanh Tanh sigmoid activation function for TNeuron; TMVA::TNeuron Neuron class used by MethodANNBase derivative ANNs; TMVA::TNeuronInput Interface for TNeuron input calculation classes; TMVA::TNeuronInputAbs Calculates the sum of the absolute values of the weighted inputs; TMVA::TNeuronInputChooser Class for choosing neuron input functions ; TMVA::TNeuronInputSqSum Calculates square of weighted sum of neuron inputs; TMVA::TNeuronInputSum Calculates weighted sum of neuron inputs; TMVA::TSpline1 Linear interpolation class; TMVA::TSpline2 Quadratic interpolation class (using quadrax); TMVA::TSynapse Synapse class used by MethodANNBase and derivatives; TMVA::Timer Timing information for training and evaluation of MVA methods; TMVA::Tools ; TMVA::Types ; TMVA::VariableDecorrTransform Variable transformation: decorrelation; TMVA::VariableGaussTransform Variable transformation: Gauss transformation; TMVA::VariableIdentityTransform Variable transformation: identity; TMVA::VariableNormalizeTransform Variable transformation: normalization; TMVA::VariablePCATransform Variable transformation: Principal Value Composition; TMVA::VariableRearrangeTransform Variable transformation: normalization; TMVA::VariableTransformBase Base class for variable transformations; TMVA::kNN::Event ; TMacro Class supporting a collection of lines with C++ code.,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:110815,Modifiability,Variab,VariableRearrangeTransform,110815,lementation of the SdivSqrtSplusB as separation criterion; TMVA::SeparationBase Interface to different separation critiera used in training algorithms; TMVA::SimulatedAnnealing Base class for Simulated Annealing fitting; TMVA::SimulatedAnnealingFitter Fitter using a Simulated Annealing Algorithm; TMVA::TActivation Interface for TNeuron activation function classes; TMVA::TActivationChooser Class for choosing activation functions; TMVA::TActivationIdentity Identity activation function for TNeuron; TMVA::TActivationRadial Radial basis activation function for TNeuron; TMVA::TActivationSigmoid Sigmoid activation function for TNeuron; TMVA::TActivationTanh Tanh sigmoid activation function for TNeuron; TMVA::TNeuron Neuron class used by MethodANNBase derivative ANNs; TMVA::TNeuronInput Interface for TNeuron input calculation classes; TMVA::TNeuronInputAbs Calculates the sum of the absolute values of the weighted inputs; TMVA::TNeuronInputChooser Class for choosing neuron input functions ; TMVA::TNeuronInputSqSum Calculates square of weighted sum of neuron inputs; TMVA::TNeuronInputSum Calculates weighted sum of neuron inputs; TMVA::TSpline1 Linear interpolation class; TMVA::TSpline2 Quadratic interpolation class (using quadrax); TMVA::TSynapse Synapse class used by MethodANNBase and derivatives; TMVA::Timer Timing information for training and evaluation of MVA methods; TMVA::Tools ; TMVA::Types ; TMVA::VariableDecorrTransform Variable transformation: decorrelation; TMVA::VariableGaussTransform Variable transformation: Gauss transformation; TMVA::VariableIdentityTransform Variable transformation: identity; TMVA::VariableNormalizeTransform Variable transformation: normalization; TMVA::VariablePCATransform Variable transformation: Principal Value Composition; TMVA::VariableRearrangeTransform Variable transformation: normalization; TMVA::VariableTransformBase Base class for variable transformations; TMVA::kNN::Event ; TMacro Class supporting a collection of lines with C++ code.,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:110842,Modifiability,Variab,Variable,110842,lementation of the SdivSqrtSplusB as separation criterion; TMVA::SeparationBase Interface to different separation critiera used in training algorithms; TMVA::SimulatedAnnealing Base class for Simulated Annealing fitting; TMVA::SimulatedAnnealingFitter Fitter using a Simulated Annealing Algorithm; TMVA::TActivation Interface for TNeuron activation function classes; TMVA::TActivationChooser Class for choosing activation functions; TMVA::TActivationIdentity Identity activation function for TNeuron; TMVA::TActivationRadial Radial basis activation function for TNeuron; TMVA::TActivationSigmoid Sigmoid activation function for TNeuron; TMVA::TActivationTanh Tanh sigmoid activation function for TNeuron; TMVA::TNeuron Neuron class used by MethodANNBase derivative ANNs; TMVA::TNeuronInput Interface for TNeuron input calculation classes; TMVA::TNeuronInputAbs Calculates the sum of the absolute values of the weighted inputs; TMVA::TNeuronInputChooser Class for choosing neuron input functions ; TMVA::TNeuronInputSqSum Calculates square of weighted sum of neuron inputs; TMVA::TNeuronInputSum Calculates weighted sum of neuron inputs; TMVA::TSpline1 Linear interpolation class; TMVA::TSpline2 Quadratic interpolation class (using quadrax); TMVA::TSynapse Synapse class used by MethodANNBase and derivatives; TMVA::Timer Timing information for training and evaluation of MVA methods; TMVA::Tools ; TMVA::Types ; TMVA::VariableDecorrTransform Variable transformation: decorrelation; TMVA::VariableGaussTransform Variable transformation: Gauss transformation; TMVA::VariableIdentityTransform Variable transformation: identity; TMVA::VariableNormalizeTransform Variable transformation: normalization; TMVA::VariablePCATransform Variable transformation: Principal Value Composition; TMVA::VariableRearrangeTransform Variable transformation: normalization; TMVA::VariableTransformBase Base class for variable transformations; TMVA::kNN::Event ; TMacro Class supporting a collection of lines with C++ code.,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:110888,Modifiability,Variab,VariableTransformBase,110888,lementation of the SdivSqrtSplusB as separation criterion; TMVA::SeparationBase Interface to different separation critiera used in training algorithms; TMVA::SimulatedAnnealing Base class for Simulated Annealing fitting; TMVA::SimulatedAnnealingFitter Fitter using a Simulated Annealing Algorithm; TMVA::TActivation Interface for TNeuron activation function classes; TMVA::TActivationChooser Class for choosing activation functions; TMVA::TActivationIdentity Identity activation function for TNeuron; TMVA::TActivationRadial Radial basis activation function for TNeuron; TMVA::TActivationSigmoid Sigmoid activation function for TNeuron; TMVA::TActivationTanh Tanh sigmoid activation function for TNeuron; TMVA::TNeuron Neuron class used by MethodANNBase derivative ANNs; TMVA::TNeuronInput Interface for TNeuron input calculation classes; TMVA::TNeuronInputAbs Calculates the sum of the absolute values of the weighted inputs; TMVA::TNeuronInputChooser Class for choosing neuron input functions ; TMVA::TNeuronInputSqSum Calculates square of weighted sum of neuron inputs; TMVA::TNeuronInputSum Calculates weighted sum of neuron inputs; TMVA::TSpline1 Linear interpolation class; TMVA::TSpline2 Quadratic interpolation class (using quadrax); TMVA::TSynapse Synapse class used by MethodANNBase and derivatives; TMVA::Timer Timing information for training and evaluation of MVA methods; TMVA::Tools ; TMVA::Types ; TMVA::VariableDecorrTransform Variable transformation: decorrelation; TMVA::VariableGaussTransform Variable transformation: Gauss transformation; TMVA::VariableIdentityTransform Variable transformation: identity; TMVA::VariableNormalizeTransform Variable transformation: normalization; TMVA::VariablePCATransform Variable transformation: Principal Value Composition; TMVA::VariableRearrangeTransform Variable transformation: normalization; TMVA::VariableTransformBase Base class for variable transformations; TMVA::kNN::Event ; TMacro Class supporting a collection of lines with C++ code.,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:110925,Modifiability,variab,variable,110925,lementation of the SdivSqrtSplusB as separation criterion; TMVA::SeparationBase Interface to different separation critiera used in training algorithms; TMVA::SimulatedAnnealing Base class for Simulated Annealing fitting; TMVA::SimulatedAnnealingFitter Fitter using a Simulated Annealing Algorithm; TMVA::TActivation Interface for TNeuron activation function classes; TMVA::TActivationChooser Class for choosing activation functions; TMVA::TActivationIdentity Identity activation function for TNeuron; TMVA::TActivationRadial Radial basis activation function for TNeuron; TMVA::TActivationSigmoid Sigmoid activation function for TNeuron; TMVA::TActivationTanh Tanh sigmoid activation function for TNeuron; TMVA::TNeuron Neuron class used by MethodANNBase derivative ANNs; TMVA::TNeuronInput Interface for TNeuron input calculation classes; TMVA::TNeuronInputAbs Calculates the sum of the absolute values of the weighted inputs; TMVA::TNeuronInputChooser Class for choosing neuron input functions ; TMVA::TNeuronInputSqSum Calculates square of weighted sum of neuron inputs; TMVA::TNeuronInputSum Calculates weighted sum of neuron inputs; TMVA::TSpline1 Linear interpolation class; TMVA::TSpline2 Quadratic interpolation class (using quadrax); TMVA::TSynapse Synapse class used by MethodANNBase and derivatives; TMVA::Timer Timing information for training and evaluation of MVA methods; TMVA::Tools ; TMVA::Types ; TMVA::VariableDecorrTransform Variable transformation: decorrelation; TMVA::VariableGaussTransform Variable transformation: Gauss transformation; TMVA::VariableIdentityTransform Variable transformation: identity; TMVA::VariableNormalizeTransform Variable transformation: normalization; TMVA::VariablePCATransform Variable transformation: Principal Value Composition; TMVA::VariableRearrangeTransform Variable transformation: normalization; TMVA::VariableTransformBase Base class for variable transformations; TMVA::kNN::Event ; TMacro Class supporting a collection of lines with C++ code.,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:119013,Modifiability,Variab,Variable,119013," TPacketizer Generate work packets for parallel processing; TPacketizerAdaptive Generate work packets for parallel processing; TPacketizerFile Generate work packets for parallel processing; TPacketizerMulti Generate work packets for parallel processing; TPacketizerUnit Generate work packets for parallel processing; TPad A Graphics pad; TPadEditor editor of TPad objects; TPadPainter Abstract interface for painting in TPad; TPainter3dAlgorithms Hidden line removal package; TPair Pair TObject*, TObject*; TPaletteAxis class used to display a color palette axis for 2-d plots; TPaletteEditor Base class for palette editor; TParallelCoord To display parallel coordinates plots.; TParallelCoordEditor GUI for editing the parallel coordinates plot attributes.; TParallelCoordRange A TParallelCoordRange is a range used for parallel coordinates plots.; TParallelCoordSelect A TParallelCoordSelect is a specialised TList to hold TParallelCoordRanges used by TParallelCoord.; TParallelCoordVar A Variable of a parallel coordinates plot.; TParallelMergingFile TFile specialization that will semi-automatically upload its content to a merging server.; TParameter<Long64_t> Named templated parameter type; TParameter<bool> Named templated parameter type; TParameter<double> Named templated parameter type; TParameter<float> Named templated parameter type; TParameter<int> Named templated parameter type; TParameter<long> Named templated parameter type; TParticle TParticle vertex particle information; TParticleClassPDG PDG static particle definition; TParticlePDG PDG static particle definition; TPave Pave. A box with shadowing; TPaveClass A TPaveLabel specialized for TClassTree objects; TPaveLabel PaveLabel. A Pave with a label; TPaveStats A special TPaveText to draw histogram statistics.; TPaveStatsEditor GUI for editing TPaveStats; TPaveText PaveText. A Pave with several lines of text.; TPavesText Stacked Paves with text strings; TPerfEvent Class holding TProof Event Info; TPerfStats Class for co",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:120222,Modifiability,plugin,plugin,120222,"load its content to a merging server.; TParameter<Long64_t> Named templated parameter type; TParameter<bool> Named templated parameter type; TParameter<double> Named templated parameter type; TParameter<float> Named templated parameter type; TParameter<int> Named templated parameter type; TParameter<long> Named templated parameter type; TParticle TParticle vertex particle information; TParticleClassPDG PDG static particle definition; TParticlePDG PDG static particle definition; TPave Pave. A box with shadowing; TPaveClass A TPaveLabel specialized for TClassTree objects; TPaveLabel PaveLabel. A Pave with a label; TPaveStats A special TPaveText to draw histogram statistics.; TPaveStatsEditor GUI for editing TPaveStats; TPaveText PaveText. A Pave with several lines of text.; TPavesText Stacked Paves with text strings; TPerfEvent Class holding TProof Event Info; TPerfStats Class for collecting PROOF statistics; TPie Pie chart graphics class; TPieEditor piechart editor; TPieSlice Slice of a pie chart graphics class; TPieSliceEditor piechart' slice editor; TPluginHandler Handler for plugin libraries; TPluginManager Manager for plugin handlers; TPoint ; TPointSet3D TPolyMarker3D with direct OpenGL rendering.; TPointSet3DGL GL renderer for TPointSet3D; TPoints 2-D graphics point; TPoints3D Defines the abstract array of 3D points; TPoints3DABC A 3-D Points; TPointsArray3D A 3-D PolyLine; TPolyLine A PolyLine; TPolyLine3D A 3-D polyline; TPolyLineShape The base class to define an abstract 3D shape of STAR ""event"" geometry; TPolyMarker An array of points with the same marker; TPolyMarker3D An array of 3-D points with the same marker; TPosixCondition Posix condition variable; TPosixMutex Posix mutex lock; TPosixThread TPosixThread class; TPosixThreadFactory Posix thread factory; TPostScript PostScript driver; TPrimary TPrimary vertex particle information; TPrincipal Principal Components Analysis; TProcessEventTimer Process pending events at fixed time intervals; TProcessID Proce",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:120267,Modifiability,plugin,plugin,120267,"load its content to a merging server.; TParameter<Long64_t> Named templated parameter type; TParameter<bool> Named templated parameter type; TParameter<double> Named templated parameter type; TParameter<float> Named templated parameter type; TParameter<int> Named templated parameter type; TParameter<long> Named templated parameter type; TParticle TParticle vertex particle information; TParticleClassPDG PDG static particle definition; TParticlePDG PDG static particle definition; TPave Pave. A box with shadowing; TPaveClass A TPaveLabel specialized for TClassTree objects; TPaveLabel PaveLabel. A Pave with a label; TPaveStats A special TPaveText to draw histogram statistics.; TPaveStatsEditor GUI for editing TPaveStats; TPaveText PaveText. A Pave with several lines of text.; TPavesText Stacked Paves with text strings; TPerfEvent Class holding TProof Event Info; TPerfStats Class for collecting PROOF statistics; TPie Pie chart graphics class; TPieEditor piechart editor; TPieSlice Slice of a pie chart graphics class; TPieSliceEditor piechart' slice editor; TPluginHandler Handler for plugin libraries; TPluginManager Manager for plugin handlers; TPoint ; TPointSet3D TPolyMarker3D with direct OpenGL rendering.; TPointSet3DGL GL renderer for TPointSet3D; TPoints 2-D graphics point; TPoints3D Defines the abstract array of 3D points; TPoints3DABC A 3-D Points; TPointsArray3D A 3-D PolyLine; TPolyLine A PolyLine; TPolyLine3D A 3-D polyline; TPolyLineShape The base class to define an abstract 3D shape of STAR ""event"" geometry; TPolyMarker An array of points with the same marker; TPolyMarker3D An array of 3-D points with the same marker; TPosixCondition Posix condition variable; TPosixMutex Posix mutex lock; TPosixThread TPosixThread class; TPosixThreadFactory Posix thread factory; TPostScript PostScript driver; TPrimary TPrimary vertex particle information; TPrincipal Principal Components Analysis; TProcessEventTimer Process pending events at fixed time intervals; TProcessID Proce",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:120811,Modifiability,variab,variable,120811,,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:123837,Modifiability,config,config,123837,Info Class describing a PROOF node; TProofNodes Node and worker information; TProofOutputFile Wrapper class to steer the merging of files produced on workers; TProofOutputList Output list specific TList derivation; TProofPerfAnalysis Set of tools to analyse the performance tree; TProofPlayer Basic PROOF player; TProofPlayerLite PROOF player running in PROOF-Lite; TProofPlayerLocal PROOF player running on client; TProofPlayerRemote PROOF player running on master server; TProofPlayerSlave PROOF player running on slave server; TProofPlayerSuperMaster PROOF player running on super master; TProofProgressDialog PROOF progress dialog; TProofProgressInfo Progress information; TProofProgressLog Class implementing a log graphic box; TProofProgressMemoryPlot PROOF progress memory plots; TProofProgressStatus Proof progress status class; TProofQueryResult Class describing a PROOF query; TProofResources Abstract class describing PROOF resources; TProofResourcesStatic Class to handle PROOF static config; TProofServ PROOF Server Application Interface; TProofServLite PROOF-Lite Server Application Interface; TProofSuperMaster PROOF control class for making submasters; TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t> Class describing a vector container; TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t> Class describing a vector container; TPyDispatcher Python dispatcher class; TPyMultiGenFunction Python for Math::IMultiGenFunction equivalent; TPyMultiGradFunction Python for Math::IMultiGradFunction equivalent; TPyReturn Python morphing return object; TPySelector Python equivalent base class for PROOF; TPythia8 Interface class of Pythia8; TPythia8Decayer Particle Decayer using Pythia8; TPython Access to the python interpreter; TQApplication creates ROOT environment with the Qt windowing system; TQCanvasImp ABC describing Qt GUI independent main window; TQCanvasMenu interface to Qt based context sensitive popup menus; TQClass Class with connections; TQCommand encaps,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:125949,Modifiability,Variab,Variables,125949,"Command encapsulates the information for undo/redo a single action.; TQConnection Internal class used in the object communication mechanism; TQMimeTypes Pool of mime type objects; TQObjSender Used to ""delegate"" TQObject functionality; TQObject Base class for object communication mechanism; TQRootApplication creates Qt environment interface with the ROOT windowing system; TQRootCanvas interface to Qt eventloop to handle user input; TQRootDialog prompt for the arguments of an object's member function; TQRootGuiFactory Qt ROOT Gui factory; TQUndoManager recorder of operations for undo and redo; TQpDataBase Qp Base Data class; TQpDataDens Qp Data class for Dens formulation; TQpDataSparse Qp Data class for Sparse formulation; TQpLinSolverBase Qp linear solver base class; TQpLinSolverDens Qp linear solver class for Dens formulation; TQpLinSolverSparse Qp linear solver class for Sparse formulation; TQpProbBase Qp problem formulation base class; TQpProbDens Qp dens problem formulation class; TQpProbSparse Qp sparse problem formulation class; TQpResidual Qp Residual class; TQpSolverBase Qp Solver class; TQpVar Qp Variables class; TQtApplication Instantiate the Qt system within ROOT environment; TQtBrush create QBrush object based on the ROOT ""fill"" attributes ; TQtClientFilter Map Qt and ROOT event; TQtClientWidget QFrame implementation backing ROOT TGWindow objects; TQtMarker Convert ROOT TMarker objects on to QPointArray; TQtPadFont < Create Qt QFont object based on ROOT TAttText attributes; TQtRootSlot ; TQtTimer QTimer to awake the ROOT event loop from Qt event loop; TQtWidget QWidget to back ROOT TCanvas (Can be used with Qt designer); TQuaternion a quaternion class; TQueryDescription Query description; TQueryResult Class describing a query; TQueryResultManager PROOF query result manager; TROOT Top level (or root) structure for all classes; TRWLock Reader/writer lock; TRadialGradient Radial gradient fill.; TRandom Simple Random number generator (periodicity = 10**9); TRa",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:133099,Modifiability,variab,variable,133099,"ctrum2Fit Spectrum2 Fitter using algorithm without matrix inversion and conjugate gradient method for symmetrical matrices (Stiefel-Hestens method); TSpectrum2Painter TSpectrum 3d graphics package; TSpectrum2Transform Spectrum2 Transformer, it calculates classic orthogonal 2D transforms; TSpectrum3 Peak Finder, Background estimator, Markov smoothing and Deconvolution for 3-D histograms; TSpectrumFit Spectrum Fitter using algorithm without matrix inversion and conjugate gradient method for symmetrical matrices (Stiefel-Hestens method); TSpectrumTransform Spectrum Transformer, it calculates classic orthogonal 1D transforms; TSpider Helper class to draw spider; TSpiderEditor GUI for editing the spider plot attributes.; TSpline Spline base class; TSpline3 Class to create third natural splines; TSpline5 Class to create quintic natural splines; TSplinePoly Spline polynomial terms; TSplinePoly3 Third spline polynomial terms; TSplinePoly5 Quintic spline polynomial terms; TStatistic Named statistical variable; TStatsFeedback Present PROOF query feedback; TStatus Status class; TStdExceptionHandler C++ exception handler; TStopwatch A stopwatch which times real and cpu time; TStorage Storage manager class; TStreamerArtificial StreamerElement injected by a TSchemaRule. Transient only to preverse forward compatibility.; TStreamerBase Streamer element of type base class; TStreamerBasicPointer Streamer element for a pointer to a basic type; TStreamerBasicType Streamer element for a basic type; TStreamerElement Base class for one element (data member) to be Streamed; TStreamerInfo Streamer information for one class version; TStreamerInfoActions ; TStreamerInfoActions::TActionSequence ; TStreamerInfoActions::TConfiguration ; TStreamerInfoActions::TConfiguredAction A configured action; TStreamerLoop Streamer element for a pointer to an array of objects; TStreamerObject Streamer element of type object; TStreamerObjectAny Streamer element of type object other than TObject; TStreamerObje",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:133871,Modifiability,config,configured,133871,erms; TSplinePoly3 Third spline polynomial terms; TSplinePoly5 Quintic spline polynomial terms; TStatistic Named statistical variable; TStatsFeedback Present PROOF query feedback; TStatus Status class; TStdExceptionHandler C++ exception handler; TStopwatch A stopwatch which times real and cpu time; TStorage Storage manager class; TStreamerArtificial StreamerElement injected by a TSchemaRule. Transient only to preverse forward compatibility.; TStreamerBase Streamer element of type base class; TStreamerBasicPointer Streamer element for a pointer to a basic type; TStreamerBasicType Streamer element for a basic type; TStreamerElement Base class for one element (data member) to be Streamed; TStreamerInfo Streamer information for one class version; TStreamerInfoActions ; TStreamerInfoActions::TActionSequence ; TStreamerInfoActions::TConfiguration ; TStreamerInfoActions::TConfiguredAction A configured action; TStreamerLoop Streamer element for a pointer to an array of objects; TStreamerObject Streamer element of type object; TStreamerObjectAny Streamer element of type object other than TObject; TStreamerObjectAnyPointer Streamer element of type pointer to a non TObject; TStreamerObjectPointer Streamer element of type pointer to a TObject; TStreamerSTL Streamer element of type STL container; TStreamerSTLstring Streamer element of type C++ string; TStreamerString Streamer element of type TString; TString Basic string class; TStringLong Long string class (more than 255 chars); TStringToken String tokenizer using PCRE for finding next tokens.; TStructNode Node with information about class; TStructNodeEditor GUI fo editing TStructNode; TStructNodeProperty Class with nodes color property; TStructViewer A 3D struct viewer; TStructViewerGUI A GUI fo 3D struct viewer ; TStyle A collection of all graphics attributes; TStyleDialog Dialog box used by the TStyleManager class; TStyleManager Graphical User Interface for managing styles; TStylePreview Preview window used by the TStyleManag,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:643,Performance,load,load,643,. Class Index. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. ROOT. Class Index; Modules; BINDINGS; CINT; CORE; GEOM; GRAF2D; GRAF3D; GUI; HIST; HTML; IO; MATH; MISC; MONTECARLO; NET; PROOF; ROOFIT; SQL; TEST; TMVA; TREE. Jump to; C; ROOT:; ROOT::Math:; ROOT::Math::L; ROOT::Math::P; ROOT::Math::S; ROOT::Math::SMatrix<f; ROOT::Math::T; ROOT::T; ROOT::TS; Roo1; RooC; RooCh; RooG; RooN; RooS; RooSt; RooStats:; RooU; T; TB; TC; TD; TEv; TEveG; TEveQ; TEveW; TG; TGH; TGL; TGLP; TGLW; TGR; TGU; TGeo; TGeoN; TGeoT; TGu; TI; TMV; TMVA:; TMVA::V; TMe; TO; TP; TPo; TPy; TR; TS; TSp; TSu; TU; TW. ColorStruct_t ; CpuInfo_t CPU load information.; Event_t ; FileStat_t ; FontAttributes_t ; FontMetrics_t ; Foption_t ; GCValues_t ; MemInfo_t Memory utilization information.; ParamHistFunc Sum of RooAbsReal objects; PictureAttributes_t ; PiecewiseInterpolation Sum of RooAbsReal objects; Point_t ; ProcInfo_t System resource usage of given process.; PyROOT ; PyROOT::TPyException C++ exception for throwing python exceptions; PyROOT::TPyROOTApplication Setup interactive application; ROOT ; ROOT::Fit ; ROOT::Fit::BinData ; ROOT::Fit::Chi2FCN<ROOT::Math::IBaseFunctionMultiDim> ; ROOT::Fit::Chi2FCN<ROOT::Math::IGradientFunctionMultiDim> ; ROOT::Fit::DataOptions ; ROOT::Fit::DataRange ; ROOT::Fit::FitConfig ; ROOT::Fit::FitData ; ROOT::Fit::FitResult ; ROOT::Fit::Fitter ; ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim> ; ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim> ; ROOT::Fit::ParameterSettings ; ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim> ; ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim> ; ROOT::Fit::SparseData ; ROOT::Fit::UnBinData ; ROOT::Math ; ROOT::Math::AdaptiveIntegratorMultiDim ; ROOT::Math::AxisAngle ; ROOT::Math::BaseIntegratorOptions ; ROOT::Math::BasicFitMethodFunction<ROOT::Math::IBaseFunctionMultiDim> ; ROOT::Math::BasicFitMethodFunction<ROOT::Math::IGradientFunctionMultiDim>,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:21872,Performance,cache,cache,21872,"OOT::Minuit2::MnSimplex ; ROOT::Minuit2::MnStrategy ; ROOT::Minuit2::MnUserParameterState ; ROOT::Minuit2::MnUserParameters ; ROOT::Minuit2::ModularFunctionMinimizer ; ROOT::Minuit2::ScanMinimizer ; ROOT::Minuit2::SimplexMinimizer ; ROOT::Minuit2::VariableMetricMinimizer ; ROOT::TArrayProxy<ROOT::TArrayType<Long64_t,0> > ; ROOT::TArrayProxy<ROOT::TArrayType<ULong64_t,0> > ; ROOT::TArrayProxy<ROOT::TArrayType<bool,0> > ; ROOT::TArrayProxy<ROOT::TArrayType<char,0> > ; ROOT::TArrayProxy<ROOT::TArrayType<double,0> > ; ROOT::TArrayProxy<ROOT::TArrayType<float,0> > ; ROOT::TArrayProxy<ROOT::TArrayType<int,0> > ; ROOT::TArrayProxy<ROOT::TArrayType<long,0> > ; ROOT::TArrayProxy<ROOT::TArrayType<short,0> > ; ROOT::TArrayProxy<ROOT::TArrayType<unsigned char,0> > ; ROOT::TArrayProxy<ROOT::TArrayType<unsigned int,0> > ; ROOT::TArrayProxy<ROOT::TArrayType<unsigned long,0> > ; ROOT::TArrayProxy<ROOT::TArrayType<unsigned short,0> > ; ROOT::TBranchProxy ; ROOT::TBranchProxyClassDescriptor Class to cache the information we gathered about the branch and its content; ROOT::TBranchProxyDescriptor Describe the proxy for a branch; ROOT::TBranchProxyDirector ; ROOT::TClaArrayProxy<ROOT::TArrayType<Long64_t,0> > ; ROOT::TClaArrayProxy<ROOT::TArrayType<ULong64_t,0> > ; ROOT::TClaArrayProxy<ROOT::TArrayType<bool,0> > ; ROOT::TClaArrayProxy<ROOT::TArrayType<char,0> > ; ROOT::TClaArrayProxy<ROOT::TArrayType<double,0> > ; ROOT::TClaArrayProxy<ROOT::TArrayType<float,0> > ; ROOT::TClaArrayProxy<ROOT::TArrayType<int,0> > ; ROOT::TClaArrayProxy<ROOT::TArrayType<long,0> > ; ROOT::TClaArrayProxy<ROOT::TArrayType<short,0> > ; ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned char,0> > ; ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned int,0> > ; ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned long,0> > ; ROOT::TClaArrayProxy<ROOT::TArrayType<unsigned short,0> > ; ROOT::TClaImpProxy<Long64_t> ; ROOT::TClaImpProxy<ULong64_t> ; ROOT::TClaImpProxy<bool> ; ROOT::TClaImpProxy<char> ; ROOT::TClaImpProxy<double> ; ",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:25206,Performance,cache,cache,25206,x::PrivateClass ; Reflex::PrivateEnum ; Reflex::PrivateStruct ; Reflex::PrivateUnion ; Reflex::ProtectedClass ; Reflex::ProtectedEnum ; Reflex::ProtectedStruct ; Reflex::ProtectedUnion ; Reflex::RuntimeError ; Reflex::Scope ; Reflex::Selection::AUTOSELECT ; Reflex::Selection::NODEFAULT ; Reflex::Selection::NO_SELF_AUTOSELECT ; Reflex::Selection::TRANSIENT ; Reflex::Tools ; Reflex::Type ; Reflex::TypeTemplate ; Reflex::TypedefBuilderImpl ; Reflex::UnionBuilderImpl ; Reflex::UnknownType ; Reflex::UnnamedClass ; Reflex::UnnamedEnum ; Reflex::UnnamedNamespace ; Reflex::UnnamedStruct ; Reflex::UnnamedUnion ; Reflex::VariableBuilder ; Reflex::VariableBuilderImpl ; Rgl ; Roo1DMomentMorphFunction Your description goes here...; Roo1DTable 1-dimensional table; Roo2DKeysPdf Two-dimensional kernel estimation p.d.f.; Roo2DMomentMorphFunction ; RooAICRegistry Registry for analytical integration codes; RooAbsAnaConvPdf Abstract Composite Convoluted PDF; RooAbsArg Abstract variable; RooAbsBinning Abstract base class for binning specification; RooAbsCache Base class for cache managers ; RooAbsCacheElement Base class for cache elements; RooAbsCachedPdf Abstract base class for cached p.d.f.s; RooAbsCachedReal Abstract base class for cached p.d.f.s; RooAbsCategory Abstract discrete variable; RooAbsCategoryLValue Abstract modifiable index variable ; RooAbsCollection Collection of RooAbsArg objects; RooAbsData Abstract data collection; RooAbsDataStore Abstract Data Storage class; RooAbsFunc Abstract real-valued function interface; RooAbsGenContext Abstract context for generating a dataset from a PDF; RooAbsHiddenReal Abstract hidden real-valued variable; RooAbsIntegrator Abstract interface for real-valued function integrators; RooAbsLValue Abstract variable; RooAbsMCStudyModule Monte Carlo study manager add-on module; RooAbsMoment Abstract representation of moment in a RooAbsReal in a given RooRealVar; RooAbsNumGenerator Abstract base class for numeric event generator algorithms; RooAbsO,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:25257,Performance,cache,cache,25257,x::PrivateClass ; Reflex::PrivateEnum ; Reflex::PrivateStruct ; Reflex::PrivateUnion ; Reflex::ProtectedClass ; Reflex::ProtectedEnum ; Reflex::ProtectedStruct ; Reflex::ProtectedUnion ; Reflex::RuntimeError ; Reflex::Scope ; Reflex::Selection::AUTOSELECT ; Reflex::Selection::NODEFAULT ; Reflex::Selection::NO_SELF_AUTOSELECT ; Reflex::Selection::TRANSIENT ; Reflex::Tools ; Reflex::Type ; Reflex::TypeTemplate ; Reflex::TypedefBuilderImpl ; Reflex::UnionBuilderImpl ; Reflex::UnknownType ; Reflex::UnnamedClass ; Reflex::UnnamedEnum ; Reflex::UnnamedNamespace ; Reflex::UnnamedStruct ; Reflex::UnnamedUnion ; Reflex::VariableBuilder ; Reflex::VariableBuilderImpl ; Rgl ; Roo1DMomentMorphFunction Your description goes here...; Roo1DTable 1-dimensional table; Roo2DKeysPdf Two-dimensional kernel estimation p.d.f.; Roo2DMomentMorphFunction ; RooAICRegistry Registry for analytical integration codes; RooAbsAnaConvPdf Abstract Composite Convoluted PDF; RooAbsArg Abstract variable; RooAbsBinning Abstract base class for binning specification; RooAbsCache Base class for cache managers ; RooAbsCacheElement Base class for cache elements; RooAbsCachedPdf Abstract base class for cached p.d.f.s; RooAbsCachedReal Abstract base class for cached p.d.f.s; RooAbsCategory Abstract discrete variable; RooAbsCategoryLValue Abstract modifiable index variable ; RooAbsCollection Collection of RooAbsArg objects; RooAbsData Abstract data collection; RooAbsDataStore Abstract Data Storage class; RooAbsFunc Abstract real-valued function interface; RooAbsGenContext Abstract context for generating a dataset from a PDF; RooAbsHiddenReal Abstract hidden real-valued variable; RooAbsIntegrator Abstract interface for real-valued function integrators; RooAbsLValue Abstract variable; RooAbsMCStudyModule Monte Carlo study manager add-on module; RooAbsMoment Abstract representation of moment in a RooAbsReal in a given RooRealVar; RooAbsNumGenerator Abstract base class for numeric event generator algorithms; RooAbsO,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:25313,Performance,cache,cached,25313,x::PrivateClass ; Reflex::PrivateEnum ; Reflex::PrivateStruct ; Reflex::PrivateUnion ; Reflex::ProtectedClass ; Reflex::ProtectedEnum ; Reflex::ProtectedStruct ; Reflex::ProtectedUnion ; Reflex::RuntimeError ; Reflex::Scope ; Reflex::Selection::AUTOSELECT ; Reflex::Selection::NODEFAULT ; Reflex::Selection::NO_SELF_AUTOSELECT ; Reflex::Selection::TRANSIENT ; Reflex::Tools ; Reflex::Type ; Reflex::TypeTemplate ; Reflex::TypedefBuilderImpl ; Reflex::UnionBuilderImpl ; Reflex::UnknownType ; Reflex::UnnamedClass ; Reflex::UnnamedEnum ; Reflex::UnnamedNamespace ; Reflex::UnnamedStruct ; Reflex::UnnamedUnion ; Reflex::VariableBuilder ; Reflex::VariableBuilderImpl ; Rgl ; Roo1DMomentMorphFunction Your description goes here...; Roo1DTable 1-dimensional table; Roo2DKeysPdf Two-dimensional kernel estimation p.d.f.; Roo2DMomentMorphFunction ; RooAICRegistry Registry for analytical integration codes; RooAbsAnaConvPdf Abstract Composite Convoluted PDF; RooAbsArg Abstract variable; RooAbsBinning Abstract base class for binning specification; RooAbsCache Base class for cache managers ; RooAbsCacheElement Base class for cache elements; RooAbsCachedPdf Abstract base class for cached p.d.f.s; RooAbsCachedReal Abstract base class for cached p.d.f.s; RooAbsCategory Abstract discrete variable; RooAbsCategoryLValue Abstract modifiable index variable ; RooAbsCollection Collection of RooAbsArg objects; RooAbsData Abstract data collection; RooAbsDataStore Abstract Data Storage class; RooAbsFunc Abstract real-valued function interface; RooAbsGenContext Abstract context for generating a dataset from a PDF; RooAbsHiddenReal Abstract hidden real-valued variable; RooAbsIntegrator Abstract interface for real-valued function integrators; RooAbsLValue Abstract variable; RooAbsMCStudyModule Monte Carlo study manager add-on module; RooAbsMoment Abstract representation of moment in a RooAbsReal in a given RooRealVar; RooAbsNumGenerator Abstract base class for numeric event generator algorithms; RooAbsO,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:25370,Performance,cache,cached,25370,::Scope ; Reflex::Selection::AUTOSELECT ; Reflex::Selection::NODEFAULT ; Reflex::Selection::NO_SELF_AUTOSELECT ; Reflex::Selection::TRANSIENT ; Reflex::Tools ; Reflex::Type ; Reflex::TypeTemplate ; Reflex::TypedefBuilderImpl ; Reflex::UnionBuilderImpl ; Reflex::UnknownType ; Reflex::UnnamedClass ; Reflex::UnnamedEnum ; Reflex::UnnamedNamespace ; Reflex::UnnamedStruct ; Reflex::UnnamedUnion ; Reflex::VariableBuilder ; Reflex::VariableBuilderImpl ; Rgl ; Roo1DMomentMorphFunction Your description goes here...; Roo1DTable 1-dimensional table; Roo2DKeysPdf Two-dimensional kernel estimation p.d.f.; Roo2DMomentMorphFunction ; RooAICRegistry Registry for analytical integration codes; RooAbsAnaConvPdf Abstract Composite Convoluted PDF; RooAbsArg Abstract variable; RooAbsBinning Abstract base class for binning specification; RooAbsCache Base class for cache managers ; RooAbsCacheElement Base class for cache elements; RooAbsCachedPdf Abstract base class for cached p.d.f.s; RooAbsCachedReal Abstract base class for cached p.d.f.s; RooAbsCategory Abstract discrete variable; RooAbsCategoryLValue Abstract modifiable index variable ; RooAbsCollection Collection of RooAbsArg objects; RooAbsData Abstract data collection; RooAbsDataStore Abstract Data Storage class; RooAbsFunc Abstract real-valued function interface; RooAbsGenContext Abstract context for generating a dataset from a PDF; RooAbsHiddenReal Abstract hidden real-valued variable; RooAbsIntegrator Abstract interface for real-valued function integrators; RooAbsLValue Abstract variable; RooAbsMCStudyModule Monte Carlo study manager add-on module; RooAbsMoment Abstract representation of moment in a RooAbsReal in a given RooRealVar; RooAbsNumGenerator Abstract base class for numeric event generator algorithms; RooAbsOptTestStatistic Abstract base class for optimized test statistics; RooAbsPdf Abstract PDF with normalization support; RooAbsPdf::GenSpec Generation specification; RooAbsProxy Abstract proxy interface; RooAbsReal Abstr,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:26176,Performance,optimiz,optimized,26176,RooAICRegistry Registry for analytical integration codes; RooAbsAnaConvPdf Abstract Composite Convoluted PDF; RooAbsArg Abstract variable; RooAbsBinning Abstract base class for binning specification; RooAbsCache Base class for cache managers ; RooAbsCacheElement Base class for cache elements; RooAbsCachedPdf Abstract base class for cached p.d.f.s; RooAbsCachedReal Abstract base class for cached p.d.f.s; RooAbsCategory Abstract discrete variable; RooAbsCategoryLValue Abstract modifiable index variable ; RooAbsCollection Collection of RooAbsArg objects; RooAbsData Abstract data collection; RooAbsDataStore Abstract Data Storage class; RooAbsFunc Abstract real-valued function interface; RooAbsGenContext Abstract context for generating a dataset from a PDF; RooAbsHiddenReal Abstract hidden real-valued variable; RooAbsIntegrator Abstract interface for real-valued function integrators; RooAbsLValue Abstract variable; RooAbsMCStudyModule Monte Carlo study manager add-on module; RooAbsMoment Abstract representation of moment in a RooAbsReal in a given RooRealVar; RooAbsNumGenerator Abstract base class for numeric event generator algorithms; RooAbsOptTestStatistic Abstract base class for optimized test statistics; RooAbsPdf Abstract PDF with normalization support; RooAbsPdf::GenSpec Generation specification; RooAbsProxy Abstract proxy interface; RooAbsReal Abstract real-valued variable; RooAbsRealLValue Abstract modifiable real-valued object; RooAbsRootFinder Abstract interface for 1-dim real-valued function root finders; RooAbsSelfCachedPdf Abstract base class for self-caching p.d.f.s; RooAbsSelfCachedReal Abstract base class for self-caching functions; RooAbsString Abstract string-valued variable; RooAbsStudy Abstract base class for RooStudyManager modules; RooAbsTestStatistic Abstract base class for real-valued test statistics; RooAcceptReject Context for generating a dataset from a PDF; RooAdaptiveGaussKronrodIntegrator1D 1-dimensional adaptive Gauss-Kronrod numerical inte,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:32735,Performance,Cache,Cache,32735,"double,int,int> RooAbsReal binding to external C functions; RooCFunction3PdfBinding<double,unsigned int,double,double> RooAbsReal binding to external C functions; RooCFunction3PdfBinding<double,unsigned int,double,unsigned int> RooAbsReal binding to external C functions; RooCFunction3PdfBinding<double,unsigned int,unsigned int,double> RooAbsReal binding to external C functions; RooCFunction3Ref<double,double,double,bool> Persistable reference to C function pointer; RooCFunction3Ref<double,double,double,double> Persistable reference to C function pointer; RooCFunction3Ref<double,double,int,int> Persistable reference to C function pointer; RooCFunction3Ref<double,unsigned int,double,double> Persistable reference to C function pointer; RooCFunction3Ref<double,unsigned int,double,unsigned int> Persistable reference to C function pointer; RooCFunction3Ref<double,unsigned int,unsigned int,double> Persistable reference to C function pointer; RooCFunction4Binding<double,double,double,double,bool> RooAbsReal binding to external C functions; RooCFunction4Binding<double,double,double,double,double> RooAbsReal binding to external C functions; RooCFunction4Binding<double,double,double,double,int> RooAbsReal binding to external C functions; RooCFunction4PdfBinding<double,double,double,double,bool> RooAbsReal binding to external C functions; RooCFunction4PdfBinding<double,double,double,double,double> RooAbsReal binding to external C functions; RooCFunction4PdfBinding<double,double,double,double,int> RooAbsReal binding to external C functions; RooCFunction4Ref<double,double,double,double,bool> Persistable reference to C function pointer; RooCFunction4Ref<double,double,double,double,double> Persistable reference to C function pointer; RooCFunction4Ref<double,double,double,double,int> Persistable reference to C function pointer; RooCacheManager<RooAbsCacheElement> Cache Manager class generic objects; RooCacheManager<vector<double> > Cache Manager class generic objects; RooCachedPdf P.",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:32805,Performance,Cache,Cache,32805,"double,int,int> RooAbsReal binding to external C functions; RooCFunction3PdfBinding<double,unsigned int,double,double> RooAbsReal binding to external C functions; RooCFunction3PdfBinding<double,unsigned int,double,unsigned int> RooAbsReal binding to external C functions; RooCFunction3PdfBinding<double,unsigned int,unsigned int,double> RooAbsReal binding to external C functions; RooCFunction3Ref<double,double,double,bool> Persistable reference to C function pointer; RooCFunction3Ref<double,double,double,double> Persistable reference to C function pointer; RooCFunction3Ref<double,double,int,int> Persistable reference to C function pointer; RooCFunction3Ref<double,unsigned int,double,double> Persistable reference to C function pointer; RooCFunction3Ref<double,unsigned int,double,unsigned int> Persistable reference to C function pointer; RooCFunction3Ref<double,unsigned int,unsigned int,double> Persistable reference to C function pointer; RooCFunction4Binding<double,double,double,double,bool> RooAbsReal binding to external C functions; RooCFunction4Binding<double,double,double,double,double> RooAbsReal binding to external C functions; RooCFunction4Binding<double,double,double,double,int> RooAbsReal binding to external C functions; RooCFunction4PdfBinding<double,double,double,double,bool> RooAbsReal binding to external C functions; RooCFunction4PdfBinding<double,double,double,double,double> RooAbsReal binding to external C functions; RooCFunction4PdfBinding<double,double,double,double,int> RooAbsReal binding to external C functions; RooCFunction4Ref<double,double,double,double,bool> Persistable reference to C function pointer; RooCFunction4Ref<double,double,double,double,double> Persistable reference to C function pointer; RooCFunction4Ref<double,double,double,double,int> Persistable reference to C function pointer; RooCacheManager<RooAbsCacheElement> Cache Manager class generic objects; RooCacheManager<vector<double> > Cache Manager class generic objects; RooCachedPdf P.",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:32896,Performance,cache,caches,32896,"ction4Binding<double,double,double,double,double> RooAbsReal binding to external C functions; RooCFunction4Binding<double,double,double,double,int> RooAbsReal binding to external C functions; RooCFunction4PdfBinding<double,double,double,double,bool> RooAbsReal binding to external C functions; RooCFunction4PdfBinding<double,double,double,double,double> RooAbsReal binding to external C functions; RooCFunction4PdfBinding<double,double,double,double,int> RooAbsReal binding to external C functions; RooCFunction4Ref<double,double,double,double,bool> Persistable reference to C function pointer; RooCFunction4Ref<double,double,double,double,double> Persistable reference to C function pointer; RooCFunction4Ref<double,double,double,double,int> Persistable reference to C function pointer; RooCacheManager<RooAbsCacheElement> Cache Manager class generic objects; RooCacheManager<vector<double> > Cache Manager class generic objects; RooCachedPdf P.d.f class that wraps another p.d.f and caches its output ; RooCachedReal P.d.f class that wraps another p.d.f and caches its output ; RooCatType Category state, (name,index) pair; RooCategory Discrete valued variable type; RooCategoryProxy Proxy for a RooAbsCategory object; RooCategorySharedProperties Shared properties of a RooCategory clone set; RooChangeTracker Meta object that tracks changes in set of other arguments; RooChebychev Chebychev polynomial PDF; RooChi2MCSModule MCStudy module to calculate chi2 between binned data and fit ; RooChi2Var Chi^2 function of p.d.f w.r.t a binned dataset; RooChiSquarePdf Chi Square distribution (eg. the PDF ); RooCintUtils ; RooClassFactory RooFit class code and instance factory ; RooCmdArg Generic named argument container; RooCmdConfig Configurable parse of RooCmdArg objects; RooComplex a non-persistent bare-bones complex class; RooCompositeDataStore Composite Data Storage class; RooConstVar Constant RooAbsReal value object; RooConstraintSum sum of -log of set of RooAbsPdf representing parameter c",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:32971,Performance,cache,caches,32971,"tions; RooCFunction4PdfBinding<double,double,double,double,double> RooAbsReal binding to external C functions; RooCFunction4PdfBinding<double,double,double,double,int> RooAbsReal binding to external C functions; RooCFunction4Ref<double,double,double,double,bool> Persistable reference to C function pointer; RooCFunction4Ref<double,double,double,double,double> Persistable reference to C function pointer; RooCFunction4Ref<double,double,double,double,int> Persistable reference to C function pointer; RooCacheManager<RooAbsCacheElement> Cache Manager class generic objects; RooCacheManager<vector<double> > Cache Manager class generic objects; RooCachedPdf P.d.f class that wraps another p.d.f and caches its output ; RooCachedReal P.d.f class that wraps another p.d.f and caches its output ; RooCatType Category state, (name,index) pair; RooCategory Discrete valued variable type; RooCategoryProxy Proxy for a RooAbsCategory object; RooCategorySharedProperties Shared properties of a RooCategory clone set; RooChangeTracker Meta object that tracks changes in set of other arguments; RooChebychev Chebychev polynomial PDF; RooChi2MCSModule MCStudy module to calculate chi2 between binned data and fit ; RooChi2Var Chi^2 function of p.d.f w.r.t a binned dataset; RooChiSquarePdf Chi Square distribution (eg. the PDF ); RooCintUtils ; RooClassFactory RooFit class code and instance factory ; RooCmdArg Generic named argument container; RooCmdConfig Configurable parse of RooCmdArg objects; RooComplex a non-persistent bare-bones complex class; RooCompositeDataStore Composite Data Storage class; RooConstVar Constant RooAbsReal value object; RooConstraintSum sum of -log of set of RooAbsPdf representing parameter constraints; RooConvCoefVar Auxiliary class representing the coefficient of a RooAbsAnaConvPdf as a RooAbsReal; RooConvGenContext Context for generating a dataset from a PDF; RooConvIntegrandBinding RooAbsFunc representation of convolution integrands; RooCurve 1-dimensional smooth curve f",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:34644,Performance,Optimiz,Optimized,34644,s code and instance factory ; RooCmdArg Generic named argument container; RooCmdConfig Configurable parse of RooCmdArg objects; RooComplex a non-persistent bare-bones complex class; RooCompositeDataStore Composite Data Storage class; RooConstVar Constant RooAbsReal value object; RooConstraintSum sum of -log of set of RooAbsPdf representing parameter constraints; RooConvCoefVar Auxiliary class representing the coefficient of a RooAbsAnaConvPdf as a RooAbsReal; RooConvGenContext Context for generating a dataset from a PDF; RooConvIntegrandBinding RooAbsFunc representation of convolution integrands; RooCurve 1-dimensional smooth curve for use in RooPlots; RooCustomizer Editing tool for RooAbsArg composite object expressions; RooDLLSignificanceMCSModule MCStudy module to calculate Delta(-logL) significance w.r.t given null hypothesis; RooDataHist Binned data set; RooDataHistSliceIter Iterator over a one-dimensional slice of a RooDataHist; RooDataProjBinding RealFunc/Dataset binding for data projection of a real function; RooDataSet Unbinned data set; RooDataWeightedAverage Optimized calculator of data weighted average of a RooAbsReal; RooDecay General decay function p.d.f ; RooDerivative Representation of derivative of any RooAbsReal; RooDirItem Base class for RooFit objects that are listed TDirectories; RooDouble Container class for Double_t; RooDstD0BG D*-D0 mass difference background PDF; RooEffGenContext Context for generating a dataset from a PDF; RooEffProd Product operator p.d.f of (PDF x efficiency) implementing optimized generator context; RooEfficiency Generic PDF defined by string expression and list of variables; RooEllipse 2-dimensional contour; RooErrorVar RooAbsRealLValue representation of an error of a RooRealVar; RooExpensiveObjectCache Singleton class that serves as session repository for expensive objects; RooExpensiveObjectCache::ExpensiveObject Cache element containing expensive object and parameter values for which object is valid; RooExponential Ex,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:35100,Performance,optimiz,optimized,35100,le to calculate Delta(-logL) significance w.r.t given null hypothesis; RooDataHist Binned data set; RooDataHistSliceIter Iterator over a one-dimensional slice of a RooDataHist; RooDataProjBinding RealFunc/Dataset binding for data projection of a real function; RooDataSet Unbinned data set; RooDataWeightedAverage Optimized calculator of data weighted average of a RooAbsReal; RooDecay General decay function p.d.f ; RooDerivative Representation of derivative of any RooAbsReal; RooDirItem Base class for RooFit objects that are listed TDirectories; RooDouble Container class for Double_t; RooDstD0BG D*-D0 mass difference background PDF; RooEffGenContext Context for generating a dataset from a PDF; RooEffProd Product operator p.d.f of (PDF x efficiency) implementing optimized generator context; RooEfficiency Generic PDF defined by string expression and list of variables; RooEllipse 2-dimensional contour; RooErrorVar RooAbsRealLValue representation of an error of a RooRealVar; RooExpensiveObjectCache Singleton class that serves as session repository for expensive objects; RooExpensiveObjectCache::ExpensiveObject Cache element containing expensive object and parameter values for which object is valid; RooExponential Exponential PDF; RooExtendPdf Wrapper p.d.f adding an extended likelihood term to an existing p.d.f; RooExtendedBinding Your description goes here...; RooExtendedTerm Meta-p.d.f flat in all observables introducing only extended ML term; RooFFTConvPdf Convolution operator p.d.f based on numeric Fourier transforms; RooFIter ; RooFactoryWSTool RooFit class code and instance factory ; RooFirstMoment Representation of moment in a RooAbsReal in a given RooRealVar; RooFit ; RooFitResult Container class for fit result; RooFitShortHand ; RooFoamGenerator Context for generating a dataset from a PDF using the TFoam class; RooFormula TFormula derived class interfacing with RooAbsArg objects; RooFormulaVar Real-valued function of other RooAbsArgs calculated by a TFormula expr,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:35452,Performance,Cache,Cache,35452,le to calculate Delta(-logL) significance w.r.t given null hypothesis; RooDataHist Binned data set; RooDataHistSliceIter Iterator over a one-dimensional slice of a RooDataHist; RooDataProjBinding RealFunc/Dataset binding for data projection of a real function; RooDataSet Unbinned data set; RooDataWeightedAverage Optimized calculator of data weighted average of a RooAbsReal; RooDecay General decay function p.d.f ; RooDerivative Representation of derivative of any RooAbsReal; RooDirItem Base class for RooFit objects that are listed TDirectories; RooDouble Container class for Double_t; RooDstD0BG D*-D0 mass difference background PDF; RooEffGenContext Context for generating a dataset from a PDF; RooEffProd Product operator p.d.f of (PDF x efficiency) implementing optimized generator context; RooEfficiency Generic PDF defined by string expression and list of variables; RooEllipse 2-dimensional contour; RooErrorVar RooAbsRealLValue representation of an error of a RooRealVar; RooExpensiveObjectCache Singleton class that serves as session repository for expensive objects; RooExpensiveObjectCache::ExpensiveObject Cache element containing expensive object and parameter values for which object is valid; RooExponential Exponential PDF; RooExtendPdf Wrapper p.d.f adding an extended likelihood term to an existing p.d.f; RooExtendedBinding Your description goes here...; RooExtendedTerm Meta-p.d.f flat in all observables introducing only extended ML term; RooFFTConvPdf Convolution operator p.d.f based on numeric Fourier transforms; RooFIter ; RooFactoryWSTool RooFit class code and instance factory ; RooFirstMoment Representation of moment in a RooAbsReal in a given RooRealVar; RooFit ; RooFitResult Container class for fit result; RooFitShortHand ; RooFoamGenerator Context for generating a dataset from a PDF using the TFoam class; RooFormula TFormula derived class interfacing with RooAbsArg objects; RooFormulaVar Real-valued function of other RooAbsArgs calculated by a TFormula expr,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:41188,Performance,Cache,Cache,41188,"tate permutations of a list of categories; RooMultiCategory Product operator for categories; RooMultiGenFunction Export RooAbsReal as functor; RooMultiVarGaussian Multivariate Gaussian PDF with correlations; RooMultiVarGaussian::AnaIntData ; RooMultiVarGaussian::GenData ; RooNDKeysPdf General N-dimensional non-parametric kernel estimation p.d.f; RooNLLVar Function representing (extended) -log(L) of p.d.f and dataset; RooNameReg String name registry; RooNameSet A sterile version of RooArgSet, containing only the names of the contained RooAbsArgs; RooNonCPEigenDecay PDF to model CP-violating decays to final states which are not CP eigenstates; RooNonCentralChiSquare non-central chisquare pdf; RooNormSetCache Management tool for tracking sets of similar integration/normalization sets; RooNovosibirsk Novosibirsk PDF; RooNumCdf Numeric calculator for CDF for a given PDF; RooNumConvPdf Operator PDF implementing numeric convolution of 2 input PDFs; RooNumConvolution Operator PDF implementing numeric convolution of 2 input functions; RooNumGenConfig Numeric (MC) Event generator configuration ; RooNumGenFactory Numeric Generator factory; RooNumIntConfig Numeric Integrator configuration ; RooNumIntFactory Numeric Integrator factory; RooNumRunningInt Numeric calculator for running integral of a given function; RooNumber wrapper class for portable numerics; RooObjCacheManager Cache manager for generic caches that contain RooAbsArg objects; RooParamBinning Binning specification with ranges parameterized by external RooAbsReal functions; RooParamHistFunc Your description goes here...; RooParametricStepFunction Parametric Step Function Pdf; RooPlot Plot frame and container for graphics objects; RooPlotable Abstract interface for plotable objects in a RooPlot; RooPoisson A Poisson PDF; RooPolyVar Polynomial function; RooPolynomial Polynomial PDF; RooPrintable Interface for printable objects; RooProdGenContext Context for efficient generation of a a dataset from a RooProdPdf; RooPro",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:41214,Performance,cache,caches,41214,"tate permutations of a list of categories; RooMultiCategory Product operator for categories; RooMultiGenFunction Export RooAbsReal as functor; RooMultiVarGaussian Multivariate Gaussian PDF with correlations; RooMultiVarGaussian::AnaIntData ; RooMultiVarGaussian::GenData ; RooNDKeysPdf General N-dimensional non-parametric kernel estimation p.d.f; RooNLLVar Function representing (extended) -log(L) of p.d.f and dataset; RooNameReg String name registry; RooNameSet A sterile version of RooArgSet, containing only the names of the contained RooAbsArgs; RooNonCPEigenDecay PDF to model CP-violating decays to final states which are not CP eigenstates; RooNonCentralChiSquare non-central chisquare pdf; RooNormSetCache Management tool for tracking sets of similar integration/normalization sets; RooNovosibirsk Novosibirsk PDF; RooNumCdf Numeric calculator for CDF for a given PDF; RooNumConvPdf Operator PDF implementing numeric convolution of 2 input PDFs; RooNumConvolution Operator PDF implementing numeric convolution of 2 input functions; RooNumGenConfig Numeric (MC) Event generator configuration ; RooNumGenFactory Numeric Generator factory; RooNumIntConfig Numeric Integrator configuration ; RooNumIntFactory Numeric Integrator factory; RooNumRunningInt Numeric calculator for running integral of a given function; RooNumber wrapper class for portable numerics; RooObjCacheManager Cache manager for generic caches that contain RooAbsArg objects; RooParamBinning Binning specification with ranges parameterized by external RooAbsReal functions; RooParamHistFunc Your description goes here...; RooParametricStepFunction Parametric Step Function Pdf; RooPlot Plot frame and container for graphics objects; RooPlotable Abstract interface for plotable objects in a RooPlot; RooPoisson A Poisson PDF; RooPolyVar Polynomial function; RooPolynomial Polynomial PDF; RooPrintable Interface for printable objects; RooProdGenContext Context for efficient generation of a a dataset from a RooProdPdf; RooPro",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:55906,Performance,load,load,55906,"to help benchmarking applications; TBinomialEfficiencyFitter Binomial Fitter for the division of two histograms; TBits Bit container; TBits::TReference ; TBox Box class; TBranch Branch descriptor; TBranchClones Branch in case of an array of clone objects; TBranchElement Branch in case of an object; TBranchObject Branch in case of an object; TBranchRef to support referenced objects on other branches; TBranchSTL Branch handling STL collection of pointers; TBrowser ROOT Object Browser; TBrowserImp ABC describing browser implementation protocol; TBrowserPlugin basic plugin description class; TBtree A B-tree; TBtreeIter B-tree iterator; TBuffer Buffer base class used for serializing objects; TBuffer3D 3D primitives description; TBufferFile concrete implementation of TBuffer for writing/reading to/from a ROOT file or socket.; TBufferJSON a specialized TBuffer to only write objects into JSON format; TBufferSQL Implementation of TBuffer to load and write to a SQL database; TBufferSQL2 a specialized TBuffer to convert data to SQL statements or read data from SQL tables; TBufferXML a specialized TBuffer to read/write to XML files; TButton A user interface button.; TCL C++ replacement for CERNLIB matrix / triangle matrix packages: F110 and F112; TCONE CONE shape; TCONS CONS shape; TCTUB The Cut Tube shape; TCanvas Graphics canvas; TCanvasImp ABC describing main window protocol; TChain A chain of TTrees; TChainElement A chain element; TChainIndex A Tree Index with majorname and minorname.; TChainIndex::TChainIndexEntry ; TChair A base class to provide a user custom interface to TTable class objects; TCint Interface to CINT C/C++ interpreter; TCivetweb http server implementation, based on civetweb embedded server; TClass Dictionary containing class information; TClassDocInfo info cache for class documentation; TClassDocOutput generates documentation web pages for a class; TClassEdit ; TClassGenerator interface for TClass generators; TClassMenuItem One element of the class context",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:56758,Performance,cache,cache,56758,"a to SQL statements or read data from SQL tables; TBufferXML a specialized TBuffer to read/write to XML files; TButton A user interface button.; TCL C++ replacement for CERNLIB matrix / triangle matrix packages: F110 and F112; TCONE CONE shape; TCONS CONS shape; TCTUB The Cut Tube shape; TCanvas Graphics canvas; TCanvasImp ABC describing main window protocol; TChain A chain of TTrees; TChainElement A chain element; TChainIndex A Tree Index with majorname and minorname.; TChainIndex::TChainIndexEntry ; TChair A base class to provide a user custom interface to TTable class objects; TCint Interface to CINT C/C++ interpreter; TCivetweb http server implementation, based on civetweb embedded server; TClass Dictionary containing class information; TClassDocInfo info cache for class documentation; TClassDocOutput generates documentation web pages for a class; TClassEdit ; TClassGenerator interface for TClass generators; TClassMenuItem One element of the class context menu; TClassRef ; TClassStreamer ; TClassTable Table of known classes; TClassTree Manager class to draw classes inheritance tree and relations; TClonesArray An array of clone objects; TCollection Collection abstract base class; TCollectionClassStreamer ; TCollectionMemberStreamer ; TCollectionMethodBrowsable Helper object to browse a collection's methods; TCollectionPropertyBrowsable Helper object to add browsable collection properties; TCollectionProxyFactory ; TCollectionStreamer ; TColor Color defined by RGB or HLS; TColorGradient Gradient fill.; TColorGradient::Point ; TColorWheel The ROOT Color Wheel; TColumnView Helper to represent one TTable column; TComplex Complex Class; TCondition Condition variable class; TConditionImp Condition variable implementation ABC; TCondor Interface to the Condor System; TCondorSlave Describes a claimed slave; TConfidenceLevel output for TLimit functions; TContextMenu Context sensitive popup menu; TContextMenuImp Context sensitive popup menu implementation; TControlBar Contro",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:66416,Performance,load,loading,66416,"on coordinates for placement of objects on regular grids.; TEveGridStepperEditor Editor for TEveGridStepper class.; TEveGridStepperSubEditor Sub-editor for TEveGridStepper class.; TEveHit Monte Carlo hit (also used in VSD).; TEveJetCone Short description.; TEveJetConeEditor GUI editor for TEveJetCone.; TEveJetConeGL GL renderer class for TEveJetCone.; TEveJetConeProjected Projection of TEveJetCone.; TEveJetConeProjectedGL GL renderer class for TEveJetCone.; TEveLegoEventHandler A GL event handler class. Swiches perspective or orthographic camera.; TEveLine An arbitrary polyline with fixed line and marker attributes.; TEveLineEditor Editor for TEveLine class.; TEveLineGL GL-renderer for TEveLine class.; TEveLineProjected Projected replica of a TEveLine.; TEveListTreeItem Special llist-tree-item for Eve.; TEveMCRecCrossRef Cross-reference of sim/rec data per particle (also used in VSD).; TEveMCTrack Monte Carlo track (also used in VSD).; TEveMacro TMacro wrapper (attempting to fix issues with different macro loading and execution schemes).; TEveMagField Abstract interface to magnetic field; TEveMagFieldConst Interface to constant magnetic field.; TEveMagFieldDuo Interface to magnetic field with two different values depending on radius.; TEveManager Eve application manager.; TEveManager::TExceptionHandler Exception handler for Eve exceptions.; TEveManager::TRedrawDisabler Exception-safe EVE redraw-disabler.; TEvePad Internal TEveUtil pad class (sub-class of TPad) overriding handling of updates and 3D-viewers.; TEvePadHolder Exception-safe wrapper for temporary setting of gPad variable.; TEveParamList Eve element to store generic configuration information.; TEveParamList::BoolConfig_t ; TEveParamList::FloatConfig_t ; TEveParamList::IntConfig_t ; TEveParamListEditor GUI editor for TEveParamList.; TEvePathMarkT<double> Template for a special point on a track: position/momentum reference, daughter creation or decay.; TEvePathMarkT<float> Template for a special point on a tr",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:74589,Performance,cache,cache,74589,,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:74631,Performance,cache,cache,74631,,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:86452,Performance,cache,cache,86452,"metry MDI Geometry; TGMdiHorizontalWinResizer Horizontal Window Resizer; TGMdiMainFrame MDI main frame; TGMdiMenuBar MDI menu bar; TGMdiTitleBar MDI Title Bar; TGMdiTitleIcon MDI Title Icon; TGMdiVerticalWinResizer Vertical Window Resizer; TGMdiWinResizer Window Resizer; TGMenuBar Menu bar class; TGMenuEntry Menu entry class; TGMenuTitle Menu title class; TGMimeTypes Pool of mime type objects; TGMsgBox A message dialog box; TGNumberEntry Entry field widget for several numeric formats; TGNumberEntryField A text entry field used by a TGNumberEntry; TGNumberEntryLayout Layout manager for number entry widget; TGNumberFormat Class defining namespace for several enums used by TGNumberEntry; TGObject ROOT GUI base class; TGPack Horizontal or vertical stack of frames.; TGPasswdDialog Dialog for entering passwords; TGPicture Pictures and icons used by the GUI classes; TGPictureButton A picture button widget; TGPicturePool Picture and icon cache; TGPopupMenu Popup menu; TGPosition Position object (x and y are Int_t); TGPrintDialog Print dialog used by TGTextEdit widget; TGProgressBar Progress bar abstract base class; TGQt Interface to Qt GUI; TGRadioButton A radio button widget; TGRecorder GUI class of the event recorder.; TGRectMap Rectangle used in TMap; TGRectangle Rectangle object; TGRedirectOutputGuard Exception safe output redirection; TGRegion Describes a region; TGRegionWithId Region with id, tooltip text and popup menu; TGResourcePool Graphics resource pool; TGRowLayout Row layout manager; TGScrollBar Scrollbar widget; TGScrollBarElement Scrollbar element (head, tail, slider); TGSearchDialog Text search dialog used by TGTextEdit widget; TGSearchType ; TGSelectBox TreeView dialog widget; TGSelectedPicture Selected looking picture; TGShapedFrame Shaped composite frame; TGShutter Shutter widget; TGShutterItem Shutter widget item; TGSimpleTable A simple table that owns it's interface.; TGSimpleTableInterface Interface to data in a 2D array of Double_t; TGSlider Slider wid",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:90884,Performance,optimiz,optimization,90884,"calFrame Composite frame with vertical child layout; TGVerticalLayout Vertical layout manager; TGView View widget base class; TGViewFrame Frame containing the actual text; TGViewPort Viewport through which to look at a container frame; TGWidget Widget base class; TGWindow GUI Window base class; TGX11 Interface to X11; TGX11TTF Interface to X11 + TTF font handling; TGXYLayout X / Y - layout manager; TGXYLayoutHints Hits for the X / Y - layout manager; TGaxis Graphics axis; TGedEditor ROOT graphics editor; TGedFrame base editor's frame; TGedMarkerPopup marker select popup; TGedMarkerSelect Marker selection button; TGedNameFrame frame showing the selected object name; TGedPatternFrame pattern frame; TGedPatternPopup Color selector popup; TGedPatternSelect pattern selection check-button; TGedPatternSelector select pattern frame; TGedPopup popup window; TGedSelect selection check-button; TGenCollectionProxy ; TGenCollectionProxy::Method ; TGenCollectionProxy::Value ; TGenPhaseSpace Simple Phase Space Generator; TGenerator Event generator interface abstract baseclass; TGenericTable Generic array of C-structure (a'la STL vector); TGenericTable::iterator ; TGeoArb8 arbitrary trapezoid with 8 vertices; TGeoAtt class for visibility, activity and optimization attributes for volumes/nodes; TGeoBBox box primitive; TGeoBBoxEditor TGeoBBox editor; TGeoBatemanSol Solution for the Bateman equation; TGeoBoolNode a boolean node; TGeoBranchArray ; TGeoBuilder geometry builder singleton; TGeoCacheState class storing the cache state; TGeoChecker a simple geometry checker; TGeoCombiTrans rotation + translation; TGeoCombiTransEditor TGeoCombiTrans editor; TGeoCompositeShape boolean composite shape; TGeoCone conical tube class; TGeoConeEditor TGeoCone editor; TGeoConeSeg conical tube segment class ; TGeoConeSegEditor TGeoConeSeg editor; TGeoCtub cut tube segment class ; TGeoCtubEditor TGeoCtub editor; TGeoDecayChannel Decay channel for Elements; TGeoElemIter Iterator for radionuclide chains.",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:91153,Performance,cache,cache,91153,"calFrame Composite frame with vertical child layout; TGVerticalLayout Vertical layout manager; TGView View widget base class; TGViewFrame Frame containing the actual text; TGViewPort Viewport through which to look at a container frame; TGWidget Widget base class; TGWindow GUI Window base class; TGX11 Interface to X11; TGX11TTF Interface to X11 + TTF font handling; TGXYLayout X / Y - layout manager; TGXYLayoutHints Hits for the X / Y - layout manager; TGaxis Graphics axis; TGedEditor ROOT graphics editor; TGedFrame base editor's frame; TGedMarkerPopup marker select popup; TGedMarkerSelect Marker selection button; TGedNameFrame frame showing the selected object name; TGedPatternFrame pattern frame; TGedPatternPopup Color selector popup; TGedPatternSelect pattern selection check-button; TGedPatternSelector select pattern frame; TGedPopup popup window; TGedSelect selection check-button; TGenCollectionProxy ; TGenCollectionProxy::Method ; TGenCollectionProxy::Value ; TGenPhaseSpace Simple Phase Space Generator; TGenerator Event generator interface abstract baseclass; TGenericTable Generic array of C-structure (a'la STL vector); TGenericTable::iterator ; TGeoArb8 arbitrary trapezoid with 8 vertices; TGeoAtt class for visibility, activity and optimization attributes for volumes/nodes; TGeoBBox box primitive; TGeoBBoxEditor TGeoBBox editor; TGeoBatemanSol Solution for the Bateman equation; TGeoBoolNode a boolean node; TGeoBranchArray ; TGeoBuilder geometry builder singleton; TGeoCacheState class storing the cache state; TGeoChecker a simple geometry checker; TGeoCombiTrans rotation + translation; TGeoCombiTransEditor TGeoCombiTrans editor; TGeoCompositeShape boolean composite shape; TGeoCone conical tube class; TGeoConeEditor TGeoCone editor; TGeoConeSeg conical tube segment class ; TGeoConeSegEditor TGeoConeSeg editor; TGeoCtub cut tube segment class ; TGeoCtubEditor TGeoCtub editor; TGeoDecayChannel Decay channel for Elements; TGeoElemIter Iterator for radionuclide chains.",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:93089,Performance,cache,cache,93089,,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:104823,Performance,perform,performs,104823,"n Lorentz transformations including boosts and rotations; TLorentzVector A four vector with (-,-,-,+) metric; TMCVerbose Verbose class for MC application; TMD5 MD5 cryptographic hash functions with a 128 bit output; TMLPAnalyzer A simple analysis class for MLP; TMVA ; TMVA::BDTEventWrapper ; TMVA::BinarySearchTree Binary search tree including volume search method ; TMVA::BinarySearchTreeNode Node for the BinarySearchTree; TMVA::BinaryTree Base class for BinarySearch and Decision Trees; TMVA::CCPruner ; TMVA::CCTreeWrapper ; TMVA::Config Singleton class for global configuration settings; TMVA::Config::IONames ; TMVA::Config::VariablePlotting ; TMVA::Configurable Virtual base class for all TMVA method; TMVA::CostComplexityPruneTool ; TMVA::CrossEntropy Implementation of the CrossEntropy as separation criterion; TMVA::DecisionTree implementation of a Decision Tree; TMVA::DecisionTreeNode Node for the Decision Tree ; TMVA::Event ; TMVA::Factory The factory creates all MVA methods, and performs their training and testing; TMVA::FitterBase Baseclass for fitters; TMVA::GeneticAlgorithm Genetic algorithm controller; TMVA::GeneticFitter Fitter using a Genetic Algorithm; TMVA::GeneticGenes Genes definition for genetic algorithm; TMVA::GeneticPopulation Population definition for genetic algorithm; TMVA::GeneticRange Range definition for genetic algorithm; TMVA::GiniIndex Implementation of the GiniIndex as separation criterion; TMVA::GiniIndexWithLaplace Implementation of the GiniIndexWithLaplace as separation criterion; TMVA::IFitterTarget base class for a fitter ""target""; TMVA::IMethod Method Interface; TMVA::Interval Interval definition, continous and discrete; TMVA::KDEKernel Kernel density estimator for PDF smoothing; TMVA::LogInterval Interval definition, continous and discrete; TMVA::MCFitter Fitter using Monte Carlo sampling of parameters ; TMVA::MethodANNBase Base class for TMVA ANNs; TMVA::MethodBDT Analysis of Boosted Decision Trees; TMVA::MethodBase Virtual base clas",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:107434,Performance,Optimiz,OptimizeConfigParameters,107434,"parison of chi-squared estimators for signal and background; TMVA::MethodKNN k Nearest Neighbour classifier; TMVA::MethodLD Linear discriminant analysis; TMVA::MethodLikelihood Likelihood analysis (""non-parametric approach"") ; TMVA::MethodMLP Multi-layer perceptron implemented specifically for TMVA; TMVA::MethodPDEFoam Multi-dimensional probability density estimator using TFoam (PDE-Foam); TMVA::MethodPDERS Multi-dimensional probability density estimator range search (PDERS) method; TMVA::MethodRuleFit Friedman's RuleFit method; TMVA::MethodSVM Support Vector Machine; TMVA::MethodTMlpANN Implementation of interface for TMultiLayerPerceptron; TMVA::MinuitFitter Fitter using a Genetic Algorithm; TMVA::MinuitWrapper Wrapper around TMinuit; TMVA::MisClassificationError Implementation of the MisClassificationError as separation criterion; TMVA::MsgLogger Ostringstream derivative to redirect and format logging output; TMVA::Node Node for the BinarySearch or Decision Trees; TMVA::OptimizeConfigParameters Interface to different separation critiera used in training algorithms; TMVA::PDEFoam Tree of PDEFoamCells; TMVA::PDEFoamCell Single cell of FOAM; TMVA::PDEFoamDecisionTree Decision tree like PDEFoam; TMVA::PDEFoamDecisionTreeDensity Class for decision tree like PDEFoam density; TMVA::PDEFoamDensityBase PDEFoam event density interface; TMVA::PDEFoamDiscriminant Tree of PDEFoamCells; TMVA::PDEFoamDiscriminantDensity Class for Discriminant density; TMVA::PDEFoamEvent Tree of PDEFoamCells; TMVA::PDEFoamEventDensity Class for Event density; TMVA::PDEFoamKernelBase PDEFoam kernel interface; TMVA::PDEFoamKernelGauss Gaussian PDEFoam kernel estimator; TMVA::PDEFoamKernelLinN next neighbor PDEFoam kernel estimator; TMVA::PDEFoamKernelTrivial trivial PDEFoam kernel estimator; TMVA::PDEFoamMultiTarget Tree of PDEFoamCells; TMVA::PDEFoamTarget Tree of PDEFoamCells; TMVA::PDEFoamTargetDensity Class for Target density; TMVA::PDEFoamVect n-dimensional vector with dynamical allocation; TM",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:123102,Performance,perform,performance,123102,OOF; TProofDrawListOfGraphs::Point3D_t ; TProofDrawListOfPolyMarkers3D Tree drawing selector for PROOF; TProofDrawListOfPolyMarkers3D::Point4D_t ; TProofDrawPolyMarker3D Tree drawing selector for PROOF; TProofDrawProfile Tree drawing selector for PROOF; TProofDrawProfile2D Tree drawing selector for PROOF; TProofLimitsFinder Find and communicate best axis limits; TProofLite PROOF-Lite control class; TProofLog PROOF session log handler; TProofLogElem PROOF session log element; TProofMgr Abstract PROOF manager interface; TProofMgrLite XrdProofd PROOF manager interface; TProofMonSender Interface for PROOF monitoring; TProofMonSenderML Interface for PROOF monitoring; TProofMonSenderSQL Interface for PROOF monitoring; TProofNodeInfo Class describing a PROOF node; TProofNodes Node and worker information; TProofOutputFile Wrapper class to steer the merging of files produced on workers; TProofOutputList Output list specific TList derivation; TProofPerfAnalysis Set of tools to analyse the performance tree; TProofPlayer Basic PROOF player; TProofPlayerLite PROOF player running in PROOF-Lite; TProofPlayerLocal PROOF player running on client; TProofPlayerRemote PROOF player running on master server; TProofPlayerSlave PROOF player running on slave server; TProofPlayerSuperMaster PROOF player running on super master; TProofProgressDialog PROOF progress dialog; TProofProgressInfo Progress information; TProofProgressLog Class implementing a log graphic box; TProofProgressMemoryPlot PROOF progress memory plots; TProofProgressStatus Proof progress status class; TProofQueryResult Class describing a PROOF query; TProofResources Abstract class describing PROOF resources; TProofResourcesStatic Class to handle PROOF static config; TProofServ PROOF Server Application Interface; TProofServLite PROOF-Lite Server Application Interface; TProofSuperMaster PROOF control class for making submasters; TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t> Class describing a vector container; TProo,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:135545,Performance,Perform,Perform,135545,"element of type STL container; TStreamerSTLstring Streamer element of type C++ string; TStreamerString Streamer element of type TString; TString Basic string class; TStringLong Long string class (more than 255 chars); TStringToken String tokenizer using PCRE for finding next tokens.; TStructNode Node with information about class; TStructNodeEditor GUI fo editing TStructNode; TStructNodeProperty Class with nodes color property; TStructViewer A 3D struct viewer; TStructViewerGUI A GUI fo 3D struct viewer ; TStyle A collection of all graphics attributes; TStyleDialog Dialog box used by the TStyleManager class; TStyleManager Graphical User Interface for managing styles; TStylePreview Preview window used by the TStyleManager class; TSubString ; TSynapse simple weighted bidirectionnal connection between 2 neurons; TSysEvtHandler ABC for handling system events; TSystem ABC defining a generic interface to the OS; TSystemDirectory A system directory; TSystemFile A system file; TTF Interface to TTF font handling; TTRAP TRAP shape; TTRD1 TRD1 shape; TTRD2 TRD2 shape; TTUBE TUBE shape; TTUBS TUBS shape; TTVLVContainer A dragging-capable LVContainer; TTVLVEntry Item that goes into the tree list view widget; TTVRecord A draw record for TTreeViewer; TTVSession A tree viewer session; TTabCom Perform command line completion when hitting <TAB>; TTable vector of the C structures; TTable3Points A 3-D Points; TTable::iterator ; TTableDescriptor descrpitor defining the internal layout of TTable objects; TTableIter Iterator over ""sorted"" TTable objects; TTableMap ""Map"" array for TTable object; TTablePadView3D ; TTablePoints Defines the TTable as an element of ""event"" geometry; TTableRange Range used in TGTable.; TTableSorter Is an ""observer"" class to sort the TTable objects; TTask Base class for tasks; TTeXDump Tex driver; TText Text; TTextEditor text editor; TThread Thread class; TThreadFactory Thread factory ABC; TThreadImp ThreadImp class; TTime Basic time type with milli second precis",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:136992,Performance,perform,performance,136992, Tex driver; TText Text; TTextEditor text editor; TThread Thread class; TThreadFactory Thread factory ABC; TThreadImp ThreadImp class; TTime Basic time type with milli second precision; TTimeStamp Encapsulates seconds and ns since EPOCH; TTimer Handle timer event; TToggle Facility for toggling datamembers on/off; TToggleGroup Group of contex-menu toggle objects; TTree Tree descriptor (the main ROOT I/O class); TTreeCache Specialization of TFileCacheRead for a TTree; TTreeCacheUnzip Specialization of TTreeCache for parallel unzipping; TTreeCloner helper used for the fast cloning of TTrees.; TTreeDrawArgsParser Helper class to parse the argument to TTree::Draw; TTreeFormula The Tree formula; TTreeFormulaManager A class coordinating several TTreeFormula objects.; TTreeFriendLeafIter Linked list iterator; TTreeIndex A Tree Index with majorname and minorname.; TTreeInput Simple input dialog; TTreePerfStats TTree I/O performance measurement; TTreePlayer Manager class to play with TTrees; TTreeResult TTree query result; TTreeRow One row of an TTree query result; TTreeSQL TTree Implementation read and write to a SQL database.; TTreeTableInterface Interface to data in a TTree; TTreeViewer A GUI oriented tree viewer; TUDPSocket This class implements UDP client sockets; TUUID Universally Unique IDentifier; TUnfold Unfolding with support for L-curve analysis; TUnfoldBinning Complex binning schemes for TUnfoldDensity; TUnfoldDensity Unfolding with densisty regularisation; TUnfoldSys Unfolding with support for systematic error propagation; TUnixSystem Interface to Unix OS services; TUnuran ; TUnuranBaseDist Base class for Unuran distribution wrappers; TUnuranContDist Wrapper class for one dimensional continuous distribution; TUnuranDiscrDist Wrapper class for one dimensional discrete distribution; TUnuranEmpDist Wrapper class for empirical distribution ; TUnuranMultiContDist Wrapper class for multi dimensional continuous distribution; TUnuranSampler ; TUploadDataSetDlg New query d,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:64530,Safety,safe,safe,64530,"se class for event management and navigation.; TEveException Exception-type thrown by Eve classes.; TEveFrameBox Description of a 2D or 3D frame that can be used to visually group a set of objects.; TEveFrameBoxGL GL-renderer for TEveFrameBox class.; TEveGDoubleValuator Composite GUI element for selection of range (label, two number-entries and double-slider).; TEveGListTreeEditorFrame Composite GUI frame for parallel display of a TGListTree and TEveGedEditor.; TEveGTriVecValuator Composite GUI element for setting three numerical values (label, three number-entries).; TEveGValuator Composite GUI element for single value selection (supports label, number-entry and slider).; TEveGValuatorBase Base class for composite GUI elements for setting of numeric values.; TEveGedEditor Specialization of TGedEditor for proper update propagation to TEveManager.; TEveGedNameFrame Top name-frame used in EVE.; TEveGedNameTextButton Button for GED name-frame.; TEveGeoManagerHolder Exception-safe wrapper for temporary setting of gGeoManager variable.; TEveGeoNode Wrapper for TGeoNode that allows it to be shown in GUI and controlled as a TEveElement.; TEveGeoNodeEditor Editor for TEveGeoNode class.; TEveGeoPolyShape A shape with arbitrary tesselation for visualization of CSG shapes.; TEveGeoShape Wrapper for TGeoShape with absolute positioning and color attributes allowing display of extracted TGeoShape's (without an active TGeoManager) and simplified geometries (needed for NLT projections).; TEveGeoShapeExtract Globally positioned TGeoShape with rendering attributes and an optional list of daughter shape-extracts.; TEveGeoShapeProjected ; TEveGeoTopNode Top-level TEveGeoNode with a pointer to TGeoManager and controls for steering of TGeoPainter.; TEveGeoTopNodeEditor Editor for TEveGeoTopNode class.; TEveGridStepper Provide discrete position coordinates for placement of objects on regular grids.; TEveGridStepperEditor Editor for TEveGridStepper class.; TEveGridStepperSubEditor Sub-edit",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:66796,Safety,safe,safe,66796,"etCone.; TEveJetConeProjectedGL GL renderer class for TEveJetCone.; TEveLegoEventHandler A GL event handler class. Swiches perspective or orthographic camera.; TEveLine An arbitrary polyline with fixed line and marker attributes.; TEveLineEditor Editor for TEveLine class.; TEveLineGL GL-renderer for TEveLine class.; TEveLineProjected Projected replica of a TEveLine.; TEveListTreeItem Special llist-tree-item for Eve.; TEveMCRecCrossRef Cross-reference of sim/rec data per particle (also used in VSD).; TEveMCTrack Monte Carlo track (also used in VSD).; TEveMacro TMacro wrapper (attempting to fix issues with different macro loading and execution schemes).; TEveMagField Abstract interface to magnetic field; TEveMagFieldConst Interface to constant magnetic field.; TEveMagFieldDuo Interface to magnetic field with two different values depending on radius.; TEveManager Eve application manager.; TEveManager::TExceptionHandler Exception handler for Eve exceptions.; TEveManager::TRedrawDisabler Exception-safe EVE redraw-disabler.; TEvePad Internal TEveUtil pad class (sub-class of TPad) overriding handling of updates and 3D-viewers.; TEvePadHolder Exception-safe wrapper for temporary setting of gPad variable.; TEveParamList Eve element to store generic configuration information.; TEveParamList::BoolConfig_t ; TEveParamList::FloatConfig_t ; TEveParamList::IntConfig_t ; TEveParamListEditor GUI editor for TEveParamList.; TEvePathMarkT<double> Template for a special point on a track: position/momentum reference, daughter creation or decay.; TEvePathMarkT<float> Template for a special point on a track: position/momentum reference, daughter creation or decay.; TEvePlot3D Short description.; TEvePlot3DGL GL renderer class for TEvePlot3D.; TEvePointSelector TSelector for direct extraction of point-like data from a Tree.; TEvePointSelectorConsumer Virtual base for classes that can be filled from TTree data via the TEvePointSelector class.; TEvePointSet Set of 3D points with same marker a",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:66951,Safety,safe,safe,66951,"trary polyline with fixed line and marker attributes.; TEveLineEditor Editor for TEveLine class.; TEveLineGL GL-renderer for TEveLine class.; TEveLineProjected Projected replica of a TEveLine.; TEveListTreeItem Special llist-tree-item for Eve.; TEveMCRecCrossRef Cross-reference of sim/rec data per particle (also used in VSD).; TEveMCTrack Monte Carlo track (also used in VSD).; TEveMacro TMacro wrapper (attempting to fix issues with different macro loading and execution schemes).; TEveMagField Abstract interface to magnetic field; TEveMagFieldConst Interface to constant magnetic field.; TEveMagFieldDuo Interface to magnetic field with two different values depending on radius.; TEveManager Eve application manager.; TEveManager::TExceptionHandler Exception handler for Eve exceptions.; TEveManager::TRedrawDisabler Exception-safe EVE redraw-disabler.; TEvePad Internal TEveUtil pad class (sub-class of TPad) overriding handling of updates and 3D-viewers.; TEvePadHolder Exception-safe wrapper for temporary setting of gPad variable.; TEveParamList Eve element to store generic configuration information.; TEveParamList::BoolConfig_t ; TEveParamList::FloatConfig_t ; TEveParamList::IntConfig_t ; TEveParamListEditor GUI editor for TEveParamList.; TEvePathMarkT<double> Template for a special point on a track: position/momentum reference, daughter creation or decay.; TEvePathMarkT<float> Template for a special point on a track: position/momentum reference, daughter creation or decay.; TEvePlot3D Short description.; TEvePlot3DGL GL renderer class for TEvePlot3D.; TEvePointSelector TSelector for direct extraction of point-like data from a Tree.; TEvePointSelectorConsumer Virtual base for classes that can be filled from TTree data via the TEvePointSelector class.; TEvePointSet Set of 3D points with same marker attributes; optionally each point can be assigned an external TRef or a number of integer indices.; TEvePointSetArray Array of TEvePointSet's filled via a common point-source; r",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:86837,Safety,safe,safe,86837,"t Layout manager for number entry widget; TGNumberFormat Class defining namespace for several enums used by TGNumberEntry; TGObject ROOT GUI base class; TGPack Horizontal or vertical stack of frames.; TGPasswdDialog Dialog for entering passwords; TGPicture Pictures and icons used by the GUI classes; TGPictureButton A picture button widget; TGPicturePool Picture and icon cache; TGPopupMenu Popup menu; TGPosition Position object (x and y are Int_t); TGPrintDialog Print dialog used by TGTextEdit widget; TGProgressBar Progress bar abstract base class; TGQt Interface to Qt GUI; TGRadioButton A radio button widget; TGRecorder GUI class of the event recorder.; TGRectMap Rectangle used in TMap; TGRectangle Rectangle object; TGRedirectOutputGuard Exception safe output redirection; TGRegion Describes a region; TGRegionWithId Region with id, tooltip text and popup menu; TGResourcePool Graphics resource pool; TGRowLayout Row layout manager; TGScrollBar Scrollbar widget; TGScrollBarElement Scrollbar element (head, tail, slider); TGSearchDialog Text search dialog used by TGTextEdit widget; TGSearchType ; TGSelectBox TreeView dialog widget; TGSelectedPicture Selected looking picture; TGShapedFrame Shaped composite frame; TGShutter Shutter widget; TGShutterItem Shutter widget item; TGSimpleTable A simple table that owns it's interface.; TGSimpleTableInterface Interface to data in a 2D array of Double_t; TGSlider Slider widget abstract base class; TGSpeedo Base class for analog meter widget; TGSplitButton a split button widget; TGSplitFrame Splittable composite frame; TGSplitTool Split frame tool utility; TGSplitter A frame splitter abstract base class; TGStatusBar Status bar widget; TGString Graphics string; TGTRA GTRA shape; TGTab Tab widget; TGTabElement Little tab on tab widget; TGTabLayout Layout manager for TGTab widget; TGTable A table used to visualize data from diffent sources.; TGTableCell A single cell in a TGTable.; TGTableFrame A frame used internally by TGTable.; TGTabl",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:103779,Safety,safe,safe,103779,,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:127916,Safety,safe,safe,127916,,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:128236,Safety,detect,detector,128236,,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:37546,Security,Hash,Hash,37546,"-sum_i(a_i); RooFunctor Export RooAbsReal as functor; RooFunctor1DBinding RooAbsReal binding to a ROOT::Math::IBaseFunctionOneDim; RooFunctor1DPdfBinding RooAbsPdf binding to a ROOT::Math::IBaseFunctionOneDim; RooFunctorBinding RooAbsReal binding to a ROOT::Math::IBaseFunctionMultiDim; RooFunctorPdfBinding RooAbsPdf binding to a ROOT::Math::IBaseFunctionMultiDim; RooGExpModel Gauss (x) Expontial resolution model; RooGamma Gaussian PDF; RooGaussKronrodIntegrator1D 1-dimensional Gauss-Kronrod numerical integration engine; RooGaussModel Gaussian Resolution Model; RooGaussian Gaussian PDF; RooGenCategory Generic category-to-category function based on user supplied mapping function; RooGenContext Universal context for generating toy MC data from any p.d.f; RooGenFitStudy Generate-and-Fit study module; RooGenFunction Export RooAbsReal as functor; RooGenProdProj General form of projected integral of product of PDFs, utility class for RooProdPdf; RooGenericPdf Generic PDF defined by string expression and list of variables; RooGlobalFunc ; RooGrid Utility class for RooMCIntegrator holding a multi-dimensional grid; RooHashTable Hash table; RooHist 1-dimensional histogram with error bars; RooHistConstraint Your description goes here...; RooHistError Utility class for calculating histogram errors; RooHistFunc Histogram based function; RooHistPdf Histogram based PDF; RooImproperIntegrator1D 1-dimensional improper integration engine; RooInt Container class for Int_t; RooIntegralMorph Linear shape interpolation operator p.d.f; RooIntegrator1D 1-dimensional numerical integration engine; RooIntegrator2D 2-dimensional numerical integration engine; RooIntegratorBinding Function binding representing output of numeric integrator; RooInvTransform Function binding returning inverse of other function binding; RooJeffreysPrior Sum of RooAbsReal objects; RooKeysPdf One-dimensional non-parametric kernel estimation p.d.f.; RooLandau Landau Distribution PDF; RooLegendre Legendre polynomial; RooL",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:44417,Security,Validat,Validated,44417,"ngine; RooSegmentedIntegrator2D 2-dimensional piece-wise numerical integration engine; RooSentinel ; RooSetPair Utility class holding a pair of RooArgSet pointers; RooSetProxy Proxy class for a RooArgSet; RooSharedProperties Abstract interface for shared property implementations; RooSharedPropertiesList Manager for shared properties among clones of certain RooAbsArg-derived types; RooSimGenContext Context for efficiently generating a dataset from a RooSimultaneous PDF; RooSimPdfBuilder RooSimultaneous PDF Builder (obsolete); RooSimSplitGenContext Context for efficiently generating a dataset from a RooSimultaneous PDF; RooSimWSTool Workspace oriented tool for customized cloning of p.d.f. into a simultaneous p.d.f; RooSimWSTool::BuildConfig Build configuration object for RooSimWSTool; RooSimWSTool::MultiBuildConfig Build configuration object for RooSimWSTool with multiple prototype p.d.f.; RooSimWSTool::ObjBuildConfig Validated RooSimWSTool build configuration; RooSimWSTool::ObjSplitRule Validated RooSimWSTool split rule; RooSimWSTool::SplitRule Split rule specification for prototype p.d.f; RooSimultaneous Simultaneous operator p.d.f, functions like C++ 'switch()' on input p.d.fs operating on index category5A; RooSpHarmonic SpHarmonic polynomial; RooStats ; RooStats::AcceptanceRegion A simple class for acceptance regions used for ConfidenceBelt; RooStats::AsymptoticCalculator ; RooStats::BayesianCalculator BayesianCalculator class; RooStats::BernsteinCorrection A utility to add polynomial corrrection terms to a model to improve the description of data.; RooStats::CombinedCalculator A base class that is for tools that can be both HypoTestCalculators and IntervalCalculators; RooStats::ConfInterval Interface for Confidence Intervals; RooStats::ConfidenceBelt A confidence belt for the Neyman Construction; RooStats::DebuggingSampler A simple implementation of the DistributionCreator interface; RooStats::DebuggingTestStat A concrete implementation of the TestStatistic inter",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:44488,Security,Validat,Validated,44488,"ngine; RooSegmentedIntegrator2D 2-dimensional piece-wise numerical integration engine; RooSentinel ; RooSetPair Utility class holding a pair of RooArgSet pointers; RooSetProxy Proxy class for a RooArgSet; RooSharedProperties Abstract interface for shared property implementations; RooSharedPropertiesList Manager for shared properties among clones of certain RooAbsArg-derived types; RooSimGenContext Context for efficiently generating a dataset from a RooSimultaneous PDF; RooSimPdfBuilder RooSimultaneous PDF Builder (obsolete); RooSimSplitGenContext Context for efficiently generating a dataset from a RooSimultaneous PDF; RooSimWSTool Workspace oriented tool for customized cloning of p.d.f. into a simultaneous p.d.f; RooSimWSTool::BuildConfig Build configuration object for RooSimWSTool; RooSimWSTool::MultiBuildConfig Build configuration object for RooSimWSTool with multiple prototype p.d.f.; RooSimWSTool::ObjBuildConfig Validated RooSimWSTool build configuration; RooSimWSTool::ObjSplitRule Validated RooSimWSTool split rule; RooSimWSTool::SplitRule Split rule specification for prototype p.d.f; RooSimultaneous Simultaneous operator p.d.f, functions like C++ 'switch()' on input p.d.fs operating on index category5A; RooSpHarmonic SpHarmonic polynomial; RooStats ; RooStats::AcceptanceRegion A simple class for acceptance regions used for ConfidenceBelt; RooStats::AsymptoticCalculator ; RooStats::BayesianCalculator BayesianCalculator class; RooStats::BernsteinCorrection A utility to add polynomial corrrection terms to a model to improve the description of data.; RooStats::CombinedCalculator A base class that is for tools that can be both HypoTestCalculators and IntervalCalculators; RooStats::ConfInterval Interface for Confidence Intervals; RooStats::ConfidenceBelt A confidence belt for the Neyman Construction; RooStats::DebuggingSampler A simple implementation of the DistributionCreator interface; RooStats::DebuggingTestStat A concrete implementation of the TestStatistic inter",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:54568,Security,authenticat,authentication,54568, sub-files (like a ZIP archive); TArchiveMember An archive member file; TArray Abstract array base class; TArrayC Array of chars; TArrayD Array of doubles; TArrayF Array of floats; TArrayI Array of ints; TArrayL Array of longs; TArrayL64 Array of long64s; TArrayS Array of shorts; TArrow An arrow (line with a arrowhead); TArrowEditor GUI for editing arrow attributes; TAtomicCount ; TAtt3D 3D attributes; TAttAxis Axis attributes; TAttBBox Helper for management of bounding-box information; TAttBBox2D 2D bounding box attributes; TAttCanvas Canvas attributes; TAttFill Fill area attributes; TAttFillEditor GUI for editing fill attributes; TAttImage Image attributes; TAttLine Line attributes; TAttLineEditor GUI for editing line attributes; TAttMarker Marker attributes; TAttMarkerEditor GUI for editing marker attributes; TAttPad Pad attributes; TAttParticle Particle definition; TAttText Text attributes; TAttTextEditor GUI for editing text attributes; TAuthenticate Class providing remote authentication service; TAxis Axis class; TAxis3D 3-D ruler painting class; TAxisEditor axis editor; TBRIK TBRIK shape; TBackCompFitter Class providing backward compatibility for fitting by implementing the TVirtualFitter interface; TBase64 Base64 encoding/decoding; TBaseClass Description of a base class; TBasket the TBranch buffers; TBasketSQL the TBranch buffers; TBenchmark ROOT utility to help benchmarking applications; TBinomialEfficiencyFitter Binomial Fitter for the division of two histograms; TBits Bit container; TBits::TReference ; TBox Box class; TBranch Branch descriptor; TBranchClones Branch in case of an array of clone objects; TBranchElement Branch in case of an object; TBranchObject Branch in case of an object; TBranchRef to support referenced objects on other branches; TBranchSTL Branch handling STL collection of pointers; TBrowser ROOT Object Browser; TBrowserImp ABC describing browser implementation protocol; TBrowserPlugin basic plugin description class; TBtree A B-tree; TBtr,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:73872,Security,hash,hash,73872,e and virtual functions.; TEveVectorT<float> A three-vector template without TObject inheritance and virtual functions.; TEveViewer Reve representation of TGLViewer.; TEveViewerList List of Viewers providing common operations on TEveViewer collections.; TEveViewerListEditor GUI editor for TEveViewerList.; TEveWindow Abstract base-class for eve-windows.; TEveWindowEditor GUI editor for TEveWindow.; TEveWindowFrame Eve-window containing any TGFrame.; TEveWindowManager Manager for EVE windows.; TEveWindowPack Eve-window containing a TGPack.; TEveWindowSlot An unoccupied eve-window slot.; TEveWindowTab Eve-window containing a TGTab.; TEventIter Event iterator used by TProofPlayer's; TEventIterObj Event iterator for objects; TEventIterTree Event iterator for Trees; TEventIterUnit Event iterator for objects; TEventList A list of selected entries in a TTree.; TExMap Map with external hash; TExMapIter TExMap iterator; TExec To execute a CINT command; TF1 The Parametric 1-D function; TF12 Projection of a TF2 along x or y; TF1Editor user interface for TF1 objects; TF2 The Parametric 2-D function; TF2GL GL renderer for TF2 and TF3.; TF3 The Parametric 3-D function; TFFTComplex ; TFFTComplexReal ; TFFTReal ; TFFTRealComplex ; TFITSHDU Class interfacing FITS HDUs; TFPBlock File prefetch block; TFTP File Transfer Protocol class using rootd; TFastCgi fastcgi engine for THttpServer; TFcnAdapter wrapper class implementing the Minuit2 interface for TMinuit2-like objective functions; TFeldmanCousins calculate the CL upper limit using the Feldman-Cousins method; TFile ROOT file; TFileCacheRead TFile cache when reading; TFileCacheWrite TFile cache when writing; TFileCollection Collection of TFileInfo objects; TFileDrawMap Draw a 2-d map of the objects in a file; TFileHandler Handles events on file descriptors; TFileInfo Describes generic file info including meta data information; TFileInfoMeta Describes TFileInfo meta data; TFileIter TFile class iterator; TFileMergeInfo ; TFileMerger Fil,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:86315,Security,password,passwords,86315,"metry MDI Geometry; TGMdiHorizontalWinResizer Horizontal Window Resizer; TGMdiMainFrame MDI main frame; TGMdiMenuBar MDI menu bar; TGMdiTitleBar MDI Title Bar; TGMdiTitleIcon MDI Title Icon; TGMdiVerticalWinResizer Vertical Window Resizer; TGMdiWinResizer Window Resizer; TGMenuBar Menu bar class; TGMenuEntry Menu entry class; TGMenuTitle Menu title class; TGMimeTypes Pool of mime type objects; TGMsgBox A message dialog box; TGNumberEntry Entry field widget for several numeric formats; TGNumberEntryField A text entry field used by a TGNumberEntry; TGNumberEntryLayout Layout manager for number entry widget; TGNumberFormat Class defining namespace for several enums used by TGNumberEntry; TGObject ROOT GUI base class; TGPack Horizontal or vertical stack of frames.; TGPasswdDialog Dialog for entering passwords; TGPicture Pictures and icons used by the GUI classes; TGPictureButton A picture button widget; TGPicturePool Picture and icon cache; TGPopupMenu Popup menu; TGPosition Position object (x and y are Int_t); TGPrintDialog Print dialog used by TGTextEdit widget; TGProgressBar Progress bar abstract base class; TGQt Interface to Qt GUI; TGRadioButton A radio button widget; TGRecorder GUI class of the event recorder.; TGRectMap Rectangle used in TMap; TGRectangle Rectangle object; TGRedirectOutputGuard Exception safe output redirection; TGRegion Describes a region; TGRegionWithId Region with id, tooltip text and popup menu; TGResourcePool Graphics resource pool; TGRowLayout Row layout manager; TGScrollBar Scrollbar widget; TGScrollBarElement Scrollbar element (head, tail, slider); TGSearchDialog Text search dialog used by TGTextEdit widget; TGSearchType ; TGSelectBox TreeView dialog widget; TGSelectedPicture Selected looking picture; TGShapedFrame Shaped composite frame; TGShutter Shutter widget; TGShutterItem Shutter widget item; TGSimpleTable A simple table that owns it's interface.; TGSimpleTableInterface Interface to data in a 2D array of Double_t; TGSlider Slider wid",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:98785,Security,hash,hashtable,98785,2F 2-Dim histograms (one float per channel); TH2GL GL renderer for TH2.; TH2I 2-Dim histograms (one 32 bits integer per channel); TH2Poly 2-Dim histogram with polygon bins; TH2PolyBin 2-Dim polygon bins; TH2S 2-Dim histograms (one short per channel); TH3 3-Dim histogram base class; TH3C 3-Dim histograms (one char per channel); TH3D 3-Dim histograms (one double per channel); TH3F 3-Dim histograms (one float per channel); TH3GL GL renderer class for TH3.; TH3I 3-Dim histograms (one 32 bits integer per channel); TH3S 3-Dim histograms (one short per channel); THLimitsFinder Class to find best axis limits; THStack A collection of histograms; THYPE HYPE shape; THaarMatrixT<double> Template of Haar Matrix class; THaarMatrixT<float> Template of Haar Matrix class; THashList Doubly linked list with hashtable for lookup; THashTable A hash table; THashTableIter Hash table iterator; THbookBranch A branch for a THbookTree; THbookFile ROOT interface to Hbook/PAW files; THbookKey Hbook id descriptor; THbookTree A wrapper class supporting Hbook ntuples (CWN and RWN); THelix A Helix drawn as a PolyLine3D; THilbertMatrixT<double> Template of Hilbert Matrix class; THilbertMatrixT<float> Template of Hilbert Matrix class; THilbertMatrixTSym<double> Template of Symmetric Hilbert Matrix class; THilbertMatrixTSym<float> Template of Symmetric Hilbert Matrix class; THistPainter Helper class to draw histograms; THn Base class for multi-dimensional histogram; THnBase Common base for n-dimensional histogram; THnIter Iterator over bins of a THnBase.; THnSparse Interfaces of sparse n-dimensional histogram; THnSparseArrayChunk chunks of linearized bins; THnSparseT<TArrayC> Sparse n-dimensional histogram with templated content; THnSparseT<TArrayD> Sparse n-dimensional histogram with templated content; THnSparseT<TArrayF> Sparse n-dimensional histogram with templated content; THnSparseT<TArrayI> Sparse n-dimensional histogram with templated content; THnSparseT<TArrayL> Sparse n-dimensional histogram ,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:98820,Security,hash,hash,98820,2F 2-Dim histograms (one float per channel); TH2GL GL renderer for TH2.; TH2I 2-Dim histograms (one 32 bits integer per channel); TH2Poly 2-Dim histogram with polygon bins; TH2PolyBin 2-Dim polygon bins; TH2S 2-Dim histograms (one short per channel); TH3 3-Dim histogram base class; TH3C 3-Dim histograms (one char per channel); TH3D 3-Dim histograms (one double per channel); TH3F 3-Dim histograms (one float per channel); TH3GL GL renderer class for TH3.; TH3I 3-Dim histograms (one 32 bits integer per channel); TH3S 3-Dim histograms (one short per channel); THLimitsFinder Class to find best axis limits; THStack A collection of histograms; THYPE HYPE shape; THaarMatrixT<double> Template of Haar Matrix class; THaarMatrixT<float> Template of Haar Matrix class; THashList Doubly linked list with hashtable for lookup; THashTable A hash table; THashTableIter Hash table iterator; THbookBranch A branch for a THbookTree; THbookFile ROOT interface to Hbook/PAW files; THbookKey Hbook id descriptor; THbookTree A wrapper class supporting Hbook ntuples (CWN and RWN); THelix A Helix drawn as a PolyLine3D; THilbertMatrixT<double> Template of Hilbert Matrix class; THilbertMatrixT<float> Template of Hilbert Matrix class; THilbertMatrixTSym<double> Template of Symmetric Hilbert Matrix class; THilbertMatrixTSym<float> Template of Symmetric Hilbert Matrix class; THistPainter Helper class to draw histograms; THn Base class for multi-dimensional histogram; THnBase Common base for n-dimensional histogram; THnIter Iterator over bins of a THnBase.; THnSparse Interfaces of sparse n-dimensional histogram; THnSparseArrayChunk chunks of linearized bins; THnSparseT<TArrayC> Sparse n-dimensional histogram with templated content; THnSparseT<TArrayD> Sparse n-dimensional histogram with templated content; THnSparseT<TArrayF> Sparse n-dimensional histogram with templated content; THnSparseT<TArrayI> Sparse n-dimensional histogram with templated content; THnSparseT<TArrayL> Sparse n-dimensional histogram ,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:98847,Security,Hash,Hash,98847,2F 2-Dim histograms (one float per channel); TH2GL GL renderer for TH2.; TH2I 2-Dim histograms (one 32 bits integer per channel); TH2Poly 2-Dim histogram with polygon bins; TH2PolyBin 2-Dim polygon bins; TH2S 2-Dim histograms (one short per channel); TH3 3-Dim histogram base class; TH3C 3-Dim histograms (one char per channel); TH3D 3-Dim histograms (one double per channel); TH3F 3-Dim histograms (one float per channel); TH3GL GL renderer class for TH3.; TH3I 3-Dim histograms (one 32 bits integer per channel); TH3S 3-Dim histograms (one short per channel); THLimitsFinder Class to find best axis limits; THStack A collection of histograms; THYPE HYPE shape; THaarMatrixT<double> Template of Haar Matrix class; THaarMatrixT<float> Template of Haar Matrix class; THashList Doubly linked list with hashtable for lookup; THashTable A hash table; THashTableIter Hash table iterator; THbookBranch A branch for a THbookTree; THbookFile ROOT interface to Hbook/PAW files; THbookKey Hbook id descriptor; THbookTree A wrapper class supporting Hbook ntuples (CWN and RWN); THelix A Helix drawn as a PolyLine3D; THilbertMatrixT<double> Template of Hilbert Matrix class; THilbertMatrixT<float> Template of Hilbert Matrix class; THilbertMatrixTSym<double> Template of Symmetric Hilbert Matrix class; THilbertMatrixTSym<float> Template of Symmetric Hilbert Matrix class; THistPainter Helper class to draw histograms; THn Base class for multi-dimensional histogram; THnBase Common base for n-dimensional histogram; THnIter Iterator over bins of a THnBase.; THnSparse Interfaces of sparse n-dimensional histogram; THnSparseArrayChunk chunks of linearized bins; THnSparseT<TArrayC> Sparse n-dimensional histogram with templated content; THnSparseT<TArrayD> Sparse n-dimensional histogram with templated content; THnSparseT<TArrayF> Sparse n-dimensional histogram with templated content; THnSparseT<TArrayI> Sparse n-dimensional histogram with templated content; THnSparseT<TArrayL> Sparse n-dimensional histogram ,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:100856,Security,authenticat,authentication,100856,"parseT<TArrayI> Sparse n-dimensional histogram with templated content; THnSparseT<TArrayL> Sparse n-dimensional histogram with templated content; THnSparseT<TArrayS> Sparse n-dimensional histogram with templated content; THnT<Long64_t> multi-dimensional histogram with templated storage; THnT<ULong64_t> multi-dimensional histogram with templated storage; THnT<char> multi-dimensional histogram with templated storage; THnT<double> multi-dimensional histogram with templated storage; THnT<float> multi-dimensional histogram with templated storage; THnT<int> multi-dimensional histogram with templated storage; THnT<long> multi-dimensional histogram with templated storage; THnT<short> multi-dimensional histogram with templated storage; THnT<unsigned int> multi-dimensional histogram with templated storage; THnT<unsigned long> multi-dimensional histogram with templated storage; THnT<unsigned short> multi-dimensional histogram with templated storage; THostAuth Class providing host specific authentication information; THtml Convert class(es) into HTML file(s); THtml::TFileDefinition helper class to determine a class's source files; THtml::TFileSysDB instance of file system data; THtml::TFileSysDir an directory of the local file system; THtml::TFileSysEntry an entry of the local file system; THtml::TFileSysRoot an root directory of the local file system; THtml::THelperBase a helper object's base class; THtml::TModuleDefinition helper class to determine a class's module; THtml::TPathDefinition helper class to determine directory layouts; THttpCallArg Arguments for single HTTP call; THttpEngine abstract class which should provide http-based protocol for server; THttpServer HTTP server for ROOT analysis; TImage Abstract image class; TImageDump create image in batch mode; TImagePalette Color Palette for value -> color conversion; TImagePlugin base class for different image format handlers(plugins); TIndArray ; TIndexTable ""Index"" array for TTable object; TIndexTable::iterator ; TInetA",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:104005,Security,hash,hash,104005,,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:111662,Security,Access,Access,111662,,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:111732,Security,Access,Access,111732,,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:111809,Security,Access,Access,111809,,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:111885,Security,Access,Access,111885,,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:111976,Security,Access,Access,111976,,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:112046,Security,Access,Access,112046,) map; TMapFile Memory mapped directory structure; TMapIter Map iterator; TMapRec ; TMarker Marker; TMarker3DBox A special 3-D marker designed for event display; TMaterial Materials used in the Geometry Shapes; TMath ; TMathText TeX mathematical formula; TMatrixDEigen Eigen-Vectors/Values of a Matrix; TMatrixDSymEigen Eigen-Vectors/Values of a Matrix; TMatrixT<double> Template of General Matrix class; TMatrixT<float> Template of General Matrix class; TMatrixTBase<double> Matrix base class (template); TMatrixTBase<float> Matrix base class (template); TMatrixTColumn<double> Template of General Matrix Column Access class; TMatrixTColumn<float> Template of General Matrix Column Access class; TMatrixTColumn_const<double> Template of General Matrix Column Access class; TMatrixTColumn_const<float> Template of General Matrix Column Access class; TMatrixTCramerInv ; TMatrixTDiag<double> Template of General Matrix Diagonal Access class; TMatrixTDiag<float> Template of General Matrix Diagonal Access class; TMatrixTDiag_const<double> Template of General Matrix Diagonal Access class; TMatrixTDiag_const<float> Template of General Matrix Diagonal Access class; TMatrixTFlat<double> Template of General Matrix Flat Representation class; TMatrixTFlat<float> Template of General Matrix Flat Representation class; TMatrixTFlat_const<double> Template of General Matrix Flat Representation class; TMatrixTFlat_const<float> Template of General Matrix Flat Representation class; TMatrixTLazy<double> Template of Lazy Matrix class; TMatrixTLazy<float> Template of Lazy Matrix class; TMatrixTRow<double> Template of General Matrix Row Access class; TMatrixTRow<float> Template of General Matrix Row Access class; TMatrixTRow_const<double> Template of General Matrix Row Access class; TMatrixTRow_const<float> Template of General Matrix Row Access class; TMatrixTSparse<double> Template of Sparse Matrix class; TMatrixTSparse<float> Template of Sparse Matrix class; TMatrixTSparseDiag<double> Template of Spar,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:112123,Security,Access,Access,112123,pRec ; TMarker Marker; TMarker3DBox A special 3-D marker designed for event display; TMaterial Materials used in the Geometry Shapes; TMath ; TMathText TeX mathematical formula; TMatrixDEigen Eigen-Vectors/Values of a Matrix; TMatrixDSymEigen Eigen-Vectors/Values of a Matrix; TMatrixT<double> Template of General Matrix class; TMatrixT<float> Template of General Matrix class; TMatrixTBase<double> Matrix base class (template); TMatrixTBase<float> Matrix base class (template); TMatrixTColumn<double> Template of General Matrix Column Access class; TMatrixTColumn<float> Template of General Matrix Column Access class; TMatrixTColumn_const<double> Template of General Matrix Column Access class; TMatrixTColumn_const<float> Template of General Matrix Column Access class; TMatrixTCramerInv ; TMatrixTDiag<double> Template of General Matrix Diagonal Access class; TMatrixTDiag<float> Template of General Matrix Diagonal Access class; TMatrixTDiag_const<double> Template of General Matrix Diagonal Access class; TMatrixTDiag_const<float> Template of General Matrix Diagonal Access class; TMatrixTFlat<double> Template of General Matrix Flat Representation class; TMatrixTFlat<float> Template of General Matrix Flat Representation class; TMatrixTFlat_const<double> Template of General Matrix Flat Representation class; TMatrixTFlat_const<float> Template of General Matrix Flat Representation class; TMatrixTLazy<double> Template of Lazy Matrix class; TMatrixTLazy<float> Template of Lazy Matrix class; TMatrixTRow<double> Template of General Matrix Row Access class; TMatrixTRow<float> Template of General Matrix Row Access class; TMatrixTRow_const<double> Template of General Matrix Row Access class; TMatrixTRow_const<float> Template of General Matrix Row Access class; TMatrixTSparse<double> Template of Sparse Matrix class; TMatrixTSparse<float> Template of Sparse Matrix class; TMatrixTSparseDiag<double> Template of Sparse Matrix Diagonal Access class; TMatrixTSparseDiag<float> Template of Sparse,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:112199,Security,Access,Access,112199,display; TMaterial Materials used in the Geometry Shapes; TMath ; TMathText TeX mathematical formula; TMatrixDEigen Eigen-Vectors/Values of a Matrix; TMatrixDSymEigen Eigen-Vectors/Values of a Matrix; TMatrixT<double> Template of General Matrix class; TMatrixT<float> Template of General Matrix class; TMatrixTBase<double> Matrix base class (template); TMatrixTBase<float> Matrix base class (template); TMatrixTColumn<double> Template of General Matrix Column Access class; TMatrixTColumn<float> Template of General Matrix Column Access class; TMatrixTColumn_const<double> Template of General Matrix Column Access class; TMatrixTColumn_const<float> Template of General Matrix Column Access class; TMatrixTCramerInv ; TMatrixTDiag<double> Template of General Matrix Diagonal Access class; TMatrixTDiag<float> Template of General Matrix Diagonal Access class; TMatrixTDiag_const<double> Template of General Matrix Diagonal Access class; TMatrixTDiag_const<float> Template of General Matrix Diagonal Access class; TMatrixTFlat<double> Template of General Matrix Flat Representation class; TMatrixTFlat<float> Template of General Matrix Flat Representation class; TMatrixTFlat_const<double> Template of General Matrix Flat Representation class; TMatrixTFlat_const<float> Template of General Matrix Flat Representation class; TMatrixTLazy<double> Template of Lazy Matrix class; TMatrixTLazy<float> Template of Lazy Matrix class; TMatrixTRow<double> Template of General Matrix Row Access class; TMatrixTRow<float> Template of General Matrix Row Access class; TMatrixTRow_const<double> Template of General Matrix Row Access class; TMatrixTRow_const<float> Template of General Matrix Row Access class; TMatrixTSparse<double> Template of Sparse Matrix class; TMatrixTSparse<float> Template of Sparse Matrix class; TMatrixTSparseDiag<double> Template of Sparse Matrix Diagonal Access class; TMatrixTSparseDiag<float> Template of Sparse Matrix Diagonal Access class; TMatrixTSparseDiag_const<double> Template of ,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:112677,Security,Access,Access,112677,rixTColumn<float> Template of General Matrix Column Access class; TMatrixTColumn_const<double> Template of General Matrix Column Access class; TMatrixTColumn_const<float> Template of General Matrix Column Access class; TMatrixTCramerInv ; TMatrixTDiag<double> Template of General Matrix Diagonal Access class; TMatrixTDiag<float> Template of General Matrix Diagonal Access class; TMatrixTDiag_const<double> Template of General Matrix Diagonal Access class; TMatrixTDiag_const<float> Template of General Matrix Diagonal Access class; TMatrixTFlat<double> Template of General Matrix Flat Representation class; TMatrixTFlat<float> Template of General Matrix Flat Representation class; TMatrixTFlat_const<double> Template of General Matrix Flat Representation class; TMatrixTFlat_const<float> Template of General Matrix Flat Representation class; TMatrixTLazy<double> Template of Lazy Matrix class; TMatrixTLazy<float> Template of Lazy Matrix class; TMatrixTRow<double> Template of General Matrix Row Access class; TMatrixTRow<float> Template of General Matrix Row Access class; TMatrixTRow_const<double> Template of General Matrix Row Access class; TMatrixTRow_const<float> Template of General Matrix Row Access class; TMatrixTSparse<double> Template of Sparse Matrix class; TMatrixTSparse<float> Template of Sparse Matrix class; TMatrixTSparseDiag<double> Template of Sparse Matrix Diagonal Access class; TMatrixTSparseDiag<float> Template of Sparse Matrix Diagonal Access class; TMatrixTSparseDiag_const<double> Template of Sparse Matrix Diagonal Access class; TMatrixTSparseDiag_const<float> Template of Sparse Matrix Diagonal Access class; TMatrixTSparseRow<double> Template of Sparse Matrix Row Access class; TMatrixTSparseRow<float> Template of Sparse Matrix Row Access class; TMatrixTSparseRow_const<double> Template of Sparse Matrix Row Access class; TMatrixTSparseRow_const<float> Template of Sparse Matrix Row Access class; TMatrixTSub<double> Template of Sub Matrix Access class; TMatrixTSub<f,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:112741,Security,Access,Access,112741,; TMatrixTColumn_const<double> Template of General Matrix Column Access class; TMatrixTColumn_const<float> Template of General Matrix Column Access class; TMatrixTCramerInv ; TMatrixTDiag<double> Template of General Matrix Diagonal Access class; TMatrixTDiag<float> Template of General Matrix Diagonal Access class; TMatrixTDiag_const<double> Template of General Matrix Diagonal Access class; TMatrixTDiag_const<float> Template of General Matrix Diagonal Access class; TMatrixTFlat<double> Template of General Matrix Flat Representation class; TMatrixTFlat<float> Template of General Matrix Flat Representation class; TMatrixTFlat_const<double> Template of General Matrix Flat Representation class; TMatrixTFlat_const<float> Template of General Matrix Flat Representation class; TMatrixTLazy<double> Template of Lazy Matrix class; TMatrixTLazy<float> Template of Lazy Matrix class; TMatrixTRow<double> Template of General Matrix Row Access class; TMatrixTRow<float> Template of General Matrix Row Access class; TMatrixTRow_const<double> Template of General Matrix Row Access class; TMatrixTRow_const<float> Template of General Matrix Row Access class; TMatrixTSparse<double> Template of Sparse Matrix class; TMatrixTSparse<float> Template of Sparse Matrix class; TMatrixTSparseDiag<double> Template of Sparse Matrix Diagonal Access class; TMatrixTSparseDiag<float> Template of Sparse Matrix Diagonal Access class; TMatrixTSparseDiag_const<double> Template of Sparse Matrix Diagonal Access class; TMatrixTSparseDiag_const<float> Template of Sparse Matrix Diagonal Access class; TMatrixTSparseRow<double> Template of Sparse Matrix Row Access class; TMatrixTSparseRow<float> Template of Sparse Matrix Row Access class; TMatrixTSparseRow_const<double> Template of Sparse Matrix Row Access class; TMatrixTSparseRow_const<float> Template of Sparse Matrix Row Access class; TMatrixTSub<double> Template of Sub Matrix Access class; TMatrixTSub<float> Template of Sub Matrix Access class; TMatrixTSub_const<dou,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:112812,Security,Access,Access,112812, class; TMatrixTColumn_const<float> Template of General Matrix Column Access class; TMatrixTCramerInv ; TMatrixTDiag<double> Template of General Matrix Diagonal Access class; TMatrixTDiag<float> Template of General Matrix Diagonal Access class; TMatrixTDiag_const<double> Template of General Matrix Diagonal Access class; TMatrixTDiag_const<float> Template of General Matrix Diagonal Access class; TMatrixTFlat<double> Template of General Matrix Flat Representation class; TMatrixTFlat<float> Template of General Matrix Flat Representation class; TMatrixTFlat_const<double> Template of General Matrix Flat Representation class; TMatrixTFlat_const<float> Template of General Matrix Flat Representation class; TMatrixTLazy<double> Template of Lazy Matrix class; TMatrixTLazy<float> Template of Lazy Matrix class; TMatrixTRow<double> Template of General Matrix Row Access class; TMatrixTRow<float> Template of General Matrix Row Access class; TMatrixTRow_const<double> Template of General Matrix Row Access class; TMatrixTRow_const<float> Template of General Matrix Row Access class; TMatrixTSparse<double> Template of Sparse Matrix class; TMatrixTSparse<float> Template of Sparse Matrix class; TMatrixTSparseDiag<double> Template of Sparse Matrix Diagonal Access class; TMatrixTSparseDiag<float> Template of Sparse Matrix Diagonal Access class; TMatrixTSparseDiag_const<double> Template of Sparse Matrix Diagonal Access class; TMatrixTSparseDiag_const<float> Template of Sparse Matrix Diagonal Access class; TMatrixTSparseRow<double> Template of Sparse Matrix Row Access class; TMatrixTSparseRow<float> Template of Sparse Matrix Row Access class; TMatrixTSparseRow_const<double> Template of Sparse Matrix Row Access class; TMatrixTSparseRow_const<float> Template of Sparse Matrix Row Access class; TMatrixTSub<double> Template of Sub Matrix Access class; TMatrixTSub<float> Template of Sub Matrix Access class; TMatrixTSub_const<double> Template of Sub Matrix Access class; TMatrixTSub_const<float> Temp,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:112882,Security,Access,Access,112882,Access class; TMatrixTCramerInv ; TMatrixTDiag<double> Template of General Matrix Diagonal Access class; TMatrixTDiag<float> Template of General Matrix Diagonal Access class; TMatrixTDiag_const<double> Template of General Matrix Diagonal Access class; TMatrixTDiag_const<float> Template of General Matrix Diagonal Access class; TMatrixTFlat<double> Template of General Matrix Flat Representation class; TMatrixTFlat<float> Template of General Matrix Flat Representation class; TMatrixTFlat_const<double> Template of General Matrix Flat Representation class; TMatrixTFlat_const<float> Template of General Matrix Flat Representation class; TMatrixTLazy<double> Template of Lazy Matrix class; TMatrixTLazy<float> Template of Lazy Matrix class; TMatrixTRow<double> Template of General Matrix Row Access class; TMatrixTRow<float> Template of General Matrix Row Access class; TMatrixTRow_const<double> Template of General Matrix Row Access class; TMatrixTRow_const<float> Template of General Matrix Row Access class; TMatrixTSparse<double> Template of Sparse Matrix class; TMatrixTSparse<float> Template of Sparse Matrix class; TMatrixTSparseDiag<double> Template of Sparse Matrix Diagonal Access class; TMatrixTSparseDiag<float> Template of Sparse Matrix Diagonal Access class; TMatrixTSparseDiag_const<double> Template of Sparse Matrix Diagonal Access class; TMatrixTSparseDiag_const<float> Template of Sparse Matrix Diagonal Access class; TMatrixTSparseRow<double> Template of Sparse Matrix Row Access class; TMatrixTSparseRow<float> Template of Sparse Matrix Row Access class; TMatrixTSparseRow_const<double> Template of Sparse Matrix Row Access class; TMatrixTSparseRow_const<float> Template of Sparse Matrix Row Access class; TMatrixTSub<double> Template of Sub Matrix Access class; TMatrixTSub<float> Template of Sub Matrix Access class; TMatrixTSub_const<double> Template of Sub Matrix Access class; TMatrixTSub_const<float> Template of Sub Matrix Access class; TMatrixTSym<double> Template of Symme,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:113069,Security,Access,Access,113069,_const<double> Template of General Matrix Diagonal Access class; TMatrixTDiag_const<float> Template of General Matrix Diagonal Access class; TMatrixTFlat<double> Template of General Matrix Flat Representation class; TMatrixTFlat<float> Template of General Matrix Flat Representation class; TMatrixTFlat_const<double> Template of General Matrix Flat Representation class; TMatrixTFlat_const<float> Template of General Matrix Flat Representation class; TMatrixTLazy<double> Template of Lazy Matrix class; TMatrixTLazy<float> Template of Lazy Matrix class; TMatrixTRow<double> Template of General Matrix Row Access class; TMatrixTRow<float> Template of General Matrix Row Access class; TMatrixTRow_const<double> Template of General Matrix Row Access class; TMatrixTRow_const<float> Template of General Matrix Row Access class; TMatrixTSparse<double> Template of Sparse Matrix class; TMatrixTSparse<float> Template of Sparse Matrix class; TMatrixTSparseDiag<double> Template of Sparse Matrix Diagonal Access class; TMatrixTSparseDiag<float> Template of Sparse Matrix Diagonal Access class; TMatrixTSparseDiag_const<double> Template of Sparse Matrix Diagonal Access class; TMatrixTSparseDiag_const<float> Template of Sparse Matrix Diagonal Access class; TMatrixTSparseRow<double> Template of Sparse Matrix Row Access class; TMatrixTSparseRow<float> Template of Sparse Matrix Row Access class; TMatrixTSparseRow_const<double> Template of Sparse Matrix Row Access class; TMatrixTSparseRow_const<float> Template of Sparse Matrix Row Access class; TMatrixTSub<double> Template of Sub Matrix Access class; TMatrixTSub<float> Template of Sub Matrix Access class; TMatrixTSub_const<double> Template of Sub Matrix Access class; TMatrixTSub_const<float> Template of Sub Matrix Access class; TMatrixTSym<double> Template of Symmetric Matrix class; TMatrixTSym<float> Template of Symmetric Matrix class; TMatrixTSymCramerInv ; TMatrixTSymLazy<double> Template of Lazy Symmeytric class; TMatrixTSymLazy<float> Template,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:113144,Security,Access,Access,113144,ag_const<float> Template of General Matrix Diagonal Access class; TMatrixTFlat<double> Template of General Matrix Flat Representation class; TMatrixTFlat<float> Template of General Matrix Flat Representation class; TMatrixTFlat_const<double> Template of General Matrix Flat Representation class; TMatrixTFlat_const<float> Template of General Matrix Flat Representation class; TMatrixTLazy<double> Template of Lazy Matrix class; TMatrixTLazy<float> Template of Lazy Matrix class; TMatrixTRow<double> Template of General Matrix Row Access class; TMatrixTRow<float> Template of General Matrix Row Access class; TMatrixTRow_const<double> Template of General Matrix Row Access class; TMatrixTRow_const<float> Template of General Matrix Row Access class; TMatrixTSparse<double> Template of Sparse Matrix class; TMatrixTSparse<float> Template of Sparse Matrix class; TMatrixTSparseDiag<double> Template of Sparse Matrix Diagonal Access class; TMatrixTSparseDiag<float> Template of Sparse Matrix Diagonal Access class; TMatrixTSparseDiag_const<double> Template of Sparse Matrix Diagonal Access class; TMatrixTSparseDiag_const<float> Template of Sparse Matrix Diagonal Access class; TMatrixTSparseRow<double> Template of Sparse Matrix Row Access class; TMatrixTSparseRow<float> Template of Sparse Matrix Row Access class; TMatrixTSparseRow_const<double> Template of Sparse Matrix Row Access class; TMatrixTSparseRow_const<float> Template of Sparse Matrix Row Access class; TMatrixTSub<double> Template of Sub Matrix Access class; TMatrixTSub<float> Template of Sub Matrix Access class; TMatrixTSub_const<double> Template of Sub Matrix Access class; TMatrixTSub_const<float> Template of Sub Matrix Access class; TMatrixTSym<double> Template of Symmetric Matrix class; TMatrixTSym<float> Template of Symmetric Matrix class; TMatrixTSymCramerInv ; TMatrixTSymLazy<double> Template of Lazy Symmeytric class; TMatrixTSymLazy<float> Template of Lazy Symmeytric class; TMehrotraSolver Mehrotra Qp Solver class; TMemFi,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:113226,Security,Access,Access,113226,ble> Template of General Matrix Flat Representation class; TMatrixTFlat<float> Template of General Matrix Flat Representation class; TMatrixTFlat_const<double> Template of General Matrix Flat Representation class; TMatrixTFlat_const<float> Template of General Matrix Flat Representation class; TMatrixTLazy<double> Template of Lazy Matrix class; TMatrixTLazy<float> Template of Lazy Matrix class; TMatrixTRow<double> Template of General Matrix Row Access class; TMatrixTRow<float> Template of General Matrix Row Access class; TMatrixTRow_const<double> Template of General Matrix Row Access class; TMatrixTRow_const<float> Template of General Matrix Row Access class; TMatrixTSparse<double> Template of Sparse Matrix class; TMatrixTSparse<float> Template of Sparse Matrix class; TMatrixTSparseDiag<double> Template of Sparse Matrix Diagonal Access class; TMatrixTSparseDiag<float> Template of Sparse Matrix Diagonal Access class; TMatrixTSparseDiag_const<double> Template of Sparse Matrix Diagonal Access class; TMatrixTSparseDiag_const<float> Template of Sparse Matrix Diagonal Access class; TMatrixTSparseRow<double> Template of Sparse Matrix Row Access class; TMatrixTSparseRow<float> Template of Sparse Matrix Row Access class; TMatrixTSparseRow_const<double> Template of Sparse Matrix Row Access class; TMatrixTSparseRow_const<float> Template of Sparse Matrix Row Access class; TMatrixTSub<double> Template of Sub Matrix Access class; TMatrixTSub<float> Template of Sub Matrix Access class; TMatrixTSub_const<double> Template of Sub Matrix Access class; TMatrixTSub_const<float> Template of Sub Matrix Access class; TMatrixTSym<double> Template of Symmetric Matrix class; TMatrixTSym<float> Template of Symmetric Matrix class; TMatrixTSymCramerInv ; TMatrixTSymLazy<double> Template of Lazy Symmeytric class; TMatrixTSymLazy<float> Template of Lazy Symmeytric class; TMehrotraSolver Mehrotra Qp Solver class; TMemFile A ROOT file that reads/writes via HDFS; TMemStat a user interface class of MemS,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:113307,Security,Access,Access,113307,mplate of General Matrix Flat Representation class; TMatrixTFlat_const<double> Template of General Matrix Flat Representation class; TMatrixTFlat_const<float> Template of General Matrix Flat Representation class; TMatrixTLazy<double> Template of Lazy Matrix class; TMatrixTLazy<float> Template of Lazy Matrix class; TMatrixTRow<double> Template of General Matrix Row Access class; TMatrixTRow<float> Template of General Matrix Row Access class; TMatrixTRow_const<double> Template of General Matrix Row Access class; TMatrixTRow_const<float> Template of General Matrix Row Access class; TMatrixTSparse<double> Template of Sparse Matrix class; TMatrixTSparse<float> Template of Sparse Matrix class; TMatrixTSparseDiag<double> Template of Sparse Matrix Diagonal Access class; TMatrixTSparseDiag<float> Template of Sparse Matrix Diagonal Access class; TMatrixTSparseDiag_const<double> Template of Sparse Matrix Diagonal Access class; TMatrixTSparseDiag_const<float> Template of Sparse Matrix Diagonal Access class; TMatrixTSparseRow<double> Template of Sparse Matrix Row Access class; TMatrixTSparseRow<float> Template of Sparse Matrix Row Access class; TMatrixTSparseRow_const<double> Template of Sparse Matrix Row Access class; TMatrixTSparseRow_const<float> Template of Sparse Matrix Row Access class; TMatrixTSub<double> Template of Sub Matrix Access class; TMatrixTSub<float> Template of Sub Matrix Access class; TMatrixTSub_const<double> Template of Sub Matrix Access class; TMatrixTSub_const<float> Template of Sub Matrix Access class; TMatrixTSym<double> Template of Symmetric Matrix class; TMatrixTSym<float> Template of Symmetric Matrix class; TMatrixTSymCramerInv ; TMatrixTSymLazy<double> Template of Lazy Symmeytric class; TMatrixTSymLazy<float> Template of Lazy Symmeytric class; TMehrotraSolver Mehrotra Qp Solver class; TMemFile A ROOT file that reads/writes via HDFS; TMemStat a user interface class of MemStat; TMemStatShow class to visualize the results of TMemStat ; TMemberInspector A,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:113377,Security,Access,Access,113377,<double> Template of General Matrix Flat Representation class; TMatrixTFlat_const<float> Template of General Matrix Flat Representation class; TMatrixTLazy<double> Template of Lazy Matrix class; TMatrixTLazy<float> Template of Lazy Matrix class; TMatrixTRow<double> Template of General Matrix Row Access class; TMatrixTRow<float> Template of General Matrix Row Access class; TMatrixTRow_const<double> Template of General Matrix Row Access class; TMatrixTRow_const<float> Template of General Matrix Row Access class; TMatrixTSparse<double> Template of Sparse Matrix class; TMatrixTSparse<float> Template of Sparse Matrix class; TMatrixTSparseDiag<double> Template of Sparse Matrix Diagonal Access class; TMatrixTSparseDiag<float> Template of Sparse Matrix Diagonal Access class; TMatrixTSparseDiag_const<double> Template of Sparse Matrix Diagonal Access class; TMatrixTSparseDiag_const<float> Template of Sparse Matrix Diagonal Access class; TMatrixTSparseRow<double> Template of Sparse Matrix Row Access class; TMatrixTSparseRow<float> Template of Sparse Matrix Row Access class; TMatrixTSparseRow_const<double> Template of Sparse Matrix Row Access class; TMatrixTSparseRow_const<float> Template of Sparse Matrix Row Access class; TMatrixTSub<double> Template of Sub Matrix Access class; TMatrixTSub<float> Template of Sub Matrix Access class; TMatrixTSub_const<double> Template of Sub Matrix Access class; TMatrixTSub_const<float> Template of Sub Matrix Access class; TMatrixTSym<double> Template of Symmetric Matrix class; TMatrixTSym<float> Template of Symmetric Matrix class; TMatrixTSymCramerInv ; TMatrixTSymLazy<double> Template of Lazy Symmeytric class; TMatrixTSymLazy<float> Template of Lazy Symmeytric class; TMehrotraSolver Mehrotra Qp Solver class; TMemFile A ROOT file that reads/writes via HDFS; TMemStat a user interface class of MemStat; TMemStatShow class to visualize the results of TMemStat ; TMemberInspector ABC for inspecting class data members; TMemberStreamer ; TMergerInfo Ba,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:113446,Security,Access,Access,113446,"eneral Matrix Flat Representation class; TMatrixTFlat_const<float> Template of General Matrix Flat Representation class; TMatrixTLazy<double> Template of Lazy Matrix class; TMatrixTLazy<float> Template of Lazy Matrix class; TMatrixTRow<double> Template of General Matrix Row Access class; TMatrixTRow<float> Template of General Matrix Row Access class; TMatrixTRow_const<double> Template of General Matrix Row Access class; TMatrixTRow_const<float> Template of General Matrix Row Access class; TMatrixTSparse<double> Template of Sparse Matrix class; TMatrixTSparse<float> Template of Sparse Matrix class; TMatrixTSparseDiag<double> Template of Sparse Matrix Diagonal Access class; TMatrixTSparseDiag<float> Template of Sparse Matrix Diagonal Access class; TMatrixTSparseDiag_const<double> Template of Sparse Matrix Diagonal Access class; TMatrixTSparseDiag_const<float> Template of Sparse Matrix Diagonal Access class; TMatrixTSparseRow<double> Template of Sparse Matrix Row Access class; TMatrixTSparseRow<float> Template of Sparse Matrix Row Access class; TMatrixTSparseRow_const<double> Template of Sparse Matrix Row Access class; TMatrixTSparseRow_const<float> Template of Sparse Matrix Row Access class; TMatrixTSub<double> Template of Sub Matrix Access class; TMatrixTSub<float> Template of Sub Matrix Access class; TMatrixTSub_const<double> Template of Sub Matrix Access class; TMatrixTSub_const<float> Template of Sub Matrix Access class; TMatrixTSym<double> Template of Symmetric Matrix class; TMatrixTSym<float> Template of Symmetric Matrix class; TMatrixTSymCramerInv ; TMatrixTSymLazy<double> Template of Lazy Symmeytric class; TMatrixTSymLazy<float> Template of Lazy Symmeytric class; TMehrotraSolver Mehrotra Qp Solver class; TMemFile A ROOT file that reads/writes via HDFS; TMemStat a user interface class of MemStat; TMemStatShow class to visualize the results of TMemStat ; TMemberInspector ABC for inspecting class data members; TMemberStreamer ; TMergerInfo Basic info on merger, i.",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:113522,Security,Access,Access,113522,"eneral Matrix Flat Representation class; TMatrixTFlat_const<float> Template of General Matrix Flat Representation class; TMatrixTLazy<double> Template of Lazy Matrix class; TMatrixTLazy<float> Template of Lazy Matrix class; TMatrixTRow<double> Template of General Matrix Row Access class; TMatrixTRow<float> Template of General Matrix Row Access class; TMatrixTRow_const<double> Template of General Matrix Row Access class; TMatrixTRow_const<float> Template of General Matrix Row Access class; TMatrixTSparse<double> Template of Sparse Matrix class; TMatrixTSparse<float> Template of Sparse Matrix class; TMatrixTSparseDiag<double> Template of Sparse Matrix Diagonal Access class; TMatrixTSparseDiag<float> Template of Sparse Matrix Diagonal Access class; TMatrixTSparseDiag_const<double> Template of Sparse Matrix Diagonal Access class; TMatrixTSparseDiag_const<float> Template of Sparse Matrix Diagonal Access class; TMatrixTSparseRow<double> Template of Sparse Matrix Row Access class; TMatrixTSparseRow<float> Template of Sparse Matrix Row Access class; TMatrixTSparseRow_const<double> Template of Sparse Matrix Row Access class; TMatrixTSparseRow_const<float> Template of Sparse Matrix Row Access class; TMatrixTSub<double> Template of Sub Matrix Access class; TMatrixTSub<float> Template of Sub Matrix Access class; TMatrixTSub_const<double> Template of Sub Matrix Access class; TMatrixTSub_const<float> Template of Sub Matrix Access class; TMatrixTSym<double> Template of Symmetric Matrix class; TMatrixTSym<float> Template of Symmetric Matrix class; TMatrixTSymCramerInv ; TMatrixTSymLazy<double> Template of Lazy Symmeytric class; TMatrixTSymLazy<float> Template of Lazy Symmeytric class; TMehrotraSolver Mehrotra Qp Solver class; TMemFile A ROOT file that reads/writes via HDFS; TMemStat a user interface class of MemStat; TMemStatShow class to visualize the results of TMemStat ; TMemberInspector ABC for inspecting class data members; TMemberStreamer ; TMergerInfo Basic info on merger, i.",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:113597,Security,Access,Access,113597,"eneral Matrix Flat Representation class; TMatrixTFlat_const<float> Template of General Matrix Flat Representation class; TMatrixTLazy<double> Template of Lazy Matrix class; TMatrixTLazy<float> Template of Lazy Matrix class; TMatrixTRow<double> Template of General Matrix Row Access class; TMatrixTRow<float> Template of General Matrix Row Access class; TMatrixTRow_const<double> Template of General Matrix Row Access class; TMatrixTRow_const<float> Template of General Matrix Row Access class; TMatrixTSparse<double> Template of Sparse Matrix class; TMatrixTSparse<float> Template of Sparse Matrix class; TMatrixTSparseDiag<double> Template of Sparse Matrix Diagonal Access class; TMatrixTSparseDiag<float> Template of Sparse Matrix Diagonal Access class; TMatrixTSparseDiag_const<double> Template of Sparse Matrix Diagonal Access class; TMatrixTSparseDiag_const<float> Template of Sparse Matrix Diagonal Access class; TMatrixTSparseRow<double> Template of Sparse Matrix Row Access class; TMatrixTSparseRow<float> Template of Sparse Matrix Row Access class; TMatrixTSparseRow_const<double> Template of Sparse Matrix Row Access class; TMatrixTSparseRow_const<float> Template of Sparse Matrix Row Access class; TMatrixTSub<double> Template of Sub Matrix Access class; TMatrixTSub<float> Template of Sub Matrix Access class; TMatrixTSub_const<double> Template of Sub Matrix Access class; TMatrixTSub_const<float> Template of Sub Matrix Access class; TMatrixTSym<double> Template of Symmetric Matrix class; TMatrixTSym<float> Template of Symmetric Matrix class; TMatrixTSymCramerInv ; TMatrixTSymLazy<double> Template of Lazy Symmeytric class; TMatrixTSymLazy<float> Template of Lazy Symmeytric class; TMehrotraSolver Mehrotra Qp Solver class; TMemFile A ROOT file that reads/writes via HDFS; TMemStat a user interface class of MemStat; TMemStatShow class to visualize the results of TMemStat ; TMemberInspector ABC for inspecting class data members; TMemberStreamer ; TMergerInfo Basic info on merger, i.",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:113654,Security,Access,Access,113654,"eneral Matrix Flat Representation class; TMatrixTFlat_const<float> Template of General Matrix Flat Representation class; TMatrixTLazy<double> Template of Lazy Matrix class; TMatrixTLazy<float> Template of Lazy Matrix class; TMatrixTRow<double> Template of General Matrix Row Access class; TMatrixTRow<float> Template of General Matrix Row Access class; TMatrixTRow_const<double> Template of General Matrix Row Access class; TMatrixTRow_const<float> Template of General Matrix Row Access class; TMatrixTSparse<double> Template of Sparse Matrix class; TMatrixTSparse<float> Template of Sparse Matrix class; TMatrixTSparseDiag<double> Template of Sparse Matrix Diagonal Access class; TMatrixTSparseDiag<float> Template of Sparse Matrix Diagonal Access class; TMatrixTSparseDiag_const<double> Template of Sparse Matrix Diagonal Access class; TMatrixTSparseDiag_const<float> Template of Sparse Matrix Diagonal Access class; TMatrixTSparseRow<double> Template of Sparse Matrix Row Access class; TMatrixTSparseRow<float> Template of Sparse Matrix Row Access class; TMatrixTSparseRow_const<double> Template of Sparse Matrix Row Access class; TMatrixTSparseRow_const<float> Template of Sparse Matrix Row Access class; TMatrixTSub<double> Template of Sub Matrix Access class; TMatrixTSub<float> Template of Sub Matrix Access class; TMatrixTSub_const<double> Template of Sub Matrix Access class; TMatrixTSub_const<float> Template of Sub Matrix Access class; TMatrixTSym<double> Template of Symmetric Matrix class; TMatrixTSym<float> Template of Symmetric Matrix class; TMatrixTSymCramerInv ; TMatrixTSymLazy<double> Template of Lazy Symmeytric class; TMatrixTSymLazy<float> Template of Lazy Symmeytric class; TMehrotraSolver Mehrotra Qp Solver class; TMemFile A ROOT file that reads/writes via HDFS; TMemStat a user interface class of MemStat; TMemStatShow class to visualize the results of TMemStat ; TMemberInspector ABC for inspecting class data members; TMemberStreamer ; TMergerInfo Basic info on merger, i.",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:113710,Security,Access,Access,113710,"eneral Matrix Flat Representation class; TMatrixTFlat_const<float> Template of General Matrix Flat Representation class; TMatrixTLazy<double> Template of Lazy Matrix class; TMatrixTLazy<float> Template of Lazy Matrix class; TMatrixTRow<double> Template of General Matrix Row Access class; TMatrixTRow<float> Template of General Matrix Row Access class; TMatrixTRow_const<double> Template of General Matrix Row Access class; TMatrixTRow_const<float> Template of General Matrix Row Access class; TMatrixTSparse<double> Template of Sparse Matrix class; TMatrixTSparse<float> Template of Sparse Matrix class; TMatrixTSparseDiag<double> Template of Sparse Matrix Diagonal Access class; TMatrixTSparseDiag<float> Template of Sparse Matrix Diagonal Access class; TMatrixTSparseDiag_const<double> Template of Sparse Matrix Diagonal Access class; TMatrixTSparseDiag_const<float> Template of Sparse Matrix Diagonal Access class; TMatrixTSparseRow<double> Template of Sparse Matrix Row Access class; TMatrixTSparseRow<float> Template of Sparse Matrix Row Access class; TMatrixTSparseRow_const<double> Template of Sparse Matrix Row Access class; TMatrixTSparseRow_const<float> Template of Sparse Matrix Row Access class; TMatrixTSub<double> Template of Sub Matrix Access class; TMatrixTSub<float> Template of Sub Matrix Access class; TMatrixTSub_const<double> Template of Sub Matrix Access class; TMatrixTSub_const<float> Template of Sub Matrix Access class; TMatrixTSym<double> Template of Symmetric Matrix class; TMatrixTSym<float> Template of Symmetric Matrix class; TMatrixTSymCramerInv ; TMatrixTSymLazy<double> Template of Lazy Symmeytric class; TMatrixTSymLazy<float> Template of Lazy Symmeytric class; TMehrotraSolver Mehrotra Qp Solver class; TMemFile A ROOT file that reads/writes via HDFS; TMemStat a user interface class of MemStat; TMemStatShow class to visualize the results of TMemStat ; TMemberInspector ABC for inspecting class data members; TMemberStreamer ; TMergerInfo Basic info on merger, i.",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:113773,Security,Access,Access,113773,"eneral Matrix Flat Representation class; TMatrixTFlat_const<float> Template of General Matrix Flat Representation class; TMatrixTLazy<double> Template of Lazy Matrix class; TMatrixTLazy<float> Template of Lazy Matrix class; TMatrixTRow<double> Template of General Matrix Row Access class; TMatrixTRow<float> Template of General Matrix Row Access class; TMatrixTRow_const<double> Template of General Matrix Row Access class; TMatrixTRow_const<float> Template of General Matrix Row Access class; TMatrixTSparse<double> Template of Sparse Matrix class; TMatrixTSparse<float> Template of Sparse Matrix class; TMatrixTSparseDiag<double> Template of Sparse Matrix Diagonal Access class; TMatrixTSparseDiag<float> Template of Sparse Matrix Diagonal Access class; TMatrixTSparseDiag_const<double> Template of Sparse Matrix Diagonal Access class; TMatrixTSparseDiag_const<float> Template of Sparse Matrix Diagonal Access class; TMatrixTSparseRow<double> Template of Sparse Matrix Row Access class; TMatrixTSparseRow<float> Template of Sparse Matrix Row Access class; TMatrixTSparseRow_const<double> Template of Sparse Matrix Row Access class; TMatrixTSparseRow_const<float> Template of Sparse Matrix Row Access class; TMatrixTSub<double> Template of Sub Matrix Access class; TMatrixTSub<float> Template of Sub Matrix Access class; TMatrixTSub_const<double> Template of Sub Matrix Access class; TMatrixTSub_const<float> Template of Sub Matrix Access class; TMatrixTSym<double> Template of Symmetric Matrix class; TMatrixTSym<float> Template of Symmetric Matrix class; TMatrixTSymCramerInv ; TMatrixTSymLazy<double> Template of Lazy Symmeytric class; TMatrixTSymLazy<float> Template of Lazy Symmeytric class; TMehrotraSolver Mehrotra Qp Solver class; TMemFile A ROOT file that reads/writes via HDFS; TMemStat a user interface class of MemStat; TMemStatShow class to visualize the results of TMemStat ; TMemberInspector ABC for inspecting class data members; TMemberStreamer ; TMergerInfo Basic info on merger, i.",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:113835,Security,Access,Access,113835,"eneral Matrix Flat Representation class; TMatrixTFlat_const<float> Template of General Matrix Flat Representation class; TMatrixTLazy<double> Template of Lazy Matrix class; TMatrixTLazy<float> Template of Lazy Matrix class; TMatrixTRow<double> Template of General Matrix Row Access class; TMatrixTRow<float> Template of General Matrix Row Access class; TMatrixTRow_const<double> Template of General Matrix Row Access class; TMatrixTRow_const<float> Template of General Matrix Row Access class; TMatrixTSparse<double> Template of Sparse Matrix class; TMatrixTSparse<float> Template of Sparse Matrix class; TMatrixTSparseDiag<double> Template of Sparse Matrix Diagonal Access class; TMatrixTSparseDiag<float> Template of Sparse Matrix Diagonal Access class; TMatrixTSparseDiag_const<double> Template of Sparse Matrix Diagonal Access class; TMatrixTSparseDiag_const<float> Template of Sparse Matrix Diagonal Access class; TMatrixTSparseRow<double> Template of Sparse Matrix Row Access class; TMatrixTSparseRow<float> Template of Sparse Matrix Row Access class; TMatrixTSparseRow_const<double> Template of Sparse Matrix Row Access class; TMatrixTSparseRow_const<float> Template of Sparse Matrix Row Access class; TMatrixTSub<double> Template of Sub Matrix Access class; TMatrixTSub<float> Template of Sub Matrix Access class; TMatrixTSub_const<double> Template of Sub Matrix Access class; TMatrixTSub_const<float> Template of Sub Matrix Access class; TMatrixTSym<double> Template of Symmetric Matrix class; TMatrixTSym<float> Template of Symmetric Matrix class; TMatrixTSymCramerInv ; TMatrixTSymLazy<double> Template of Lazy Symmeytric class; TMatrixTSymLazy<float> Template of Lazy Symmeytric class; TMehrotraSolver Mehrotra Qp Solver class; TMemFile A ROOT file that reads/writes via HDFS; TMemStat a user interface class of MemStat; TMemStatShow class to visualize the results of TMemStat ; TMemberInspector ABC for inspecting class data members; TMemberStreamer ; TMergerInfo Basic info on merger, i.",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:124565,Security,Access,Access,124565,and worker information; TProofOutputFile Wrapper class to steer the merging of files produced on workers; TProofOutputList Output list specific TList derivation; TProofPerfAnalysis Set of tools to analyse the performance tree; TProofPlayer Basic PROOF player; TProofPlayerLite PROOF player running in PROOF-Lite; TProofPlayerLocal PROOF player running on client; TProofPlayerRemote PROOF player running on master server; TProofPlayerSlave PROOF player running on slave server; TProofPlayerSuperMaster PROOF player running on super master; TProofProgressDialog PROOF progress dialog; TProofProgressInfo Progress information; TProofProgressLog Class implementing a log graphic box; TProofProgressMemoryPlot PROOF progress memory plots; TProofProgressStatus Proof progress status class; TProofQueryResult Class describing a PROOF query; TProofResources Abstract class describing PROOF resources; TProofResourcesStatic Class to handle PROOF static config; TProofServ PROOF Server Application Interface; TProofServLite PROOF-Lite Server Application Interface; TProofSuperMaster PROOF control class for making submasters; TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t> Class describing a vector container; TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t> Class describing a vector container; TPyDispatcher Python dispatcher class; TPyMultiGenFunction Python for Math::IMultiGenFunction equivalent; TPyMultiGradFunction Python for Math::IMultiGradFunction equivalent; TPyReturn Python morphing return object; TPySelector Python equivalent base class for PROOF; TPythia8 Interface class of Pythia8; TPythia8Decayer Particle Decayer using Pythia8; TPython Access to the python interpreter; TQApplication creates ROOT environment with the Qt windowing system; TQCanvasImp ABC describing Qt GUI independent main window; TQCanvasMenu interface to Qt based context sensitive popup menus; TQClass Class with connections; TQCommand encapsulates the information for undo/redo a single action.,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:129074,Security,authenticat,authentication,129074,ecorder; TRedirectOutputGuard Exception safe output redirection; TRef Persistent Reference link to a TObject; TRefArray An array of references to TObjects; TRefArrayIter Object array iterator; TRefCnt ; TRefTable Table of referenced objects during an I/O operation; TRegexp Regular expression class; TRemoteObject A remote object; TResponseTable Generic Geant detector response table; TRint ROOT Interactive Application Interface; TRobustEstimator Minimum Covariance Determinant Estimator; TRolke ; TRootApplication ROOT native GUI application environment; TRootAuth client auth interface; TRootBrowser New ROOT Browser; TRootBrowserLite ROOT native GUI version of browser; TRootCanvas ROOT native GUI version of main window with menubar and drawing area; TRootContextMenu ROOT native GUI context sensitive popup menu; TRootControlBar ROOT native GUI implementation of TControlBar; TRootDialog Native GUI method argument prompt dialog box; TRootEmbeddedCanvas A ROOT TCanvas that can be embedded in a TGFrame; TRootGuiBuilder ROOT GUI Builder; TRootGuiFactory Factory for ROOT GUI components; TRootHelpDialog Dialog to display help text; TRootIOCtor ; TRootSecContext Class providing host specific authentication information; TRootSniffer Sniffer of ROOT objects; TRootSnifferScanRec Scan record for objects sniffer; TRootSnifferStore structure for results store of objects sniffer; TRootSnifferStoreJson json results store of objects sniffer; TRootSnifferStoreXml xml results store of objects sniffer; TRotMatrix Rotation Matrix for 3-D geometry objects; TRotation Rotations of TVector3 objects; TS3HTTPRequest Create generic HTTP request for Amazon S3 and Google Storage services; TS3WebFile Read a ROOT file from a S3 server; TSAXParser SAX Parser; TSPHE SPHE shape; TSPlot class to disentangle signal from background; TSQLClassColumnInfo Keeps information about single column in class table; TSQLClassInfo Keeps the table information relevant for one class ; TSQLColumnData Single SQL column data.,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:130730,Security,authenticat,authentication,130730,"Pool XML object keeper class ; TSQLObjectInfo Info (classname, version) about object in database ; TSQLResult SQL query result; TSQLRow One row of an SQL query result; TSQLServer Connection to SQL server; TSQLStatement SQL statement; TSQLStructure Table/structure description used internally by YBufferSQL.; TSQLTableData Collection of columns data for single SQL table; TSQLTableInfo Summury information about SQL table; TSSLSocket SSL wrapped socket; TSVDUnfold Data unfolding using Singular Value Decomposition (hep-ph/9509307) ; TSVG SVG driver; TSecContext Class providing host specific authentication information; TSecContextCleanup Update the remote authentication table; TSelVerifyDataSet PROOF selector for parallel dataset verification; TSelector A utility class for tree and object processing; TSelectorCint A utility class for tree and object processing (interpreted version); TSelectorDraw A specialized TSelector for TTree::Draw; TSelectorEntries A specialized TSelector for TTree::GetEntries(selection); TSelectorList Special TList used in the TSelector; TSelectorScalar Mergable scalar; TSemaphore Counting semaphore class; TSeqCollection Sequenceable collection ABC; TServerSocket This class implements server sockets; TSessionDescription Session description; TSessionFrame Session frame; TSessionInputFrame Input frame; TSessionLogView PROOF progress dialog; TSessionOutputFrame Output frame; TSessionQueryFrame Query frame; TSessionServerFrame Server frame; TSessionViewer Session Viewer; TShape Basic shape; TSignalHandler Signal event handler; TSlave PROOF slave server; TSlaveInfo basic info on workers; TSlaveLite PROOF lite worker server; TSlider A user interface slider.; TSliderBox The moving box of a TSlider; TSocket This class implements client sockets; TSortedList A sorted list; TSpectrum Peak Finder, background estimator, Deconvolution; TSpectrum2 Peak Finder, background estimator, Deconvolution for 2-D histograms; TSpectrum2Fit Spectrum2 Fitter using algorithm with",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:130795,Security,authenticat,authentication,130795,"Pool XML object keeper class ; TSQLObjectInfo Info (classname, version) about object in database ; TSQLResult SQL query result; TSQLRow One row of an SQL query result; TSQLServer Connection to SQL server; TSQLStatement SQL statement; TSQLStructure Table/structure description used internally by YBufferSQL.; TSQLTableData Collection of columns data for single SQL table; TSQLTableInfo Summury information about SQL table; TSSLSocket SSL wrapped socket; TSVDUnfold Data unfolding using Singular Value Decomposition (hep-ph/9509307) ; TSVG SVG driver; TSecContext Class providing host specific authentication information; TSecContextCleanup Update the remote authentication table; TSelVerifyDataSet PROOF selector for parallel dataset verification; TSelector A utility class for tree and object processing; TSelectorCint A utility class for tree and object processing (interpreted version); TSelectorDraw A specialized TSelector for TTree::Draw; TSelectorEntries A specialized TSelector for TTree::GetEntries(selection); TSelectorList Special TList used in the TSelector; TSelectorScalar Mergable scalar; TSemaphore Counting semaphore class; TSeqCollection Sequenceable collection ABC; TServerSocket This class implements server sockets; TSessionDescription Session description; TSessionFrame Session frame; TSessionInputFrame Input frame; TSessionLogView PROOF progress dialog; TSessionOutputFrame Output frame; TSessionQueryFrame Query frame; TSessionServerFrame Server frame; TSessionViewer Session Viewer; TShape Basic shape; TSignalHandler Signal event handler; TSlave PROOF slave server; TSlaveInfo basic info on workers; TSlaveLite PROOF lite worker server; TSlider A user interface slider.; TSliderBox The moving box of a TSlider; TSocket This class implements client sockets; TSortedList A sorted list; TSpectrum Peak Finder, background estimator, Deconvolution; TSpectrum2 Peak Finder, background estimator, Deconvolution for 2-D histograms; TSpectrum2Fit Spectrum2 Fitter using algorithm with",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:133342,Security,inject,injected,133342,"ctrum2Fit Spectrum2 Fitter using algorithm without matrix inversion and conjugate gradient method for symmetrical matrices (Stiefel-Hestens method); TSpectrum2Painter TSpectrum 3d graphics package; TSpectrum2Transform Spectrum2 Transformer, it calculates classic orthogonal 2D transforms; TSpectrum3 Peak Finder, Background estimator, Markov smoothing and Deconvolution for 3-D histograms; TSpectrumFit Spectrum Fitter using algorithm without matrix inversion and conjugate gradient method for symmetrical matrices (Stiefel-Hestens method); TSpectrumTransform Spectrum Transformer, it calculates classic orthogonal 1D transforms; TSpider Helper class to draw spider; TSpiderEditor GUI for editing the spider plot attributes.; TSpline Spline base class; TSpline3 Class to create third natural splines; TSpline5 Class to create quintic natural splines; TSplinePoly Spline polynomial terms; TSplinePoly3 Third spline polynomial terms; TSplinePoly5 Quintic spline polynomial terms; TStatistic Named statistical variable; TStatsFeedback Present PROOF query feedback; TStatus Status class; TStdExceptionHandler C++ exception handler; TStopwatch A stopwatch which times real and cpu time; TStorage Storage manager class; TStreamerArtificial StreamerElement injected by a TSchemaRule. Transient only to preverse forward compatibility.; TStreamerBase Streamer element of type base class; TStreamerBasicPointer Streamer element for a pointer to a basic type; TStreamerBasicType Streamer element for a basic type; TStreamerElement Base class for one element (data member) to be Streamed; TStreamerInfo Streamer information for one class version; TStreamerInfoActions ; TStreamerInfoActions::TActionSequence ; TStreamerInfoActions::TConfiguration ; TStreamerInfoActions::TConfiguredAction A configured action; TStreamerLoop Streamer element for a pointer to an array of objects; TStreamerObject Streamer element of type object; TStreamerObjectAny Streamer element of type object other than TObject; TStreamerObje",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:224,Testability,TEST,TEST,224,. Class Index. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. ROOT. Class Index; Modules; BINDINGS; CINT; CORE; GEOM; GRAF2D; GRAF3D; GUI; HIST; HTML; IO; MATH; MISC; MONTECARLO; NET; PROOF; ROOFIT; SQL; TEST; TMVA; TREE. Jump to; C; ROOT:; ROOT::Math:; ROOT::Math::L; ROOT::Math::P; ROOT::Math::S; ROOT::Math::SMatrix<f; ROOT::Math::T; ROOT::T; ROOT::TS; Roo1; RooC; RooCh; RooG; RooN; RooS; RooSt; RooStats:; RooU; T; TB; TC; TD; TEv; TEveG; TEveQ; TEveW; TG; TGH; TGL; TGLP; TGLW; TGR; TGU; TGeo; TGeoN; TGeoT; TGu; TI; TMV; TMVA:; TMVA::V; TMe; TO; TP; TPo; TPy; TR; TS; TSp; TSu; TU; TW. ColorStruct_t ; CpuInfo_t CPU load information.; Event_t ; FileStat_t ; FontAttributes_t ; FontMetrics_t ; Foption_t ; GCValues_t ; MemInfo_t Memory utilization information.; ParamHistFunc Sum of RooAbsReal objects; PictureAttributes_t ; PiecewiseInterpolation Sum of RooAbsReal objects; Point_t ; ProcInfo_t System resource usage of given process.; PyROOT ; PyROOT::TPyException C++ exception for throwing python exceptions; PyROOT::TPyROOTApplication Setup interactive application; ROOT ; ROOT::Fit ; ROOT::Fit::BinData ; ROOT::Fit::Chi2FCN<ROOT::Math::IBaseFunctionMultiDim> ; ROOT::Fit::Chi2FCN<ROOT::Math::IGradientFunctionMultiDim> ; ROOT::Fit::DataOptions ; ROOT::Fit::DataRange ; ROOT::Fit::FitConfig ; ROOT::Fit::FitData ; ROOT::Fit::FitResult ; ROOT::Fit::Fitter ; ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim> ; ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim> ; ROOT::Fit::ParameterSettings ; ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim> ; ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim> ; ROOT::Fit::SparseData ; ROOT::Fit::UnBinData ; ROOT::Math ; ROOT::Math::AdaptiveIntegratorMultiDim ; ROOT::Math::AxisAngle ; ROOT::Math::BaseIntegratorOptions ; ROOT::Math::BasicFitMethodFunction<ROOT::Math::IBaseFunctionMultiDim> ; ROOT::Math::BasicFitMethodFunction<ROOT::Math::IGradientFunctionMultiDim>,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:1399,Testability,Log,LogLikelihoodFCN,1399,; PyROOT ; PyROOT::TPyException C++ exception for throwing python exceptions; PyROOT::TPyROOTApplication Setup interactive application; ROOT ; ROOT::Fit ; ROOT::Fit::BinData ; ROOT::Fit::Chi2FCN<ROOT::Math::IBaseFunctionMultiDim> ; ROOT::Fit::Chi2FCN<ROOT::Math::IGradientFunctionMultiDim> ; ROOT::Fit::DataOptions ; ROOT::Fit::DataRange ; ROOT::Fit::FitConfig ; ROOT::Fit::FitData ; ROOT::Fit::FitResult ; ROOT::Fit::Fitter ; ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim> ; ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim> ; ROOT::Fit::ParameterSettings ; ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim> ; ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim> ; ROOT::Fit::SparseData ; ROOT::Fit::UnBinData ; ROOT::Math ; ROOT::Math::AdaptiveIntegratorMultiDim ; ROOT::Math::AxisAngle ; ROOT::Math::BaseIntegratorOptions ; ROOT::Math::BasicFitMethodFunction<ROOT::Math::IBaseFunctionMultiDim> ; ROOT::Math::BasicFitMethodFunction<ROOT::Math::IGradientFunctionMultiDim>,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:1464,Testability,Log,LogLikelihoodFCN,1464,; PyROOT ; PyROOT::TPyException C++ exception for throwing python exceptions; PyROOT::TPyROOTApplication Setup interactive application; ROOT ; ROOT::Fit ; ROOT::Fit::BinData ; ROOT::Fit::Chi2FCN<ROOT::Math::IBaseFunctionMultiDim> ; ROOT::Fit::Chi2FCN<ROOT::Math::IGradientFunctionMultiDim> ; ROOT::Fit::DataOptions ; ROOT::Fit::DataRange ; ROOT::Fit::FitConfig ; ROOT::Fit::FitData ; ROOT::Fit::FitResult ; ROOT::Fit::Fitter ; ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim> ; ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim> ; ROOT::Fit::ParameterSettings ; ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim> ; ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim> ; ROOT::Fit::SparseData ; ROOT::Fit::UnBinData ; ROOT::Math ; ROOT::Math::AdaptiveIntegratorMultiDim ; ROOT::Math::AxisAngle ; ROOT::Math::BaseIntegratorOptions ; ROOT::Math::BasicFitMethodFunction<ROOT::Math::IBaseFunctionMultiDim> ; ROOT::Math::BasicFitMethodFunction<ROOT::Math::IGradientFunctionMultiDim>,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:26186,Testability,test,test,26186,RooAICRegistry Registry for analytical integration codes; RooAbsAnaConvPdf Abstract Composite Convoluted PDF; RooAbsArg Abstract variable; RooAbsBinning Abstract base class for binning specification; RooAbsCache Base class for cache managers ; RooAbsCacheElement Base class for cache elements; RooAbsCachedPdf Abstract base class for cached p.d.f.s; RooAbsCachedReal Abstract base class for cached p.d.f.s; RooAbsCategory Abstract discrete variable; RooAbsCategoryLValue Abstract modifiable index variable ; RooAbsCollection Collection of RooAbsArg objects; RooAbsData Abstract data collection; RooAbsDataStore Abstract Data Storage class; RooAbsFunc Abstract real-valued function interface; RooAbsGenContext Abstract context for generating a dataset from a PDF; RooAbsHiddenReal Abstract hidden real-valued variable; RooAbsIntegrator Abstract interface for real-valued function integrators; RooAbsLValue Abstract variable; RooAbsMCStudyModule Monte Carlo study manager add-on module; RooAbsMoment Abstract representation of moment in a RooAbsReal in a given RooRealVar; RooAbsNumGenerator Abstract base class for numeric event generator algorithms; RooAbsOptTestStatistic Abstract base class for optimized test statistics; RooAbsPdf Abstract PDF with normalization support; RooAbsPdf::GenSpec Generation specification; RooAbsProxy Abstract proxy interface; RooAbsReal Abstract real-valued variable; RooAbsRealLValue Abstract modifiable real-valued object; RooAbsRootFinder Abstract interface for 1-dim real-valued function root finders; RooAbsSelfCachedPdf Abstract base class for self-caching p.d.f.s; RooAbsSelfCachedReal Abstract base class for self-caching functions; RooAbsString Abstract string-valued variable; RooAbsStudy Abstract base class for RooStudyManager modules; RooAbsTestStatistic Abstract base class for real-valued test statistics; RooAcceptReject Context for generating a dataset from a PDF; RooAdaptiveGaussKronrodIntegrator1D 1-dimensional adaptive Gauss-Kronrod numerical inte,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:26815,Testability,test,test,26815,or numeric event generator algorithms; RooAbsOptTestStatistic Abstract base class for optimized test statistics; RooAbsPdf Abstract PDF with normalization support; RooAbsPdf::GenSpec Generation specification; RooAbsProxy Abstract proxy interface; RooAbsReal Abstract real-valued variable; RooAbsRealLValue Abstract modifiable real-valued object; RooAbsRootFinder Abstract interface for 1-dim real-valued function root finders; RooAbsSelfCachedPdf Abstract base class for self-caching p.d.f.s; RooAbsSelfCachedReal Abstract base class for self-caching functions; RooAbsString Abstract string-valued variable; RooAbsStudy Abstract base class for RooStudyManager modules; RooAbsTestStatistic Abstract base class for real-valued test statistics; RooAcceptReject Context for generating a dataset from a PDF; RooAdaptiveGaussKronrodIntegrator1D 1-dimensional adaptive Gauss-Kronrod numerical integration engine; RooAdaptiveIntegratorND N-dimensional adaptive integration (interface to MathCore integrator); RooAddGenContext Specialized context for generating a dataset from a RooAddPdf; RooAddModel Resolution model representing a sum of resolution models; RooAddPdf PDF representing a sum of PDFs; RooAddition Sum of RooAbsReal objects; RooArgList Ordered list of RooAbsArg objects; RooArgProxy Abstract proxy for RooAbsArg objects; RooArgSet Set of RooAbsArg objects; RooArgusBG Argus background shape PDF; RooBCPEffDecay B Mixing decay PDF; RooBCPGenDecay B decay time distribution with CP violation; RooBDecay P.d.f of general description of B decay time distribution; RooBMixDecay B Mixing decay PDF; RooBernstein Bernstein polynomial PDF; RooBifurGauss Bifurcated Gaussian PDF; RooBinIntegrator 1-dimensional numerical integration engine; RooBinnedGenContext Specialized context for generating a dataset from a binned pdf; RooBinning Generic binning specification; RooBinningCategory RealVar-to-Category function defined by bin boundaries on input var; RooBlindTools Root implementation of BlindTools,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:33863,Testability,log,log,33863,"ss that wraps another p.d.f and caches its output ; RooCatType Category state, (name,index) pair; RooCategory Discrete valued variable type; RooCategoryProxy Proxy for a RooAbsCategory object; RooCategorySharedProperties Shared properties of a RooCategory clone set; RooChangeTracker Meta object that tracks changes in set of other arguments; RooChebychev Chebychev polynomial PDF; RooChi2MCSModule MCStudy module to calculate chi2 between binned data and fit ; RooChi2Var Chi^2 function of p.d.f w.r.t a binned dataset; RooChiSquarePdf Chi Square distribution (eg. the PDF ); RooCintUtils ; RooClassFactory RooFit class code and instance factory ; RooCmdArg Generic named argument container; RooCmdConfig Configurable parse of RooCmdArg objects; RooComplex a non-persistent bare-bones complex class; RooCompositeDataStore Composite Data Storage class; RooConstVar Constant RooAbsReal value object; RooConstraintSum sum of -log of set of RooAbsPdf representing parameter constraints; RooConvCoefVar Auxiliary class representing the coefficient of a RooAbsAnaConvPdf as a RooAbsReal; RooConvGenContext Context for generating a dataset from a PDF; RooConvIntegrandBinding RooAbsFunc representation of convolution integrands; RooCurve 1-dimensional smooth curve for use in RooPlots; RooCustomizer Editing tool for RooAbsArg composite object expressions; RooDLLSignificanceMCSModule MCStudy module to calculate Delta(-logL) significance w.r.t given null hypothesis; RooDataHist Binned data set; RooDataHistSliceIter Iterator over a one-dimensional slice of a RooDataHist; RooDataProjBinding RealFunc/Dataset binding for data projection of a real function; RooDataSet Unbinned data set; RooDataWeightedAverage Optimized calculator of data weighted average of a RooAbsReal; RooDecay General decay function p.d.f ; RooDerivative Representation of derivative of any RooAbsReal; RooDirItem Base class for RooFit objects that are listed TDirectories; RooDouble Container class for Double_t; RooDstD0BG D*-D0 ma",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:34353,Testability,log,logL,34353,"ss that wraps another p.d.f and caches its output ; RooCatType Category state, (name,index) pair; RooCategory Discrete valued variable type; RooCategoryProxy Proxy for a RooAbsCategory object; RooCategorySharedProperties Shared properties of a RooCategory clone set; RooChangeTracker Meta object that tracks changes in set of other arguments; RooChebychev Chebychev polynomial PDF; RooChi2MCSModule MCStudy module to calculate chi2 between binned data and fit ; RooChi2Var Chi^2 function of p.d.f w.r.t a binned dataset; RooChiSquarePdf Chi Square distribution (eg. the PDF ); RooCintUtils ; RooClassFactory RooFit class code and instance factory ; RooCmdArg Generic named argument container; RooCmdConfig Configurable parse of RooCmdArg objects; RooComplex a non-persistent bare-bones complex class; RooCompositeDataStore Composite Data Storage class; RooConstVar Constant RooAbsReal value object; RooConstraintSum sum of -log of set of RooAbsPdf representing parameter constraints; RooConvCoefVar Auxiliary class representing the coefficient of a RooAbsAnaConvPdf as a RooAbsReal; RooConvGenContext Context for generating a dataset from a PDF; RooConvIntegrandBinding RooAbsFunc representation of convolution integrands; RooCurve 1-dimensional smooth curve for use in RooPlots; RooCustomizer Editing tool for RooAbsArg composite object expressions; RooDLLSignificanceMCSModule MCStudy module to calculate Delta(-logL) significance w.r.t given null hypothesis; RooDataHist Binned data set; RooDataHistSliceIter Iterator over a one-dimensional slice of a RooDataHist; RooDataProjBinding RealFunc/Dataset binding for data projection of a real function; RooDataSet Unbinned data set; RooDataWeightedAverage Optimized calculator of data weighted average of a RooAbsReal; RooDecay General decay function p.d.f ; RooDerivative Representation of derivative of any RooAbsReal; RooDirItem Base class for RooFit objects that are listed TDirectories; RooDouble Container class for Double_t; RooDstD0BG D*-D0 ma",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:38832,Testability,log,log-normal,38832,"ator1D 1-dimensional numerical integration engine; RooIntegrator2D 2-dimensional numerical integration engine; RooIntegratorBinding Function binding representing output of numeric integrator; RooInvTransform Function binding returning inverse of other function binding; RooJeffreysPrior Sum of RooAbsReal objects; RooKeysPdf One-dimensional non-parametric kernel estimation p.d.f.; RooLandau Landau Distribution PDF; RooLegendre Legendre polynomial; RooLinTransBinning Linear transformation of binning specification; RooLinearVar Lvalue linear transformation function ; RooLinkedList Doubly linked list for storage of RooAbsArg objects; RooLinkedListElem Element of RooLinkedList container class; RooLinkedListIter Iterator for RooLinkedList container class; RooList TList with extra support for Option_t associations; RooListProxy Proxy class for a RooArgList; RooLognormal log-normal PDF; RooMCIntegrator VEGAS based multi-dimensional numerical integration engine; RooMCStudy A general purpose toy Monte Carlo study manager; RooMPSentinel Singleton class that terminate MP server processes when parent exists; RooMapCatEntry Utility class, holding a map expression from a index label regexp to a RooCatType; RooMappedCategory Index variable, derived from another index using pattern-matching based mapping; RooMappedCategory::Entry Map cat entry definition; RooMath math utility routines; RooMinimizer RooFit interface to ROOT::Fit::Fitter; RooMinimizerFcn ; RooMinuit RooFit minimizer based on MINUIT; RooMoment Representation of moment in a RooAbsReal in a given RooRealVar; RooMomentMorph Your description goes here...; RooMsgService RooFit Message Service Singleton class; RooMsgService::StreamConfig ; RooMultiBinomial Simultaneous pdf of N Binomial distributions with associated efficiency functions; RooMultiCatIter Iterator over all state permutations of a list of categories; RooMultiCategory Product operator for categories; RooMultiGenFunction Export RooAbsReal as functor; RooMultiVarGau",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:40193,Testability,log,log,40193,"dCategory Index variable, derived from another index using pattern-matching based mapping; RooMappedCategory::Entry Map cat entry definition; RooMath math utility routines; RooMinimizer RooFit interface to ROOT::Fit::Fitter; RooMinimizerFcn ; RooMinuit RooFit minimizer based on MINUIT; RooMoment Representation of moment in a RooAbsReal in a given RooRealVar; RooMomentMorph Your description goes here...; RooMsgService RooFit Message Service Singleton class; RooMsgService::StreamConfig ; RooMultiBinomial Simultaneous pdf of N Binomial distributions with associated efficiency functions; RooMultiCatIter Iterator over all state permutations of a list of categories; RooMultiCategory Product operator for categories; RooMultiGenFunction Export RooAbsReal as functor; RooMultiVarGaussian Multivariate Gaussian PDF with correlations; RooMultiVarGaussian::AnaIntData ; RooMultiVarGaussian::GenData ; RooNDKeysPdf General N-dimensional non-parametric kernel estimation p.d.f; RooNLLVar Function representing (extended) -log(L) of p.d.f and dataset; RooNameReg String name registry; RooNameSet A sterile version of RooArgSet, containing only the names of the contained RooAbsArgs; RooNonCPEigenDecay PDF to model CP-violating decays to final states which are not CP eigenstates; RooNonCentralChiSquare non-central chisquare pdf; RooNormSetCache Management tool for tracking sets of similar integration/normalization sets; RooNovosibirsk Novosibirsk PDF; RooNumCdf Numeric calculator for CDF for a given PDF; RooNumConvPdf Operator PDF implementing numeric convolution of 2 input PDFs; RooNumConvolution Operator PDF implementing numeric convolution of 2 input functions; RooNumGenConfig Numeric (MC) Event generator configuration ; RooNumGenFactory Numeric Generator factory; RooNumIntConfig Numeric Integrator configuration ; RooNumIntFactory Numeric Integrator factory; RooNumRunningInt Numeric calculator for running integral of a given function; RooNumber wrapper class for portable numerics; RooObjC",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:45468,Testability,Test,TestStatistic,45468,"STool::MultiBuildConfig Build configuration object for RooSimWSTool with multiple prototype p.d.f.; RooSimWSTool::ObjBuildConfig Validated RooSimWSTool build configuration; RooSimWSTool::ObjSplitRule Validated RooSimWSTool split rule; RooSimWSTool::SplitRule Split rule specification for prototype p.d.f; RooSimultaneous Simultaneous operator p.d.f, functions like C++ 'switch()' on input p.d.fs operating on index category5A; RooSpHarmonic SpHarmonic polynomial; RooStats ; RooStats::AcceptanceRegion A simple class for acceptance regions used for ConfidenceBelt; RooStats::AsymptoticCalculator ; RooStats::BayesianCalculator BayesianCalculator class; RooStats::BernsteinCorrection A utility to add polynomial corrrection terms to a model to improve the description of data.; RooStats::CombinedCalculator A base class that is for tools that can be both HypoTestCalculators and IntervalCalculators; RooStats::ConfInterval Interface for Confidence Intervals; RooStats::ConfidenceBelt A confidence belt for the Neyman Construction; RooStats::DebuggingSampler A simple implementation of the DistributionCreator interface; RooStats::DebuggingTestStat A concrete implementation of the TestStatistic interface, useful for debugging.; RooStats::DetailedOutputAggregator ; RooStats::FeldmanCousins Interface for tools setting limits (producing confidence intervals); RooStats::FrequentistCalculator ; RooStats::HLFactory The high Level Model Factory to create models from datacards; RooStats::Heaviside Your description goes here...; RooStats::HistFactory ; RooStats::HistFactory::Asimov ; RooStats::HistFactory::Channel ; RooStats::HistFactory::ConfigParser ; RooStats::HistFactory::Constraint ; RooStats::HistFactory::Data ; RooStats::HistFactory::EstimateSummary ; RooStats::HistFactory::FlexibleInterpVar flexible interpolation; RooStats::HistFactory::HistFactoryNavigation ; RooStats::HistFactory::HistFactorySimultaneous Simultaneous operator p.d.f, functions like C++ 'switch()' on input p.d.fs operati",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:47151,Testability,test,test,47151,,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:47415,Testability,test,tests,47415,ooStats::HistFactory::HistoToWorkspaceFactory ; RooStats::HistFactory::HistoToWorkspaceFactoryFast ; RooStats::HistFactory::LinInterpVar Piecewise linear interpolation; RooStats::HistFactory::Measurement ; RooStats::HistFactory::NormFactor ; RooStats::HistFactory::OverallSys ; RooStats::HistFactory::PreprocessFunction ; RooStats::HistFactory::RooBarlowBeestonLL Real-valued function representing a Barlow-Beeston minimized profile likelihood of external (likelihood) function; RooStats::HistFactory::Sample ; RooStats::HistFactory::ShapeFactor ; RooStats::HistFactory::ShapeSys ; RooStats::HistFactory::StatError ; RooStats::HistFactory::StatErrorConfig ; RooStats::HybridCalculator ; RooStats::HybridCalculatorOriginal Hypothesis test calculator using a Bayesian-frequentist hybrid method; RooStats::HybridPlot Provides the plots for an HybridResult; RooStats::HybridResult Class containing the results of the HybridCalculator; RooStats::HypoTestCalculator Interface for tools doing hypothesis tests; RooStats::HypoTestCalculatorGeneric ; RooStats::HypoTestInverter HypoTestInverter class; RooStats::HypoTestInverterOriginal HypoTestInverterOriginal class; RooStats::HypoTestInverterPlot HypoTestInverterPlot class; RooStats::HypoTestInverterResult HypoTestInverterResult class ; RooStats::HypoTestPlot ; RooStats::HypoTestResult Base class to represent results of a hypothesis test; RooStats::IntervalCalculator Interface for tools setting limits (producing confidence intervals); RooStats::LikelihoodInterval Concrete implementation of a ConfInterval based on a likelihood ratio; RooStats::LikelihoodIntervalPlot Class containing the results of the IntervalCalculator; RooStats::MCMCCalculator Markov Chain Monte Carlo calculator for Bayesian credible intervals; RooStats::MCMCInterval Concrete implementation of a ConfInterval based on MCMC calculation; RooStats::MCMCIntervalPlot Class containing the results of the MCMCCalculator; RooStats::MarkovChain ; RooStats::MaxLikelihoodEstimateTestSt,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:47799,Testability,test,test,47799,n representing a Barlow-Beeston minimized profile likelihood of external (likelihood) function; RooStats::HistFactory::Sample ; RooStats::HistFactory::ShapeFactor ; RooStats::HistFactory::ShapeSys ; RooStats::HistFactory::StatError ; RooStats::HistFactory::StatErrorConfig ; RooStats::HybridCalculator ; RooStats::HybridCalculatorOriginal Hypothesis test calculator using a Bayesian-frequentist hybrid method; RooStats::HybridPlot Provides the plots for an HybridResult; RooStats::HybridResult Class containing the results of the HybridCalculator; RooStats::HypoTestCalculator Interface for tools doing hypothesis tests; RooStats::HypoTestCalculatorGeneric ; RooStats::HypoTestInverter HypoTestInverter class; RooStats::HypoTestInverterOriginal HypoTestInverterOriginal class; RooStats::HypoTestInverterPlot HypoTestInverterPlot class; RooStats::HypoTestInverterResult HypoTestInverterResult class ; RooStats::HypoTestPlot ; RooStats::HypoTestResult Base class to represent results of a hypothesis test; RooStats::IntervalCalculator Interface for tools setting limits (producing confidence intervals); RooStats::LikelihoodInterval Concrete implementation of a ConfInterval based on a likelihood ratio; RooStats::LikelihoodIntervalPlot Class containing the results of the IntervalCalculator; RooStats::MCMCCalculator Markov Chain Monte Carlo calculator for Bayesian credible intervals; RooStats::MCMCInterval Concrete implementation of a ConfInterval based on MCMC calculation; RooStats::MCMCIntervalPlot Class containing the results of the MCMCCalculator; RooStats::MarkovChain ; RooStats::MaxLikelihoodEstimateTestStat ; RooStats::MetropolisHastings Markov Chain Monte Carlo calculator for Bayesian credible intervals; RooStats::MinNLLTestStat implements the minimum NLL as a test statistic to be used with several tools; RooStats::ModelConfig A class that holds configuration information for a model using a workspace as a store; RooStats::NeymanConstruction Interface for tools setting limits (prod,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:48578,Testability,test,test,48578,y::ShapeFactor ; RooStats::HistFactory::ShapeSys ; RooStats::HistFactory::StatError ; RooStats::HistFactory::StatErrorConfig ; RooStats::HybridCalculator ; RooStats::HybridCalculatorOriginal Hypothesis test calculator using a Bayesian-frequentist hybrid method; RooStats::HybridPlot Provides the plots for an HybridResult; RooStats::HybridResult Class containing the results of the HybridCalculator; RooStats::HypoTestCalculator Interface for tools doing hypothesis tests; RooStats::HypoTestCalculatorGeneric ; RooStats::HypoTestInverter HypoTestInverter class; RooStats::HypoTestInverterOriginal HypoTestInverterOriginal class; RooStats::HypoTestInverterPlot HypoTestInverterPlot class; RooStats::HypoTestInverterResult HypoTestInverterResult class ; RooStats::HypoTestPlot ; RooStats::HypoTestResult Base class to represent results of a hypothesis test; RooStats::IntervalCalculator Interface for tools setting limits (producing confidence intervals); RooStats::LikelihoodInterval Concrete implementation of a ConfInterval based on a likelihood ratio; RooStats::LikelihoodIntervalPlot Class containing the results of the IntervalCalculator; RooStats::MCMCCalculator Markov Chain Monte Carlo calculator for Bayesian credible intervals; RooStats::MCMCInterval Concrete implementation of a ConfInterval based on MCMC calculation; RooStats::MCMCIntervalPlot Class containing the results of the MCMCCalculator; RooStats::MarkovChain ; RooStats::MaxLikelihoodEstimateTestStat ; RooStats::MetropolisHastings Markov Chain Monte Carlo calculator for Bayesian credible intervals; RooStats::MinNLLTestStat implements the minimum NLL as a test statistic to be used with several tools; RooStats::ModelConfig A class that holds configuration information for a model using a workspace as a store; RooStats::NeymanConstruction Interface for tools setting limits (producing confidence intervals); RooStats::NumEventsTestStat ; RooStats::NumberCountingPdfFactory A factory specific to common number counting problems.,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:49409,Testability,test,test,49409,"tat ; RooStats::MetropolisHastings Markov Chain Monte Carlo calculator for Bayesian credible intervals; RooStats::MinNLLTestStat implements the minimum NLL as a test statistic to be used with several tools; RooStats::ModelConfig A class that holds configuration information for a model using a workspace as a store; RooStats::NeymanConstruction Interface for tools setting limits (producing confidence intervals); RooStats::NumEventsTestStat ; RooStats::NumberCountingPdfFactory A factory specific to common number counting problems.; RooStats::NumberCountingUtils ; RooStats::PdfProposal ; RooStats::PointSetInterval Concrete implementation of ConfInterval for simple 1-D intervals in the form [a,b]; RooStats::ProfileInspector Class containing the results of the IntervalCalculator; RooStats::ProfileLikelihoodCalculator A concrete implementation of CombinedCalculator that uses the ProfileLikelihood ratio.; RooStats::ProfileLikelihoodTestStat implements the profile likelihood ratio as a test statistic to be used with several tools; RooStats::ProofConfig Configuration options for proof.; RooStats::ProposalFunction Interface for the proposal function used with Markov Chain Monte Carlo; RooStats::ProposalHelper ; RooStats::RatioOfProfiledLikelihoodsTestStat implements the ratio of profiled likelihood as test statistic; RooStats::SPlot Class used for making sPlots; RooStats::SamplingDistPlot Class containing the results of the HybridCalculator; RooStats::SamplingDistribution Class containing the results of the HybridCalculator; RooStats::SamplingSummary A summary of acceptance regions for confidence belt; RooStats::SamplingSummaryLookup A simple class used by ConfidenceBelt; RooStats::SequentialProposal A concrete implementation of ProposalFunction, that uniformly samples the parameter space.; RooStats::SimpleInterval Concrete implementation of ConfInterval for simple 1-D intervals in the form [a,b]; RooStats::SimpleLikelihoodRatioTestStat ; RooStats::TestStatSampler Interface for",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:49729,Testability,test,test,49729,"ts::NumberCountingPdfFactory A factory specific to common number counting problems.; RooStats::NumberCountingUtils ; RooStats::PdfProposal ; RooStats::PointSetInterval Concrete implementation of ConfInterval for simple 1-D intervals in the form [a,b]; RooStats::ProfileInspector Class containing the results of the IntervalCalculator; RooStats::ProfileLikelihoodCalculator A concrete implementation of CombinedCalculator that uses the ProfileLikelihood ratio.; RooStats::ProfileLikelihoodTestStat implements the profile likelihood ratio as a test statistic to be used with several tools; RooStats::ProofConfig Configuration options for proof.; RooStats::ProposalFunction Interface for the proposal function used with Markov Chain Monte Carlo; RooStats::ProposalHelper ; RooStats::RatioOfProfiledLikelihoodsTestStat implements the ratio of profiled likelihood as test statistic; RooStats::SPlot Class used for making sPlots; RooStats::SamplingDistPlot Class containing the results of the HybridCalculator; RooStats::SamplingDistribution Class containing the results of the HybridCalculator; RooStats::SamplingSummary A summary of acceptance regions for confidence belt; RooStats::SamplingSummaryLookup A simple class used by ConfidenceBelt; RooStats::SequentialProposal A concrete implementation of ProposalFunction, that uniformly samples the parameter space.; RooStats::SimpleInterval Concrete implementation of ConfInterval for simple 1-D intervals in the form [a,b]; RooStats::SimpleLikelihoodRatioTestStat ; RooStats::TestStatSampler Interface for tools setting limits (producing confidence intervals); RooStats::TestStatistic Interface for a TestStatistic; RooStats::ToyMCImportanceSampler An implementation of importance sampling; RooStats::ToyMCPayload ; RooStats::ToyMCSampler A simple implementation of the TestStatSampler interface; RooStats::ToyMCStudy toy MC study for parallel processing; RooStats::UniformProposal A concrete implementation of ProposalFunction, that uniformly samples the",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:50389,Testability,Test,TestStatSampler,50389," proposal function used with Markov Chain Monte Carlo; RooStats::ProposalHelper ; RooStats::RatioOfProfiledLikelihoodsTestStat implements the ratio of profiled likelihood as test statistic; RooStats::SPlot Class used for making sPlots; RooStats::SamplingDistPlot Class containing the results of the HybridCalculator; RooStats::SamplingDistribution Class containing the results of the HybridCalculator; RooStats::SamplingSummary A summary of acceptance regions for confidence belt; RooStats::SamplingSummaryLookup A simple class used by ConfidenceBelt; RooStats::SequentialProposal A concrete implementation of ProposalFunction, that uniformly samples the parameter space.; RooStats::SimpleInterval Concrete implementation of ConfInterval for simple 1-D intervals in the form [a,b]; RooStats::SimpleLikelihoodRatioTestStat ; RooStats::TestStatSampler Interface for tools setting limits (producing confidence intervals); RooStats::TestStatistic Interface for a TestStatistic; RooStats::ToyMCImportanceSampler An implementation of importance sampling; RooStats::ToyMCPayload ; RooStats::ToyMCSampler A simple implementation of the TestStatSampler interface; RooStats::ToyMCStudy toy MC study for parallel processing; RooStats::UniformProposal A concrete implementation of ProposalFunction, that uniformly samples the parameter space.; RooStats::UpperLimitMCSModule MCStudy module to calculate upperlimit of a given poi; RooStepFunction Step Function; RooStreamParser Utility class that parses std::iostream data into tokens; RooStringVar String-valued variable ; RooStudyManager A general purpose workspace oriented parallelizing study manager; RooStudyPackage A general purpose workspace oriented parallelizing study manager; RooSuperCategory Lvalue product operator for catategory lvalues; RooTFnBinding RooAbsReal binding to ROOT TF[123] functions; RooTFnPdfBinding RooAbsPdf binding to ROOT TF[123] functions; RooTFoamBinding Function binding to RooAbsReal object; RooTObjWrap Container class for Int",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:50484,Testability,Test,TestStatistic,50484," proposal function used with Markov Chain Monte Carlo; RooStats::ProposalHelper ; RooStats::RatioOfProfiledLikelihoodsTestStat implements the ratio of profiled likelihood as test statistic; RooStats::SPlot Class used for making sPlots; RooStats::SamplingDistPlot Class containing the results of the HybridCalculator; RooStats::SamplingDistribution Class containing the results of the HybridCalculator; RooStats::SamplingSummary A summary of acceptance regions for confidence belt; RooStats::SamplingSummaryLookup A simple class used by ConfidenceBelt; RooStats::SequentialProposal A concrete implementation of ProposalFunction, that uniformly samples the parameter space.; RooStats::SimpleInterval Concrete implementation of ConfInterval for simple 1-D intervals in the form [a,b]; RooStats::SimpleLikelihoodRatioTestStat ; RooStats::TestStatSampler Interface for tools setting limits (producing confidence intervals); RooStats::TestStatistic Interface for a TestStatistic; RooStats::ToyMCImportanceSampler An implementation of importance sampling; RooStats::ToyMCPayload ; RooStats::ToyMCSampler A simple implementation of the TestStatSampler interface; RooStats::ToyMCStudy toy MC study for parallel processing; RooStats::UniformProposal A concrete implementation of ProposalFunction, that uniformly samples the parameter space.; RooStats::UpperLimitMCSModule MCStudy module to calculate upperlimit of a given poi; RooStepFunction Step Function; RooStreamParser Utility class that parses std::iostream data into tokens; RooStringVar String-valued variable ; RooStudyManager A general purpose workspace oriented parallelizing study manager; RooStudyPackage A general purpose workspace oriented parallelizing study manager; RooSuperCategory Lvalue product operator for catategory lvalues; RooTFnBinding RooAbsReal binding to ROOT TF[123] functions; RooTFnPdfBinding RooAbsPdf binding to ROOT TF[123] functions; RooTFoamBinding Function binding to RooAbsReal object; RooTObjWrap Container class for Int",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:50514,Testability,Test,TestStatistic,50514," proposal function used with Markov Chain Monte Carlo; RooStats::ProposalHelper ; RooStats::RatioOfProfiledLikelihoodsTestStat implements the ratio of profiled likelihood as test statistic; RooStats::SPlot Class used for making sPlots; RooStats::SamplingDistPlot Class containing the results of the HybridCalculator; RooStats::SamplingDistribution Class containing the results of the HybridCalculator; RooStats::SamplingSummary A summary of acceptance regions for confidence belt; RooStats::SamplingSummaryLookup A simple class used by ConfidenceBelt; RooStats::SequentialProposal A concrete implementation of ProposalFunction, that uniformly samples the parameter space.; RooStats::SimpleInterval Concrete implementation of ConfInterval for simple 1-D intervals in the form [a,b]; RooStats::SimpleLikelihoodRatioTestStat ; RooStats::TestStatSampler Interface for tools setting limits (producing confidence intervals); RooStats::TestStatistic Interface for a TestStatistic; RooStats::ToyMCImportanceSampler An implementation of importance sampling; RooStats::ToyMCPayload ; RooStats::ToyMCSampler A simple implementation of the TestStatSampler interface; RooStats::ToyMCStudy toy MC study for parallel processing; RooStats::UniformProposal A concrete implementation of ProposalFunction, that uniformly samples the parameter space.; RooStats::UpperLimitMCSModule MCStudy module to calculate upperlimit of a given poi; RooStepFunction Step Function; RooStreamParser Utility class that parses std::iostream data into tokens; RooStringVar String-valued variable ; RooStudyManager A general purpose workspace oriented parallelizing study manager; RooStudyPackage A general purpose workspace oriented parallelizing study manager; RooSuperCategory Lvalue product operator for catategory lvalues; RooTFnBinding RooAbsReal binding to ROOT TF[123] functions; RooTFnPdfBinding RooAbsPdf binding to ROOT TF[123] functions; RooTFoamBinding Function binding to RooAbsReal object; RooTObjWrap Container class for Int",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:50683,Testability,Test,TestStatSampler,50683," proposal function used with Markov Chain Monte Carlo; RooStats::ProposalHelper ; RooStats::RatioOfProfiledLikelihoodsTestStat implements the ratio of profiled likelihood as test statistic; RooStats::SPlot Class used for making sPlots; RooStats::SamplingDistPlot Class containing the results of the HybridCalculator; RooStats::SamplingDistribution Class containing the results of the HybridCalculator; RooStats::SamplingSummary A summary of acceptance regions for confidence belt; RooStats::SamplingSummaryLookup A simple class used by ConfidenceBelt; RooStats::SequentialProposal A concrete implementation of ProposalFunction, that uniformly samples the parameter space.; RooStats::SimpleInterval Concrete implementation of ConfInterval for simple 1-D intervals in the form [a,b]; RooStats::SimpleLikelihoodRatioTestStat ; RooStats::TestStatSampler Interface for tools setting limits (producing confidence intervals); RooStats::TestStatistic Interface for a TestStatistic; RooStats::ToyMCImportanceSampler An implementation of importance sampling; RooStats::ToyMCPayload ; RooStats::ToyMCSampler A simple implementation of the TestStatSampler interface; RooStats::ToyMCStudy toy MC study for parallel processing; RooStats::UniformProposal A concrete implementation of ProposalFunction, that uniformly samples the parameter space.; RooStats::UpperLimitMCSModule MCStudy module to calculate upperlimit of a given poi; RooStepFunction Step Function; RooStreamParser Utility class that parses std::iostream data into tokens; RooStringVar String-valued variable ; RooStudyManager A general purpose workspace oriented parallelizing study manager; RooStudyPackage A general purpose workspace oriented parallelizing study manager; RooSuperCategory Lvalue product operator for catategory lvalues; RooTFnBinding RooAbsReal binding to ROOT TF[123] functions; RooTFnPdfBinding RooAbsPdf binding to ROOT TF[123] functions; RooTFoamBinding Function binding to RooAbsReal object; RooTObjWrap Container class for Int",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:52360,Testability,test,tests,52360,"to calculate upperlimit of a given poi; RooStepFunction Step Function; RooStreamParser Utility class that parses std::iostream data into tokens; RooStringVar String-valued variable ; RooStudyManager A general purpose workspace oriented parallelizing study manager; RooStudyPackage A general purpose workspace oriented parallelizing study manager; RooSuperCategory Lvalue product operator for catategory lvalues; RooTFnBinding RooAbsReal binding to ROOT TF[123] functions; RooTFnPdfBinding RooAbsPdf binding to ROOT TF[123] functions; RooTFoamBinding Function binding to RooAbsReal object; RooTObjWrap Container class for Int_t; RooTable Abstract interface for tables; RooThreshEntry Utility class for RooThresholdCategory, holding a threshold/category state pair; RooThresholdCategory Real-to-Category function defined by series of threshold; RooTrace Memory tracer utility for RooFit objects; RooTreeData Dummy class for legacy RooDataSet support; RooTreeDataStore TTree-based Data Storage class; RooTruthModel Truth resolution model (delta function); RooUnblindCPAsymVar CP-Asymmetry unblinding transformation; RooUnblindOffset Offset unblinding transformation; RooUnblindPrecision Precision unblinding transformation; RooUnblindUniform Uniform unblinding transformation; RooUniform Flat PDF in N dimensions; RooUniformBinning Uniform binning specification; RooUnitTest Abstract base class for RooFit/RooStats unit regression tests; RooVectorDataStore STL-vector-based Data Storage class; RooVectorDataStore::CatVector STL-vector-based Data Storage class; RooVectorDataStore::RealFullVector STL-vector-based Data Storage class; RooVectorDataStore::RealVector STL-vector-based Data Storage class; RooVoigtian Voigtian PDF (Gauss (x) BreitWigner); RooWorkspace Persistable project container for (composite) pdfs, functions, variables and datasets; RooWorkspace::CodeRepo Code repository for RooWorkspace; RooWorkspace::WSDir TDirectory representation of RooWorkspace; RooXYChi2Var Chi^2 function of p.",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:54968,Testability,benchmark,benchmarking,54968,ray of longs; TArrayL64 Array of long64s; TArrayS Array of shorts; TArrow An arrow (line with a arrowhead); TArrowEditor GUI for editing arrow attributes; TAtomicCount ; TAtt3D 3D attributes; TAttAxis Axis attributes; TAttBBox Helper for management of bounding-box information; TAttBBox2D 2D bounding box attributes; TAttCanvas Canvas attributes; TAttFill Fill area attributes; TAttFillEditor GUI for editing fill attributes; TAttImage Image attributes; TAttLine Line attributes; TAttLineEditor GUI for editing line attributes; TAttMarker Marker attributes; TAttMarkerEditor GUI for editing marker attributes; TAttPad Pad attributes; TAttParticle Particle definition; TAttText Text attributes; TAttTextEditor GUI for editing text attributes; TAuthenticate Class providing remote authentication service; TAxis Axis class; TAxis3D 3-D ruler painting class; TAxisEditor axis editor; TBRIK TBRIK shape; TBackCompFitter Class providing backward compatibility for fitting by implementing the TVirtualFitter interface; TBase64 Base64 encoding/decoding; TBaseClass Description of a base class; TBasket the TBranch buffers; TBasketSQL the TBranch buffers; TBenchmark ROOT utility to help benchmarking applications; TBinomialEfficiencyFitter Binomial Fitter for the division of two histograms; TBits Bit container; TBits::TReference ; TBox Box class; TBranch Branch descriptor; TBranchClones Branch in case of an array of clone objects; TBranchElement Branch in case of an object; TBranchObject Branch in case of an object; TBranchRef to support referenced objects on other branches; TBranchSTL Branch handling STL collection of pointers; TBrowser ROOT Object Browser; TBrowserImp ABC describing browser implementation protocol; TBrowserPlugin basic plugin description class; TBtree A B-tree; TBtreeIter B-tree iterator; TBuffer Buffer base class used for serializing objects; TBuffer3D 3D primitives description; TBufferFile concrete implementation of TBuffer for writing/reading to/from a ROOT file or socket.,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:80490,Testability,log,logical,80490,"iewer.; TGLAnnotation GL-annotation.; TGLAutoRotator Automatic, timer-based, rotation of GL-viewer's camera.; TGLAxis a GL Axis; TGLAxisPainter GL axis painter.; TGLAxisPainterBox Painter of GL axes for a 3D box.; TGLBContainer Listbox container; TGLBEntry Basic listbox entry; TGLBoundingBox a 3D orientated bounding box; TGLBoxCut Cuts away part of a plot.; TGLBoxPainter Box painter; TGLCamera Camera abstract base class.; TGLCameraGuide Short description.; TGLCameraOverlay Show coorinates of current camera frustum.; TGLClip abstract clipping object; TGLClipBox clipping box; TGLClipPlane clipping plane; TGLClipSet A collection of supported clip-objects; TGLClipSetEditor GUI editor for TGLClipSet.; TGLClipSetSubEditor Sub-editor for TGLClipSet.; TGLColor Color in preferred GL format - RGBA.; TGLColorSet Collection of colors used for GL rendering.; TGLContext Control internal gl-context resources.; TGLContextIdentity Identity of a shared GL context.; TGLCylinder a cylinderical logical shape; TGLEmbeddedViewer Embedded GL viewer.; TGLEventHandler Base-class and default implementation of event-handler for TGLViewer.; TGLFBO Frame-buffer object.; TGLFaceSet a faceset logical shape; TGLFaderHelper ; TGLFont A wrapper class for FTFont.; TGLFontManager A FreeType GL font manager.; TGLFormat Describes GL buffer format.; TGLH2PolyPainter Painter class for TH2Poly.; TGLHistPainter Proxy class for GL hist painters.; TGLIsoPainter Iso option for TH3.; TGLLegoPainter Lego painter; TGLLightSet A set of OpenGL lights.; TGLLightSetEditor Editor for TGLLightSet.; TGLLightSetSubEditor Sub-editor for TGLLightSet.; TGLLine3 GL line wrapper class; TGLLockable Lock for viewers and scenes.; TGLLogicalShape a logical (non-placed, local frame) drawable object; TGLManager Interface for OpenGL manager; TGLManip abstract base GL manipulator widget; TGLManipSet A collection of available manipulators.; TGLMatrix GL matrix helper/wrapper class; TGLObject Base-class for direct OpenGL renderers; TGLOr",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:80681,Testability,log,logical,80681," a 3D box.; TGLBContainer Listbox container; TGLBEntry Basic listbox entry; TGLBoundingBox a 3D orientated bounding box; TGLBoxCut Cuts away part of a plot.; TGLBoxPainter Box painter; TGLCamera Camera abstract base class.; TGLCameraGuide Short description.; TGLCameraOverlay Show coorinates of current camera frustum.; TGLClip abstract clipping object; TGLClipBox clipping box; TGLClipPlane clipping plane; TGLClipSet A collection of supported clip-objects; TGLClipSetEditor GUI editor for TGLClipSet.; TGLClipSetSubEditor Sub-editor for TGLClipSet.; TGLColor Color in preferred GL format - RGBA.; TGLColorSet Collection of colors used for GL rendering.; TGLContext Control internal gl-context resources.; TGLContextIdentity Identity of a shared GL context.; TGLCylinder a cylinderical logical shape; TGLEmbeddedViewer Embedded GL viewer.; TGLEventHandler Base-class and default implementation of event-handler for TGLViewer.; TGLFBO Frame-buffer object.; TGLFaceSet a faceset logical shape; TGLFaderHelper ; TGLFont A wrapper class for FTFont.; TGLFontManager A FreeType GL font manager.; TGLFormat Describes GL buffer format.; TGLH2PolyPainter Painter class for TH2Poly.; TGLHistPainter Proxy class for GL hist painters.; TGLIsoPainter Iso option for TH3.; TGLLegoPainter Lego painter; TGLLightSet A set of OpenGL lights.; TGLLightSetEditor Editor for TGLLightSet.; TGLLightSetSubEditor Sub-editor for TGLLightSet.; TGLLine3 GL line wrapper class; TGLLockable Lock for viewers and scenes.; TGLLogicalShape a logical (non-placed, local frame) drawable object; TGLManager Interface for OpenGL manager; TGLManip abstract base GL manipulator widget; TGLManipSet A collection of available manipulators.; TGLMatrix GL matrix helper/wrapper class; TGLObject Base-class for direct OpenGL renderers; TGLOrthoCamera Camera for orthographic view.; TGLOutput Wrapper class for GL capture & output routines; TGLOverlayButton GL-overlay button.; TGLOverlayElement Base class for GL overlay elements.; TGLOverlay",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:81214,Testability,log,logical,81214,"A.; TGLColorSet Collection of colors used for GL rendering.; TGLContext Control internal gl-context resources.; TGLContextIdentity Identity of a shared GL context.; TGLCylinder a cylinderical logical shape; TGLEmbeddedViewer Embedded GL viewer.; TGLEventHandler Base-class and default implementation of event-handler for TGLViewer.; TGLFBO Frame-buffer object.; TGLFaceSet a faceset logical shape; TGLFaderHelper ; TGLFont A wrapper class for FTFont.; TGLFontManager A FreeType GL font manager.; TGLFormat Describes GL buffer format.; TGLH2PolyPainter Painter class for TH2Poly.; TGLHistPainter Proxy class for GL hist painters.; TGLIsoPainter Iso option for TH3.; TGLLegoPainter Lego painter; TGLLightSet A set of OpenGL lights.; TGLLightSetEditor Editor for TGLLightSet.; TGLLightSetSubEditor Sub-editor for TGLLightSet.; TGLLine3 GL line wrapper class; TGLLockable Lock for viewers and scenes.; TGLLogicalShape a logical (non-placed, local frame) drawable object; TGLManager Interface for OpenGL manager; TGLManip abstract base GL manipulator widget; TGLManipSet A collection of available manipulators.; TGLMatrix GL matrix helper/wrapper class; TGLObject Base-class for direct OpenGL renderers; TGLOrthoCamera Camera for orthographic view.; TGLOutput Wrapper class for GL capture & output routines; TGLOverlayButton GL-overlay button.; TGLOverlayElement Base class for GL overlay elements.; TGLOverlayList Collection of overlay elements to draw/select together.; TGLOvlSelectRecord Standard GL overlay-selection record.; TGLPShapeObj This object wraps TGLPhysicalShape (not a TObject); TGLPShapeObjEditor GUI for editing attributes of a physical-shape.; TGLPShapeRef Reference to a TGLPhysicalShape object.; TGLPadPainter ; TGLPaintDevice Base class for GL widgets and GL off-screen rendering; TGLParametricEquation Equation of parametric surface.; TGLParametricEquationGL GL renderer for TGLParametricEquation; TGLParametricPlot Parametric plot's painter.; TGLPerspectiveCamera Camera for perspec",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:82637,Testability,log,logical,82637," Collection of overlay elements to draw/select together.; TGLOvlSelectRecord Standard GL overlay-selection record.; TGLPShapeObj This object wraps TGLPhysicalShape (not a TObject); TGLPShapeObjEditor GUI for editing attributes of a physical-shape.; TGLPShapeRef Reference to a TGLPhysicalShape object.; TGLPadPainter ; TGLPaintDevice Base class for GL widgets and GL off-screen rendering; TGLParametricEquation Equation of parametric surface.; TGLParametricEquationGL GL renderer for TGLParametricEquation; TGLParametricPlot Parametric plot's painter.; TGLPerspectiveCamera Camera for perspective view.; TGLPhysicalShape a physical (placed, global frame) drawable object; TGLPlane GL plane helper/wrapper class; TGLPlot3D Short description.; TGLPlotBox Back box for plot.; TGLPlotCamera Camera for plot-painters.; TGLPlotCoordinates Auxilary class, holds plot dimensions.; TGLPlotPainter Base for gl plots; TGLPolyLine a polyline logical shape; TGLPolyMarker a polymarker logical shape; TGLQuadric GL quadric object; TGLRect GL rect helper/wrapper class; TGLRnrCtx Collection of objects and data passes along all rendering calls.; TGLRotateManip GL rotation manipulator widget; TGLSAFrame GUI frame for standalone viewer; TGLSAViewer Standalone GL viewer.; TGLScaleManip GL scaling manipulator widget; TGLScene Standard ROOT OpenGL scene with logial/physical shapes.; TGLScene::TSceneInfo ; TGLSceneBase Base-class for OpenGL scenes.; TGLSceneInfo Data about a scene within a viewer context.; TGLScenePad GL-scene filled via TPad-TVirtualViewer interface.; TGLSelectBuffer OpenGL select buffer with depth sorting.; TGLSelectRecord Standard GL selection record.; TGLSelectRecordBase Base class for GL selection records.; TGLSelectionBuffer Holds color buffer content for selection; TGLSphere a spherical logical shape; TGLStopwatch a GL stopwatch utility class; TGLSurfacePainter Surface painter.; TGLTF3Painter GL TF3 painter.; TGLTH3Composition Composition of TH3 objects.; TGLTH3CompositionPainter ",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:82679,Testability,log,logical,82679," Collection of overlay elements to draw/select together.; TGLOvlSelectRecord Standard GL overlay-selection record.; TGLPShapeObj This object wraps TGLPhysicalShape (not a TObject); TGLPShapeObjEditor GUI for editing attributes of a physical-shape.; TGLPShapeRef Reference to a TGLPhysicalShape object.; TGLPadPainter ; TGLPaintDevice Base class for GL widgets and GL off-screen rendering; TGLParametricEquation Equation of parametric surface.; TGLParametricEquationGL GL renderer for TGLParametricEquation; TGLParametricPlot Parametric plot's painter.; TGLPerspectiveCamera Camera for perspective view.; TGLPhysicalShape a physical (placed, global frame) drawable object; TGLPlane GL plane helper/wrapper class; TGLPlot3D Short description.; TGLPlotBox Back box for plot.; TGLPlotCamera Camera for plot-painters.; TGLPlotCoordinates Auxilary class, holds plot dimensions.; TGLPlotPainter Base for gl plots; TGLPolyLine a polyline logical shape; TGLPolyMarker a polymarker logical shape; TGLQuadric GL quadric object; TGLRect GL rect helper/wrapper class; TGLRnrCtx Collection of objects and data passes along all rendering calls.; TGLRotateManip GL rotation manipulator widget; TGLSAFrame GUI frame for standalone viewer; TGLSAViewer Standalone GL viewer.; TGLScaleManip GL scaling manipulator widget; TGLScene Standard ROOT OpenGL scene with logial/physical shapes.; TGLScene::TSceneInfo ; TGLSceneBase Base-class for OpenGL scenes.; TGLSceneInfo Data about a scene within a viewer context.; TGLScenePad GL-scene filled via TPad-TVirtualViewer interface.; TGLSelectBuffer OpenGL select buffer with depth sorting.; TGLSelectRecord Standard GL selection record.; TGLSelectRecordBase Base class for GL selection records.; TGLSelectionBuffer Holds color buffer content for selection; TGLSphere a spherical logical shape; TGLStopwatch a GL stopwatch utility class; TGLSurfacePainter Surface painter.; TGLTF3Painter GL TF3 painter.; TGLTH3Composition Composition of TH3 objects.; TGLTH3CompositionPainter ",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:83050,Testability,log,logial,83050,"ainter ; TGLPaintDevice Base class for GL widgets and GL off-screen rendering; TGLParametricEquation Equation of parametric surface.; TGLParametricEquationGL GL renderer for TGLParametricEquation; TGLParametricPlot Parametric plot's painter.; TGLPerspectiveCamera Camera for perspective view.; TGLPhysicalShape a physical (placed, global frame) drawable object; TGLPlane GL plane helper/wrapper class; TGLPlot3D Short description.; TGLPlotBox Back box for plot.; TGLPlotCamera Camera for plot-painters.; TGLPlotCoordinates Auxilary class, holds plot dimensions.; TGLPlotPainter Base for gl plots; TGLPolyLine a polyline logical shape; TGLPolyMarker a polymarker logical shape; TGLQuadric GL quadric object; TGLRect GL rect helper/wrapper class; TGLRnrCtx Collection of objects and data passes along all rendering calls.; TGLRotateManip GL rotation manipulator widget; TGLSAFrame GUI frame for standalone viewer; TGLSAViewer Standalone GL viewer.; TGLScaleManip GL scaling manipulator widget; TGLScene Standard ROOT OpenGL scene with logial/physical shapes.; TGLScene::TSceneInfo ; TGLSceneBase Base-class for OpenGL scenes.; TGLSceneInfo Data about a scene within a viewer context.; TGLScenePad GL-scene filled via TPad-TVirtualViewer interface.; TGLSelectBuffer OpenGL select buffer with depth sorting.; TGLSelectRecord Standard GL selection record.; TGLSelectRecordBase Base class for GL selection records.; TGLSelectionBuffer Holds color buffer content for selection; TGLSphere a spherical logical shape; TGLStopwatch a GL stopwatch utility class; TGLSurfacePainter Surface painter.; TGLTF3Painter GL TF3 painter.; TGLTH3Composition Composition of TH3 objects.; TGLTH3CompositionPainter Painter to draw several TH3.; TGLTH3Slice TH3 slice; TGLText a GL text; TGLTransManip GL translation manipulator widget; TGLUtil Wrapper class for misc GL pieces; TGLUtil::TColorLocker Lock/unlock color in constructor/destructor.; TGLUtil::TDrawQualityModifier Set/restore draw quality in constructor/destructor",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:83510,Testability,log,logical,83510,"nters.; TGLPlotCoordinates Auxilary class, holds plot dimensions.; TGLPlotPainter Base for gl plots; TGLPolyLine a polyline logical shape; TGLPolyMarker a polymarker logical shape; TGLQuadric GL quadric object; TGLRect GL rect helper/wrapper class; TGLRnrCtx Collection of objects and data passes along all rendering calls.; TGLRotateManip GL rotation manipulator widget; TGLSAFrame GUI frame for standalone viewer; TGLSAViewer Standalone GL viewer.; TGLScaleManip GL scaling manipulator widget; TGLScene Standard ROOT OpenGL scene with logial/physical shapes.; TGLScene::TSceneInfo ; TGLSceneBase Base-class for OpenGL scenes.; TGLSceneInfo Data about a scene within a viewer context.; TGLScenePad GL-scene filled via TPad-TVirtualViewer interface.; TGLSelectBuffer OpenGL select buffer with depth sorting.; TGLSelectRecord Standard GL selection record.; TGLSelectRecordBase Base class for GL selection records.; TGLSelectionBuffer Holds color buffer content for selection; TGLSphere a spherical logical shape; TGLStopwatch a GL stopwatch utility class; TGLSurfacePainter Surface painter.; TGLTF3Painter GL TF3 painter.; TGLTH3Composition Composition of TH3 objects.; TGLTH3CompositionPainter Painter to draw several TH3.; TGLTH3Slice TH3 slice; TGLText a GL text; TGLTransManip GL translation manipulator widget; TGLUtil Wrapper class for misc GL pieces; TGLUtil::TColorLocker Lock/unlock color in constructor/destructor.; TGLUtil::TDrawQualityModifier Set/restore draw quality in constructor/destructor.; TGLUtil::TDrawQualityScaler Multiply/restore draw quality in constructor/destructor.; TGLVContainer Listview container; TGLVEntry Item that goes into a TGListView container; TGLVector3 GL 3 component vector helper/wrapper class; TGLVertex3 GL 3 component vertex helper/wrapper class; TGLViewer Standard ROOT GL viewer.; TGLViewerBase GL Viewer base-class.; TGLViewerEditor GUI for editing TGLViewer attributes; TGLVoxelPainter Voxel painter; TGLWidget Window (widget) version of TGLPaintDevice",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:102338,Testability,log,logical,102338,"ulti-dimensional histogram with templated storage; THnT<int> multi-dimensional histogram with templated storage; THnT<long> multi-dimensional histogram with templated storage; THnT<short> multi-dimensional histogram with templated storage; THnT<unsigned int> multi-dimensional histogram with templated storage; THnT<unsigned long> multi-dimensional histogram with templated storage; THnT<unsigned short> multi-dimensional histogram with templated storage; THostAuth Class providing host specific authentication information; THtml Convert class(es) into HTML file(s); THtml::TFileDefinition helper class to determine a class's source files; THtml::TFileSysDB instance of file system data; THtml::TFileSysDir an directory of the local file system; THtml::TFileSysEntry an entry of the local file system; THtml::TFileSysRoot an root directory of the local file system; THtml::THelperBase a helper object's base class; THtml::TModuleDefinition helper class to determine a class's module; THtml::TPathDefinition helper class to determine directory layouts; THttpCallArg Arguments for single HTTP call; THttpEngine abstract class which should provide http-based protocol for server; THttpServer HTTP server for ROOT analysis; TImage Abstract image class; TImageDump create image in batch mode; TImagePalette Color Palette for value -> color conversion; TImagePlugin base class for different image format handlers(plugins); TIndArray ; TIndexTable ""Index"" array for TTable object; TIndexTable::iterator ; TInetAddress Represents an Internet Protocol (IP) address; TInspectCanvas The canvas Inspector; TInspectorImp GUI independent inspector abc; TInterpreter ABC defining interface to generic interpreter; TIsAProxy ; TIter Iterator wrapper; TIterator Iterator abstract base class; TKDE One dimensional semi-parametric Kernel Density Estimation; TKDTree<int,double> KD tree; TKDTree<int,float> KD tree; TKDTreeBinning ; TKSocket General kerberized socket; TKey Header description of a logical record on file.",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:104851,Testability,test,testing,104851,"cluding boosts and rotations; TLorentzVector A four vector with (-,-,-,+) metric; TMCVerbose Verbose class for MC application; TMD5 MD5 cryptographic hash functions with a 128 bit output; TMLPAnalyzer A simple analysis class for MLP; TMVA ; TMVA::BDTEventWrapper ; TMVA::BinarySearchTree Binary search tree including volume search method ; TMVA::BinarySearchTreeNode Node for the BinarySearchTree; TMVA::BinaryTree Base class for BinarySearch and Decision Trees; TMVA::CCPruner ; TMVA::CCTreeWrapper ; TMVA::Config Singleton class for global configuration settings; TMVA::Config::IONames ; TMVA::Config::VariablePlotting ; TMVA::Configurable Virtual base class for all TMVA method; TMVA::CostComplexityPruneTool ; TMVA::CrossEntropy Implementation of the CrossEntropy as separation criterion; TMVA::DecisionTree implementation of a Decision Tree; TMVA::DecisionTreeNode Node for the Decision Tree ; TMVA::Event ; TMVA::Factory The factory creates all MVA methods, and performs their training and testing; TMVA::FitterBase Baseclass for fitters; TMVA::GeneticAlgorithm Genetic algorithm controller; TMVA::GeneticFitter Fitter using a Genetic Algorithm; TMVA::GeneticGenes Genes definition for genetic algorithm; TMVA::GeneticPopulation Population definition for genetic algorithm; TMVA::GeneticRange Range definition for genetic algorithm; TMVA::GiniIndex Implementation of the GiniIndex as separation criterion; TMVA::GiniIndexWithLaplace Implementation of the GiniIndexWithLaplace as separation criterion; TMVA::IFitterTarget base class for a fitter ""target""; TMVA::IMethod Method Interface; TMVA::Interval Interval definition, continous and discrete; TMVA::KDEKernel Kernel density estimator for PDF smoothing; TMVA::LogInterval Interval definition, continous and discrete; TMVA::MCFitter Fitter using Monte Carlo sampling of parameters ; TMVA::MethodANNBase Base class for TMVA ANNs; TMVA::MethodBDT Analysis of Boosted Decision Trees; TMVA::MethodBase Virtual base class for all TMVA method; TMVA",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:105574,Testability,Log,LogInterval,105574,"Entropy Implementation of the CrossEntropy as separation criterion; TMVA::DecisionTree implementation of a Decision Tree; TMVA::DecisionTreeNode Node for the Decision Tree ; TMVA::Event ; TMVA::Factory The factory creates all MVA methods, and performs their training and testing; TMVA::FitterBase Baseclass for fitters; TMVA::GeneticAlgorithm Genetic algorithm controller; TMVA::GeneticFitter Fitter using a Genetic Algorithm; TMVA::GeneticGenes Genes definition for genetic algorithm; TMVA::GeneticPopulation Population definition for genetic algorithm; TMVA::GeneticRange Range definition for genetic algorithm; TMVA::GiniIndex Implementation of the GiniIndex as separation criterion; TMVA::GiniIndexWithLaplace Implementation of the GiniIndexWithLaplace as separation criterion; TMVA::IFitterTarget base class for a fitter ""target""; TMVA::IMethod Method Interface; TMVA::Interval Interval definition, continous and discrete; TMVA::KDEKernel Kernel density estimator for PDF smoothing; TMVA::LogInterval Interval definition, continous and discrete; TMVA::MCFitter Fitter using Monte Carlo sampling of parameters ; TMVA::MethodANNBase Base class for TMVA ANNs; TMVA::MethodBDT Analysis of Boosted Decision Trees; TMVA::MethodBase Virtual base class for all TMVA method; TMVA::MethodBayesClassifier Friedman's BayesClassifier method ; TMVA::MethodBoost ; TMVA::MethodCFMlpANN Interface for Clermond-Ferrand artificial neural network; TMVA::MethodCFMlpANN_Utils Implementation of Clermond-Ferrand artificial neural network; TMVA::MethodCategory ; TMVA::MethodCompositeBase ; TMVA::MethodCuts Multivariate optimisation of signal efficiency; TMVA::MethodDT Analysis of Decision Trees ; TMVA::MethodFDA Function Discriminant Analysis; TMVA::MethodFisher Analysis of Fisher discriminant (Fisher or Mahalanobis approach) ; TMVA::MethodHMatrix H-Matrix method, a simple comparison of chi-squared estimators for signal and background; TMVA::MethodKNN k Nearest Neighbour classifier; TMVA::MethodLD Linear dis",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:107356,Testability,log,logging,107356,"t (Fisher or Mahalanobis approach) ; TMVA::MethodHMatrix H-Matrix method, a simple comparison of chi-squared estimators for signal and background; TMVA::MethodKNN k Nearest Neighbour classifier; TMVA::MethodLD Linear discriminant analysis; TMVA::MethodLikelihood Likelihood analysis (""non-parametric approach"") ; TMVA::MethodMLP Multi-layer perceptron implemented specifically for TMVA; TMVA::MethodPDEFoam Multi-dimensional probability density estimator using TFoam (PDE-Foam); TMVA::MethodPDERS Multi-dimensional probability density estimator range search (PDERS) method; TMVA::MethodRuleFit Friedman's RuleFit method; TMVA::MethodSVM Support Vector Machine; TMVA::MethodTMlpANN Implementation of interface for TMultiLayerPerceptron; TMVA::MinuitFitter Fitter using a Genetic Algorithm; TMVA::MinuitWrapper Wrapper around TMinuit; TMVA::MisClassificationError Implementation of the MisClassificationError as separation criterion; TMVA::MsgLogger Ostringstream derivative to redirect and format logging output; TMVA::Node Node for the BinarySearch or Decision Trees; TMVA::OptimizeConfigParameters Interface to different separation critiera used in training algorithms; TMVA::PDEFoam Tree of PDEFoamCells; TMVA::PDEFoamCell Single cell of FOAM; TMVA::PDEFoamDecisionTree Decision tree like PDEFoam; TMVA::PDEFoamDecisionTreeDensity Class for decision tree like PDEFoam density; TMVA::PDEFoamDensityBase PDEFoam event density interface; TMVA::PDEFoamDiscriminant Tree of PDEFoamCells; TMVA::PDEFoamDiscriminantDensity Class for Discriminant density; TMVA::PDEFoamEvent Tree of PDEFoamCells; TMVA::PDEFoamEventDensity Class for Event density; TMVA::PDEFoamKernelBase PDEFoam kernel interface; TMVA::PDEFoamKernelGauss Gaussian PDEFoam kernel estimator; TMVA::PDEFoamKernelLinN next neighbor PDEFoam kernel estimator; TMVA::PDEFoamKernelTrivial trivial PDEFoam kernel estimator; TMVA::PDEFoamMultiTarget Tree of PDEFoamCells; TMVA::PDEFoamTarget Tree of PDEFoamCells; TMVA::PDEFoamTargetDensity Class f",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:121384,Testability,benchmark,benchmarks,121384,"3D; TPoints 2-D graphics point; TPoints3D Defines the abstract array of 3D points; TPoints3DABC A 3-D Points; TPointsArray3D A 3-D PolyLine; TPolyLine A PolyLine; TPolyLine3D A 3-D polyline; TPolyLineShape The base class to define an abstract 3D shape of STAR ""event"" geometry; TPolyMarker An array of points with the same marker; TPolyMarker3D An array of 3-D points with the same marker; TPosixCondition Posix condition variable; TPosixMutex Posix mutex lock; TPosixThread TPosixThread class; TPosixThreadFactory Posix thread factory; TPostScript PostScript driver; TPrimary TPrimary vertex particle information; TPrincipal Principal Components Analysis; TProcessEventTimer Process pending events at fixed time intervals; TProcessID Process Unique Identifier in time and space; TProcessUUID TProcessID managing UUIDs; TProfile Profile histogram class; TProfile2D Profile2D histogram class; TProfile3D Profile3D histogram class; TProof PROOF control class; TProofBench Steering class for PROOF benchmarks; TProofBenchDataSet Handle operations on datasets; TProofBenchRun Abstract base class for PROOF benchmark run; TProofBenchRunCPU CPU-intensive PROOF benchmark; TProofBenchRunDataRead IO-intensive PROOF benchmark; TProofChain TChain proxy for running chains on PROOF; TProofCondor PROOF control class for slaves allocated by condor; TProofDebug ; TProofDesc Small class describing a proof session; TProofDraw Tree drawing selector for PROOF; TProofDrawEntryList A Selectoor to fill a TEntryList from TTree::Draw; TProofDrawEventList Tree drawing selector for PROOF; TProofDrawGraph Tree drawing selector for PROOF; TProofDrawHist Tree drawing selector for PROOF; TProofDrawListOfGraphs Tree drawing selector for PROOF; TProofDrawListOfGraphs::Point3D_t ; TProofDrawListOfPolyMarkers3D Tree drawing selector for PROOF; TProofDrawListOfPolyMarkers3D::Point4D_t ; TProofDrawPolyMarker3D Tree drawing selector for PROOF; TProofDrawProfile Tree drawing selector for PROOF; TProofDrawProfile2D Tree dra",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:121491,Testability,benchmark,benchmark,121491,"s; TPointsArray3D A 3-D PolyLine; TPolyLine A PolyLine; TPolyLine3D A 3-D polyline; TPolyLineShape The base class to define an abstract 3D shape of STAR ""event"" geometry; TPolyMarker An array of points with the same marker; TPolyMarker3D An array of 3-D points with the same marker; TPosixCondition Posix condition variable; TPosixMutex Posix mutex lock; TPosixThread TPosixThread class; TPosixThreadFactory Posix thread factory; TPostScript PostScript driver; TPrimary TPrimary vertex particle information; TPrincipal Principal Components Analysis; TProcessEventTimer Process pending events at fixed time intervals; TProcessID Process Unique Identifier in time and space; TProcessUUID TProcessID managing UUIDs; TProfile Profile histogram class; TProfile2D Profile2D histogram class; TProfile3D Profile3D histogram class; TProof PROOF control class; TProofBench Steering class for PROOF benchmarks; TProofBenchDataSet Handle operations on datasets; TProofBenchRun Abstract base class for PROOF benchmark run; TProofBenchRunCPU CPU-intensive PROOF benchmark; TProofBenchRunDataRead IO-intensive PROOF benchmark; TProofChain TChain proxy for running chains on PROOF; TProofCondor PROOF control class for slaves allocated by condor; TProofDebug ; TProofDesc Small class describing a proof session; TProofDraw Tree drawing selector for PROOF; TProofDrawEntryList A Selectoor to fill a TEntryList from TTree::Draw; TProofDrawEventList Tree drawing selector for PROOF; TProofDrawGraph Tree drawing selector for PROOF; TProofDrawHist Tree drawing selector for PROOF; TProofDrawListOfGraphs Tree drawing selector for PROOF; TProofDrawListOfGraphs::Point3D_t ; TProofDrawListOfPolyMarkers3D Tree drawing selector for PROOF; TProofDrawListOfPolyMarkers3D::Point4D_t ; TProofDrawPolyMarker3D Tree drawing selector for PROOF; TProofDrawProfile Tree drawing selector for PROOF; TProofDrawProfile2D Tree drawing selector for PROOF; TProofLimitsFinder Find and communicate best axis limits; TProofLite PROOF-Lite c",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:121544,Testability,benchmark,benchmark,121544,"e; TPolyLine3D A 3-D polyline; TPolyLineShape The base class to define an abstract 3D shape of STAR ""event"" geometry; TPolyMarker An array of points with the same marker; TPolyMarker3D An array of 3-D points with the same marker; TPosixCondition Posix condition variable; TPosixMutex Posix mutex lock; TPosixThread TPosixThread class; TPosixThreadFactory Posix thread factory; TPostScript PostScript driver; TPrimary TPrimary vertex particle information; TPrincipal Principal Components Analysis; TProcessEventTimer Process pending events at fixed time intervals; TProcessID Process Unique Identifier in time and space; TProcessUUID TProcessID managing UUIDs; TProfile Profile histogram class; TProfile2D Profile2D histogram class; TProfile3D Profile3D histogram class; TProof PROOF control class; TProofBench Steering class for PROOF benchmarks; TProofBenchDataSet Handle operations on datasets; TProofBenchRun Abstract base class for PROOF benchmark run; TProofBenchRunCPU CPU-intensive PROOF benchmark; TProofBenchRunDataRead IO-intensive PROOF benchmark; TProofChain TChain proxy for running chains on PROOF; TProofCondor PROOF control class for slaves allocated by condor; TProofDebug ; TProofDesc Small class describing a proof session; TProofDraw Tree drawing selector for PROOF; TProofDrawEntryList A Selectoor to fill a TEntryList from TTree::Draw; TProofDrawEventList Tree drawing selector for PROOF; TProofDrawGraph Tree drawing selector for PROOF; TProofDrawHist Tree drawing selector for PROOF; TProofDrawListOfGraphs Tree drawing selector for PROOF; TProofDrawListOfGraphs::Point3D_t ; TProofDrawListOfPolyMarkers3D Tree drawing selector for PROOF; TProofDrawListOfPolyMarkers3D::Point4D_t ; TProofDrawPolyMarker3D Tree drawing selector for PROOF; TProofDrawProfile Tree drawing selector for PROOF; TProofDrawProfile2D Tree drawing selector for PROOF; TProofLimitsFinder Find and communicate best axis limits; TProofLite PROOF-Lite control class; TProofLog PROOF session log handler; TP",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:121597,Testability,benchmark,benchmark,121597,"e class to define an abstract 3D shape of STAR ""event"" geometry; TPolyMarker An array of points with the same marker; TPolyMarker3D An array of 3-D points with the same marker; TPosixCondition Posix condition variable; TPosixMutex Posix mutex lock; TPosixThread TPosixThread class; TPosixThreadFactory Posix thread factory; TPostScript PostScript driver; TPrimary TPrimary vertex particle information; TPrincipal Principal Components Analysis; TProcessEventTimer Process pending events at fixed time intervals; TProcessID Process Unique Identifier in time and space; TProcessUUID TProcessID managing UUIDs; TProfile Profile histogram class; TProfile2D Profile2D histogram class; TProfile3D Profile3D histogram class; TProof PROOF control class; TProofBench Steering class for PROOF benchmarks; TProofBenchDataSet Handle operations on datasets; TProofBenchRun Abstract base class for PROOF benchmark run; TProofBenchRunCPU CPU-intensive PROOF benchmark; TProofBenchRunDataRead IO-intensive PROOF benchmark; TProofChain TChain proxy for running chains on PROOF; TProofCondor PROOF control class for slaves allocated by condor; TProofDebug ; TProofDesc Small class describing a proof session; TProofDraw Tree drawing selector for PROOF; TProofDrawEntryList A Selectoor to fill a TEntryList from TTree::Draw; TProofDrawEventList Tree drawing selector for PROOF; TProofDrawGraph Tree drawing selector for PROOF; TProofDrawHist Tree drawing selector for PROOF; TProofDrawListOfGraphs Tree drawing selector for PROOF; TProofDrawListOfGraphs::Point3D_t ; TProofDrawListOfPolyMarkers3D Tree drawing selector for PROOF; TProofDrawListOfPolyMarkers3D::Point4D_t ; TProofDrawPolyMarker3D Tree drawing selector for PROOF; TProofDrawProfile Tree drawing selector for PROOF; TProofDrawProfile2D Tree drawing selector for PROOF; TProofLimitsFinder Find and communicate best axis limits; TProofLite PROOF-Lite control class; TProofLog PROOF session log handler; TProofLogElem PROOF session log element; TProofMgr Abst",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:122534,Testability,log,log,122534,e PROOF benchmark; TProofBenchRunDataRead IO-intensive PROOF benchmark; TProofChain TChain proxy for running chains on PROOF; TProofCondor PROOF control class for slaves allocated by condor; TProofDebug ; TProofDesc Small class describing a proof session; TProofDraw Tree drawing selector for PROOF; TProofDrawEntryList A Selectoor to fill a TEntryList from TTree::Draw; TProofDrawEventList Tree drawing selector for PROOF; TProofDrawGraph Tree drawing selector for PROOF; TProofDrawHist Tree drawing selector for PROOF; TProofDrawListOfGraphs Tree drawing selector for PROOF; TProofDrawListOfGraphs::Point3D_t ; TProofDrawListOfPolyMarkers3D Tree drawing selector for PROOF; TProofDrawListOfPolyMarkers3D::Point4D_t ; TProofDrawPolyMarker3D Tree drawing selector for PROOF; TProofDrawProfile Tree drawing selector for PROOF; TProofDrawProfile2D Tree drawing selector for PROOF; TProofLimitsFinder Find and communicate best axis limits; TProofLite PROOF-Lite control class; TProofLog PROOF session log handler; TProofLogElem PROOF session log element; TProofMgr Abstract PROOF manager interface; TProofMgrLite XrdProofd PROOF manager interface; TProofMonSender Interface for PROOF monitoring; TProofMonSenderML Interface for PROOF monitoring; TProofMonSenderSQL Interface for PROOF monitoring; TProofNodeInfo Class describing a PROOF node; TProofNodes Node and worker information; TProofOutputFile Wrapper class to steer the merging of files produced on workers; TProofOutputList Output list specific TList derivation; TProofPerfAnalysis Set of tools to analyse the performance tree; TProofPlayer Basic PROOF player; TProofPlayerLite PROOF player running in PROOF-Lite; TProofPlayerLocal PROOF player running on client; TProofPlayerRemote PROOF player running on master server; TProofPlayerSlave PROOF player running on slave server; TProofPlayerSuperMaster PROOF player running on super master; TProofProgressDialog PROOF progress dialog; TProofProgressInfo Progress information; TProofProgressLog C,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:122575,Testability,log,log,122575, IO-intensive PROOF benchmark; TProofChain TChain proxy for running chains on PROOF; TProofCondor PROOF control class for slaves allocated by condor; TProofDebug ; TProofDesc Small class describing a proof session; TProofDraw Tree drawing selector for PROOF; TProofDrawEntryList A Selectoor to fill a TEntryList from TTree::Draw; TProofDrawEventList Tree drawing selector for PROOF; TProofDrawGraph Tree drawing selector for PROOF; TProofDrawHist Tree drawing selector for PROOF; TProofDrawListOfGraphs Tree drawing selector for PROOF; TProofDrawListOfGraphs::Point3D_t ; TProofDrawListOfPolyMarkers3D Tree drawing selector for PROOF; TProofDrawListOfPolyMarkers3D::Point4D_t ; TProofDrawPolyMarker3D Tree drawing selector for PROOF; TProofDrawProfile Tree drawing selector for PROOF; TProofDrawProfile2D Tree drawing selector for PROOF; TProofLimitsFinder Find and communicate best axis limits; TProofLite PROOF-Lite control class; TProofLog PROOF session log handler; TProofLogElem PROOF session log element; TProofMgr Abstract PROOF manager interface; TProofMgrLite XrdProofd PROOF manager interface; TProofMonSender Interface for PROOF monitoring; TProofMonSenderML Interface for PROOF monitoring; TProofMonSenderSQL Interface for PROOF monitoring; TProofNodeInfo Class describing a PROOF node; TProofNodes Node and worker information; TProofOutputFile Wrapper class to steer the merging of files produced on workers; TProofOutputList Output list specific TList derivation; TProofPerfAnalysis Set of tools to analyse the performance tree; TProofPlayer Basic PROOF player; TProofPlayerLite PROOF player running in PROOF-Lite; TProofPlayerLocal PROOF player running on client; TProofPlayerRemote PROOF player running on master server; TProofPlayerSlave PROOF player running on slave server; TProofPlayerSuperMaster PROOF player running on super master; TProofProgressDialog PROOF progress dialog; TProofProgressInfo Progress information; TProofProgressLog Class implementing a log graphic box; TPro,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:123556,Testability,log,log,123556,em PROOF session log element; TProofMgr Abstract PROOF manager interface; TProofMgrLite XrdProofd PROOF manager interface; TProofMonSender Interface for PROOF monitoring; TProofMonSenderML Interface for PROOF monitoring; TProofMonSenderSQL Interface for PROOF monitoring; TProofNodeInfo Class describing a PROOF node; TProofNodes Node and worker information; TProofOutputFile Wrapper class to steer the merging of files produced on workers; TProofOutputList Output list specific TList derivation; TProofPerfAnalysis Set of tools to analyse the performance tree; TProofPlayer Basic PROOF player; TProofPlayerLite PROOF player running in PROOF-Lite; TProofPlayerLocal PROOF player running on client; TProofPlayerRemote PROOF player running on master server; TProofPlayerSlave PROOF player running on slave server; TProofPlayerSuperMaster PROOF player running on super master; TProofProgressDialog PROOF progress dialog; TProofProgressInfo Progress information; TProofProgressLog Class implementing a log graphic box; TProofProgressMemoryPlot PROOF progress memory plots; TProofProgressStatus Proof progress status class; TProofQueryResult Class describing a PROOF query; TProofResources Abstract class describing PROOF resources; TProofResourcesStatic Class to handle PROOF static config; TProofServ PROOF Server Application Interface; TProofServLite PROOF-Lite Server Application Interface; TProofSuperMaster PROOF control class for making submasters; TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t> Class describing a vector container; TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t> Class describing a vector container; TPyDispatcher Python dispatcher class; TPyMultiGenFunction Python for Math::IMultiGenFunction equivalent; TPyMultiGradFunction Python for Math::IMultiGradFunction equivalent; TPyReturn Python morphing return object; TPySelector Python equivalent base class for PROOF; TPythia8 Interface class of Pythia8; TPythia8Decayer Particle Decayer using Pythia8; T,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:21089,Usability,Simpl,SimplexMinimizer,21089,"ath::VirtualIntegratorMultiDim ; ROOT::Math::VirtualIntegratorOneDim ; ROOT::Math::WrappedMultiTF1 ; ROOT::Math::WrappedTF1 ; ROOT::MathMore ; ROOT::Minuit2::CombinedMinimizer ; ROOT::Minuit2::FCNBase ; ROOT::Minuit2::FCNGradientBase ; ROOT::Minuit2::FumiliFCNBase ; ROOT::Minuit2::FumiliMinimizer ; ROOT::Minuit2::FunctionMinimizer ; ROOT::Minuit2::FunctionMinimum ; ROOT::Minuit2::GenericFunction ; ROOT::Minuit2::MinosError ; ROOT::Minuit2::Minuit2Minimizer ; ROOT::Minuit2::MinuitParameter ; ROOT::Minuit2::MnApplication ; ROOT::Minuit2::MnContours ; ROOT::Minuit2::MnFumiliMinimize ; ROOT::Minuit2::MnHesse ; ROOT::Minuit2::MnMachinePrecision ; ROOT::Minuit2::MnMigrad ; ROOT::Minuit2::MnMinimize ; ROOT::Minuit2::MnMinos ; ROOT::Minuit2::MnPlot ; ROOT::Minuit2::MnScan ; ROOT::Minuit2::MnSimplex ; ROOT::Minuit2::MnStrategy ; ROOT::Minuit2::MnUserParameterState ; ROOT::Minuit2::MnUserParameters ; ROOT::Minuit2::ModularFunctionMinimizer ; ROOT::Minuit2::ScanMinimizer ; ROOT::Minuit2::SimplexMinimizer ; ROOT::Minuit2::VariableMetricMinimizer ; ROOT::TArrayProxy<ROOT::TArrayType<Long64_t,0> > ; ROOT::TArrayProxy<ROOT::TArrayType<ULong64_t,0> > ; ROOT::TArrayProxy<ROOT::TArrayType<bool,0> > ; ROOT::TArrayProxy<ROOT::TArrayType<char,0> > ; ROOT::TArrayProxy<ROOT::TArrayType<double,0> > ; ROOT::TArrayProxy<ROOT::TArrayType<float,0> > ; ROOT::TArrayProxy<ROOT::TArrayType<int,0> > ; ROOT::TArrayProxy<ROOT::TArrayType<long,0> > ; ROOT::TArrayProxy<ROOT::TArrayType<short,0> > ; ROOT::TArrayProxy<ROOT::TArrayType<unsigned char,0> > ; ROOT::TArrayProxy<ROOT::TArrayType<unsigned int,0> > ; ROOT::TArrayProxy<ROOT::TArrayType<unsigned long,0> > ; ROOT::TArrayProxy<ROOT::TArrayType<unsigned short,0> > ; ROOT::TBranchProxy ; ROOT::TBranchProxyClassDescriptor Class to cache the information we gathered about the branch and its content; ROOT::TBranchProxyDescriptor Describe the proxy for a branch; ROOT::TBranchProxyDirector ; ROOT::TClaArrayProxy<ROOT::TArrayType<Long64_t,0> > ; ROOT::TClaArr",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:44792,Usability,simpl,simple,44792,"ooSimGenContext Context for efficiently generating a dataset from a RooSimultaneous PDF; RooSimPdfBuilder RooSimultaneous PDF Builder (obsolete); RooSimSplitGenContext Context for efficiently generating a dataset from a RooSimultaneous PDF; RooSimWSTool Workspace oriented tool for customized cloning of p.d.f. into a simultaneous p.d.f; RooSimWSTool::BuildConfig Build configuration object for RooSimWSTool; RooSimWSTool::MultiBuildConfig Build configuration object for RooSimWSTool with multiple prototype p.d.f.; RooSimWSTool::ObjBuildConfig Validated RooSimWSTool build configuration; RooSimWSTool::ObjSplitRule Validated RooSimWSTool split rule; RooSimWSTool::SplitRule Split rule specification for prototype p.d.f; RooSimultaneous Simultaneous operator p.d.f, functions like C++ 'switch()' on input p.d.fs operating on index category5A; RooSpHarmonic SpHarmonic polynomial; RooStats ; RooStats::AcceptanceRegion A simple class for acceptance regions used for ConfidenceBelt; RooStats::AsymptoticCalculator ; RooStats::BayesianCalculator BayesianCalculator class; RooStats::BernsteinCorrection A utility to add polynomial corrrection terms to a model to improve the description of data.; RooStats::CombinedCalculator A base class that is for tools that can be both HypoTestCalculators and IntervalCalculators; RooStats::ConfInterval Interface for Confidence Intervals; RooStats::ConfidenceBelt A confidence belt for the Neyman Construction; RooStats::DebuggingSampler A simple implementation of the DistributionCreator interface; RooStats::DebuggingTestStat A concrete implementation of the TestStatistic interface, useful for debugging.; RooStats::DetailedOutputAggregator ; RooStats::FeldmanCousins Interface for tools setting limits (producing confidence intervals); RooStats::FrequentistCalculator ; RooStats::HLFactory The high Level Model Factory to create models from datacards; RooStats::Heaviside Your description goes here...; RooStats::HistFactory ; RooStats::HistFactory::Asimov ; Ro",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:45347,Usability,simpl,simple,45347,"STool::MultiBuildConfig Build configuration object for RooSimWSTool with multiple prototype p.d.f.; RooSimWSTool::ObjBuildConfig Validated RooSimWSTool build configuration; RooSimWSTool::ObjSplitRule Validated RooSimWSTool split rule; RooSimWSTool::SplitRule Split rule specification for prototype p.d.f; RooSimultaneous Simultaneous operator p.d.f, functions like C++ 'switch()' on input p.d.fs operating on index category5A; RooSpHarmonic SpHarmonic polynomial; RooStats ; RooStats::AcceptanceRegion A simple class for acceptance regions used for ConfidenceBelt; RooStats::AsymptoticCalculator ; RooStats::BayesianCalculator BayesianCalculator class; RooStats::BernsteinCorrection A utility to add polynomial corrrection terms to a model to improve the description of data.; RooStats::CombinedCalculator A base class that is for tools that can be both HypoTestCalculators and IntervalCalculators; RooStats::ConfInterval Interface for Confidence Intervals; RooStats::ConfidenceBelt A confidence belt for the Neyman Construction; RooStats::DebuggingSampler A simple implementation of the DistributionCreator interface; RooStats::DebuggingTestStat A concrete implementation of the TestStatistic interface, useful for debugging.; RooStats::DetailedOutputAggregator ; RooStats::FeldmanCousins Interface for tools setting limits (producing confidence intervals); RooStats::FrequentistCalculator ; RooStats::HLFactory The high Level Model Factory to create models from datacards; RooStats::Heaviside Your description goes here...; RooStats::HistFactory ; RooStats::HistFactory::Asimov ; RooStats::HistFactory::Channel ; RooStats::HistFactory::ConfigParser ; RooStats::HistFactory::Constraint ; RooStats::HistFactory::Data ; RooStats::HistFactory::EstimateSummary ; RooStats::HistFactory::FlexibleInterpVar flexible interpolation; RooStats::HistFactory::HistFactoryNavigation ; RooStats::HistFactory::HistFactorySimultaneous Simultaneous operator p.d.f, functions like C++ 'switch()' on input p.d.fs operati",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:49079,Usability,simpl,simple,49079,"rlo calculator for Bayesian credible intervals; RooStats::MCMCInterval Concrete implementation of a ConfInterval based on MCMC calculation; RooStats::MCMCIntervalPlot Class containing the results of the MCMCCalculator; RooStats::MarkovChain ; RooStats::MaxLikelihoodEstimateTestStat ; RooStats::MetropolisHastings Markov Chain Monte Carlo calculator for Bayesian credible intervals; RooStats::MinNLLTestStat implements the minimum NLL as a test statistic to be used with several tools; RooStats::ModelConfig A class that holds configuration information for a model using a workspace as a store; RooStats::NeymanConstruction Interface for tools setting limits (producing confidence intervals); RooStats::NumEventsTestStat ; RooStats::NumberCountingPdfFactory A factory specific to common number counting problems.; RooStats::NumberCountingUtils ; RooStats::PdfProposal ; RooStats::PointSetInterval Concrete implementation of ConfInterval for simple 1-D intervals in the form [a,b]; RooStats::ProfileInspector Class containing the results of the IntervalCalculator; RooStats::ProfileLikelihoodCalculator A concrete implementation of CombinedCalculator that uses the ProfileLikelihood ratio.; RooStats::ProfileLikelihoodTestStat implements the profile likelihood ratio as a test statistic to be used with several tools; RooStats::ProofConfig Configuration options for proof.; RooStats::ProposalFunction Interface for the proposal function used with Markov Chain Monte Carlo; RooStats::ProposalHelper ; RooStats::RatioOfProfiledLikelihoodsTestStat implements the ratio of profiled likelihood as test statistic; RooStats::SPlot Class used for making sPlots; RooStats::SamplingDistPlot Class containing the results of the HybridCalculator; RooStats::SamplingDistribution Class containing the results of the HybridCalculator; RooStats::SamplingSummary A summary of acceptance regions for confidence belt; RooStats::SamplingSummaryLookup A simple class used by ConfidenceBelt; RooStats::SequentialProposal A ",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:50070,Usability,simpl,simple,50070,"ts::NumberCountingPdfFactory A factory specific to common number counting problems.; RooStats::NumberCountingUtils ; RooStats::PdfProposal ; RooStats::PointSetInterval Concrete implementation of ConfInterval for simple 1-D intervals in the form [a,b]; RooStats::ProfileInspector Class containing the results of the IntervalCalculator; RooStats::ProfileLikelihoodCalculator A concrete implementation of CombinedCalculator that uses the ProfileLikelihood ratio.; RooStats::ProfileLikelihoodTestStat implements the profile likelihood ratio as a test statistic to be used with several tools; RooStats::ProofConfig Configuration options for proof.; RooStats::ProposalFunction Interface for the proposal function used with Markov Chain Monte Carlo; RooStats::ProposalHelper ; RooStats::RatioOfProfiledLikelihoodsTestStat implements the ratio of profiled likelihood as test statistic; RooStats::SPlot Class used for making sPlots; RooStats::SamplingDistPlot Class containing the results of the HybridCalculator; RooStats::SamplingDistribution Class containing the results of the HybridCalculator; RooStats::SamplingSummary A summary of acceptance regions for confidence belt; RooStats::SamplingSummaryLookup A simple class used by ConfidenceBelt; RooStats::SequentialProposal A concrete implementation of ProposalFunction, that uniformly samples the parameter space.; RooStats::SimpleInterval Concrete implementation of ConfInterval for simple 1-D intervals in the form [a,b]; RooStats::SimpleLikelihoodRatioTestStat ; RooStats::TestStatSampler Interface for tools setting limits (producing confidence intervals); RooStats::TestStatistic Interface for a TestStatistic; RooStats::ToyMCImportanceSampler An implementation of importance sampling; RooStats::ToyMCPayload ; RooStats::ToyMCSampler A simple implementation of the TestStatSampler interface; RooStats::ToyMCStudy toy MC study for parallel processing; RooStats::UniformProposal A concrete implementation of ProposalFunction, that uniformly samples the",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:50238,Usability,Simpl,SimpleInterval,50238," proposal function used with Markov Chain Monte Carlo; RooStats::ProposalHelper ; RooStats::RatioOfProfiledLikelihoodsTestStat implements the ratio of profiled likelihood as test statistic; RooStats::SPlot Class used for making sPlots; RooStats::SamplingDistPlot Class containing the results of the HybridCalculator; RooStats::SamplingDistribution Class containing the results of the HybridCalculator; RooStats::SamplingSummary A summary of acceptance regions for confidence belt; RooStats::SamplingSummaryLookup A simple class used by ConfidenceBelt; RooStats::SequentialProposal A concrete implementation of ProposalFunction, that uniformly samples the parameter space.; RooStats::SimpleInterval Concrete implementation of ConfInterval for simple 1-D intervals in the form [a,b]; RooStats::SimpleLikelihoodRatioTestStat ; RooStats::TestStatSampler Interface for tools setting limits (producing confidence intervals); RooStats::TestStatistic Interface for a TestStatistic; RooStats::ToyMCImportanceSampler An implementation of importance sampling; RooStats::ToyMCPayload ; RooStats::ToyMCSampler A simple implementation of the TestStatSampler interface; RooStats::ToyMCStudy toy MC study for parallel processing; RooStats::UniformProposal A concrete implementation of ProposalFunction, that uniformly samples the parameter space.; RooStats::UpperLimitMCSModule MCStudy module to calculate upperlimit of a given poi; RooStepFunction Step Function; RooStreamParser Utility class that parses std::iostream data into tokens; RooStringVar String-valued variable ; RooStudyManager A general purpose workspace oriented parallelizing study manager; RooStudyPackage A general purpose workspace oriented parallelizing study manager; RooSuperCategory Lvalue product operator for catategory lvalues; RooTFnBinding RooAbsReal binding to ROOT TF[123] functions; RooTFnPdfBinding RooAbsPdf binding to ROOT TF[123] functions; RooTFoamBinding Function binding to RooAbsReal object; RooTObjWrap Container class for Int",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:50297,Usability,simpl,simple,50297," proposal function used with Markov Chain Monte Carlo; RooStats::ProposalHelper ; RooStats::RatioOfProfiledLikelihoodsTestStat implements the ratio of profiled likelihood as test statistic; RooStats::SPlot Class used for making sPlots; RooStats::SamplingDistPlot Class containing the results of the HybridCalculator; RooStats::SamplingDistribution Class containing the results of the HybridCalculator; RooStats::SamplingSummary A summary of acceptance regions for confidence belt; RooStats::SamplingSummaryLookup A simple class used by ConfidenceBelt; RooStats::SequentialProposal A concrete implementation of ProposalFunction, that uniformly samples the parameter space.; RooStats::SimpleInterval Concrete implementation of ConfInterval for simple 1-D intervals in the form [a,b]; RooStats::SimpleLikelihoodRatioTestStat ; RooStats::TestStatSampler Interface for tools setting limits (producing confidence intervals); RooStats::TestStatistic Interface for a TestStatistic; RooStats::ToyMCImportanceSampler An implementation of importance sampling; RooStats::ToyMCPayload ; RooStats::ToyMCSampler A simple implementation of the TestStatSampler interface; RooStats::ToyMCStudy toy MC study for parallel processing; RooStats::UniformProposal A concrete implementation of ProposalFunction, that uniformly samples the parameter space.; RooStats::UpperLimitMCSModule MCStudy module to calculate upperlimit of a given poi; RooStepFunction Step Function; RooStreamParser Utility class that parses std::iostream data into tokens; RooStringVar String-valued variable ; RooStudyManager A general purpose workspace oriented parallelizing study manager; RooStudyPackage A general purpose workspace oriented parallelizing study manager; RooSuperCategory Lvalue product operator for catategory lvalues; RooTFnBinding RooAbsReal binding to ROOT TF[123] functions; RooTFnPdfBinding RooAbsPdf binding to ROOT TF[123] functions; RooTFoamBinding Function binding to RooAbsReal object; RooTObjWrap Container class for Int",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:50347,Usability,Simpl,SimpleLikelihoodRatioTestStat,50347," proposal function used with Markov Chain Monte Carlo; RooStats::ProposalHelper ; RooStats::RatioOfProfiledLikelihoodsTestStat implements the ratio of profiled likelihood as test statistic; RooStats::SPlot Class used for making sPlots; RooStats::SamplingDistPlot Class containing the results of the HybridCalculator; RooStats::SamplingDistribution Class containing the results of the HybridCalculator; RooStats::SamplingSummary A summary of acceptance regions for confidence belt; RooStats::SamplingSummaryLookup A simple class used by ConfidenceBelt; RooStats::SequentialProposal A concrete implementation of ProposalFunction, that uniformly samples the parameter space.; RooStats::SimpleInterval Concrete implementation of ConfInterval for simple 1-D intervals in the form [a,b]; RooStats::SimpleLikelihoodRatioTestStat ; RooStats::TestStatSampler Interface for tools setting limits (producing confidence intervals); RooStats::TestStatistic Interface for a TestStatistic; RooStats::ToyMCImportanceSampler An implementation of importance sampling; RooStats::ToyMCPayload ; RooStats::ToyMCSampler A simple implementation of the TestStatSampler interface; RooStats::ToyMCStudy toy MC study for parallel processing; RooStats::UniformProposal A concrete implementation of ProposalFunction, that uniformly samples the parameter space.; RooStats::UpperLimitMCSModule MCStudy module to calculate upperlimit of a given poi; RooStepFunction Step Function; RooStreamParser Utility class that parses std::iostream data into tokens; RooStringVar String-valued variable ; RooStudyManager A general purpose workspace oriented parallelizing study manager; RooStudyPackage A general purpose workspace oriented parallelizing study manager; RooSuperCategory Lvalue product operator for catategory lvalues; RooTFnBinding RooAbsReal binding to ROOT TF[123] functions; RooTFnPdfBinding RooAbsPdf binding to ROOT TF[123] functions; RooTFoamBinding Function binding to RooAbsReal object; RooTObjWrap Container class for Int",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:50654,Usability,simpl,simple,50654," proposal function used with Markov Chain Monte Carlo; RooStats::ProposalHelper ; RooStats::RatioOfProfiledLikelihoodsTestStat implements the ratio of profiled likelihood as test statistic; RooStats::SPlot Class used for making sPlots; RooStats::SamplingDistPlot Class containing the results of the HybridCalculator; RooStats::SamplingDistribution Class containing the results of the HybridCalculator; RooStats::SamplingSummary A summary of acceptance regions for confidence belt; RooStats::SamplingSummaryLookup A simple class used by ConfidenceBelt; RooStats::SequentialProposal A concrete implementation of ProposalFunction, that uniformly samples the parameter space.; RooStats::SimpleInterval Concrete implementation of ConfInterval for simple 1-D intervals in the form [a,b]; RooStats::SimpleLikelihoodRatioTestStat ; RooStats::TestStatSampler Interface for tools setting limits (producing confidence intervals); RooStats::TestStatistic Interface for a TestStatistic; RooStats::ToyMCImportanceSampler An implementation of importance sampling; RooStats::ToyMCPayload ; RooStats::ToyMCSampler A simple implementation of the TestStatSampler interface; RooStats::ToyMCStudy toy MC study for parallel processing; RooStats::UniformProposal A concrete implementation of ProposalFunction, that uniformly samples the parameter space.; RooStats::UpperLimitMCSModule MCStudy module to calculate upperlimit of a given poi; RooStepFunction Step Function; RooStreamParser Utility class that parses std::iostream data into tokens; RooStringVar String-valued variable ; RooStudyManager A general purpose workspace oriented parallelizing study manager; RooStudyPackage A general purpose workspace oriented parallelizing study manager; RooSuperCategory Lvalue product operator for catategory lvalues; RooTFnBinding RooAbsReal binding to ROOT TF[123] functions; RooTFnPdfBinding RooAbsPdf binding to ROOT TF[123] functions; RooTFoamBinding Function binding to RooAbsReal object; RooTObjWrap Container class for Int",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:53263,Usability,Simpl,Simple,53263,,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:60062,Usability,feedback,feedback,60062,"; TDecompBK Matrix Decomposition Bunch-Kaufman; TDecompBase Matrix Decomposition Base; TDecompChol Matrix Decompositition Cholesky; TDecompLU Matrix Decompositition LU; TDecompQRH Matrix Decompositition QRH; TDecompSVD Matrix Decompositition SVD; TDecompSparse Matrix Decompositition LU; TDialogCanvas A specialized canvas to set attributes.; TDiamond Diamond class; TDictAttributeMap Container for name/value pairs of TDictionary attributes; TDictionary ABC defining interface to dictionary; TDirectory Describe directory structure in memory; TDirectoryFile Describe directory structure in a ROOT file; TDocDirective THtml directive handler; TDocHtmlDirective Handler for ""Begin_Html""/""End_Html"" for raw HTML in documentation comments; TDocLatexDirective Handler for ""Begin_Latex""/""End_Latex"" to generate an image from latex; TDocMacroDirective Handler for ""Begin_Macro""/""End_Macro"" for code that is executed and that can generate an image for documentation; TDocOutput generates documentation web pages; TDocParser parser for reference documentation; TDrawFeedback Present PROOF query feedback; TELTU ELTU shape; TEditQueryFrame Edit query frame; TEfficiency calculating efficiencies; TEllipse An ellipse; TEmulatedCollectionProxy ; TEmulatedMapProxy ; TEntryList A list of entries in a TTree; TEntryListArray A list of entries and subentries in a TTree; TEntryListBlock Used internally in TEntryList to store the entry numbers; TEntryListFromFile Manager for entry lists from different files; TEnv Handle ROOT configuration resources; TEnvRec Individual TEnv records; TEve3DProjection 3D scaling ""projection""; TEveArrow Class for gl visualisation of arrow.; TEveArrowEditor GUI editor for TEveArrow.; TEveArrowGL GL renderer class for TEveArrow.; TEveBox 3D box with arbitrary vertices.; TEveBoxGL GL renderer class for TEveBox.; TEveBoxProjected Projection of TEveBox.; TEveBoxProjectedGL GL renderer class for TEveBoxProjected.; TEveBoxSet Collection of 3D primitives (fixed-size boxes, boxes of",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:64987,Usability,simpl,simplified,64987," Composite GUI frame for parallel display of a TGListTree and TEveGedEditor.; TEveGTriVecValuator Composite GUI element for setting three numerical values (label, three number-entries).; TEveGValuator Composite GUI element for single value selection (supports label, number-entry and slider).; TEveGValuatorBase Base class for composite GUI elements for setting of numeric values.; TEveGedEditor Specialization of TGedEditor for proper update propagation to TEveManager.; TEveGedNameFrame Top name-frame used in EVE.; TEveGedNameTextButton Button for GED name-frame.; TEveGeoManagerHolder Exception-safe wrapper for temporary setting of gGeoManager variable.; TEveGeoNode Wrapper for TGeoNode that allows it to be shown in GUI and controlled as a TEveElement.; TEveGeoNodeEditor Editor for TEveGeoNode class.; TEveGeoPolyShape A shape with arbitrary tesselation for visualization of CSG shapes.; TEveGeoShape Wrapper for TGeoShape with absolute positioning and color attributes allowing display of extracted TGeoShape's (without an active TGeoManager) and simplified geometries (needed for NLT projections).; TEveGeoShapeExtract Globally positioned TGeoShape with rendering attributes and an optional list of daughter shape-extracts.; TEveGeoShapeProjected ; TEveGeoTopNode Top-level TEveGeoNode with a pointer to TGeoManager and controls for steering of TGeoPainter.; TEveGeoTopNodeEditor Editor for TEveGeoTopNode class.; TEveGridStepper Provide discrete position coordinates for placement of objects on regular grids.; TEveGridStepperEditor Editor for TEveGridStepper class.; TEveGridStepperSubEditor Sub-editor for TEveGridStepper class.; TEveHit Monte Carlo hit (also used in VSD).; TEveJetCone Short description.; TEveJetConeEditor GUI editor for TEveJetCone.; TEveJetConeGL GL renderer class for TEveJetCone.; TEveJetConeProjected Projection of TEveJetCone.; TEveJetConeProjectedGL GL renderer class for TEveJetCone.; TEveLegoEventHandler A GL event handler class. Swiches perspective or orthog",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:78205,Usability,simpl,simple,78205,"edirection) plugin for the new ROOT Browser; TGCompositeFrame Base class for composite widgets (menubars, etc.); TGContainer Canvas container; TGDMLParse imports GDML using DOM and binds it to ROOT; TGDMLRefl helper class used for the storage of reflected solids; TGDMLWrite imports GDML using DOM and binds it to ROOT; TGDNDManager The main Drag and Drop Manager; TGDimension Dimension object (width, height); TGDockButton Dock button; TGDockHideButton Hide dock button; TGDockableFrame Dockable widget; TGDoubleHSlider Horizontal double slider widget; TGDoubleSlider Double slider widget abstract base class; TGDoubleVSlider Vertical double slider widget; TGDragWindow Window used for dragging; TGEventHandler Abstract event handler; TGFSComboBox Combo box widget for file system path; TGFileBrowser File browser.; TGFileContainer Container containing file system objects; TGFileDialog File selection dialog; TGFileInfo ; TGFileItem Class representing file system object; TGFont GUI font description; TGFontDialog Font selection dialog; TGFontDialog::FontProp_t ; TGFontPool Font pool; TGFontTypeComboBox Font type combobox widget; TGFrame Base class for simple widgets (button, etc.); TGFrameElement Base class used in GUI containers; TGFrameElementPack Class used in TGPack.; TGGC Graphics context; TGGCPool Graphics context pool; TGGotoDialog Goto line dialog used by TGTextEdit widget; TGGroupFrame A composite frame with border and title; TGHButtonGroup A button group with one horizontal row; TGHProgressBar Horizontal progress bar widget; TGHScrollBar Horizontal scrollbar widget; TGHSlider Horizontal slider widget; TGHSplitter A horizontal frame splitter; TGHeaderFrame Header frame with buttons and splitters; TGHorizontal3DLine A horizontal 3D separator line; TGHorizontalFrame Composite frame with horizontal child layout; TGHorizontalLayout Horizontal layout manager; TGHotString Graphics string with hot character; TGHtml HTML widget; TGHtmlBrowser very simple html browser; TGIcon Ic",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:78575,Usability,progress bar,progress bar,78575," File browser.; TGFileContainer Container containing file system objects; TGFileDialog File selection dialog; TGFileInfo ; TGFileItem Class representing file system object; TGFont GUI font description; TGFontDialog Font selection dialog; TGFontDialog::FontProp_t ; TGFontPool Font pool; TGFontTypeComboBox Font type combobox widget; TGFrame Base class for simple widgets (button, etc.); TGFrameElement Base class used in GUI containers; TGFrameElementPack Class used in TGPack.; TGGC Graphics context; TGGCPool Graphics context pool; TGGotoDialog Goto line dialog used by TGTextEdit widget; TGGroupFrame A composite frame with border and title; TGHButtonGroup A button group with one horizontal row; TGHProgressBar Horizontal progress bar widget; TGHScrollBar Horizontal scrollbar widget; TGHSlider Horizontal slider widget; TGHSplitter A horizontal frame splitter; TGHeaderFrame Header frame with buttons and splitters; TGHorizontal3DLine A horizontal 3D separator line; TGHorizontalFrame Composite frame with horizontal child layout; TGHorizontalLayout Horizontal layout manager; TGHotString Graphics string with hot character; TGHtml HTML widget; TGHtmlBrowser very simple html browser; TGIcon Icon GUI class; TGIconLBEntry Icon + text listbox entry; TGIdleHandler Idle event handler; TGImageMap Clickable image (like MAP in HTML); TGInputDialog Simple input dialog; TGInsets Inset (left, right, top, bottom); TGItemContext Context menu for TTVLVEntry; TGL5DDataSet Class to read data from TTree and create TGL5DPainter.; TGL5DDataSetEditor GUI for editing OpenGL 5D Viewer attributes; TGLAdapter Allow plot-painters to be used for gl-inpad and gl-viewer.; TGLAnnotation GL-annotation.; TGLAutoRotator Automatic, timer-based, rotation of GL-viewer's camera.; TGLAxis a GL Axis; TGLAxisPainter GL axis painter.; TGLAxisPainterBox Painter of GL axes for a 3D box.; TGLBContainer Listbox container; TGLBEntry Basic listbox entry; TGLBoundingBox a 3D orientated bounding box; TGLBoxCut Cuts away part ",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:79018,Usability,simpl,simple,79018," File browser.; TGFileContainer Container containing file system objects; TGFileDialog File selection dialog; TGFileInfo ; TGFileItem Class representing file system object; TGFont GUI font description; TGFontDialog Font selection dialog; TGFontDialog::FontProp_t ; TGFontPool Font pool; TGFontTypeComboBox Font type combobox widget; TGFrame Base class for simple widgets (button, etc.); TGFrameElement Base class used in GUI containers; TGFrameElementPack Class used in TGPack.; TGGC Graphics context; TGGCPool Graphics context pool; TGGotoDialog Goto line dialog used by TGTextEdit widget; TGGroupFrame A composite frame with border and title; TGHButtonGroup A button group with one horizontal row; TGHProgressBar Horizontal progress bar widget; TGHScrollBar Horizontal scrollbar widget; TGHSlider Horizontal slider widget; TGHSplitter A horizontal frame splitter; TGHeaderFrame Header frame with buttons and splitters; TGHorizontal3DLine A horizontal 3D separator line; TGHorizontalFrame Composite frame with horizontal child layout; TGHorizontalLayout Horizontal layout manager; TGHotString Graphics string with hot character; TGHtml HTML widget; TGHtmlBrowser very simple html browser; TGIcon Icon GUI class; TGIconLBEntry Icon + text listbox entry; TGIdleHandler Idle event handler; TGImageMap Clickable image (like MAP in HTML); TGInputDialog Simple input dialog; TGInsets Inset (left, right, top, bottom); TGItemContext Context menu for TTVLVEntry; TGL5DDataSet Class to read data from TTree and create TGL5DPainter.; TGL5DDataSetEditor GUI for editing OpenGL 5D Viewer attributes; TGLAdapter Allow plot-painters to be used for gl-inpad and gl-viewer.; TGLAnnotation GL-annotation.; TGLAutoRotator Automatic, timer-based, rotation of GL-viewer's camera.; TGLAxis a GL Axis; TGLAxisPainter GL axis painter.; TGLAxisPainterBox Painter of GL axes for a 3D box.; TGLBContainer Listbox container; TGLBEntry Basic listbox entry; TGLBoundingBox a 3D orientated bounding box; TGLBoxCut Cuts away part ",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:79198,Usability,Simpl,Simple,79198," File browser.; TGFileContainer Container containing file system objects; TGFileDialog File selection dialog; TGFileInfo ; TGFileItem Class representing file system object; TGFont GUI font description; TGFontDialog Font selection dialog; TGFontDialog::FontProp_t ; TGFontPool Font pool; TGFontTypeComboBox Font type combobox widget; TGFrame Base class for simple widgets (button, etc.); TGFrameElement Base class used in GUI containers; TGFrameElementPack Class used in TGPack.; TGGC Graphics context; TGGCPool Graphics context pool; TGGotoDialog Goto line dialog used by TGTextEdit widget; TGGroupFrame A composite frame with border and title; TGHButtonGroup A button group with one horizontal row; TGHProgressBar Horizontal progress bar widget; TGHScrollBar Horizontal scrollbar widget; TGHSlider Horizontal slider widget; TGHSplitter A horizontal frame splitter; TGHeaderFrame Header frame with buttons and splitters; TGHorizontal3DLine A horizontal 3D separator line; TGHorizontalFrame Composite frame with horizontal child layout; TGHorizontalLayout Horizontal layout manager; TGHotString Graphics string with hot character; TGHtml HTML widget; TGHtmlBrowser very simple html browser; TGIcon Icon GUI class; TGIconLBEntry Icon + text listbox entry; TGIdleHandler Idle event handler; TGImageMap Clickable image (like MAP in HTML); TGInputDialog Simple input dialog; TGInsets Inset (left, right, top, bottom); TGItemContext Context menu for TTVLVEntry; TGL5DDataSet Class to read data from TTree and create TGL5DPainter.; TGL5DDataSetEditor GUI for editing OpenGL 5D Viewer attributes; TGLAdapter Allow plot-painters to be used for gl-inpad and gl-viewer.; TGLAnnotation GL-annotation.; TGLAutoRotator Automatic, timer-based, rotation of GL-viewer's camera.; TGLAxis a GL Axis; TGLAxisPainter GL axis painter.; TGLAxisPainterBox Painter of GL axes for a 3D box.; TGLBContainer Listbox container; TGLBEntry Basic listbox entry; TGLBoundingBox a 3D orientated bounding box; TGLBoxCut Cuts away part ",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:86599,Usability,Progress bar,Progress bar,86599,"metry MDI Geometry; TGMdiHorizontalWinResizer Horizontal Window Resizer; TGMdiMainFrame MDI main frame; TGMdiMenuBar MDI menu bar; TGMdiTitleBar MDI Title Bar; TGMdiTitleIcon MDI Title Icon; TGMdiVerticalWinResizer Vertical Window Resizer; TGMdiWinResizer Window Resizer; TGMenuBar Menu bar class; TGMenuEntry Menu entry class; TGMenuTitle Menu title class; TGMimeTypes Pool of mime type objects; TGMsgBox A message dialog box; TGNumberEntry Entry field widget for several numeric formats; TGNumberEntryField A text entry field used by a TGNumberEntry; TGNumberEntryLayout Layout manager for number entry widget; TGNumberFormat Class defining namespace for several enums used by TGNumberEntry; TGObject ROOT GUI base class; TGPack Horizontal or vertical stack of frames.; TGPasswdDialog Dialog for entering passwords; TGPicture Pictures and icons used by the GUI classes; TGPictureButton A picture button widget; TGPicturePool Picture and icon cache; TGPopupMenu Popup menu; TGPosition Position object (x and y are Int_t); TGPrintDialog Print dialog used by TGTextEdit widget; TGProgressBar Progress bar abstract base class; TGQt Interface to Qt GUI; TGRadioButton A radio button widget; TGRecorder GUI class of the event recorder.; TGRectMap Rectangle used in TMap; TGRectangle Rectangle object; TGRedirectOutputGuard Exception safe output redirection; TGRegion Describes a region; TGRegionWithId Region with id, tooltip text and popup menu; TGResourcePool Graphics resource pool; TGRowLayout Row layout manager; TGScrollBar Scrollbar widget; TGScrollBarElement Scrollbar element (head, tail, slider); TGSearchDialog Text search dialog used by TGTextEdit widget; TGSearchType ; TGSelectBox TreeView dialog widget; TGSelectedPicture Selected looking picture; TGShapedFrame Shaped composite frame; TGShutter Shutter widget; TGShutterItem Shutter widget item; TGSimpleTable A simple table that owns it's interface.; TGSimpleTableInterface Interface to data in a 2D array of Double_t; TGSlider Slider wid",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:87382,Usability,simpl,simple,87382,"t Layout manager for number entry widget; TGNumberFormat Class defining namespace for several enums used by TGNumberEntry; TGObject ROOT GUI base class; TGPack Horizontal or vertical stack of frames.; TGPasswdDialog Dialog for entering passwords; TGPicture Pictures and icons used by the GUI classes; TGPictureButton A picture button widget; TGPicturePool Picture and icon cache; TGPopupMenu Popup menu; TGPosition Position object (x and y are Int_t); TGPrintDialog Print dialog used by TGTextEdit widget; TGProgressBar Progress bar abstract base class; TGQt Interface to Qt GUI; TGRadioButton A radio button widget; TGRecorder GUI class of the event recorder.; TGRectMap Rectangle used in TMap; TGRectangle Rectangle object; TGRedirectOutputGuard Exception safe output redirection; TGRegion Describes a region; TGRegionWithId Region with id, tooltip text and popup menu; TGResourcePool Graphics resource pool; TGRowLayout Row layout manager; TGScrollBar Scrollbar widget; TGScrollBarElement Scrollbar element (head, tail, slider); TGSearchDialog Text search dialog used by TGTextEdit widget; TGSearchType ; TGSelectBox TreeView dialog widget; TGSelectedPicture Selected looking picture; TGShapedFrame Shaped composite frame; TGShutter Shutter widget; TGShutterItem Shutter widget item; TGSimpleTable A simple table that owns it's interface.; TGSimpleTableInterface Interface to data in a 2D array of Double_t; TGSlider Slider widget abstract base class; TGSpeedo Base class for analog meter widget; TGSplitButton a split button widget; TGSplitFrame Splittable composite frame; TGSplitTool Split frame tool utility; TGSplitter A frame splitter abstract base class; TGStatusBar Status bar widget; TGString Graphics string; TGTRA GTRA shape; TGTab Tab widget; TGTabElement Little tab on tab widget; TGTabLayout Layout manager for TGTab widget; TGTable A table used to visualize data from diffent sources.; TGTableCell A single cell in a TGTable.; TGTableFrame A frame used internally by TGTable.; TGTabl",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:88442,Usability,Simpl,Simple,88442,"et abstract base class; TGSpeedo Base class for analog meter widget; TGSplitButton a split button widget; TGSplitFrame Splittable composite frame; TGSplitTool Split frame tool utility; TGSplitter A frame splitter abstract base class; TGStatusBar Status bar widget; TGString Graphics string; TGTRA GTRA shape; TGTab Tab widget; TGTabElement Little tab on tab widget; TGTabLayout Layout manager for TGTab widget; TGTable A table used to visualize data from diffent sources.; TGTableCell A single cell in a TGTable.; TGTableFrame A frame used internally by TGTable.; TGTableHeader Header for use in TGTable.; TGTableHeaderFrame A frame used internally by TGTable.; TGTableLayout Table layout manager; TGTableLayoutHints Class describing GUI table layout hints; TGText Text used by TGTextEdit; TGTextBuffer Text buffer used by widgets like TGTextEntry, etc.; TGTextButton A text button widget; TGTextEdit Text edit widget; TGTextEditor Simple text editor using TGTextEdit widget; TGTextEntry The TGTextEntry widget is a simple line editor for inputting text; TGTextLBEntry Text listbox entry; TGTextLayout Keep track of string measurement information.; TGTextLine Line in TGText; TGTextView Non-editable text viewer widget; TGTextViewStreamBuf Specialization of std::streambuf; TGTextViewostream Specialization of TGTextView and std::ostream; TGTileLayout Tile layout manager; TGToolBar A bar containing picture buttons; TGToolTip One or multiple lines help text; TGTransientFrame Frame for dialog (transient) windows; TGTreeLBEntry TGFSComboBox entry; TGTreeTable A TGTable that owns it's TTreeTableIngeface.; TGTripleHSlider Horizontal triple slider widget; TGTripleVSlider Vertical triple slider widget; TGUndockedFrame Undocked frame; TGUnknownWindowHandler Abstract event handler for unknown windows; TGVButtonGroup A button group with one vertical column; TGVFileSplitter A vertical file frame splitter; TGVProgressBar Vertical progress bar widget; TGVScrollBar Vertical scrollbar widget; TGVSlider",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:88526,Usability,simpl,simple,88526,"et abstract base class; TGSpeedo Base class for analog meter widget; TGSplitButton a split button widget; TGSplitFrame Splittable composite frame; TGSplitTool Split frame tool utility; TGSplitter A frame splitter abstract base class; TGStatusBar Status bar widget; TGString Graphics string; TGTRA GTRA shape; TGTab Tab widget; TGTabElement Little tab on tab widget; TGTabLayout Layout manager for TGTab widget; TGTable A table used to visualize data from diffent sources.; TGTableCell A single cell in a TGTable.; TGTableFrame A frame used internally by TGTable.; TGTableHeader Header for use in TGTable.; TGTableHeaderFrame A frame used internally by TGTable.; TGTableLayout Table layout manager; TGTableLayoutHints Class describing GUI table layout hints; TGText Text used by TGTextEdit; TGTextBuffer Text buffer used by widgets like TGTextEntry, etc.; TGTextButton A text button widget; TGTextEdit Text edit widget; TGTextEditor Simple text editor using TGTextEdit widget; TGTextEntry The TGTextEntry widget is a simple line editor for inputting text; TGTextLBEntry Text listbox entry; TGTextLayout Keep track of string measurement information.; TGTextLine Line in TGText; TGTextView Non-editable text viewer widget; TGTextViewStreamBuf Specialization of std::streambuf; TGTextViewostream Specialization of TGTextView and std::ostream; TGTileLayout Tile layout manager; TGToolBar A bar containing picture buttons; TGToolTip One or multiple lines help text; TGTransientFrame Frame for dialog (transient) windows; TGTreeLBEntry TGFSComboBox entry; TGTreeTable A TGTable that owns it's TTreeTableIngeface.; TGTripleHSlider Horizontal triple slider widget; TGTripleVSlider Vertical triple slider widget; TGUndockedFrame Undocked frame; TGUnknownWindowHandler Abstract event handler for unknown windows; TGVButtonGroup A button group with one vertical column; TGVFileSplitter A vertical file frame splitter; TGVProgressBar Vertical progress bar widget; TGVScrollBar Vertical scrollbar widget; TGVSlider",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:89229,Usability,Undo,Undocked,89229,,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:89440,Usability,progress bar,progress bar,89440,,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:90620,Usability,Simpl,Simple,90620,"VerticalFrame Composite frame with vertical child layout; TGVerticalLayout Vertical layout manager; TGView View widget base class; TGViewFrame Frame containing the actual text; TGViewPort Viewport through which to look at a container frame; TGWidget Widget base class; TGWindow GUI Window base class; TGX11 Interface to X11; TGX11TTF Interface to X11 + TTF font handling; TGXYLayout X / Y - layout manager; TGXYLayoutHints Hits for the X / Y - layout manager; TGaxis Graphics axis; TGedEditor ROOT graphics editor; TGedFrame base editor's frame; TGedMarkerPopup marker select popup; TGedMarkerSelect Marker selection button; TGedNameFrame frame showing the selected object name; TGedPatternFrame pattern frame; TGedPatternPopup Color selector popup; TGedPatternSelect pattern selection check-button; TGedPatternSelector select pattern frame; TGedPopup popup window; TGedSelect selection check-button; TGenCollectionProxy ; TGenCollectionProxy::Method ; TGenCollectionProxy::Value ; TGenPhaseSpace Simple Phase Space Generator; TGenerator Event generator interface abstract baseclass; TGenericTable Generic array of C-structure (a'la STL vector); TGenericTable::iterator ; TGeoArb8 arbitrary trapezoid with 8 vertices; TGeoAtt class for visibility, activity and optimization attributes for volumes/nodes; TGeoBBox box primitive; TGeoBBoxEditor TGeoBBox editor; TGeoBatemanSol Solution for the Bateman equation; TGeoBoolNode a boolean node; TGeoBranchArray ; TGeoBuilder geometry builder singleton; TGeoCacheState class storing the cache state; TGeoChecker a simple geometry checker; TGeoCombiTrans rotation + translation; TGeoCombiTransEditor TGeoCombiTrans editor; TGeoCompositeShape boolean composite shape; TGeoCone conical tube class; TGeoConeEditor TGeoCone editor; TGeoConeSeg conical tube segment class ; TGeoConeSegEditor TGeoConeSeg editor; TGeoCtub cut tube segment class ; TGeoCtubEditor TGeoCtub editor; TGeoDecayChannel Decay channel for Elements; TGeoElemIter Iterator for radionuclide ch",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:91180,Usability,simpl,simple,91180,"calFrame Composite frame with vertical child layout; TGVerticalLayout Vertical layout manager; TGView View widget base class; TGViewFrame Frame containing the actual text; TGViewPort Viewport through which to look at a container frame; TGWidget Widget base class; TGWindow GUI Window base class; TGX11 Interface to X11; TGX11TTF Interface to X11 + TTF font handling; TGXYLayout X / Y - layout manager; TGXYLayoutHints Hits for the X / Y - layout manager; TGaxis Graphics axis; TGedEditor ROOT graphics editor; TGedFrame base editor's frame; TGedMarkerPopup marker select popup; TGedMarkerSelect Marker selection button; TGedNameFrame frame showing the selected object name; TGedPatternFrame pattern frame; TGedPatternPopup Color selector popup; TGedPatternSelect pattern selection check-button; TGedPatternSelector select pattern frame; TGedPopup popup window; TGedSelect selection check-button; TGenCollectionProxy ; TGenCollectionProxy::Method ; TGenCollectionProxy::Value ; TGenPhaseSpace Simple Phase Space Generator; TGenerator Event generator interface abstract baseclass; TGenericTable Generic array of C-structure (a'la STL vector); TGenericTable::iterator ; TGeoArb8 arbitrary trapezoid with 8 vertices; TGeoAtt class for visibility, activity and optimization attributes for volumes/nodes; TGeoBBox box primitive; TGeoBBoxEditor TGeoBBox editor; TGeoBatemanSol Solution for the Bateman equation; TGeoBoolNode a boolean node; TGeoBranchArray ; TGeoBuilder geometry builder singleton; TGeoCacheState class storing the cache state; TGeoChecker a simple geometry checker; TGeoCombiTrans rotation + translation; TGeoCombiTransEditor TGeoCombiTrans editor; TGeoCompositeShape boolean composite shape; TGeoCone conical tube class; TGeoConeEditor TGeoCone editor; TGeoConeSeg conical tube segment class ; TGeoConeSegEditor TGeoConeSeg editor; TGeoCtub cut tube segment class ; TGeoCtubEditor TGeoCtub editor; TGeoDecayChannel Decay channel for Elements; TGeoElemIter Iterator for radionuclide chains.",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:104058,Usability,simpl,simple,104058,,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:106436,Usability,simpl,simple,106436,"terface; TMVA::Interval Interval definition, continous and discrete; TMVA::KDEKernel Kernel density estimator for PDF smoothing; TMVA::LogInterval Interval definition, continous and discrete; TMVA::MCFitter Fitter using Monte Carlo sampling of parameters ; TMVA::MethodANNBase Base class for TMVA ANNs; TMVA::MethodBDT Analysis of Boosted Decision Trees; TMVA::MethodBase Virtual base class for all TMVA method; TMVA::MethodBayesClassifier Friedman's BayesClassifier method ; TMVA::MethodBoost ; TMVA::MethodCFMlpANN Interface for Clermond-Ferrand artificial neural network; TMVA::MethodCFMlpANN_Utils Implementation of Clermond-Ferrand artificial neural network; TMVA::MethodCategory ; TMVA::MethodCompositeBase ; TMVA::MethodCuts Multivariate optimisation of signal efficiency; TMVA::MethodDT Analysis of Decision Trees ; TMVA::MethodFDA Function Discriminant Analysis; TMVA::MethodFisher Analysis of Fisher discriminant (Fisher or Mahalanobis approach) ; TMVA::MethodHMatrix H-Matrix method, a simple comparison of chi-squared estimators for signal and background; TMVA::MethodKNN k Nearest Neighbour classifier; TMVA::MethodLD Linear discriminant analysis; TMVA::MethodLikelihood Likelihood analysis (""non-parametric approach"") ; TMVA::MethodMLP Multi-layer perceptron implemented specifically for TMVA; TMVA::MethodPDEFoam Multi-dimensional probability density estimator using TFoam (PDE-Foam); TMVA::MethodPDERS Multi-dimensional probability density estimator range search (PDERS) method; TMVA::MethodRuleFit Friedman's RuleFit method; TMVA::MethodSVM Support Vector Machine; TMVA::MethodTMlpANN Implementation of interface for TMultiLayerPerceptron; TMVA::MinuitFitter Fitter using a Genetic Algorithm; TMVA::MinuitWrapper Wrapper around TMinuit; TMVA::MisClassificationError Implementation of the MisClassificationError as separation criterion; TMVA::MsgLogger Ostringstream derivative to redirect and format logging output; TMVA::Node Node for the BinarySearch or Decision Trees; TMVA::Optimi",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:117040,Usability,simpl,simple,117040,"ection of TGraph objects; TMultiLayerPerceptron a Neural Network; TMutex Mutex lock class; TMutexImp Mutex lock implementation ABC; TMySQLResult MySQL query result; TMySQLRow One row of MySQL query result; TMySQLServer Connection to MySQL server; TMySQLStatement SQL statement class for MySQL DB; TNDArray Base for n-dimensional array; TNDArrayRef<Long64_t> subdimension of a TNDArray; TNDArrayRef<ULong64_t> subdimension of a TNDArray; TNDArrayRef<char> subdimension of a TNDArray; TNDArrayRef<double> subdimension of a TNDArray; TNDArrayRef<float> subdimension of a TNDArray; TNDArrayRef<int> subdimension of a TNDArray; TNDArrayRef<long> subdimension of a TNDArray; TNDArrayRef<short> subdimension of a TNDArray; TNDArrayRef<unsigned int> subdimension of a TNDArray; TNDArrayRef<unsigned long> subdimension of a TNDArray; TNDArrayRef<unsigned short> subdimension of a TNDArray; TNDArrayT<Long64_t> N-dimensional array; TNDArrayT<ULong64_t> N-dimensional array; TNDArrayT<char> N-dimensional array; TNDArrayT<double> N-dimensional array; TNDArrayT<float> N-dimensional array; TNDArrayT<int> N-dimensional array; TNDArrayT<long> N-dimensional array; TNDArrayT<short> N-dimensional array; TNDArrayT<unsigned int> N-dimensional array; TNDArrayT<unsigned long> N-dimensional array; TNDArrayT<unsigned short> N-dimensional array; TNamed The basis for a named object (name, title); TNetFile A ROOT file that reads/writes via a rootd server; TNetFileStager Implementation for a 'rootd' backend; TNetSystem Directory handler for NetSystem; TNetXNGFile ROOT class definition; TNetXNGFileStager ! Interface to a 'XRD' staging; TNetXNGSystem ROOT class definition; TNeuron Neuron for MultiLayerPerceptrons; TNewChainDlg New chain dialog; TNewQueryDlg New query dialog; TNode Description of parameters to position a 3-D geometry object; TNodeDiv Description of parameters to divide a 3-D geometry object; TNonSplitBrowsable Helper object to browse unsplit objects; TNtuple A simple tree with branches of floats.",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:117089,Usability,simpl,simple,117089,"nsional array; TNDArrayT<float> N-dimensional array; TNDArrayT<int> N-dimensional array; TNDArrayT<long> N-dimensional array; TNDArrayT<short> N-dimensional array; TNDArrayT<unsigned int> N-dimensional array; TNDArrayT<unsigned long> N-dimensional array; TNDArrayT<unsigned short> N-dimensional array; TNamed The basis for a named object (name, title); TNetFile A ROOT file that reads/writes via a rootd server; TNetFileStager Implementation for a 'rootd' backend; TNetSystem Directory handler for NetSystem; TNetXNGFile ROOT class definition; TNetXNGFileStager ! Interface to a 'XRD' staging; TNetXNGSystem ROOT class definition; TNeuron Neuron for MultiLayerPerceptrons; TNewChainDlg New chain dialog; TNewQueryDlg New query dialog; TNode Description of parameters to position a 3-D geometry object; TNodeDiv Description of parameters to divide a 3-D geometry object; TNonSplitBrowsable Helper object to browse unsplit objects; TNtuple A simple tree with branches of floats.; TNtupleD A simple tree with branches of floats.; TObjArray An array of objects; TObjArrayIter Object array iterator; TObjString Collectable string class; TObject Basic ROOT object; TObjectRefSpy Spy object reference for deletion; TObjectSet TDataSet wrapper for TObject class objects; TObjectSpy Spy object pointer for deletion; TObjectTable Table of active objects; TOrdCollection An ordered collection; TOrdCollectionIter Ordered collection iterator; TOutputListSelectorDataMap Converter from output list to TSelector data members; TPARA PARA shape; TPBHandleDSType Streamable PBHandleDSType; TPBHistType Streamable PBHistType; TPBReadType Streamable PBReadType; TPCON PCON shape; TPDF PDF driver; TPGON PGON shape; TPMERegexp Wrapper for Perl-like regular expression matching.; TPRegexp Perl Compatible Regular Expression Class; TPServerSocket Parallel server socket; TPSocket Parallel client socket; TPackageDescription Package description; TPacketizer Generate work packets for parallel processing; TPacketizerAdaptive",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:124868,Usability,undo,undo,124868,and worker information; TProofOutputFile Wrapper class to steer the merging of files produced on workers; TProofOutputList Output list specific TList derivation; TProofPerfAnalysis Set of tools to analyse the performance tree; TProofPlayer Basic PROOF player; TProofPlayerLite PROOF player running in PROOF-Lite; TProofPlayerLocal PROOF player running on client; TProofPlayerRemote PROOF player running on master server; TProofPlayerSlave PROOF player running on slave server; TProofPlayerSuperMaster PROOF player running on super master; TProofProgressDialog PROOF progress dialog; TProofProgressInfo Progress information; TProofProgressLog Class implementing a log graphic box; TProofProgressMemoryPlot PROOF progress memory plots; TProofProgressStatus Proof progress status class; TProofQueryResult Class describing a PROOF query; TProofResources Abstract class describing PROOF resources; TProofResourcesStatic Class to handle PROOF static config; TProofServ PROOF Server Application Interface; TProofServLite PROOF-Lite Server Application Interface; TProofSuperMaster PROOF control class for making submasters; TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t> Class describing a vector container; TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t> Class describing a vector container; TPyDispatcher Python dispatcher class; TPyMultiGenFunction Python for Math::IMultiGenFunction equivalent; TPyMultiGradFunction Python for Math::IMultiGradFunction equivalent; TPyReturn Python morphing return object; TPySelector Python equivalent base class for PROOF; TPythia8 Interface class of Pythia8; TPythia8Decayer Particle Decayer using Pythia8; TPython Access to the python interpreter; TQApplication creates ROOT environment with the Qt windowing system; TQCanvasImp ABC describing Qt GUI independent main window; TQCanvasMenu interface to Qt based context sensitive popup menus; TQClass Class with connections; TQCommand encapsulates the information for undo/redo a single action.,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:125411,Usability,undo,undo,125411,"Command encapsulates the information for undo/redo a single action.; TQConnection Internal class used in the object communication mechanism; TQMimeTypes Pool of mime type objects; TQObjSender Used to ""delegate"" TQObject functionality; TQObject Base class for object communication mechanism; TQRootApplication creates Qt environment interface with the ROOT windowing system; TQRootCanvas interface to Qt eventloop to handle user input; TQRootDialog prompt for the arguments of an object's member function; TQRootGuiFactory Qt ROOT Gui factory; TQUndoManager recorder of operations for undo and redo; TQpDataBase Qp Base Data class; TQpDataDens Qp Data class for Dens formulation; TQpDataSparse Qp Data class for Sparse formulation; TQpLinSolverBase Qp linear solver base class; TQpLinSolverDens Qp linear solver class for Dens formulation; TQpLinSolverSparse Qp linear solver class for Sparse formulation; TQpProbBase Qp problem formulation base class; TQpProbDens Qp dens problem formulation class; TQpProbSparse Qp sparse problem formulation class; TQpResidual Qp Residual class; TQpSolverBase Qp Solver class; TQpVar Qp Variables class; TQtApplication Instantiate the Qt system within ROOT environment; TQtBrush create QBrush object based on the ROOT ""fill"" attributes ; TQtClientFilter Map Qt and ROOT event; TQtClientWidget QFrame implementation backing ROOT TGWindow objects; TQtMarker Convert ROOT TMarker objects on to QPointArray; TQtPadFont < Create Qt QFont object based on ROOT TAttText attributes; TQtRootSlot ; TQtTimer QTimer to awake the ROOT event loop from Qt event loop; TQtWidget QWidget to back ROOT TCanvas (Can be used with Qt designer); TQuaternion a quaternion class; TQueryDescription Query description; TQueryResult Class describing a query; TQueryResultManager PROOF query result manager; TROOT Top level (or root) structure for all classes; TRWLock Reader/writer lock; TRadialGradient Radial gradient fill.; TRandom Simple Random number generator (periodicity = 10**9); TRa",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:126771,Usability,Simpl,Simple,126771,"ation Instantiate the Qt system within ROOT environment; TQtBrush create QBrush object based on the ROOT ""fill"" attributes ; TQtClientFilter Map Qt and ROOT event; TQtClientWidget QFrame implementation backing ROOT TGWindow objects; TQtMarker Convert ROOT TMarker objects on to QPointArray; TQtPadFont < Create Qt QFont object based on ROOT TAttText attributes; TQtRootSlot ; TQtTimer QTimer to awake the ROOT event loop from Qt event loop; TQtWidget QWidget to back ROOT TCanvas (Can be used with Qt designer); TQuaternion a quaternion class; TQueryDescription Query description; TQueryResult Class describing a query; TQueryResultManager PROOF query result manager; TROOT Top level (or root) structure for all classes; TRWLock Reader/writer lock; TRadialGradient Radial gradient fill.; TRandom Simple Random number generator (periodicity = 10**9); TRandom1 Ranlux Random number generators with periodicity > 10**14; TRandom2 Random number generator with periodicity of 10**26; TRandom3 Random number generator: Mersenne Twister; TRealData Description of persistent data members; TRecCmdEvent Class stores information about 1 commandline event (= 1 command typed by user in commandline); TRecEvent Abstract class. Defines basic interface for storing information about ROOT events; TRecExtraEvent Class stores information about extra events; TRecGuiEvent Class stores information about 1 GUI event in ROOT; TRecWinPair Class used for storing of window IDs mapping. Needed for replaying events.; TRecorder Class provides direct recorder/replayer interface for a user.; TRecorderInactive Represents state of TRecorder after its creation; TRecorderPaused Represents state of TRecorder when paused; TRecorderRecording Represents state of TRecorder when recording events; TRecorderReplaying Represents state of TRecorder when replaying; TRecorderState Abstract class that defines interface for a state of recorder; TRedirectOutputGuard Exception safe output redirection; TRef Persistent Reference link to ",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:127662,Usability,pause,paused,127662,,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:133144,Usability,feedback,feedback,133144,"ctrum2Fit Spectrum2 Fitter using algorithm without matrix inversion and conjugate gradient method for symmetrical matrices (Stiefel-Hestens method); TSpectrum2Painter TSpectrum 3d graphics package; TSpectrum2Transform Spectrum2 Transformer, it calculates classic orthogonal 2D transforms; TSpectrum3 Peak Finder, Background estimator, Markov smoothing and Deconvolution for 3-D histograms; TSpectrumFit Spectrum Fitter using algorithm without matrix inversion and conjugate gradient method for symmetrical matrices (Stiefel-Hestens method); TSpectrumTransform Spectrum Transformer, it calculates classic orthogonal 1D transforms; TSpider Helper class to draw spider; TSpiderEditor GUI for editing the spider plot attributes.; TSpline Spline base class; TSpline3 Class to create third natural splines; TSpline5 Class to create quintic natural splines; TSplinePoly Spline polynomial terms; TSplinePoly3 Third spline polynomial terms; TSplinePoly5 Quintic spline polynomial terms; TStatistic Named statistical variable; TStatsFeedback Present PROOF query feedback; TStatus Status class; TStdExceptionHandler C++ exception handler; TStopwatch A stopwatch which times real and cpu time; TStorage Storage manager class; TStreamerArtificial StreamerElement injected by a TSchemaRule. Transient only to preverse forward compatibility.; TStreamerBase Streamer element of type base class; TStreamerBasicPointer Streamer element for a pointer to a basic type; TStreamerBasicType Streamer element for a basic type; TStreamerElement Base class for one element (data member) to be Streamed; TStreamerInfo Streamer information for one class version; TStreamerInfoActions ; TStreamerInfoActions::TActionSequence ; TStreamerInfoActions::TConfiguration ; TStreamerInfoActions::TConfiguredAction A configured action; TStreamerLoop Streamer element for a pointer to an array of objects; TStreamerObject Streamer element of type object; TStreamerObjectAny Streamer element of type object other than TObject; TStreamerObje",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:135007,Usability,simpl,simple,135007,"element of type STL container; TStreamerSTLstring Streamer element of type C++ string; TStreamerString Streamer element of type TString; TString Basic string class; TStringLong Long string class (more than 255 chars); TStringToken String tokenizer using PCRE for finding next tokens.; TStructNode Node with information about class; TStructNodeEditor GUI fo editing TStructNode; TStructNodeProperty Class with nodes color property; TStructViewer A 3D struct viewer; TStructViewerGUI A GUI fo 3D struct viewer ; TStyle A collection of all graphics attributes; TStyleDialog Dialog box used by the TStyleManager class; TStyleManager Graphical User Interface for managing styles; TStylePreview Preview window used by the TStyleManager class; TSubString ; TSynapse simple weighted bidirectionnal connection between 2 neurons; TSysEvtHandler ABC for handling system events; TSystem ABC defining a generic interface to the OS; TSystemDirectory A system directory; TSystemFile A system file; TTF Interface to TTF font handling; TTRAP TRAP shape; TTRD1 TRD1 shape; TTRD2 TRD2 shape; TTUBE TUBE shape; TTUBS TUBS shape; TTVLVContainer A dragging-capable LVContainer; TTVLVEntry Item that goes into the tree list view widget; TTVRecord A draw record for TTreeViewer; TTVSession A tree viewer session; TTabCom Perform command line completion when hitting <TAB>; TTable vector of the C structures; TTable3Points A 3-D Points; TTable::iterator ; TTableDescriptor descrpitor defining the internal layout of TTable objects; TTableIter Iterator over ""sorted"" TTable objects; TTableMap ""Map"" array for TTable object; TTablePadView3D ; TTablePoints Defines the TTable as an element of ""event"" geometry; TTableRange Range used in TGTable.; TTableSorter Is an ""observer"" class to sort the TTable objects; TTask Base class for tasks; TTeXDump Tex driver; TText Text; TTextEditor text editor; TThread Thread class; TThreadFactory Thread factory ABC; TThreadImp ThreadImp class; TTime Basic time type with milli second precis",MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ClassIndex.html:136946,Usability,Simpl,Simple,136946, Tex driver; TText Text; TTextEditor text editor; TThread Thread class; TThreadFactory Thread factory ABC; TThreadImp ThreadImp class; TTime Basic time type with milli second precision; TTimeStamp Encapsulates seconds and ns since EPOCH; TTimer Handle timer event; TToggle Facility for toggling datamembers on/off; TToggleGroup Group of contex-menu toggle objects; TTree Tree descriptor (the main ROOT I/O class); TTreeCache Specialization of TFileCacheRead for a TTree; TTreeCacheUnzip Specialization of TTreeCache for parallel unzipping; TTreeCloner helper used for the fast cloning of TTrees.; TTreeDrawArgsParser Helper class to parse the argument to TTree::Draw; TTreeFormula The Tree formula; TTreeFormulaManager A class coordinating several TTreeFormula objects.; TTreeFriendLeafIter Linked list iterator; TTreeIndex A Tree Index with majorname and minorname.; TTreeInput Simple input dialog; TTreePerfStats TTree I/O performance measurement; TTreePlayer Manager class to play with TTrees; TTreeResult TTree query result; TTreeRow One row of an TTree query result; TTreeSQL TTree Implementation read and write to a SQL database.; TTreeTableInterface Interface to data in a TTree; TTreeViewer A GUI oriented tree viewer; TUDPSocket This class implements UDP client sockets; TUUID Universally Unique IDentifier; TUnfold Unfolding with support for L-curve analysis; TUnfoldBinning Complex binning schemes for TUnfoldDensity; TUnfoldDensity Unfolding with densisty regularisation; TUnfoldSys Unfolding with support for systematic error propagation; TUnixSystem Interface to Unix OS services; TUnuran ; TUnuranBaseDist Base class for Unuran distribution wrappers; TUnuranContDist Wrapper class for one dimensional continuous distribution; TUnuranDiscrDist Wrapper class for one dimensional discrete distribution; TUnuranEmpDist Wrapper class for empirical distribution ; TUnuranMultiContDist Wrapper class for multi dimensional continuous distribution; TUnuranSampler ; TUploadDataSetDlg New query d,MatchSource.WIKI,root/html534/ClassIndex.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ClassIndex.html
https://root.cern/root/html534/ColorStruct_t.html:729,Modifiability,Inherit,Inheritance,729,. ColorStruct_t. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » ColorStruct_t. class ColorStruct_t. GuiTypes. Types used by the GUI classes. Function Members (Methods); public:. ColorStruct_t(); ColorStruct_t(const ColorStruct_t&); ~ColorStruct_t(); ColorStruct_t&operator=(const ColorStruct_t&). Data Members; public:. UShort_tfBlueblue component (0..65535); UShort_tfGreengreen component (0..65535); UShort_tfMaskmask telling which color components are valid; ULong_tfPixelcolor pixel value (index in color table); UShort_tfRedred component (0..65535). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation. » Last changed: Tue Sep 8 16:58:26 2015 » Last generated: 2015-09-08 16:58; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ,MatchSource.WIKI,root/html534/ColorStruct_t.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ColorStruct_t.html
https://root.cern/root/html534/ColorStruct_t.html:742,Modifiability,Inherit,Inherited,742,. ColorStruct_t. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » ColorStruct_t. class ColorStruct_t. GuiTypes. Types used by the GUI classes. Function Members (Methods); public:. ColorStruct_t(); ColorStruct_t(const ColorStruct_t&); ~ColorStruct_t(); ColorStruct_t&operator=(const ColorStruct_t&). Data Members; public:. UShort_tfBlueblue component (0..65535); UShort_tfGreengreen component (0..65535); UShort_tfMaskmask telling which color components are valid; ULong_tfPixelcolor pixel value (index in color table); UShort_tfRedred component (0..65535). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation. » Last changed: Tue Sep 8 16:58:26 2015 » Last generated: 2015-09-08 16:58; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ,MatchSource.WIKI,root/html534/ColorStruct_t.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ColorStruct_t.html
https://root.cern/root/html534/CpuInfo_t.html:296,Integrability,interface,interface,296,". CpuInfo_t. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » CpuInfo_t. class CpuInfo_t. TSystem. Abstract base class defining a generic interface to the underlying; Operating System. Function Members (Methods); public:. CpuInfo_t(); CpuInfo_t(const CpuInfo_t&); virtual~CpuInfo_t(); static TClass*Class(); virtual TClass*IsA() const; CpuInfo_t&operator=(const CpuInfo_t&); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). Data Members; public:. Float_tfIdlecpu idle percentage; Float_tfLoad15mcpu load average over 15 m; Float_tfLoad1mcpu load average over 1 m; Float_tfLoad5mcpu load average over 5 m; Float_tfSyscpu sys load in percentage; Float_tfTotalcpu user+sys load in percentage; Float_tfUsercpu user load in percentage. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; CpuInfo_t(); { }. virtual ~CpuInfo_t(); { }. TSystem& operator=(const CpuInfo_t& ). » Author: Fons Rademakers 15/09/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id$ » Last generated: 2015-09-08 16:58; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/CpuInfo_t.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/CpuInfo_t.html
https://root.cern/root/html534/CpuInfo_t.html:990,Modifiability,Inherit,Inheritance,990,". CpuInfo_t. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » CpuInfo_t. class CpuInfo_t. TSystem. Abstract base class defining a generic interface to the underlying; Operating System. Function Members (Methods); public:. CpuInfo_t(); CpuInfo_t(const CpuInfo_t&); virtual~CpuInfo_t(); static TClass*Class(); virtual TClass*IsA() const; CpuInfo_t&operator=(const CpuInfo_t&); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). Data Members; public:. Float_tfIdlecpu idle percentage; Float_tfLoad15mcpu load average over 15 m; Float_tfLoad1mcpu load average over 1 m; Float_tfLoad5mcpu load average over 5 m; Float_tfSyscpu sys load in percentage; Float_tfTotalcpu user+sys load in percentage; Float_tfUsercpu user load in percentage. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; CpuInfo_t(); { }. virtual ~CpuInfo_t(); { }. TSystem& operator=(const CpuInfo_t& ). » Author: Fons Rademakers 15/09/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id$ » Last generated: 2015-09-08 16:58; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/CpuInfo_t.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/CpuInfo_t.html
https://root.cern/root/html534/CpuInfo_t.html:1003,Modifiability,Inherit,Inherited,1003,". CpuInfo_t. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » CpuInfo_t. class CpuInfo_t. TSystem. Abstract base class defining a generic interface to the underlying; Operating System. Function Members (Methods); public:. CpuInfo_t(); CpuInfo_t(const CpuInfo_t&); virtual~CpuInfo_t(); static TClass*Class(); virtual TClass*IsA() const; CpuInfo_t&operator=(const CpuInfo_t&); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). Data Members; public:. Float_tfIdlecpu idle percentage; Float_tfLoad15mcpu load average over 15 m; Float_tfLoad1mcpu load average over 1 m; Float_tfLoad5mcpu load average over 5 m; Float_tfSyscpu sys load in percentage; Float_tfTotalcpu user+sys load in percentage; Float_tfUsercpu user load in percentage. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; CpuInfo_t(); { }. virtual ~CpuInfo_t(); { }. TSystem& operator=(const CpuInfo_t& ). » Author: Fons Rademakers 15/09/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id$ » Last generated: 2015-09-08 16:58; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/CpuInfo_t.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/CpuInfo_t.html
https://root.cern/root/html534/CpuInfo_t.html:744,Performance,load,load,744,". CpuInfo_t. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » CpuInfo_t. class CpuInfo_t. TSystem. Abstract base class defining a generic interface to the underlying; Operating System. Function Members (Methods); public:. CpuInfo_t(); CpuInfo_t(const CpuInfo_t&); virtual~CpuInfo_t(); static TClass*Class(); virtual TClass*IsA() const; CpuInfo_t&operator=(const CpuInfo_t&); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). Data Members; public:. Float_tfIdlecpu idle percentage; Float_tfLoad15mcpu load average over 15 m; Float_tfLoad1mcpu load average over 1 m; Float_tfLoad5mcpu load average over 5 m; Float_tfSyscpu sys load in percentage; Float_tfTotalcpu user+sys load in percentage; Float_tfUsercpu user load in percentage. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; CpuInfo_t(); { }. virtual ~CpuInfo_t(); { }. TSystem& operator=(const CpuInfo_t& ). » Author: Fons Rademakers 15/09/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id$ » Last generated: 2015-09-08 16:58; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/CpuInfo_t.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/CpuInfo_t.html
https://root.cern/root/html534/CpuInfo_t.html:786,Performance,load,load,786,". CpuInfo_t. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » CpuInfo_t. class CpuInfo_t. TSystem. Abstract base class defining a generic interface to the underlying; Operating System. Function Members (Methods); public:. CpuInfo_t(); CpuInfo_t(const CpuInfo_t&); virtual~CpuInfo_t(); static TClass*Class(); virtual TClass*IsA() const; CpuInfo_t&operator=(const CpuInfo_t&); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). Data Members; public:. Float_tfIdlecpu idle percentage; Float_tfLoad15mcpu load average over 15 m; Float_tfLoad1mcpu load average over 1 m; Float_tfLoad5mcpu load average over 5 m; Float_tfSyscpu sys load in percentage; Float_tfTotalcpu user+sys load in percentage; Float_tfUsercpu user load in percentage. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; CpuInfo_t(); { }. virtual ~CpuInfo_t(); { }. TSystem& operator=(const CpuInfo_t& ). » Author: Fons Rademakers 15/09/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id$ » Last generated: 2015-09-08 16:58; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/CpuInfo_t.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/CpuInfo_t.html
https://root.cern/root/html534/CpuInfo_t.html:827,Performance,load,load,827,". CpuInfo_t. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » CpuInfo_t. class CpuInfo_t. TSystem. Abstract base class defining a generic interface to the underlying; Operating System. Function Members (Methods); public:. CpuInfo_t(); CpuInfo_t(const CpuInfo_t&); virtual~CpuInfo_t(); static TClass*Class(); virtual TClass*IsA() const; CpuInfo_t&operator=(const CpuInfo_t&); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). Data Members; public:. Float_tfIdlecpu idle percentage; Float_tfLoad15mcpu load average over 15 m; Float_tfLoad1mcpu load average over 1 m; Float_tfLoad5mcpu load average over 5 m; Float_tfSyscpu sys load in percentage; Float_tfTotalcpu user+sys load in percentage; Float_tfUsercpu user load in percentage. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; CpuInfo_t(); { }. virtual ~CpuInfo_t(); { }. TSystem& operator=(const CpuInfo_t& ). » Author: Fons Rademakers 15/09/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id$ » Last generated: 2015-09-08 16:58; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/CpuInfo_t.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/CpuInfo_t.html
https://root.cern/root/html534/CpuInfo_t.html:869,Performance,load,load,869,". CpuInfo_t. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » CpuInfo_t. class CpuInfo_t. TSystem. Abstract base class defining a generic interface to the underlying; Operating System. Function Members (Methods); public:. CpuInfo_t(); CpuInfo_t(const CpuInfo_t&); virtual~CpuInfo_t(); static TClass*Class(); virtual TClass*IsA() const; CpuInfo_t&operator=(const CpuInfo_t&); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). Data Members; public:. Float_tfIdlecpu idle percentage; Float_tfLoad15mcpu load average over 15 m; Float_tfLoad1mcpu load average over 1 m; Float_tfLoad5mcpu load average over 5 m; Float_tfSyscpu sys load in percentage; Float_tfTotalcpu user+sys load in percentage; Float_tfUsercpu user load in percentage. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; CpuInfo_t(); { }. virtual ~CpuInfo_t(); { }. TSystem& operator=(const CpuInfo_t& ). » Author: Fons Rademakers 15/09/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id$ » Last generated: 2015-09-08 16:58; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/CpuInfo_t.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/CpuInfo_t.html
https://root.cern/root/html534/CpuInfo_t.html:915,Performance,load,load,915,". CpuInfo_t. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » CpuInfo_t. class CpuInfo_t. TSystem. Abstract base class defining a generic interface to the underlying; Operating System. Function Members (Methods); public:. CpuInfo_t(); CpuInfo_t(const CpuInfo_t&); virtual~CpuInfo_t(); static TClass*Class(); virtual TClass*IsA() const; CpuInfo_t&operator=(const CpuInfo_t&); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). Data Members; public:. Float_tfIdlecpu idle percentage; Float_tfLoad15mcpu load average over 15 m; Float_tfLoad1mcpu load average over 1 m; Float_tfLoad5mcpu load average over 5 m; Float_tfSyscpu sys load in percentage; Float_tfTotalcpu user+sys load in percentage; Float_tfUsercpu user load in percentage. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; CpuInfo_t(); { }. virtual ~CpuInfo_t(); { }. TSystem& operator=(const CpuInfo_t& ). » Author: Fons Rademakers 15/09/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id$ » Last generated: 2015-09-08 16:58; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/CpuInfo_t.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/CpuInfo_t.html
https://root.cern/root/html534/CpuInfo_t.html:956,Performance,load,load,956,". CpuInfo_t. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » CpuInfo_t. class CpuInfo_t. TSystem. Abstract base class defining a generic interface to the underlying; Operating System. Function Members (Methods); public:. CpuInfo_t(); CpuInfo_t(const CpuInfo_t&); virtual~CpuInfo_t(); static TClass*Class(); virtual TClass*IsA() const; CpuInfo_t&operator=(const CpuInfo_t&); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). Data Members; public:. Float_tfIdlecpu idle percentage; Float_tfLoad15mcpu load average over 15 m; Float_tfLoad1mcpu load average over 1 m; Float_tfLoad5mcpu load average over 5 m; Float_tfSyscpu sys load in percentage; Float_tfTotalcpu user+sys load in percentage; Float_tfUsercpu user load in percentage. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; CpuInfo_t(); { }. virtual ~CpuInfo_t(); { }. TSystem& operator=(const CpuInfo_t& ). » Author: Fons Rademakers 15/09/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id$ » Last generated: 2015-09-08 16:58; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/CpuInfo_t.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/CpuInfo_t.html
https://root.cern/root/html534/Event_t.html:764,Availability,mask,mask,764,". Event_t. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » Event_t. class Event_t. GuiTypes. Types used by the GUI classes. Function Members (Methods); public:. Event_t(); Event_t(const Event_t&); ~Event_t(); Event_t&operator=(const Event_t&). Data Members; public:. UInt_tfCodekey or button code; Int_tfCountif non-zero, at least this many more exposes; Int_tfFormatNext fields only used by kClientMessageEvent; Handle_tfHandlegeneral resource handle (used for atoms or windows); UInt_tfHeightwidth and height of exposed area; Bool_tfSendEventtrue if event came from SendEvent; UInt_tfStatekey or button mask; Time_tfTimetime event event occured in ms; EGEventTypefTypeof event (see EGEventType); Long_tfUser[5]5 longs can be used by client message events; UInt_tfWidth; Window_tfWindowwindow reported event is relative to; Int_tfX; Int_tfXRoot; Int_tfYpointer x, y coordinates in event window; Int_tfYRootcoordinates relative to root. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation. » Last changed: Tue Sep 8 16:58:27 2015 » Last generated: 2015-09-08 16:58; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/Event_t.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Event_t.html
https://root.cern/root/html534/Event_t.html:901,Integrability,message,message,901,". Event_t. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » Event_t. class Event_t. GuiTypes. Types used by the GUI classes. Function Members (Methods); public:. Event_t(); Event_t(const Event_t&); ~Event_t(); Event_t&operator=(const Event_t&). Data Members; public:. UInt_tfCodekey or button code; Int_tfCountif non-zero, at least this many more exposes; Int_tfFormatNext fields only used by kClientMessageEvent; Handle_tfHandlegeneral resource handle (used for atoms or windows); UInt_tfHeightwidth and height of exposed area; Bool_tfSendEventtrue if event came from SendEvent; UInt_tfStatekey or button mask; Time_tfTimetime event event occured in ms; EGEventTypefTypeof event (see EGEventType); Long_tfUser[5]5 longs can be used by client message events; UInt_tfWidth; Window_tfWindowwindow reported event is relative to; Int_tfX; Int_tfXRoot; Int_tfYpointer x, y coordinates in event window; Int_tfYRootcoordinates relative to root. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation. » Last changed: Tue Sep 8 16:58:27 2015 » Last generated: 2015-09-08 16:58; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/Event_t.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Event_t.html
https://root.cern/root/html534/Event_t.html:1110,Modifiability,Inherit,Inheritance,1110,". Event_t. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » Event_t. class Event_t. GuiTypes. Types used by the GUI classes. Function Members (Methods); public:. Event_t(); Event_t(const Event_t&); ~Event_t(); Event_t&operator=(const Event_t&). Data Members; public:. UInt_tfCodekey or button code; Int_tfCountif non-zero, at least this many more exposes; Int_tfFormatNext fields only used by kClientMessageEvent; Handle_tfHandlegeneral resource handle (used for atoms or windows); UInt_tfHeightwidth and height of exposed area; Bool_tfSendEventtrue if event came from SendEvent; UInt_tfStatekey or button mask; Time_tfTimetime event event occured in ms; EGEventTypefTypeof event (see EGEventType); Long_tfUser[5]5 longs can be used by client message events; UInt_tfWidth; Window_tfWindowwindow reported event is relative to; Int_tfX; Int_tfXRoot; Int_tfYpointer x, y coordinates in event window; Int_tfYRootcoordinates relative to root. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation. » Last changed: Tue Sep 8 16:58:27 2015 » Last generated: 2015-09-08 16:58; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/Event_t.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Event_t.html
https://root.cern/root/html534/Event_t.html:1123,Modifiability,Inherit,Inherited,1123,". Event_t. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » Event_t. class Event_t. GuiTypes. Types used by the GUI classes. Function Members (Methods); public:. Event_t(); Event_t(const Event_t&); ~Event_t(); Event_t&operator=(const Event_t&). Data Members; public:. UInt_tfCodekey or button code; Int_tfCountif non-zero, at least this many more exposes; Int_tfFormatNext fields only used by kClientMessageEvent; Handle_tfHandlegeneral resource handle (used for atoms or windows); UInt_tfHeightwidth and height of exposed area; Bool_tfSendEventtrue if event came from SendEvent; UInt_tfStatekey or button mask; Time_tfTimetime event event occured in ms; EGEventTypefTypeof event (see EGEventType); Long_tfUser[5]5 longs can be used by client message events; UInt_tfWidth; Window_tfWindowwindow reported event is relative to; Int_tfX; Int_tfXRoot; Int_tfYpointer x, y coordinates in event window; Int_tfYRootcoordinates relative to root. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation. » Last changed: Tue Sep 8 16:58:27 2015 » Last generated: 2015-09-08 16:58; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/Event_t.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Event_t.html
https://root.cern/root/html534/Event_t.html:505,Security,expose,exposes,505,". Event_t. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » Event_t. class Event_t. GuiTypes. Types used by the GUI classes. Function Members (Methods); public:. Event_t(); Event_t(const Event_t&); ~Event_t(); Event_t&operator=(const Event_t&). Data Members; public:. UInt_tfCodekey or button code; Int_tfCountif non-zero, at least this many more exposes; Int_tfFormatNext fields only used by kClientMessageEvent; Handle_tfHandlegeneral resource handle (used for atoms or windows); UInt_tfHeightwidth and height of exposed area; Bool_tfSendEventtrue if event came from SendEvent; UInt_tfStatekey or button mask; Time_tfTimetime event event occured in ms; EGEventTypefTypeof event (see EGEventType); Long_tfUser[5]5 longs can be used by client message events; UInt_tfWidth; Window_tfWindowwindow reported event is relative to; Int_tfX; Int_tfXRoot; Int_tfYpointer x, y coordinates in event window; Int_tfYRootcoordinates relative to root. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation. » Last changed: Tue Sep 8 16:58:27 2015 » Last generated: 2015-09-08 16:58; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/Event_t.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Event_t.html
https://root.cern/root/html534/Event_t.html:673,Security,expose,exposed,673,". Event_t. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » Event_t. class Event_t. GuiTypes. Types used by the GUI classes. Function Members (Methods); public:. Event_t(); Event_t(const Event_t&); ~Event_t(); Event_t&operator=(const Event_t&). Data Members; public:. UInt_tfCodekey or button code; Int_tfCountif non-zero, at least this many more exposes; Int_tfFormatNext fields only used by kClientMessageEvent; Handle_tfHandlegeneral resource handle (used for atoms or windows); UInt_tfHeightwidth and height of exposed area; Bool_tfSendEventtrue if event came from SendEvent; UInt_tfStatekey or button mask; Time_tfTimetime event event occured in ms; EGEventTypefTypeof event (see EGEventType); Long_tfUser[5]5 longs can be used by client message events; UInt_tfWidth; Window_tfWindowwindow reported event is relative to; Int_tfX; Int_tfXRoot; Int_tfYpointer x, y coordinates in event window; Int_tfYRootcoordinates relative to root. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation. » Last changed: Tue Sep 8 16:58:27 2015 » Last generated: 2015-09-08 16:58; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/Event_t.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Event_t.html
https://root.cern/root/html534/FileStat_t.html:299,Integrability,interface,interface,299,". FileStat_t. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » FileStat_t. class FileStat_t. TSystem. Abstract base class defining a generic interface to the underlying; Operating System. Function Members (Methods); public:. FileStat_t(); FileStat_t(const FileStat_t&); ~FileStat_t(); FileStat_t&operator=(const FileStat_t&). Data Members; public:. Long_tfDevdevice id; Int_tfGidgroup id of owner; Long_tfInoinode; Bool_tfIsLinksymbolic link; Int_tfModeprotection (combination of EFileModeMask bits); Long_tfMtimemodification date; Long64_tfSizetotal size in bytes; Int_tfUiduser id of owner; TStringfUrlend point url of file. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; FileStat_t(); { }. TSystem& operator=(const FileStat_t& ). » Author: Fons Rademakers 15/09/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id$ » Last generated: 2015-09-08 16:58; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/FileStat_t.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/FileStat_t.html
https://root.cern/root/html534/FileStat_t.html:799,Modifiability,Inherit,Inheritance,799,". FileStat_t. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » FileStat_t. class FileStat_t. TSystem. Abstract base class defining a generic interface to the underlying; Operating System. Function Members (Methods); public:. FileStat_t(); FileStat_t(const FileStat_t&); ~FileStat_t(); FileStat_t&operator=(const FileStat_t&). Data Members; public:. Long_tfDevdevice id; Int_tfGidgroup id of owner; Long_tfInoinode; Bool_tfIsLinksymbolic link; Int_tfModeprotection (combination of EFileModeMask bits); Long_tfMtimemodification date; Long64_tfSizetotal size in bytes; Int_tfUiduser id of owner; TStringfUrlend point url of file. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; FileStat_t(); { }. TSystem& operator=(const FileStat_t& ). » Author: Fons Rademakers 15/09/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id$ » Last generated: 2015-09-08 16:58; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/FileStat_t.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/FileStat_t.html
https://root.cern/root/html534/FileStat_t.html:812,Modifiability,Inherit,Inherited,812,". FileStat_t. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » FileStat_t. class FileStat_t. TSystem. Abstract base class defining a generic interface to the underlying; Operating System. Function Members (Methods); public:. FileStat_t(); FileStat_t(const FileStat_t&); ~FileStat_t(); FileStat_t&operator=(const FileStat_t&). Data Members; public:. Long_tfDevdevice id; Int_tfGidgroup id of owner; Long_tfInoinode; Bool_tfIsLinksymbolic link; Int_tfModeprotection (combination of EFileModeMask bits); Long_tfMtimemodification date; Long64_tfSizetotal size in bytes; Int_tfUiduser id of owner; TStringfUrlend point url of file. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; FileStat_t(); { }. TSystem& operator=(const FileStat_t& ). » Author: Fons Rademakers 15/09/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id$ » Last generated: 2015-09-08 16:58; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/FileStat_t.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/FileStat_t.html
https://root.cern/root/html534/FontAttributes_t.html:920,Modifiability,Inherit,Inheritance,920,". FontAttributes_t. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » GUI; » GUI; » FontAttributes_t. class FontAttributes_t. TGFont and TGFontPool. Encapsulate fonts used in the GUI system.; TGFontPool provides a pool of fonts. Function Members (Methods); public:. FontAttributes_t(); FontAttributes_t(const FontAttributes_t& f); ~FontAttributes_t(); FontAttributes_t&operator=(const FontAttributes_t& f). Data Members; public:. const char*fFamilyFont family. The most important field.; Int_tfOverstrikeNon-zero for overstrike font.; Int_tfPointsizePointsize of font, 0 for default size, or negative number meaning pixel size.; Int_tfSlantSlant flag; see below for def'n.; Int_tfUnderlineNon-zero for underline font.; Int_tfWeightWeight flag; see below for def'n. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; FontAttributes_t(); { }. FontAttributes_t(const FontAttributes_t& f); { }. FontAttributes_t& operator=(const FontAttributes_t& f). » Author: Fons Rademakers 20/5/2003 » Copyright (C) 1995-2003, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id$ » Last generated: 2015-09-08 16:58; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/FontAttributes_t.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/FontAttributes_t.html
https://root.cern/root/html534/FontAttributes_t.html:933,Modifiability,Inherit,Inherited,933,". FontAttributes_t. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » GUI; » GUI; » FontAttributes_t. class FontAttributes_t. TGFont and TGFontPool. Encapsulate fonts used in the GUI system.; TGFontPool provides a pool of fonts. Function Members (Methods); public:. FontAttributes_t(); FontAttributes_t(const FontAttributes_t& f); ~FontAttributes_t(); FontAttributes_t&operator=(const FontAttributes_t& f). Data Members; public:. const char*fFamilyFont family. The most important field.; Int_tfOverstrikeNon-zero for overstrike font.; Int_tfPointsizePointsize of font, 0 for default size, or negative number meaning pixel size.; Int_tfSlantSlant flag; see below for def'n.; Int_tfUnderlineNon-zero for underline font.; Int_tfWeightWeight flag; see below for def'n. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; FontAttributes_t(); { }. FontAttributes_t(const FontAttributes_t& f); { }. FontAttributes_t& operator=(const FontAttributes_t& f). » Author: Fons Rademakers 20/5/2003 » Copyright (C) 1995-2003, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id$ » Last generated: 2015-09-08 16:58; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/FontAttributes_t.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/FontAttributes_t.html
https://root.cern/root/html534/FontMetrics_t.html:789,Modifiability,Inherit,Inheritance,789,". FontMetrics_t. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » GUI; » GUI; » FontMetrics_t. class FontMetrics_t. TGFont and TGFontPool. Encapsulate fonts used in the GUI system.; TGFontPool provides a pool of fonts. Function Members (Methods); public:. FontMetrics_t(); FontMetrics_t(const FontMetrics_t&); ~FontMetrics_t(); FontMetrics_t&operator=(const FontMetrics_t&). Data Members; public:. Int_tfAscentfrom baseline to top of font; Int_tfDescentfrom baseline to bottom of font; Bool_tfFixedtrue if monospace, false otherwise; Int_tfLinespacethe sum of the ascent and descent; Int_tfMaxWidthwidth of widest character in font. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; FontAttributes_t& operator=(const FontMetrics_t& ). » Author: Fons Rademakers 20/5/2003 » Copyright (C) 1995-2003, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id$ » Last generated: 2015-09-08 16:58; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/FontMetrics_t.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/FontMetrics_t.html
https://root.cern/root/html534/FontMetrics_t.html:802,Modifiability,Inherit,Inherited,802,". FontMetrics_t. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » GUI; » GUI; » FontMetrics_t. class FontMetrics_t. TGFont and TGFontPool. Encapsulate fonts used in the GUI system.; TGFontPool provides a pool of fonts. Function Members (Methods); public:. FontMetrics_t(); FontMetrics_t(const FontMetrics_t&); ~FontMetrics_t(); FontMetrics_t&operator=(const FontMetrics_t&). Data Members; public:. Int_tfAscentfrom baseline to top of font; Int_tfDescentfrom baseline to bottom of font; Bool_tfFixedtrue if monospace, false otherwise; Int_tfLinespacethe sum of the ascent and descent; Int_tfMaxWidthwidth of widest character in font. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; FontAttributes_t& operator=(const FontMetrics_t& ). » Author: Fons Rademakers 20/5/2003 » Copyright (C) 1995-2003, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id$ » Last generated: 2015-09-08 16:58; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/FontMetrics_t.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/FontMetrics_t.html
https://root.cern/root/html534/Foption_t.html:652,Availability,error,error,652,". Foption_t. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » HIST; » HIST; » Foption_t. class Foption_t. Foption. Histogram fit options structure. Function Members (Methods); public:. Foption_t(); Foption_t(const Foption_t&); ~Foption_t(); Foption_t&operator=(const Foption_t&). Data Members; public:. intBound""B"" When using pre-defined functions user parameter settings are used instead of default one; intChi2""X"" For fitting THnsparse use chi2 method (default is likelihood); intErrors""E"" Performs a better error evaluation, calling HESSE and MINOS; intGradient""G"" Option to compute derivatives analytically; intIntegral""I"" Use function integral instead of function in center of bin; intLike""L"" Use Log Likelihood. Default is chisquare method except fitting THnsparse; intMinuit""F"" If fitting a polN, switch to minuit fitter; intMore""M"" Improve fit results.; intNoErrX""EX0"" or ""T"" When fitting a TGraphErrors do not consider error in coordinates ; intNochisq""C"" In case of linear fitting, don't calculate the chisquare; intNograph""0"" If set, do not display the function graph; intNostore""N"" If set, do not store the function graph; intPlus""+"" Add new function (default is replace); intQuiet""Q"" Quiet mode. No print; intRange""R"" Use the range stored in function; intRobust""ROB"" or ""H"": For a TGraph use robust fitting; intStoreResult""S"": Stores the result in a TFitResult structure; intUser""U"" Use a User specified fitting algorithm (via SetFCN); intVerbose""V"" Verbose mode. Print results after each iteration; intW1""W"" Set all the weights to 1. Ignore error bars; doublehRobustvalue of h parameter used in robust fitting . Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Foption_t(); {}. » Last changed: Tue Sep 8 16:58:28 2015 » Last generated: 2015-09-08 16:58; This page has been automatically generated. For c",MatchSource.WIKI,root/html534/Foption_t.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Foption_t.html
https://root.cern/root/html534/Foption_t.html:1070,Availability,error,error,1070,"wVC header . Sections:; class description; function members; data members; class charts. ROOT; » HIST; » HIST; » Foption_t. class Foption_t. Foption. Histogram fit options structure. Function Members (Methods); public:. Foption_t(); Foption_t(const Foption_t&); ~Foption_t(); Foption_t&operator=(const Foption_t&). Data Members; public:. intBound""B"" When using pre-defined functions user parameter settings are used instead of default one; intChi2""X"" For fitting THnsparse use chi2 method (default is likelihood); intErrors""E"" Performs a better error evaluation, calling HESSE and MINOS; intGradient""G"" Option to compute derivatives analytically; intIntegral""I"" Use function integral instead of function in center of bin; intLike""L"" Use Log Likelihood. Default is chisquare method except fitting THnsparse; intMinuit""F"" If fitting a polN, switch to minuit fitter; intMore""M"" Improve fit results.; intNoErrX""EX0"" or ""T"" When fitting a TGraphErrors do not consider error in coordinates ; intNochisq""C"" In case of linear fitting, don't calculate the chisquare; intNograph""0"" If set, do not display the function graph; intNostore""N"" If set, do not store the function graph; intPlus""+"" Add new function (default is replace); intQuiet""Q"" Quiet mode. No print; intRange""R"" Use the range stored in function; intRobust""ROB"" or ""H"": For a TGraph use robust fitting; intStoreResult""S"": Stores the result in a TFitResult structure; intUser""U"" Use a User specified fitting algorithm (via SetFCN); intVerbose""V"" Verbose mode. Print results after each iteration; intW1""W"" Set all the weights to 1. Ignore error bars; doublehRobustvalue of h parameter used in robust fitting . Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Foption_t(); {}. » Last changed: Tue Sep 8 16:58:28 2015 » Last generated: 2015-09-08 16:58; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/Foption_t.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Foption_t.html
https://root.cern/root/html534/Foption_t.html:1447,Availability,robust,robust,1447,"wVC header . Sections:; class description; function members; data members; class charts. ROOT; » HIST; » HIST; » Foption_t. class Foption_t. Foption. Histogram fit options structure. Function Members (Methods); public:. Foption_t(); Foption_t(const Foption_t&); ~Foption_t(); Foption_t&operator=(const Foption_t&). Data Members; public:. intBound""B"" When using pre-defined functions user parameter settings are used instead of default one; intChi2""X"" For fitting THnsparse use chi2 method (default is likelihood); intErrors""E"" Performs a better error evaluation, calling HESSE and MINOS; intGradient""G"" Option to compute derivatives analytically; intIntegral""I"" Use function integral instead of function in center of bin; intLike""L"" Use Log Likelihood. Default is chisquare method except fitting THnsparse; intMinuit""F"" If fitting a polN, switch to minuit fitter; intMore""M"" Improve fit results.; intNoErrX""EX0"" or ""T"" When fitting a TGraphErrors do not consider error in coordinates ; intNochisq""C"" In case of linear fitting, don't calculate the chisquare; intNograph""0"" If set, do not display the function graph; intNostore""N"" If set, do not store the function graph; intPlus""+"" Add new function (default is replace); intQuiet""Q"" Quiet mode. No print; intRange""R"" Use the range stored in function; intRobust""ROB"" or ""H"": For a TGraph use robust fitting; intStoreResult""S"": Stores the result in a TFitResult structure; intUser""U"" Use a User specified fitting algorithm (via SetFCN); intVerbose""V"" Verbose mode. Print results after each iteration; intW1""W"" Set all the weights to 1. Ignore error bars; doublehRobustvalue of h parameter used in robust fitting . Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Foption_t(); {}. » Last changed: Tue Sep 8 16:58:28 2015 » Last generated: 2015-09-08 16:58; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/Foption_t.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Foption_t.html
https://root.cern/root/html534/Foption_t.html:1697,Availability,error,error,1697,"wVC header . Sections:; class description; function members; data members; class charts. ROOT; » HIST; » HIST; » Foption_t. class Foption_t. Foption. Histogram fit options structure. Function Members (Methods); public:. Foption_t(); Foption_t(const Foption_t&); ~Foption_t(); Foption_t&operator=(const Foption_t&). Data Members; public:. intBound""B"" When using pre-defined functions user parameter settings are used instead of default one; intChi2""X"" For fitting THnsparse use chi2 method (default is likelihood); intErrors""E"" Performs a better error evaluation, calling HESSE and MINOS; intGradient""G"" Option to compute derivatives analytically; intIntegral""I"" Use function integral instead of function in center of bin; intLike""L"" Use Log Likelihood. Default is chisquare method except fitting THnsparse; intMinuit""F"" If fitting a polN, switch to minuit fitter; intMore""M"" Improve fit results.; intNoErrX""EX0"" or ""T"" When fitting a TGraphErrors do not consider error in coordinates ; intNochisq""C"" In case of linear fitting, don't calculate the chisquare; intNograph""0"" If set, do not display the function graph; intNostore""N"" If set, do not store the function graph; intPlus""+"" Add new function (default is replace); intQuiet""Q"" Quiet mode. No print; intRange""R"" Use the range stored in function; intRobust""ROB"" or ""H"": For a TGraph use robust fitting; intStoreResult""S"": Stores the result in a TFitResult structure; intUser""U"" Use a User specified fitting algorithm (via SetFCN); intVerbose""V"" Verbose mode. Print results after each iteration; intW1""W"" Set all the weights to 1. Ignore error bars; doublehRobustvalue of h parameter used in robust fitting . Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Foption_t(); {}. » Last changed: Tue Sep 8 16:58:28 2015 » Last generated: 2015-09-08 16:58; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/Foption_t.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Foption_t.html
https://root.cern/root/html534/Foption_t.html:1751,Availability,robust,robust,1751,"wVC header . Sections:; class description; function members; data members; class charts. ROOT; » HIST; » HIST; » Foption_t. class Foption_t. Foption. Histogram fit options structure. Function Members (Methods); public:. Foption_t(); Foption_t(const Foption_t&); ~Foption_t(); Foption_t&operator=(const Foption_t&). Data Members; public:. intBound""B"" When using pre-defined functions user parameter settings are used instead of default one; intChi2""X"" For fitting THnsparse use chi2 method (default is likelihood); intErrors""E"" Performs a better error evaluation, calling HESSE and MINOS; intGradient""G"" Option to compute derivatives analytically; intIntegral""I"" Use function integral instead of function in center of bin; intLike""L"" Use Log Likelihood. Default is chisquare method except fitting THnsparse; intMinuit""F"" If fitting a polN, switch to minuit fitter; intMore""M"" Improve fit results.; intNoErrX""EX0"" or ""T"" When fitting a TGraphErrors do not consider error in coordinates ; intNochisq""C"" In case of linear fitting, don't calculate the chisquare; intNograph""0"" If set, do not display the function graph; intNostore""N"" If set, do not store the function graph; intPlus""+"" Add new function (default is replace); intQuiet""Q"" Quiet mode. No print; intRange""R"" Use the range stored in function; intRobust""ROB"" or ""H"": For a TGraph use robust fitting; intStoreResult""S"": Stores the result in a TFitResult structure; intUser""U"" Use a User specified fitting algorithm (via SetFCN); intVerbose""V"" Verbose mode. Print results after each iteration; intW1""W"" Set all the weights to 1. Ignore error bars; doublehRobustvalue of h parameter used in robust fitting . Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Foption_t(); {}. » Last changed: Tue Sep 8 16:58:28 2015 » Last generated: 2015-09-08 16:58; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/Foption_t.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Foption_t.html
https://root.cern/root/html534/Foption_t.html:1782,Modifiability,Inherit,Inheritance,1782,"wVC header . Sections:; class description; function members; data members; class charts. ROOT; » HIST; » HIST; » Foption_t. class Foption_t. Foption. Histogram fit options structure. Function Members (Methods); public:. Foption_t(); Foption_t(const Foption_t&); ~Foption_t(); Foption_t&operator=(const Foption_t&). Data Members; public:. intBound""B"" When using pre-defined functions user parameter settings are used instead of default one; intChi2""X"" For fitting THnsparse use chi2 method (default is likelihood); intErrors""E"" Performs a better error evaluation, calling HESSE and MINOS; intGradient""G"" Option to compute derivatives analytically; intIntegral""I"" Use function integral instead of function in center of bin; intLike""L"" Use Log Likelihood. Default is chisquare method except fitting THnsparse; intMinuit""F"" If fitting a polN, switch to minuit fitter; intMore""M"" Improve fit results.; intNoErrX""EX0"" or ""T"" When fitting a TGraphErrors do not consider error in coordinates ; intNochisq""C"" In case of linear fitting, don't calculate the chisquare; intNograph""0"" If set, do not display the function graph; intNostore""N"" If set, do not store the function graph; intPlus""+"" Add new function (default is replace); intQuiet""Q"" Quiet mode. No print; intRange""R"" Use the range stored in function; intRobust""ROB"" or ""H"": For a TGraph use robust fitting; intStoreResult""S"": Stores the result in a TFitResult structure; intUser""U"" Use a User specified fitting algorithm (via SetFCN); intVerbose""V"" Verbose mode. Print results after each iteration; intW1""W"" Set all the weights to 1. Ignore error bars; doublehRobustvalue of h parameter used in robust fitting . Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Foption_t(); {}. » Last changed: Tue Sep 8 16:58:28 2015 » Last generated: 2015-09-08 16:58; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/Foption_t.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Foption_t.html
https://root.cern/root/html534/Foption_t.html:1795,Modifiability,Inherit,Inherited,1795,"wVC header . Sections:; class description; function members; data members; class charts. ROOT; » HIST; » HIST; » Foption_t. class Foption_t. Foption. Histogram fit options structure. Function Members (Methods); public:. Foption_t(); Foption_t(const Foption_t&); ~Foption_t(); Foption_t&operator=(const Foption_t&). Data Members; public:. intBound""B"" When using pre-defined functions user parameter settings are used instead of default one; intChi2""X"" For fitting THnsparse use chi2 method (default is likelihood); intErrors""E"" Performs a better error evaluation, calling HESSE and MINOS; intGradient""G"" Option to compute derivatives analytically; intIntegral""I"" Use function integral instead of function in center of bin; intLike""L"" Use Log Likelihood. Default is chisquare method except fitting THnsparse; intMinuit""F"" If fitting a polN, switch to minuit fitter; intMore""M"" Improve fit results.; intNoErrX""EX0"" or ""T"" When fitting a TGraphErrors do not consider error in coordinates ; intNochisq""C"" In case of linear fitting, don't calculate the chisquare; intNograph""0"" If set, do not display the function graph; intNostore""N"" If set, do not store the function graph; intPlus""+"" Add new function (default is replace); intQuiet""Q"" Quiet mode. No print; intRange""R"" Use the range stored in function; intRobust""ROB"" or ""H"": For a TGraph use robust fitting; intStoreResult""S"": Stores the result in a TFitResult structure; intUser""U"" Use a User specified fitting algorithm (via SetFCN); intVerbose""V"" Verbose mode. Print results after each iteration; intW1""W"" Set all the weights to 1. Ignore error bars; doublehRobustvalue of h parameter used in robust fitting . Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Foption_t(); {}. » Last changed: Tue Sep 8 16:58:28 2015 » Last generated: 2015-09-08 16:58; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/Foption_t.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Foption_t.html
https://root.cern/root/html534/Foption_t.html:634,Performance,Perform,Performs,634,". Foption_t. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » HIST; » HIST; » Foption_t. class Foption_t. Foption. Histogram fit options structure. Function Members (Methods); public:. Foption_t(); Foption_t(const Foption_t&); ~Foption_t(); Foption_t&operator=(const Foption_t&). Data Members; public:. intBound""B"" When using pre-defined functions user parameter settings are used instead of default one; intChi2""X"" For fitting THnsparse use chi2 method (default is likelihood); intErrors""E"" Performs a better error evaluation, calling HESSE and MINOS; intGradient""G"" Option to compute derivatives analytically; intIntegral""I"" Use function integral instead of function in center of bin; intLike""L"" Use Log Likelihood. Default is chisquare method except fitting THnsparse; intMinuit""F"" If fitting a polN, switch to minuit fitter; intMore""M"" Improve fit results.; intNoErrX""EX0"" or ""T"" When fitting a TGraphErrors do not consider error in coordinates ; intNochisq""C"" In case of linear fitting, don't calculate the chisquare; intNograph""0"" If set, do not display the function graph; intNostore""N"" If set, do not store the function graph; intPlus""+"" Add new function (default is replace); intQuiet""Q"" Quiet mode. No print; intRange""R"" Use the range stored in function; intRobust""ROB"" or ""H"": For a TGraph use robust fitting; intStoreResult""S"": Stores the result in a TFitResult structure; intUser""U"" Use a User specified fitting algorithm (via SetFCN); intVerbose""V"" Verbose mode. Print results after each iteration; intW1""W"" Set all the weights to 1. Ignore error bars; doublehRobustvalue of h parameter used in robust fitting . Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Foption_t(); {}. » Last changed: Tue Sep 8 16:58:28 2015 » Last generated: 2015-09-08 16:58; This page has been automatically generated. For c",MatchSource.WIKI,root/html534/Foption_t.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Foption_t.html
https://root.cern/root/html534/Foption_t.html:844,Testability,Log,Log,844,". Foption_t. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » HIST; » HIST; » Foption_t. class Foption_t. Foption. Histogram fit options structure. Function Members (Methods); public:. Foption_t(); Foption_t(const Foption_t&); ~Foption_t(); Foption_t&operator=(const Foption_t&). Data Members; public:. intBound""B"" When using pre-defined functions user parameter settings are used instead of default one; intChi2""X"" For fitting THnsparse use chi2 method (default is likelihood); intErrors""E"" Performs a better error evaluation, calling HESSE and MINOS; intGradient""G"" Option to compute derivatives analytically; intIntegral""I"" Use function integral instead of function in center of bin; intLike""L"" Use Log Likelihood. Default is chisquare method except fitting THnsparse; intMinuit""F"" If fitting a polN, switch to minuit fitter; intMore""M"" Improve fit results.; intNoErrX""EX0"" or ""T"" When fitting a TGraphErrors do not consider error in coordinates ; intNochisq""C"" In case of linear fitting, don't calculate the chisquare; intNograph""0"" If set, do not display the function graph; intNostore""N"" If set, do not store the function graph; intPlus""+"" Add new function (default is replace); intQuiet""Q"" Quiet mode. No print; intRange""R"" Use the range stored in function; intRobust""ROB"" or ""H"": For a TGraph use robust fitting; intStoreResult""S"": Stores the result in a TFitResult structure; intUser""U"" Use a User specified fitting algorithm (via SetFCN); intVerbose""V"" Verbose mode. Print results after each iteration; intW1""W"" Set all the weights to 1. Ignore error bars; doublehRobustvalue of h parameter used in robust fitting . Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Foption_t(); {}. » Last changed: Tue Sep 8 16:58:28 2015 » Last generated: 2015-09-08 16:58; This page has been automatically generated. For c",MatchSource.WIKI,root/html534/Foption_t.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Foption_t.html
https://root.cern/root/html534/GCValues_t.html:1261,Availability,mask,mask,1261,". GCValues_t. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » GCValues_t. class GCValues_t. GuiTypes. Types used by the GUI classes. Function Members (Methods); public:. GCValues_t(); GCValues_t(const GCValues_t&); ~GCValues_t(); GCValues_t&operator=(const GCValues_t&). Data Members; public:. Int_tfArcModekArcChord, kArcPieSlice; ULong_tfBackgroundbackground pixel; Int_tfCapStylekCapNotLast, kCapButt,; Pixmap_tfClipMaskbitmap clipping; other calls for rects; Int_tfClipXOriginorigin for clipping; Int_tfClipYOrigin; Int_tfDashLennumber of dashes in fDashes; Int_tfDashOffsetpatterned/dashed line information; Char_tfDashes[8]dash pattern list (dash length per byte); Int_tfFillRulekEvenOddRule, kWindingRule; Int_tfFillStylekFillSolid, kFillTiled,; FontH_tfFontdefault text font for text operations; ULong_tfForegroundforeground pixel; EGraphicsFunctionfFunctionlogical operation; Bool_tfGraphicsExposuresboolean, should exposures be generated; Int_tfJoinStylekJoinMiter, kJoinRound, kJoinBevel; Int_tfLineStylekLineSolid, kLineOnOffDash, kLineDoubleDash; Int_tfLineWidthline width; Mask_tfMaskbit mask specifying which fields are valid; ULong_tfPlaneMaskplane mask; Pixmap_tfStipplestipple 1 plane pixmap for stipping; Int_tfSubwindowModekClipByChildren, kIncludeInferiors; Pixmap_tfTiletile pixmap for tiling operations; Int_tfTsXOriginoffset for tile or stipple operations; Int_tfTsYOrigin. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; GCValues_t(). » Last changed: Tue Sep 8 16:58:29 2015 » Last generated: 2015-09-08 16:58; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/GCValues_t.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/GCValues_t.html
https://root.cern/root/html534/GCValues_t.html:1324,Availability,mask,mask,1324,". GCValues_t. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » GCValues_t. class GCValues_t. GuiTypes. Types used by the GUI classes. Function Members (Methods); public:. GCValues_t(); GCValues_t(const GCValues_t&); ~GCValues_t(); GCValues_t&operator=(const GCValues_t&). Data Members; public:. Int_tfArcModekArcChord, kArcPieSlice; ULong_tfBackgroundbackground pixel; Int_tfCapStylekCapNotLast, kCapButt,; Pixmap_tfClipMaskbitmap clipping; other calls for rects; Int_tfClipXOriginorigin for clipping; Int_tfClipYOrigin; Int_tfDashLennumber of dashes in fDashes; Int_tfDashOffsetpatterned/dashed line information; Char_tfDashes[8]dash pattern list (dash length per byte); Int_tfFillRulekEvenOddRule, kWindingRule; Int_tfFillStylekFillSolid, kFillTiled,; FontH_tfFontdefault text font for text operations; ULong_tfForegroundforeground pixel; EGraphicsFunctionfFunctionlogical operation; Bool_tfGraphicsExposuresboolean, should exposures be generated; Int_tfJoinStylekJoinMiter, kJoinRound, kJoinBevel; Int_tfLineStylekLineSolid, kLineOnOffDash, kLineDoubleDash; Int_tfLineWidthline width; Mask_tfMaskbit mask specifying which fields are valid; ULong_tfPlaneMaskplane mask; Pixmap_tfStipplestipple 1 plane pixmap for stipping; Int_tfSubwindowModekClipByChildren, kIncludeInferiors; Pixmap_tfTiletile pixmap for tiling operations; Int_tfTsXOriginoffset for tile or stipple operations; Int_tfTsYOrigin. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; GCValues_t(). » Last changed: Tue Sep 8 16:58:29 2015 » Last generated: 2015-09-08 16:58; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/GCValues_t.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/GCValues_t.html
https://root.cern/root/html534/GCValues_t.html:1571,Modifiability,Inherit,Inheritance,1571,". GCValues_t. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » GCValues_t. class GCValues_t. GuiTypes. Types used by the GUI classes. Function Members (Methods); public:. GCValues_t(); GCValues_t(const GCValues_t&); ~GCValues_t(); GCValues_t&operator=(const GCValues_t&). Data Members; public:. Int_tfArcModekArcChord, kArcPieSlice; ULong_tfBackgroundbackground pixel; Int_tfCapStylekCapNotLast, kCapButt,; Pixmap_tfClipMaskbitmap clipping; other calls for rects; Int_tfClipXOriginorigin for clipping; Int_tfClipYOrigin; Int_tfDashLennumber of dashes in fDashes; Int_tfDashOffsetpatterned/dashed line information; Char_tfDashes[8]dash pattern list (dash length per byte); Int_tfFillRulekEvenOddRule, kWindingRule; Int_tfFillStylekFillSolid, kFillTiled,; FontH_tfFontdefault text font for text operations; ULong_tfForegroundforeground pixel; EGraphicsFunctionfFunctionlogical operation; Bool_tfGraphicsExposuresboolean, should exposures be generated; Int_tfJoinStylekJoinMiter, kJoinRound, kJoinBevel; Int_tfLineStylekLineSolid, kLineOnOffDash, kLineDoubleDash; Int_tfLineWidthline width; Mask_tfMaskbit mask specifying which fields are valid; ULong_tfPlaneMaskplane mask; Pixmap_tfStipplestipple 1 plane pixmap for stipping; Int_tfSubwindowModekClipByChildren, kIncludeInferiors; Pixmap_tfTiletile pixmap for tiling operations; Int_tfTsXOriginoffset for tile or stipple operations; Int_tfTsYOrigin. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; GCValues_t(). » Last changed: Tue Sep 8 16:58:29 2015 » Last generated: 2015-09-08 16:58; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/GCValues_t.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/GCValues_t.html
https://root.cern/root/html534/GCValues_t.html:1584,Modifiability,Inherit,Inherited,1584,". GCValues_t. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » GCValues_t. class GCValues_t. GuiTypes. Types used by the GUI classes. Function Members (Methods); public:. GCValues_t(); GCValues_t(const GCValues_t&); ~GCValues_t(); GCValues_t&operator=(const GCValues_t&). Data Members; public:. Int_tfArcModekArcChord, kArcPieSlice; ULong_tfBackgroundbackground pixel; Int_tfCapStylekCapNotLast, kCapButt,; Pixmap_tfClipMaskbitmap clipping; other calls for rects; Int_tfClipXOriginorigin for clipping; Int_tfClipYOrigin; Int_tfDashLennumber of dashes in fDashes; Int_tfDashOffsetpatterned/dashed line information; Char_tfDashes[8]dash pattern list (dash length per byte); Int_tfFillRulekEvenOddRule, kWindingRule; Int_tfFillStylekFillSolid, kFillTiled,; FontH_tfFontdefault text font for text operations; ULong_tfForegroundforeground pixel; EGraphicsFunctionfFunctionlogical operation; Bool_tfGraphicsExposuresboolean, should exposures be generated; Int_tfJoinStylekJoinMiter, kJoinRound, kJoinBevel; Int_tfLineStylekLineSolid, kLineOnOffDash, kLineDoubleDash; Int_tfLineWidthline width; Mask_tfMaskbit mask specifying which fields are valid; ULong_tfPlaneMaskplane mask; Pixmap_tfStipplestipple 1 plane pixmap for stipping; Int_tfSubwindowModekClipByChildren, kIncludeInferiors; Pixmap_tfTiletile pixmap for tiling operations; Int_tfTsXOriginoffset for tile or stipple operations; Int_tfTsYOrigin. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; GCValues_t(). » Last changed: Tue Sep 8 16:58:29 2015 » Last generated: 2015-09-08 16:58; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/GCValues_t.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/GCValues_t.html
https://root.cern/root/html534/HTML_Index.html:565,Performance,cache,cache,565,". Index of HTML. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. ROOT; » HTML. Index of HTML; DUMMY - a howto, for now. The content of a file called index.html or index.txt will be put ; into the module index page (e.g. into GUI/index.html).; All other files will be linked. .txt files will be run through THtml::Convert, html files will be kept.; Only files ending on .txt or .html will be considered as module documentation.; Class Index; Jump to; T; TD; TDocL; TDocO; TH; THtml:; THtml::TFileSysE; THtml::TH; THtml::TP; TM. TClassDocInfo info cache for class documentation; TClassDocOutput generates documentation web pages for a class; TDocDirective THtml directive handler; TDocHtmlDirective Handler for ""Begin_Html""/""End_Html"" for raw HTML in documentation comments; TDocLatexDirective Handler for ""Begin_Latex""/""End_Latex"" to generate an image from latex; TDocMacroDirective Handler for ""Begin_Macro""/""End_Macro"" for code that is executed and that can generate an image for documentation; TDocOutput generates documentation web pages; TDocParser parser for reference documentation; THtml Convert class(es) into HTML file(s); THtml::TFileDefinition helper class to determine a class's source files; THtml::TFileSysDB instance of file system data; THtml::TFileSysDir an directory of the local file system; THtml::TFileSysEntry an entry of the local file system; THtml::TFileSysRoot an root directory of the local file system; THtml::THelperBase a helper object's base class; THtml::TModuleDefinition helper class to determine a class's module; THtml::TPathDefinition helper class to determine directory layouts; TLibraryDocInfo documentation for a library; TModuleDocInfo documentation for a group of classes. » Last changed: 2015-09-08 16:58 » Last generated: 2015-09-08 16:58; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/HTML_Index.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/HTML_Index.html
https://root.cern/root/html534/index.html:860,Integrability,Depend,Dependency,860,". ROOT Reference Guide. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. ROOT. ROOT Reference Guide; These pages contain the documentation for all ROOT classes, and the conceptual structure of the ROOT classes, its modules.; The documentation can be accessed by browsing the modules below,; by accessing a certain class directly using the Class Index,; or by simply searching the reference guide (see search field above).; The ROOT Tutorials show how to use many of ROOT's classes. Modules; BINDINGS; CINT; CORE; GEOM; GRAF2D; GRAF3D; GUI; HIST; HTML; IO; MATH; MISC; MONTECARLO; NET; PROOF; ROOFIT; SQL; TEST; TMVA; TREE. Chapters; Class Index; A complete list of all classes defined in ROOT; Class Hierarchy; A hierarchy graph of all classes, showing each class's base and derived classes; Type Index; A complete list of all types; Library Dependency; A diagram showing all of ROOT's libraries and their dependencies. » Last changed: 2015-09-08 16:58 » Last generated: 2015-09-08 16:58; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/index.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/index.html
https://root.cern/root/html534/index.html:924,Integrability,depend,dependencies,924,". ROOT Reference Guide. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. ROOT. ROOT Reference Guide; These pages contain the documentation for all ROOT classes, and the conceptual structure of the ROOT classes, its modules.; The documentation can be accessed by browsing the modules below,; by accessing a certain class directly using the Class Index,; or by simply searching the reference guide (see search field above).; The ROOT Tutorials show how to use many of ROOT's classes. Modules; BINDINGS; CINT; CORE; GEOM; GRAF2D; GRAF3D; GUI; HIST; HTML; IO; MATH; MISC; MONTECARLO; NET; PROOF; ROOFIT; SQL; TEST; TMVA; TREE. Chapters; Class Index; A complete list of all classes defined in ROOT; Class Hierarchy; A hierarchy graph of all classes, showing each class's base and derived classes; Type Index; A complete list of all types; Library Dependency; A diagram showing all of ROOT's libraries and their dependencies. » Last changed: 2015-09-08 16:58 » Last generated: 2015-09-08 16:58; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/index.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/index.html
https://root.cern/root/html534/index.html:268,Security,access,accessed,268,". ROOT Reference Guide. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. ROOT. ROOT Reference Guide; These pages contain the documentation for all ROOT classes, and the conceptual structure of the ROOT classes, its modules.; The documentation can be accessed by browsing the modules below,; by accessing a certain class directly using the Class Index,; or by simply searching the reference guide (see search field above).; The ROOT Tutorials show how to use many of ROOT's classes. Modules; BINDINGS; CINT; CORE; GEOM; GRAF2D; GRAF3D; GUI; HIST; HTML; IO; MATH; MISC; MONTECARLO; NET; PROOF; ROOFIT; SQL; TEST; TMVA; TREE. Chapters; Class Index; A complete list of all classes defined in ROOT; Class Hierarchy; A hierarchy graph of all classes, showing each class's base and derived classes; Type Index; A complete list of all types; Library Dependency; A diagram showing all of ROOT's libraries and their dependencies. » Last changed: 2015-09-08 16:58 » Last generated: 2015-09-08 16:58; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/index.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/index.html
https://root.cern/root/html534/index.html:312,Security,access,accessing,312,". ROOT Reference Guide. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. ROOT. ROOT Reference Guide; These pages contain the documentation for all ROOT classes, and the conceptual structure of the ROOT classes, its modules.; The documentation can be accessed by browsing the modules below,; by accessing a certain class directly using the Class Index,; or by simply searching the reference guide (see search field above).; The ROOT Tutorials show how to use many of ROOT's classes. Modules; BINDINGS; CINT; CORE; GEOM; GRAF2D; GRAF3D; GUI; HIST; HTML; IO; MATH; MISC; MONTECARLO; NET; PROOF; ROOFIT; SQL; TEST; TMVA; TREE. Chapters; Class Index; A complete list of all classes defined in ROOT; Class Hierarchy; A hierarchy graph of all classes, showing each class's base and derived classes; Type Index; A complete list of all types; Library Dependency; A diagram showing all of ROOT's libraries and their dependencies. » Last changed: 2015-09-08 16:58 » Last generated: 2015-09-08 16:58; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/index.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/index.html
https://root.cern/root/html534/index.html:623,Testability,TEST,TEST,623,". ROOT Reference Guide. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. ROOT. ROOT Reference Guide; These pages contain the documentation for all ROOT classes, and the conceptual structure of the ROOT classes, its modules.; The documentation can be accessed by browsing the modules below,; by accessing a certain class directly using the Class Index,; or by simply searching the reference guide (see search field above).; The ROOT Tutorials show how to use many of ROOT's classes. Modules; BINDINGS; CINT; CORE; GEOM; GRAF2D; GRAF3D; GUI; HIST; HTML; IO; MATH; MISC; MONTECARLO; NET; PROOF; ROOFIT; SQL; TEST; TMVA; TREE. Chapters; Class Index; A complete list of all classes defined in ROOT; Class Hierarchy; A hierarchy graph of all classes, showing each class's base and derived classes; Type Index; A complete list of all types; Library Dependency; A diagram showing all of ROOT's libraries and their dependencies. » Last changed: 2015-09-08 16:58 » Last generated: 2015-09-08 16:58; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/index.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/index.html
https://root.cern/root/html534/index.html:17,Usability,Guid,Guide,17,". ROOT Reference Guide. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. ROOT. ROOT Reference Guide; These pages contain the documentation for all ROOT classes, and the conceptual structure of the ROOT classes, its modules.; The documentation can be accessed by browsing the modules below,; by accessing a certain class directly using the Class Index,; or by simply searching the reference guide (see search field above).; The ROOT Tutorials show how to use many of ROOT's classes. Modules; BINDINGS; CINT; CORE; GEOM; GRAF2D; GRAF3D; GUI; HIST; HTML; IO; MATH; MISC; MONTECARLO; NET; PROOF; ROOFIT; SQL; TEST; TMVA; TREE. Chapters; Class Index; A complete list of all classes defined in ROOT; Class Hierarchy; A hierarchy graph of all classes, showing each class's base and derived classes; Type Index; A complete list of all types; Library Dependency; A diagram showing all of ROOT's libraries and their dependencies. » Last changed: 2015-09-08 16:58 » Last generated: 2015-09-08 16:58; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/index.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/index.html
https://root.cern/root/html534/index.html:112,Usability,Guid,Guide,112,". ROOT Reference Guide. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. ROOT. ROOT Reference Guide; These pages contain the documentation for all ROOT classes, and the conceptual structure of the ROOT classes, its modules.; The documentation can be accessed by browsing the modules below,; by accessing a certain class directly using the Class Index,; or by simply searching the reference guide (see search field above).; The ROOT Tutorials show how to use many of ROOT's classes. Modules; BINDINGS; CINT; CORE; GEOM; GRAF2D; GRAF3D; GUI; HIST; HTML; IO; MATH; MISC; MONTECARLO; NET; PROOF; ROOFIT; SQL; TEST; TMVA; TREE. Chapters; Class Index; A complete list of all classes defined in ROOT; Class Hierarchy; A hierarchy graph of all classes, showing each class's base and derived classes; Type Index; A complete list of all types; Library Dependency; A diagram showing all of ROOT's libraries and their dependencies. » Last changed: 2015-09-08 16:58 » Last generated: 2015-09-08 16:58; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/index.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/index.html
https://root.cern/root/html534/index.html:377,Usability,simpl,simply,377,". ROOT Reference Guide. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. ROOT. ROOT Reference Guide; These pages contain the documentation for all ROOT classes, and the conceptual structure of the ROOT classes, its modules.; The documentation can be accessed by browsing the modules below,; by accessing a certain class directly using the Class Index,; or by simply searching the reference guide (see search field above).; The ROOT Tutorials show how to use many of ROOT's classes. Modules; BINDINGS; CINT; CORE; GEOM; GRAF2D; GRAF3D; GUI; HIST; HTML; IO; MATH; MISC; MONTECARLO; NET; PROOF; ROOFIT; SQL; TEST; TMVA; TREE. Chapters; Class Index; A complete list of all classes defined in ROOT; Class Hierarchy; A hierarchy graph of all classes, showing each class's base and derived classes; Type Index; A complete list of all types; Library Dependency; A diagram showing all of ROOT's libraries and their dependencies. » Last changed: 2015-09-08 16:58 » Last generated: 2015-09-08 16:58; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/index.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/index.html
https://root.cern/root/html534/index.html:408,Usability,guid,guide,408,". ROOT Reference Guide. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. ROOT. ROOT Reference Guide; These pages contain the documentation for all ROOT classes, and the conceptual structure of the ROOT classes, its modules.; The documentation can be accessed by browsing the modules below,; by accessing a certain class directly using the Class Index,; or by simply searching the reference guide (see search field above).; The ROOT Tutorials show how to use many of ROOT's classes. Modules; BINDINGS; CINT; CORE; GEOM; GRAF2D; GRAF3D; GUI; HIST; HTML; IO; MATH; MISC; MONTECARLO; NET; PROOF; ROOFIT; SQL; TEST; TMVA; TREE. Chapters; Class Index; A complete list of all classes defined in ROOT; Class Hierarchy; A hierarchy graph of all classes, showing each class's base and derived classes; Type Index; A complete list of all types; Library Dependency; A diagram showing all of ROOT's libraries and their dependencies. » Last changed: 2015-09-08 16:58 » Last generated: 2015-09-08 16:58; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/index.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/index.html
https://root.cern/root/html534/MATH_Index.html:4214,Availability,avail,available,4214,"ession templates to achieve an high level optimization. Physics Vectors: classes for describing vectors in 2, 3 and 4 dimensions (relativistic vectors) and their rotation and transformation algorithms. Two package exist in ROOT:. Physics: library with the TVector3 and TLorentzVector classes.; GenVector: new library providing generic class templates for modeling the vectors. Unuran: package with universal algorithms for generating non-uniform pseudo-random numbers, from a large classes of continuous or discrete distributions in one or multi-dimensions. ; Foam: multi-dimensional general purpose Monte Carlo event generator (and integrator). It generates randomly points (vectors) according to an arbitrary probability distribution in n dimensions.; FFTW: library with implementation of the fast Fourier transform (FFT) using the FFTW package. It requires a previous installation of (FFTW).; MLP: library with the neural network class, TMultiLayerPerceptron based on the NN algorithm from the mlpfit package.; Quadp: optimization library with linear and quadratic programming methods. It is based on the Matrix package.; Statistic classes for computing limits and confidence levels.; More detailed is provided here. Some of these classes are currently provided by libPhysics. Further information is available at the following links:. ROOT Mathematical Library Web page; ROOT Math doxygen class documentation; The Math chapter in the user guide; The Linear Algebra chapter in the user guide; The Physics Vector chapter in the user guide; Inventory of Math functions and algorithms. Last modified: Thu Mar 5 16:03:07 CET 2009 . ; MATH Modules; FFTW; FOAM; FUMILI; GENETIC; GENVECTOR; MATHCORE; MATHMORE; MATRIX; MINUIT; MINUIT2; MLP; PHYSICS; QUADP; SMATRIX; SPLOT; UNURAN. » Last changed: 2015-09-08 16:58 » Last generated: 2015-09-08 16:58; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/MATH_Index.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/MATH_Index.html
https://root.cern/root/html534/MATH_Index.html:638,Deployability,integrat,integration,638,". Index of MATH. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. ROOT; » MATH. Index of MATH. ; ROOT Math Work Package. Math: The ROOT Mathematical Libraries; The ROOT Math package consists of the following components:. MathCore: a self-consistent minimal set of tools required for the basic numerical computing.; It provides the major mathematical functions in the namespaces ROOT::Math and TMath,; classes for random number generators, TRandom, class for complex numbers, TComplex,; common interfaces for function evaluation and numerical algorithms. Basic implementations of some of the numerical algorithms such as integration or derivation, are as also provided by MathCore. Furthermore, classes required for fit the ROOT data objects (and also any data sets) are as well provided. MathMore: package incorporating advanced numerical functionality and dependent on external libraries like the GNU Scientific Library (GSL). It complements the MathCore library by providing a more complete sets of special mathematical functions and implementations of the numerical algorithms interfaces defined in MathCore using GSL. Minimization and Fitting Libraries: libraries required for numerical minimization and fitting. The minimization libraries include the numerical methods for solving the fitting problem by finding minimum of multi-dimensional function. The current common interface for fitting is class TVirtualFitter and implemented by derived classes in the minimization and fitting libraries. The fitting in ROOT is being re-organized and new fitting classes are present in MathCore for providing the fitting functionality and the use the minimization libraries via a new common interface (ROOT::Math::Minimizer). In detail the minimization libraries, implementing all the new and old minimization interface, include: . Minuit:library providing via a class TMinuit an implementation of the popular MINUIT minimization package. In addition the library contains also an implement",MatchSource.WIKI,root/html534/MATH_Index.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/MATH_Index.html
https://root.cern/root/html534/MATH_Index.html:3404,Deployability,continuous,continuous,3404,"s. ; Fumili: library providing the implementation of the original Fumili fitting algorithm. Linear algebra. Two libraries are contained in ROOT for describing linear algebra matrices and vector classes:. Matrix: general matrix package providing matrix TMatrix and vector TVector classes and the complete environment to perform linear algebra calculations, like equation solving and eigenvalue decompositions.; SMatrix: package optimized for high performances matrix and vector computations of small and fixed size. It is based on expression templates to achieve an high level optimization. Physics Vectors: classes for describing vectors in 2, 3 and 4 dimensions (relativistic vectors) and their rotation and transformation algorithms. Two package exist in ROOT:. Physics: library with the TVector3 and TLorentzVector classes.; GenVector: new library providing generic class templates for modeling the vectors. Unuran: package with universal algorithms for generating non-uniform pseudo-random numbers, from a large classes of continuous or discrete distributions in one or multi-dimensions. ; Foam: multi-dimensional general purpose Monte Carlo event generator (and integrator). It generates randomly points (vectors) according to an arbitrary probability distribution in n dimensions.; FFTW: library with implementation of the fast Fourier transform (FFT) using the FFTW package. It requires a previous installation of (FFTW).; MLP: library with the neural network class, TMultiLayerPerceptron based on the NN algorithm from the mlpfit package.; Quadp: optimization library with linear and quadratic programming methods. It is based on the Matrix package.; Statistic classes for computing limits and confidence levels.; More detailed is provided here. Some of these classes are currently provided by libPhysics. Further information is available at the following links:. ROOT Mathematical Library Web page; ROOT Math doxygen class documentation; The Math chapter in the user guide; The Linear Algebra",MatchSource.WIKI,root/html534/MATH_Index.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/MATH_Index.html
https://root.cern/root/html534/MATH_Index.html:3544,Deployability,integrat,integrator,3544," in ROOT for describing linear algebra matrices and vector classes:. Matrix: general matrix package providing matrix TMatrix and vector TVector classes and the complete environment to perform linear algebra calculations, like equation solving and eigenvalue decompositions.; SMatrix: package optimized for high performances matrix and vector computations of small and fixed size. It is based on expression templates to achieve an high level optimization. Physics Vectors: classes for describing vectors in 2, 3 and 4 dimensions (relativistic vectors) and their rotation and transformation algorithms. Two package exist in ROOT:. Physics: library with the TVector3 and TLorentzVector classes.; GenVector: new library providing generic class templates for modeling the vectors. Unuran: package with universal algorithms for generating non-uniform pseudo-random numbers, from a large classes of continuous or discrete distributions in one or multi-dimensions. ; Foam: multi-dimensional general purpose Monte Carlo event generator (and integrator). It generates randomly points (vectors) according to an arbitrary probability distribution in n dimensions.; FFTW: library with implementation of the fast Fourier transform (FFT) using the FFTW package. It requires a previous installation of (FFTW).; MLP: library with the neural network class, TMultiLayerPerceptron based on the NN algorithm from the mlpfit package.; Quadp: optimization library with linear and quadratic programming methods. It is based on the Matrix package.; Statistic classes for computing limits and confidence levels.; More detailed is provided here. Some of these classes are currently provided by libPhysics. Further information is available at the following links:. ROOT Mathematical Library Web page; ROOT Math doxygen class documentation; The Math chapter in the user guide; The Linear Algebra chapter in the user guide; The Physics Vector chapter in the user guide; Inventory of Math functions and algorithms. Last modified: T",MatchSource.WIKI,root/html534/MATH_Index.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/MATH_Index.html
https://root.cern/root/html534/MATH_Index.html:3782,Deployability,install,installation,3782,"ons.; SMatrix: package optimized for high performances matrix and vector computations of small and fixed size. It is based on expression templates to achieve an high level optimization. Physics Vectors: classes for describing vectors in 2, 3 and 4 dimensions (relativistic vectors) and their rotation and transformation algorithms. Two package exist in ROOT:. Physics: library with the TVector3 and TLorentzVector classes.; GenVector: new library providing generic class templates for modeling the vectors. Unuran: package with universal algorithms for generating non-uniform pseudo-random numbers, from a large classes of continuous or discrete distributions in one or multi-dimensions. ; Foam: multi-dimensional general purpose Monte Carlo event generator (and integrator). It generates randomly points (vectors) according to an arbitrary probability distribution in n dimensions.; FFTW: library with implementation of the fast Fourier transform (FFT) using the FFTW package. It requires a previous installation of (FFTW).; MLP: library with the neural network class, TMultiLayerPerceptron based on the NN algorithm from the mlpfit package.; Quadp: optimization library with linear and quadratic programming methods. It is based on the Matrix package.; Statistic classes for computing limits and confidence levels.; More detailed is provided here. Some of these classes are currently provided by libPhysics. Further information is available at the following links:. ROOT Mathematical Library Web page; ROOT Math doxygen class documentation; The Math chapter in the user guide; The Linear Algebra chapter in the user guide; The Physics Vector chapter in the user guide; Inventory of Math functions and algorithms. Last modified: Thu Mar 5 16:03:07 CET 2009 . ; MATH Modules; FFTW; FOAM; FUMILI; GENETIC; GENVECTOR; MATHCORE; MATHMORE; MATRIX; MINUIT; MINUIT2; MLP; PHYSICS; QUADP; SMATRIX; SPLOT; UNURAN. » Last changed: 2015-09-08 16:58 » Last generated: 2015-09-08 16:58; This page has been automat",MatchSource.WIKI,root/html534/MATH_Index.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/MATH_Index.html
https://root.cern/root/html534/MATH_Index.html:511,Integrability,interface,interfaces,511,". Index of MATH. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. ROOT; » MATH. Index of MATH. ; ROOT Math Work Package. Math: The ROOT Mathematical Libraries; The ROOT Math package consists of the following components:. MathCore: a self-consistent minimal set of tools required for the basic numerical computing.; It provides the major mathematical functions in the namespaces ROOT::Math and TMath,; classes for random number generators, TRandom, class for complex numbers, TComplex,; common interfaces for function evaluation and numerical algorithms. Basic implementations of some of the numerical algorithms such as integration or derivation, are as also provided by MathCore. Furthermore, classes required for fit the ROOT data objects (and also any data sets) are as well provided. MathMore: package incorporating advanced numerical functionality and dependent on external libraries like the GNU Scientific Library (GSL). It complements the MathCore library by providing a more complete sets of special mathematical functions and implementations of the numerical algorithms interfaces defined in MathCore using GSL. Minimization and Fitting Libraries: libraries required for numerical minimization and fitting. The minimization libraries include the numerical methods for solving the fitting problem by finding minimum of multi-dimensional function. The current common interface for fitting is class TVirtualFitter and implemented by derived classes in the minimization and fitting libraries. The fitting in ROOT is being re-organized and new fitting classes are present in MathCore for providing the fitting functionality and the use the minimization libraries via a new common interface (ROOT::Math::Minimizer). In detail the minimization libraries, implementing all the new and old minimization interface, include: . Minuit:library providing via a class TMinuit an implementation of the popular MINUIT minimization package. In addition the library contains also an implement",MatchSource.WIKI,root/html534/MATH_Index.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/MATH_Index.html
https://root.cern/root/html534/MATH_Index.html:638,Integrability,integrat,integration,638,". Index of MATH. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. ROOT; » MATH. Index of MATH. ; ROOT Math Work Package. Math: The ROOT Mathematical Libraries; The ROOT Math package consists of the following components:. MathCore: a self-consistent minimal set of tools required for the basic numerical computing.; It provides the major mathematical functions in the namespaces ROOT::Math and TMath,; classes for random number generators, TRandom, class for complex numbers, TComplex,; common interfaces for function evaluation and numerical algorithms. Basic implementations of some of the numerical algorithms such as integration or derivation, are as also provided by MathCore. Furthermore, classes required for fit the ROOT data objects (and also any data sets) are as well provided. MathMore: package incorporating advanced numerical functionality and dependent on external libraries like the GNU Scientific Library (GSL). It complements the MathCore library by providing a more complete sets of special mathematical functions and implementations of the numerical algorithms interfaces defined in MathCore using GSL. Minimization and Fitting Libraries: libraries required for numerical minimization and fitting. The minimization libraries include the numerical methods for solving the fitting problem by finding minimum of multi-dimensional function. The current common interface for fitting is class TVirtualFitter and implemented by derived classes in the minimization and fitting libraries. The fitting in ROOT is being re-organized and new fitting classes are present in MathCore for providing the fitting functionality and the use the minimization libraries via a new common interface (ROOT::Math::Minimizer). In detail the minimization libraries, implementing all the new and old minimization interface, include: . Minuit:library providing via a class TMinuit an implementation of the popular MINUIT minimization package. In addition the library contains also an implement",MatchSource.WIKI,root/html534/MATH_Index.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/MATH_Index.html
https://root.cern/root/html534/MATH_Index.html:875,Integrability,depend,dependent,875,". Index of MATH. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. ROOT; » MATH. Index of MATH. ; ROOT Math Work Package. Math: The ROOT Mathematical Libraries; The ROOT Math package consists of the following components:. MathCore: a self-consistent minimal set of tools required for the basic numerical computing.; It provides the major mathematical functions in the namespaces ROOT::Math and TMath,; classes for random number generators, TRandom, class for complex numbers, TComplex,; common interfaces for function evaluation and numerical algorithms. Basic implementations of some of the numerical algorithms such as integration or derivation, are as also provided by MathCore. Furthermore, classes required for fit the ROOT data objects (and also any data sets) are as well provided. MathMore: package incorporating advanced numerical functionality and dependent on external libraries like the GNU Scientific Library (GSL). It complements the MathCore library by providing a more complete sets of special mathematical functions and implementations of the numerical algorithms interfaces defined in MathCore using GSL. Minimization and Fitting Libraries: libraries required for numerical minimization and fitting. The minimization libraries include the numerical methods for solving the fitting problem by finding minimum of multi-dimensional function. The current common interface for fitting is class TVirtualFitter and implemented by derived classes in the minimization and fitting libraries. The fitting in ROOT is being re-organized and new fitting classes are present in MathCore for providing the fitting functionality and the use the minimization libraries via a new common interface (ROOT::Math::Minimizer). In detail the minimization libraries, implementing all the new and old minimization interface, include: . Minuit:library providing via a class TMinuit an implementation of the popular MINUIT minimization package. In addition the library contains also an implement",MatchSource.WIKI,root/html534/MATH_Index.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/MATH_Index.html
https://root.cern/root/html534/MATH_Index.html:1098,Integrability,interface,interfaces,1098,"ge; Class Index; Class Hierarchy. Search. ROOT; » MATH. Index of MATH. ; ROOT Math Work Package. Math: The ROOT Mathematical Libraries; The ROOT Math package consists of the following components:. MathCore: a self-consistent minimal set of tools required for the basic numerical computing.; It provides the major mathematical functions in the namespaces ROOT::Math and TMath,; classes for random number generators, TRandom, class for complex numbers, TComplex,; common interfaces for function evaluation and numerical algorithms. Basic implementations of some of the numerical algorithms such as integration or derivation, are as also provided by MathCore. Furthermore, classes required for fit the ROOT data objects (and also any data sets) are as well provided. MathMore: package incorporating advanced numerical functionality and dependent on external libraries like the GNU Scientific Library (GSL). It complements the MathCore library by providing a more complete sets of special mathematical functions and implementations of the numerical algorithms interfaces defined in MathCore using GSL. Minimization and Fitting Libraries: libraries required for numerical minimization and fitting. The minimization libraries include the numerical methods for solving the fitting problem by finding minimum of multi-dimensional function. The current common interface for fitting is class TVirtualFitter and implemented by derived classes in the minimization and fitting libraries. The fitting in ROOT is being re-organized and new fitting classes are present in MathCore for providing the fitting functionality and the use the minimization libraries via a new common interface (ROOT::Math::Minimizer). In detail the minimization libraries, implementing all the new and old minimization interface, include: . Minuit:library providing via a class TMinuit an implementation of the popular MINUIT minimization package. In addition the library contains also an implementation of the linear fitter (class TLinear",MatchSource.WIKI,root/html534/MATH_Index.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/MATH_Index.html
https://root.cern/root/html534/MATH_Index.html:1393,Integrability,interface,interface,1393," generators, TRandom, class for complex numbers, TComplex,; common interfaces for function evaluation and numerical algorithms. Basic implementations of some of the numerical algorithms such as integration or derivation, are as also provided by MathCore. Furthermore, classes required for fit the ROOT data objects (and also any data sets) are as well provided. MathMore: package incorporating advanced numerical functionality and dependent on external libraries like the GNU Scientific Library (GSL). It complements the MathCore library by providing a more complete sets of special mathematical functions and implementations of the numerical algorithms interfaces defined in MathCore using GSL. Minimization and Fitting Libraries: libraries required for numerical minimization and fitting. The minimization libraries include the numerical methods for solving the fitting problem by finding minimum of multi-dimensional function. The current common interface for fitting is class TVirtualFitter and implemented by derived classes in the minimization and fitting libraries. The fitting in ROOT is being re-organized and new fitting classes are present in MathCore for providing the fitting functionality and the use the minimization libraries via a new common interface (ROOT::Math::Minimizer). In detail the minimization libraries, implementing all the new and old minimization interface, include: . Minuit:library providing via a class TMinuit an implementation of the popular MINUIT minimization package. In addition the library contains also an implementation of the linear fitter (class TLinearFitter), for solving linear least square fits. . Minuit2: new object-oriented implementation of MINUIT, with the same minimization algorithms (such as Migrad or Simplex). In addition it provides a new implementation of the Fumili algorithm, a specialized method for finding the minimum of a standard least square or likelihood functions. ; Fumili: library providing the implementation of the original Fu",MatchSource.WIKI,root/html534/MATH_Index.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/MATH_Index.html
https://root.cern/root/html534/MATH_Index.html:1703,Integrability,interface,interface,1703,"hms such as integration or derivation, are as also provided by MathCore. Furthermore, classes required for fit the ROOT data objects (and also any data sets) are as well provided. MathMore: package incorporating advanced numerical functionality and dependent on external libraries like the GNU Scientific Library (GSL). It complements the MathCore library by providing a more complete sets of special mathematical functions and implementations of the numerical algorithms interfaces defined in MathCore using GSL. Minimization and Fitting Libraries: libraries required for numerical minimization and fitting. The minimization libraries include the numerical methods for solving the fitting problem by finding minimum of multi-dimensional function. The current common interface for fitting is class TVirtualFitter and implemented by derived classes in the minimization and fitting libraries. The fitting in ROOT is being re-organized and new fitting classes are present in MathCore for providing the fitting functionality and the use the minimization libraries via a new common interface (ROOT::Math::Minimizer). In detail the minimization libraries, implementing all the new and old minimization interface, include: . Minuit:library providing via a class TMinuit an implementation of the popular MINUIT minimization package. In addition the library contains also an implementation of the linear fitter (class TLinearFitter), for solving linear least square fits. . Minuit2: new object-oriented implementation of MINUIT, with the same minimization algorithms (such as Migrad or Simplex). In addition it provides a new implementation of the Fumili algorithm, a specialized method for finding the minimum of a standard least square or likelihood functions. ; Fumili: library providing the implementation of the original Fumili fitting algorithm. Linear algebra. Two libraries are contained in ROOT for describing linear algebra matrices and vector classes:. Matrix: general matrix package providing matri",MatchSource.WIKI,root/html534/MATH_Index.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/MATH_Index.html
https://root.cern/root/html534/MATH_Index.html:1822,Integrability,interface,interface,1822," well provided. MathMore: package incorporating advanced numerical functionality and dependent on external libraries like the GNU Scientific Library (GSL). It complements the MathCore library by providing a more complete sets of special mathematical functions and implementations of the numerical algorithms interfaces defined in MathCore using GSL. Minimization and Fitting Libraries: libraries required for numerical minimization and fitting. The minimization libraries include the numerical methods for solving the fitting problem by finding minimum of multi-dimensional function. The current common interface for fitting is class TVirtualFitter and implemented by derived classes in the minimization and fitting libraries. The fitting in ROOT is being re-organized and new fitting classes are present in MathCore for providing the fitting functionality and the use the minimization libraries via a new common interface (ROOT::Math::Minimizer). In detail the minimization libraries, implementing all the new and old minimization interface, include: . Minuit:library providing via a class TMinuit an implementation of the popular MINUIT minimization package. In addition the library contains also an implementation of the linear fitter (class TLinearFitter), for solving linear least square fits. . Minuit2: new object-oriented implementation of MINUIT, with the same minimization algorithms (such as Migrad or Simplex). In addition it provides a new implementation of the Fumili algorithm, a specialized method for finding the minimum of a standard least square or likelihood functions. ; Fumili: library providing the implementation of the original Fumili fitting algorithm. Linear algebra. Two libraries are contained in ROOT for describing linear algebra matrices and vector classes:. Matrix: general matrix package providing matrix TMatrix and vector TVector classes and the complete environment to perform linear algebra calculations, like equation solving and eigenvalue decompositions.; SMa",MatchSource.WIKI,root/html534/MATH_Index.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/MATH_Index.html
https://root.cern/root/html534/MATH_Index.html:3544,Integrability,integrat,integrator,3544," in ROOT for describing linear algebra matrices and vector classes:. Matrix: general matrix package providing matrix TMatrix and vector TVector classes and the complete environment to perform linear algebra calculations, like equation solving and eigenvalue decompositions.; SMatrix: package optimized for high performances matrix and vector computations of small and fixed size. It is based on expression templates to achieve an high level optimization. Physics Vectors: classes for describing vectors in 2, 3 and 4 dimensions (relativistic vectors) and their rotation and transformation algorithms. Two package exist in ROOT:. Physics: library with the TVector3 and TLorentzVector classes.; GenVector: new library providing generic class templates for modeling the vectors. Unuran: package with universal algorithms for generating non-uniform pseudo-random numbers, from a large classes of continuous or discrete distributions in one or multi-dimensions. ; Foam: multi-dimensional general purpose Monte Carlo event generator (and integrator). It generates randomly points (vectors) according to an arbitrary probability distribution in n dimensions.; FFTW: library with implementation of the fast Fourier transform (FFT) using the FFTW package. It requires a previous installation of (FFTW).; MLP: library with the neural network class, TMultiLayerPerceptron based on the NN algorithm from the mlpfit package.; Quadp: optimization library with linear and quadratic programming methods. It is based on the Matrix package.; Statistic classes for computing limits and confidence levels.; More detailed is provided here. Some of these classes are currently provided by libPhysics. Further information is available at the following links:. ROOT Mathematical Library Web page; ROOT Math doxygen class documentation; The Math chapter in the user guide; The Linear Algebra chapter in the user guide; The Physics Vector chapter in the user guide; Inventory of Math functions and algorithms. Last modified: T",MatchSource.WIKI,root/html534/MATH_Index.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/MATH_Index.html
https://root.cern/root/html534/MATH_Index.html:2696,Performance,perform,perform,2696,"ies via a new common interface (ROOT::Math::Minimizer). In detail the minimization libraries, implementing all the new and old minimization interface, include: . Minuit:library providing via a class TMinuit an implementation of the popular MINUIT minimization package. In addition the library contains also an implementation of the linear fitter (class TLinearFitter), for solving linear least square fits. . Minuit2: new object-oriented implementation of MINUIT, with the same minimization algorithms (such as Migrad or Simplex). In addition it provides a new implementation of the Fumili algorithm, a specialized method for finding the minimum of a standard least square or likelihood functions. ; Fumili: library providing the implementation of the original Fumili fitting algorithm. Linear algebra. Two libraries are contained in ROOT for describing linear algebra matrices and vector classes:. Matrix: general matrix package providing matrix TMatrix and vector TVector classes and the complete environment to perform linear algebra calculations, like equation solving and eigenvalue decompositions.; SMatrix: package optimized for high performances matrix and vector computations of small and fixed size. It is based on expression templates to achieve an high level optimization. Physics Vectors: classes for describing vectors in 2, 3 and 4 dimensions (relativistic vectors) and their rotation and transformation algorithms. Two package exist in ROOT:. Physics: library with the TVector3 and TLorentzVector classes.; GenVector: new library providing generic class templates for modeling the vectors. Unuran: package with universal algorithms for generating non-uniform pseudo-random numbers, from a large classes of continuous or discrete distributions in one or multi-dimensions. ; Foam: multi-dimensional general purpose Monte Carlo event generator (and integrator). It generates randomly points (vectors) according to an arbitrary probability distribution in n dimensions.; FFTW: library with",MatchSource.WIKI,root/html534/MATH_Index.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/MATH_Index.html
https://root.cern/root/html534/MATH_Index.html:2804,Performance,optimiz,optimized,2804,"de: . Minuit:library providing via a class TMinuit an implementation of the popular MINUIT minimization package. In addition the library contains also an implementation of the linear fitter (class TLinearFitter), for solving linear least square fits. . Minuit2: new object-oriented implementation of MINUIT, with the same minimization algorithms (such as Migrad or Simplex). In addition it provides a new implementation of the Fumili algorithm, a specialized method for finding the minimum of a standard least square or likelihood functions. ; Fumili: library providing the implementation of the original Fumili fitting algorithm. Linear algebra. Two libraries are contained in ROOT for describing linear algebra matrices and vector classes:. Matrix: general matrix package providing matrix TMatrix and vector TVector classes and the complete environment to perform linear algebra calculations, like equation solving and eigenvalue decompositions.; SMatrix: package optimized for high performances matrix and vector computations of small and fixed size. It is based on expression templates to achieve an high level optimization. Physics Vectors: classes for describing vectors in 2, 3 and 4 dimensions (relativistic vectors) and their rotation and transformation algorithms. Two package exist in ROOT:. Physics: library with the TVector3 and TLorentzVector classes.; GenVector: new library providing generic class templates for modeling the vectors. Unuran: package with universal algorithms for generating non-uniform pseudo-random numbers, from a large classes of continuous or discrete distributions in one or multi-dimensions. ; Foam: multi-dimensional general purpose Monte Carlo event generator (and integrator). It generates randomly points (vectors) according to an arbitrary probability distribution in n dimensions.; FFTW: library with implementation of the fast Fourier transform (FFT) using the FFTW package. It requires a previous installation of (FFTW).; MLP: library with the neural ne",MatchSource.WIKI,root/html534/MATH_Index.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/MATH_Index.html
https://root.cern/root/html534/MATH_Index.html:2823,Performance,perform,performances,2823,"de: . Minuit:library providing via a class TMinuit an implementation of the popular MINUIT minimization package. In addition the library contains also an implementation of the linear fitter (class TLinearFitter), for solving linear least square fits. . Minuit2: new object-oriented implementation of MINUIT, with the same minimization algorithms (such as Migrad or Simplex). In addition it provides a new implementation of the Fumili algorithm, a specialized method for finding the minimum of a standard least square or likelihood functions. ; Fumili: library providing the implementation of the original Fumili fitting algorithm. Linear algebra. Two libraries are contained in ROOT for describing linear algebra matrices and vector classes:. Matrix: general matrix package providing matrix TMatrix and vector TVector classes and the complete environment to perform linear algebra calculations, like equation solving and eigenvalue decompositions.; SMatrix: package optimized for high performances matrix and vector computations of small and fixed size. It is based on expression templates to achieve an high level optimization. Physics Vectors: classes for describing vectors in 2, 3 and 4 dimensions (relativistic vectors) and their rotation and transformation algorithms. Two package exist in ROOT:. Physics: library with the TVector3 and TLorentzVector classes.; GenVector: new library providing generic class templates for modeling the vectors. Unuran: package with universal algorithms for generating non-uniform pseudo-random numbers, from a large classes of continuous or discrete distributions in one or multi-dimensions. ; Foam: multi-dimensional general purpose Monte Carlo event generator (and integrator). It generates randomly points (vectors) according to an arbitrary probability distribution in n dimensions.; FFTW: library with implementation of the fast Fourier transform (FFT) using the FFTW package. It requires a previous installation of (FFTW).; MLP: library with the neural ne",MatchSource.WIKI,root/html534/MATH_Index.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/MATH_Index.html
https://root.cern/root/html534/MATH_Index.html:2953,Performance,optimiz,optimization,2953," minimization package. In addition the library contains also an implementation of the linear fitter (class TLinearFitter), for solving linear least square fits. . Minuit2: new object-oriented implementation of MINUIT, with the same minimization algorithms (such as Migrad or Simplex). In addition it provides a new implementation of the Fumili algorithm, a specialized method for finding the minimum of a standard least square or likelihood functions. ; Fumili: library providing the implementation of the original Fumili fitting algorithm. Linear algebra. Two libraries are contained in ROOT for describing linear algebra matrices and vector classes:. Matrix: general matrix package providing matrix TMatrix and vector TVector classes and the complete environment to perform linear algebra calculations, like equation solving and eigenvalue decompositions.; SMatrix: package optimized for high performances matrix and vector computations of small and fixed size. It is based on expression templates to achieve an high level optimization. Physics Vectors: classes for describing vectors in 2, 3 and 4 dimensions (relativistic vectors) and their rotation and transformation algorithms. Two package exist in ROOT:. Physics: library with the TVector3 and TLorentzVector classes.; GenVector: new library providing generic class templates for modeling the vectors. Unuran: package with universal algorithms for generating non-uniform pseudo-random numbers, from a large classes of continuous or discrete distributions in one or multi-dimensions. ; Foam: multi-dimensional general purpose Monte Carlo event generator (and integrator). It generates randomly points (vectors) according to an arbitrary probability distribution in n dimensions.; FFTW: library with implementation of the fast Fourier transform (FFT) using the FFTW package. It requires a previous installation of (FFTW).; MLP: library with the neural network class, TMultiLayerPerceptron based on the NN algorithm from the mlpfit package.; Quad",MatchSource.WIKI,root/html534/MATH_Index.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/MATH_Index.html
https://root.cern/root/html534/MATH_Index.html:3932,Performance,optimiz,optimization,3932,"ession templates to achieve an high level optimization. Physics Vectors: classes for describing vectors in 2, 3 and 4 dimensions (relativistic vectors) and their rotation and transformation algorithms. Two package exist in ROOT:. Physics: library with the TVector3 and TLorentzVector classes.; GenVector: new library providing generic class templates for modeling the vectors. Unuran: package with universal algorithms for generating non-uniform pseudo-random numbers, from a large classes of continuous or discrete distributions in one or multi-dimensions. ; Foam: multi-dimensional general purpose Monte Carlo event generator (and integrator). It generates randomly points (vectors) according to an arbitrary probability distribution in n dimensions.; FFTW: library with implementation of the fast Fourier transform (FFT) using the FFTW package. It requires a previous installation of (FFTW).; MLP: library with the neural network class, TMultiLayerPerceptron based on the NN algorithm from the mlpfit package.; Quadp: optimization library with linear and quadratic programming methods. It is based on the Matrix package.; Statistic classes for computing limits and confidence levels.; More detailed is provided here. Some of these classes are currently provided by libPhysics. Further information is available at the following links:. ROOT Mathematical Library Web page; ROOT Math doxygen class documentation; The Math chapter in the user guide; The Linear Algebra chapter in the user guide; The Physics Vector chapter in the user guide; Inventory of Math functions and algorithms. Last modified: Thu Mar 5 16:03:07 CET 2009 . ; MATH Modules; FFTW; FOAM; FUMILI; GENETIC; GENVECTOR; MATHCORE; MATHMORE; MATRIX; MINUIT; MINUIT2; MLP; PHYSICS; QUADP; SMATRIX; SPLOT; UNURAN. » Last changed: 2015-09-08 16:58 » Last generated: 2015-09-08 16:58; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/MATH_Index.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/MATH_Index.html
https://root.cern/root/html534/MATH_Index.html:2203,Usability,Simpl,Simplex,2203,"n and Fitting Libraries: libraries required for numerical minimization and fitting. The minimization libraries include the numerical methods for solving the fitting problem by finding minimum of multi-dimensional function. The current common interface for fitting is class TVirtualFitter and implemented by derived classes in the minimization and fitting libraries. The fitting in ROOT is being re-organized and new fitting classes are present in MathCore for providing the fitting functionality and the use the minimization libraries via a new common interface (ROOT::Math::Minimizer). In detail the minimization libraries, implementing all the new and old minimization interface, include: . Minuit:library providing via a class TMinuit an implementation of the popular MINUIT minimization package. In addition the library contains also an implementation of the linear fitter (class TLinearFitter), for solving linear least square fits. . Minuit2: new object-oriented implementation of MINUIT, with the same minimization algorithms (such as Migrad or Simplex). In addition it provides a new implementation of the Fumili algorithm, a specialized method for finding the minimum of a standard least square or likelihood functions. ; Fumili: library providing the implementation of the original Fumili fitting algorithm. Linear algebra. Two libraries are contained in ROOT for describing linear algebra matrices and vector classes:. Matrix: general matrix package providing matrix TMatrix and vector TVector classes and the complete environment to perform linear algebra calculations, like equation solving and eigenvalue decompositions.; SMatrix: package optimized for high performances matrix and vector computations of small and fixed size. It is based on expression templates to achieve an high level optimization. Physics Vectors: classes for describing vectors in 2, 3 and 4 dimensions (relativistic vectors) and their rotation and transformation algorithms. Two package exist in ROOT:. Physics: l",MatchSource.WIKI,root/html534/MATH_Index.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/MATH_Index.html
https://root.cern/root/html534/MATH_Index.html:4353,Usability,guid,guide,4353,"ession templates to achieve an high level optimization. Physics Vectors: classes for describing vectors in 2, 3 and 4 dimensions (relativistic vectors) and their rotation and transformation algorithms. Two package exist in ROOT:. Physics: library with the TVector3 and TLorentzVector classes.; GenVector: new library providing generic class templates for modeling the vectors. Unuran: package with universal algorithms for generating non-uniform pseudo-random numbers, from a large classes of continuous or discrete distributions in one or multi-dimensions. ; Foam: multi-dimensional general purpose Monte Carlo event generator (and integrator). It generates randomly points (vectors) according to an arbitrary probability distribution in n dimensions.; FFTW: library with implementation of the fast Fourier transform (FFT) using the FFTW package. It requires a previous installation of (FFTW).; MLP: library with the neural network class, TMultiLayerPerceptron based on the NN algorithm from the mlpfit package.; Quadp: optimization library with linear and quadratic programming methods. It is based on the Matrix package.; Statistic classes for computing limits and confidence levels.; More detailed is provided here. Some of these classes are currently provided by libPhysics. Further information is available at the following links:. ROOT Mathematical Library Web page; ROOT Math doxygen class documentation; The Math chapter in the user guide; The Linear Algebra chapter in the user guide; The Physics Vector chapter in the user guide; Inventory of Math functions and algorithms. Last modified: Thu Mar 5 16:03:07 CET 2009 . ; MATH Modules; FFTW; FOAM; FUMILI; GENETIC; GENVECTOR; MATHCORE; MATHMORE; MATRIX; MINUIT; MINUIT2; MLP; PHYSICS; QUADP; SMATRIX; SPLOT; UNURAN. » Last changed: 2015-09-08 16:58 » Last generated: 2015-09-08 16:58; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/MATH_Index.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/MATH_Index.html
https://root.cern/root/html534/MATH_Index.html:4399,Usability,guid,guide,4399,"ession templates to achieve an high level optimization. Physics Vectors: classes for describing vectors in 2, 3 and 4 dimensions (relativistic vectors) and their rotation and transformation algorithms. Two package exist in ROOT:. Physics: library with the TVector3 and TLorentzVector classes.; GenVector: new library providing generic class templates for modeling the vectors. Unuran: package with universal algorithms for generating non-uniform pseudo-random numbers, from a large classes of continuous or discrete distributions in one or multi-dimensions. ; Foam: multi-dimensional general purpose Monte Carlo event generator (and integrator). It generates randomly points (vectors) according to an arbitrary probability distribution in n dimensions.; FFTW: library with implementation of the fast Fourier transform (FFT) using the FFTW package. It requires a previous installation of (FFTW).; MLP: library with the neural network class, TMultiLayerPerceptron based on the NN algorithm from the mlpfit package.; Quadp: optimization library with linear and quadratic programming methods. It is based on the Matrix package.; Statistic classes for computing limits and confidence levels.; More detailed is provided here. Some of these classes are currently provided by libPhysics. Further information is available at the following links:. ROOT Mathematical Library Web page; ROOT Math doxygen class documentation; The Math chapter in the user guide; The Linear Algebra chapter in the user guide; The Physics Vector chapter in the user guide; Inventory of Math functions and algorithms. Last modified: Thu Mar 5 16:03:07 CET 2009 . ; MATH Modules; FFTW; FOAM; FUMILI; GENETIC; GENVECTOR; MATHCORE; MATHMORE; MATRIX; MINUIT; MINUIT2; MLP; PHYSICS; QUADP; SMATRIX; SPLOT; UNURAN. » Last changed: 2015-09-08 16:58 » Last generated: 2015-09-08 16:58; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/MATH_Index.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/MATH_Index.html
https://root.cern/root/html534/MATH_Index.html:4445,Usability,guid,guide,4445,"ession templates to achieve an high level optimization. Physics Vectors: classes for describing vectors in 2, 3 and 4 dimensions (relativistic vectors) and their rotation and transformation algorithms. Two package exist in ROOT:. Physics: library with the TVector3 and TLorentzVector classes.; GenVector: new library providing generic class templates for modeling the vectors. Unuran: package with universal algorithms for generating non-uniform pseudo-random numbers, from a large classes of continuous or discrete distributions in one or multi-dimensions. ; Foam: multi-dimensional general purpose Monte Carlo event generator (and integrator). It generates randomly points (vectors) according to an arbitrary probability distribution in n dimensions.; FFTW: library with implementation of the fast Fourier transform (FFT) using the FFTW package. It requires a previous installation of (FFTW).; MLP: library with the neural network class, TMultiLayerPerceptron based on the NN algorithm from the mlpfit package.; Quadp: optimization library with linear and quadratic programming methods. It is based on the Matrix package.; Statistic classes for computing limits and confidence levels.; More detailed is provided here. Some of these classes are currently provided by libPhysics. Further information is available at the following links:. ROOT Mathematical Library Web page; ROOT Math doxygen class documentation; The Math chapter in the user guide; The Linear Algebra chapter in the user guide; The Physics Vector chapter in the user guide; Inventory of Math functions and algorithms. Last modified: Thu Mar 5 16:03:07 CET 2009 . ; MATH Modules; FFTW; FOAM; FUMILI; GENETIC; GENVECTOR; MATHCORE; MATHMORE; MATRIX; MINUIT; MINUIT2; MLP; PHYSICS; QUADP; SMATRIX; SPLOT; UNURAN. » Last changed: 2015-09-08 16:58 » Last generated: 2015-09-08 16:58; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/MATH_Index.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/MATH_Index.html
https://root.cern/root/html534/MemInfo_t.html:296,Integrability,interface,interface,296,". MemInfo_t. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » MemInfo_t. class MemInfo_t. TSystem. Abstract base class defining a generic interface to the underlying; Operating System. Function Members (Methods); public:. MemInfo_t(); MemInfo_t(const MemInfo_t&); virtual~MemInfo_t(); static TClass*Class(); virtual TClass*IsA() const; MemInfo_t&operator=(const MemInfo_t&); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). Data Members; public:. Int_tfMemFreefree RAM in MB; Int_tfMemTotaltotal RAM in MB; Int_tfMemUsedused RAM in MB; Int_tfSwapFreefree swap in MB; Int_tfSwapTotaltotal swap in MB; Int_tfSwapUsedused swap in MB. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; MemInfo_t(); { }. virtual ~MemInfo_t(); { }. TSystem& operator=(const MemInfo_t& ). » Author: Fons Rademakers 15/09/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id$ » Last generated: 2015-09-08 16:58; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/MemInfo_t.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/MemInfo_t.html
https://root.cern/root/html534/MemInfo_t.html:890,Modifiability,Inherit,Inheritance,890,". MemInfo_t. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » MemInfo_t. class MemInfo_t. TSystem. Abstract base class defining a generic interface to the underlying; Operating System. Function Members (Methods); public:. MemInfo_t(); MemInfo_t(const MemInfo_t&); virtual~MemInfo_t(); static TClass*Class(); virtual TClass*IsA() const; MemInfo_t&operator=(const MemInfo_t&); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). Data Members; public:. Int_tfMemFreefree RAM in MB; Int_tfMemTotaltotal RAM in MB; Int_tfMemUsedused RAM in MB; Int_tfSwapFreefree swap in MB; Int_tfSwapTotaltotal swap in MB; Int_tfSwapUsedused swap in MB. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; MemInfo_t(); { }. virtual ~MemInfo_t(); { }. TSystem& operator=(const MemInfo_t& ). » Author: Fons Rademakers 15/09/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id$ » Last generated: 2015-09-08 16:58; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/MemInfo_t.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/MemInfo_t.html
https://root.cern/root/html534/MemInfo_t.html:903,Modifiability,Inherit,Inherited,903,". MemInfo_t. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » MemInfo_t. class MemInfo_t. TSystem. Abstract base class defining a generic interface to the underlying; Operating System. Function Members (Methods); public:. MemInfo_t(); MemInfo_t(const MemInfo_t&); virtual~MemInfo_t(); static TClass*Class(); virtual TClass*IsA() const; MemInfo_t&operator=(const MemInfo_t&); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). Data Members; public:. Int_tfMemFreefree RAM in MB; Int_tfMemTotaltotal RAM in MB; Int_tfMemUsedused RAM in MB; Int_tfSwapFreefree swap in MB; Int_tfSwapTotaltotal swap in MB; Int_tfSwapUsedused swap in MB. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; MemInfo_t(); { }. virtual ~MemInfo_t(); { }. TSystem& operator=(const MemInfo_t& ). » Author: Fons Rademakers 15/09/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id$ » Last generated: 2015-09-08 16:58; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/MemInfo_t.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/MemInfo_t.html
https://root.cern/root/html534/memstat__TMemStatMng.html:1193,Availability,Error,Error,1193," voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; static voidClose(); virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; voidDisable(); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; voidEnable(); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; static memstat::TMemStatMng*GetInstance(); virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObject",MatchSource.WIKI,root/html534/memstat__TMemStatMng.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/memstat__TMemStatMng.html
https://root.cern/root/html534/memstat__TMemStatMng.html:1322,Availability,error,error,1322," voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; static voidClose(); virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; voidDisable(); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; voidEnable(); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; static memstat::TMemStatMng*GetInstance(); virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObject",MatchSource.WIKI,root/html534/memstat__TMemStatMng.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/memstat__TMemStatMng.html
https://root.cern/root/html534/memstat__TMemStatMng.html:1406,Availability,error,error,1406,"const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; static voidClose(); virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; voidDisable(); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; voidEnable(); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; static memstat::TMemStatMng*GetInstance(); virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(c",MatchSource.WIKI,root/html534/memstat__TMemStatMng.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/memstat__TMemStatMng.html
https://root.cern/root/html534/memstat__TMemStatMng.html:5752,Energy Efficiency,monitor,monitoring,5752,"kPointers); voidInit(); static voidMacAllocHook(void* ptr, size_t size); static voidMacFreeHook(void* ptr); voidTObject::MakeZombie(). private:. (unknown)(); memstat::TMemStatMngTMemStatMng(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Double_tfBeginTimetime when monitoring starts; Int_tfBtIDback trace identifier; Int_t*fBufBtIDback trace identifier; Int_tfBufNcurrent number of alloc or free in the buffer; Int_t*fBufNBytesnumber of bytes allocated/freed; ULong64_t*fBufPosposition in memory where alloc/free happens; Int_t*fBufTimems10000*(current time - begin time); Int_tfBufferSizemax number of malloc/free to keep in the buffer; TFile*fDumpFile!file to dump current information; TTree*fDumpTree!tree to dump information; Int_t*fIndexarray to sort fBufPos; Int_tfMaxCallsmax number of malloc/frees to register in the output Tree; Bool_t*fMustWriteflag to write or not the entry; Int_tfNBytesnumber of bytes allocated/freed; ULong64_tfPosposition in memory where alloc/free happens; void*fPreviousFreeHook!old free function; void*fPreviousMallocHook!old malloc function; TTimeStampfTimeStamp; Int_tfTimems10000*(current time - begin time); Bool_tfUseGNUBuiltinBacktrace; static memstat::TMemStatMng*fgInstancepointer to instance; static void*fgStackTopstack top pointer. private:. memstat::TMemStatMng::CRCSet_tfBTChecksums; Int_tfBTCount; UInt_tfBTIDCount; memstat::TMemStatFAddrContainerfFAddrs; TObjArray*fFAddrsList; TH1I*fHbtids; TNamed*fSysInfo. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TMemStatMng(); Default constructor. void Init(); Initialize MemStat manager - used only by instance method. TMemStatMng* GetInstance(); GetInstance - a static function; Initialize a singleton of MemStat mana",MatchSource.WIKI,root/html534/memstat__TMemStatMng.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/memstat__TMemStatMng.html
https://root.cern/root/html534/memstat__TMemStatMng.html:5930,Energy Efficiency,allocate,allocated,5930,"kPointers); voidInit(); static voidMacAllocHook(void* ptr, size_t size); static voidMacFreeHook(void* ptr); voidTObject::MakeZombie(). private:. (unknown)(); memstat::TMemStatMngTMemStatMng(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Double_tfBeginTimetime when monitoring starts; Int_tfBtIDback trace identifier; Int_t*fBufBtIDback trace identifier; Int_tfBufNcurrent number of alloc or free in the buffer; Int_t*fBufNBytesnumber of bytes allocated/freed; ULong64_t*fBufPosposition in memory where alloc/free happens; Int_t*fBufTimems10000*(current time - begin time); Int_tfBufferSizemax number of malloc/free to keep in the buffer; TFile*fDumpFile!file to dump current information; TTree*fDumpTree!tree to dump information; Int_t*fIndexarray to sort fBufPos; Int_tfMaxCallsmax number of malloc/frees to register in the output Tree; Bool_t*fMustWriteflag to write or not the entry; Int_tfNBytesnumber of bytes allocated/freed; ULong64_tfPosposition in memory where alloc/free happens; void*fPreviousFreeHook!old free function; void*fPreviousMallocHook!old malloc function; TTimeStampfTimeStamp; Int_tfTimems10000*(current time - begin time); Bool_tfUseGNUBuiltinBacktrace; static memstat::TMemStatMng*fgInstancepointer to instance; static void*fgStackTopstack top pointer. private:. memstat::TMemStatMng::CRCSet_tfBTChecksums; Int_tfBTCount; UInt_tfBTIDCount; memstat::TMemStatFAddrContainerfFAddrs; TObjArray*fFAddrsList; TH1I*fHbtids; TNamed*fSysInfo. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TMemStatMng(); Default constructor. void Init(); Initialize MemStat manager - used only by instance method. TMemStatMng* GetInstance(); GetInstance - a static function; Initialize a singleton of MemStat mana",MatchSource.WIKI,root/html534/memstat__TMemStatMng.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/memstat__TMemStatMng.html
https://root.cern/root/html534/memstat__TMemStatMng.html:6402,Energy Efficiency,allocate,allocated,6402,"kPointers); voidInit(); static voidMacAllocHook(void* ptr, size_t size); static voidMacFreeHook(void* ptr); voidTObject::MakeZombie(). private:. (unknown)(); memstat::TMemStatMngTMemStatMng(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Double_tfBeginTimetime when monitoring starts; Int_tfBtIDback trace identifier; Int_t*fBufBtIDback trace identifier; Int_tfBufNcurrent number of alloc or free in the buffer; Int_t*fBufNBytesnumber of bytes allocated/freed; ULong64_t*fBufPosposition in memory where alloc/free happens; Int_t*fBufTimems10000*(current time - begin time); Int_tfBufferSizemax number of malloc/free to keep in the buffer; TFile*fDumpFile!file to dump current information; TTree*fDumpTree!tree to dump information; Int_t*fIndexarray to sort fBufPos; Int_tfMaxCallsmax number of malloc/frees to register in the output Tree; Bool_t*fMustWriteflag to write or not the entry; Int_tfNBytesnumber of bytes allocated/freed; ULong64_tfPosposition in memory where alloc/free happens; void*fPreviousFreeHook!old free function; void*fPreviousMallocHook!old malloc function; TTimeStampfTimeStamp; Int_tfTimems10000*(current time - begin time); Bool_tfUseGNUBuiltinBacktrace; static memstat::TMemStatMng*fgInstancepointer to instance; static void*fgStackTopstack top pointer. private:. memstat::TMemStatMng::CRCSet_tfBTChecksums; Int_tfBTCount; UInt_tfBTIDCount; memstat::TMemStatFAddrContainerfFAddrs; TObjArray*fFAddrsList; TH1I*fHbtids; TNamed*fSysInfo. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TMemStatMng(); Default constructor. void Init(); Initialize MemStat manager - used only by instance method. TMemStatMng* GetInstance(); GetInstance - a static function; Initialize a singleton of MemStat mana",MatchSource.WIKI,root/html534/memstat__TMemStatMng.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/memstat__TMemStatMng.html
https://root.cern/root/html534/memstat__TMemStatMng.html:7942,Energy Efficiency,allocate,allocated,7942,"ed*fSysInfo. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TMemStatMng(); Default constructor. void Init(); Initialize MemStat manager - used only by instance method. TMemStatMng* GetInstance(); GetInstance - a static function; Initialize a singleton of MemStat manager. void Close(); Close - a static function; This method stops the manager,; flashes all the buffered data and closes the output tree. void SetBufferSize(Int_t buffersize); Set the maximum number of alloc/free calls to be buffered.; if the alloc and free are in the buffer, the corresponding entries; are not saved tio the Tree, reducing considerably the Tree output size. void SetMaxCalls(Int_t maxcalls); Set the maximum number of new/delete registered in the output Tree. void Enable(); Enable memory hooks. void Disable(); Disble memory hooks. void MacAllocHook(void* ptr, size_t size); AllocHook - a static function; a special memory hook for Mac OS X memory zones.; Triggered when memory is allocated. void MacFreeHook(void* ptr); AllocHook - a static function; a special memory hook for Mac OS X memory zones.; Triggered when memory is deallocated. void * AllocHook(size_t size, const void* ); AllocHook - a static function; A glibc memory allocation hook. void FreeHook(void* ptr, const void* ); FreeHook - a static function; A glibc memory deallocation hook. Int_t generateBTID(UChar_t* CRCdigest, Int_t stackEntries, void** stackPointers); An internal function, which returns a bitid for a corresponding CRC digest; cache variables. void AddPointer(void* ptr, Int_t size); Add pointer to table.; This method is called every time when any of the hooks are triggered.; The memory de-/allocation information will is recorded. void FillTree(); loop on all entries in the buffer and fill the output Tree; entries with alloc and free in the buffer are eliminated. TMemStatMng(). void SetUseGNUBuiltinBacktrace(Bool_t newVal); stack data members. » Author: Anar Manafov (A.Manafov@gsi.d",MatchSource.WIKI,root/html534/memstat__TMemStatMng.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/memstat__TMemStatMng.html
https://root.cern/root/html534/memstat__TMemStatMng.html:2329,Modifiability,Inherit,InheritsFrom,2329,"irtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; static memstat::TMemStatMng*GetInstance(); virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TOb",MatchSource.WIKI,root/html534/memstat__TMemStatMng.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/memstat__TMemStatMng.html
https://root.cern/root/html534/memstat__TMemStatMng.html:2395,Modifiability,Inherit,InheritsFrom,2395,"t_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; static memstat::TMemStatMng*GetInstance(); virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); memstat::TMemStatMng&op",MatchSource.WIKI,root/html534/memstat__TMemStatMng.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/memstat__TMemStatMng.html
https://root.cern/root/html534/memstat__TMemStatMng.html:6960,Modifiability,Inherit,Inheritance,6960,"ere alloc/free happens; Int_t*fBufTimems10000*(current time - begin time); Int_tfBufferSizemax number of malloc/free to keep in the buffer; TFile*fDumpFile!file to dump current information; TTree*fDumpTree!tree to dump information; Int_t*fIndexarray to sort fBufPos; Int_tfMaxCallsmax number of malloc/frees to register in the output Tree; Bool_t*fMustWriteflag to write or not the entry; Int_tfNBytesnumber of bytes allocated/freed; ULong64_tfPosposition in memory where alloc/free happens; void*fPreviousFreeHook!old free function; void*fPreviousMallocHook!old malloc function; TTimeStampfTimeStamp; Int_tfTimems10000*(current time - begin time); Bool_tfUseGNUBuiltinBacktrace; static memstat::TMemStatMng*fgInstancepointer to instance; static void*fgStackTopstack top pointer. private:. memstat::TMemStatMng::CRCSet_tfBTChecksums; Int_tfBTCount; UInt_tfBTIDCount; memstat::TMemStatFAddrContainerfFAddrs; TObjArray*fFAddrsList; TH1I*fHbtids; TNamed*fSysInfo. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TMemStatMng(); Default constructor. void Init(); Initialize MemStat manager - used only by instance method. TMemStatMng* GetInstance(); GetInstance - a static function; Initialize a singleton of MemStat manager. void Close(); Close - a static function; This method stops the manager,; flashes all the buffered data and closes the output tree. void SetBufferSize(Int_t buffersize); Set the maximum number of alloc/free calls to be buffered.; if the alloc and free are in the buffer, the corresponding entries; are not saved tio the Tree, reducing considerably the Tree output size. void SetMaxCalls(Int_t maxcalls); Set the maximum number of new/delete registered in the output Tree. void Enable(); Enable memory hooks. void Disable(); Disble memory hooks. void MacAllocHook(void* ptr, size_t size); AllocHook - a static function; a special memory hook for Mac OS X memory zones.; Triggered when memory is allocated. void MacFreeHook(void* ptr); Allo",MatchSource.WIKI,root/html534/memstat__TMemStatMng.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/memstat__TMemStatMng.html
https://root.cern/root/html534/memstat__TMemStatMng.html:6973,Modifiability,Inherit,Inherited,6973,"ere alloc/free happens; Int_t*fBufTimems10000*(current time - begin time); Int_tfBufferSizemax number of malloc/free to keep in the buffer; TFile*fDumpFile!file to dump current information; TTree*fDumpTree!tree to dump information; Int_t*fIndexarray to sort fBufPos; Int_tfMaxCallsmax number of malloc/frees to register in the output Tree; Bool_t*fMustWriteflag to write or not the entry; Int_tfNBytesnumber of bytes allocated/freed; ULong64_tfPosposition in memory where alloc/free happens; void*fPreviousFreeHook!old free function; void*fPreviousMallocHook!old malloc function; TTimeStampfTimeStamp; Int_tfTimems10000*(current time - begin time); Bool_tfUseGNUBuiltinBacktrace; static memstat::TMemStatMng*fgInstancepointer to instance; static void*fgStackTopstack top pointer. private:. memstat::TMemStatMng::CRCSet_tfBTChecksums; Int_tfBTCount; UInt_tfBTIDCount; memstat::TMemStatFAddrContainerfFAddrs; TObjArray*fFAddrsList; TH1I*fHbtids; TNamed*fSysInfo. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TMemStatMng(); Default constructor. void Init(); Initialize MemStat manager - used only by instance method. TMemStatMng* GetInstance(); GetInstance - a static function; Initialize a singleton of MemStat manager. void Close(); Close - a static function; This method stops the manager,; flashes all the buffered data and closes the output tree. void SetBufferSize(Int_t buffersize); Set the maximum number of alloc/free calls to be buffered.; if the alloc and free are in the buffer, the corresponding entries; are not saved tio the Tree, reducing considerably the Tree output size. void SetMaxCalls(Int_t maxcalls); Set the maximum number of new/delete registered in the output Tree. void Enable(); Enable memory hooks. void Disable(); Disble memory hooks. void MacAllocHook(void* ptr, size_t size); AllocHook - a static function; a special memory hook for Mac OS X memory zones.; Triggered when memory is allocated. void MacFreeHook(void* ptr); Allo",MatchSource.WIKI,root/html534/memstat__TMemStatMng.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/memstat__TMemStatMng.html
https://root.cern/root/html534/memstat__TMemStatMng.html:8477,Modifiability,variab,variables,8477,"mStat manager. void Close(); Close - a static function; This method stops the manager,; flashes all the buffered data and closes the output tree. void SetBufferSize(Int_t buffersize); Set the maximum number of alloc/free calls to be buffered.; if the alloc and free are in the buffer, the corresponding entries; are not saved tio the Tree, reducing considerably the Tree output size. void SetMaxCalls(Int_t maxcalls); Set the maximum number of new/delete registered in the output Tree. void Enable(); Enable memory hooks. void Disable(); Disble memory hooks. void MacAllocHook(void* ptr, size_t size); AllocHook - a static function; a special memory hook for Mac OS X memory zones.; Triggered when memory is allocated. void MacFreeHook(void* ptr); AllocHook - a static function; a special memory hook for Mac OS X memory zones.; Triggered when memory is deallocated. void * AllocHook(size_t size, const void* ); AllocHook - a static function; A glibc memory allocation hook. void FreeHook(void* ptr, const void* ); FreeHook - a static function; A glibc memory deallocation hook. Int_t generateBTID(UChar_t* CRCdigest, Int_t stackEntries, void** stackPointers); An internal function, which returns a bitid for a corresponding CRC digest; cache variables. void AddPointer(void* ptr, Int_t size); Add pointer to table.; This method is called every time when any of the hooks are triggered.; The memory de-/allocation information will is recorded. void FillTree(); loop on all entries in the buffer and fill the output Tree; entries with alloc and free in the buffer are eliminated. TMemStatMng(). void SetUseGNUBuiltinBacktrace(Bool_t newVal); stack data members. » Author: Anar Manafov (A.Manafov@gsi.de) 2008-03-02 » Copyright (C) 1995-2010, Rene Brun and Fons Rademakers. *; » Last changed: root/memstat:$Id$ » Last generated: 2015-03-15 16:41; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/memstat__TMemStatMng.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/memstat__TMemStatMng.html
https://root.cern/root/html534/memstat__TMemStatMng.html:8471,Performance,cache,cache,8471,"mStat manager. void Close(); Close - a static function; This method stops the manager,; flashes all the buffered data and closes the output tree. void SetBufferSize(Int_t buffersize); Set the maximum number of alloc/free calls to be buffered.; if the alloc and free are in the buffer, the corresponding entries; are not saved tio the Tree, reducing considerably the Tree output size. void SetMaxCalls(Int_t maxcalls); Set the maximum number of new/delete registered in the output Tree. void Enable(); Enable memory hooks. void Disable(); Disble memory hooks. void MacAllocHook(void* ptr, size_t size); AllocHook - a static function; a special memory hook for Mac OS X memory zones.; Triggered when memory is allocated. void MacFreeHook(void* ptr); AllocHook - a static function; a special memory hook for Mac OS X memory zones.; Triggered when memory is deallocated. void * AllocHook(size_t size, const void* ); AllocHook - a static function; A glibc memory allocation hook. void FreeHook(void* ptr, const void* ); FreeHook - a static function; A glibc memory deallocation hook. Int_t generateBTID(UChar_t* CRCdigest, Int_t stackEntries, void** stackPointers); An internal function, which returns a bitid for a corresponding CRC digest; cache variables. void AddPointer(void* ptr, Int_t size); Add pointer to table.; This method is called every time when any of the hooks are triggered.; The memory de-/allocation information will is recorded. void FillTree(); loop on all entries in the buffer and fill the output Tree; entries with alloc and free in the buffer are eliminated. TMemStatMng(). void SetUseGNUBuiltinBacktrace(Bool_t newVal); stack data members. » Author: Anar Manafov (A.Manafov@gsi.de) 2008-03-02 » Copyright (C) 1995-2010, Rene Brun and Fons Rademakers. *; » Last changed: root/memstat:$Id$ » Last generated: 2015-03-15 16:41; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/memstat__TMemStatMng.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/memstat__TMemStatMng.html
https://root.cern/root/html534/memstat__TMemStatMng.html:2219,Security,Hash,Hash,2219,"nst char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; static memstat::TMemStatMng*GetInstance(); virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator ",MatchSource.WIKI,root/html534/memstat__TMemStatMng.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/memstat__TMemStatMng.html
https://root.cern/root/html534/memstat__TMemStatMng.html:4490,Testability,Test,TestBit,4490,"ar* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); memstat::TMemStatMng&operator=(const memstat::TMemStatMng&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidSetBufferSize(Int_t buffersize); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidSetMaxCalls(Int_t maxcalls); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); voidSetUseGNUBuiltinBacktrace(Bool_t newVal); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; memstat::TMemStatMngTMemStatMng(const memstat::TMemStatMng&); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root/html534/memstat__TMemStatMng.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/memstat__TMemStatMng.html
https://root.cern/root/html534/memstat__TMemStatMng.html:4529,Testability,Test,TestBits,4529,"ar* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); memstat::TMemStatMng&operator=(const memstat::TMemStatMng&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidSetBufferSize(Int_t buffersize); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidSetMaxCalls(Int_t maxcalls); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); voidSetUseGNUBuiltinBacktrace(Bool_t newVal); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; memstat::TMemStatMngTMemStatMng(const memstat::TMemStatMng&); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root/html534/memstat__TMemStatMng.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/memstat__TMemStatMng.html
https://root.cern/root/html534/memstat__TMemStatMng.html:604,Usability,Clear,Clear,604," voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; static voidClose(); virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; voidDisable(); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; voidEnable(); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; static memstat::TMemStatMng*GetInstance(); virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObject",MatchSource.WIKI,root/html534/memstat__TMemStatMng.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/memstat__TMemStatMng.html
https://root.cern/root/html534/ParamHistFunc.html:10196,Availability,Error,Error,10196,,MatchSource.WIKI,root/html534/ParamHistFunc.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ParamHistFunc.html
https://root.cern/root/html534/ParamHistFunc.html:10329,Availability,Error,ErrorLoggingModeRooAbsReal,10329,,MatchSource.WIKI,root/html534/ParamHistFunc.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ParamHistFunc.html
https://root.cern/root/html534/ParamHistFunc.html:10457,Availability,error,error,10457,,MatchSource.WIKI,root/html534/ParamHistFunc.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ParamHistFunc.html
https://root.cern/root/html534/ParamHistFunc.html:10541,Availability,error,error,10541,,MatchSource.WIKI,root/html534/ParamHistFunc.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ParamHistFunc.html
https://root.cern/root/html534/ParamHistFunc.html:24604,Availability,Error,ErrorLoggingMode,24604,"oAbsArg& newServer, Bool_t valueProp, Bool_t shapeProp); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); TIterator*RooAbsArg::serverIterator() const; RooFIterRooAbsArg::serverMIterator() const; virtual voidRooAbsArg::serverNameChangeHook(const RooAbsArg*, const RooAbsArg*); voidRooAbsArg::setAttribute(const Text_t* name, Bool_t value = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidRooAbsArg::setCacheAndTrackHints(RooArgSet&); static voidRooAbsReal::setCacheCheck(Bool_t flag); voidsetConstant(bool constant); virtual Bool_tRooAbsReal::setData(RooAbsData&, Bool_t = kTRUE); static voidRooAbsArg::setDirtyInhibit(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidRooAbsReal::setEvalErrorLoggingMode(RooAbsReal::ErrorLoggingMode m); virtual voidRooAbsArg::setExpensiveObjectCache(RooExpensiveObjectCache& cache); static voidRooAbsReal::setHideOffset(Bool_t flag); voidRooAbsReal::setIntegratorConfig(); voidRooAbsReal::setIntegratorConfig(const RooNumIntConfig& config); voidRooAbsArg::setLocalNoDirtyInhibit(Bool_t flag) const; virtual voidRooAbsArg::SetName(const char* name); virtual voidRooAbsArg::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsArg::setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); voidsetParamConst(Int_t, Bool_t = kTRUE); voidRooAbsReal::setParameterizeIntegral(const RooArgSet& paramVars); voidRooAbsReal::setPlotLabel(const char* label); voidRooAbsArg::setProhibitServerRedirect(Bool_t flag); voidsetShape(TH1* shape); voidRooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsArg::setTrans",MatchSource.WIKI,root/html534/ParamHistFunc.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ParamHistFunc.html
https://root.cern/root/html534/ParamHistFunc.html:31751,Availability,Error,ErrorLoggingMode,31751,"tProxyNormSet(const RooArgSet* nset); voidRooAbsArg::setShapeDirty(const RooAbsArg* source) const; virtual voidRooAbsReal::setTreeBranchStatus(TTree& t, Bool_t active); voidRooAbsArg::setValueDirty(const RooAbsArg* source) const; virtual voidRooAbsReal::syncCache(const RooArgSet* set = 0); Double_tRooAbsReal::traceEval(const RooArgSet* set) const; virtual Bool_tRooAbsReal::traceEvalHook(Double_t) const; voidRooAbsArg::unRegisterProxy(RooArgProxy& proxy); voidRooAbsArg::unRegisterProxy(RooSetProxy& proxy); voidRooAbsArg::unRegisterProxy(RooListProxy& proxy). Data Members; public:. enum RooAbsReal::ScaleType { Raw; Relative; NumEvent; RelativeExpected; };; enum RooAbsReal::ErrorLoggingMode { PrintErrors; CollectErrors; CountErrors; Ignore; };; enum RooAbsArg::ConstOpCode { Activate; DeActivate; ConfigChange; ValueChange; };; enum RooAbsArg::CacheMode { Always; NotAdvised; Never; };; enum RooAbsArg::OperMode { Auto; AClean; ADirty; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };; enum RooPrintable::ContentsOption { kName; kClassName; kValue; kArgs; kExtras; kAddress; kTitle; kCollectionHeader; };; enum RooPrintable::StyleOption { kInline; kSingleLine; kStandard; kVerbose; kTreeStructure; };. public:. static map<RooAbsArg*,TRefArray*>RooAbsArg::_ioEvoListtemporary holding list for proxies needed in schema evolution ; static stack<RooAbsArg*>RooAbsArg::_ioReadStackreading stack ; static const UInt_tRooAbsArg::fnv1a32start; static const ULong64_tRooAbsArg::fnv1a64start. protected:. map<Int_t,Int_t>_binMap; set<std::string>RooAbsArg::_boolAttribBoolean attributes; set<std::string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); Bool_tRooAbsReal::_boolValue! Transient cache for bool values from tree branches ; UChar_tRooAbsReal::_byteVa",MatchSource.WIKI,root/html534/ParamHistFunc.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ParamHistFunc.html
https://root.cern/root/html534/ParamHistFunc.html:34158,Deployability,integrat,integration,34158,"Arg::_boolAttribBoolean attributes; set<std::string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); Bool_tRooAbsReal::_boolValue! Transient cache for bool values from tree branches ; UChar_tRooAbsReal::_byteValue! Transient cache for byte values from tree branches ; static Bool_tRooAbsReal::_cacheCheckIf true, always validate contents of clean which outcome of evaluate(); deque<RooAbsCache*>RooAbsArg::_cacheListlist of caches; RooRefCountListRooAbsArg::_clientListlist of client objects; RooRefCountListRooAbsArg::_clientListShapesubset of clients that requested shape dirty flag propagation; RooRefCountListRooAbsArg::_clientListValuesubset of clients that requested value dirty flag propagation; TIterator*RooAbsArg::_clientShapeIter! Iterator over _clientListShape ; TIterator*RooAbsArg::_clientValueIter! Iterator over _clientListValue ; RooDataHist_dataSet; RooListProxy_dataVarsThe RooRealVars; Bool_tRooAbsArg::_deleteWatch! Delete watch flag ; RooExpensiveObjectCache*RooAbsArg::_eocachePointer to global cache manager for any expensive components created by this object; Bool_tRooAbsArg::_fastAllow fast access mode in getVal() and proxies; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsReal::_hideOffsetOffset hiding flag; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; Bool_tRooAbsArg::_isConstant! Cached isConstant status ; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist.",MatchSource.WIKI,root/html534/ParamHistFunc.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ParamHistFunc.html
https://root.cern/root/html534/ParamHistFunc.html:34926,Deployability,integrat,integration,34926,"_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist. Pointer to global instance of string that matches object named; RooObjCacheManager_normIntMgrThe integration cache manager; Int_t_numBins; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; RooArgList_ownedListList of owned components; RooListProxy_paramSetinterpolation parameters; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ParamHistFunc(). ParamHistFunc(const char* name, const char* title,",MatchSource.WIKI,root/html534/ParamHistFunc.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ParamHistFunc.html
https://root.cern/root/html534/ParamHistFunc.html:35867,Deployability,integrat,integrator,35867,"_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist. Pointer to global instance of string that matches object named; RooObjCacheManager_normIntMgrThe integration cache manager; Int_t_numBins; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; RooArgList_ownedListList of owned components; RooListProxy_paramSetinterpolation parameters; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ParamHistFunc(). ParamHistFunc(const char* name, const char* title,",MatchSource.WIKI,root/html534/ParamHistFunc.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ParamHistFunc.html
https://root.cern/root/html534/ParamHistFunc.html:35878,Deployability,configurat,configuration,35878,"_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist. Pointer to global instance of string that matches object named; RooObjCacheManager_normIntMgrThe integration cache manager; Int_t_numBins; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; RooArgList_ownedListList of owned components; RooListProxy_paramSetinterpolation parameters; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ParamHistFunc(). ParamHistFunc(const char* name, const char* title,",MatchSource.WIKI,root/html534/ParamHistFunc.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ParamHistFunc.html
https://root.cern/root/html534/ParamHistFunc.html:39146,Deployability,integrat,integrations,39146,"(ie, we create one parameter; per observable in vars and per bin in each observable); Store them in a list using:; _paramSet.add( createParamSet() );; This list is stored in the ""TH1"" index order; Get the number of bins; in the nominal histogram; We also set the parameters to have nominal min and max values. RooArgList createParamSet(const string& , Int_t , Double_t , Double_t ); Create the list of RooRealVar; parameters which represent the; height of the histogram bins.; Store them in a list; _paramSet.add( createParamSet() );; Get the number of bins; in the nominal histogram. Int_t addVarSet(const RooArgList& vars). Int_t addParamSet(const RooArgList& params). Double_t evaluate() const. Int_t getAnalyticalIntegralWN(RooArgSet& allVars, RooArgSet& analVars, const RooArgSet* normSet, const char* rangeName = 0) const; Advertise that all integrals can be handled internally. Double_t analyticalIntegralWN(Int_t code, const RooArgSet* normSet, const char* rangeName = 0) const; Implement analytical integrations by doing appropriate weighting from component integrals; functions to integrators of components. std::list<Double_t>* plotSamplingHint(RooAbsRealLValue& obs, Double_t xlo, Double_t xhi) const; Return sampling hint for making curves of (projections) of this function; as the recursive division strategy of RooCurve cannot deal efficiently; with the vertical lines that occur in a non-interpolated histogram. std::list<Double_t>* binBoundaries(RooAbsRealLValue& , Double_t , Double_t ) const; Return sampling hint for making curves of (projections) of this function; as the recursive division strategy of RooCurve cannot deal efficiently; with the vertical lines that occur in a non-interpolated histogram. TObject* clone(const char* newname) const; { return new ParamHistFunc(*this, newname); }. const RooArgList& paramList() const; { return _paramSet ; }. Int_t numBins() const; { return _dataSet.numEntries(); }. const RooArgSet* get(Int_t masterIdx) const; { return _dataSet.get",MatchSource.WIKI,root/html534/ParamHistFunc.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ParamHistFunc.html
https://root.cern/root/html534/ParamHistFunc.html:39229,Deployability,integrat,integrators,39229,"(ie, we create one parameter; per observable in vars and per bin in each observable); Store them in a list using:; _paramSet.add( createParamSet() );; This list is stored in the ""TH1"" index order; Get the number of bins; in the nominal histogram; We also set the parameters to have nominal min and max values. RooArgList createParamSet(const string& , Int_t , Double_t , Double_t ); Create the list of RooRealVar; parameters which represent the; height of the histogram bins.; Store them in a list; _paramSet.add( createParamSet() );; Get the number of bins; in the nominal histogram. Int_t addVarSet(const RooArgList& vars). Int_t addParamSet(const RooArgList& params). Double_t evaluate() const. Int_t getAnalyticalIntegralWN(RooArgSet& allVars, RooArgSet& analVars, const RooArgSet* normSet, const char* rangeName = 0) const; Advertise that all integrals can be handled internally. Double_t analyticalIntegralWN(Int_t code, const RooArgSet* normSet, const char* rangeName = 0) const; Implement analytical integrations by doing appropriate weighting from component integrals; functions to integrators of components. std::list<Double_t>* plotSamplingHint(RooAbsRealLValue& obs, Double_t xlo, Double_t xhi) const; Return sampling hint for making curves of (projections) of this function; as the recursive division strategy of RooCurve cannot deal efficiently; with the vertical lines that occur in a non-interpolated histogram. std::list<Double_t>* binBoundaries(RooAbsRealLValue& , Double_t , Double_t ) const; Return sampling hint for making curves of (projections) of this function; as the recursive division strategy of RooCurve cannot deal efficiently; with the vertical lines that occur in a non-interpolated histogram. TObject* clone(const char* newname) const; { return new ParamHistFunc(*this, newname); }. const RooArgList& paramList() const; { return _paramSet ; }. Int_t numBins() const; { return _dataSet.numEntries(); }. const RooArgSet* get(Int_t masterIdx) const; { return _dataSet.get",MatchSource.WIKI,root/html534/ParamHistFunc.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ParamHistFunc.html
https://root.cern/root/html534/ParamHistFunc.html:39485,Energy Efficiency,efficient,efficiently,39485,"s to have nominal min and max values. RooArgList createParamSet(const string& , Int_t , Double_t , Double_t ); Create the list of RooRealVar; parameters which represent the; height of the histogram bins.; Store them in a list; _paramSet.add( createParamSet() );; Get the number of bins; in the nominal histogram. Int_t addVarSet(const RooArgList& vars). Int_t addParamSet(const RooArgList& params). Double_t evaluate() const. Int_t getAnalyticalIntegralWN(RooArgSet& allVars, RooArgSet& analVars, const RooArgSet* normSet, const char* rangeName = 0) const; Advertise that all integrals can be handled internally. Double_t analyticalIntegralWN(Int_t code, const RooArgSet* normSet, const char* rangeName = 0) const; Implement analytical integrations by doing appropriate weighting from component integrals; functions to integrators of components. std::list<Double_t>* plotSamplingHint(RooAbsRealLValue& obs, Double_t xlo, Double_t xhi) const; Return sampling hint for making curves of (projections) of this function; as the recursive division strategy of RooCurve cannot deal efficiently; with the vertical lines that occur in a non-interpolated histogram. std::list<Double_t>* binBoundaries(RooAbsRealLValue& , Double_t , Double_t ) const; Return sampling hint for making curves of (projections) of this function; as the recursive division strategy of RooCurve cannot deal efficiently; with the vertical lines that occur in a non-interpolated histogram. TObject* clone(const char* newname) const; { return new ParamHistFunc(*this, newname); }. const RooArgList& paramList() const; { return _paramSet ; }. Int_t numBins() const; { return _dataSet.numEntries(); }. const RooArgSet* get(Int_t masterIdx) const; { return _dataSet.get( masterIdx ) ; }. const RooArgSet* get(const RooArgSet& coord) const; { return _dataSet.get( coord ) ; }. double binVolume() const; { return _dataSet.binVolume(); }. Bool_t forceAnalyticalInt(const RooAbsArg& ) const; { return kTRUE ; }. Bool_t isBinnedDistribution(cons",MatchSource.WIKI,root/html534/ParamHistFunc.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ParamHistFunc.html
https://root.cern/root/html534/ParamHistFunc.html:39783,Energy Efficiency,efficient,efficiently,39783,"stogram. Int_t addVarSet(const RooArgList& vars). Int_t addParamSet(const RooArgList& params). Double_t evaluate() const. Int_t getAnalyticalIntegralWN(RooArgSet& allVars, RooArgSet& analVars, const RooArgSet* normSet, const char* rangeName = 0) const; Advertise that all integrals can be handled internally. Double_t analyticalIntegralWN(Int_t code, const RooArgSet* normSet, const char* rangeName = 0) const; Implement analytical integrations by doing appropriate weighting from component integrals; functions to integrators of components. std::list<Double_t>* plotSamplingHint(RooAbsRealLValue& obs, Double_t xlo, Double_t xhi) const; Return sampling hint for making curves of (projections) of this function; as the recursive division strategy of RooCurve cannot deal efficiently; with the vertical lines that occur in a non-interpolated histogram. std::list<Double_t>* binBoundaries(RooAbsRealLValue& , Double_t , Double_t ) const; Return sampling hint for making curves of (projections) of this function; as the recursive division strategy of RooCurve cannot deal efficiently; with the vertical lines that occur in a non-interpolated histogram. TObject* clone(const char* newname) const; { return new ParamHistFunc(*this, newname); }. const RooArgList& paramList() const; { return _paramSet ; }. Int_t numBins() const; { return _dataSet.numEntries(); }. const RooArgSet* get(Int_t masterIdx) const; { return _dataSet.get( masterIdx ) ; }. const RooArgSet* get(const RooArgSet& coord) const; { return _dataSet.get( coord ) ; }. double binVolume() const; { return _dataSet.binVolume(); }. Bool_t forceAnalyticalInt(const RooAbsArg& ) const; { return kTRUE ; }. Bool_t isBinnedDistribution(const RooArgSet& ) const; {return kTRUE;}. » Author: George Lewis, Kyle Cranmer » Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; » Last changed: root/roostats:$Id: cranmer $ » Last generated: 2015-03-10 17:09; This page has been automatically generated. For comments or suggestions regarding the ",MatchSource.WIKI,root/html534/ParamHistFunc.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ParamHistFunc.html
https://root.cern/root/html534/ParamHistFunc.html:7786,Integrability,depend,dependentVars,7786," arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()) const; RooAbsReal*RooAbsReal::createIntRI(const RooArgSet& iset, const RooArgSet& nset = RooArgSet()); static RooArgListcreateParamSet(RooWorkspace& w, const string&, const RooArgList& Vars); static RooArgListcreateParamSet(const string&, Int_t, Double_t, Double_t); static RooArgListcreateParamSet(RooWorkspace& w, const string&, const RooArgList& Vars, Double_t, Double_t); const RooAbsReal*RooAbsReal::createPlotProjection(const RooArgSet& depVars, const RooArgSet& projVars) const; const RooAbsReal*RooAbsReal::createPlotProjection(const RooArgSet& depVars, const RooArgSet& projVars, RooArgSet*& cloneSet) const; const RooAbsReal*RooAbsReal::createPlotProjection(const RooArgSet& dependentVars, const RooArgSet* projectedVars, RooArgSet*& cloneSet, const char* rangeName = 0, const RooArgSet* condObs = 0) const; virtual RooAbsReal*RooAbsReal::createProfile(const RooArgSet& paramsOfInterest); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooArgSet& nset = RooArgSet()); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); RooAbsReal*RooAbsReal::createScanRI(const RooArgSet& iset, const RooArgSet& nset, Int_t numScanBins, Int_t intOrder); virtual Double_tRooAbsReal::defaultErrorLevel() const; static RooNumIntConfig*RooAbsReal::defaultIntegratorConfig(); virtual Int_tRooAbsArg::defaultPrintContents(Option_t* opt)",MatchSource.WIKI,root/html534/ParamHistFunc.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ParamHistFunc.html
https://root.cern/root/html534/ParamHistFunc.html:9028,Integrability,depend,dependentOverlaps,9028,"l*RooAbsReal::createPlotProjection(const RooArgSet& dependentVars, const RooArgSet* projectedVars, RooArgSet*& cloneSet, const char* rangeName = 0, const RooArgSet* condObs = 0) const; virtual RooAbsReal*RooAbsReal::createProfile(const RooArgSet& paramsOfInterest); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooArgSet& nset = RooArgSet()); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); RooAbsReal*RooAbsReal::createScanRI(const RooArgSet& iset, const RooArgSet& nset, Int_t numScanBins, Int_t intOrder); virtual Double_tRooAbsReal::defaultErrorLevel() const; static RooNumIntConfig*RooAbsReal::defaultIntegratorConfig(); virtual Int_tRooAbsArg::defaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooPrintable::defaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Bool_tRooAbsArg::dependentOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependentOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependsOn(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOn(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0) const; RooDerivative*RooAbsReal::derivative(RooRealVar& obs, Int_t order = 1, Double_t eps = 0.",MatchSource.WIKI,root/html534/ParamHistFunc.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ParamHistFunc.html
https://root.cern/root/html534/ParamHistFunc.html:9120,Integrability,depend,dependentOverlaps,9120,"l*RooAbsReal::createPlotProjection(const RooArgSet& dependentVars, const RooArgSet* projectedVars, RooArgSet*& cloneSet, const char* rangeName = 0, const RooArgSet* condObs = 0) const; virtual RooAbsReal*RooAbsReal::createProfile(const RooArgSet& paramsOfInterest); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooArgSet& nset = RooArgSet()); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); RooAbsReal*RooAbsReal::createScanRI(const RooArgSet& iset, const RooArgSet& nset, Int_t numScanBins, Int_t intOrder); virtual Double_tRooAbsReal::defaultErrorLevel() const; static RooNumIntConfig*RooAbsReal::defaultIntegratorConfig(); virtual Int_tRooAbsArg::defaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooPrintable::defaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Bool_tRooAbsArg::dependentOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependentOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependsOn(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOn(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0) const; RooDerivative*RooAbsReal::derivative(RooRealVar& obs, Int_t order = 1, Double_t eps = 0.",MatchSource.WIKI,root/html534/ParamHistFunc.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ParamHistFunc.html
https://root.cern/root/html534/ParamHistFunc.html:9214,Integrability,depend,dependsOn,9214,"l*RooAbsReal::createPlotProjection(const RooArgSet& dependentVars, const RooArgSet* projectedVars, RooArgSet*& cloneSet, const char* rangeName = 0, const RooArgSet* condObs = 0) const; virtual RooAbsReal*RooAbsReal::createProfile(const RooArgSet& paramsOfInterest); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooArgSet& nset = RooArgSet()); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); RooAbsReal*RooAbsReal::createScanRI(const RooArgSet& iset, const RooArgSet& nset, Int_t numScanBins, Int_t intOrder); virtual Double_tRooAbsReal::defaultErrorLevel() const; static RooNumIntConfig*RooAbsReal::defaultIntegratorConfig(); virtual Int_tRooAbsArg::defaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooPrintable::defaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Bool_tRooAbsArg::dependentOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependentOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependsOn(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOn(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0) const; RooDerivative*RooAbsReal::derivative(RooRealVar& obs, Int_t order = 1, Double_t eps = 0.",MatchSource.WIKI,root/html534/ParamHistFunc.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ParamHistFunc.html
https://root.cern/root/html534/ParamHistFunc.html:9343,Integrability,depend,dependsOn,9343,"l*RooAbsReal::createPlotProjection(const RooArgSet& dependentVars, const RooArgSet* projectedVars, RooArgSet*& cloneSet, const char* rangeName = 0, const RooArgSet* condObs = 0) const; virtual RooAbsReal*RooAbsReal::createProfile(const RooArgSet& paramsOfInterest); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooArgSet& nset = RooArgSet()); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); RooAbsReal*RooAbsReal::createScanRI(const RooArgSet& iset, const RooArgSet& nset, Int_t numScanBins, Int_t intOrder); virtual Double_tRooAbsReal::defaultErrorLevel() const; static RooNumIntConfig*RooAbsReal::defaultIntegratorConfig(); virtual Int_tRooAbsArg::defaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooPrintable::defaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Bool_tRooAbsArg::dependentOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependentOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependsOn(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOn(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0) const; RooDerivative*RooAbsReal::derivative(RooRealVar& obs, Int_t order = 1, Double_t eps = 0.",MatchSource.WIKI,root/html534/ParamHistFunc.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ParamHistFunc.html
https://root.cern/root/html534/ParamHistFunc.html:9461,Integrability,depend,dependsOnValue,9461,"l*RooAbsReal::createPlotProjection(const RooArgSet& dependentVars, const RooArgSet* projectedVars, RooArgSet*& cloneSet, const char* rangeName = 0, const RooArgSet* condObs = 0) const; virtual RooAbsReal*RooAbsReal::createProfile(const RooArgSet& paramsOfInterest); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooArgSet& nset = RooArgSet()); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); RooAbsReal*RooAbsReal::createScanRI(const RooArgSet& iset, const RooArgSet& nset, Int_t numScanBins, Int_t intOrder); virtual Double_tRooAbsReal::defaultErrorLevel() const; static RooNumIntConfig*RooAbsReal::defaultIntegratorConfig(); virtual Int_tRooAbsArg::defaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooPrintable::defaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Bool_tRooAbsArg::dependentOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependentOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependsOn(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOn(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0) const; RooDerivative*RooAbsReal::derivative(RooRealVar& obs, Int_t order = 1, Double_t eps = 0.",MatchSource.WIKI,root/html534/ParamHistFunc.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ParamHistFunc.html
https://root.cern/root/html534/ParamHistFunc.html:9568,Integrability,depend,dependsOnValue,9568,"l*RooAbsReal::createPlotProjection(const RooArgSet& dependentVars, const RooArgSet* projectedVars, RooArgSet*& cloneSet, const char* rangeName = 0, const RooArgSet* condObs = 0) const; virtual RooAbsReal*RooAbsReal::createProfile(const RooArgSet& paramsOfInterest); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooArgSet& nset = RooArgSet()); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); RooAbsReal*RooAbsReal::createScanRI(const RooArgSet& iset, const RooArgSet& nset, Int_t numScanBins, Int_t intOrder); virtual Double_tRooAbsReal::defaultErrorLevel() const; static RooNumIntConfig*RooAbsReal::defaultIntegratorConfig(); virtual Int_tRooAbsArg::defaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooPrintable::defaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Bool_tRooAbsArg::dependentOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependentOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependsOn(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOn(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0) const; RooDerivative*RooAbsReal::derivative(RooRealVar& obs, Int_t order = 1, Double_t eps = 0.",MatchSource.WIKI,root/html534/ParamHistFunc.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ParamHistFunc.html
https://root.cern/root/html534/ParamHistFunc.html:17891,Integrability,message,message,17891,"TObject::IsFolder() const; virtual Bool_tRooAbsArg::isFundamental() const; virtual Bool_tRooAbsReal::isIdentical(const RooAbsArg& other, Bool_t assumeSameType = kFALSE); virtual Bool_tRooAbsArg::isLValue() const; virtual Bool_tRooAbsReal::isOffsetting() const; Bool_tTObject::IsOnHeap() const; Bool_tRooAbsArg::isShapeDirty() const; Bool_tRooAbsArg::isShapeServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isShapeServer(const char* name) const; virtual Bool_tRooAbsArg::IsSortable() const; Bool_tRooAbsArg::isValueDirty() const; Bool_tRooAbsArg::isValueDirtyAndClear() const; Bool_tRooAbsArg::isValueOrShapeDirtyAndClear() const; Bool_tRooAbsArg::isValueServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isValueServer(const char* name) const; Bool_tTObject::IsZombie() const; voidRooAbsArg::leafNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t recurseNonDerived = kFALSE) const; Bool_tRooAbsArg::localNoDirtyInhibit() const; voidRooAbsReal::logEvalError(const char* message, const char* serverValueString = 0) const; static voidRooAbsReal::logEvalError(const RooAbsReal* originator, const char* origName, const char* message, const char* serverValueString = 0); virtual voidTNamed::ls(Option_t* option = """") const; virtual Double_tRooAbsReal::maxVal(Int_t code) const; voidTObject::MayNotUse(const char* method) const; RooAbsMoment*RooAbsReal::mean(RooRealVar& obs); RooAbsMoment*RooAbsReal::mean(RooRealVar& obs, const RooArgSet& nset); virtual Int_tRooAbsReal::minTrialSamples(const RooArgSet&) const; RooAbsMoment*RooAbsReal::moment(RooRealVar& obs, Int_t order, Bool_t central, Bool_t takeRoot); RooAbsMoment*RooAbsReal::moment(RooRealVar& obs, const RooArgSet& normObs, Int_t order, Bool_t central, Bool_t takeRoot, Bool_t intNormObs); static voidRooPrintable::nameFieldLength(Int_t newLen); const TNamed*RooAbsArg::namePtr() const; virtual Bool_tTObject::Notify(); Int_tnumBins() const; Int_tRooAbsArg::numCaches() const; static Int_tRooAbsReal::numEvalErrorItems(",MatchSource.WIKI,root/html534/ParamHistFunc.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ParamHistFunc.html
https://root.cern/root/html534/ParamHistFunc.html:18042,Integrability,message,message,18042,"ameType = kFALSE); virtual Bool_tRooAbsArg::isLValue() const; virtual Bool_tRooAbsReal::isOffsetting() const; Bool_tTObject::IsOnHeap() const; Bool_tRooAbsArg::isShapeDirty() const; Bool_tRooAbsArg::isShapeServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isShapeServer(const char* name) const; virtual Bool_tRooAbsArg::IsSortable() const; Bool_tRooAbsArg::isValueDirty() const; Bool_tRooAbsArg::isValueDirtyAndClear() const; Bool_tRooAbsArg::isValueOrShapeDirtyAndClear() const; Bool_tRooAbsArg::isValueServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isValueServer(const char* name) const; Bool_tTObject::IsZombie() const; voidRooAbsArg::leafNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t recurseNonDerived = kFALSE) const; Bool_tRooAbsArg::localNoDirtyInhibit() const; voidRooAbsReal::logEvalError(const char* message, const char* serverValueString = 0) const; static voidRooAbsReal::logEvalError(const RooAbsReal* originator, const char* origName, const char* message, const char* serverValueString = 0); virtual voidTNamed::ls(Option_t* option = """") const; virtual Double_tRooAbsReal::maxVal(Int_t code) const; voidTObject::MayNotUse(const char* method) const; RooAbsMoment*RooAbsReal::mean(RooRealVar& obs); RooAbsMoment*RooAbsReal::mean(RooRealVar& obs, const RooArgSet& nset); virtual Int_tRooAbsReal::minTrialSamples(const RooArgSet&) const; RooAbsMoment*RooAbsReal::moment(RooRealVar& obs, Int_t order, Bool_t central, Bool_t takeRoot); RooAbsMoment*RooAbsReal::moment(RooRealVar& obs, const RooArgSet& normObs, Int_t order, Bool_t central, Bool_t takeRoot, Bool_t intNormObs); static voidRooPrintable::nameFieldLength(Int_t newLen); const TNamed*RooAbsArg::namePtr() const; virtual Bool_tTObject::Notify(); Int_tnumBins() const; Int_tRooAbsArg::numCaches() const; static Int_tRooAbsReal::numEvalErrorItems(); static Int_tRooAbsReal::numEvalErrors(); Bool_tRooAbsArg::observableOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsAr",MatchSource.WIKI,root/html534/ParamHistFunc.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ParamHistFunc.html
https://root.cern/root/html534/ParamHistFunc.html:34158,Integrability,integrat,integration,34158,"Arg::_boolAttribBoolean attributes; set<std::string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); Bool_tRooAbsReal::_boolValue! Transient cache for bool values from tree branches ; UChar_tRooAbsReal::_byteValue! Transient cache for byte values from tree branches ; static Bool_tRooAbsReal::_cacheCheckIf true, always validate contents of clean which outcome of evaluate(); deque<RooAbsCache*>RooAbsArg::_cacheListlist of caches; RooRefCountListRooAbsArg::_clientListlist of client objects; RooRefCountListRooAbsArg::_clientListShapesubset of clients that requested shape dirty flag propagation; RooRefCountListRooAbsArg::_clientListValuesubset of clients that requested value dirty flag propagation; TIterator*RooAbsArg::_clientShapeIter! Iterator over _clientListShape ; TIterator*RooAbsArg::_clientValueIter! Iterator over _clientListValue ; RooDataHist_dataSet; RooListProxy_dataVarsThe RooRealVars; Bool_tRooAbsArg::_deleteWatch! Delete watch flag ; RooExpensiveObjectCache*RooAbsArg::_eocachePointer to global cache manager for any expensive components created by this object; Bool_tRooAbsArg::_fastAllow fast access mode in getVal() and proxies; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsReal::_hideOffsetOffset hiding flag; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; Bool_tRooAbsArg::_isConstant! Cached isConstant status ; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist.",MatchSource.WIKI,root/html534/ParamHistFunc.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ParamHistFunc.html
https://root.cern/root/html534/ParamHistFunc.html:34926,Integrability,integrat,integration,34926,"_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist. Pointer to global instance of string that matches object named; RooObjCacheManager_normIntMgrThe integration cache manager; Int_t_numBins; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; RooArgList_ownedListList of owned components; RooListProxy_paramSetinterpolation parameters; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ParamHistFunc(). ParamHistFunc(const char* name, const char* title,",MatchSource.WIKI,root/html534/ParamHistFunc.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ParamHistFunc.html
https://root.cern/root/html534/ParamHistFunc.html:35867,Integrability,integrat,integrator,35867,"_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist. Pointer to global instance of string that matches object named; RooObjCacheManager_normIntMgrThe integration cache manager; Int_t_numBins; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; RooArgList_ownedListList of owned components; RooListProxy_paramSetinterpolation parameters; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ParamHistFunc(). ParamHistFunc(const char* name, const char* title,",MatchSource.WIKI,root/html534/ParamHistFunc.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ParamHistFunc.html
https://root.cern/root/html534/ParamHistFunc.html:39146,Integrability,integrat,integrations,39146,"(ie, we create one parameter; per observable in vars and per bin in each observable); Store them in a list using:; _paramSet.add( createParamSet() );; This list is stored in the ""TH1"" index order; Get the number of bins; in the nominal histogram; We also set the parameters to have nominal min and max values. RooArgList createParamSet(const string& , Int_t , Double_t , Double_t ); Create the list of RooRealVar; parameters which represent the; height of the histogram bins.; Store them in a list; _paramSet.add( createParamSet() );; Get the number of bins; in the nominal histogram. Int_t addVarSet(const RooArgList& vars). Int_t addParamSet(const RooArgList& params). Double_t evaluate() const. Int_t getAnalyticalIntegralWN(RooArgSet& allVars, RooArgSet& analVars, const RooArgSet* normSet, const char* rangeName = 0) const; Advertise that all integrals can be handled internally. Double_t analyticalIntegralWN(Int_t code, const RooArgSet* normSet, const char* rangeName = 0) const; Implement analytical integrations by doing appropriate weighting from component integrals; functions to integrators of components. std::list<Double_t>* plotSamplingHint(RooAbsRealLValue& obs, Double_t xlo, Double_t xhi) const; Return sampling hint for making curves of (projections) of this function; as the recursive division strategy of RooCurve cannot deal efficiently; with the vertical lines that occur in a non-interpolated histogram. std::list<Double_t>* binBoundaries(RooAbsRealLValue& , Double_t , Double_t ) const; Return sampling hint for making curves of (projections) of this function; as the recursive division strategy of RooCurve cannot deal efficiently; with the vertical lines that occur in a non-interpolated histogram. TObject* clone(const char* newname) const; { return new ParamHistFunc(*this, newname); }. const RooArgList& paramList() const; { return _paramSet ; }. Int_t numBins() const; { return _dataSet.numEntries(); }. const RooArgSet* get(Int_t masterIdx) const; { return _dataSet.get",MatchSource.WIKI,root/html534/ParamHistFunc.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ParamHistFunc.html
https://root.cern/root/html534/ParamHistFunc.html:39229,Integrability,integrat,integrators,39229,"(ie, we create one parameter; per observable in vars and per bin in each observable); Store them in a list using:; _paramSet.add( createParamSet() );; This list is stored in the ""TH1"" index order; Get the number of bins; in the nominal histogram; We also set the parameters to have nominal min and max values. RooArgList createParamSet(const string& , Int_t , Double_t , Double_t ); Create the list of RooRealVar; parameters which represent the; height of the histogram bins.; Store them in a list; _paramSet.add( createParamSet() );; Get the number of bins; in the nominal histogram. Int_t addVarSet(const RooArgList& vars). Int_t addParamSet(const RooArgList& params). Double_t evaluate() const. Int_t getAnalyticalIntegralWN(RooArgSet& allVars, RooArgSet& analVars, const RooArgSet* normSet, const char* rangeName = 0) const; Advertise that all integrals can be handled internally. Double_t analyticalIntegralWN(Int_t code, const RooArgSet* normSet, const char* rangeName = 0) const; Implement analytical integrations by doing appropriate weighting from component integrals; functions to integrators of components. std::list<Double_t>* plotSamplingHint(RooAbsRealLValue& obs, Double_t xlo, Double_t xhi) const; Return sampling hint for making curves of (projections) of this function; as the recursive division strategy of RooCurve cannot deal efficiently; with the vertical lines that occur in a non-interpolated histogram. std::list<Double_t>* binBoundaries(RooAbsRealLValue& , Double_t , Double_t ) const; Return sampling hint for making curves of (projections) of this function; as the recursive division strategy of RooCurve cannot deal efficiently; with the vertical lines that occur in a non-interpolated histogram. TObject* clone(const char* newname) const; { return new ParamHistFunc(*this, newname); }. const RooArgList& paramList() const; { return _paramSet ; }. Int_t numBins() const; { return _dataSet.numEntries(); }. const RooArgSet* get(Int_t masterIdx) const; { return _dataSet.get",MatchSource.WIKI,root/html534/ParamHistFunc.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ParamHistFunc.html
https://root.cern/root/html534/ParamHistFunc.html:16271,Modifiability,Inherit,InheritsFrom,16271," RooArgSet& set) const; virtual Double_tRooAbsReal::getValV(const RooArgSet* set = 0) const; RooArgSet*RooAbsArg::getVariables(Bool_t stripDisconnected = kTRUE) const; voidRooAbsArg::graphVizTree(const char* fileName, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); voidRooAbsArg::graphVizTree(ostream& os, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tRooAbsArg::hasClients() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tRooAbsArg::hasRange(const char*) const; static Bool_tRooAbsReal::hideOffset(); RooGenFunction*RooAbsReal::iGenFunction(RooRealVar& x, const RooArgSet& nset = RooArgSet()); RooMultiGenFunction*RooAbsReal::iGenFunction(const RooArgSet& observables, const RooArgSet& nset = RooArgSet()); virtual Bool_tRooAbsArg::importWorkspaceHook(RooWorkspace&); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual Bool_tRooAbsArg::inRange(const char*) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual voidRooAbsArg::ioStreamerPass2(); static voidRooAbsArg::ioStreamerPass2Finalize(); virtual TClass*IsA() const; virtual Bool_tisBinnedDistribution(const RooArgSet&) const; Bool_tRooAbsArg::isCloneOf(const RooAbsArg& other) const; Bool_tRooAbsArg::isConstant() const; virtual Bool_tRooAbsArg::isDerived() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tRooAbsArg::isFundamental() const; virtual Bool_tRooAbsReal::isIdentical(const RooAbsArg& other, Bool_t assumeSameType = kFALSE); virtual Bool_tRooAbsArg::isLValue() const; virtual Bool_tRooAbsReal::isOffsetting() const; Bool_tTObject::IsOnHeap() const; Bool_tRooAbsArg::isShapeDirty() const; Bool_tRooAbsArg::isShapeServer(const RooAbsArg& ar",MatchSource.WIKI,root/html534/ParamHistFunc.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ParamHistFunc.html
https://root.cern/root/html534/ParamHistFunc.html:16337,Modifiability,Inherit,InheritsFrom,16337,"RooArgSet* set = 0) const; RooArgSet*RooAbsArg::getVariables(Bool_t stripDisconnected = kTRUE) const; voidRooAbsArg::graphVizTree(const char* fileName, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); voidRooAbsArg::graphVizTree(ostream& os, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tRooAbsArg::hasClients() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tRooAbsArg::hasRange(const char*) const; static Bool_tRooAbsReal::hideOffset(); RooGenFunction*RooAbsReal::iGenFunction(RooRealVar& x, const RooArgSet& nset = RooArgSet()); RooMultiGenFunction*RooAbsReal::iGenFunction(const RooArgSet& observables, const RooArgSet& nset = RooArgSet()); virtual Bool_tRooAbsArg::importWorkspaceHook(RooWorkspace&); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual Bool_tRooAbsArg::inRange(const char*) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual voidRooAbsArg::ioStreamerPass2(); static voidRooAbsArg::ioStreamerPass2Finalize(); virtual TClass*IsA() const; virtual Bool_tisBinnedDistribution(const RooArgSet&) const; Bool_tRooAbsArg::isCloneOf(const RooAbsArg& other) const; Bool_tRooAbsArg::isConstant() const; virtual Bool_tRooAbsArg::isDerived() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tRooAbsArg::isFundamental() const; virtual Bool_tRooAbsReal::isIdentical(const RooAbsArg& other, Bool_t assumeSameType = kFALSE); virtual Bool_tRooAbsArg::isLValue() const; virtual Bool_tRooAbsReal::isOffsetting() const; Bool_tTObject::IsOnHeap() const; Bool_tRooAbsArg::isShapeDirty() const; Bool_tRooAbsArg::isShapeServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isShapeServer(const char* name) const; ",MatchSource.WIKI,root/html534/ParamHistFunc.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ParamHistFunc.html
https://root.cern/root/html534/ParamHistFunc.html:24854,Modifiability,config,config,24854," = """"); TIterator*RooAbsArg::serverIterator() const; RooFIterRooAbsArg::serverMIterator() const; virtual voidRooAbsArg::serverNameChangeHook(const RooAbsArg*, const RooAbsArg*); voidRooAbsArg::setAttribute(const Text_t* name, Bool_t value = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidRooAbsArg::setCacheAndTrackHints(RooArgSet&); static voidRooAbsReal::setCacheCheck(Bool_t flag); voidsetConstant(bool constant); virtual Bool_tRooAbsReal::setData(RooAbsData&, Bool_t = kTRUE); static voidRooAbsArg::setDirtyInhibit(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidRooAbsReal::setEvalErrorLoggingMode(RooAbsReal::ErrorLoggingMode m); virtual voidRooAbsArg::setExpensiveObjectCache(RooExpensiveObjectCache& cache); static voidRooAbsReal::setHideOffset(Bool_t flag); voidRooAbsReal::setIntegratorConfig(); voidRooAbsReal::setIntegratorConfig(const RooNumIntConfig& config); voidRooAbsArg::setLocalNoDirtyInhibit(Bool_t flag) const; virtual voidRooAbsArg::SetName(const char* name); virtual voidRooAbsArg::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsArg::setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); voidsetParamConst(Int_t, Bool_t = kTRUE); voidRooAbsReal::setParameterizeIntegral(const RooArgSet& paramVars); voidRooAbsReal::setPlotLabel(const char* label); voidRooAbsArg::setProhibitServerRedirect(Bool_t flag); voidsetShape(TH1* shape); voidRooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsArg::setTransientAttribute(const Text_t* name, Bool_t value = kTRUE); virtual voidTObject::SetUniqueID(UInt_t uid); voidRooAbsReal::setUnit(const char* unit); voidRooAbsArg::setValueDirty() const; TIterator*RooAbsArg::shapeClientIterator() const; RooFIterRoo",MatchSource.WIKI,root/html534/ParamHistFunc.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ParamHistFunc.html
https://root.cern/root/html534/ParamHistFunc.html:31875,Modifiability,Config,ConfigChange,31875,"tProxyNormSet(const RooArgSet* nset); voidRooAbsArg::setShapeDirty(const RooAbsArg* source) const; virtual voidRooAbsReal::setTreeBranchStatus(TTree& t, Bool_t active); voidRooAbsArg::setValueDirty(const RooAbsArg* source) const; virtual voidRooAbsReal::syncCache(const RooArgSet* set = 0); Double_tRooAbsReal::traceEval(const RooArgSet* set) const; virtual Bool_tRooAbsReal::traceEvalHook(Double_t) const; voidRooAbsArg::unRegisterProxy(RooArgProxy& proxy); voidRooAbsArg::unRegisterProxy(RooSetProxy& proxy); voidRooAbsArg::unRegisterProxy(RooListProxy& proxy). Data Members; public:. enum RooAbsReal::ScaleType { Raw; Relative; NumEvent; RelativeExpected; };; enum RooAbsReal::ErrorLoggingMode { PrintErrors; CollectErrors; CountErrors; Ignore; };; enum RooAbsArg::ConstOpCode { Activate; DeActivate; ConfigChange; ValueChange; };; enum RooAbsArg::CacheMode { Always; NotAdvised; Never; };; enum RooAbsArg::OperMode { Auto; AClean; ADirty; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };; enum RooPrintable::ContentsOption { kName; kClassName; kValue; kArgs; kExtras; kAddress; kTitle; kCollectionHeader; };; enum RooPrintable::StyleOption { kInline; kSingleLine; kStandard; kVerbose; kTreeStructure; };. public:. static map<RooAbsArg*,TRefArray*>RooAbsArg::_ioEvoListtemporary holding list for proxies needed in schema evolution ; static stack<RooAbsArg*>RooAbsArg::_ioReadStackreading stack ; static const UInt_tRooAbsArg::fnv1a32start; static const ULong64_tRooAbsArg::fnv1a64start. protected:. map<Int_t,Int_t>_binMap; set<std::string>RooAbsArg::_boolAttribBoolean attributes; set<std::string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); Bool_tRooAbsReal::_boolValue! Transient cache for bool values from tree branches ; UChar_tRooAbsReal::_byteVa",MatchSource.WIKI,root/html534/ParamHistFunc.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ParamHistFunc.html
https://root.cern/root/html534/ParamHistFunc.html:35878,Modifiability,config,configuration,35878,"_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist. Pointer to global instance of string that matches object named; RooObjCacheManager_normIntMgrThe integration cache manager; Int_t_numBins; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; RooArgList_ownedListList of owned components; RooListProxy_paramSetinterpolation parameters; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ParamHistFunc(). ParamHistFunc(const char* name, const char* title,",MatchSource.WIKI,root/html534/ParamHistFunc.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ParamHistFunc.html
https://root.cern/root/html534/ParamHistFunc.html:36525,Modifiability,Inherit,Inheritance,36525,"om tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ParamHistFunc(). ParamHistFunc(const char* name, const char* title, const RooArgList& vars, const RooArgList& paramSet). ParamHistFunc(const char* name, const char* title, const RooArgList& vars, const RooArgList& paramSet, const TH1* hist); _dataVar(""!dataVar"",""data Var"", this, (RooRealVar&) var),. Int_t GetNumBins(const RooArgSet& vars). ParamHistFunc(const ParamHistFunc& other, const char* name = 0). ~ParamHistFunc(). Int_t getCurrentBin() const. RooRealVar& getParameter(Int_t masterIdx) const. RooRealVar& getParameter() const. void setParamConst(Int_t , Bool_t = kTRUE). void setConstant(bool constant). void setShape(TH1* shape). RooArgList createParamSet(RooWorkspace& w, const string& , const RooArgList& Vars); Create the list of RooRealVar; parameters which represent the; height of the histogram bins.; The list 'vars' represents the; observables (corresponding to histogram bins); that these newly created parameters will; be mapped",MatchSource.WIKI,root/html534/ParamHistFunc.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ParamHistFunc.html
https://root.cern/root/html534/ParamHistFunc.html:36538,Modifiability,Inherit,Inherited,36538,"om tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ParamHistFunc(). ParamHistFunc(const char* name, const char* title, const RooArgList& vars, const RooArgList& paramSet). ParamHistFunc(const char* name, const char* title, const RooArgList& vars, const RooArgList& paramSet, const TH1* hist); _dataVar(""!dataVar"",""data Var"", this, (RooRealVar&) var),. Int_t GetNumBins(const RooArgSet& vars). ParamHistFunc(const ParamHistFunc& other, const char* name = 0). ~ParamHistFunc(). Int_t getCurrentBin() const. RooRealVar& getParameter(Int_t masterIdx) const. RooRealVar& getParameter() const. void setParamConst(Int_t , Bool_t = kTRUE). void setConstant(bool constant). void setShape(TH1* shape). RooArgList createParamSet(RooWorkspace& w, const string& , const RooArgList& Vars); Create the list of RooRealVar; parameters which represent the; height of the histogram bins.; The list 'vars' represents the; observables (corresponding to histogram bins); that these newly created parameters will; be mapped",MatchSource.WIKI,root/html534/ParamHistFunc.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ParamHistFunc.html
https://root.cern/root/html534/ParamHistFunc.html:2159,Performance,cache,cacheUniqueSuffix,2159,"ffix() const; virtual Double_tRooAbsReal::analyticalIntegral(Int_t code, const char* rangeName = 0) const; virtual Double_tanalyticalIntegralWN(Int_t code, const RooArgSet* normSet, const char* rangeName = 0) const; virtual voidTObject::AppendPad(Option_t* option = """"); TF1*RooAbsReal::asTF(const RooArgList& obs, const RooArgList& pars = RooArgList(), const RooArgSet& nset = RooArgSet()) const; voidRooAbsArg::attachDataSet(const RooAbsData& set); voidRooAbsArg::attachDataStore(const RooAbsDataStore& set); const set<std::string>&RooAbsArg::attributes() const; virtual list<Double_t>*binBoundaries(RooAbsRealLValue&, Double_t, Double_t) const; RooAbsFunc*RooAbsReal::bindVars(const RooArgSet& vars, const RooArgSet* nset = 0, Bool_t clipInvalid = kFALSE) const; doublebinVolume() const; voidRooAbsArg::branchNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t recurseNonDerived = kFALSE) const; virtual voidTObject::Browse(TBrowser* b); virtual const char*RooAbsArg::cacheUniqueSuffix() const; virtual RooAbsArg::CacheModeRooAbsArg::canNodeBeCached() const; voidRooAbsArg::changeServer(RooAbsArg& server, Bool_t valueProp, Bool_t shapeProp); Bool_tRooAbsArg::checkDependents(const RooArgSet* nset) const; virtual Bool_tRooAbsArg::checkObservables(const RooArgSet* nset) const; virtual RooFitResult*RooAbsReal::chi2FitTo(RooDataHist& data, const RooLinkedList& cmdList); virtual RooFitResult*RooAbsReal::chi2FitTo(RooDataSet& xydata, const RooLinkedList& cmdList); virtual RooFitResult*RooAbsReal::chi2FitTo(RooDataHist& data, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); virtual RooFitResult*RooAbsReal::chi2FitTo(RooDataSet& xydata, const RooCmdArg& arg1 = RooCmdArg::none(),",MatchSource.WIKI,root/html534/ParamHistFunc.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ParamHistFunc.html
https://root.cern/root/html534/ParamHistFunc.html:2205,Performance,Cache,CacheModeRooAbsArg,2205,"yticalIntegral(Int_t code, const char* rangeName = 0) const; virtual Double_tanalyticalIntegralWN(Int_t code, const RooArgSet* normSet, const char* rangeName = 0) const; virtual voidTObject::AppendPad(Option_t* option = """"); TF1*RooAbsReal::asTF(const RooArgList& obs, const RooArgList& pars = RooArgList(), const RooArgSet& nset = RooArgSet()) const; voidRooAbsArg::attachDataSet(const RooAbsData& set); voidRooAbsArg::attachDataStore(const RooAbsDataStore& set); const set<std::string>&RooAbsArg::attributes() const; virtual list<Double_t>*binBoundaries(RooAbsRealLValue&, Double_t, Double_t) const; RooAbsFunc*RooAbsReal::bindVars(const RooArgSet& vars, const RooArgSet* nset = 0, Bool_t clipInvalid = kFALSE) const; doublebinVolume() const; voidRooAbsArg::branchNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t recurseNonDerived = kFALSE) const; virtual voidTObject::Browse(TBrowser* b); virtual const char*RooAbsArg::cacheUniqueSuffix() const; virtual RooAbsArg::CacheModeRooAbsArg::canNodeBeCached() const; voidRooAbsArg::changeServer(RooAbsArg& server, Bool_t valueProp, Bool_t shapeProp); Bool_tRooAbsArg::checkDependents(const RooArgSet* nset) const; virtual Bool_tRooAbsArg::checkObservables(const RooArgSet* nset) const; virtual RooFitResult*RooAbsReal::chi2FitTo(RooDataHist& data, const RooLinkedList& cmdList); virtual RooFitResult*RooAbsReal::chi2FitTo(RooDataSet& xydata, const RooLinkedList& cmdList); virtual RooFitResult*RooAbsReal::chi2FitTo(RooDataHist& data, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); virtual RooFitResult*RooAbsReal::chi2FitTo(RooDataSet& xydata, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), con",MatchSource.WIKI,root/html534/ParamHistFunc.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ParamHistFunc.html
https://root.cern/root/html534/ParamHistFunc.html:11275,Performance,cache,cacheList,11275,"rRooAbsReal::evalErrorIter(); static RooAbsReal::ErrorLoggingModeRooAbsReal::evalErrorLoggingMode(); virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); RooExpensiveObjectCache&RooAbsArg::expensiveObjectCache() const; virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); RooDataHist*RooAbsReal::fillDataHist(RooDataHist* hist, const RooArgSet* nset, Double_t scaleFactor, Bool_t correctForBinVolume = kFALSE, Bool_t showProgress = kFALSE) const; TH1*RooAbsReal::fillHistogram(TH1* hist, const RooArgList& plotVars, Double_t scaleFactor = 1, const RooArgSet* projectedVars = 0, Bool_t scaling = kTRUE, const RooArgSet* condObs = 0, Bool_t setError = kTRUE) const; Bool_tRooAbsArg::findConstantNodes(const RooArgSet& observables, RooArgSet& cacheList); Bool_tRooAbsArg::findConstantNodes(const RooArgSet& observables, RooArgSet& cacheList, RooLinkedList& processedNodes); RooAbsArg*RooAbsArg::findNewServer(const RooAbsCollection& newSet, Bool_t nameChange) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Double_tRooAbsReal::findRoot(RooRealVar& x, Double_t xmin, Double_t xmax, Double_t yval); RooAbsArg*RooAbsArg::findServer(const char* name) const; RooAbsArg*RooAbsArg::findServer(const RooAbsArg& arg) const; RooAbsArg*RooAbsArg::findServer(Int_t index) const; virtual voidRooAbsReal::fixAddCoefNormalization(const RooArgSet& addNormSet = RooArgSet(), Bool_t force = kTRUE); virtual voidRooAbsReal::fixAddCoefRange(const char* rangeName = 0, Bool_t force = kTRUE); static UInt_tRooAbsArg::fnv1a32(const char* data); static UInt_tRooAbsArg::fnv1a32(const char* data, ULong_t sz, UInt_t hash = fnv1a32start); static ULong64_tRooAbsArg::fnv1a64(const char* data",MatchSource.WIKI,root/html534/ParamHistFunc.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ParamHistFunc.html
https://root.cern/root/html534/ParamHistFunc.html:11363,Performance,cache,cacheList,11363,"ggingMode(); virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); RooExpensiveObjectCache&RooAbsArg::expensiveObjectCache() const; virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); RooDataHist*RooAbsReal::fillDataHist(RooDataHist* hist, const RooArgSet* nset, Double_t scaleFactor, Bool_t correctForBinVolume = kFALSE, Bool_t showProgress = kFALSE) const; TH1*RooAbsReal::fillHistogram(TH1* hist, const RooArgList& plotVars, Double_t scaleFactor = 1, const RooArgSet* projectedVars = 0, Bool_t scaling = kTRUE, const RooArgSet* condObs = 0, Bool_t setError = kTRUE) const; Bool_tRooAbsArg::findConstantNodes(const RooArgSet& observables, RooArgSet& cacheList); Bool_tRooAbsArg::findConstantNodes(const RooArgSet& observables, RooArgSet& cacheList, RooLinkedList& processedNodes); RooAbsArg*RooAbsArg::findNewServer(const RooAbsCollection& newSet, Bool_t nameChange) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Double_tRooAbsReal::findRoot(RooRealVar& x, Double_t xmin, Double_t xmax, Double_t yval); RooAbsArg*RooAbsArg::findServer(const char* name) const; RooAbsArg*RooAbsArg::findServer(const RooAbsArg& arg) const; RooAbsArg*RooAbsArg::findServer(Int_t index) const; virtual voidRooAbsReal::fixAddCoefNormalization(const RooArgSet& addNormSet = RooArgSet(), Bool_t force = kTRUE); virtual voidRooAbsReal::fixAddCoefRange(const char* rangeName = 0, Bool_t force = kTRUE); static UInt_tRooAbsArg::fnv1a32(const char* data); static UInt_tRooAbsArg::fnv1a32(const char* data, ULong_t sz, UInt_t hash = fnv1a32start); static ULong64_tRooAbsArg::fnv1a64(const char* data); static ULong64_tRooAbsArg::fnv1a64(const char* data, ULong_t sz, ULong64_t hash = fnv",MatchSource.WIKI,root/html534/ParamHistFunc.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ParamHistFunc.html
https://root.cern/root/html534/ParamHistFunc.html:19897,Performance,optimiz,optimizeCacheMode,19897,"nt_tRooAbsReal::numEvalErrors(); Bool_tRooAbsArg::observableOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::observableOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; virtual Double_tRooAbsReal::offset() const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TNamed&TNamed::operator=(const TNamed& rhs); Bool_tRooAbsReal::operator==(Double_t value) const; virtual Bool_tRooAbsReal::operator==(const RooAbsArg& other); RooAbsArg::OperModeRooAbsArg::operMode() const; virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables); virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables, RooArgSet& optNodes, RooLinkedList& processedNodes); Bool_tRooAbsArg::overlaps(const RooAbsArg& testArg, Bool_t valueOnly = kFALSE) const; const RooArgSet*RooAbsArg::ownedComponents() const; virtual voidTObject::Paint(Option_t* option = """"); const RooArgList&paramList() const; virtual RooPlot*RooAbsReal::plotOn(RooPlot* frame, RooLinkedList& cmdList) const; virtual RooPlot*RooAbsReal::plotOn(RooPlot* frame, const RooCmdArg& arg1 = RooCmdArg(), const RooCmdArg& arg2 = RooCmdArg(), const RooCmdArg& arg3 = RooCmdArg(), const RooCmdArg& arg4 = RooCmdArg(), const RooCmdArg& arg5 = RooCmdArg(), const RooCmdArg& arg6 = RooCmdArg(), const RooCmdArg& arg7 = RooCmdArg(), const RooCmdArg& arg8 = RooCmdArg(), const RooCmdArg& arg9 = RooCmdArg(), const RooCmdArg& arg10 = RooCmdArg()) const; virtual list<Double_t>*plotSamplingHint(RooAbsRealLValue& obs, Double_t xlo, Double_t xhi) const; vi",MatchSource.WIKI,root/html534/ParamHistFunc.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ParamHistFunc.html
https://root.cern/root/html534/ParamHistFunc.html:19969,Performance,optimiz,optimizeCacheMode,19969,"st RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::observableOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; virtual Double_tRooAbsReal::offset() const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TNamed&TNamed::operator=(const TNamed& rhs); Bool_tRooAbsReal::operator==(Double_t value) const; virtual Bool_tRooAbsReal::operator==(const RooAbsArg& other); RooAbsArg::OperModeRooAbsArg::operMode() const; virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables); virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables, RooArgSet& optNodes, RooLinkedList& processedNodes); Bool_tRooAbsArg::overlaps(const RooAbsArg& testArg, Bool_t valueOnly = kFALSE) const; const RooArgSet*RooAbsArg::ownedComponents() const; virtual voidTObject::Paint(Option_t* option = """"); const RooArgList&paramList() const; virtual RooPlot*RooAbsReal::plotOn(RooPlot* frame, RooLinkedList& cmdList) const; virtual RooPlot*RooAbsReal::plotOn(RooPlot* frame, const RooCmdArg& arg1 = RooCmdArg(), const RooCmdArg& arg2 = RooCmdArg(), const RooCmdArg& arg3 = RooCmdArg(), const RooCmdArg& arg4 = RooCmdArg(), const RooCmdArg& arg5 = RooCmdArg(), const RooCmdArg& arg6 = RooCmdArg(), const RooCmdArg& arg7 = RooCmdArg(), const RooCmdArg& arg8 = RooCmdArg(), const RooCmdArg& arg9 = RooCmdArg(), const RooCmdArg& arg10 = RooCmdArg()) const; virtual list<Double_t>*plotSamplingHint(RooAbsRealLValue& obs, Double_t xlo, Double_t xhi) const; virtual RooPlot*RooAbsReal::plotSliceOn(RooPlot* frame, const RooArgSet& s",MatchSource.WIKI,root/html534/ParamHistFunc.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ParamHistFunc.html
https://root.cern/root/html534/ParamHistFunc.html:23480,Performance,cache,cache,23480,"rtual voidRooAbsArg::printTitle(ostream& os) const; virtual voidRooAbsArg::printTree(ostream& os, TString indent = """") const; virtual voidRooAbsReal::printValue(ostream& os) const; virtual Int_tTObject::Read(const char* name); virtual Bool_tRooAbsReal::readFromStream(istream& is, Bool_t compact, Bool_t verbose = kFALSE); Bool_tRooAbsArg::recursiveCheckDependents(const RooArgSet* nset) const; Bool_tRooAbsArg::recursiveCheckObservables(const RooArgSet* nset) const; Bool_tRooAbsArg::recursiveRedirectServers(const RooAbsCollection& newServerList, Bool_t mustReplaceAll = kFALSE, Bool_t nameChange = kFALSE, Bool_t recurseInNewSet = kTRUE); virtual voidTObject::RecursiveRemove(TObject* obj); Bool_tRooAbsArg::redirectServers(const RooAbsCollection& newServerList, Bool_t mustReplaceAll = kFALSE, Bool_t nameChange = kFALSE, Bool_t isRecursionStep = kFALSE); virtual Bool_tRooAbsArg::redirectServersHook(const RooAbsCollection&, Bool_t, Bool_t, Bool_t); voidRooAbsArg::registerCache(RooAbsCache& cache); voidRooAbsArg::removeServer(RooAbsArg& server, Bool_t force = kFALSE); voidRooAbsArg::replaceServer(RooAbsArg& oldServer, RooAbsArg& newServer, Bool_t valueProp, Bool_t shapeProp); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); TIterator*RooAbsArg::serverIterator() const; RooFIterRooAbsArg::serverMIterator() const; virtual voidRooAbsArg::serverNameChangeHook(const RooAbsArg*, const RooAbsArg*); voidRooAbsArg::setAttribute(const Text_t* name, Bool_t value = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidRooAbsArg::setCacheAndTrackHints(RooArgSet&); static voidRooAbsReal::setCacheCheck(Bool_t flag); voidsetConstant(bool constant); virtual Bool_tRooAbsReal::setData(RooAbsData&, Bool_t = kTRUE); static voidRooAbsArg::setDirtyInhibit(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* o",MatchSource.WIKI,root/html534/ParamHistFunc.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ParamHistFunc.html
https://root.cern/root/html534/ParamHistFunc.html:24697,Performance,cache,cache,24697,"; virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); TIterator*RooAbsArg::serverIterator() const; RooFIterRooAbsArg::serverMIterator() const; virtual voidRooAbsArg::serverNameChangeHook(const RooAbsArg*, const RooAbsArg*); voidRooAbsArg::setAttribute(const Text_t* name, Bool_t value = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidRooAbsArg::setCacheAndTrackHints(RooArgSet&); static voidRooAbsReal::setCacheCheck(Bool_t flag); voidsetConstant(bool constant); virtual Bool_tRooAbsReal::setData(RooAbsData&, Bool_t = kTRUE); static voidRooAbsArg::setDirtyInhibit(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidRooAbsReal::setEvalErrorLoggingMode(RooAbsReal::ErrorLoggingMode m); virtual voidRooAbsArg::setExpensiveObjectCache(RooExpensiveObjectCache& cache); static voidRooAbsReal::setHideOffset(Bool_t flag); voidRooAbsReal::setIntegratorConfig(); voidRooAbsReal::setIntegratorConfig(const RooNumIntConfig& config); voidRooAbsArg::setLocalNoDirtyInhibit(Bool_t flag) const; virtual voidRooAbsArg::SetName(const char* name); virtual voidRooAbsArg::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsArg::setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); voidsetParamConst(Int_t, Bool_t = kTRUE); voidRooAbsReal::setParameterizeIntegral(const RooArgSet& paramVars); voidRooAbsReal::setPlotLabel(const char* label); voidRooAbsArg::setProhibitServerRedirect(Bool_t flag); voidsetShape(TH1* shape); voidRooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsArg::setTransientAttribute(const Text_t* name, Bool_t value = kTRUE); virtual voidTObject::SetUnique",MatchSource.WIKI,root/html534/ParamHistFunc.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ParamHistFunc.html
https://root.cern/root/html534/ParamHistFunc.html:26864,Performance,cache,cache,26864,"RooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsArg::setTransientAttribute(const Text_t* name, Bool_t value = kTRUE); virtual voidTObject::SetUniqueID(UInt_t uid); voidRooAbsReal::setUnit(const char* unit); voidRooAbsArg::setValueDirty() const; TIterator*RooAbsArg::shapeClientIterator() const; RooFIterRooAbsArg::shapeClientMIterator() const; virtual voidShowMembers(TMemberInspector&); RooAbsMoment*RooAbsReal::sigma(RooRealVar& obs); RooAbsMoment*RooAbsReal::sigma(RooRealVar& obs, const RooArgSet& nset); virtual Int_tTNamed::Sizeof() const; RooNumIntConfig*RooAbsReal::specialIntegratorConfig() const; RooNumIntConfig*RooAbsReal::specialIntegratorConfig(Bool_t createOnTheFly); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); const map<std::string,std::string>&RooAbsArg::stringAttributes() const; virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; const set<std::string>&RooAbsArg::transientAttributes() const; voidRooAbsArg::treeNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t doBranch = kTRUE, Bool_t doLeaf = kTRUE, Bool_t valueOnly = kFALSE, Bool_t recurseNonDerived = kFALSE) const; voidRooAbsArg::unRegisterCache(RooAbsCache& cache); virtual voidTObject::UseCurrentStyle(); TIterator*RooAbsArg::valueClientIterator() const; RooFIterRooAbsArg::valueClientMIterator() const; static voidRooAbsArg::verboseDirty(Bool_t flag); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; voidRooAbsArg::wireAllCaches(); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidRooAbsReal::writeToStream(ostream& os, Bool_t compact) const.",MatchSource.WIKI,root/html534/ParamHistFunc.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ParamHistFunc.html
https://root.cern/root/html534/ParamHistFunc.html:30085,Performance,optimiz,optimizeDirtyHook,30085,"ual Bool_tRooAbsReal::isValidReal(Double_t value, Bool_t printError = kFALSE) const; voidRooAbsReal::makeProjectionSet(const RooAbsArg* plotVar, const RooArgSet* allVars, RooArgSet& projectedVars, Bool_t silent) const; voidTObject::MakeZombie(); Bool_tRooAbsReal::matchArgs(const RooArgSet& allDeps, RooArgSet& numDeps, const RooArgProxy& a) const; Bool_tRooAbsReal::matchArgs(const RooArgSet& allDeps, RooArgSet& numDeps, const RooArgSet& set) const; Bool_tRooAbsReal::matchArgs(const RooArgSet& allDeps, RooArgSet& numDeps, const RooArgProxy& a, const RooArgProxy& b) const; Bool_tRooAbsReal::matchArgs(const RooArgSet& allDeps, RooArgSet& numDeps, const RooArgProxy& a, const RooArgProxy& b, const RooArgProxy& c) const; Bool_tRooAbsReal::matchArgs(const RooArgSet& allDeps, RooArgSet& numDeps, const RooArgProxy& a, const RooArgProxy& b, const RooArgProxy& c, const RooArgProxy& d) const; Int_tRooAbsArg::numProxies() const; virtual voidRooAbsArg::operModeHook(); virtual voidRooAbsArg::optimizeDirtyHook(const RooArgSet*); virtual RooPlot*RooAbsReal::plotAsymOn(RooPlot* frame, const RooAbsCategoryLValue& asymCat, RooAbsReal::PlotOpt o) const; virtual RooPlot*RooAbsReal::plotOn(RooPlot* frame, RooAbsReal::PlotOpt o) const; voidRooAbsReal::plotOnCompSelect(RooArgSet* selNodes) const; RooPlot*RooAbsReal::plotOnWithErrorBand(RooPlot* frame, const RooFitResult& fr, Double_t Z, const RooArgSet* params, const RooLinkedList& argList, Bool_t method1) const; Bool_tRooAbsReal::plotSanityChecks(RooPlot* frame) const; voidRooAbsArg::printAttribList(ostream& os) const; voidRooAbsArg::registerProxy(RooArgProxy& proxy); voidRooAbsArg::registerProxy(RooSetProxy& proxy); voidRooAbsArg::registerProxy(RooListProxy& proxy); voidRooAbsReal::selectComp(Bool_t flag); virtual voidRooAbsReal::selectNormalization(const RooArgSet* depSet = 0, Bool_t force = kFALSE); virtual voidRooAbsReal::selectNormalizationRange(const char* rangeName = 0, Bool_t force = kFALSE); voidRooAbsArg::setProxyNormSet(const Roo",MatchSource.WIKI,root/html534/ParamHistFunc.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ParamHistFunc.html
https://root.cern/root/html534/ParamHistFunc.html:31922,Performance,Cache,CacheMode,31922,"tProxyNormSet(const RooArgSet* nset); voidRooAbsArg::setShapeDirty(const RooAbsArg* source) const; virtual voidRooAbsReal::setTreeBranchStatus(TTree& t, Bool_t active); voidRooAbsArg::setValueDirty(const RooAbsArg* source) const; virtual voidRooAbsReal::syncCache(const RooArgSet* set = 0); Double_tRooAbsReal::traceEval(const RooArgSet* set) const; virtual Bool_tRooAbsReal::traceEvalHook(Double_t) const; voidRooAbsArg::unRegisterProxy(RooArgProxy& proxy); voidRooAbsArg::unRegisterProxy(RooSetProxy& proxy); voidRooAbsArg::unRegisterProxy(RooListProxy& proxy). Data Members; public:. enum RooAbsReal::ScaleType { Raw; Relative; NumEvent; RelativeExpected; };; enum RooAbsReal::ErrorLoggingMode { PrintErrors; CollectErrors; CountErrors; Ignore; };; enum RooAbsArg::ConstOpCode { Activate; DeActivate; ConfigChange; ValueChange; };; enum RooAbsArg::CacheMode { Always; NotAdvised; Never; };; enum RooAbsArg::OperMode { Auto; AClean; ADirty; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };; enum RooPrintable::ContentsOption { kName; kClassName; kValue; kArgs; kExtras; kAddress; kTitle; kCollectionHeader; };; enum RooPrintable::StyleOption { kInline; kSingleLine; kStandard; kVerbose; kTreeStructure; };. public:. static map<RooAbsArg*,TRefArray*>RooAbsArg::_ioEvoListtemporary holding list for proxies needed in schema evolution ; static stack<RooAbsArg*>RooAbsArg::_ioReadStackreading stack ; static const UInt_tRooAbsArg::fnv1a32start; static const ULong64_tRooAbsArg::fnv1a64start. protected:. map<Int_t,Int_t>_binMap; set<std::string>RooAbsArg::_boolAttribBoolean attributes; set<std::string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); Bool_tRooAbsReal::_boolValue! Transient cache for bool values from tree branches ; UChar_tRooAbsReal::_byteVa",MatchSource.WIKI,root/html534/ParamHistFunc.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ParamHistFunc.html
https://root.cern/root/html534/ParamHistFunc.html:33003,Performance,cache,cache,33003,,MatchSource.WIKI,root/html534/ParamHistFunc.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ParamHistFunc.html
https://root.cern/root/html534/ParamHistFunc.html:33087,Performance,cache,cache,33087,,MatchSource.WIKI,root/html534/ParamHistFunc.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ParamHistFunc.html
https://root.cern/root/html534/ParamHistFunc.html:33286,Performance,cache,caches,33286,,MatchSource.WIKI,root/html534/ParamHistFunc.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ParamHistFunc.html
https://root.cern/root/html534/ParamHistFunc.html:33880,Performance,cache,cache,33880,"Arg::_boolAttribBoolean attributes; set<std::string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); Bool_tRooAbsReal::_boolValue! Transient cache for bool values from tree branches ; UChar_tRooAbsReal::_byteValue! Transient cache for byte values from tree branches ; static Bool_tRooAbsReal::_cacheCheckIf true, always validate contents of clean which outcome of evaluate(); deque<RooAbsCache*>RooAbsArg::_cacheListlist of caches; RooRefCountListRooAbsArg::_clientListlist of client objects; RooRefCountListRooAbsArg::_clientListShapesubset of clients that requested shape dirty flag propagation; RooRefCountListRooAbsArg::_clientListValuesubset of clients that requested value dirty flag propagation; TIterator*RooAbsArg::_clientShapeIter! Iterator over _clientListShape ; TIterator*RooAbsArg::_clientValueIter! Iterator over _clientListValue ; RooDataHist_dataSet; RooListProxy_dataVarsThe RooRealVars; Bool_tRooAbsArg::_deleteWatch! Delete watch flag ; RooExpensiveObjectCache*RooAbsArg::_eocachePointer to global cache manager for any expensive components created by this object; Bool_tRooAbsArg::_fastAllow fast access mode in getVal() and proxies; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsReal::_hideOffsetOffset hiding flag; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; Bool_tRooAbsArg::_isConstant! Cached isConstant status ; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist.",MatchSource.WIKI,root/html534/ParamHistFunc.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ParamHistFunc.html
https://root.cern/root/html534/ParamHistFunc.html:34059,Performance,cache,cache,34059,"Arg::_boolAttribBoolean attributes; set<std::string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); Bool_tRooAbsReal::_boolValue! Transient cache for bool values from tree branches ; UChar_tRooAbsReal::_byteValue! Transient cache for byte values from tree branches ; static Bool_tRooAbsReal::_cacheCheckIf true, always validate contents of clean which outcome of evaluate(); deque<RooAbsCache*>RooAbsArg::_cacheListlist of caches; RooRefCountListRooAbsArg::_clientListlist of client objects; RooRefCountListRooAbsArg::_clientListShapesubset of clients that requested shape dirty flag propagation; RooRefCountListRooAbsArg::_clientListValuesubset of clients that requested value dirty flag propagation; TIterator*RooAbsArg::_clientShapeIter! Iterator over _clientListShape ; TIterator*RooAbsArg::_clientValueIter! Iterator over _clientListValue ; RooDataHist_dataSet; RooListProxy_dataVarsThe RooRealVars; Bool_tRooAbsArg::_deleteWatch! Delete watch flag ; RooExpensiveObjectCache*RooAbsArg::_eocachePointer to global cache manager for any expensive components created by this object; Bool_tRooAbsArg::_fastAllow fast access mode in getVal() and proxies; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsReal::_hideOffsetOffset hiding flag; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; Bool_tRooAbsArg::_isConstant! Cached isConstant status ; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist.",MatchSource.WIKI,root/html534/ParamHistFunc.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ParamHistFunc.html
https://root.cern/root/html534/ParamHistFunc.html:34473,Performance,cache,cache,34473,"Arg::_boolAttribBoolean attributes; set<std::string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); Bool_tRooAbsReal::_boolValue! Transient cache for bool values from tree branches ; UChar_tRooAbsReal::_byteValue! Transient cache for byte values from tree branches ; static Bool_tRooAbsReal::_cacheCheckIf true, always validate contents of clean which outcome of evaluate(); deque<RooAbsCache*>RooAbsArg::_cacheListlist of caches; RooRefCountListRooAbsArg::_clientListlist of client objects; RooRefCountListRooAbsArg::_clientListShapesubset of clients that requested shape dirty flag propagation; RooRefCountListRooAbsArg::_clientListValuesubset of clients that requested value dirty flag propagation; TIterator*RooAbsArg::_clientShapeIter! Iterator over _clientListShape ; TIterator*RooAbsArg::_clientValueIter! Iterator over _clientListValue ; RooDataHist_dataSet; RooListProxy_dataVarsThe RooRealVars; Bool_tRooAbsArg::_deleteWatch! Delete watch flag ; RooExpensiveObjectCache*RooAbsArg::_eocachePointer to global cache manager for any expensive components created by this object; Bool_tRooAbsArg::_fastAllow fast access mode in getVal() and proxies; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsReal::_hideOffsetOffset hiding flag; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; Bool_tRooAbsArg::_isConstant! Cached isConstant status ; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist.",MatchSource.WIKI,root/html534/ParamHistFunc.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ParamHistFunc.html
https://root.cern/root/html534/ParamHistFunc.html:34549,Performance,Cache,Cached,34549,"Arg::_boolAttribBoolean attributes; set<std::string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); Bool_tRooAbsReal::_boolValue! Transient cache for bool values from tree branches ; UChar_tRooAbsReal::_byteValue! Transient cache for byte values from tree branches ; static Bool_tRooAbsReal::_cacheCheckIf true, always validate contents of clean which outcome of evaluate(); deque<RooAbsCache*>RooAbsArg::_cacheListlist of caches; RooRefCountListRooAbsArg::_clientListlist of client objects; RooRefCountListRooAbsArg::_clientListShapesubset of clients that requested shape dirty flag propagation; RooRefCountListRooAbsArg::_clientListValuesubset of clients that requested value dirty flag propagation; TIterator*RooAbsArg::_clientShapeIter! Iterator over _clientListShape ; TIterator*RooAbsArg::_clientValueIter! Iterator over _clientListValue ; RooDataHist_dataSet; RooListProxy_dataVarsThe RooRealVars; Bool_tRooAbsArg::_deleteWatch! Delete watch flag ; RooExpensiveObjectCache*RooAbsArg::_eocachePointer to global cache manager for any expensive components created by this object; Bool_tRooAbsArg::_fastAllow fast access mode in getVal() and proxies; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsReal::_hideOffsetOffset hiding flag; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; Bool_tRooAbsArg::_isConstant! Cached isConstant status ; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist.",MatchSource.WIKI,root/html534/ParamHistFunc.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ParamHistFunc.html
https://root.cern/root/html534/ParamHistFunc.html:34938,Performance,cache,cache,34938,"_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist. Pointer to global instance of string that matches object named; RooObjCacheManager_normIntMgrThe integration cache manager; Int_t_numBins; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; RooArgList_ownedListList of owned components; RooListProxy_paramSetinterpolation parameters; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ParamHistFunc(). ParamHistFunc(const char* name, const char* title,",MatchSource.WIKI,root/html534/ParamHistFunc.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ParamHistFunc.html
https://root.cern/root/html534/ParamHistFunc.html:35519,Performance,cache,cache,35519,"_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist. Pointer to global instance of string that matches object named; RooObjCacheManager_normIntMgrThe integration cache manager; Int_t_numBins; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; RooArgList_ownedListList of owned components; RooListProxy_paramSetinterpolation parameters; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ParamHistFunc(). ParamHistFunc(const char* name, const char* title,",MatchSource.WIKI,root/html534/ParamHistFunc.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ParamHistFunc.html
https://root.cern/root/html534/ParamHistFunc.html:36072,Performance,cache,cache,36072,"_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist. Pointer to global instance of string that matches object named; RooObjCacheManager_normIntMgrThe integration cache manager; Int_t_numBins; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; RooArgList_ownedListList of owned components; RooListProxy_paramSetinterpolation parameters; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ParamHistFunc(). ParamHistFunc(const char* name, const char* title,",MatchSource.WIKI,root/html534/ParamHistFunc.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ParamHistFunc.html
https://root.cern/root/html534/ParamHistFunc.html:12207,Security,hash,hash,12207,"bsArg::findConstantNodes(const RooArgSet& observables, RooArgSet& cacheList); Bool_tRooAbsArg::findConstantNodes(const RooArgSet& observables, RooArgSet& cacheList, RooLinkedList& processedNodes); RooAbsArg*RooAbsArg::findNewServer(const RooAbsCollection& newSet, Bool_t nameChange) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Double_tRooAbsReal::findRoot(RooRealVar& x, Double_t xmin, Double_t xmax, Double_t yval); RooAbsArg*RooAbsArg::findServer(const char* name) const; RooAbsArg*RooAbsArg::findServer(const RooAbsArg& arg) const; RooAbsArg*RooAbsArg::findServer(Int_t index) const; virtual voidRooAbsReal::fixAddCoefNormalization(const RooArgSet& addNormSet = RooArgSet(), Bool_t force = kTRUE); virtual voidRooAbsReal::fixAddCoefRange(const char* rangeName = 0, Bool_t force = kTRUE); static UInt_tRooAbsArg::fnv1a32(const char* data); static UInt_tRooAbsArg::fnv1a32(const char* data, ULong_t sz, UInt_t hash = fnv1a32start); static ULong64_tRooAbsArg::fnv1a64(const char* data); static ULong64_tRooAbsArg::fnv1a64(const char* data, ULong_t sz, ULong64_t hash = fnv1a64start); virtual Bool_tforceAnalyticalInt(const RooAbsArg&) const; virtual voidRooAbsReal::forceNumInt(Bool_t flag = kTRUE); RooFunctor*RooAbsReal::functor(const RooArgList& obs, const RooArgList& pars = RooArgList(), const RooArgSet& nset = RooArgSet()) const; const RooArgSet*get(Int_t masterIdx) const; const RooArgSet*get(const RooArgSet& coord) const; virtual Int_tRooAbsReal::getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const; virtual Int_tgetAnalyticalIntegralWN(RooArgSet& allVars, RooArgSet& analVars, const RooArgSet* normSet, const char* rangeName = 0) const; Bool_tRooAbsArg::getAttribute(const Text_t* name) const; RooAbsCache*RooAbsArg::getCache(Int_t index) const; RooLinkedListRooAbsArg::getCloningAncestors() const; RooArgSet*RooAbsArg::getComponents() const; RooArgSet*RooAbs",MatchSource.WIKI,root/html534/ParamHistFunc.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ParamHistFunc.html
https://root.cern/root/html534/ParamHistFunc.html:12358,Security,hash,hash,12358,"t& cacheList, RooLinkedList& processedNodes); RooAbsArg*RooAbsArg::findNewServer(const RooAbsCollection& newSet, Bool_t nameChange) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Double_tRooAbsReal::findRoot(RooRealVar& x, Double_t xmin, Double_t xmax, Double_t yval); RooAbsArg*RooAbsArg::findServer(const char* name) const; RooAbsArg*RooAbsArg::findServer(const RooAbsArg& arg) const; RooAbsArg*RooAbsArg::findServer(Int_t index) const; virtual voidRooAbsReal::fixAddCoefNormalization(const RooArgSet& addNormSet = RooArgSet(), Bool_t force = kTRUE); virtual voidRooAbsReal::fixAddCoefRange(const char* rangeName = 0, Bool_t force = kTRUE); static UInt_tRooAbsArg::fnv1a32(const char* data); static UInt_tRooAbsArg::fnv1a32(const char* data, ULong_t sz, UInt_t hash = fnv1a32start); static ULong64_tRooAbsArg::fnv1a64(const char* data); static ULong64_tRooAbsArg::fnv1a64(const char* data, ULong_t sz, ULong64_t hash = fnv1a64start); virtual Bool_tforceAnalyticalInt(const RooAbsArg&) const; virtual voidRooAbsReal::forceNumInt(Bool_t flag = kTRUE); RooFunctor*RooAbsReal::functor(const RooArgList& obs, const RooArgList& pars = RooArgList(), const RooArgSet& nset = RooArgSet()) const; const RooArgSet*get(Int_t masterIdx) const; const RooArgSet*get(const RooArgSet& coord) const; virtual Int_tRooAbsReal::getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const; virtual Int_tgetAnalyticalIntegralWN(RooArgSet& allVars, RooArgSet& analVars, const RooArgSet* normSet, const char* rangeName = 0) const; Bool_tRooAbsArg::getAttribute(const Text_t* name) const; RooAbsCache*RooAbsArg::getCache(Int_t index) const; RooLinkedListRooAbsArg::getCloningAncestors() const; RooArgSet*RooAbsArg::getComponents() const; RooArgSet*RooAbsArg::getDependents(const RooArgSet& set) const; RooArgSet*RooAbsArg::getDependents(const RooAbsData* set) const; RooArgSet*RooAbsArg::getDependents(con",MatchSource.WIKI,root/html534/ParamHistFunc.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ParamHistFunc.html
https://root.cern/root/html534/ParamHistFunc.html:15801,Security,Hash,Hash,15801,"AbsReal::getPropagatedError(const RooFitResult& fr); const Text_t*RooAbsArg::getStringAttribute(const Text_t* key) const; virtual const char*TNamed::GetTitle() const; TStringRooAbsReal::getTitle(Bool_t appendUnit = kFALSE) const; Bool_tRooAbsArg::getTransientAttribute(const Text_t* name) const; virtual UInt_tTObject::GetUniqueID() const; const Text_t*RooAbsReal::getUnit() const; Double_tRooAbsReal::getVal(const RooArgSet* set = 0) const; Double_tRooAbsReal::getVal(const RooArgSet& set) const; virtual Double_tRooAbsReal::getValV(const RooArgSet* set = 0) const; RooArgSet*RooAbsArg::getVariables(Bool_t stripDisconnected = kTRUE) const; voidRooAbsArg::graphVizTree(const char* fileName, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); voidRooAbsArg::graphVizTree(ostream& os, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tRooAbsArg::hasClients() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tRooAbsArg::hasRange(const char*) const; static Bool_tRooAbsReal::hideOffset(); RooGenFunction*RooAbsReal::iGenFunction(RooRealVar& x, const RooArgSet& nset = RooArgSet()); RooMultiGenFunction*RooAbsReal::iGenFunction(const RooArgSet& observables, const RooArgSet& nset = RooArgSet()); virtual Bool_tRooAbsArg::importWorkspaceHook(RooWorkspace&); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual Bool_tRooAbsArg::inRange(const char*) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual voidRooAbsArg::ioStreamerPass2(); static voidRooAbsArg::ioStreamerPass2Finalize(); virtual TClass*IsA() const; virtual Bool_tisBinnedDistribution(const RooArgSet&) const; Bool_tRooAbsArg::isCloneOf(const RooAbsArg& other) const; Bool_tRooAbsArg::isConstant() const; virtual Bool_tRooAbsArg::",MatchSource.WIKI,root/html534/ParamHistFunc.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ParamHistFunc.html
https://root.cern/root/html534/ParamHistFunc.html:33182,Security,validat,validate,33182,,MatchSource.WIKI,root/html534/ParamHistFunc.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ParamHistFunc.html
https://root.cern/root/html534/ParamHistFunc.html:33980,Security,access,access,33980,"Arg::_boolAttribBoolean attributes; set<std::string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); Bool_tRooAbsReal::_boolValue! Transient cache for bool values from tree branches ; UChar_tRooAbsReal::_byteValue! Transient cache for byte values from tree branches ; static Bool_tRooAbsReal::_cacheCheckIf true, always validate contents of clean which outcome of evaluate(); deque<RooAbsCache*>RooAbsArg::_cacheListlist of caches; RooRefCountListRooAbsArg::_clientListlist of client objects; RooRefCountListRooAbsArg::_clientListShapesubset of clients that requested shape dirty flag propagation; RooRefCountListRooAbsArg::_clientListValuesubset of clients that requested value dirty flag propagation; TIterator*RooAbsArg::_clientShapeIter! Iterator over _clientListShape ; TIterator*RooAbsArg::_clientValueIter! Iterator over _clientListValue ; RooDataHist_dataSet; RooListProxy_dataVarsThe RooRealVars; Bool_tRooAbsArg::_deleteWatch! Delete watch flag ; RooExpensiveObjectCache*RooAbsArg::_eocachePointer to global cache manager for any expensive components created by this object; Bool_tRooAbsArg::_fastAllow fast access mode in getVal() and proxies; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsReal::_hideOffsetOffset hiding flag; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; Bool_tRooAbsArg::_isConstant! Cached isConstant status ; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist.",MatchSource.WIKI,root/html534/ParamHistFunc.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ParamHistFunc.html
https://root.cern/root/html534/ParamHistFunc.html:9087,Testability,test,testArg,9087,"l*RooAbsReal::createPlotProjection(const RooArgSet& dependentVars, const RooArgSet* projectedVars, RooArgSet*& cloneSet, const char* rangeName = 0, const RooArgSet* condObs = 0) const; virtual RooAbsReal*RooAbsReal::createProfile(const RooArgSet& paramsOfInterest); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooArgSet& nset = RooArgSet()); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); RooAbsReal*RooAbsReal::createScanRI(const RooArgSet& iset, const RooArgSet& nset, Int_t numScanBins, Int_t intOrder); virtual Double_tRooAbsReal::defaultErrorLevel() const; static RooNumIntConfig*RooAbsReal::defaultIntegratorConfig(); virtual Int_tRooAbsArg::defaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooPrintable::defaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Bool_tRooAbsArg::dependentOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependentOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependsOn(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOn(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0) const; RooDerivative*RooAbsReal::derivative(RooRealVar& obs, Int_t order = 1, Double_t eps = 0.",MatchSource.WIKI,root/html534/ParamHistFunc.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ParamHistFunc.html
https://root.cern/root/html534/ParamHistFunc.html:9181,Testability,test,testArg,9181,"l*RooAbsReal::createPlotProjection(const RooArgSet& dependentVars, const RooArgSet* projectedVars, RooArgSet*& cloneSet, const char* rangeName = 0, const RooArgSet* condObs = 0) const; virtual RooAbsReal*RooAbsReal::createProfile(const RooArgSet& paramsOfInterest); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooArgSet& nset = RooArgSet()); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); RooAbsReal*RooAbsReal::createScanRI(const RooArgSet& iset, const RooArgSet& nset, Int_t numScanBins, Int_t intOrder); virtual Double_tRooAbsReal::defaultErrorLevel() const; static RooNumIntConfig*RooAbsReal::defaultIntegratorConfig(); virtual Int_tRooAbsArg::defaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooPrintable::defaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Bool_tRooAbsArg::dependentOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependentOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependsOn(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOn(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0) const; RooDerivative*RooAbsReal::derivative(RooRealVar& obs, Int_t order = 1, Double_t eps = 0.",MatchSource.WIKI,root/html534/ParamHistFunc.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ParamHistFunc.html
https://root.cern/root/html534/ParamHistFunc.html:17866,Testability,log,logEvalError,17866,") const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tRooAbsArg::isFundamental() const; virtual Bool_tRooAbsReal::isIdentical(const RooAbsArg& other, Bool_t assumeSameType = kFALSE); virtual Bool_tRooAbsArg::isLValue() const; virtual Bool_tRooAbsReal::isOffsetting() const; Bool_tTObject::IsOnHeap() const; Bool_tRooAbsArg::isShapeDirty() const; Bool_tRooAbsArg::isShapeServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isShapeServer(const char* name) const; virtual Bool_tRooAbsArg::IsSortable() const; Bool_tRooAbsArg::isValueDirty() const; Bool_tRooAbsArg::isValueDirtyAndClear() const; Bool_tRooAbsArg::isValueOrShapeDirtyAndClear() const; Bool_tRooAbsArg::isValueServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isValueServer(const char* name) const; Bool_tTObject::IsZombie() const; voidRooAbsArg::leafNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t recurseNonDerived = kFALSE) const; Bool_tRooAbsArg::localNoDirtyInhibit() const; voidRooAbsReal::logEvalError(const char* message, const char* serverValueString = 0) const; static voidRooAbsReal::logEvalError(const RooAbsReal* originator, const char* origName, const char* message, const char* serverValueString = 0); virtual voidTNamed::ls(Option_t* option = """") const; virtual Double_tRooAbsReal::maxVal(Int_t code) const; voidTObject::MayNotUse(const char* method) const; RooAbsMoment*RooAbsReal::mean(RooRealVar& obs); RooAbsMoment*RooAbsReal::mean(RooRealVar& obs, const RooArgSet& nset); virtual Int_tRooAbsReal::minTrialSamples(const RooArgSet&) const; RooAbsMoment*RooAbsReal::moment(RooRealVar& obs, Int_t order, Bool_t central, Bool_t takeRoot); RooAbsMoment*RooAbsReal::moment(RooRealVar& obs, const RooArgSet& normObs, Int_t order, Bool_t central, Bool_t takeRoot, Bool_t intNormObs); static voidRooPrintable::nameFieldLength(Int_t newLen); const TNamed*RooAbsArg::namePtr() const; virtual Bool_tTObject::Notify(); Int_tnumBins() const; Int_tRooAbsArg::numCaches() const; static Int_tRooAbsRe",MatchSource.WIKI,root/html534/ParamHistFunc.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ParamHistFunc.html
https://root.cern/root/html534/ParamHistFunc.html:17965,Testability,log,logEvalError,17965,"irtual Bool_tRooAbsReal::isIdentical(const RooAbsArg& other, Bool_t assumeSameType = kFALSE); virtual Bool_tRooAbsArg::isLValue() const; virtual Bool_tRooAbsReal::isOffsetting() const; Bool_tTObject::IsOnHeap() const; Bool_tRooAbsArg::isShapeDirty() const; Bool_tRooAbsArg::isShapeServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isShapeServer(const char* name) const; virtual Bool_tRooAbsArg::IsSortable() const; Bool_tRooAbsArg::isValueDirty() const; Bool_tRooAbsArg::isValueDirtyAndClear() const; Bool_tRooAbsArg::isValueOrShapeDirtyAndClear() const; Bool_tRooAbsArg::isValueServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isValueServer(const char* name) const; Bool_tTObject::IsZombie() const; voidRooAbsArg::leafNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t recurseNonDerived = kFALSE) const; Bool_tRooAbsArg::localNoDirtyInhibit() const; voidRooAbsReal::logEvalError(const char* message, const char* serverValueString = 0) const; static voidRooAbsReal::logEvalError(const RooAbsReal* originator, const char* origName, const char* message, const char* serverValueString = 0); virtual voidTNamed::ls(Option_t* option = """") const; virtual Double_tRooAbsReal::maxVal(Int_t code) const; voidTObject::MayNotUse(const char* method) const; RooAbsMoment*RooAbsReal::mean(RooRealVar& obs); RooAbsMoment*RooAbsReal::mean(RooRealVar& obs, const RooArgSet& nset); virtual Int_tRooAbsReal::minTrialSamples(const RooArgSet&) const; RooAbsMoment*RooAbsReal::moment(RooRealVar& obs, Int_t order, Bool_t central, Bool_t takeRoot); RooAbsMoment*RooAbsReal::moment(RooRealVar& obs, const RooArgSet& normObs, Int_t order, Bool_t central, Bool_t takeRoot, Bool_t intNormObs); static voidRooPrintable::nameFieldLength(Int_t newLen); const TNamed*RooAbsArg::namePtr() const; virtual Bool_tTObject::Notify(); Int_tnumBins() const; Int_tRooAbsArg::numCaches() const; static Int_tRooAbsReal::numEvalErrorItems(); static Int_tRooAbsReal::numEvalErrors(); Bool_tRooAbsArg::observableOverla",MatchSource.WIKI,root/html534/ParamHistFunc.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ParamHistFunc.html
https://root.cern/root/html534/ParamHistFunc.html:19016,Testability,test,testArg,19016,"origName, const char* message, const char* serverValueString = 0); virtual voidTNamed::ls(Option_t* option = """") const; virtual Double_tRooAbsReal::maxVal(Int_t code) const; voidTObject::MayNotUse(const char* method) const; RooAbsMoment*RooAbsReal::mean(RooRealVar& obs); RooAbsMoment*RooAbsReal::mean(RooRealVar& obs, const RooArgSet& nset); virtual Int_tRooAbsReal::minTrialSamples(const RooArgSet&) const; RooAbsMoment*RooAbsReal::moment(RooRealVar& obs, Int_t order, Bool_t central, Bool_t takeRoot); RooAbsMoment*RooAbsReal::moment(RooRealVar& obs, const RooArgSet& normObs, Int_t order, Bool_t central, Bool_t takeRoot, Bool_t intNormObs); static voidRooPrintable::nameFieldLength(Int_t newLen); const TNamed*RooAbsArg::namePtr() const; virtual Bool_tTObject::Notify(); Int_tnumBins() const; Int_tRooAbsArg::numCaches() const; static Int_tRooAbsReal::numEvalErrorItems(); static Int_tRooAbsReal::numEvalErrors(); Bool_tRooAbsArg::observableOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::observableOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; virtual Double_tRooAbsReal::offset() const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TNamed&TNamed::operator=(const TNamed& rhs); Bool_tRooAbsReal::operator==(Double_t value) const; virtual Bool_tRooAbsReal::operator==(const RooAbsArg& other); RooAbsArg::OperModeRooAbsArg::operMode() const; virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables); virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables, Roo",MatchSource.WIKI,root/html534/ParamHistFunc.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ParamHistFunc.html
https://root.cern/root/html534/ParamHistFunc.html:19111,Testability,test,testArg,19111,"n_t* option = """") const; virtual Double_tRooAbsReal::maxVal(Int_t code) const; voidTObject::MayNotUse(const char* method) const; RooAbsMoment*RooAbsReal::mean(RooRealVar& obs); RooAbsMoment*RooAbsReal::mean(RooRealVar& obs, const RooArgSet& nset); virtual Int_tRooAbsReal::minTrialSamples(const RooArgSet&) const; RooAbsMoment*RooAbsReal::moment(RooRealVar& obs, Int_t order, Bool_t central, Bool_t takeRoot); RooAbsMoment*RooAbsReal::moment(RooRealVar& obs, const RooArgSet& normObs, Int_t order, Bool_t central, Bool_t takeRoot, Bool_t intNormObs); static voidRooPrintable::nameFieldLength(Int_t newLen); const TNamed*RooAbsArg::namePtr() const; virtual Bool_tTObject::Notify(); Int_tnumBins() const; Int_tRooAbsArg::numCaches() const; static Int_tRooAbsReal::numEvalErrorItems(); static Int_tRooAbsReal::numEvalErrors(); Bool_tRooAbsArg::observableOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::observableOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; virtual Double_tRooAbsReal::offset() const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TNamed&TNamed::operator=(const TNamed& rhs); Bool_tRooAbsReal::operator==(Double_t value) const; virtual Bool_tRooAbsReal::operator==(const RooAbsArg& other); RooAbsArg::OperModeRooAbsArg::operMode() const; virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables); virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables, RooArgSet& optNodes, RooLinkedList& processedNodes); Bool_tRooAbsArg::overlaps(const RooAbsArg& te",MatchSource.WIKI,root/html534/ParamHistFunc.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ParamHistFunc.html
https://root.cern/root/html534/ParamHistFunc.html:20113,Testability,test,testArg,20113,"oAbsArg::observableOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; virtual Double_tRooAbsReal::offset() const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TNamed&TNamed::operator=(const TNamed& rhs); Bool_tRooAbsReal::operator==(Double_t value) const; virtual Bool_tRooAbsReal::operator==(const RooAbsArg& other); RooAbsArg::OperModeRooAbsArg::operMode() const; virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables); virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables, RooArgSet& optNodes, RooLinkedList& processedNodes); Bool_tRooAbsArg::overlaps(const RooAbsArg& testArg, Bool_t valueOnly = kFALSE) const; const RooArgSet*RooAbsArg::ownedComponents() const; virtual voidTObject::Paint(Option_t* option = """"); const RooArgList&paramList() const; virtual RooPlot*RooAbsReal::plotOn(RooPlot* frame, RooLinkedList& cmdList) const; virtual RooPlot*RooAbsReal::plotOn(RooPlot* frame, const RooCmdArg& arg1 = RooCmdArg(), const RooCmdArg& arg2 = RooCmdArg(), const RooCmdArg& arg3 = RooCmdArg(), const RooCmdArg& arg4 = RooCmdArg(), const RooCmdArg& arg5 = RooCmdArg(), const RooCmdArg& arg6 = RooCmdArg(), const RooCmdArg& arg7 = RooCmdArg(), const RooCmdArg& arg8 = RooCmdArg(), const RooCmdArg& arg9 = RooCmdArg(), const RooCmdArg& arg10 = RooCmdArg()) const; virtual list<Double_t>*plotSamplingHint(RooAbsRealLValue& obs, Double_t xlo, Double_t xhi) const; virtual RooPlot*RooAbsReal::plotSliceOn(RooPlot* frame, const RooArgSet& sliceSet, Option_t* drawOptions = ""L"", Double_t scaleFactor = 1.",MatchSource.WIKI,root/html534/ParamHistFunc.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ParamHistFunc.html
https://root.cern/root/html534/ParamHistFunc.html:26491,Testability,Test,TestBit,26491,"RooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsArg::setTransientAttribute(const Text_t* name, Bool_t value = kTRUE); virtual voidTObject::SetUniqueID(UInt_t uid); voidRooAbsReal::setUnit(const char* unit); voidRooAbsArg::setValueDirty() const; TIterator*RooAbsArg::shapeClientIterator() const; RooFIterRooAbsArg::shapeClientMIterator() const; virtual voidShowMembers(TMemberInspector&); RooAbsMoment*RooAbsReal::sigma(RooRealVar& obs); RooAbsMoment*RooAbsReal::sigma(RooRealVar& obs, const RooArgSet& nset); virtual Int_tTNamed::Sizeof() const; RooNumIntConfig*RooAbsReal::specialIntegratorConfig() const; RooNumIntConfig*RooAbsReal::specialIntegratorConfig(Bool_t createOnTheFly); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); const map<std::string,std::string>&RooAbsArg::stringAttributes() const; virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; const set<std::string>&RooAbsArg::transientAttributes() const; voidRooAbsArg::treeNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t doBranch = kTRUE, Bool_t doLeaf = kTRUE, Bool_t valueOnly = kFALSE, Bool_t recurseNonDerived = kFALSE) const; voidRooAbsArg::unRegisterCache(RooAbsCache& cache); virtual voidTObject::UseCurrentStyle(); TIterator*RooAbsArg::valueClientIterator() const; RooFIterRooAbsArg::valueClientMIterator() const; static voidRooAbsArg::verboseDirty(Bool_t flag); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; voidRooAbsArg::wireAllCaches(); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidRooAbsReal::writeToStream(ostream& os, Bool_t compact) const.",MatchSource.WIKI,root/html534/ParamHistFunc.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ParamHistFunc.html
https://root.cern/root/html534/ParamHistFunc.html:26530,Testability,Test,TestBits,26530,"RooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsArg::setTransientAttribute(const Text_t* name, Bool_t value = kTRUE); virtual voidTObject::SetUniqueID(UInt_t uid); voidRooAbsReal::setUnit(const char* unit); voidRooAbsArg::setValueDirty() const; TIterator*RooAbsArg::shapeClientIterator() const; RooFIterRooAbsArg::shapeClientMIterator() const; virtual voidShowMembers(TMemberInspector&); RooAbsMoment*RooAbsReal::sigma(RooRealVar& obs); RooAbsMoment*RooAbsReal::sigma(RooRealVar& obs, const RooArgSet& nset); virtual Int_tTNamed::Sizeof() const; RooNumIntConfig*RooAbsReal::specialIntegratorConfig() const; RooNumIntConfig*RooAbsReal::specialIntegratorConfig(Bool_t createOnTheFly); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); const map<std::string,std::string>&RooAbsArg::stringAttributes() const; virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; const set<std::string>&RooAbsArg::transientAttributes() const; voidRooAbsArg::treeNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t doBranch = kTRUE, Bool_t doLeaf = kTRUE, Bool_t valueOnly = kFALSE, Bool_t recurseNonDerived = kFALSE) const; voidRooAbsArg::unRegisterCache(RooAbsCache& cache); virtual voidTObject::UseCurrentStyle(); TIterator*RooAbsArg::valueClientIterator() const; RooFIterRooAbsArg::valueClientMIterator() const; static voidRooAbsArg::verboseDirty(Bool_t flag); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; voidRooAbsArg::wireAllCaches(); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidRooAbsReal::writeToStream(ostream& os, Bool_t compact) const.",MatchSource.WIKI,root/html534/ParamHistFunc.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ParamHistFunc.html
https://root.cern/root/html534/ParamHistFunc.html:3561,Usability,Clear,Clear,3561,"rtual RooFitResult*RooAbsReal::chi2FitTo(RooDataSet& xydata, const RooLinkedList& cmdList); virtual RooFitResult*RooAbsReal::chi2FitTo(RooDataHist& data, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); virtual RooFitResult*RooAbsReal::chi2FitTo(RooDataSet& xydata, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); static voidRooAbsReal::clearEvalErrorLog(); voidRooAbsArg::clearShapeDirty() const; voidRooAbsArg::clearValueAndShapeDirty() const; voidRooAbsArg::clearValueDirty() const; TIterator*RooAbsArg::clientIterator() const; virtual TObject*clone(const char* newname) const; virtual TObject*RooAbsArg::Clone(const char* newname = 0) const; virtual RooAbsArg*RooAbsArg::cloneTree(const char* newname = 0) const; virtual Int_tRooAbsArg::Compare(const TObject* other) const; virtual voidRooAbsArg::constOptimizeTestStatistic(RooAbsArg::ConstOpCode opcode, Bool_t doAlsoTrackingOpt = kTRUE); virtual voidTNamed::Copy(TObject& named) const; static UInt_tRooAbsArg::crc32(const char* data); static UInt_tRooAbsArg::crc32(const char* data, ULong_t sz, UInt_t crc = 0); virtual RooAbsReal*RooAbsReal::createChi2(RooDataHist& data, const RooLinkedList& cmdList); virtual RooAbsReal*RooAbsReal::createChi2(RooDataSet& data, const RooLinkedList& cmdList); virtual RooAbsReal*RooAbsReal::creat",MatchSource.WIKI,root/html534/ParamHistFunc.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ParamHistFunc.html
https://root.cern/root/html534/ParamHistFunc.html:3614,Usability,clear,clearEvalErrorLog,3614,", const RooLinkedList& cmdList); virtual RooFitResult*RooAbsReal::chi2FitTo(RooDataHist& data, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); virtual RooFitResult*RooAbsReal::chi2FitTo(RooDataSet& xydata, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); static voidRooAbsReal::clearEvalErrorLog(); voidRooAbsArg::clearShapeDirty() const; voidRooAbsArg::clearValueAndShapeDirty() const; voidRooAbsArg::clearValueDirty() const; TIterator*RooAbsArg::clientIterator() const; virtual TObject*clone(const char* newname) const; virtual TObject*RooAbsArg::Clone(const char* newname = 0) const; virtual RooAbsArg*RooAbsArg::cloneTree(const char* newname = 0) const; virtual Int_tRooAbsArg::Compare(const TObject* other) const; virtual voidRooAbsArg::constOptimizeTestStatistic(RooAbsArg::ConstOpCode opcode, Bool_t doAlsoTrackingOpt = kTRUE); virtual voidTNamed::Copy(TObject& named) const; static UInt_tRooAbsArg::crc32(const char* data); static UInt_tRooAbsArg::crc32(const char* data, ULong_t sz, UInt_t crc = 0); virtual RooAbsReal*RooAbsReal::createChi2(RooDataHist& data, const RooLinkedList& cmdList); virtual RooAbsReal*RooAbsReal::createChi2(RooDataSet& data, const RooLinkedList& cmdList); virtual RooAbsReal*RooAbsReal::createChi2(RooDataHist& data, const RooCmdArg& arg1 = RooCmdArg:",MatchSource.WIKI,root/html534/ParamHistFunc.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ParamHistFunc.html
https://root.cern/root/html534/ParamHistFunc.html:3650,Usability,clear,clearShapeDirty,3650,"rtual RooFitResult*RooAbsReal::chi2FitTo(RooDataHist& data, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); virtual RooFitResult*RooAbsReal::chi2FitTo(RooDataSet& xydata, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); static voidRooAbsReal::clearEvalErrorLog(); voidRooAbsArg::clearShapeDirty() const; voidRooAbsArg::clearValueAndShapeDirty() const; voidRooAbsArg::clearValueDirty() const; TIterator*RooAbsArg::clientIterator() const; virtual TObject*clone(const char* newname) const; virtual TObject*RooAbsArg::Clone(const char* newname = 0) const; virtual RooAbsArg*RooAbsArg::cloneTree(const char* newname = 0) const; virtual Int_tRooAbsArg::Compare(const TObject* other) const; virtual voidRooAbsArg::constOptimizeTestStatistic(RooAbsArg::ConstOpCode opcode, Bool_t doAlsoTrackingOpt = kTRUE); virtual voidTNamed::Copy(TObject& named) const; static UInt_tRooAbsArg::crc32(const char* data); static UInt_tRooAbsArg::crc32(const char* data, ULong_t sz, UInt_t crc = 0); virtual RooAbsReal*RooAbsReal::createChi2(RooDataHist& data, const RooLinkedList& cmdList); virtual RooAbsReal*RooAbsReal::createChi2(RooDataSet& data, const RooLinkedList& cmdList); virtual RooAbsReal*RooAbsReal::createChi2(RooDataHist& data, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = Ro",MatchSource.WIKI,root/html534/ParamHistFunc.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ParamHistFunc.html
https://root.cern/root/html534/ParamHistFunc.html:3690,Usability,clear,clearValueAndShapeDirty,3690,"DataHist& data, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); virtual RooFitResult*RooAbsReal::chi2FitTo(RooDataSet& xydata, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); static voidRooAbsReal::clearEvalErrorLog(); voidRooAbsArg::clearShapeDirty() const; voidRooAbsArg::clearValueAndShapeDirty() const; voidRooAbsArg::clearValueDirty() const; TIterator*RooAbsArg::clientIterator() const; virtual TObject*clone(const char* newname) const; virtual TObject*RooAbsArg::Clone(const char* newname = 0) const; virtual RooAbsArg*RooAbsArg::cloneTree(const char* newname = 0) const; virtual Int_tRooAbsArg::Compare(const TObject* other) const; virtual voidRooAbsArg::constOptimizeTestStatistic(RooAbsArg::ConstOpCode opcode, Bool_t doAlsoTrackingOpt = kTRUE); virtual voidTNamed::Copy(TObject& named) const; static UInt_tRooAbsArg::crc32(const char* data); static UInt_tRooAbsArg::crc32(const char* data, ULong_t sz, UInt_t crc = 0); virtual RooAbsReal*RooAbsReal::createChi2(RooDataHist& data, const RooLinkedList& cmdList); virtual RooAbsReal*RooAbsReal::createChi2(RooDataSet& data, const RooLinkedList& cmdList); virtual RooAbsReal*RooAbsReal::createChi2(RooDataHist& data, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = Roo",MatchSource.WIKI,root/html534/ParamHistFunc.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ParamHistFunc.html
https://root.cern/root/html534/ParamHistFunc.html:3738,Usability,clear,clearValueDirty,3738,"mdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); virtual RooFitResult*RooAbsReal::chi2FitTo(RooDataSet& xydata, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); static voidRooAbsReal::clearEvalErrorLog(); voidRooAbsArg::clearShapeDirty() const; voidRooAbsArg::clearValueAndShapeDirty() const; voidRooAbsArg::clearValueDirty() const; TIterator*RooAbsArg::clientIterator() const; virtual TObject*clone(const char* newname) const; virtual TObject*RooAbsArg::Clone(const char* newname = 0) const; virtual RooAbsArg*RooAbsArg::cloneTree(const char* newname = 0) const; virtual Int_tRooAbsArg::Compare(const TObject* other) const; virtual voidRooAbsArg::constOptimizeTestStatistic(RooAbsArg::ConstOpCode opcode, Bool_t doAlsoTrackingOpt = kTRUE); virtual voidTNamed::Copy(TObject& named) const; static UInt_tRooAbsArg::crc32(const char* data); static UInt_tRooAbsArg::crc32(const char* data, ULong_t sz, UInt_t crc = 0); virtual RooAbsReal*RooAbsReal::createChi2(RooDataHist& data, const RooLinkedList& cmdList); virtual RooAbsReal*RooAbsReal::createChi2(RooDataSet& data, const RooLinkedList& cmdList); virtual RooAbsReal*RooAbsReal::createChi2(RooDataHist& data, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooC",MatchSource.WIKI,root/html534/ParamHistFunc.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ParamHistFunc.html
https://root.cern/root/html534/PictureAttributes_t.html:969,Modifiability,Inherit,Inheritance,969,. PictureAttributes_t. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » PictureAttributes_t. class PictureAttributes_t. GuiTypes. Types used by the GUI classes. Function Members (Methods); public:. PictureAttributes_t(); PictureAttributes_t(const PictureAttributes_t&); ~PictureAttributes_t(); PictureAttributes_t&operator=(const PictureAttributes_t&). Data Members; public:. UInt_tfClosenessallowable RGB deviation; Colormap_tfColormapcolormap to use; Int_tfDepthdepth of window; UInt_tfHeightheight of picture; Mask_tfMaskmask specifying which attributes are defined; UInt_tfNpixelsnumber of used color pixels; ULong_t*fPixelslist of used color pixels (if set use delete[]); UInt_tfWidthwidth of picture; UInt_tfXHotspotpicture x hotspot coordinate; UInt_tfYHotspotpicture y hotspot coordinate. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation. » Last changed: Tue Sep 8 16:58:29 2015 » Last generated: 2015-09-08 16:58; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ,MatchSource.WIKI,root/html534/PictureAttributes_t.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PictureAttributes_t.html
https://root.cern/root/html534/PictureAttributes_t.html:982,Modifiability,Inherit,Inherited,982,. PictureAttributes_t. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » PictureAttributes_t. class PictureAttributes_t. GuiTypes. Types used by the GUI classes. Function Members (Methods); public:. PictureAttributes_t(); PictureAttributes_t(const PictureAttributes_t&); ~PictureAttributes_t(); PictureAttributes_t&operator=(const PictureAttributes_t&). Data Members; public:. UInt_tfClosenessallowable RGB deviation; Colormap_tfColormapcolormap to use; Int_tfDepthdepth of window; UInt_tfHeightheight of picture; Mask_tfMaskmask specifying which attributes are defined; UInt_tfNpixelsnumber of used color pixels; ULong_t*fPixelslist of used color pixels (if set use delete[]); UInt_tfWidthwidth of picture; UInt_tfXHotspotpicture x hotspot coordinate; UInt_tfYHotspotpicture y hotspot coordinate. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation. » Last changed: Tue Sep 8 16:58:29 2015 » Last generated: 2015-09-08 16:58; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ,MatchSource.WIKI,root/html534/PictureAttributes_t.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PictureAttributes_t.html
https://root.cern/root/html534/PiecewiseInterpolation.html:9963,Availability,Error,Error,9963,,MatchSource.WIKI,root/html534/PiecewiseInterpolation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PiecewiseInterpolation.html
https://root.cern/root/html534/PiecewiseInterpolation.html:10096,Availability,Error,ErrorLoggingModeRooAbsReal,10096,,MatchSource.WIKI,root/html534/PiecewiseInterpolation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PiecewiseInterpolation.html
https://root.cern/root/html534/PiecewiseInterpolation.html:10224,Availability,error,error,10224,,MatchSource.WIKI,root/html534/PiecewiseInterpolation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PiecewiseInterpolation.html
https://root.cern/root/html534/PiecewiseInterpolation.html:10308,Availability,error,error,10308,,MatchSource.WIKI,root/html534/PiecewiseInterpolation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PiecewiseInterpolation.html
https://root.cern/root/html534/PiecewiseInterpolation.html:24330,Availability,Error,ErrorLoggingMode,24330,"shapeProp); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); TIterator*RooAbsArg::serverIterator() const; RooFIterRooAbsArg::serverMIterator() const; virtual voidRooAbsArg::serverNameChangeHook(const RooAbsArg*, const RooAbsArg*); voidsetAllInterpCodes(int code); voidRooAbsArg::setAttribute(const Text_t* name, Bool_t value = kTRUE); Bool_tsetBinIntegrator(RooArgSet& allVars); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidRooAbsArg::setCacheAndTrackHints(RooArgSet&); static voidRooAbsReal::setCacheCheck(Bool_t flag); virtual Bool_tRooAbsReal::setData(RooAbsData&, Bool_t = kTRUE); static voidRooAbsArg::setDirtyInhibit(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidRooAbsReal::setEvalErrorLoggingMode(RooAbsReal::ErrorLoggingMode m); virtual voidRooAbsArg::setExpensiveObjectCache(RooExpensiveObjectCache& cache); static voidRooAbsReal::setHideOffset(Bool_t flag); voidRooAbsReal::setIntegratorConfig(); voidRooAbsReal::setIntegratorConfig(const RooNumIntConfig& config); voidsetInterpCode(RooAbsReal& param, int code); voidRooAbsArg::setLocalNoDirtyInhibit(Bool_t flag) const; virtual voidRooAbsArg::SetName(const char* name); virtual voidRooAbsArg::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsArg::setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); voidRooAbsReal::setParameterizeIntegral(const RooArgSet& paramVars); voidRooAbsReal::setPlotLabel(const char* label); voidsetPositiveDefinite(bool flag = true); voidRooAbsArg::setProhibitServerRedirect(Bool_t flag); voidRooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; ",MatchSource.WIKI,root/html534/PiecewiseInterpolation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PiecewiseInterpolation.html
https://root.cern/root/html534/PiecewiseInterpolation.html:31341,Availability,Error,ErrorLoggingMode,31341,"tProxyNormSet(const RooArgSet* nset); voidRooAbsArg::setShapeDirty(const RooAbsArg* source) const; virtual voidRooAbsReal::setTreeBranchStatus(TTree& t, Bool_t active); voidRooAbsArg::setValueDirty(const RooAbsArg* source) const; virtual voidRooAbsReal::syncCache(const RooArgSet* set = 0); Double_tRooAbsReal::traceEval(const RooArgSet* set) const; virtual Bool_tRooAbsReal::traceEvalHook(Double_t) const; voidRooAbsArg::unRegisterProxy(RooArgProxy& proxy); voidRooAbsArg::unRegisterProxy(RooSetProxy& proxy); voidRooAbsArg::unRegisterProxy(RooListProxy& proxy). Data Members; public:. enum RooAbsReal::ScaleType { Raw; Relative; NumEvent; RelativeExpected; };; enum RooAbsReal::ErrorLoggingMode { PrintErrors; CollectErrors; CountErrors; Ignore; };; enum RooAbsArg::ConstOpCode { Activate; DeActivate; ConfigChange; ValueChange; };; enum RooAbsArg::CacheMode { Always; NotAdvised; Never; };; enum RooAbsArg::OperMode { Auto; AClean; ADirty; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };; enum RooPrintable::ContentsOption { kName; kClassName; kValue; kArgs; kExtras; kAddress; kTitle; kCollectionHeader; };; enum RooPrintable::StyleOption { kInline; kSingleLine; kStandard; kVerbose; kTreeStructure; };. public:. static map<RooAbsArg*,TRefArray*>RooAbsArg::_ioEvoListtemporary holding list for proxies needed in schema evolution ; static stack<RooAbsArg*>RooAbsArg::_ioReadStackreading stack ; static const UInt_tRooAbsArg::fnv1a32start; static const ULong64_tRooAbsArg::fnv1a64start. protected:. set<std::string>RooAbsArg::_boolAttribBoolean attributes; set<std::string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); Bool_tRooAbsReal::_boolValue! Transient cache for bool values from tree branches ; UChar_tRooAbsReal::_byteValue! Transient cache for ",MatchSource.WIKI,root/html534/PiecewiseInterpolation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PiecewiseInterpolation.html
https://root.cern/root/html534/PiecewiseInterpolation.html:33664,Deployability,integrat,integration,33664,"string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); Bool_tRooAbsReal::_boolValue! Transient cache for bool values from tree branches ; UChar_tRooAbsReal::_byteValue! Transient cache for byte values from tree branches ; static Bool_tRooAbsReal::_cacheCheckIf true, always validate contents of clean which outcome of evaluate(); deque<RooAbsCache*>RooAbsArg::_cacheListlist of caches; RooRefCountListRooAbsArg::_clientListlist of client objects; RooRefCountListRooAbsArg::_clientListShapesubset of clients that requested shape dirty flag propagation; RooRefCountListRooAbsArg::_clientListValuesubset of clients that requested value dirty flag propagation; TIterator*RooAbsArg::_clientShapeIter! Iterator over _clientListShape ; TIterator*RooAbsArg::_clientValueIter! Iterator over _clientListValue ; Bool_tRooAbsArg::_deleteWatch! Delete watch flag ; RooExpensiveObjectCache*RooAbsArg::_eocachePointer to global cache manager for any expensive components created by this object; Bool_tRooAbsArg::_fastAllow fast access mode in getVal() and proxies; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsReal::_hideOffsetOffset hiding flag; RooListProxy_highSetHigh-side varaition; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; vector<int>_interpCode; Bool_tRooAbsArg::_isConstant! Cached isConstant status ; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; RooListProxy_lowSetLow-side variation; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist.",MatchSource.WIKI,root/html534/PiecewiseInterpolation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PiecewiseInterpolation.html
https://root.cern/root/html534/PiecewiseInterpolation.html:34575,Deployability,integrat,integration,34575," component selection; static Bool_tRooAbsReal::_hideOffsetOffset hiding flag; RooListProxy_highSetHigh-side varaition; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; vector<int>_interpCode; Bool_tRooAbsArg::_isConstant! Cached isConstant status ; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; RooListProxy_lowSetLow-side variation; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist. Pointer to global instance of string that matches object named; RooRealProxy_nominalThe nominal value; RooObjCacheManager_normIntMgrThe integration cache manager; RooListProxy_normSetinterpolation parameters; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; RooArgList_ownedListList of owned components; RooListProxy_paramSetinterpolation parameters; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_t_positiveDefiniteprotect against negative and 0 bins.; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do ",MatchSource.WIKI,root/html534/PiecewiseInterpolation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PiecewiseInterpolation.html
https://root.cern/root/html534/PiecewiseInterpolation.html:35608,Deployability,integrat,integrator,35608,"eRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; RooArgList_ownedListList of owned components; RooListProxy_paramSetinterpolation parameters; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_t_positiveDefiniteprotect against negative and 0 bins.; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; PiecewiseInterpolation(). PiecewiseInterpolation(const char* name, const char* title, const RooAbsReal& nominal, const RooArgList& lowSet, const RooArgList& highSet, const RooArgList& paramSet, Bool_t takeOwnerShip = kFALSE); Constructor with two set of RooAbsReals. The value of the function will be. A = sum_i lowSet(i)*h",MatchSource.WIKI,root/html534/PiecewiseInterpolation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PiecewiseInterpolation.html
https://root.cern/root/html534/PiecewiseInterpolation.html:35619,Deployability,configurat,configuration,35619,"eRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; RooArgList_ownedListList of owned components; RooListProxy_paramSetinterpolation parameters; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_t_positiveDefiniteprotect against negative and 0 bins.; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; PiecewiseInterpolation(). PiecewiseInterpolation(const char* name, const char* title, const RooAbsReal& nominal, const RooArgList& lowSet, const RooArgList& highSet, const RooArgList& paramSet, Bool_t takeOwnerShip = kFALSE); Constructor with two set of RooAbsReals. The value of the function will be. A = sum_i lowSet(i)*h",MatchSource.WIKI,root/html534/PiecewiseInterpolation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PiecewiseInterpolation.html
https://root.cern/root/html534/PiecewiseInterpolation.html:37350,Deployability,integrat,integrations,37350," PiecewiseInterpolation(). PiecewiseInterpolation(const char* name, const char* title, const RooAbsReal& nominal, const RooArgList& lowSet, const RooArgList& highSet, const RooArgList& paramSet, Bool_t takeOwnerShip = kFALSE); Constructor with two set of RooAbsReals. The value of the function will be. A = sum_i lowSet(i)*highSet(i). If takeOwnership is true the PiecewiseInterpolation object will take ownership of the arguments in sumSet. PiecewiseInterpolation(const PiecewiseInterpolation& other, const char* name = 0); Copy constructor. ~PiecewiseInterpolation(); Destructor. Double_t evaluate() const; Calculate and return current value of self. Bool_t setBinIntegrator(RooArgSet& allVars). Int_t getAnalyticalIntegralWN(RooArgSet& allVars, RooArgSet& analVars, const RooArgSet* normSet, const char* rangeName = 0) const; Advertise that all integrals can be handled internally. Double_t analyticalIntegralWN(Int_t code, const RooArgSet* normSet, const char* rangeName = 0) const; Implement analytical integrations by doing appropriate weighting from component integrals; functions to integrators of components. void setInterpCode(RooAbsReal& param, int code). void setAllInterpCodes(int code). void printAllInterpCodes(). std::list<Double_t>* binBoundaries(RooAbsRealLValue& , Double_t , Double_t ) const; WVE note: assumes nominal and alternates have identical structure, must add explicit check. Bool_t isBinnedDistribution(const RooArgSet& obs) const; WVE note: assumes nominal and alternates have identical structure, must add explicit check. std::list<Double_t>* plotSamplingHint(RooAbsRealLValue& obs, Double_t xlo, Double_t xhi) const. void Streamer(TBuffer& ); Stream an object of class PiecewiseInterpolation. TObject* clone(const char* newname) const; { return new PiecewiseInterpolation(*this, newname); }. const RooArgList& lowList() const; virtual Double_t defaultErrorLevel() const ;; void printMetaArgs(std::ostream& os) const ;. { return _lowSet ; }. const RooArgList& highList(",MatchSource.WIKI,root/html534/PiecewiseInterpolation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PiecewiseInterpolation.html
https://root.cern/root/html534/PiecewiseInterpolation.html:37433,Deployability,integrat,integrators,37433," PiecewiseInterpolation(). PiecewiseInterpolation(const char* name, const char* title, const RooAbsReal& nominal, const RooArgList& lowSet, const RooArgList& highSet, const RooArgList& paramSet, Bool_t takeOwnerShip = kFALSE); Constructor with two set of RooAbsReals. The value of the function will be. A = sum_i lowSet(i)*highSet(i). If takeOwnership is true the PiecewiseInterpolation object will take ownership of the arguments in sumSet. PiecewiseInterpolation(const PiecewiseInterpolation& other, const char* name = 0); Copy constructor. ~PiecewiseInterpolation(); Destructor. Double_t evaluate() const; Calculate and return current value of self. Bool_t setBinIntegrator(RooArgSet& allVars). Int_t getAnalyticalIntegralWN(RooArgSet& allVars, RooArgSet& analVars, const RooArgSet* normSet, const char* rangeName = 0) const; Advertise that all integrals can be handled internally. Double_t analyticalIntegralWN(Int_t code, const RooArgSet* normSet, const char* rangeName = 0) const; Implement analytical integrations by doing appropriate weighting from component integrals; functions to integrators of components. void setInterpCode(RooAbsReal& param, int code). void setAllInterpCodes(int code). void printAllInterpCodes(). std::list<Double_t>* binBoundaries(RooAbsRealLValue& , Double_t , Double_t ) const; WVE note: assumes nominal and alternates have identical structure, must add explicit check. Bool_t isBinnedDistribution(const RooArgSet& obs) const; WVE note: assumes nominal and alternates have identical structure, must add explicit check. std::list<Double_t>* plotSamplingHint(RooAbsRealLValue& obs, Double_t xlo, Double_t xhi) const. void Streamer(TBuffer& ); Stream an object of class PiecewiseInterpolation. TObject* clone(const char* newname) const; { return new PiecewiseInterpolation(*this, newname); }. const RooArgList& lowList() const; virtual Double_t defaultErrorLevel() const ;; void printMetaArgs(std::ostream& os) const ;. { return _lowSet ; }. const RooArgList& highList(",MatchSource.WIKI,root/html534/PiecewiseInterpolation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PiecewiseInterpolation.html
https://root.cern/root/html534/PiecewiseInterpolation.html:7553,Integrability,depend,dependentVars,7553,"const char* rangeName = 0) const; virtual RooAbsReal*RooAbsReal::createIntegral(const RooArgSet& iset, const RooArgSet* nset = 0, const RooNumIntConfig* cfg = 0, const char* rangeName = 0) const; RooAbsReal*RooAbsReal::createIntegral(const RooArgSet& iset, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()) const; RooAbsReal*RooAbsReal::createIntRI(const RooArgSet& iset, const RooArgSet& nset = RooArgSet()); const RooAbsReal*RooAbsReal::createPlotProjection(const RooArgSet& depVars, const RooArgSet& projVars) const; const RooAbsReal*RooAbsReal::createPlotProjection(const RooArgSet& depVars, const RooArgSet& projVars, RooArgSet*& cloneSet) const; const RooAbsReal*RooAbsReal::createPlotProjection(const RooArgSet& dependentVars, const RooArgSet* projectedVars, RooArgSet*& cloneSet, const char* rangeName = 0, const RooArgSet* condObs = 0) const; virtual RooAbsReal*RooAbsReal::createProfile(const RooArgSet& paramsOfInterest); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooArgSet& nset = RooArgSet()); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); RooAbsReal*RooAbsReal::createScanRI(const RooArgSet& iset, const RooArgSet& nset, Int_t numScanBins, Int_t intOrder); virtual Double_tRooAbsReal::defaultErrorLevel() const; static RooNumIntConfig*RooAbsReal::defaultIntegratorConfig(); virtual Int_tRooAbsArg::defaultPrintContents(Option_t* opt)",MatchSource.WIKI,root/html534/PiecewiseInterpolation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PiecewiseInterpolation.html
https://root.cern/root/html534/PiecewiseInterpolation.html:8795,Integrability,depend,dependentOverlaps,8795,"l*RooAbsReal::createPlotProjection(const RooArgSet& dependentVars, const RooArgSet* projectedVars, RooArgSet*& cloneSet, const char* rangeName = 0, const RooArgSet* condObs = 0) const; virtual RooAbsReal*RooAbsReal::createProfile(const RooArgSet& paramsOfInterest); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooArgSet& nset = RooArgSet()); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); RooAbsReal*RooAbsReal::createScanRI(const RooArgSet& iset, const RooArgSet& nset, Int_t numScanBins, Int_t intOrder); virtual Double_tRooAbsReal::defaultErrorLevel() const; static RooNumIntConfig*RooAbsReal::defaultIntegratorConfig(); virtual Int_tRooAbsArg::defaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooPrintable::defaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Bool_tRooAbsArg::dependentOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependentOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependsOn(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOn(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0) const; RooDerivative*RooAbsReal::derivative(RooRealVar& obs, Int_t order = 1, Double_t eps = 0.",MatchSource.WIKI,root/html534/PiecewiseInterpolation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PiecewiseInterpolation.html
https://root.cern/root/html534/PiecewiseInterpolation.html:8887,Integrability,depend,dependentOverlaps,8887,"l*RooAbsReal::createPlotProjection(const RooArgSet& dependentVars, const RooArgSet* projectedVars, RooArgSet*& cloneSet, const char* rangeName = 0, const RooArgSet* condObs = 0) const; virtual RooAbsReal*RooAbsReal::createProfile(const RooArgSet& paramsOfInterest); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooArgSet& nset = RooArgSet()); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); RooAbsReal*RooAbsReal::createScanRI(const RooArgSet& iset, const RooArgSet& nset, Int_t numScanBins, Int_t intOrder); virtual Double_tRooAbsReal::defaultErrorLevel() const; static RooNumIntConfig*RooAbsReal::defaultIntegratorConfig(); virtual Int_tRooAbsArg::defaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooPrintable::defaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Bool_tRooAbsArg::dependentOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependentOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependsOn(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOn(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0) const; RooDerivative*RooAbsReal::derivative(RooRealVar& obs, Int_t order = 1, Double_t eps = 0.",MatchSource.WIKI,root/html534/PiecewiseInterpolation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PiecewiseInterpolation.html
https://root.cern/root/html534/PiecewiseInterpolation.html:8981,Integrability,depend,dependsOn,8981,"l*RooAbsReal::createPlotProjection(const RooArgSet& dependentVars, const RooArgSet* projectedVars, RooArgSet*& cloneSet, const char* rangeName = 0, const RooArgSet* condObs = 0) const; virtual RooAbsReal*RooAbsReal::createProfile(const RooArgSet& paramsOfInterest); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooArgSet& nset = RooArgSet()); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); RooAbsReal*RooAbsReal::createScanRI(const RooArgSet& iset, const RooArgSet& nset, Int_t numScanBins, Int_t intOrder); virtual Double_tRooAbsReal::defaultErrorLevel() const; static RooNumIntConfig*RooAbsReal::defaultIntegratorConfig(); virtual Int_tRooAbsArg::defaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooPrintable::defaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Bool_tRooAbsArg::dependentOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependentOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependsOn(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOn(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0) const; RooDerivative*RooAbsReal::derivative(RooRealVar& obs, Int_t order = 1, Double_t eps = 0.",MatchSource.WIKI,root/html534/PiecewiseInterpolation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PiecewiseInterpolation.html
https://root.cern/root/html534/PiecewiseInterpolation.html:9110,Integrability,depend,dependsOn,9110,"l*RooAbsReal::createPlotProjection(const RooArgSet& dependentVars, const RooArgSet* projectedVars, RooArgSet*& cloneSet, const char* rangeName = 0, const RooArgSet* condObs = 0) const; virtual RooAbsReal*RooAbsReal::createProfile(const RooArgSet& paramsOfInterest); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooArgSet& nset = RooArgSet()); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); RooAbsReal*RooAbsReal::createScanRI(const RooArgSet& iset, const RooArgSet& nset, Int_t numScanBins, Int_t intOrder); virtual Double_tRooAbsReal::defaultErrorLevel() const; static RooNumIntConfig*RooAbsReal::defaultIntegratorConfig(); virtual Int_tRooAbsArg::defaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooPrintable::defaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Bool_tRooAbsArg::dependentOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependentOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependsOn(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOn(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0) const; RooDerivative*RooAbsReal::derivative(RooRealVar& obs, Int_t order = 1, Double_t eps = 0.",MatchSource.WIKI,root/html534/PiecewiseInterpolation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PiecewiseInterpolation.html
https://root.cern/root/html534/PiecewiseInterpolation.html:9228,Integrability,depend,dependsOnValue,9228,"l*RooAbsReal::createPlotProjection(const RooArgSet& dependentVars, const RooArgSet* projectedVars, RooArgSet*& cloneSet, const char* rangeName = 0, const RooArgSet* condObs = 0) const; virtual RooAbsReal*RooAbsReal::createProfile(const RooArgSet& paramsOfInterest); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooArgSet& nset = RooArgSet()); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); RooAbsReal*RooAbsReal::createScanRI(const RooArgSet& iset, const RooArgSet& nset, Int_t numScanBins, Int_t intOrder); virtual Double_tRooAbsReal::defaultErrorLevel() const; static RooNumIntConfig*RooAbsReal::defaultIntegratorConfig(); virtual Int_tRooAbsArg::defaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooPrintable::defaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Bool_tRooAbsArg::dependentOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependentOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependsOn(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOn(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0) const; RooDerivative*RooAbsReal::derivative(RooRealVar& obs, Int_t order = 1, Double_t eps = 0.",MatchSource.WIKI,root/html534/PiecewiseInterpolation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PiecewiseInterpolation.html
https://root.cern/root/html534/PiecewiseInterpolation.html:9335,Integrability,depend,dependsOnValue,9335,"l*RooAbsReal::createPlotProjection(const RooArgSet& dependentVars, const RooArgSet* projectedVars, RooArgSet*& cloneSet, const char* rangeName = 0, const RooArgSet* condObs = 0) const; virtual RooAbsReal*RooAbsReal::createProfile(const RooArgSet& paramsOfInterest); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooArgSet& nset = RooArgSet()); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); RooAbsReal*RooAbsReal::createScanRI(const RooArgSet& iset, const RooArgSet& nset, Int_t numScanBins, Int_t intOrder); virtual Double_tRooAbsReal::defaultErrorLevel() const; static RooNumIntConfig*RooAbsReal::defaultIntegratorConfig(); virtual Int_tRooAbsArg::defaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooPrintable::defaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Bool_tRooAbsArg::dependentOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependentOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependsOn(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOn(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0) const; RooDerivative*RooAbsReal::derivative(RooRealVar& obs, Int_t order = 1, Double_t eps = 0.",MatchSource.WIKI,root/html534/PiecewiseInterpolation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PiecewiseInterpolation.html
https://root.cern/root/html534/PiecewiseInterpolation.html:17533,Integrability,message,message,17533,"TObject::IsFolder() const; virtual Bool_tRooAbsArg::isFundamental() const; virtual Bool_tRooAbsReal::isIdentical(const RooAbsArg& other, Bool_t assumeSameType = kFALSE); virtual Bool_tRooAbsArg::isLValue() const; virtual Bool_tRooAbsReal::isOffsetting() const; Bool_tTObject::IsOnHeap() const; Bool_tRooAbsArg::isShapeDirty() const; Bool_tRooAbsArg::isShapeServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isShapeServer(const char* name) const; virtual Bool_tRooAbsArg::IsSortable() const; Bool_tRooAbsArg::isValueDirty() const; Bool_tRooAbsArg::isValueDirtyAndClear() const; Bool_tRooAbsArg::isValueOrShapeDirtyAndClear() const; Bool_tRooAbsArg::isValueServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isValueServer(const char* name) const; Bool_tTObject::IsZombie() const; voidRooAbsArg::leafNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t recurseNonDerived = kFALSE) const; Bool_tRooAbsArg::localNoDirtyInhibit() const; voidRooAbsReal::logEvalError(const char* message, const char* serverValueString = 0) const; static voidRooAbsReal::logEvalError(const RooAbsReal* originator, const char* origName, const char* message, const char* serverValueString = 0); const RooArgList&lowList() const; virtual voidTNamed::ls(Option_t* option = """") const; virtual Double_tRooAbsReal::maxVal(Int_t code) const; voidTObject::MayNotUse(const char* method) const; RooAbsMoment*RooAbsReal::mean(RooRealVar& obs); RooAbsMoment*RooAbsReal::mean(RooRealVar& obs, const RooArgSet& nset); virtual Int_tRooAbsReal::minTrialSamples(const RooArgSet&) const; RooAbsMoment*RooAbsReal::moment(RooRealVar& obs, Int_t order, Bool_t central, Bool_t takeRoot); RooAbsMoment*RooAbsReal::moment(RooRealVar& obs, const RooArgSet& normObs, Int_t order, Bool_t central, Bool_t takeRoot, Bool_t intNormObs); static voidRooPrintable::nameFieldLength(Int_t newLen); const TNamed*RooAbsArg::namePtr() const; virtual Bool_tTObject::Notify(); Int_tRooAbsArg::numCaches() const; static Int_tRooAbsReal::numEva",MatchSource.WIKI,root/html534/PiecewiseInterpolation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PiecewiseInterpolation.html
https://root.cern/root/html534/PiecewiseInterpolation.html:17684,Integrability,message,message,17684,"ameType = kFALSE); virtual Bool_tRooAbsArg::isLValue() const; virtual Bool_tRooAbsReal::isOffsetting() const; Bool_tTObject::IsOnHeap() const; Bool_tRooAbsArg::isShapeDirty() const; Bool_tRooAbsArg::isShapeServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isShapeServer(const char* name) const; virtual Bool_tRooAbsArg::IsSortable() const; Bool_tRooAbsArg::isValueDirty() const; Bool_tRooAbsArg::isValueDirtyAndClear() const; Bool_tRooAbsArg::isValueOrShapeDirtyAndClear() const; Bool_tRooAbsArg::isValueServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isValueServer(const char* name) const; Bool_tTObject::IsZombie() const; voidRooAbsArg::leafNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t recurseNonDerived = kFALSE) const; Bool_tRooAbsArg::localNoDirtyInhibit() const; voidRooAbsReal::logEvalError(const char* message, const char* serverValueString = 0) const; static voidRooAbsReal::logEvalError(const RooAbsReal* originator, const char* origName, const char* message, const char* serverValueString = 0); const RooArgList&lowList() const; virtual voidTNamed::ls(Option_t* option = """") const; virtual Double_tRooAbsReal::maxVal(Int_t code) const; voidTObject::MayNotUse(const char* method) const; RooAbsMoment*RooAbsReal::mean(RooRealVar& obs); RooAbsMoment*RooAbsReal::mean(RooRealVar& obs, const RooArgSet& nset); virtual Int_tRooAbsReal::minTrialSamples(const RooArgSet&) const; RooAbsMoment*RooAbsReal::moment(RooRealVar& obs, Int_t order, Bool_t central, Bool_t takeRoot); RooAbsMoment*RooAbsReal::moment(RooRealVar& obs, const RooArgSet& normObs, Int_t order, Bool_t central, Bool_t takeRoot, Bool_t intNormObs); static voidRooPrintable::nameFieldLength(Int_t newLen); const TNamed*RooAbsArg::namePtr() const; virtual Bool_tTObject::Notify(); Int_tRooAbsArg::numCaches() const; static Int_tRooAbsReal::numEvalErrorItems(); static Int_tRooAbsReal::numEvalErrors(); Bool_tRooAbsArg::observableOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bo",MatchSource.WIKI,root/html534/PiecewiseInterpolation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PiecewiseInterpolation.html
https://root.cern/root/html534/PiecewiseInterpolation.html:33664,Integrability,integrat,integration,33664,"string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); Bool_tRooAbsReal::_boolValue! Transient cache for bool values from tree branches ; UChar_tRooAbsReal::_byteValue! Transient cache for byte values from tree branches ; static Bool_tRooAbsReal::_cacheCheckIf true, always validate contents of clean which outcome of evaluate(); deque<RooAbsCache*>RooAbsArg::_cacheListlist of caches; RooRefCountListRooAbsArg::_clientListlist of client objects; RooRefCountListRooAbsArg::_clientListShapesubset of clients that requested shape dirty flag propagation; RooRefCountListRooAbsArg::_clientListValuesubset of clients that requested value dirty flag propagation; TIterator*RooAbsArg::_clientShapeIter! Iterator over _clientListShape ; TIterator*RooAbsArg::_clientValueIter! Iterator over _clientListValue ; Bool_tRooAbsArg::_deleteWatch! Delete watch flag ; RooExpensiveObjectCache*RooAbsArg::_eocachePointer to global cache manager for any expensive components created by this object; Bool_tRooAbsArg::_fastAllow fast access mode in getVal() and proxies; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsReal::_hideOffsetOffset hiding flag; RooListProxy_highSetHigh-side varaition; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; vector<int>_interpCode; Bool_tRooAbsArg::_isConstant! Cached isConstant status ; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; RooListProxy_lowSetLow-side variation; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist.",MatchSource.WIKI,root/html534/PiecewiseInterpolation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PiecewiseInterpolation.html
https://root.cern/root/html534/PiecewiseInterpolation.html:34575,Integrability,integrat,integration,34575," component selection; static Bool_tRooAbsReal::_hideOffsetOffset hiding flag; RooListProxy_highSetHigh-side varaition; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; vector<int>_interpCode; Bool_tRooAbsArg::_isConstant! Cached isConstant status ; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; RooListProxy_lowSetLow-side variation; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist. Pointer to global instance of string that matches object named; RooRealProxy_nominalThe nominal value; RooObjCacheManager_normIntMgrThe integration cache manager; RooListProxy_normSetinterpolation parameters; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; RooArgList_ownedListList of owned components; RooListProxy_paramSetinterpolation parameters; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_t_positiveDefiniteprotect against negative and 0 bins.; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do ",MatchSource.WIKI,root/html534/PiecewiseInterpolation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PiecewiseInterpolation.html
https://root.cern/root/html534/PiecewiseInterpolation.html:35608,Integrability,integrat,integrator,35608,"eRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; RooArgList_ownedListList of owned components; RooListProxy_paramSetinterpolation parameters; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_t_positiveDefiniteprotect against negative and 0 bins.; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; PiecewiseInterpolation(). PiecewiseInterpolation(const char* name, const char* title, const RooAbsReal& nominal, const RooArgList& lowSet, const RooArgList& highSet, const RooArgList& paramSet, Bool_t takeOwnerShip = kFALSE); Constructor with two set of RooAbsReals. The value of the function will be. A = sum_i lowSet(i)*h",MatchSource.WIKI,root/html534/PiecewiseInterpolation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PiecewiseInterpolation.html
https://root.cern/root/html534/PiecewiseInterpolation.html:37350,Integrability,integrat,integrations,37350," PiecewiseInterpolation(). PiecewiseInterpolation(const char* name, const char* title, const RooAbsReal& nominal, const RooArgList& lowSet, const RooArgList& highSet, const RooArgList& paramSet, Bool_t takeOwnerShip = kFALSE); Constructor with two set of RooAbsReals. The value of the function will be. A = sum_i lowSet(i)*highSet(i). If takeOwnership is true the PiecewiseInterpolation object will take ownership of the arguments in sumSet. PiecewiseInterpolation(const PiecewiseInterpolation& other, const char* name = 0); Copy constructor. ~PiecewiseInterpolation(); Destructor. Double_t evaluate() const; Calculate and return current value of self. Bool_t setBinIntegrator(RooArgSet& allVars). Int_t getAnalyticalIntegralWN(RooArgSet& allVars, RooArgSet& analVars, const RooArgSet* normSet, const char* rangeName = 0) const; Advertise that all integrals can be handled internally. Double_t analyticalIntegralWN(Int_t code, const RooArgSet* normSet, const char* rangeName = 0) const; Implement analytical integrations by doing appropriate weighting from component integrals; functions to integrators of components. void setInterpCode(RooAbsReal& param, int code). void setAllInterpCodes(int code). void printAllInterpCodes(). std::list<Double_t>* binBoundaries(RooAbsRealLValue& , Double_t , Double_t ) const; WVE note: assumes nominal and alternates have identical structure, must add explicit check. Bool_t isBinnedDistribution(const RooArgSet& obs) const; WVE note: assumes nominal and alternates have identical structure, must add explicit check. std::list<Double_t>* plotSamplingHint(RooAbsRealLValue& obs, Double_t xlo, Double_t xhi) const. void Streamer(TBuffer& ); Stream an object of class PiecewiseInterpolation. TObject* clone(const char* newname) const; { return new PiecewiseInterpolation(*this, newname); }. const RooArgList& lowList() const; virtual Double_t defaultErrorLevel() const ;; void printMetaArgs(std::ostream& os) const ;. { return _lowSet ; }. const RooArgList& highList(",MatchSource.WIKI,root/html534/PiecewiseInterpolation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PiecewiseInterpolation.html
https://root.cern/root/html534/PiecewiseInterpolation.html:37433,Integrability,integrat,integrators,37433," PiecewiseInterpolation(). PiecewiseInterpolation(const char* name, const char* title, const RooAbsReal& nominal, const RooArgList& lowSet, const RooArgList& highSet, const RooArgList& paramSet, Bool_t takeOwnerShip = kFALSE); Constructor with two set of RooAbsReals. The value of the function will be. A = sum_i lowSet(i)*highSet(i). If takeOwnership is true the PiecewiseInterpolation object will take ownership of the arguments in sumSet. PiecewiseInterpolation(const PiecewiseInterpolation& other, const char* name = 0); Copy constructor. ~PiecewiseInterpolation(); Destructor. Double_t evaluate() const; Calculate and return current value of self. Bool_t setBinIntegrator(RooArgSet& allVars). Int_t getAnalyticalIntegralWN(RooArgSet& allVars, RooArgSet& analVars, const RooArgSet* normSet, const char* rangeName = 0) const; Advertise that all integrals can be handled internally. Double_t analyticalIntegralWN(Int_t code, const RooArgSet* normSet, const char* rangeName = 0) const; Implement analytical integrations by doing appropriate weighting from component integrals; functions to integrators of components. void setInterpCode(RooAbsReal& param, int code). void setAllInterpCodes(int code). void printAllInterpCodes(). std::list<Double_t>* binBoundaries(RooAbsRealLValue& , Double_t , Double_t ) const; WVE note: assumes nominal and alternates have identical structure, must add explicit check. Bool_t isBinnedDistribution(const RooArgSet& obs) const; WVE note: assumes nominal and alternates have identical structure, must add explicit check. std::list<Double_t>* plotSamplingHint(RooAbsRealLValue& obs, Double_t xlo, Double_t xhi) const. void Streamer(TBuffer& ); Stream an object of class PiecewiseInterpolation. TObject* clone(const char* newname) const; { return new PiecewiseInterpolation(*this, newname); }. const RooArgList& lowList() const; virtual Double_t defaultErrorLevel() const ;; void printMetaArgs(std::ostream& os) const ;. { return _lowSet ; }. const RooArgList& highList(",MatchSource.WIKI,root/html534/PiecewiseInterpolation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PiecewiseInterpolation.html
https://root.cern/root/html534/PiecewiseInterpolation.html:15909,Modifiability,Inherit,InheritsFrom,15909,"ble_tRooAbsReal::getValV(const RooArgSet* set = 0) const; RooArgSet*RooAbsArg::getVariables(Bool_t stripDisconnected = kTRUE) const; voidRooAbsArg::graphVizTree(const char* fileName, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); voidRooAbsArg::graphVizTree(ostream& os, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tRooAbsArg::hasClients() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tRooAbsArg::hasRange(const char*) const; static Bool_tRooAbsReal::hideOffset(); const RooArgList&highList() const; RooGenFunction*RooAbsReal::iGenFunction(RooRealVar& x, const RooArgSet& nset = RooArgSet()); RooMultiGenFunction*RooAbsReal::iGenFunction(const RooArgSet& observables, const RooArgSet& nset = RooArgSet()); virtual Bool_tRooAbsArg::importWorkspaceHook(RooWorkspace&); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual Bool_tRooAbsArg::inRange(const char*) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual voidRooAbsArg::ioStreamerPass2(); static voidRooAbsArg::ioStreamerPass2Finalize(); virtual TClass*IsA() const; virtual Bool_tisBinnedDistribution(const RooArgSet& obs) const; Bool_tRooAbsArg::isCloneOf(const RooAbsArg& other) const; Bool_tRooAbsArg::isConstant() const; virtual Bool_tRooAbsArg::isDerived() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tRooAbsArg::isFundamental() const; virtual Bool_tRooAbsReal::isIdentical(const RooAbsArg& other, Bool_t assumeSameType = kFALSE); virtual Bool_tRooAbsArg::isLValue() const; virtual Bool_tRooAbsReal::isOffsetting() const; Bool_tTObject::IsOnHeap() const; Bool_tRooAbsArg::isShapeDirty() const; Bool_tRooAbsArg::isShapeServer(const RooAbsArg",MatchSource.WIKI,root/html534/PiecewiseInterpolation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PiecewiseInterpolation.html
https://root.cern/root/html534/PiecewiseInterpolation.html:15975,Modifiability,Inherit,InheritsFrom,15975,"t*RooAbsArg::getVariables(Bool_t stripDisconnected = kTRUE) const; voidRooAbsArg::graphVizTree(const char* fileName, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); voidRooAbsArg::graphVizTree(ostream& os, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tRooAbsArg::hasClients() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tRooAbsArg::hasRange(const char*) const; static Bool_tRooAbsReal::hideOffset(); const RooArgList&highList() const; RooGenFunction*RooAbsReal::iGenFunction(RooRealVar& x, const RooArgSet& nset = RooArgSet()); RooMultiGenFunction*RooAbsReal::iGenFunction(const RooArgSet& observables, const RooArgSet& nset = RooArgSet()); virtual Bool_tRooAbsArg::importWorkspaceHook(RooWorkspace&); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual Bool_tRooAbsArg::inRange(const char*) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual voidRooAbsArg::ioStreamerPass2(); static voidRooAbsArg::ioStreamerPass2Finalize(); virtual TClass*IsA() const; virtual Bool_tisBinnedDistribution(const RooArgSet& obs) const; Bool_tRooAbsArg::isCloneOf(const RooAbsArg& other) const; Bool_tRooAbsArg::isConstant() const; virtual Bool_tRooAbsArg::isDerived() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tRooAbsArg::isFundamental() const; virtual Bool_tRooAbsReal::isIdentical(const RooAbsArg& other, Bool_t assumeSameType = kFALSE); virtual Bool_tRooAbsArg::isLValue() const; virtual Bool_tRooAbsReal::isOffsetting() const; Bool_tTObject::IsOnHeap() const; Bool_tRooAbsArg::isShapeDirty() const; Bool_tRooAbsArg::isShapeServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isShapeServer(const char* name) con",MatchSource.WIKI,root/html534/PiecewiseInterpolation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PiecewiseInterpolation.html
https://root.cern/root/html534/PiecewiseInterpolation.html:24580,Modifiability,config,config,24580," const; RooFIterRooAbsArg::serverMIterator() const; virtual voidRooAbsArg::serverNameChangeHook(const RooAbsArg*, const RooAbsArg*); voidsetAllInterpCodes(int code); voidRooAbsArg::setAttribute(const Text_t* name, Bool_t value = kTRUE); Bool_tsetBinIntegrator(RooArgSet& allVars); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidRooAbsArg::setCacheAndTrackHints(RooArgSet&); static voidRooAbsReal::setCacheCheck(Bool_t flag); virtual Bool_tRooAbsReal::setData(RooAbsData&, Bool_t = kTRUE); static voidRooAbsArg::setDirtyInhibit(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidRooAbsReal::setEvalErrorLoggingMode(RooAbsReal::ErrorLoggingMode m); virtual voidRooAbsArg::setExpensiveObjectCache(RooExpensiveObjectCache& cache); static voidRooAbsReal::setHideOffset(Bool_t flag); voidRooAbsReal::setIntegratorConfig(); voidRooAbsReal::setIntegratorConfig(const RooNumIntConfig& config); voidsetInterpCode(RooAbsReal& param, int code); voidRooAbsArg::setLocalNoDirtyInhibit(Bool_t flag) const; virtual voidRooAbsArg::SetName(const char* name); virtual voidRooAbsArg::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsArg::setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); voidRooAbsReal::setParameterizeIntegral(const RooArgSet& paramVars); voidRooAbsReal::setPlotLabel(const char* label); voidsetPositiveDefinite(bool flag = true); voidRooAbsArg::setProhibitServerRedirect(Bool_t flag); voidRooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsArg::setTransientAttribute(const Text_t* name, Bool_t value = kTRUE); virtual voidTObject::SetUniqueID(UInt_t uid); voidRooAbsReal::setUnit(const char* unit); voidRooAbsArg::setValueDirty() const; TIterator*RooAbsArg::shapeClientIterat",MatchSource.WIKI,root/html534/PiecewiseInterpolation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PiecewiseInterpolation.html
https://root.cern/root/html534/PiecewiseInterpolation.html:31465,Modifiability,Config,ConfigChange,31465,"tProxyNormSet(const RooArgSet* nset); voidRooAbsArg::setShapeDirty(const RooAbsArg* source) const; virtual voidRooAbsReal::setTreeBranchStatus(TTree& t, Bool_t active); voidRooAbsArg::setValueDirty(const RooAbsArg* source) const; virtual voidRooAbsReal::syncCache(const RooArgSet* set = 0); Double_tRooAbsReal::traceEval(const RooArgSet* set) const; virtual Bool_tRooAbsReal::traceEvalHook(Double_t) const; voidRooAbsArg::unRegisterProxy(RooArgProxy& proxy); voidRooAbsArg::unRegisterProxy(RooSetProxy& proxy); voidRooAbsArg::unRegisterProxy(RooListProxy& proxy). Data Members; public:. enum RooAbsReal::ScaleType { Raw; Relative; NumEvent; RelativeExpected; };; enum RooAbsReal::ErrorLoggingMode { PrintErrors; CollectErrors; CountErrors; Ignore; };; enum RooAbsArg::ConstOpCode { Activate; DeActivate; ConfigChange; ValueChange; };; enum RooAbsArg::CacheMode { Always; NotAdvised; Never; };; enum RooAbsArg::OperMode { Auto; AClean; ADirty; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };; enum RooPrintable::ContentsOption { kName; kClassName; kValue; kArgs; kExtras; kAddress; kTitle; kCollectionHeader; };; enum RooPrintable::StyleOption { kInline; kSingleLine; kStandard; kVerbose; kTreeStructure; };. public:. static map<RooAbsArg*,TRefArray*>RooAbsArg::_ioEvoListtemporary holding list for proxies needed in schema evolution ; static stack<RooAbsArg*>RooAbsArg::_ioReadStackreading stack ; static const UInt_tRooAbsArg::fnv1a32start; static const ULong64_tRooAbsArg::fnv1a64start. protected:. set<std::string>RooAbsArg::_boolAttribBoolean attributes; set<std::string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); Bool_tRooAbsReal::_boolValue! Transient cache for bool values from tree branches ; UChar_tRooAbsReal::_byteValue! Transient cache for ",MatchSource.WIKI,root/html534/PiecewiseInterpolation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PiecewiseInterpolation.html
https://root.cern/root/html534/PiecewiseInterpolation.html:35619,Modifiability,config,configuration,35619,"eRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; RooArgList_ownedListList of owned components; RooListProxy_paramSetinterpolation parameters; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_t_positiveDefiniteprotect against negative and 0 bins.; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; PiecewiseInterpolation(). PiecewiseInterpolation(const char* name, const char* title, const RooAbsReal& nominal, const RooArgList& lowSet, const RooArgList& highSet, const RooArgList& paramSet, Bool_t takeOwnerShip = kFALSE); Constructor with two set of RooAbsReals. The value of the function will be. A = sum_i lowSet(i)*h",MatchSource.WIKI,root/html534/PiecewiseInterpolation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PiecewiseInterpolation.html
https://root.cern/root/html534/PiecewiseInterpolation.html:36266,Modifiability,Inherit,Inheritance,36266,"om tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; PiecewiseInterpolation(). PiecewiseInterpolation(const char* name, const char* title, const RooAbsReal& nominal, const RooArgList& lowSet, const RooArgList& highSet, const RooArgList& paramSet, Bool_t takeOwnerShip = kFALSE); Constructor with two set of RooAbsReals. The value of the function will be. A = sum_i lowSet(i)*highSet(i). If takeOwnership is true the PiecewiseInterpolation object will take ownership of the arguments in sumSet. PiecewiseInterpolation(const PiecewiseInterpolation& other, const char* name = 0); Copy constructor. ~PiecewiseInterpolation(); Destructor. Double_t evaluate() const; Calculate and return current value of self. Bool_t setBinIntegrator(RooArgSet& allVars). Int_t getAnalyticalIntegralWN(RooArgSet& allVars, RooArgSet& analVars, const RooArgSet* normSet, const char* rangeName = 0) const; Advertise that all integrals can be handled internally. Double_t analyticalIntegralWN(Int_t code, const RooArgSet* normSe",MatchSource.WIKI,root/html534/PiecewiseInterpolation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PiecewiseInterpolation.html
https://root.cern/root/html534/PiecewiseInterpolation.html:36279,Modifiability,Inherit,Inherited,36279,"om tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; PiecewiseInterpolation(). PiecewiseInterpolation(const char* name, const char* title, const RooAbsReal& nominal, const RooArgList& lowSet, const RooArgList& highSet, const RooArgList& paramSet, Bool_t takeOwnerShip = kFALSE); Constructor with two set of RooAbsReals. The value of the function will be. A = sum_i lowSet(i)*highSet(i). If takeOwnership is true the PiecewiseInterpolation object will take ownership of the arguments in sumSet. PiecewiseInterpolation(const PiecewiseInterpolation& other, const char* name = 0); Copy constructor. ~PiecewiseInterpolation(); Destructor. Double_t evaluate() const; Calculate and return current value of self. Bool_t setBinIntegrator(RooArgSet& allVars). Int_t getAnalyticalIntegralWN(RooArgSet& allVars, RooArgSet& analVars, const RooArgSet* normSet, const char* rangeName = 0) const; Advertise that all integrals can be handled internally. Double_t analyticalIntegralWN(Int_t code, const RooArgSet* normSe",MatchSource.WIKI,root/html534/PiecewiseInterpolation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PiecewiseInterpolation.html
https://root.cern/root/html534/PiecewiseInterpolation.html:2199,Performance,cache,cacheUniqueSuffix,2199,"g::aggregateCacheUniqueSuffix() const; virtual Double_tRooAbsReal::analyticalIntegral(Int_t code, const char* rangeName = 0) const; virtual Double_tanalyticalIntegralWN(Int_t code, const RooArgSet* normSet, const char* rangeName = 0) const; virtual voidTObject::AppendPad(Option_t* option = """"); TF1*RooAbsReal::asTF(const RooArgList& obs, const RooArgList& pars = RooArgList(), const RooArgSet& nset = RooArgSet()) const; voidRooAbsArg::attachDataSet(const RooAbsData& set); voidRooAbsArg::attachDataStore(const RooAbsDataStore& set); const set<std::string>&RooAbsArg::attributes() const; virtual list<Double_t>*binBoundaries(RooAbsRealLValue&, Double_t, Double_t) const; RooAbsFunc*RooAbsReal::bindVars(const RooArgSet& vars, const RooArgSet* nset = 0, Bool_t clipInvalid = kFALSE) const; voidRooAbsArg::branchNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t recurseNonDerived = kFALSE) const; virtual voidTObject::Browse(TBrowser* b); virtual const char*RooAbsArg::cacheUniqueSuffix() const; virtual RooAbsArg::CacheModeRooAbsArg::canNodeBeCached() const; voidRooAbsArg::changeServer(RooAbsArg& server, Bool_t valueProp, Bool_t shapeProp); Bool_tRooAbsArg::checkDependents(const RooArgSet* nset) const; virtual Bool_tRooAbsArg::checkObservables(const RooArgSet* nset) const; virtual RooFitResult*RooAbsReal::chi2FitTo(RooDataHist& data, const RooLinkedList& cmdList); virtual RooFitResult*RooAbsReal::chi2FitTo(RooDataSet& xydata, const RooLinkedList& cmdList); virtual RooFitResult*RooAbsReal::chi2FitTo(RooDataHist& data, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); virtual RooFitResult*RooAbsReal::chi2FitTo(RooDataSet& xydata, const RooCmdArg& arg1 = RooCmdArg::none(),",MatchSource.WIKI,root/html534/PiecewiseInterpolation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PiecewiseInterpolation.html
https://root.cern/root/html534/PiecewiseInterpolation.html:2245,Performance,Cache,CacheModeRooAbsArg,2245," Double_tRooAbsReal::analyticalIntegral(Int_t code, const char* rangeName = 0) const; virtual Double_tanalyticalIntegralWN(Int_t code, const RooArgSet* normSet, const char* rangeName = 0) const; virtual voidTObject::AppendPad(Option_t* option = """"); TF1*RooAbsReal::asTF(const RooArgList& obs, const RooArgList& pars = RooArgList(), const RooArgSet& nset = RooArgSet()) const; voidRooAbsArg::attachDataSet(const RooAbsData& set); voidRooAbsArg::attachDataStore(const RooAbsDataStore& set); const set<std::string>&RooAbsArg::attributes() const; virtual list<Double_t>*binBoundaries(RooAbsRealLValue&, Double_t, Double_t) const; RooAbsFunc*RooAbsReal::bindVars(const RooArgSet& vars, const RooArgSet* nset = 0, Bool_t clipInvalid = kFALSE) const; voidRooAbsArg::branchNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t recurseNonDerived = kFALSE) const; virtual voidTObject::Browse(TBrowser* b); virtual const char*RooAbsArg::cacheUniqueSuffix() const; virtual RooAbsArg::CacheModeRooAbsArg::canNodeBeCached() const; voidRooAbsArg::changeServer(RooAbsArg& server, Bool_t valueProp, Bool_t shapeProp); Bool_tRooAbsArg::checkDependents(const RooArgSet* nset) const; virtual Bool_tRooAbsArg::checkObservables(const RooArgSet* nset) const; virtual RooFitResult*RooAbsReal::chi2FitTo(RooDataHist& data, const RooLinkedList& cmdList); virtual RooFitResult*RooAbsReal::chi2FitTo(RooDataSet& xydata, const RooLinkedList& cmdList); virtual RooFitResult*RooAbsReal::chi2FitTo(RooDataHist& data, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); virtual RooFitResult*RooAbsReal::chi2FitTo(RooDataSet& xydata, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), con",MatchSource.WIKI,root/html534/PiecewiseInterpolation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PiecewiseInterpolation.html
https://root.cern/root/html534/PiecewiseInterpolation.html:11042,Performance,cache,cacheList,11042,"rRooAbsReal::evalErrorIter(); static RooAbsReal::ErrorLoggingModeRooAbsReal::evalErrorLoggingMode(); virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); RooExpensiveObjectCache&RooAbsArg::expensiveObjectCache() const; virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); RooDataHist*RooAbsReal::fillDataHist(RooDataHist* hist, const RooArgSet* nset, Double_t scaleFactor, Bool_t correctForBinVolume = kFALSE, Bool_t showProgress = kFALSE) const; TH1*RooAbsReal::fillHistogram(TH1* hist, const RooArgList& plotVars, Double_t scaleFactor = 1, const RooArgSet* projectedVars = 0, Bool_t scaling = kTRUE, const RooArgSet* condObs = 0, Bool_t setError = kTRUE) const; Bool_tRooAbsArg::findConstantNodes(const RooArgSet& observables, RooArgSet& cacheList); Bool_tRooAbsArg::findConstantNodes(const RooArgSet& observables, RooArgSet& cacheList, RooLinkedList& processedNodes); RooAbsArg*RooAbsArg::findNewServer(const RooAbsCollection& newSet, Bool_t nameChange) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Double_tRooAbsReal::findRoot(RooRealVar& x, Double_t xmin, Double_t xmax, Double_t yval); RooAbsArg*RooAbsArg::findServer(const char* name) const; RooAbsArg*RooAbsArg::findServer(const RooAbsArg& arg) const; RooAbsArg*RooAbsArg::findServer(Int_t index) const; virtual voidRooAbsReal::fixAddCoefNormalization(const RooArgSet& addNormSet = RooArgSet(), Bool_t force = kTRUE); virtual voidRooAbsReal::fixAddCoefRange(const char* rangeName = 0, Bool_t force = kTRUE); static UInt_tRooAbsArg::fnv1a32(const char* data); static UInt_tRooAbsArg::fnv1a32(const char* data, ULong_t sz, UInt_t hash = fnv1a32start); static ULong64_tRooAbsArg::fnv1a64(const char* data",MatchSource.WIKI,root/html534/PiecewiseInterpolation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PiecewiseInterpolation.html
https://root.cern/root/html534/PiecewiseInterpolation.html:11130,Performance,cache,cacheList,11130,"ggingMode(); virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); RooExpensiveObjectCache&RooAbsArg::expensiveObjectCache() const; virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); RooDataHist*RooAbsReal::fillDataHist(RooDataHist* hist, const RooArgSet* nset, Double_t scaleFactor, Bool_t correctForBinVolume = kFALSE, Bool_t showProgress = kFALSE) const; TH1*RooAbsReal::fillHistogram(TH1* hist, const RooArgList& plotVars, Double_t scaleFactor = 1, const RooArgSet* projectedVars = 0, Bool_t scaling = kTRUE, const RooArgSet* condObs = 0, Bool_t setError = kTRUE) const; Bool_tRooAbsArg::findConstantNodes(const RooArgSet& observables, RooArgSet& cacheList); Bool_tRooAbsArg::findConstantNodes(const RooArgSet& observables, RooArgSet& cacheList, RooLinkedList& processedNodes); RooAbsArg*RooAbsArg::findNewServer(const RooAbsCollection& newSet, Bool_t nameChange) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Double_tRooAbsReal::findRoot(RooRealVar& x, Double_t xmin, Double_t xmax, Double_t yval); RooAbsArg*RooAbsArg::findServer(const char* name) const; RooAbsArg*RooAbsArg::findServer(const RooAbsArg& arg) const; RooAbsArg*RooAbsArg::findServer(Int_t index) const; virtual voidRooAbsReal::fixAddCoefNormalization(const RooArgSet& addNormSet = RooArgSet(), Bool_t force = kTRUE); virtual voidRooAbsReal::fixAddCoefRange(const char* rangeName = 0, Bool_t force = kTRUE); static UInt_tRooAbsArg::fnv1a32(const char* data); static UInt_tRooAbsArg::fnv1a32(const char* data, ULong_t sz, UInt_t hash = fnv1a32start); static ULong64_tRooAbsArg::fnv1a64(const char* data); static ULong64_tRooAbsArg::fnv1a64(const char* data, ULong_t sz, ULong64_t hash = fnv",MatchSource.WIKI,root/html534/PiecewiseInterpolation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PiecewiseInterpolation.html
https://root.cern/root/html534/PiecewiseInterpolation.html:19551,Performance,optimiz,optimizeCacheMode,19551,"nt_tRooAbsReal::numEvalErrors(); Bool_tRooAbsArg::observableOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::observableOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; virtual Double_tRooAbsReal::offset() const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TNamed&TNamed::operator=(const TNamed& rhs); Bool_tRooAbsReal::operator==(Double_t value) const; virtual Bool_tRooAbsReal::operator==(const RooAbsArg& other); RooAbsArg::OperModeRooAbsArg::operMode() const; virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables); virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables, RooArgSet& optNodes, RooLinkedList& processedNodes); Bool_tRooAbsArg::overlaps(const RooAbsArg& testArg, Bool_t valueOnly = kFALSE) const; const RooArgSet*RooAbsArg::ownedComponents() const; virtual voidTObject::Paint(Option_t* option = """"); const RooArgList&paramList() const; virtual RooPlot*RooAbsReal::plotOn(RooPlot* frame, RooLinkedList& cmdList) const; virtual RooPlot*RooAbsReal::plotOn(RooPlot* frame, const RooCmdArg& arg1 = RooCmdArg(), const RooCmdArg& arg2 = RooCmdArg(), const RooCmdArg& arg3 = RooCmdArg(), const RooCmdArg& arg4 = RooCmdArg(), const RooCmdArg& arg5 = RooCmdArg(), const RooCmdArg& arg6 = RooCmdArg(), const RooCmdArg& arg7 = RooCmdArg(), const RooCmdArg& arg8 = RooCmdArg(), const RooCmdArg& arg9 = RooCmdArg(), const RooCmdArg& arg10 = RooCmdArg()) const; virtual list<Double_t>*plotSamplingHint(RooAbsRealLValue& obs, Double_t xlo, Double_t xhi) const; vi",MatchSource.WIKI,root/html534/PiecewiseInterpolation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PiecewiseInterpolation.html
https://root.cern/root/html534/PiecewiseInterpolation.html:19623,Performance,optimiz,optimizeCacheMode,19623,"st RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::observableOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; virtual Double_tRooAbsReal::offset() const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TNamed&TNamed::operator=(const TNamed& rhs); Bool_tRooAbsReal::operator==(Double_t value) const; virtual Bool_tRooAbsReal::operator==(const RooAbsArg& other); RooAbsArg::OperModeRooAbsArg::operMode() const; virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables); virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables, RooArgSet& optNodes, RooLinkedList& processedNodes); Bool_tRooAbsArg::overlaps(const RooAbsArg& testArg, Bool_t valueOnly = kFALSE) const; const RooArgSet*RooAbsArg::ownedComponents() const; virtual voidTObject::Paint(Option_t* option = """"); const RooArgList&paramList() const; virtual RooPlot*RooAbsReal::plotOn(RooPlot* frame, RooLinkedList& cmdList) const; virtual RooPlot*RooAbsReal::plotOn(RooPlot* frame, const RooCmdArg& arg1 = RooCmdArg(), const RooCmdArg& arg2 = RooCmdArg(), const RooCmdArg& arg3 = RooCmdArg(), const RooCmdArg& arg4 = RooCmdArg(), const RooCmdArg& arg5 = RooCmdArg(), const RooCmdArg& arg6 = RooCmdArg(), const RooCmdArg& arg7 = RooCmdArg(), const RooCmdArg& arg8 = RooCmdArg(), const RooCmdArg& arg9 = RooCmdArg(), const RooCmdArg& arg10 = RooCmdArg()) const; virtual list<Double_t>*plotSamplingHint(RooAbsRealLValue& obs, Double_t xlo, Double_t xhi) const; virtual RooPlot*RooAbsReal::plotSliceOn(RooPlot* frame, const RooArgSet& s",MatchSource.WIKI,root/html534/PiecewiseInterpolation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PiecewiseInterpolation.html
https://root.cern/root/html534/PiecewiseInterpolation.html:23161,Performance,cache,cache,23161,"rtual voidRooAbsArg::printTitle(ostream& os) const; virtual voidRooAbsArg::printTree(ostream& os, TString indent = """") const; virtual voidRooAbsReal::printValue(ostream& os) const; virtual Int_tTObject::Read(const char* name); virtual Bool_tRooAbsReal::readFromStream(istream& is, Bool_t compact, Bool_t verbose = kFALSE); Bool_tRooAbsArg::recursiveCheckDependents(const RooArgSet* nset) const; Bool_tRooAbsArg::recursiveCheckObservables(const RooArgSet* nset) const; Bool_tRooAbsArg::recursiveRedirectServers(const RooAbsCollection& newServerList, Bool_t mustReplaceAll = kFALSE, Bool_t nameChange = kFALSE, Bool_t recurseInNewSet = kTRUE); virtual voidTObject::RecursiveRemove(TObject* obj); Bool_tRooAbsArg::redirectServers(const RooAbsCollection& newServerList, Bool_t mustReplaceAll = kFALSE, Bool_t nameChange = kFALSE, Bool_t isRecursionStep = kFALSE); virtual Bool_tRooAbsArg::redirectServersHook(const RooAbsCollection&, Bool_t, Bool_t, Bool_t); voidRooAbsArg::registerCache(RooAbsCache& cache); voidRooAbsArg::removeServer(RooAbsArg& server, Bool_t force = kFALSE); voidRooAbsArg::replaceServer(RooAbsArg& oldServer, RooAbsArg& newServer, Bool_t valueProp, Bool_t shapeProp); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); TIterator*RooAbsArg::serverIterator() const; RooFIterRooAbsArg::serverMIterator() const; virtual voidRooAbsArg::serverNameChangeHook(const RooAbsArg*, const RooAbsArg*); voidsetAllInterpCodes(int code); voidRooAbsArg::setAttribute(const Text_t* name, Bool_t value = kTRUE); Bool_tsetBinIntegrator(RooArgSet& allVars); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidRooAbsArg::setCacheAndTrackHints(RooArgSet&); static voidRooAbsReal::setCacheCheck(Bool_t flag); virtual Bool_tRooAbsReal::setData(RooAbsData&, Bool_t = kTRUE); static voidRooAbsArg::setDirtyInhibit(Bool_t flag); v",MatchSource.WIKI,root/html534/PiecewiseInterpolation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PiecewiseInterpolation.html
https://root.cern/root/html534/PiecewiseInterpolation.html:24423,Performance,cache,cache,24423,"ename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); TIterator*RooAbsArg::serverIterator() const; RooFIterRooAbsArg::serverMIterator() const; virtual voidRooAbsArg::serverNameChangeHook(const RooAbsArg*, const RooAbsArg*); voidsetAllInterpCodes(int code); voidRooAbsArg::setAttribute(const Text_t* name, Bool_t value = kTRUE); Bool_tsetBinIntegrator(RooArgSet& allVars); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidRooAbsArg::setCacheAndTrackHints(RooArgSet&); static voidRooAbsReal::setCacheCheck(Bool_t flag); virtual Bool_tRooAbsReal::setData(RooAbsData&, Bool_t = kTRUE); static voidRooAbsArg::setDirtyInhibit(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidRooAbsReal::setEvalErrorLoggingMode(RooAbsReal::ErrorLoggingMode m); virtual voidRooAbsArg::setExpensiveObjectCache(RooExpensiveObjectCache& cache); static voidRooAbsReal::setHideOffset(Bool_t flag); voidRooAbsReal::setIntegratorConfig(); voidRooAbsReal::setIntegratorConfig(const RooNumIntConfig& config); voidsetInterpCode(RooAbsReal& param, int code); voidRooAbsArg::setLocalNoDirtyInhibit(Bool_t flag) const; virtual voidRooAbsArg::SetName(const char* name); virtual voidRooAbsArg::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsArg::setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); voidRooAbsReal::setParameterizeIntegral(const RooArgSet& paramVars); voidRooAbsReal::setPlotLabel(const char* label); voidsetPositiveDefinite(bool flag = true); voidRooAbsArg::setProhibitServerRedirect(Bool_t flag); voidRooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsArg::setTransientAttribute(const Text_t* name, Bool_t value = kTRUE); virtual",MatchSource.WIKI,root/html534/PiecewiseInterpolation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PiecewiseInterpolation.html
https://root.cern/root/html534/PiecewiseInterpolation.html:26613,Performance,cache,cache,26613,"RooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsArg::setTransientAttribute(const Text_t* name, Bool_t value = kTRUE); virtual voidTObject::SetUniqueID(UInt_t uid); voidRooAbsReal::setUnit(const char* unit); voidRooAbsArg::setValueDirty() const; TIterator*RooAbsArg::shapeClientIterator() const; RooFIterRooAbsArg::shapeClientMIterator() const; virtual voidShowMembers(TMemberInspector&); RooAbsMoment*RooAbsReal::sigma(RooRealVar& obs); RooAbsMoment*RooAbsReal::sigma(RooRealVar& obs, const RooArgSet& nset); virtual Int_tTNamed::Sizeof() const; RooNumIntConfig*RooAbsReal::specialIntegratorConfig() const; RooNumIntConfig*RooAbsReal::specialIntegratorConfig(Bool_t createOnTheFly); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); const map<std::string,std::string>&RooAbsArg::stringAttributes() const; virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; const set<std::string>&RooAbsArg::transientAttributes() const; voidRooAbsArg::treeNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t doBranch = kTRUE, Bool_t doLeaf = kTRUE, Bool_t valueOnly = kFALSE, Bool_t recurseNonDerived = kFALSE) const; voidRooAbsArg::unRegisterCache(RooAbsCache& cache); virtual voidTObject::UseCurrentStyle(); TIterator*RooAbsArg::valueClientIterator() const; RooFIterRooAbsArg::valueClientMIterator() const; static voidRooAbsArg::verboseDirty(Bool_t flag); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; voidRooAbsArg::wireAllCaches(); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidRooAbsReal::writeToStream(ostream& os, Bool_t compact) const.",MatchSource.WIKI,root/html534/PiecewiseInterpolation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PiecewiseInterpolation.html
https://root.cern/root/html534/PiecewiseInterpolation.html:29675,Performance,optimiz,optimizeDirtyHook,29675,"ual Bool_tRooAbsReal::isValidReal(Double_t value, Bool_t printError = kFALSE) const; voidRooAbsReal::makeProjectionSet(const RooAbsArg* plotVar, const RooArgSet* allVars, RooArgSet& projectedVars, Bool_t silent) const; voidTObject::MakeZombie(); Bool_tRooAbsReal::matchArgs(const RooArgSet& allDeps, RooArgSet& numDeps, const RooArgProxy& a) const; Bool_tRooAbsReal::matchArgs(const RooArgSet& allDeps, RooArgSet& numDeps, const RooArgSet& set) const; Bool_tRooAbsReal::matchArgs(const RooArgSet& allDeps, RooArgSet& numDeps, const RooArgProxy& a, const RooArgProxy& b) const; Bool_tRooAbsReal::matchArgs(const RooArgSet& allDeps, RooArgSet& numDeps, const RooArgProxy& a, const RooArgProxy& b, const RooArgProxy& c) const; Bool_tRooAbsReal::matchArgs(const RooArgSet& allDeps, RooArgSet& numDeps, const RooArgProxy& a, const RooArgProxy& b, const RooArgProxy& c, const RooArgProxy& d) const; Int_tRooAbsArg::numProxies() const; virtual voidRooAbsArg::operModeHook(); virtual voidRooAbsArg::optimizeDirtyHook(const RooArgSet*); virtual RooPlot*RooAbsReal::plotAsymOn(RooPlot* frame, const RooAbsCategoryLValue& asymCat, RooAbsReal::PlotOpt o) const; virtual RooPlot*RooAbsReal::plotOn(RooPlot* frame, RooAbsReal::PlotOpt o) const; voidRooAbsReal::plotOnCompSelect(RooArgSet* selNodes) const; RooPlot*RooAbsReal::plotOnWithErrorBand(RooPlot* frame, const RooFitResult& fr, Double_t Z, const RooArgSet* params, const RooLinkedList& argList, Bool_t method1) const; Bool_tRooAbsReal::plotSanityChecks(RooPlot* frame) const; voidRooAbsArg::printAttribList(ostream& os) const; voidRooAbsArg::registerProxy(RooArgProxy& proxy); voidRooAbsArg::registerProxy(RooSetProxy& proxy); voidRooAbsArg::registerProxy(RooListProxy& proxy); voidRooAbsReal::selectComp(Bool_t flag); virtual voidRooAbsReal::selectNormalization(const RooArgSet* depSet = 0, Bool_t force = kFALSE); virtual voidRooAbsReal::selectNormalizationRange(const char* rangeName = 0, Bool_t force = kFALSE); voidRooAbsArg::setProxyNormSet(const Roo",MatchSource.WIKI,root/html534/PiecewiseInterpolation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PiecewiseInterpolation.html
https://root.cern/root/html534/PiecewiseInterpolation.html:31512,Performance,Cache,CacheMode,31512,"tProxyNormSet(const RooArgSet* nset); voidRooAbsArg::setShapeDirty(const RooAbsArg* source) const; virtual voidRooAbsReal::setTreeBranchStatus(TTree& t, Bool_t active); voidRooAbsArg::setValueDirty(const RooAbsArg* source) const; virtual voidRooAbsReal::syncCache(const RooArgSet* set = 0); Double_tRooAbsReal::traceEval(const RooArgSet* set) const; virtual Bool_tRooAbsReal::traceEvalHook(Double_t) const; voidRooAbsArg::unRegisterProxy(RooArgProxy& proxy); voidRooAbsArg::unRegisterProxy(RooSetProxy& proxy); voidRooAbsArg::unRegisterProxy(RooListProxy& proxy). Data Members; public:. enum RooAbsReal::ScaleType { Raw; Relative; NumEvent; RelativeExpected; };; enum RooAbsReal::ErrorLoggingMode { PrintErrors; CollectErrors; CountErrors; Ignore; };; enum RooAbsArg::ConstOpCode { Activate; DeActivate; ConfigChange; ValueChange; };; enum RooAbsArg::CacheMode { Always; NotAdvised; Never; };; enum RooAbsArg::OperMode { Auto; AClean; ADirty; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };; enum RooPrintable::ContentsOption { kName; kClassName; kValue; kArgs; kExtras; kAddress; kTitle; kCollectionHeader; };; enum RooPrintable::StyleOption { kInline; kSingleLine; kStandard; kVerbose; kTreeStructure; };. public:. static map<RooAbsArg*,TRefArray*>RooAbsArg::_ioEvoListtemporary holding list for proxies needed in schema evolution ; static stack<RooAbsArg*>RooAbsArg::_ioReadStackreading stack ; static const UInt_tRooAbsArg::fnv1a32start; static const ULong64_tRooAbsArg::fnv1a64start. protected:. set<std::string>RooAbsArg::_boolAttribBoolean attributes; set<std::string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); Bool_tRooAbsReal::_boolValue! Transient cache for bool values from tree branches ; UChar_tRooAbsReal::_byteValue! Transient cache for ",MatchSource.WIKI,root/html534/PiecewiseInterpolation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PiecewiseInterpolation.html
https://root.cern/root/html534/PiecewiseInterpolation.html:32568,Performance,cache,cache,32568,,MatchSource.WIKI,root/html534/PiecewiseInterpolation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PiecewiseInterpolation.html
https://root.cern/root/html534/PiecewiseInterpolation.html:32652,Performance,cache,cache,32652,,MatchSource.WIKI,root/html534/PiecewiseInterpolation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PiecewiseInterpolation.html
https://root.cern/root/html534/PiecewiseInterpolation.html:32851,Performance,cache,caches,32851,,MatchSource.WIKI,root/html534/PiecewiseInterpolation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PiecewiseInterpolation.html
https://root.cern/root/html534/PiecewiseInterpolation.html:33386,Performance,cache,cache,33386,"AbsArg::_boolAttribBoolean attributes; set<std::string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); Bool_tRooAbsReal::_boolValue! Transient cache for bool values from tree branches ; UChar_tRooAbsReal::_byteValue! Transient cache for byte values from tree branches ; static Bool_tRooAbsReal::_cacheCheckIf true, always validate contents of clean which outcome of evaluate(); deque<RooAbsCache*>RooAbsArg::_cacheListlist of caches; RooRefCountListRooAbsArg::_clientListlist of client objects; RooRefCountListRooAbsArg::_clientListShapesubset of clients that requested shape dirty flag propagation; RooRefCountListRooAbsArg::_clientListValuesubset of clients that requested value dirty flag propagation; TIterator*RooAbsArg::_clientShapeIter! Iterator over _clientListShape ; TIterator*RooAbsArg::_clientValueIter! Iterator over _clientListValue ; Bool_tRooAbsArg::_deleteWatch! Delete watch flag ; RooExpensiveObjectCache*RooAbsArg::_eocachePointer to global cache manager for any expensive components created by this object; Bool_tRooAbsArg::_fastAllow fast access mode in getVal() and proxies; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsReal::_hideOffsetOffset hiding flag; RooListProxy_highSetHigh-side varaition; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; vector<int>_interpCode; Bool_tRooAbsArg::_isConstant! Cached isConstant status ; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; RooListProxy_lowSetLow-side variation; static Int_tRooPrintable::_nameLe",MatchSource.WIKI,root/html534/PiecewiseInterpolation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PiecewiseInterpolation.html
https://root.cern/root/html534/PiecewiseInterpolation.html:33565,Performance,cache,cache,33565,"string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); Bool_tRooAbsReal::_boolValue! Transient cache for bool values from tree branches ; UChar_tRooAbsReal::_byteValue! Transient cache for byte values from tree branches ; static Bool_tRooAbsReal::_cacheCheckIf true, always validate contents of clean which outcome of evaluate(); deque<RooAbsCache*>RooAbsArg::_cacheListlist of caches; RooRefCountListRooAbsArg::_clientListlist of client objects; RooRefCountListRooAbsArg::_clientListShapesubset of clients that requested shape dirty flag propagation; RooRefCountListRooAbsArg::_clientListValuesubset of clients that requested value dirty flag propagation; TIterator*RooAbsArg::_clientShapeIter! Iterator over _clientListShape ; TIterator*RooAbsArg::_clientValueIter! Iterator over _clientListValue ; Bool_tRooAbsArg::_deleteWatch! Delete watch flag ; RooExpensiveObjectCache*RooAbsArg::_eocachePointer to global cache manager for any expensive components created by this object; Bool_tRooAbsArg::_fastAllow fast access mode in getVal() and proxies; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsReal::_hideOffsetOffset hiding flag; RooListProxy_highSetHigh-side varaition; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; vector<int>_interpCode; Bool_tRooAbsArg::_isConstant! Cached isConstant status ; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; RooListProxy_lowSetLow-side variation; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist.",MatchSource.WIKI,root/html534/PiecewiseInterpolation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PiecewiseInterpolation.html
https://root.cern/root/html534/PiecewiseInterpolation.html:34020,Performance,cache,cache,34020,"string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); Bool_tRooAbsReal::_boolValue! Transient cache for bool values from tree branches ; UChar_tRooAbsReal::_byteValue! Transient cache for byte values from tree branches ; static Bool_tRooAbsReal::_cacheCheckIf true, always validate contents of clean which outcome of evaluate(); deque<RooAbsCache*>RooAbsArg::_cacheListlist of caches; RooRefCountListRooAbsArg::_clientListlist of client objects; RooRefCountListRooAbsArg::_clientListShapesubset of clients that requested shape dirty flag propagation; RooRefCountListRooAbsArg::_clientListValuesubset of clients that requested value dirty flag propagation; TIterator*RooAbsArg::_clientShapeIter! Iterator over _clientListShape ; TIterator*RooAbsArg::_clientValueIter! Iterator over _clientListValue ; Bool_tRooAbsArg::_deleteWatch! Delete watch flag ; RooExpensiveObjectCache*RooAbsArg::_eocachePointer to global cache manager for any expensive components created by this object; Bool_tRooAbsArg::_fastAllow fast access mode in getVal() and proxies; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsReal::_hideOffsetOffset hiding flag; RooListProxy_highSetHigh-side varaition; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; vector<int>_interpCode; Bool_tRooAbsArg::_isConstant! Cached isConstant status ; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; RooListProxy_lowSetLow-side variation; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist.",MatchSource.WIKI,root/html534/PiecewiseInterpolation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PiecewiseInterpolation.html
https://root.cern/root/html534/PiecewiseInterpolation.html:34120,Performance,Cache,Cached,34120,"string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); Bool_tRooAbsReal::_boolValue! Transient cache for bool values from tree branches ; UChar_tRooAbsReal::_byteValue! Transient cache for byte values from tree branches ; static Bool_tRooAbsReal::_cacheCheckIf true, always validate contents of clean which outcome of evaluate(); deque<RooAbsCache*>RooAbsArg::_cacheListlist of caches; RooRefCountListRooAbsArg::_clientListlist of client objects; RooRefCountListRooAbsArg::_clientListShapesubset of clients that requested shape dirty flag propagation; RooRefCountListRooAbsArg::_clientListValuesubset of clients that requested value dirty flag propagation; TIterator*RooAbsArg::_clientShapeIter! Iterator over _clientListShape ; TIterator*RooAbsArg::_clientValueIter! Iterator over _clientListValue ; Bool_tRooAbsArg::_deleteWatch! Delete watch flag ; RooExpensiveObjectCache*RooAbsArg::_eocachePointer to global cache manager for any expensive components created by this object; Bool_tRooAbsArg::_fastAllow fast access mode in getVal() and proxies; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsReal::_hideOffsetOffset hiding flag; RooListProxy_highSetHigh-side varaition; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; vector<int>_interpCode; Bool_tRooAbsArg::_isConstant! Cached isConstant status ; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; RooListProxy_lowSetLow-side variation; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist.",MatchSource.WIKI,root/html534/PiecewiseInterpolation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PiecewiseInterpolation.html
https://root.cern/root/html534/PiecewiseInterpolation.html:34587,Performance,cache,cache,34587," component selection; static Bool_tRooAbsReal::_hideOffsetOffset hiding flag; RooListProxy_highSetHigh-side varaition; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; vector<int>_interpCode; Bool_tRooAbsArg::_isConstant! Cached isConstant status ; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; RooListProxy_lowSetLow-side variation; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist. Pointer to global instance of string that matches object named; RooRealProxy_nominalThe nominal value; RooObjCacheManager_normIntMgrThe integration cache manager; RooListProxy_normSetinterpolation parameters; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; RooArgList_ownedListList of owned components; RooListProxy_paramSetinterpolation parameters; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_t_positiveDefiniteprotect against negative and 0 bins.; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do ",MatchSource.WIKI,root/html534/PiecewiseInterpolation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PiecewiseInterpolation.html
https://root.cern/root/html534/PiecewiseInterpolation.html:35260,Performance,cache,cache,35260,"eRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; RooArgList_ownedListList of owned components; RooListProxy_paramSetinterpolation parameters; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_t_positiveDefiniteprotect against negative and 0 bins.; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; PiecewiseInterpolation(). PiecewiseInterpolation(const char* name, const char* title, const RooAbsReal& nominal, const RooArgList& lowSet, const RooArgList& highSet, const RooArgList& paramSet, Bool_t takeOwnerShip = kFALSE); Constructor with two set of RooAbsReals. The value of the function will be. A = sum_i lowSet(i)*h",MatchSource.WIKI,root/html534/PiecewiseInterpolation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PiecewiseInterpolation.html
https://root.cern/root/html534/PiecewiseInterpolation.html:35813,Performance,cache,cache,35813,"eRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; RooArgList_ownedListList of owned components; RooListProxy_paramSetinterpolation parameters; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_t_positiveDefiniteprotect against negative and 0 bins.; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; PiecewiseInterpolation(). PiecewiseInterpolation(const char* name, const char* title, const RooAbsReal& nominal, const RooArgList& lowSet, const RooArgList& highSet, const RooArgList& paramSet, Bool_t takeOwnerShip = kFALSE); Constructor with two set of RooAbsReals. The value of the function will be. A = sum_i lowSet(i)*h",MatchSource.WIKI,root/html534/PiecewiseInterpolation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PiecewiseInterpolation.html
https://root.cern/root/html534/PiecewiseInterpolation.html:11974,Security,hash,hash,11974,"bsArg::findConstantNodes(const RooArgSet& observables, RooArgSet& cacheList); Bool_tRooAbsArg::findConstantNodes(const RooArgSet& observables, RooArgSet& cacheList, RooLinkedList& processedNodes); RooAbsArg*RooAbsArg::findNewServer(const RooAbsCollection& newSet, Bool_t nameChange) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Double_tRooAbsReal::findRoot(RooRealVar& x, Double_t xmin, Double_t xmax, Double_t yval); RooAbsArg*RooAbsArg::findServer(const char* name) const; RooAbsArg*RooAbsArg::findServer(const RooAbsArg& arg) const; RooAbsArg*RooAbsArg::findServer(Int_t index) const; virtual voidRooAbsReal::fixAddCoefNormalization(const RooArgSet& addNormSet = RooArgSet(), Bool_t force = kTRUE); virtual voidRooAbsReal::fixAddCoefRange(const char* rangeName = 0, Bool_t force = kTRUE); static UInt_tRooAbsArg::fnv1a32(const char* data); static UInt_tRooAbsArg::fnv1a32(const char* data, ULong_t sz, UInt_t hash = fnv1a32start); static ULong64_tRooAbsArg::fnv1a64(const char* data); static ULong64_tRooAbsArg::fnv1a64(const char* data, ULong_t sz, ULong64_t hash = fnv1a64start); virtual Bool_tRooAbsReal::forceAnalyticalInt(const RooAbsArg&) const; virtual voidRooAbsReal::forceNumInt(Bool_t flag = kTRUE); RooFunctor*RooAbsReal::functor(const RooArgList& obs, const RooArgList& pars = RooArgList(), const RooArgSet& nset = RooArgSet()) const; virtual Int_tRooAbsReal::getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const; virtual Int_tgetAnalyticalIntegralWN(RooArgSet& allVars, RooArgSet& analVars, const RooArgSet* normSet, const char* rangeName = 0) const; Bool_tRooAbsArg::getAttribute(const Text_t* name) const; RooAbsCache*RooAbsArg::getCache(Int_t index) const; RooLinkedListRooAbsArg::getCloningAncestors() const; RooArgSet*RooAbsArg::getComponents() const; RooArgSet*RooAbsArg::getDependents(const RooArgSet& set) const; RooArgSet*RooAbsArg::getDependents(",MatchSource.WIKI,root/html534/PiecewiseInterpolation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PiecewiseInterpolation.html
https://root.cern/root/html534/PiecewiseInterpolation.html:12125,Security,hash,hash,12125,"t& cacheList, RooLinkedList& processedNodes); RooAbsArg*RooAbsArg::findNewServer(const RooAbsCollection& newSet, Bool_t nameChange) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Double_tRooAbsReal::findRoot(RooRealVar& x, Double_t xmin, Double_t xmax, Double_t yval); RooAbsArg*RooAbsArg::findServer(const char* name) const; RooAbsArg*RooAbsArg::findServer(const RooAbsArg& arg) const; RooAbsArg*RooAbsArg::findServer(Int_t index) const; virtual voidRooAbsReal::fixAddCoefNormalization(const RooArgSet& addNormSet = RooArgSet(), Bool_t force = kTRUE); virtual voidRooAbsReal::fixAddCoefRange(const char* rangeName = 0, Bool_t force = kTRUE); static UInt_tRooAbsArg::fnv1a32(const char* data); static UInt_tRooAbsArg::fnv1a32(const char* data, ULong_t sz, UInt_t hash = fnv1a32start); static ULong64_tRooAbsArg::fnv1a64(const char* data); static ULong64_tRooAbsArg::fnv1a64(const char* data, ULong_t sz, ULong64_t hash = fnv1a64start); virtual Bool_tRooAbsReal::forceAnalyticalInt(const RooAbsArg&) const; virtual voidRooAbsReal::forceNumInt(Bool_t flag = kTRUE); RooFunctor*RooAbsReal::functor(const RooArgList& obs, const RooArgList& pars = RooArgList(), const RooArgSet& nset = RooArgSet()) const; virtual Int_tRooAbsReal::getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const; virtual Int_tgetAnalyticalIntegralWN(RooArgSet& allVars, RooArgSet& analVars, const RooArgSet* normSet, const char* rangeName = 0) const; Bool_tRooAbsArg::getAttribute(const Text_t* name) const; RooAbsCache*RooAbsArg::getCache(Int_t index) const; RooLinkedListRooAbsArg::getCloningAncestors() const; RooArgSet*RooAbsArg::getComponents() const; RooArgSet*RooAbsArg::getDependents(const RooArgSet& set) const; RooArgSet*RooAbsArg::getDependents(const RooAbsData* set) const; RooArgSet*RooAbsArg::getDependents(const RooArgSet* depList) const; virtual Option_t*TObject::GetDrawOption() const; stat",MatchSource.WIKI,root/html534/PiecewiseInterpolation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PiecewiseInterpolation.html
https://root.cern/root/html534/PiecewiseInterpolation.html:15404,Security,Hash,Hash,15404,"AbsReal::getPropagatedError(const RooFitResult& fr); const Text_t*RooAbsArg::getStringAttribute(const Text_t* key) const; virtual const char*TNamed::GetTitle() const; TStringRooAbsReal::getTitle(Bool_t appendUnit = kFALSE) const; Bool_tRooAbsArg::getTransientAttribute(const Text_t* name) const; virtual UInt_tTObject::GetUniqueID() const; const Text_t*RooAbsReal::getUnit() const; Double_tRooAbsReal::getVal(const RooArgSet* set = 0) const; Double_tRooAbsReal::getVal(const RooArgSet& set) const; virtual Double_tRooAbsReal::getValV(const RooArgSet* set = 0) const; RooArgSet*RooAbsArg::getVariables(Bool_t stripDisconnected = kTRUE) const; voidRooAbsArg::graphVizTree(const char* fileName, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); voidRooAbsArg::graphVizTree(ostream& os, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tRooAbsArg::hasClients() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tRooAbsArg::hasRange(const char*) const; static Bool_tRooAbsReal::hideOffset(); const RooArgList&highList() const; RooGenFunction*RooAbsReal::iGenFunction(RooRealVar& x, const RooArgSet& nset = RooArgSet()); RooMultiGenFunction*RooAbsReal::iGenFunction(const RooArgSet& observables, const RooArgSet& nset = RooArgSet()); virtual Bool_tRooAbsArg::importWorkspaceHook(RooWorkspace&); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual Bool_tRooAbsArg::inRange(const char*) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual voidRooAbsArg::ioStreamerPass2(); static voidRooAbsArg::ioStreamerPass2Finalize(); virtual TClass*IsA() const; virtual Bool_tisBinnedDistribution(const RooArgSet& obs) const; Bool_tRooAbsArg::isCloneOf(const RooAbsArg& other) const; Bool_tRooAbsArg::isCons",MatchSource.WIKI,root/html534/PiecewiseInterpolation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PiecewiseInterpolation.html
https://root.cern/root/html534/PiecewiseInterpolation.html:32747,Security,validat,validate,32747,,MatchSource.WIKI,root/html534/PiecewiseInterpolation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PiecewiseInterpolation.html
https://root.cern/root/html534/PiecewiseInterpolation.html:33486,Security,access,access,33486,"string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); Bool_tRooAbsReal::_boolValue! Transient cache for bool values from tree branches ; UChar_tRooAbsReal::_byteValue! Transient cache for byte values from tree branches ; static Bool_tRooAbsReal::_cacheCheckIf true, always validate contents of clean which outcome of evaluate(); deque<RooAbsCache*>RooAbsArg::_cacheListlist of caches; RooRefCountListRooAbsArg::_clientListlist of client objects; RooRefCountListRooAbsArg::_clientListShapesubset of clients that requested shape dirty flag propagation; RooRefCountListRooAbsArg::_clientListValuesubset of clients that requested value dirty flag propagation; TIterator*RooAbsArg::_clientShapeIter! Iterator over _clientListShape ; TIterator*RooAbsArg::_clientValueIter! Iterator over _clientListValue ; Bool_tRooAbsArg::_deleteWatch! Delete watch flag ; RooExpensiveObjectCache*RooAbsArg::_eocachePointer to global cache manager for any expensive components created by this object; Bool_tRooAbsArg::_fastAllow fast access mode in getVal() and proxies; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsReal::_hideOffsetOffset hiding flag; RooListProxy_highSetHigh-side varaition; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; vector<int>_interpCode; Bool_tRooAbsArg::_isConstant! Cached isConstant status ; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; RooListProxy_lowSetLow-side variation; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist.",MatchSource.WIKI,root/html534/PiecewiseInterpolation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PiecewiseInterpolation.html
https://root.cern/root/html534/PiecewiseInterpolation.html:8854,Testability,test,testArg,8854,"l*RooAbsReal::createPlotProjection(const RooArgSet& dependentVars, const RooArgSet* projectedVars, RooArgSet*& cloneSet, const char* rangeName = 0, const RooArgSet* condObs = 0) const; virtual RooAbsReal*RooAbsReal::createProfile(const RooArgSet& paramsOfInterest); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooArgSet& nset = RooArgSet()); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); RooAbsReal*RooAbsReal::createScanRI(const RooArgSet& iset, const RooArgSet& nset, Int_t numScanBins, Int_t intOrder); virtual Double_tRooAbsReal::defaultErrorLevel() const; static RooNumIntConfig*RooAbsReal::defaultIntegratorConfig(); virtual Int_tRooAbsArg::defaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooPrintable::defaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Bool_tRooAbsArg::dependentOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependentOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependsOn(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOn(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0) const; RooDerivative*RooAbsReal::derivative(RooRealVar& obs, Int_t order = 1, Double_t eps = 0.",MatchSource.WIKI,root/html534/PiecewiseInterpolation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PiecewiseInterpolation.html
https://root.cern/root/html534/PiecewiseInterpolation.html:8948,Testability,test,testArg,8948,"l*RooAbsReal::createPlotProjection(const RooArgSet& dependentVars, const RooArgSet* projectedVars, RooArgSet*& cloneSet, const char* rangeName = 0, const RooArgSet* condObs = 0) const; virtual RooAbsReal*RooAbsReal::createProfile(const RooArgSet& paramsOfInterest); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooArgSet& nset = RooArgSet()); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); RooAbsReal*RooAbsReal::createScanRI(const RooArgSet& iset, const RooArgSet& nset, Int_t numScanBins, Int_t intOrder); virtual Double_tRooAbsReal::defaultErrorLevel() const; static RooNumIntConfig*RooAbsReal::defaultIntegratorConfig(); virtual Int_tRooAbsArg::defaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooPrintable::defaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Bool_tRooAbsArg::dependentOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependentOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependsOn(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOn(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0) const; RooDerivative*RooAbsReal::derivative(RooRealVar& obs, Int_t order = 1, Double_t eps = 0.",MatchSource.WIKI,root/html534/PiecewiseInterpolation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PiecewiseInterpolation.html
https://root.cern/root/html534/PiecewiseInterpolation.html:17508,Testability,log,logEvalError,17508,") const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tRooAbsArg::isFundamental() const; virtual Bool_tRooAbsReal::isIdentical(const RooAbsArg& other, Bool_t assumeSameType = kFALSE); virtual Bool_tRooAbsArg::isLValue() const; virtual Bool_tRooAbsReal::isOffsetting() const; Bool_tTObject::IsOnHeap() const; Bool_tRooAbsArg::isShapeDirty() const; Bool_tRooAbsArg::isShapeServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isShapeServer(const char* name) const; virtual Bool_tRooAbsArg::IsSortable() const; Bool_tRooAbsArg::isValueDirty() const; Bool_tRooAbsArg::isValueDirtyAndClear() const; Bool_tRooAbsArg::isValueOrShapeDirtyAndClear() const; Bool_tRooAbsArg::isValueServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isValueServer(const char* name) const; Bool_tTObject::IsZombie() const; voidRooAbsArg::leafNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t recurseNonDerived = kFALSE) const; Bool_tRooAbsArg::localNoDirtyInhibit() const; voidRooAbsReal::logEvalError(const char* message, const char* serverValueString = 0) const; static voidRooAbsReal::logEvalError(const RooAbsReal* originator, const char* origName, const char* message, const char* serverValueString = 0); const RooArgList&lowList() const; virtual voidTNamed::ls(Option_t* option = """") const; virtual Double_tRooAbsReal::maxVal(Int_t code) const; voidTObject::MayNotUse(const char* method) const; RooAbsMoment*RooAbsReal::mean(RooRealVar& obs); RooAbsMoment*RooAbsReal::mean(RooRealVar& obs, const RooArgSet& nset); virtual Int_tRooAbsReal::minTrialSamples(const RooArgSet&) const; RooAbsMoment*RooAbsReal::moment(RooRealVar& obs, Int_t order, Bool_t central, Bool_t takeRoot); RooAbsMoment*RooAbsReal::moment(RooRealVar& obs, const RooArgSet& normObs, Int_t order, Bool_t central, Bool_t takeRoot, Bool_t intNormObs); static voidRooPrintable::nameFieldLength(Int_t newLen); const TNamed*RooAbsArg::namePtr() const; virtual Bool_tTObject::Notify(); Int_tRooAbsArg::numCaches() const; static I",MatchSource.WIKI,root/html534/PiecewiseInterpolation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PiecewiseInterpolation.html
https://root.cern/root/html534/PiecewiseInterpolation.html:17607,Testability,log,logEvalError,17607,"irtual Bool_tRooAbsReal::isIdentical(const RooAbsArg& other, Bool_t assumeSameType = kFALSE); virtual Bool_tRooAbsArg::isLValue() const; virtual Bool_tRooAbsReal::isOffsetting() const; Bool_tTObject::IsOnHeap() const; Bool_tRooAbsArg::isShapeDirty() const; Bool_tRooAbsArg::isShapeServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isShapeServer(const char* name) const; virtual Bool_tRooAbsArg::IsSortable() const; Bool_tRooAbsArg::isValueDirty() const; Bool_tRooAbsArg::isValueDirtyAndClear() const; Bool_tRooAbsArg::isValueOrShapeDirtyAndClear() const; Bool_tRooAbsArg::isValueServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isValueServer(const char* name) const; Bool_tTObject::IsZombie() const; voidRooAbsArg::leafNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t recurseNonDerived = kFALSE) const; Bool_tRooAbsArg::localNoDirtyInhibit() const; voidRooAbsReal::logEvalError(const char* message, const char* serverValueString = 0) const; static voidRooAbsReal::logEvalError(const RooAbsReal* originator, const char* origName, const char* message, const char* serverValueString = 0); const RooArgList&lowList() const; virtual voidTNamed::ls(Option_t* option = """") const; virtual Double_tRooAbsReal::maxVal(Int_t code) const; voidTObject::MayNotUse(const char* method) const; RooAbsMoment*RooAbsReal::mean(RooRealVar& obs); RooAbsMoment*RooAbsReal::mean(RooRealVar& obs, const RooArgSet& nset); virtual Int_tRooAbsReal::minTrialSamples(const RooArgSet&) const; RooAbsMoment*RooAbsReal::moment(RooRealVar& obs, Int_t order, Bool_t central, Bool_t takeRoot); RooAbsMoment*RooAbsReal::moment(RooRealVar& obs, const RooArgSet& normObs, Int_t order, Bool_t central, Bool_t takeRoot, Bool_t intNormObs); static voidRooPrintable::nameFieldLength(Int_t newLen); const TNamed*RooAbsArg::namePtr() const; virtual Bool_tTObject::Notify(); Int_tRooAbsArg::numCaches() const; static Int_tRooAbsReal::numEvalErrorItems(); static Int_tRooAbsReal::numEvalErrors(); Bool_tRooAbsArg::obse",MatchSource.WIKI,root/html534/PiecewiseInterpolation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PiecewiseInterpolation.html
https://root.cern/root/html534/PiecewiseInterpolation.html:18670,Testability,test,testArg,18670,"nst char* message, const char* serverValueString = 0); const RooArgList&lowList() const; virtual voidTNamed::ls(Option_t* option = """") const; virtual Double_tRooAbsReal::maxVal(Int_t code) const; voidTObject::MayNotUse(const char* method) const; RooAbsMoment*RooAbsReal::mean(RooRealVar& obs); RooAbsMoment*RooAbsReal::mean(RooRealVar& obs, const RooArgSet& nset); virtual Int_tRooAbsReal::minTrialSamples(const RooArgSet&) const; RooAbsMoment*RooAbsReal::moment(RooRealVar& obs, Int_t order, Bool_t central, Bool_t takeRoot); RooAbsMoment*RooAbsReal::moment(RooRealVar& obs, const RooArgSet& normObs, Int_t order, Bool_t central, Bool_t takeRoot, Bool_t intNormObs); static voidRooPrintable::nameFieldLength(Int_t newLen); const TNamed*RooAbsArg::namePtr() const; virtual Bool_tTObject::Notify(); Int_tRooAbsArg::numCaches() const; static Int_tRooAbsReal::numEvalErrorItems(); static Int_tRooAbsReal::numEvalErrors(); Bool_tRooAbsArg::observableOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::observableOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; virtual Double_tRooAbsReal::offset() const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TNamed&TNamed::operator=(const TNamed& rhs); Bool_tRooAbsReal::operator==(Double_t value) const; virtual Bool_tRooAbsReal::operator==(const RooAbsArg& other); RooAbsArg::OperModeRooAbsArg::operMode() const; virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables); virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables, Roo",MatchSource.WIKI,root/html534/PiecewiseInterpolation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PiecewiseInterpolation.html
https://root.cern/root/html534/PiecewiseInterpolation.html:18765,Testability,test,testArg,18765,"l voidTNamed::ls(Option_t* option = """") const; virtual Double_tRooAbsReal::maxVal(Int_t code) const; voidTObject::MayNotUse(const char* method) const; RooAbsMoment*RooAbsReal::mean(RooRealVar& obs); RooAbsMoment*RooAbsReal::mean(RooRealVar& obs, const RooArgSet& nset); virtual Int_tRooAbsReal::minTrialSamples(const RooArgSet&) const; RooAbsMoment*RooAbsReal::moment(RooRealVar& obs, Int_t order, Bool_t central, Bool_t takeRoot); RooAbsMoment*RooAbsReal::moment(RooRealVar& obs, const RooArgSet& normObs, Int_t order, Bool_t central, Bool_t takeRoot, Bool_t intNormObs); static voidRooPrintable::nameFieldLength(Int_t newLen); const TNamed*RooAbsArg::namePtr() const; virtual Bool_tTObject::Notify(); Int_tRooAbsArg::numCaches() const; static Int_tRooAbsReal::numEvalErrorItems(); static Int_tRooAbsReal::numEvalErrors(); Bool_tRooAbsArg::observableOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::observableOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; virtual Double_tRooAbsReal::offset() const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TNamed&TNamed::operator=(const TNamed& rhs); Bool_tRooAbsReal::operator==(Double_t value) const; virtual Bool_tRooAbsReal::operator==(const RooAbsArg& other); RooAbsArg::OperModeRooAbsArg::operMode() const; virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables); virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables, RooArgSet& optNodes, RooLinkedList& processedNodes); Bool_tRooAbsArg::overlaps(const RooAbsArg& te",MatchSource.WIKI,root/html534/PiecewiseInterpolation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PiecewiseInterpolation.html
https://root.cern/root/html534/PiecewiseInterpolation.html:19767,Testability,test,testArg,19767,"oAbsArg::observableOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; virtual Double_tRooAbsReal::offset() const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TNamed&TNamed::operator=(const TNamed& rhs); Bool_tRooAbsReal::operator==(Double_t value) const; virtual Bool_tRooAbsReal::operator==(const RooAbsArg& other); RooAbsArg::OperModeRooAbsArg::operMode() const; virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables); virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables, RooArgSet& optNodes, RooLinkedList& processedNodes); Bool_tRooAbsArg::overlaps(const RooAbsArg& testArg, Bool_t valueOnly = kFALSE) const; const RooArgSet*RooAbsArg::ownedComponents() const; virtual voidTObject::Paint(Option_t* option = """"); const RooArgList&paramList() const; virtual RooPlot*RooAbsReal::plotOn(RooPlot* frame, RooLinkedList& cmdList) const; virtual RooPlot*RooAbsReal::plotOn(RooPlot* frame, const RooCmdArg& arg1 = RooCmdArg(), const RooCmdArg& arg2 = RooCmdArg(), const RooCmdArg& arg3 = RooCmdArg(), const RooCmdArg& arg4 = RooCmdArg(), const RooCmdArg& arg5 = RooCmdArg(), const RooCmdArg& arg6 = RooCmdArg(), const RooCmdArg& arg7 = RooCmdArg(), const RooCmdArg& arg8 = RooCmdArg(), const RooCmdArg& arg9 = RooCmdArg(), const RooCmdArg& arg10 = RooCmdArg()) const; virtual list<Double_t>*plotSamplingHint(RooAbsRealLValue& obs, Double_t xlo, Double_t xhi) const; virtual RooPlot*RooAbsReal::plotSliceOn(RooPlot* frame, const RooArgSet& sliceSet, Option_t* drawOptions = ""L"", Double_t scaleFactor = 1.",MatchSource.WIKI,root/html534/PiecewiseInterpolation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PiecewiseInterpolation.html
https://root.cern/root/html534/PiecewiseInterpolation.html:26240,Testability,Test,TestBit,26240,"RooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsArg::setTransientAttribute(const Text_t* name, Bool_t value = kTRUE); virtual voidTObject::SetUniqueID(UInt_t uid); voidRooAbsReal::setUnit(const char* unit); voidRooAbsArg::setValueDirty() const; TIterator*RooAbsArg::shapeClientIterator() const; RooFIterRooAbsArg::shapeClientMIterator() const; virtual voidShowMembers(TMemberInspector&); RooAbsMoment*RooAbsReal::sigma(RooRealVar& obs); RooAbsMoment*RooAbsReal::sigma(RooRealVar& obs, const RooArgSet& nset); virtual Int_tTNamed::Sizeof() const; RooNumIntConfig*RooAbsReal::specialIntegratorConfig() const; RooNumIntConfig*RooAbsReal::specialIntegratorConfig(Bool_t createOnTheFly); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); const map<std::string,std::string>&RooAbsArg::stringAttributes() const; virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; const set<std::string>&RooAbsArg::transientAttributes() const; voidRooAbsArg::treeNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t doBranch = kTRUE, Bool_t doLeaf = kTRUE, Bool_t valueOnly = kFALSE, Bool_t recurseNonDerived = kFALSE) const; voidRooAbsArg::unRegisterCache(RooAbsCache& cache); virtual voidTObject::UseCurrentStyle(); TIterator*RooAbsArg::valueClientIterator() const; RooFIterRooAbsArg::valueClientMIterator() const; static voidRooAbsArg::verboseDirty(Bool_t flag); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; voidRooAbsArg::wireAllCaches(); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidRooAbsReal::writeToStream(ostream& os, Bool_t compact) const.",MatchSource.WIKI,root/html534/PiecewiseInterpolation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PiecewiseInterpolation.html
https://root.cern/root/html534/PiecewiseInterpolation.html:26279,Testability,Test,TestBits,26279,"RooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsArg::setTransientAttribute(const Text_t* name, Bool_t value = kTRUE); virtual voidTObject::SetUniqueID(UInt_t uid); voidRooAbsReal::setUnit(const char* unit); voidRooAbsArg::setValueDirty() const; TIterator*RooAbsArg::shapeClientIterator() const; RooFIterRooAbsArg::shapeClientMIterator() const; virtual voidShowMembers(TMemberInspector&); RooAbsMoment*RooAbsReal::sigma(RooRealVar& obs); RooAbsMoment*RooAbsReal::sigma(RooRealVar& obs, const RooArgSet& nset); virtual Int_tTNamed::Sizeof() const; RooNumIntConfig*RooAbsReal::specialIntegratorConfig() const; RooNumIntConfig*RooAbsReal::specialIntegratorConfig(Bool_t createOnTheFly); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); const map<std::string,std::string>&RooAbsArg::stringAttributes() const; virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; const set<std::string>&RooAbsArg::transientAttributes() const; voidRooAbsArg::treeNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t doBranch = kTRUE, Bool_t doLeaf = kTRUE, Bool_t valueOnly = kFALSE, Bool_t recurseNonDerived = kFALSE) const; voidRooAbsArg::unRegisterCache(RooAbsCache& cache); virtual voidTObject::UseCurrentStyle(); TIterator*RooAbsArg::valueClientIterator() const; RooFIterRooAbsArg::valueClientMIterator() const; static voidRooAbsArg::verboseDirty(Bool_t flag); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; voidRooAbsArg::wireAllCaches(); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidRooAbsReal::writeToStream(ostream& os, Bool_t compact) const.",MatchSource.WIKI,root/html534/PiecewiseInterpolation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PiecewiseInterpolation.html
https://root.cern/root/html534/PiecewiseInterpolation.html:3601,Usability,Clear,Clear,3601,"rtual RooFitResult*RooAbsReal::chi2FitTo(RooDataSet& xydata, const RooLinkedList& cmdList); virtual RooFitResult*RooAbsReal::chi2FitTo(RooDataHist& data, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); virtual RooFitResult*RooAbsReal::chi2FitTo(RooDataSet& xydata, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); static voidRooAbsReal::clearEvalErrorLog(); voidRooAbsArg::clearShapeDirty() const; voidRooAbsArg::clearValueAndShapeDirty() const; voidRooAbsArg::clearValueDirty() const; TIterator*RooAbsArg::clientIterator() const; virtual TObject*clone(const char* newname) const; virtual TObject*RooAbsArg::Clone(const char* newname = 0) const; virtual RooAbsArg*RooAbsArg::cloneTree(const char* newname = 0) const; virtual Int_tRooAbsArg::Compare(const TObject* other) const; virtual voidRooAbsArg::constOptimizeTestStatistic(RooAbsArg::ConstOpCode opcode, Bool_t doAlsoTrackingOpt = kTRUE); virtual voidTNamed::Copy(TObject& named) const; static UInt_tRooAbsArg::crc32(const char* data); static UInt_tRooAbsArg::crc32(const char* data, ULong_t sz, UInt_t crc = 0); virtual RooAbsReal*RooAbsReal::createChi2(RooDataHist& data, const RooLinkedList& cmdList); virtual RooAbsReal*RooAbsReal::createChi2(RooDataSet& data, const RooLinkedList& cmdList); virtual RooAbsReal*RooAbsReal::creat",MatchSource.WIKI,root/html534/PiecewiseInterpolation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PiecewiseInterpolation.html
https://root.cern/root/html534/PiecewiseInterpolation.html:3654,Usability,clear,clearEvalErrorLog,3654,", const RooLinkedList& cmdList); virtual RooFitResult*RooAbsReal::chi2FitTo(RooDataHist& data, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); virtual RooFitResult*RooAbsReal::chi2FitTo(RooDataSet& xydata, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); static voidRooAbsReal::clearEvalErrorLog(); voidRooAbsArg::clearShapeDirty() const; voidRooAbsArg::clearValueAndShapeDirty() const; voidRooAbsArg::clearValueDirty() const; TIterator*RooAbsArg::clientIterator() const; virtual TObject*clone(const char* newname) const; virtual TObject*RooAbsArg::Clone(const char* newname = 0) const; virtual RooAbsArg*RooAbsArg::cloneTree(const char* newname = 0) const; virtual Int_tRooAbsArg::Compare(const TObject* other) const; virtual voidRooAbsArg::constOptimizeTestStatistic(RooAbsArg::ConstOpCode opcode, Bool_t doAlsoTrackingOpt = kTRUE); virtual voidTNamed::Copy(TObject& named) const; static UInt_tRooAbsArg::crc32(const char* data); static UInt_tRooAbsArg::crc32(const char* data, ULong_t sz, UInt_t crc = 0); virtual RooAbsReal*RooAbsReal::createChi2(RooDataHist& data, const RooLinkedList& cmdList); virtual RooAbsReal*RooAbsReal::createChi2(RooDataSet& data, const RooLinkedList& cmdList); virtual RooAbsReal*RooAbsReal::createChi2(RooDataHist& data, const RooCmdArg& arg1 = RooCmdArg:",MatchSource.WIKI,root/html534/PiecewiseInterpolation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PiecewiseInterpolation.html
https://root.cern/root/html534/PiecewiseInterpolation.html:3690,Usability,clear,clearShapeDirty,3690,"rtual RooFitResult*RooAbsReal::chi2FitTo(RooDataHist& data, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); virtual RooFitResult*RooAbsReal::chi2FitTo(RooDataSet& xydata, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); static voidRooAbsReal::clearEvalErrorLog(); voidRooAbsArg::clearShapeDirty() const; voidRooAbsArg::clearValueAndShapeDirty() const; voidRooAbsArg::clearValueDirty() const; TIterator*RooAbsArg::clientIterator() const; virtual TObject*clone(const char* newname) const; virtual TObject*RooAbsArg::Clone(const char* newname = 0) const; virtual RooAbsArg*RooAbsArg::cloneTree(const char* newname = 0) const; virtual Int_tRooAbsArg::Compare(const TObject* other) const; virtual voidRooAbsArg::constOptimizeTestStatistic(RooAbsArg::ConstOpCode opcode, Bool_t doAlsoTrackingOpt = kTRUE); virtual voidTNamed::Copy(TObject& named) const; static UInt_tRooAbsArg::crc32(const char* data); static UInt_tRooAbsArg::crc32(const char* data, ULong_t sz, UInt_t crc = 0); virtual RooAbsReal*RooAbsReal::createChi2(RooDataHist& data, const RooLinkedList& cmdList); virtual RooAbsReal*RooAbsReal::createChi2(RooDataSet& data, const RooLinkedList& cmdList); virtual RooAbsReal*RooAbsReal::createChi2(RooDataHist& data, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = Ro",MatchSource.WIKI,root/html534/PiecewiseInterpolation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PiecewiseInterpolation.html
https://root.cern/root/html534/PiecewiseInterpolation.html:3730,Usability,clear,clearValueAndShapeDirty,3730,"DataHist& data, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); virtual RooFitResult*RooAbsReal::chi2FitTo(RooDataSet& xydata, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); static voidRooAbsReal::clearEvalErrorLog(); voidRooAbsArg::clearShapeDirty() const; voidRooAbsArg::clearValueAndShapeDirty() const; voidRooAbsArg::clearValueDirty() const; TIterator*RooAbsArg::clientIterator() const; virtual TObject*clone(const char* newname) const; virtual TObject*RooAbsArg::Clone(const char* newname = 0) const; virtual RooAbsArg*RooAbsArg::cloneTree(const char* newname = 0) const; virtual Int_tRooAbsArg::Compare(const TObject* other) const; virtual voidRooAbsArg::constOptimizeTestStatistic(RooAbsArg::ConstOpCode opcode, Bool_t doAlsoTrackingOpt = kTRUE); virtual voidTNamed::Copy(TObject& named) const; static UInt_tRooAbsArg::crc32(const char* data); static UInt_tRooAbsArg::crc32(const char* data, ULong_t sz, UInt_t crc = 0); virtual RooAbsReal*RooAbsReal::createChi2(RooDataHist& data, const RooLinkedList& cmdList); virtual RooAbsReal*RooAbsReal::createChi2(RooDataSet& data, const RooLinkedList& cmdList); virtual RooAbsReal*RooAbsReal::createChi2(RooDataHist& data, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = Roo",MatchSource.WIKI,root/html534/PiecewiseInterpolation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PiecewiseInterpolation.html
https://root.cern/root/html534/PiecewiseInterpolation.html:3778,Usability,clear,clearValueDirty,3778,"mdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); virtual RooFitResult*RooAbsReal::chi2FitTo(RooDataSet& xydata, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); static voidRooAbsReal::clearEvalErrorLog(); voidRooAbsArg::clearShapeDirty() const; voidRooAbsArg::clearValueAndShapeDirty() const; voidRooAbsArg::clearValueDirty() const; TIterator*RooAbsArg::clientIterator() const; virtual TObject*clone(const char* newname) const; virtual TObject*RooAbsArg::Clone(const char* newname = 0) const; virtual RooAbsArg*RooAbsArg::cloneTree(const char* newname = 0) const; virtual Int_tRooAbsArg::Compare(const TObject* other) const; virtual voidRooAbsArg::constOptimizeTestStatistic(RooAbsArg::ConstOpCode opcode, Bool_t doAlsoTrackingOpt = kTRUE); virtual voidTNamed::Copy(TObject& named) const; static UInt_tRooAbsArg::crc32(const char* data); static UInt_tRooAbsArg::crc32(const char* data, ULong_t sz, UInt_t crc = 0); virtual RooAbsReal*RooAbsReal::createChi2(RooDataHist& data, const RooLinkedList& cmdList); virtual RooAbsReal*RooAbsReal::createChi2(RooDataSet& data, const RooLinkedList& cmdList); virtual RooAbsReal*RooAbsReal::createChi2(RooDataHist& data, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooC",MatchSource.WIKI,root/html534/PiecewiseInterpolation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PiecewiseInterpolation.html
https://root.cern/root/html534/Point_t.html:462,Modifiability,Inherit,Inheritance,462,. Point_t. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » Point_t. class Point_t. GuiTypes. Types used by the GUI classes. Function Members (Methods); public:. Point_t(); Point_t(const Point_t&); ~Point_t(); Point_t&operator=(const Point_t&). Data Members; public:. Short_tfX; Short_tfY. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation. » Last changed: Tue Sep 8 16:58:31 2015 » Last generated: 2015-09-08 16:58; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ,MatchSource.WIKI,root/html534/Point_t.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Point_t.html
https://root.cern/root/html534/Point_t.html:475,Modifiability,Inherit,Inherited,475,. Point_t. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » Point_t. class Point_t. GuiTypes. Types used by the GUI classes. Function Members (Methods); public:. Point_t(); Point_t(const Point_t&); ~Point_t(); Point_t&operator=(const Point_t&). Data Members; public:. Short_tfX; Short_tfY. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation. » Last changed: Tue Sep 8 16:58:31 2015 » Last generated: 2015-09-08 16:58; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ,MatchSource.WIKI,root/html534/Point_t.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Point_t.html
https://root.cern/root/html534/ProcInfo_t.html:299,Integrability,interface,interface,299,". ProcInfo_t. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » ProcInfo_t. class ProcInfo_t. TSystem. Abstract base class defining a generic interface to the underlying; Operating System. Function Members (Methods); public:. ProcInfo_t(); ProcInfo_t(const ProcInfo_t&); virtual~ProcInfo_t(); static TClass*Class(); virtual TClass*IsA() const; ProcInfo_t&operator=(const ProcInfo_t&); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). Data Members; public:. Float_tfCpuSyssystem time used by this process in seconds; Float_tfCpuUseruser time used by this process in seconds; Long_tfMemResidentresident memory used by this process in KB; Long_tfMemVirtualvirtual memory used by this process in KB. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ProcInfo_t(); { }. virtual ~ProcInfo_t(); { }. TSystem& operator=(const ProcInfo_t& ). » Author: Fons Rademakers 15/09/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id$ » Last generated: 2015-09-08 16:58; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/ProcInfo_t.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ProcInfo_t.html
https://root.cern/root/html534/ProcInfo_t.html:954,Modifiability,Inherit,Inheritance,954,". ProcInfo_t. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » ProcInfo_t. class ProcInfo_t. TSystem. Abstract base class defining a generic interface to the underlying; Operating System. Function Members (Methods); public:. ProcInfo_t(); ProcInfo_t(const ProcInfo_t&); virtual~ProcInfo_t(); static TClass*Class(); virtual TClass*IsA() const; ProcInfo_t&operator=(const ProcInfo_t&); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). Data Members; public:. Float_tfCpuSyssystem time used by this process in seconds; Float_tfCpuUseruser time used by this process in seconds; Long_tfMemResidentresident memory used by this process in KB; Long_tfMemVirtualvirtual memory used by this process in KB. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ProcInfo_t(); { }. virtual ~ProcInfo_t(); { }. TSystem& operator=(const ProcInfo_t& ). » Author: Fons Rademakers 15/09/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id$ » Last generated: 2015-09-08 16:58; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/ProcInfo_t.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ProcInfo_t.html
https://root.cern/root/html534/ProcInfo_t.html:967,Modifiability,Inherit,Inherited,967,". ProcInfo_t. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » ProcInfo_t. class ProcInfo_t. TSystem. Abstract base class defining a generic interface to the underlying; Operating System. Function Members (Methods); public:. ProcInfo_t(); ProcInfo_t(const ProcInfo_t&); virtual~ProcInfo_t(); static TClass*Class(); virtual TClass*IsA() const; ProcInfo_t&operator=(const ProcInfo_t&); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). Data Members; public:. Float_tfCpuSyssystem time used by this process in seconds; Float_tfCpuUseruser time used by this process in seconds; Long_tfMemResidentresident memory used by this process in KB; Long_tfMemVirtualvirtual memory used by this process in KB. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ProcInfo_t(); { }. virtual ~ProcInfo_t(); { }. TSystem& operator=(const ProcInfo_t& ). » Author: Fons Rademakers 15/09/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id$ » Last generated: 2015-09-08 16:58; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/ProcInfo_t.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/ProcInfo_t.html
https://root.cern/root/html534/PyROOT__TPyException.html:1149,Modifiability,Inherit,Inheritance,1149,". PyROOT::TPyException. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » BINDINGS; » PYROOT; » PyROOT::TPyException. class PyROOT::TPyException: public exception. C++ exception for throwing python exceptions. Purpose: A C++ exception class for throwing python exceptions; through C++ code.; Created: Apr, 2004, sss, from the version in D0's python_util. Note: Don't be tempted to declare the virtual functions defined here; as inline.; If you do, you may not be able to properly throw these; exceptions across shared libraries. Function Members (Methods); public:. virtual~TPyException(); static TClass*Class(); virtual TClass*IsA() const; PyROOT::TPyException&operator=(const PyROOT::TPyException&); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); PyROOT::TPyExceptionTPyException(); PyROOT::TPyExceptionTPyException(const PyROOT::TPyException&); virtual const char*what() const. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TPyException(); default constructor. ~TPyException(); destructor. const char* what() const; Return reason for throwing this exception: a python exception was raised. TPyException(); default constructor. » Last changed: root/pyroot:$Name: $:$Id$ » Last generated: 2015-03-10 17:09; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/PyROOT__TPyException.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PyROOT__TPyException.html
https://root.cern/root/html534/PyROOT__TPyException.html:1162,Modifiability,Inherit,Inherited,1162,". PyROOT::TPyException. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » BINDINGS; » PYROOT; » PyROOT::TPyException. class PyROOT::TPyException: public exception. C++ exception for throwing python exceptions. Purpose: A C++ exception class for throwing python exceptions; through C++ code.; Created: Apr, 2004, sss, from the version in D0's python_util. Note: Don't be tempted to declare the virtual functions defined here; as inline.; If you do, you may not be able to properly throw these; exceptions across shared libraries. Function Members (Methods); public:. virtual~TPyException(); static TClass*Class(); virtual TClass*IsA() const; PyROOT::TPyException&operator=(const PyROOT::TPyException&); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); PyROOT::TPyExceptionTPyException(); PyROOT::TPyExceptionTPyException(const PyROOT::TPyException&); virtual const char*what() const. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TPyException(); default constructor. ~TPyException(); destructor. const char* what() const; Return reason for throwing this exception: a python exception was raised. TPyException(); default constructor. » Last changed: root/pyroot:$Name: $:$Id$ » Last generated: 2015-03-10 17:09; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/PyROOT__TPyException.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PyROOT__TPyException.html
https://root.cern/root/html534/PyROOT__TPyROOTApplication.html:4541,Availability,Error,Error,4541,"(const char* signal); voidTQObject::Emit(const char* signal, Long_t* paramArr); voidTQObject::Emit(const char* signal, const char* params); voidTQObject::Emit(const char* signal, Double_t param); voidTQObject::Emit(const char* signal, Long_t param); voidTQObject::Emit(const char* signal, Long64_t param); voidTQObject::Emit(const char* signal, Bool_t param); voidTQObject::Emit(const char* signal, Char_t param); voidTQObject::Emit(const char* signal, UChar_t param); voidTQObject::Emit(const char* signal, Short_t param); voidTQObject::Emit(const char* signal, UShort_t param); voidTQObject::Emit(const char* signal, Int_t param); voidTQObject::Emit(const char* signal, UInt_t param); voidTQObject::Emit(const char* signal, ULong_t param); voidTQObject::Emit(const char* signal, ULong64_t param); voidTQObject::Emit(const char* signal, Float_t param); voidTQObject::EmitVA(const char* signal, Int_t nargs); voidTQObject::EmitVA(const char* signal, Int_t nargs, va_list va); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); static Long_tTApplication::ExecuteFile(const char* file, Int_t* error = 0, Bool_t keep = kFALSE); TApplication::EExitOnExceptionTApplication::ExitOnException(TApplication::EExitOnException opt = kExit); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual TApplicationImp*TApplication::GetApplicationImp(); static TList*TApplication::GetApplications(); TApplication*TApplication::GetAppRemote() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; const char*TApplicat",MatchSource.WIKI,root/html534/PyROOT__TPyROOTApplication.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PyROOT__TPyROOTApplication.html
https://root.cern/root/html534/PyROOT__TPyROOTApplication.html:4670,Availability,error,error,4670,"* params); voidTQObject::Emit(const char* signal, Double_t param); voidTQObject::Emit(const char* signal, Long_t param); voidTQObject::Emit(const char* signal, Long64_t param); voidTQObject::Emit(const char* signal, Bool_t param); voidTQObject::Emit(const char* signal, Char_t param); voidTQObject::Emit(const char* signal, UChar_t param); voidTQObject::Emit(const char* signal, Short_t param); voidTQObject::Emit(const char* signal, UShort_t param); voidTQObject::Emit(const char* signal, Int_t param); voidTQObject::Emit(const char* signal, UInt_t param); voidTQObject::Emit(const char* signal, ULong_t param); voidTQObject::Emit(const char* signal, ULong64_t param); voidTQObject::Emit(const char* signal, Float_t param); voidTQObject::EmitVA(const char* signal, Int_t nargs); voidTQObject::EmitVA(const char* signal, Int_t nargs, va_list va); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); static Long_tTApplication::ExecuteFile(const char* file, Int_t* error = 0, Bool_t keep = kFALSE); TApplication::EExitOnExceptionTApplication::ExitOnException(TApplication::EExitOnException opt = kExit); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual TApplicationImp*TApplication::GetApplicationImp(); static TList*TApplication::GetApplications(); TApplication*TApplication::GetAppRemote() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; const char*TApplication::GetIdleCommand() const; TList*TQObject::GetListOfClassSignals() const; TList*TQObject::GetListOfConnections() const; TList*T",MatchSource.WIKI,root/html534/PyROOT__TPyROOTApplication.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PyROOT__TPyROOTApplication.html
https://root.cern/root/html534/PyROOT__TPyROOTApplication.html:4754,Availability,error,error,4754,"t(const char* signal, Long_t param); voidTQObject::Emit(const char* signal, Long64_t param); voidTQObject::Emit(const char* signal, Bool_t param); voidTQObject::Emit(const char* signal, Char_t param); voidTQObject::Emit(const char* signal, UChar_t param); voidTQObject::Emit(const char* signal, Short_t param); voidTQObject::Emit(const char* signal, UShort_t param); voidTQObject::Emit(const char* signal, Int_t param); voidTQObject::Emit(const char* signal, UInt_t param); voidTQObject::Emit(const char* signal, ULong_t param); voidTQObject::Emit(const char* signal, ULong64_t param); voidTQObject::Emit(const char* signal, Float_t param); voidTQObject::EmitVA(const char* signal, Int_t nargs); voidTQObject::EmitVA(const char* signal, Int_t nargs, va_list va); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); static Long_tTApplication::ExecuteFile(const char* file, Int_t* error = 0, Bool_t keep = kFALSE); TApplication::EExitOnExceptionTApplication::ExitOnException(TApplication::EExitOnException opt = kExit); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual TApplicationImp*TApplication::GetApplicationImp(); static TList*TApplication::GetApplications(); TApplication*TApplication::GetAppRemote() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; const char*TApplication::GetIdleCommand() const; TList*TQObject::GetListOfClassSignals() const; TList*TQObject::GetListOfConnections() const; TList*TQObject::GetListOfSignals() const; virtual const char*TObject::GetName() const; virt",MatchSource.WIKI,root/html534/PyROOT__TPyROOTApplication.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PyROOT__TPyROOTApplication.html
https://root.cern/root/html534/PyROOT__TPyROOTApplication.html:4898,Availability,error,error,4898,"); voidTQObject::Emit(const char* signal, Char_t param); voidTQObject::Emit(const char* signal, UChar_t param); voidTQObject::Emit(const char* signal, Short_t param); voidTQObject::Emit(const char* signal, UShort_t param); voidTQObject::Emit(const char* signal, Int_t param); voidTQObject::Emit(const char* signal, UInt_t param); voidTQObject::Emit(const char* signal, ULong_t param); voidTQObject::Emit(const char* signal, ULong64_t param); voidTQObject::Emit(const char* signal, Float_t param); voidTQObject::EmitVA(const char* signal, Int_t nargs); voidTQObject::EmitVA(const char* signal, Int_t nargs, va_list va); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); static Long_tTApplication::ExecuteFile(const char* file, Int_t* error = 0, Bool_t keep = kFALSE); TApplication::EExitOnExceptionTApplication::ExitOnException(TApplication::EExitOnException opt = kExit); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual TApplicationImp*TApplication::GetApplicationImp(); static TList*TApplication::GetApplications(); TApplication*TApplication::GetAppRemote() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; const char*TApplication::GetIdleCommand() const; TList*TQObject::GetListOfClassSignals() const; TList*TQObject::GetListOfConnections() const; TList*TQObject::GetListOfSignals() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; v",MatchSource.WIKI,root/html534/PyROOT__TPyROOTApplication.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PyROOT__TPyROOTApplication.html
https://root.cern/root/html534/PyROOT__TPyROOTApplication.html:8885,Availability,error,error,8885,"Libs(); Bool_tTApplication::NoLogoOpt() const; Bool_tTApplication::NoLogOpt() const; virtual Bool_tTObject::Notify(); virtual Int_tTQObject::NumberOfConnections() const; virtual Int_tTQObject::NumberOfSignals() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; virtual voidTApplication::Open(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TObject&TObject::operator=(const TObject& rhs); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Long_tTApplication::ProcessFile(const char* file, Int_t* error = 0, Bool_t keep = kFALSE); virtual Long_tTApplication::ProcessLine(const char* line, Bool_t sync = kFALSE, Int_t* error = 0); Bool_tTApplication::QuitOpt() const; virtual voidTApplication::Raise(); virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); virtual voidTApplication::RemoveIdleTimer(); voidTObject::ResetBit(UInt_t f); Bool_tTApplication::ReturnFromRun() const; virtual voidTApplication::ReturnPressed(char* text)SIGNAL ; virtual voidTApplication::Run(Bool_t retrn = kFALSE); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTApplication::SetEchoMode(Bool_t mode); virtual voidTApplication::SetIdleTimer(UInt_t idleTimeInSec, const c",MatchSource.WIKI,root/html534/PyROOT__TPyROOTApplication.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PyROOT__TPyROOTApplication.html
https://root.cern/root/html534/PyROOT__TPyROOTApplication.html:9006,Availability,error,error,9006,"tual Int_tTQObject::NumberOfConnections() const; virtual Int_tTQObject::NumberOfSignals() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; virtual voidTApplication::Open(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TObject&TObject::operator=(const TObject& rhs); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Long_tTApplication::ProcessFile(const char* file, Int_t* error = 0, Bool_t keep = kFALSE); virtual Long_tTApplication::ProcessLine(const char* line, Bool_t sync = kFALSE, Int_t* error = 0); Bool_tTApplication::QuitOpt() const; virtual voidTApplication::Raise(); virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); virtual voidTApplication::RemoveIdleTimer(); voidTObject::ResetBit(UInt_t f); Bool_tTApplication::ReturnFromRun() const; virtual voidTApplication::ReturnPressed(char* text)SIGNAL ; virtual voidTApplication::Run(Bool_t retrn = kFALSE); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTApplication::SetEchoMode(Bool_t mode); virtual voidTApplication::SetIdleTimer(UInt_t idleTimeInSec, const char* command); static voidTObject::SetObjectStat(Bool_t stat); voidTApplication::SetReturnFromRun(Bool_t ret); virtual vo",MatchSource.WIKI,root/html534/PyROOT__TPyROOTApplication.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PyROOT__TPyROOTApplication.html
https://root.cern/root/html534/PyROOT__TPyROOTApplication.html:12177,Availability,error,error,12177,", Int_t* argc, char** argv, Bool_t bLoadLibs = kTRUE); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; const char*TApplication::WorkingDirectory() const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. static Int_tTQObject::CheckConnectArgs(TQObject* sender, TClass* sender_class, const char* signal, TClass* receiver_class, const char* slot); static voidTApplication::Close(TApplication* app); static Bool_tTQObject::ConnectToClass(TQObject* sender, const char* signal, TClass* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::ConnectToClass(const char* sender_class, const char* signal, TClass* receiver_class, void* receiver, const char* slot); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; virtual void*TQObject::GetSender(); virtual const char*TQObject::GetSenderClassName() const; virtual voidTApplication::Help(const char* line); virtual voidTApplication::LoadGraphicsLibs(); virtual voidTApplication::MakeBatch(); voidTObject::MakeZombie(); static TApplication*TApplication::Open(const char* url, Int_t debug, const char* script); static Int_tTApplication::ParseRemoteLine(const char* ln, TString& hostdir, TString& user, Int_t& dbg, TString& script); virtual Long_tTApplication::ProcessRemote(const char* line, Int_t* error = 0); voidTApplication::SetSignalHandler(TSignalHandler* sh). Data Members; public:. enum TApplication::EStatusBits { kProcessRemotely; kDefaultApplication; };; enum TApplication::EExitOnException { kDontExit; kExit; kAbort; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete",MatchSource.WIKI,root/html534/PyROOT__TPyROOTApplication.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PyROOT__TPyROOTApplication.html
https://root.cern/root/html534/PyROOT__TPyROOTApplication.html:13096,Availability,avail,available,13096,"; static TApplication*TApplication::Open(const char* url, Int_t debug, const char* script); static Int_tTApplication::ParseRemoteLine(const char* ln, TString& hostdir, TString& user, Int_t& dbg, TString& script); virtual Long_tTApplication::ProcessRemote(const char* line, Int_t* error = 0); voidTApplication::SetSignalHandler(TSignalHandler* sh). Data Members; public:. enum TApplication::EStatusBits { kProcessRemotely; kDefaultApplication; };; enum TApplication::EExitOnException { kDontExit; kExit; kAbort; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TApplication*TApplication::fAppRemoteCurrent remote application, if defined; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static TList*TApplication::fgApplicationsList of available applications. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TPyROOTApplication(const char* acn, Int_t* argc, char** argv, Bool_t bLoadLibs = kTRUE); Create a TApplication derived for use with interactive ROOT from python. A; set of standard, often used libs is loaded if bLoadLibs is true (default). Bool_t CreatePyROOTApplication(Bool_t bLoadLibs = kTRUE); Create a TPyROOTApplication. Returns false if gApplication is not null. Bool_t InitROOTGlobals(); Setup the basic ROOT globals gBenchmark, gStyle, gProgname, if not already; set. Always returns true. Bool_t InitCINTMessageCallback(); Install CINT message callback which will turn CINT error message into; python exceptions. Always returns true. Bool_t InitROOTMessageCallback(); Install RO",MatchSource.WIKI,root/html534/PyROOT__TPyROOTApplication.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PyROOT__TPyROOTApplication.html
https://root.cern/root/html534/PyROOT__TPyROOTApplication.html:13794,Availability,error,error,13794,". enum TApplication::EStatusBits { kProcessRemotely; kDefaultApplication; };; enum TApplication::EExitOnException { kDontExit; kExit; kAbort; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TApplication*TApplication::fAppRemoteCurrent remote application, if defined; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static TList*TApplication::fgApplicationsList of available applications. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TPyROOTApplication(const char* acn, Int_t* argc, char** argv, Bool_t bLoadLibs = kTRUE); Create a TApplication derived for use with interactive ROOT from python. A; set of standard, often used libs is loaded if bLoadLibs is true (default). Bool_t CreatePyROOTApplication(Bool_t bLoadLibs = kTRUE); Create a TPyROOTApplication. Returns false if gApplication is not null. Bool_t InitROOTGlobals(); Setup the basic ROOT globals gBenchmark, gStyle, gProgname, if not already; set. Always returns true. Bool_t InitCINTMessageCallback(); Install CINT message callback which will turn CINT error message into; python exceptions. Always returns true. Bool_t InitROOTMessageCallback(); Install ROOT message handler which will turn ROOT error message into; python exceptions. Always returns true. virtual ~TPyROOTApplication(); { }. » Last changed: Tue Mar 17 20:53:08 2015 » Last generated: 2015-03-17 20:53; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/PyROOT__TPyROOTApplication.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PyROOT__TPyROOTApplication.html
https://root.cern/root/html534/PyROOT__TPyROOTApplication.html:13938,Availability,error,error,13938,". enum TApplication::EStatusBits { kProcessRemotely; kDefaultApplication; };; enum TApplication::EExitOnException { kDontExit; kExit; kAbort; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TApplication*TApplication::fAppRemoteCurrent remote application, if defined; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static TList*TApplication::fgApplicationsList of available applications. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TPyROOTApplication(const char* acn, Int_t* argc, char** argv, Bool_t bLoadLibs = kTRUE); Create a TApplication derived for use with interactive ROOT from python. A; set of standard, often used libs is loaded if bLoadLibs is true (default). Bool_t CreatePyROOTApplication(Bool_t bLoadLibs = kTRUE); Create a TPyROOTApplication. Returns false if gApplication is not null. Bool_t InitROOTGlobals(); Setup the basic ROOT globals gBenchmark, gStyle, gProgname, if not already; set. Always returns true. Bool_t InitCINTMessageCallback(); Install CINT message callback which will turn CINT error message into; python exceptions. Always returns true. Bool_t InitROOTMessageCallback(); Install ROOT message handler which will turn ROOT error message into; python exceptions. Always returns true. virtual ~TPyROOTApplication(); { }. » Last changed: Tue Mar 17 20:53:08 2015 » Last generated: 2015-03-17 20:53; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/PyROOT__TPyROOTApplication.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PyROOT__TPyROOTApplication.html
https://root.cern/root/html534/PyROOT__TPyROOTApplication.html:13743,Deployability,Install,Install,13743,". enum TApplication::EStatusBits { kProcessRemotely; kDefaultApplication; };; enum TApplication::EExitOnException { kDontExit; kExit; kAbort; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TApplication*TApplication::fAppRemoteCurrent remote application, if defined; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static TList*TApplication::fgApplicationsList of available applications. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TPyROOTApplication(const char* acn, Int_t* argc, char** argv, Bool_t bLoadLibs = kTRUE); Create a TApplication derived for use with interactive ROOT from python. A; set of standard, often used libs is loaded if bLoadLibs is true (default). Bool_t CreatePyROOTApplication(Bool_t bLoadLibs = kTRUE); Create a TPyROOTApplication. Returns false if gApplication is not null. Bool_t InitROOTGlobals(); Setup the basic ROOT globals gBenchmark, gStyle, gProgname, if not already; set. Always returns true. Bool_t InitCINTMessageCallback(); Install CINT message callback which will turn CINT error message into; python exceptions. Always returns true. Bool_t InitROOTMessageCallback(); Install ROOT message handler which will turn ROOT error message into; python exceptions. Always returns true. virtual ~TPyROOTApplication(); { }. » Last changed: Tue Mar 17 20:53:08 2015 » Last generated: 2015-03-17 20:53; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/PyROOT__TPyROOTApplication.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PyROOT__TPyROOTApplication.html
https://root.cern/root/html534/PyROOT__TPyROOTApplication.html:13888,Deployability,Install,Install,13888,". enum TApplication::EStatusBits { kProcessRemotely; kDefaultApplication; };; enum TApplication::EExitOnException { kDontExit; kExit; kAbort; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TApplication*TApplication::fAppRemoteCurrent remote application, if defined; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static TList*TApplication::fgApplicationsList of available applications. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TPyROOTApplication(const char* acn, Int_t* argc, char** argv, Bool_t bLoadLibs = kTRUE); Create a TApplication derived for use with interactive ROOT from python. A; set of standard, often used libs is loaded if bLoadLibs is true (default). Bool_t CreatePyROOTApplication(Bool_t bLoadLibs = kTRUE); Create a TPyROOTApplication. Returns false if gApplication is not null. Bool_t InitROOTGlobals(); Setup the basic ROOT globals gBenchmark, gStyle, gProgname, if not already; set. Always returns true. Bool_t InitCINTMessageCallback(); Install CINT message callback which will turn CINT error message into; python exceptions. Always returns true. Bool_t InitROOTMessageCallback(); Install ROOT message handler which will turn ROOT error message into; python exceptions. Always returns true. virtual ~TPyROOTApplication(); { }. » Last changed: Tue Mar 17 20:53:08 2015 » Last generated: 2015-03-17 20:53; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/PyROOT__TPyROOTApplication.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PyROOT__TPyROOTApplication.html
https://root.cern/root/html534/PyROOT__TPyROOTApplication.html:7818,Integrability,Message,Message,7818,"ool_tInitCINTMessageCallback(); voidTApplication::InitializeGraphics(); static Bool_tInitROOTGlobals(); static Bool_tInitROOTMessageCallback(); TObjArray*TApplication::InputFiles() const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTApplication::IsCmdThread(); virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTApplication::IsRunning() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTApplication::KeyPressed(Int_t key)SIGNAL ; virtual voidTApplication::LineProcessed(const char* line)SIGNAL ; static voidTQObject::LoadRQ_OBJECT(); virtual voidTApplication::Lower(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTApplication::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTQObject::Message(const char* msg)SIGNAL ; static voidTApplication::NeedGraphicsLibs(); Bool_tTApplication::NoLogoOpt() const; Bool_tTApplication::NoLogOpt() const; virtual Bool_tTObject::Notify(); virtual Int_tTQObject::NumberOfConnections() const; virtual Int_tTQObject::NumberOfSignals() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; virtual voidTApplication::Open(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TObject&TObject::operator=(const TObject& rhs); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; vi",MatchSource.WIKI,root/html534/PyROOT__TPyROOTApplication.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PyROOT__TPyROOTApplication.html
https://root.cern/root/html534/PyROOT__TPyROOTApplication.html:13756,Integrability,message,message,13756,". enum TApplication::EStatusBits { kProcessRemotely; kDefaultApplication; };; enum TApplication::EExitOnException { kDontExit; kExit; kAbort; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TApplication*TApplication::fAppRemoteCurrent remote application, if defined; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static TList*TApplication::fgApplicationsList of available applications. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TPyROOTApplication(const char* acn, Int_t* argc, char** argv, Bool_t bLoadLibs = kTRUE); Create a TApplication derived for use with interactive ROOT from python. A; set of standard, often used libs is loaded if bLoadLibs is true (default). Bool_t CreatePyROOTApplication(Bool_t bLoadLibs = kTRUE); Create a TPyROOTApplication. Returns false if gApplication is not null. Bool_t InitROOTGlobals(); Setup the basic ROOT globals gBenchmark, gStyle, gProgname, if not already; set. Always returns true. Bool_t InitCINTMessageCallback(); Install CINT message callback which will turn CINT error message into; python exceptions. Always returns true. Bool_t InitROOTMessageCallback(); Install ROOT message handler which will turn ROOT error message into; python exceptions. Always returns true. virtual ~TPyROOTApplication(); { }. » Last changed: Tue Mar 17 20:53:08 2015 » Last generated: 2015-03-17 20:53; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/PyROOT__TPyROOTApplication.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PyROOT__TPyROOTApplication.html
https://root.cern/root/html534/PyROOT__TPyROOTApplication.html:13800,Integrability,message,message,13800,". enum TApplication::EStatusBits { kProcessRemotely; kDefaultApplication; };; enum TApplication::EExitOnException { kDontExit; kExit; kAbort; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TApplication*TApplication::fAppRemoteCurrent remote application, if defined; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static TList*TApplication::fgApplicationsList of available applications. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TPyROOTApplication(const char* acn, Int_t* argc, char** argv, Bool_t bLoadLibs = kTRUE); Create a TApplication derived for use with interactive ROOT from python. A; set of standard, often used libs is loaded if bLoadLibs is true (default). Bool_t CreatePyROOTApplication(Bool_t bLoadLibs = kTRUE); Create a TPyROOTApplication. Returns false if gApplication is not null. Bool_t InitROOTGlobals(); Setup the basic ROOT globals gBenchmark, gStyle, gProgname, if not already; set. Always returns true. Bool_t InitCINTMessageCallback(); Install CINT message callback which will turn CINT error message into; python exceptions. Always returns true. Bool_t InitROOTMessageCallback(); Install ROOT message handler which will turn ROOT error message into; python exceptions. Always returns true. virtual ~TPyROOTApplication(); { }. » Last changed: Tue Mar 17 20:53:08 2015 » Last generated: 2015-03-17 20:53; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/PyROOT__TPyROOTApplication.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PyROOT__TPyROOTApplication.html
https://root.cern/root/html534/PyROOT__TPyROOTApplication.html:13901,Integrability,message,message,13901,". enum TApplication::EStatusBits { kProcessRemotely; kDefaultApplication; };; enum TApplication::EExitOnException { kDontExit; kExit; kAbort; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TApplication*TApplication::fAppRemoteCurrent remote application, if defined; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static TList*TApplication::fgApplicationsList of available applications. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TPyROOTApplication(const char* acn, Int_t* argc, char** argv, Bool_t bLoadLibs = kTRUE); Create a TApplication derived for use with interactive ROOT from python. A; set of standard, often used libs is loaded if bLoadLibs is true (default). Bool_t CreatePyROOTApplication(Bool_t bLoadLibs = kTRUE); Create a TPyROOTApplication. Returns false if gApplication is not null. Bool_t InitROOTGlobals(); Setup the basic ROOT globals gBenchmark, gStyle, gProgname, if not already; set. Always returns true. Bool_t InitCINTMessageCallback(); Install CINT message callback which will turn CINT error message into; python exceptions. Always returns true. Bool_t InitROOTMessageCallback(); Install ROOT message handler which will turn ROOT error message into; python exceptions. Always returns true. virtual ~TPyROOTApplication(); { }. » Last changed: Tue Mar 17 20:53:08 2015 » Last generated: 2015-03-17 20:53; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/PyROOT__TPyROOTApplication.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PyROOT__TPyROOTApplication.html
https://root.cern/root/html534/PyROOT__TPyROOTApplication.html:13944,Integrability,message,message,13944,". enum TApplication::EStatusBits { kProcessRemotely; kDefaultApplication; };; enum TApplication::EExitOnException { kDontExit; kExit; kAbort; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TApplication*TApplication::fAppRemoteCurrent remote application, if defined; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static TList*TApplication::fgApplicationsList of available applications. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TPyROOTApplication(const char* acn, Int_t* argc, char** argv, Bool_t bLoadLibs = kTRUE); Create a TApplication derived for use with interactive ROOT from python. A; set of standard, often used libs is loaded if bLoadLibs is true (default). Bool_t CreatePyROOTApplication(Bool_t bLoadLibs = kTRUE); Create a TPyROOTApplication. Returns false if gApplication is not null. Bool_t InitROOTGlobals(); Setup the basic ROOT globals gBenchmark, gStyle, gProgname, if not already; set. Always returns true. Bool_t InitCINTMessageCallback(); Install CINT message callback which will turn CINT error message into; python exceptions. Always returns true. Bool_t InitROOTMessageCallback(); Install ROOT message handler which will turn ROOT error message into; python exceptions. Always returns true. virtual ~TPyROOTApplication(); { }. » Last changed: Tue Mar 17 20:53:08 2015 » Last generated: 2015-03-17 20:53; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/PyROOT__TPyROOTApplication.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PyROOT__TPyROOTApplication.html
https://root.cern/root/html534/PyROOT__TPyROOTApplication.html:6676,Modifiability,Inherit,InheritsFrom,6676,"GetListOfSignals() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual voidTApplication::GetOptions(Int_t* argc, char** argv); TSignalHandler*TApplication::GetSignalHandler() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual voidTApplication::HandleException(Int_t sig); virtual voidTApplication::HandleIdleTimer()SIGNAL ; virtual Bool_tTApplication::HandleTermInput(); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTObject::Hash() const; virtual voidTApplication::Hide(); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTApplication::Iconify(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTApplication::Init(); static Bool_tInitCINTMessageCallback(); voidTApplication::InitializeGraphics(); static Bool_tInitROOTGlobals(); static Bool_tInitROOTMessageCallback(); TObjArray*TApplication::InputFiles() const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTApplication::IsCmdThread(); virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTApplication::IsRunning() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTApplication::KeyPressed(Int_t key)SIGNAL ; virtual voidTApplication::LineProcessed(const char* line)SIGNAL ; static voidTQObject::LoadRQ_OBJECT(); virtual voidTApplication::Lower(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = ",MatchSource.WIKI,root/html534/PyROOT__TPyROOTApplication.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PyROOT__TPyROOTApplication.html
https://root.cern/root/html534/PyROOT__TPyROOTApplication.html:6742,Modifiability,Inherit,InheritsFrom,6742,"nst; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual voidTApplication::GetOptions(Int_t* argc, char** argv); TSignalHandler*TApplication::GetSignalHandler() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual voidTApplication::HandleException(Int_t sig); virtual voidTApplication::HandleIdleTimer()SIGNAL ; virtual Bool_tTApplication::HandleTermInput(); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTObject::Hash() const; virtual voidTApplication::Hide(); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTApplication::Iconify(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTApplication::Init(); static Bool_tInitCINTMessageCallback(); voidTApplication::InitializeGraphics(); static Bool_tInitROOTGlobals(); static Bool_tInitROOTMessageCallback(); TObjArray*TApplication::InputFiles() const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTApplication::IsCmdThread(); virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTApplication::IsRunning() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTApplication::KeyPressed(Int_t key)SIGNAL ; virtual voidTApplication::LineProcessed(const char* line)SIGNAL ; static voidTQObject::LoadRQ_OBJECT(); virtual voidTApplication::Lower(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTApplication::ls(Option_t* option = """") const; voi",MatchSource.WIKI,root/html534/PyROOT__TPyROOTApplication.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PyROOT__TPyROOTApplication.html
https://root.cern/root/html534/PyROOT__TPyROOTApplication.html:13134,Modifiability,Inherit,Inheritance,13134,"har* line, Int_t* error = 0); voidTApplication::SetSignalHandler(TSignalHandler* sh). Data Members; public:. enum TApplication::EStatusBits { kProcessRemotely; kDefaultApplication; };; enum TApplication::EExitOnException { kDontExit; kExit; kAbort; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TApplication*TApplication::fAppRemoteCurrent remote application, if defined; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static TList*TApplication::fgApplicationsList of available applications. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TPyROOTApplication(const char* acn, Int_t* argc, char** argv, Bool_t bLoadLibs = kTRUE); Create a TApplication derived for use with interactive ROOT from python. A; set of standard, often used libs is loaded if bLoadLibs is true (default). Bool_t CreatePyROOTApplication(Bool_t bLoadLibs = kTRUE); Create a TPyROOTApplication. Returns false if gApplication is not null. Bool_t InitROOTGlobals(); Setup the basic ROOT globals gBenchmark, gStyle, gProgname, if not already; set. Always returns true. Bool_t InitCINTMessageCallback(); Install CINT message callback which will turn CINT error message into; python exceptions. Always returns true. Bool_t InitROOTMessageCallback(); Install ROOT message handler which will turn ROOT error message into; python exceptions. Always returns true. virtual ~TPyROOTApplication(); { }. » Last changed: Tue Mar 17 20:53:08 2015 » Last generated: 2015-03-17 20:53; This page has been automatically generated. For c",MatchSource.WIKI,root/html534/PyROOT__TPyROOTApplication.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PyROOT__TPyROOTApplication.html
https://root.cern/root/html534/PyROOT__TPyROOTApplication.html:13147,Modifiability,Inherit,Inherited,13147,"har* line, Int_t* error = 0); voidTApplication::SetSignalHandler(TSignalHandler* sh). Data Members; public:. enum TApplication::EStatusBits { kProcessRemotely; kDefaultApplication; };; enum TApplication::EExitOnException { kDontExit; kExit; kAbort; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TApplication*TApplication::fAppRemoteCurrent remote application, if defined; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static TList*TApplication::fgApplicationsList of available applications. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TPyROOTApplication(const char* acn, Int_t* argc, char** argv, Bool_t bLoadLibs = kTRUE); Create a TApplication derived for use with interactive ROOT from python. A; set of standard, often used libs is loaded if bLoadLibs is true (default). Bool_t CreatePyROOTApplication(Bool_t bLoadLibs = kTRUE); Create a TPyROOTApplication. Returns false if gApplication is not null. Bool_t InitROOTGlobals(); Setup the basic ROOT globals gBenchmark, gStyle, gProgname, if not already; set. Always returns true. Bool_t InitCINTMessageCallback(); Install CINT message callback which will turn CINT error message into; python exceptions. Always returns true. Bool_t InitROOTMessageCallback(); Install ROOT message handler which will turn ROOT error message into; python exceptions. Always returns true. virtual ~TPyROOTApplication(); { }. » Last changed: Tue Mar 17 20:53:08 2015 » Last generated: 2015-03-17 20:53; This page has been automatically generated. For c",MatchSource.WIKI,root/html534/PyROOT__TPyROOTApplication.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PyROOT__TPyROOTApplication.html
https://root.cern/root/html534/PyROOT__TPyROOTApplication.html:862,Performance,load,load,862,". PyROOT::TPyROOTApplication. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » BINDINGS; » PYROOT; » PyROOT::TPyROOTApplication. class PyROOT::TPyROOTApplication: public TApplication. Setup interactive application for python. The TPyROOTApplication sets up the nuts and bolts for interactive ROOT use; from python, closely following TRint. Note that not everything is done here,; some bits (such as e.g. the use of exception hook for shell escapes) are more; easily done in python and you'll thus find them ROOT.py. The intended use of this class is from python only. It is used by default in; ROOT.py, so if you do not want to have a TApplication derived object created; for you, you'll need to load libPyROOT.so instead. The static InitXYZ functions are used in conjunction with TPyROOTApplication; in ROOT.py, but they can be used independently. NOTE: This class will receive the command line arguments from sys.argv. A; distinction between arguments for TApplication and user arguments can be; made by using ""-"" or ""--"" as a separator on the command line. Function Members (Methods); public:. virtual~TPyROOTApplication(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual const char*TApplication::ApplicationName() const; static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; Int_tTApplication::Argc() const; char**TApplication::Argv() const; char*TApplication::Argv(Int_t index) const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); voidTApplication::ClearInputFiles",MatchSource.WIKI,root/html534/PyROOT__TPyROOTApplication.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PyROOT__TPyROOTApplication.html
https://root.cern/root/html534/PyROOT__TPyROOTApplication.html:11813,Performance,Load,LoadGraphicsLibs,11813,", Int_t* argc, char** argv, Bool_t bLoadLibs = kTRUE); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; const char*TApplication::WorkingDirectory() const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. static Int_tTQObject::CheckConnectArgs(TQObject* sender, TClass* sender_class, const char* signal, TClass* receiver_class, const char* slot); static voidTApplication::Close(TApplication* app); static Bool_tTQObject::ConnectToClass(TQObject* sender, const char* signal, TClass* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::ConnectToClass(const char* sender_class, const char* signal, TClass* receiver_class, void* receiver, const char* slot); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; virtual void*TQObject::GetSender(); virtual const char*TQObject::GetSenderClassName() const; virtual voidTApplication::Help(const char* line); virtual voidTApplication::LoadGraphicsLibs(); virtual voidTApplication::MakeBatch(); voidTObject::MakeZombie(); static TApplication*TApplication::Open(const char* url, Int_t debug, const char* script); static Int_tTApplication::ParseRemoteLine(const char* ln, TString& hostdir, TString& user, Int_t& dbg, TString& script); virtual Long_tTApplication::ProcessRemote(const char* line, Int_t* error = 0); voidTApplication::SetSignalHandler(TSignalHandler* sh). Data Members; public:. enum TApplication::EStatusBits { kProcessRemotely; kDefaultApplication; };; enum TApplication::EExitOnException { kDontExit; kExit; kAbort; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete",MatchSource.WIKI,root/html534/PyROOT__TPyROOTApplication.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PyROOT__TPyROOTApplication.html
https://root.cern/root/html534/PyROOT__TPyROOTApplication.html:13412,Performance,load,loaded,13412,". enum TApplication::EStatusBits { kProcessRemotely; kDefaultApplication; };; enum TApplication::EExitOnException { kDontExit; kExit; kAbort; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TApplication*TApplication::fAppRemoteCurrent remote application, if defined; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static TList*TApplication::fgApplicationsList of available applications. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TPyROOTApplication(const char* acn, Int_t* argc, char** argv, Bool_t bLoadLibs = kTRUE); Create a TApplication derived for use with interactive ROOT from python. A; set of standard, often used libs is loaded if bLoadLibs is true (default). Bool_t CreatePyROOTApplication(Bool_t bLoadLibs = kTRUE); Create a TPyROOTApplication. Returns false if gApplication is not null. Bool_t InitROOTGlobals(); Setup the basic ROOT globals gBenchmark, gStyle, gProgname, if not already; set. Always returns true. Bool_t InitCINTMessageCallback(); Install CINT message callback which will turn CINT error message into; python exceptions. Always returns true. Bool_t InitROOTMessageCallback(); Install ROOT message handler which will turn ROOT error message into; python exceptions. Always returns true. virtual ~TPyROOTApplication(); { }. » Last changed: Tue Mar 17 20:53:08 2015 » Last generated: 2015-03-17 20:53; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/PyROOT__TPyROOTApplication.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PyROOT__TPyROOTApplication.html
https://root.cern/root/html534/PyROOT__TPyROOTApplication.html:6407,Security,Hash,Hash,6407,"ject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; const char*TApplication::GetIdleCommand() const; TList*TQObject::GetListOfClassSignals() const; TList*TQObject::GetListOfConnections() const; TList*TQObject::GetListOfSignals() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual voidTApplication::GetOptions(Int_t* argc, char** argv); TSignalHandler*TApplication::GetSignalHandler() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual voidTApplication::HandleException(Int_t sig); virtual voidTApplication::HandleIdleTimer()SIGNAL ; virtual Bool_tTApplication::HandleTermInput(); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTObject::Hash() const; virtual voidTApplication::Hide(); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTApplication::Iconify(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTApplication::Init(); static Bool_tInitCINTMessageCallback(); voidTApplication::InitializeGraphics(); static Bool_tInitROOTGlobals(); static Bool_tInitROOTMessageCallback(); TObjArray*TApplication::InputFiles() const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTApplication::IsCmdThread(); virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTApplication::IsRunning() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtu",MatchSource.WIKI,root/html534/PyROOT__TPyROOTApplication.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PyROOT__TPyROOTApplication.html
https://root.cern/root/html534/PyROOT__TPyROOTApplication.html:10534,Testability,Test,TestBit,10534,"l voidTApplication::Raise(); virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); virtual voidTApplication::RemoveIdleTimer(); voidTObject::ResetBit(UInt_t f); Bool_tTApplication::ReturnFromRun() const; virtual voidTApplication::ReturnPressed(char* text)SIGNAL ; virtual voidTApplication::Run(Bool_t retrn = kFALSE); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTApplication::SetEchoMode(Bool_t mode); virtual voidTApplication::SetIdleTimer(UInt_t idleTimeInSec, const char* command); static voidTObject::SetObjectStat(Bool_t stat); voidTApplication::SetReturnFromRun(Bool_t ret); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidTApplication::Show(); virtual voidShowMembers(TMemberInspector&); virtual voidTApplication::StartIdleing(); virtual voidTApplication::StopIdleing(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; virtual Int_tTApplication::TabCompletionHook(char* buf, int* pLoc, ostream& out); virtual voidTApplication::Terminate(Int_t status = 0)SIGNAL ; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; PyROOT::TPyROOTApplicationTPyROOTApplication(const char* acn, Int_t* argc, char** argv, Bool_t bLoadLibs = kTRUE); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; const char*TApplication::WorkingDirectory() const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root/html534/PyROOT__TPyROOTApplication.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PyROOT__TPyROOTApplication.html
https://root.cern/root/html534/PyROOT__TPyROOTApplication.html:10573,Testability,Test,TestBits,10573,"l voidTApplication::Raise(); virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); virtual voidTApplication::RemoveIdleTimer(); voidTObject::ResetBit(UInt_t f); Bool_tTApplication::ReturnFromRun() const; virtual voidTApplication::ReturnPressed(char* text)SIGNAL ; virtual voidTApplication::Run(Bool_t retrn = kFALSE); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTApplication::SetEchoMode(Bool_t mode); virtual voidTApplication::SetIdleTimer(UInt_t idleTimeInSec, const char* command); static voidTObject::SetObjectStat(Bool_t stat); voidTApplication::SetReturnFromRun(Bool_t ret); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidTApplication::Show(); virtual voidShowMembers(TMemberInspector&); virtual voidTApplication::StartIdleing(); virtual voidTApplication::StopIdleing(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; virtual Int_tTApplication::TabCompletionHook(char* buf, int* pLoc, ostream& out); virtual voidTApplication::Terminate(Int_t status = 0)SIGNAL ; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; PyROOT::TPyROOTApplicationTPyROOTApplication(const char* acn, Int_t* argc, char** argv, Bool_t bLoadLibs = kTRUE); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; const char*TApplication::WorkingDirectory() const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root/html534/PyROOT__TPyROOTApplication.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PyROOT__TPyROOTApplication.html
https://root.cern/root/html534/PyROOT__TPyROOTApplication.html:1945,Usability,Clear,Clear,1945," virtual~TPyROOTApplication(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual const char*TApplication::ApplicationName() const; static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; Int_tTApplication::Argc() const; char**TApplication::Argv() const; char*TApplication::Argv(Int_t index) const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); voidTApplication::ClearInputFiles",MatchSource.WIKI,root/html534/PyROOT__TPyROOTApplication.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PyROOT__TPyROOTApplication.html
https://root.cern/root/html534/PyROOT__TPyROOTApplication.html:1986,Usability,Clear,ClearInputFiles,1986," virtual~TPyROOTApplication(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual const char*TApplication::ApplicationName() const; static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; Int_tTApplication::Argc() const; char**TApplication::Argv() const; char*TApplication::Argv(Int_t index) const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); voidTApplication::ClearInputFiles",MatchSource.WIKI,root/html534/PyROOT__TPyROOTApplication.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/PyROOT__TPyROOTApplication.html
https://root.cern/root/html534/Rectangle_t.html:531,Modifiability,Inherit,Inheritance,531,. Rectangle_t. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » Rectangle_t. class Rectangle_t. GuiTypes. Types used by the GUI classes. Function Members (Methods); public:. Rectangle_t(); Rectangle_t(const Rectangle_t&); ~Rectangle_t(); Rectangle_t&operator=(const Rectangle_t&). Data Members; public:. UShort_tfHeight; UShort_tfWidth; Short_tfX; Short_tfY. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation. » Last changed: Tue Sep 8 17:02:20 2015 » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ,MatchSource.WIKI,root/html534/Rectangle_t.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Rectangle_t.html
https://root.cern/root/html534/Rectangle_t.html:544,Modifiability,Inherit,Inherited,544,. Rectangle_t. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » Rectangle_t. class Rectangle_t. GuiTypes. Types used by the GUI classes. Function Members (Methods); public:. Rectangle_t(); Rectangle_t(const Rectangle_t&); ~Rectangle_t(); Rectangle_t&operator=(const Rectangle_t&). Data Members; public:. UShort_tfHeight; UShort_tfWidth; Short_tfX; Short_tfY. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation. » Last changed: Tue Sep 8 17:02:20 2015 » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ,MatchSource.WIKI,root/html534/Rectangle_t.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Rectangle_t.html
https://root.cern/root/html534/RedirectHandle_t.html:317,Integrability,interface,interface,317,". RedirectHandle_t. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » RedirectHandle_t. class RedirectHandle_t. TSystem. Abstract base class defining a generic interface to the underlying; Operating System. Function Members (Methods); public:. RedirectHandle_t(const char* n = 0); RedirectHandle_t(const RedirectHandle_t&); ~RedirectHandle_t(); RedirectHandle_t&operator=(const RedirectHandle_t&); voidReset(). Data Members; public:. TStringfFileFile where the output was redirected; Int_tfReadOffSetOffset where to start reading the file (used by ShowOutput(...)); Int_tfStdErrDupDuplicated descriptor for stderr; TStringfStdErrTtytty associated with stderr, if any (e.g. from ttyname(...)); Int_tfStdOutDupDuplicated descriptor for stdout; TStringfStdOutTtytty associated with stdout, if any (e.g. from ttyname(...)). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RedirectHandle_t(const char* n = 0); { }. void Reset(). TSystem& operator=(const RedirectHandle_t& ). » Author: Fons Rademakers 15/09/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/RedirectHandle_t.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RedirectHandle_t.html
https://root.cern/root/html534/RedirectHandle_t.html:991,Modifiability,Inherit,Inheritance,991,". RedirectHandle_t. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » RedirectHandle_t. class RedirectHandle_t. TSystem. Abstract base class defining a generic interface to the underlying; Operating System. Function Members (Methods); public:. RedirectHandle_t(const char* n = 0); RedirectHandle_t(const RedirectHandle_t&); ~RedirectHandle_t(); RedirectHandle_t&operator=(const RedirectHandle_t&); voidReset(). Data Members; public:. TStringfFileFile where the output was redirected; Int_tfReadOffSetOffset where to start reading the file (used by ShowOutput(...)); Int_tfStdErrDupDuplicated descriptor for stderr; TStringfStdErrTtytty associated with stderr, if any (e.g. from ttyname(...)); Int_tfStdOutDupDuplicated descriptor for stdout; TStringfStdOutTtytty associated with stdout, if any (e.g. from ttyname(...)). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RedirectHandle_t(const char* n = 0); { }. void Reset(). TSystem& operator=(const RedirectHandle_t& ). » Author: Fons Rademakers 15/09/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/RedirectHandle_t.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RedirectHandle_t.html
https://root.cern/root/html534/RedirectHandle_t.html:1004,Modifiability,Inherit,Inherited,1004,". RedirectHandle_t. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » RedirectHandle_t. class RedirectHandle_t. TSystem. Abstract base class defining a generic interface to the underlying; Operating System. Function Members (Methods); public:. RedirectHandle_t(const char* n = 0); RedirectHandle_t(const RedirectHandle_t&); ~RedirectHandle_t(); RedirectHandle_t&operator=(const RedirectHandle_t&); voidReset(). Data Members; public:. TStringfFileFile where the output was redirected; Int_tfReadOffSetOffset where to start reading the file (used by ShowOutput(...)); Int_tfStdErrDupDuplicated descriptor for stderr; TStringfStdErrTtytty associated with stderr, if any (e.g. from ttyname(...)); Int_tfStdOutDupDuplicated descriptor for stdout; TStringfStdOutTtytty associated with stdout, if any (e.g. from ttyname(...)). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RedirectHandle_t(const char* n = 0); { }. void Reset(). TSystem& operator=(const RedirectHandle_t& ). » Author: Fons Rademakers 15/09/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/RedirectHandle_t.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RedirectHandle_t.html
https://root.cern/root/html534/Reflex__Any.html:626,Modifiability,Inherit,Inheritance,626,. Reflex::Any. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::Any. class Reflex::Any. Function Members (Methods); public:. ~Any(); void*Address() const; Reflex::AnyAny(); Reflex::AnyAny(const Reflex::Any& other); voidClear(); boolEmpty() const; booloperator bool(); Reflex::Any&operator=(const Reflex::Any& rhs); Reflex::Any&Swap(Reflex::Any& rhs); const type_info&TypeInfo() const. Data Members; private:. Reflex::Any::Placeholder*fContent. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Any(); Constructor . {}. template <typename ValueType> Any(const Reflex::Any& other); Constructor . {}. ~Any(); Dtor . Clear(); Clear the content . operator bool(); bool operator . return ! Empty(). Swap(Reflex::Any& rhs); Modifier . TypeInfo() const; Query . Address() const; Adress . » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ,MatchSource.WIKI,root/html534/Reflex__Any.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__Any.html
https://root.cern/root/html534/Reflex__Any.html:639,Modifiability,Inherit,Inherited,639,. Reflex::Any. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::Any. class Reflex::Any. Function Members (Methods); public:. ~Any(); void*Address() const; Reflex::AnyAny(); Reflex::AnyAny(const Reflex::Any& other); voidClear(); boolEmpty() const; booloperator bool(); Reflex::Any&operator=(const Reflex::Any& rhs); Reflex::Any&Swap(Reflex::Any& rhs); const type_info&TypeInfo() const. Data Members; private:. Reflex::Any::Placeholder*fContent. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Any(); Constructor . {}. template <typename ValueType> Any(const Reflex::Any& other); Constructor . {}. ~Any(); Dtor . Clear(); Clear the content . operator bool(); bool operator . return ! Empty(). Swap(Reflex::Any& rhs); Modifier . TypeInfo() const; Query . Address() const; Adress . » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ,MatchSource.WIKI,root/html534/Reflex__Any.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__Any.html
https://root.cern/root/html534/Reflex__Any.html:822,Usability,Clear,Clear,822,. Reflex::Any. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::Any. class Reflex::Any. Function Members (Methods); public:. ~Any(); void*Address() const; Reflex::AnyAny(); Reflex::AnyAny(const Reflex::Any& other); voidClear(); boolEmpty() const; booloperator bool(); Reflex::Any&operator=(const Reflex::Any& rhs); Reflex::Any&Swap(Reflex::Any& rhs); const type_info&TypeInfo() const. Data Members; private:. Reflex::Any::Placeholder*fContent. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Any(); Constructor . {}. template <typename ValueType> Any(const Reflex::Any& other); Constructor . {}. ~Any(); Dtor . Clear(); Clear the content . operator bool(); bool operator . return ! Empty(). Swap(Reflex::Any& rhs); Modifier . TypeInfo() const; Query . Address() const; Adress . » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ,MatchSource.WIKI,root/html534/Reflex__Any.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__Any.html
https://root.cern/root/html534/Reflex__Any.html:831,Usability,Clear,Clear,831,. Reflex::Any. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::Any. class Reflex::Any. Function Members (Methods); public:. ~Any(); void*Address() const; Reflex::AnyAny(); Reflex::AnyAny(const Reflex::Any& other); voidClear(); boolEmpty() const; booloperator bool(); Reflex::Any&operator=(const Reflex::Any& rhs); Reflex::Any&Swap(Reflex::Any& rhs); const type_info&TypeInfo() const. Data Members; private:. Reflex::Any::Placeholder*fContent. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Any(); Constructor . {}. template <typename ValueType> Any(const Reflex::Any& other); Constructor . {}. ~Any(); Dtor . Clear(); Clear the content . operator bool(); bool operator . return ! Empty(). Swap(Reflex::Any& rhs); Modifier . TypeInfo() const; Query . Address() const; Adress . » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ,MatchSource.WIKI,root/html534/Reflex__Any.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__Any.html
https://root.cern/root/html534/Reflex__Base.html:972,Modifiability,Inherit,Inheritance,972,". Reflex::Base. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::Base. class Reflex::Base. Function Members (Methods); public:. virtual~Base(); Reflex::BaseBase(); Reflex::BaseBase(const Reflex::Base&); Reflex::BaseBase(const Reflex::Type& baseType, Reflex::OffsetFunction offsetFP, unsigned int modifiers = 0); boolIsPrivate() const; boolIsProtected() const; boolIsPublic() const; boolIsVirtual() const; stringName(unsigned int mod = 0) const; size_tOffset(void* mem = 0) const; Reflex::OffsetFunctionOffsetFP() const; booloperator bool() const; Reflex::ScopeToScope() const; Reflex::TypeToType() const. private:. const Reflex::Class*BaseClass() const. Data Members; private:. const Reflex::Class*fBaseClass; Reflex::TypefBaseType; unsigned intfModifiers; Reflex::OffsetFunctionfOffsetFP. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; inline Base(). operator bool() const. IsPrivate() const. IsProtected() const. IsPublic() const. IsVirtual() const. Offset(void* mem = 0) const. OffsetFP() const. ToType() const. ToScope() const. We are invoking ""Type::operator Scope() const"" here,; be very careful with the cast (do not cast to a reference). Base(); default constructor . Base(const Reflex::Type& baseType, Reflex::OffsetFunction offsetFP, unsigned int modifiers = 0); constructor . {}. std::string Name(unsigned int mod = 0) const. * Name will return the string represenation of the base class; * @param typedefexp expand typedefs or not; * @return string represenation of base class. const Class* BaseClass() const. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/Reflex__Base.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__Base.html
https://root.cern/root/html534/Reflex__Base.html:985,Modifiability,Inherit,Inherited,985,". Reflex::Base. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::Base. class Reflex::Base. Function Members (Methods); public:. virtual~Base(); Reflex::BaseBase(); Reflex::BaseBase(const Reflex::Base&); Reflex::BaseBase(const Reflex::Type& baseType, Reflex::OffsetFunction offsetFP, unsigned int modifiers = 0); boolIsPrivate() const; boolIsProtected() const; boolIsPublic() const; boolIsVirtual() const; stringName(unsigned int mod = 0) const; size_tOffset(void* mem = 0) const; Reflex::OffsetFunctionOffsetFP() const; booloperator bool() const; Reflex::ScopeToScope() const; Reflex::TypeToType() const. private:. const Reflex::Class*BaseClass() const. Data Members; private:. const Reflex::Class*fBaseClass; Reflex::TypefBaseType; unsigned intfModifiers; Reflex::OffsetFunctionfOffsetFP. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; inline Base(). operator bool() const. IsPrivate() const. IsProtected() const. IsPublic() const. IsVirtual() const. Offset(void* mem = 0) const. OffsetFP() const. ToType() const. ToScope() const. We are invoking ""Type::operator Scope() const"" here,; be very careful with the cast (do not cast to a reference). Base(); default constructor . Base(const Reflex::Type& baseType, Reflex::OffsetFunction offsetFP, unsigned int modifiers = 0); constructor . {}. std::string Name(unsigned int mod = 0) const. * Name will return the string represenation of the base class; * @param typedefexp expand typedefs or not; * @return string represenation of base class. const Class* BaseClass() const. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/Reflex__Base.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__Base.html
https://root.cern/root/html534/Reflex__ClassBuilder.html:1736,Modifiability,Inherit,Inheritance,1736,"const char* nam, Reflex::StubFunction stubFP, void* stubCtx = 0, const char* params = 0, unsigned int modifiers = 0); Reflex::ClassBuilder&AddOnDemandDataMemberBuilder(Reflex::OnDemandBuilderForScope* odb); Reflex::ClassBuilder&AddOnDemandFunctionMemberBuilder(Reflex::OnDemandBuilderForScope* odb); Reflex::ClassBuilder&AddTypedef(const Reflex::Type& typ, const char* def); Reflex::ClassBuilder&AddTypedef(const char* typ, const char* def); Reflex::ClassBuilderClassBuilder(Reflex::Class* cl); Reflex::ClassBuilderClassBuilder(const Reflex::ClassBuilder&); Reflex::ClassBuilderClassBuilder(const char* nam, const type_info& ti, size_t size, unsigned int modifiers = 0, Reflex::TYPE typ = CLASS); Reflex::ClassBuilder&operator=(const Reflex::ClassBuilder&); Reflex::ClassBuilder&SetSizeOf(size_t size); Reflex::TypeToType(). protected:. Reflex::ClassBuilder&EnableCallback(bool enable = true). Data Members; private:. Reflex::ClassBuilderImplfClassBuilderImpl. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; AddBase(unsigned int modifiers). AddDataMember(const char* nam, size_t offs, unsigned int modifiers). AddFunctionMember(const char* nam, StubFunction stubFP, void* stubCtx, const char* params, unsigned int modifiers). AddTypedef(const char* def). AddEnum(const char* values, unsigned int modifiers). void AddTypedef(const Type& typ, const char* def). void AddOnDemandDataMemberBuilder(Reflex::OnDemandBuilderForScope* odb). * Register an on demand builder for data members with this class. void AddOnDemandFunctionMemberBuilder(Reflex::OnDemandBuilderForScope* odb). * Register an on demand builder for function members with this class. void SetSizeOf(size_t size); SetSizeOf will set the SizeOf property for this class.; * It currently ignore all actual content.; * @size Size of the class. Type ToType(). * ToType will return the currently produced Type (class); * @return the type currently being built. void EnableCallback(bool enable = true). *",MatchSource.WIKI,root/html534/Reflex__ClassBuilder.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__ClassBuilder.html
https://root.cern/root/html534/Reflex__ClassBuilder.html:1749,Modifiability,Inherit,Inherited,1749,"const char* nam, Reflex::StubFunction stubFP, void* stubCtx = 0, const char* params = 0, unsigned int modifiers = 0); Reflex::ClassBuilder&AddOnDemandDataMemberBuilder(Reflex::OnDemandBuilderForScope* odb); Reflex::ClassBuilder&AddOnDemandFunctionMemberBuilder(Reflex::OnDemandBuilderForScope* odb); Reflex::ClassBuilder&AddTypedef(const Reflex::Type& typ, const char* def); Reflex::ClassBuilder&AddTypedef(const char* typ, const char* def); Reflex::ClassBuilderClassBuilder(Reflex::Class* cl); Reflex::ClassBuilderClassBuilder(const Reflex::ClassBuilder&); Reflex::ClassBuilderClassBuilder(const char* nam, const type_info& ti, size_t size, unsigned int modifiers = 0, Reflex::TYPE typ = CLASS); Reflex::ClassBuilder&operator=(const Reflex::ClassBuilder&); Reflex::ClassBuilder&SetSizeOf(size_t size); Reflex::TypeToType(). protected:. Reflex::ClassBuilder&EnableCallback(bool enable = true). Data Members; private:. Reflex::ClassBuilderImplfClassBuilderImpl. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; AddBase(unsigned int modifiers). AddDataMember(const char* nam, size_t offs, unsigned int modifiers). AddFunctionMember(const char* nam, StubFunction stubFP, void* stubCtx, const char* params, unsigned int modifiers). AddTypedef(const char* def). AddEnum(const char* values, unsigned int modifiers). void AddTypedef(const Type& typ, const char* def). void AddOnDemandDataMemberBuilder(Reflex::OnDemandBuilderForScope* odb). * Register an on demand builder for data members with this class. void AddOnDemandFunctionMemberBuilder(Reflex::OnDemandBuilderForScope* odb). * Register an on demand builder for function members with this class. void SetSizeOf(size_t size); SetSizeOf will set the SizeOf property for this class.; * It currently ignore all actual content.; * @size Size of the class. Type ToType(). * ToType will return the currently produced Type (class); * @return the type currently being built. void EnableCallback(bool enable = true). *",MatchSource.WIKI,root/html534/Reflex__ClassBuilder.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__ClassBuilder.html
https://root.cern/root/html534/Reflex__ClassBuilder.html:786,Testability,Stub,StubFunction,786,". Reflex::ClassBuilder. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::ClassBuilder. class Reflex::ClassBuilder. Function Members (Methods); public:. virtual~ClassBuilder(); Reflex::ClassBuilder&AddBase(const Reflex::Type& bas, Reflex::OffsetFunction offsFP, unsigned int modifiers = 0); Reflex::ClassBuilder&AddDataMember(const Reflex::Type& typ, const char* nam, size_t offs, unsigned int modifiers = 0); Reflex::ClassBuilder&AddEnum(const char* nam, const char* values, const type_info* ti = 0, unsigned int modifiers = 0); Reflex::ClassBuilder&AddFunctionMember(const Reflex::Type& typ, const char* nam, Reflex::StubFunction stubFP, void* stubCtx = 0, const char* params = 0, unsigned int modifiers = 0); Reflex::ClassBuilder&AddOnDemandDataMemberBuilder(Reflex::OnDemandBuilderForScope* odb); Reflex::ClassBuilder&AddOnDemandFunctionMemberBuilder(Reflex::OnDemandBuilderForScope* odb); Reflex::ClassBuilder&AddTypedef(const Reflex::Type& typ, const char* def); Reflex::ClassBuilder&AddTypedef(const char* typ, const char* def); Reflex::ClassBuilderClassBuilder(Reflex::Class* cl); Reflex::ClassBuilderClassBuilder(const Reflex::ClassBuilder&); Reflex::ClassBuilderClassBuilder(const char* nam, const type_info& ti, size_t size, unsigned int modifiers = 0, Reflex::TYPE typ = CLASS); Reflex::ClassBuilder&operator=(const Reflex::ClassBuilder&); Reflex::ClassBuilder&SetSizeOf(size_t size); Reflex::TypeToType(). protected:. Reflex::ClassBuilder&EnableCallback(bool enable = true). Data Members; private:. Reflex::ClassBuilderImplfClassBuilderImpl. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; AddBase(unsigned int modifiers). AddDataMember(const char* nam, size_t offs, unsigned int modifiers). AddFunctionMember(const char* nam, StubFunction stubFP, void* stubCtx, const char* par",MatchSource.WIKI,root/html534/Reflex__ClassBuilder.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__ClassBuilder.html
https://root.cern/root/html534/Reflex__ClassBuilder.html:799,Testability,stub,stubFP,799,". Reflex::ClassBuilder. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::ClassBuilder. class Reflex::ClassBuilder. Function Members (Methods); public:. virtual~ClassBuilder(); Reflex::ClassBuilder&AddBase(const Reflex::Type& bas, Reflex::OffsetFunction offsFP, unsigned int modifiers = 0); Reflex::ClassBuilder&AddDataMember(const Reflex::Type& typ, const char* nam, size_t offs, unsigned int modifiers = 0); Reflex::ClassBuilder&AddEnum(const char* nam, const char* values, const type_info* ti = 0, unsigned int modifiers = 0); Reflex::ClassBuilder&AddFunctionMember(const Reflex::Type& typ, const char* nam, Reflex::StubFunction stubFP, void* stubCtx = 0, const char* params = 0, unsigned int modifiers = 0); Reflex::ClassBuilder&AddOnDemandDataMemberBuilder(Reflex::OnDemandBuilderForScope* odb); Reflex::ClassBuilder&AddOnDemandFunctionMemberBuilder(Reflex::OnDemandBuilderForScope* odb); Reflex::ClassBuilder&AddTypedef(const Reflex::Type& typ, const char* def); Reflex::ClassBuilder&AddTypedef(const char* typ, const char* def); Reflex::ClassBuilderClassBuilder(Reflex::Class* cl); Reflex::ClassBuilderClassBuilder(const Reflex::ClassBuilder&); Reflex::ClassBuilderClassBuilder(const char* nam, const type_info& ti, size_t size, unsigned int modifiers = 0, Reflex::TYPE typ = CLASS); Reflex::ClassBuilder&operator=(const Reflex::ClassBuilder&); Reflex::ClassBuilder&SetSizeOf(size_t size); Reflex::TypeToType(). protected:. Reflex::ClassBuilder&EnableCallback(bool enable = true). Data Members; private:. Reflex::ClassBuilderImplfClassBuilderImpl. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; AddBase(unsigned int modifiers). AddDataMember(const char* nam, size_t offs, unsigned int modifiers). AddFunctionMember(const char* nam, StubFunction stubFP, void* stubCtx, const char* par",MatchSource.WIKI,root/html534/Reflex__ClassBuilder.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__ClassBuilder.html
https://root.cern/root/html534/Reflex__ClassBuilder.html:813,Testability,stub,stubCtx,813,". Reflex::ClassBuilder. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::ClassBuilder. class Reflex::ClassBuilder. Function Members (Methods); public:. virtual~ClassBuilder(); Reflex::ClassBuilder&AddBase(const Reflex::Type& bas, Reflex::OffsetFunction offsFP, unsigned int modifiers = 0); Reflex::ClassBuilder&AddDataMember(const Reflex::Type& typ, const char* nam, size_t offs, unsigned int modifiers = 0); Reflex::ClassBuilder&AddEnum(const char* nam, const char* values, const type_info* ti = 0, unsigned int modifiers = 0); Reflex::ClassBuilder&AddFunctionMember(const Reflex::Type& typ, const char* nam, Reflex::StubFunction stubFP, void* stubCtx = 0, const char* params = 0, unsigned int modifiers = 0); Reflex::ClassBuilder&AddOnDemandDataMemberBuilder(Reflex::OnDemandBuilderForScope* odb); Reflex::ClassBuilder&AddOnDemandFunctionMemberBuilder(Reflex::OnDemandBuilderForScope* odb); Reflex::ClassBuilder&AddTypedef(const Reflex::Type& typ, const char* def); Reflex::ClassBuilder&AddTypedef(const char* typ, const char* def); Reflex::ClassBuilderClassBuilder(Reflex::Class* cl); Reflex::ClassBuilderClassBuilder(const Reflex::ClassBuilder&); Reflex::ClassBuilderClassBuilder(const char* nam, const type_info& ti, size_t size, unsigned int modifiers = 0, Reflex::TYPE typ = CLASS); Reflex::ClassBuilder&operator=(const Reflex::ClassBuilder&); Reflex::ClassBuilder&SetSizeOf(size_t size); Reflex::TypeToType(). protected:. Reflex::ClassBuilder&EnableCallback(bool enable = true). Data Members; private:. Reflex::ClassBuilderImplfClassBuilderImpl. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; AddBase(unsigned int modifiers). AddDataMember(const char* nam, size_t offs, unsigned int modifiers). AddFunctionMember(const char* nam, StubFunction stubFP, void* stubCtx, const char* par",MatchSource.WIKI,root/html534/Reflex__ClassBuilder.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__ClassBuilder.html
https://root.cern/root/html534/Reflex__ClassBuilder.html:1950,Testability,Stub,StubFunction,1950,"ex::ClassBuilder&AddOnDemandFunctionMemberBuilder(Reflex::OnDemandBuilderForScope* odb); Reflex::ClassBuilder&AddTypedef(const Reflex::Type& typ, const char* def); Reflex::ClassBuilder&AddTypedef(const char* typ, const char* def); Reflex::ClassBuilderClassBuilder(Reflex::Class* cl); Reflex::ClassBuilderClassBuilder(const Reflex::ClassBuilder&); Reflex::ClassBuilderClassBuilder(const char* nam, const type_info& ti, size_t size, unsigned int modifiers = 0, Reflex::TYPE typ = CLASS); Reflex::ClassBuilder&operator=(const Reflex::ClassBuilder&); Reflex::ClassBuilder&SetSizeOf(size_t size); Reflex::TypeToType(). protected:. Reflex::ClassBuilder&EnableCallback(bool enable = true). Data Members; private:. Reflex::ClassBuilderImplfClassBuilderImpl. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; AddBase(unsigned int modifiers). AddDataMember(const char* nam, size_t offs, unsigned int modifiers). AddFunctionMember(const char* nam, StubFunction stubFP, void* stubCtx, const char* params, unsigned int modifiers). AddTypedef(const char* def). AddEnum(const char* values, unsigned int modifiers). void AddTypedef(const Type& typ, const char* def). void AddOnDemandDataMemberBuilder(Reflex::OnDemandBuilderForScope* odb). * Register an on demand builder for data members with this class. void AddOnDemandFunctionMemberBuilder(Reflex::OnDemandBuilderForScope* odb). * Register an on demand builder for function members with this class. void SetSizeOf(size_t size); SetSizeOf will set the SizeOf property for this class.; * It currently ignore all actual content.; * @size Size of the class. Type ToType(). * ToType will return the currently produced Type (class); * @return the type currently being built. void EnableCallback(bool enable = true). * EnableCallback Enable or disable the callback call in the destructor; * @param enable true to enable callback call, false to disable callback call. ClassBuilder(const char* nam, const type_info& ti, size_t siz",MatchSource.WIKI,root/html534/Reflex__ClassBuilder.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__ClassBuilder.html
https://root.cern/root/html534/Reflex__ClassBuilder.html:1963,Testability,stub,stubFP,1963,"ex::ClassBuilder&AddOnDemandFunctionMemberBuilder(Reflex::OnDemandBuilderForScope* odb); Reflex::ClassBuilder&AddTypedef(const Reflex::Type& typ, const char* def); Reflex::ClassBuilder&AddTypedef(const char* typ, const char* def); Reflex::ClassBuilderClassBuilder(Reflex::Class* cl); Reflex::ClassBuilderClassBuilder(const Reflex::ClassBuilder&); Reflex::ClassBuilderClassBuilder(const char* nam, const type_info& ti, size_t size, unsigned int modifiers = 0, Reflex::TYPE typ = CLASS); Reflex::ClassBuilder&operator=(const Reflex::ClassBuilder&); Reflex::ClassBuilder&SetSizeOf(size_t size); Reflex::TypeToType(). protected:. Reflex::ClassBuilder&EnableCallback(bool enable = true). Data Members; private:. Reflex::ClassBuilderImplfClassBuilderImpl. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; AddBase(unsigned int modifiers). AddDataMember(const char* nam, size_t offs, unsigned int modifiers). AddFunctionMember(const char* nam, StubFunction stubFP, void* stubCtx, const char* params, unsigned int modifiers). AddTypedef(const char* def). AddEnum(const char* values, unsigned int modifiers). void AddTypedef(const Type& typ, const char* def). void AddOnDemandDataMemberBuilder(Reflex::OnDemandBuilderForScope* odb). * Register an on demand builder for data members with this class. void AddOnDemandFunctionMemberBuilder(Reflex::OnDemandBuilderForScope* odb). * Register an on demand builder for function members with this class. void SetSizeOf(size_t size); SetSizeOf will set the SizeOf property for this class.; * It currently ignore all actual content.; * @size Size of the class. Type ToType(). * ToType will return the currently produced Type (class); * @return the type currently being built. void EnableCallback(bool enable = true). * EnableCallback Enable or disable the callback call in the destructor; * @param enable true to enable callback call, false to disable callback call. ClassBuilder(const char* nam, const type_info& ti, size_t siz",MatchSource.WIKI,root/html534/Reflex__ClassBuilder.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__ClassBuilder.html
https://root.cern/root/html534/Reflex__ClassBuilder.html:1977,Testability,stub,stubCtx,1977,"ex::ClassBuilder&AddOnDemandFunctionMemberBuilder(Reflex::OnDemandBuilderForScope* odb); Reflex::ClassBuilder&AddTypedef(const Reflex::Type& typ, const char* def); Reflex::ClassBuilder&AddTypedef(const char* typ, const char* def); Reflex::ClassBuilderClassBuilder(Reflex::Class* cl); Reflex::ClassBuilderClassBuilder(const Reflex::ClassBuilder&); Reflex::ClassBuilderClassBuilder(const char* nam, const type_info& ti, size_t size, unsigned int modifiers = 0, Reflex::TYPE typ = CLASS); Reflex::ClassBuilder&operator=(const Reflex::ClassBuilder&); Reflex::ClassBuilder&SetSizeOf(size_t size); Reflex::TypeToType(). protected:. Reflex::ClassBuilder&EnableCallback(bool enable = true). Data Members; private:. Reflex::ClassBuilderImplfClassBuilderImpl. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; AddBase(unsigned int modifiers). AddDataMember(const char* nam, size_t offs, unsigned int modifiers). AddFunctionMember(const char* nam, StubFunction stubFP, void* stubCtx, const char* params, unsigned int modifiers). AddTypedef(const char* def). AddEnum(const char* values, unsigned int modifiers). void AddTypedef(const Type& typ, const char* def). void AddOnDemandDataMemberBuilder(Reflex::OnDemandBuilderForScope* odb). * Register an on demand builder for data members with this class. void AddOnDemandFunctionMemberBuilder(Reflex::OnDemandBuilderForScope* odb). * Register an on demand builder for function members with this class. void SetSizeOf(size_t size); SetSizeOf will set the SizeOf property for this class.; * It currently ignore all actual content.; * @size Size of the class. Type ToType(). * ToType will return the currently produced Type (class); * @return the type currently being built. void EnableCallback(bool enable = true). * EnableCallback Enable or disable the callback call in the destructor; * @param enable true to enable callback call, false to disable callback call. ClassBuilder(const char* nam, const type_info& ti, size_t siz",MatchSource.WIKI,root/html534/Reflex__ClassBuilder.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__ClassBuilder.html
https://root.cern/root/html534/Reflex__ClassBuilderImpl.html:1824,Modifiability,Inherit,Inheritance,1824," int modifiers = 0); voidAddOnDemandDataMemberBuilder(Reflex::OnDemandBuilderForScope* odb); voidAddOnDemandFunctionMemberBuilder(Reflex::OnDemandBuilderForScope* odb); voidAddProperty(const char* key, Reflex::Any value); voidAddProperty(const char* key, const char* value); voidAddProperty(const char* key, const Reflex::Literal& value); voidAddTypedef(const Reflex::Type& typ, const char* def); Reflex::ClassBuilderImplClassBuilderImpl(Reflex::Class* cl); Reflex::ClassBuilderImplClassBuilderImpl(const Reflex::ClassBuilderImpl&); Reflex::ClassBuilderImplClassBuilderImpl(const char* nam, const type_info& ti, size_t size, unsigned int modifiers = 0, Reflex::TYPE typ = CLASS); Reflex::ClassBuilderImpl&operator=(const Reflex::ClassBuilderImpl&); voidSetSizeOf(size_t size); Reflex::TypeToType(). protected:. voidEnableCallback(bool enable = true). Data Members; private:. boolfCallbackEnabled; Reflex::Class*fClass; Reflex::MemberfLastMember; boolfNewClass. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ClassBuilderImpl(const char* nam, const type_info& ti, size_t size, unsigned int modifiers = 0, Reflex::TYPE typ = CLASS); constructor . ClassBuilderImpl(Class* cl). virtual ~ClassBuilderImpl(); destructor . void AddBase(const Reflex::Type& bas, Reflex::OffsetFunction offsFP, unsigned int modifiers = 0). * AddBase will add the information about one BaseAt class; * @param Name of the BaseAt class; * @param OffsetFP function pointer for Offset calculation; * @param modifiers the modifiers of the class. void AddFunctionMember(const char* nam, const Reflex::Type& typ, Reflex::StubFunction stubFP, void* stubCtx = 0, const char* params = 0, unsigned int modifiers = 0); AddDataMember will add the information about one data; * MemberAt of the class; *; * @param Name of the data MemberAt; * @param At of the data MemberAt; * @param Offset of the data MemberAt; * @param modifiers the modifiers of the data MemberAt. AddFunctionMember will add the ",MatchSource.WIKI,root/html534/Reflex__ClassBuilderImpl.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__ClassBuilderImpl.html
https://root.cern/root/html534/Reflex__ClassBuilderImpl.html:1837,Modifiability,Inherit,Inherited,1837," int modifiers = 0); voidAddOnDemandDataMemberBuilder(Reflex::OnDemandBuilderForScope* odb); voidAddOnDemandFunctionMemberBuilder(Reflex::OnDemandBuilderForScope* odb); voidAddProperty(const char* key, Reflex::Any value); voidAddProperty(const char* key, const char* value); voidAddProperty(const char* key, const Reflex::Literal& value); voidAddTypedef(const Reflex::Type& typ, const char* def); Reflex::ClassBuilderImplClassBuilderImpl(Reflex::Class* cl); Reflex::ClassBuilderImplClassBuilderImpl(const Reflex::ClassBuilderImpl&); Reflex::ClassBuilderImplClassBuilderImpl(const char* nam, const type_info& ti, size_t size, unsigned int modifiers = 0, Reflex::TYPE typ = CLASS); Reflex::ClassBuilderImpl&operator=(const Reflex::ClassBuilderImpl&); voidSetSizeOf(size_t size); Reflex::TypeToType(). protected:. voidEnableCallback(bool enable = true). Data Members; private:. boolfCallbackEnabled; Reflex::Class*fClass; Reflex::MemberfLastMember; boolfNewClass. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ClassBuilderImpl(const char* nam, const type_info& ti, size_t size, unsigned int modifiers = 0, Reflex::TYPE typ = CLASS); constructor . ClassBuilderImpl(Class* cl). virtual ~ClassBuilderImpl(); destructor . void AddBase(const Reflex::Type& bas, Reflex::OffsetFunction offsFP, unsigned int modifiers = 0). * AddBase will add the information about one BaseAt class; * @param Name of the BaseAt class; * @param OffsetFP function pointer for Offset calculation; * @param modifiers the modifiers of the class. void AddFunctionMember(const char* nam, const Reflex::Type& typ, Reflex::StubFunction stubFP, void* stubCtx = 0, const char* params = 0, unsigned int modifiers = 0); AddDataMember will add the information about one data; * MemberAt of the class; *; * @param Name of the data MemberAt; * @param At of the data MemberAt; * @param Offset of the data MemberAt; * @param modifiers the modifiers of the data MemberAt. AddFunctionMember will add the ",MatchSource.WIKI,root/html534/Reflex__ClassBuilderImpl.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__ClassBuilderImpl.html
https://root.cern/root/html534/Reflex__ClassBuilderImpl.html:777,Testability,Stub,StubFunction,777,"assBuilderImpl. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::ClassBuilderImpl. class Reflex::ClassBuilderImpl. Register an on demand builder with this class. Function Members (Methods); public:. virtual~ClassBuilderImpl(); voidAddBase(const Reflex::Type& bas, Reflex::OffsetFunction offsFP, unsigned int modifiers = 0); voidAddDataMember(const char* nam, const Reflex::Type& typ, size_t offs, unsigned int modifiers = 0); voidAddEnum(const char* nam, const char* values, const type_info* ti, unsigned int modifiers = 0); voidAddFunctionMember(const char* nam, const Reflex::Type& typ, Reflex::StubFunction stubFP, void* stubCtx = 0, const char* params = 0, unsigned int modifiers = 0); voidAddOnDemandDataMemberBuilder(Reflex::OnDemandBuilderForScope* odb); voidAddOnDemandFunctionMemberBuilder(Reflex::OnDemandBuilderForScope* odb); voidAddProperty(const char* key, Reflex::Any value); voidAddProperty(const char* key, const char* value); voidAddProperty(const char* key, const Reflex::Literal& value); voidAddTypedef(const Reflex::Type& typ, const char* def); Reflex::ClassBuilderImplClassBuilderImpl(Reflex::Class* cl); Reflex::ClassBuilderImplClassBuilderImpl(const Reflex::ClassBuilderImpl&); Reflex::ClassBuilderImplClassBuilderImpl(const char* nam, const type_info& ti, size_t size, unsigned int modifiers = 0, Reflex::TYPE typ = CLASS); Reflex::ClassBuilderImpl&operator=(const Reflex::ClassBuilderImpl&); voidSetSizeOf(size_t size); Reflex::TypeToType(). protected:. voidEnableCallback(bool enable = true). Data Members; private:. boolfCallbackEnabled; Reflex::Class*fClass; Reflex::MemberfLastMember; boolfNewClass. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ClassBuilderImpl(const char* nam, const type_info& ti, size_t size, unsigned int modifiers = 0, Reflex::TYPE typ",MatchSource.WIKI,root/html534/Reflex__ClassBuilderImpl.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__ClassBuilderImpl.html
https://root.cern/root/html534/Reflex__ClassBuilderImpl.html:790,Testability,stub,stubFP,790,"assBuilderImpl. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::ClassBuilderImpl. class Reflex::ClassBuilderImpl. Register an on demand builder with this class. Function Members (Methods); public:. virtual~ClassBuilderImpl(); voidAddBase(const Reflex::Type& bas, Reflex::OffsetFunction offsFP, unsigned int modifiers = 0); voidAddDataMember(const char* nam, const Reflex::Type& typ, size_t offs, unsigned int modifiers = 0); voidAddEnum(const char* nam, const char* values, const type_info* ti, unsigned int modifiers = 0); voidAddFunctionMember(const char* nam, const Reflex::Type& typ, Reflex::StubFunction stubFP, void* stubCtx = 0, const char* params = 0, unsigned int modifiers = 0); voidAddOnDemandDataMemberBuilder(Reflex::OnDemandBuilderForScope* odb); voidAddOnDemandFunctionMemberBuilder(Reflex::OnDemandBuilderForScope* odb); voidAddProperty(const char* key, Reflex::Any value); voidAddProperty(const char* key, const char* value); voidAddProperty(const char* key, const Reflex::Literal& value); voidAddTypedef(const Reflex::Type& typ, const char* def); Reflex::ClassBuilderImplClassBuilderImpl(Reflex::Class* cl); Reflex::ClassBuilderImplClassBuilderImpl(const Reflex::ClassBuilderImpl&); Reflex::ClassBuilderImplClassBuilderImpl(const char* nam, const type_info& ti, size_t size, unsigned int modifiers = 0, Reflex::TYPE typ = CLASS); Reflex::ClassBuilderImpl&operator=(const Reflex::ClassBuilderImpl&); voidSetSizeOf(size_t size); Reflex::TypeToType(). protected:. voidEnableCallback(bool enable = true). Data Members; private:. boolfCallbackEnabled; Reflex::Class*fClass; Reflex::MemberfLastMember; boolfNewClass. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ClassBuilderImpl(const char* nam, const type_info& ti, size_t size, unsigned int modifiers = 0, Reflex::TYPE typ",MatchSource.WIKI,root/html534/Reflex__ClassBuilderImpl.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__ClassBuilderImpl.html
https://root.cern/root/html534/Reflex__ClassBuilderImpl.html:804,Testability,stub,stubCtx,804,"assBuilderImpl. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::ClassBuilderImpl. class Reflex::ClassBuilderImpl. Register an on demand builder with this class. Function Members (Methods); public:. virtual~ClassBuilderImpl(); voidAddBase(const Reflex::Type& bas, Reflex::OffsetFunction offsFP, unsigned int modifiers = 0); voidAddDataMember(const char* nam, const Reflex::Type& typ, size_t offs, unsigned int modifiers = 0); voidAddEnum(const char* nam, const char* values, const type_info* ti, unsigned int modifiers = 0); voidAddFunctionMember(const char* nam, const Reflex::Type& typ, Reflex::StubFunction stubFP, void* stubCtx = 0, const char* params = 0, unsigned int modifiers = 0); voidAddOnDemandDataMemberBuilder(Reflex::OnDemandBuilderForScope* odb); voidAddOnDemandFunctionMemberBuilder(Reflex::OnDemandBuilderForScope* odb); voidAddProperty(const char* key, Reflex::Any value); voidAddProperty(const char* key, const char* value); voidAddProperty(const char* key, const Reflex::Literal& value); voidAddTypedef(const Reflex::Type& typ, const char* def); Reflex::ClassBuilderImplClassBuilderImpl(Reflex::Class* cl); Reflex::ClassBuilderImplClassBuilderImpl(const Reflex::ClassBuilderImpl&); Reflex::ClassBuilderImplClassBuilderImpl(const char* nam, const type_info& ti, size_t size, unsigned int modifiers = 0, Reflex::TYPE typ = CLASS); Reflex::ClassBuilderImpl&operator=(const Reflex::ClassBuilderImpl&); voidSetSizeOf(size_t size); Reflex::TypeToType(). protected:. voidEnableCallback(bool enable = true). Data Members; private:. boolfCallbackEnabled; Reflex::Class*fClass; Reflex::MemberfLastMember; boolfNewClass. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ClassBuilderImpl(const char* nam, const type_info& ti, size_t size, unsigned int modifiers = 0, Reflex::TYPE typ",MatchSource.WIKI,root/html534/Reflex__ClassBuilderImpl.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__ClassBuilderImpl.html
https://root.cern/root/html534/Reflex__ClassBuilderImpl.html:2480,Testability,Stub,StubFunction,2480,"size_t size); Reflex::TypeToType(). protected:. voidEnableCallback(bool enable = true). Data Members; private:. boolfCallbackEnabled; Reflex::Class*fClass; Reflex::MemberfLastMember; boolfNewClass. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ClassBuilderImpl(const char* nam, const type_info& ti, size_t size, unsigned int modifiers = 0, Reflex::TYPE typ = CLASS); constructor . ClassBuilderImpl(Class* cl). virtual ~ClassBuilderImpl(); destructor . void AddBase(const Reflex::Type& bas, Reflex::OffsetFunction offsFP, unsigned int modifiers = 0). * AddBase will add the information about one BaseAt class; * @param Name of the BaseAt class; * @param OffsetFP function pointer for Offset calculation; * @param modifiers the modifiers of the class. void AddFunctionMember(const char* nam, const Reflex::Type& typ, Reflex::StubFunction stubFP, void* stubCtx = 0, const char* params = 0, unsigned int modifiers = 0); AddDataMember will add the information about one data; * MemberAt of the class; *; * @param Name of the data MemberAt; * @param At of the data MemberAt; * @param Offset of the data MemberAt; * @param modifiers the modifiers of the data MemberAt. AddFunctionMember will add the information about one; * function MemberAt of the class; *; * @param Name of the function MemberAt; * @param At of the function MemberAt; * @param stubFP Stub function pointer for the function; * @param stubCxt Stub user context for the stub function; * @param params parameter names and default values (semi-colon separated); * @param modifiers the modifiers of the function MemberAt. void AddEnum(const char* nam, const char* values, const type_info* ti, unsigned int modifiers = 0); This is for anonymous union support.; void addUnion(const char* nam, const char* values, const std::type_info& ti, unsigned int modifiers = 0);; AddProperty will add a PropertyNth to the PropertyNth stack; * which will be emtpied with the next call of a builder; * class and a",MatchSource.WIKI,root/html534/Reflex__ClassBuilderImpl.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__ClassBuilderImpl.html
https://root.cern/root/html534/Reflex__ClassBuilderImpl.html:2493,Testability,stub,stubFP,2493,"size_t size); Reflex::TypeToType(). protected:. voidEnableCallback(bool enable = true). Data Members; private:. boolfCallbackEnabled; Reflex::Class*fClass; Reflex::MemberfLastMember; boolfNewClass. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ClassBuilderImpl(const char* nam, const type_info& ti, size_t size, unsigned int modifiers = 0, Reflex::TYPE typ = CLASS); constructor . ClassBuilderImpl(Class* cl). virtual ~ClassBuilderImpl(); destructor . void AddBase(const Reflex::Type& bas, Reflex::OffsetFunction offsFP, unsigned int modifiers = 0). * AddBase will add the information about one BaseAt class; * @param Name of the BaseAt class; * @param OffsetFP function pointer for Offset calculation; * @param modifiers the modifiers of the class. void AddFunctionMember(const char* nam, const Reflex::Type& typ, Reflex::StubFunction stubFP, void* stubCtx = 0, const char* params = 0, unsigned int modifiers = 0); AddDataMember will add the information about one data; * MemberAt of the class; *; * @param Name of the data MemberAt; * @param At of the data MemberAt; * @param Offset of the data MemberAt; * @param modifiers the modifiers of the data MemberAt. AddFunctionMember will add the information about one; * function MemberAt of the class; *; * @param Name of the function MemberAt; * @param At of the function MemberAt; * @param stubFP Stub function pointer for the function; * @param stubCxt Stub user context for the stub function; * @param params parameter names and default values (semi-colon separated); * @param modifiers the modifiers of the function MemberAt. void AddEnum(const char* nam, const char* values, const type_info* ti, unsigned int modifiers = 0); This is for anonymous union support.; void addUnion(const char* nam, const char* values, const std::type_info& ti, unsigned int modifiers = 0);; AddProperty will add a PropertyNth to the PropertyNth stack; * which will be emtpied with the next call of a builder; * class and a",MatchSource.WIKI,root/html534/Reflex__ClassBuilderImpl.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__ClassBuilderImpl.html
https://root.cern/root/html534/Reflex__ClassBuilderImpl.html:2507,Testability,stub,stubCtx,2507,"size_t size); Reflex::TypeToType(). protected:. voidEnableCallback(bool enable = true). Data Members; private:. boolfCallbackEnabled; Reflex::Class*fClass; Reflex::MemberfLastMember; boolfNewClass. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ClassBuilderImpl(const char* nam, const type_info& ti, size_t size, unsigned int modifiers = 0, Reflex::TYPE typ = CLASS); constructor . ClassBuilderImpl(Class* cl). virtual ~ClassBuilderImpl(); destructor . void AddBase(const Reflex::Type& bas, Reflex::OffsetFunction offsFP, unsigned int modifiers = 0). * AddBase will add the information about one BaseAt class; * @param Name of the BaseAt class; * @param OffsetFP function pointer for Offset calculation; * @param modifiers the modifiers of the class. void AddFunctionMember(const char* nam, const Reflex::Type& typ, Reflex::StubFunction stubFP, void* stubCtx = 0, const char* params = 0, unsigned int modifiers = 0); AddDataMember will add the information about one data; * MemberAt of the class; *; * @param Name of the data MemberAt; * @param At of the data MemberAt; * @param Offset of the data MemberAt; * @param modifiers the modifiers of the data MemberAt. AddFunctionMember will add the information about one; * function MemberAt of the class; *; * @param Name of the function MemberAt; * @param At of the function MemberAt; * @param stubFP Stub function pointer for the function; * @param stubCxt Stub user context for the stub function; * @param params parameter names and default values (semi-colon separated); * @param modifiers the modifiers of the function MemberAt. void AddEnum(const char* nam, const char* values, const type_info* ti, unsigned int modifiers = 0); This is for anonymous union support.; void addUnion(const char* nam, const char* values, const std::type_info& ti, unsigned int modifiers = 0);; AddProperty will add a PropertyNth to the PropertyNth stack; * which will be emtpied with the next call of a builder; * class and a",MatchSource.WIKI,root/html534/Reflex__ClassBuilderImpl.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__ClassBuilderImpl.html
https://root.cern/root/html534/Reflex__ClassBuilderImpl.html:2997,Testability,stub,stubFP,2997,"nstructor . ClassBuilderImpl(Class* cl). virtual ~ClassBuilderImpl(); destructor . void AddBase(const Reflex::Type& bas, Reflex::OffsetFunction offsFP, unsigned int modifiers = 0). * AddBase will add the information about one BaseAt class; * @param Name of the BaseAt class; * @param OffsetFP function pointer for Offset calculation; * @param modifiers the modifiers of the class. void AddFunctionMember(const char* nam, const Reflex::Type& typ, Reflex::StubFunction stubFP, void* stubCtx = 0, const char* params = 0, unsigned int modifiers = 0); AddDataMember will add the information about one data; * MemberAt of the class; *; * @param Name of the data MemberAt; * @param At of the data MemberAt; * @param Offset of the data MemberAt; * @param modifiers the modifiers of the data MemberAt. AddFunctionMember will add the information about one; * function MemberAt of the class; *; * @param Name of the function MemberAt; * @param At of the function MemberAt; * @param stubFP Stub function pointer for the function; * @param stubCxt Stub user context for the stub function; * @param params parameter names and default values (semi-colon separated); * @param modifiers the modifiers of the function MemberAt. void AddEnum(const char* nam, const char* values, const type_info* ti, unsigned int modifiers = 0); This is for anonymous union support.; void addUnion(const char* nam, const char* values, const std::type_info& ti, unsigned int modifiers = 0);; AddProperty will add a PropertyNth to the PropertyNth stack; * which will be emtpied with the next call of a builder; * class and attached to the item built with this call; *; * @param key the PropertyNth key; * @param value the value of the PropertyNth. void AddProperty(const char* key, const char* value); { AddProperty(key, (const char*)value); }. void AddOnDemandDataMemberBuilder(Reflex::OnDemandBuilderForScope* odb). * Register an on demand builder for data members with this class. void AddOnDemandFunctionMemberBuilder(Reflex::OnDemandB",MatchSource.WIKI,root/html534/Reflex__ClassBuilderImpl.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__ClassBuilderImpl.html
https://root.cern/root/html534/Reflex__ClassBuilderImpl.html:3004,Testability,Stub,Stub,3004,"nstructor . ClassBuilderImpl(Class* cl). virtual ~ClassBuilderImpl(); destructor . void AddBase(const Reflex::Type& bas, Reflex::OffsetFunction offsFP, unsigned int modifiers = 0). * AddBase will add the information about one BaseAt class; * @param Name of the BaseAt class; * @param OffsetFP function pointer for Offset calculation; * @param modifiers the modifiers of the class. void AddFunctionMember(const char* nam, const Reflex::Type& typ, Reflex::StubFunction stubFP, void* stubCtx = 0, const char* params = 0, unsigned int modifiers = 0); AddDataMember will add the information about one data; * MemberAt of the class; *; * @param Name of the data MemberAt; * @param At of the data MemberAt; * @param Offset of the data MemberAt; * @param modifiers the modifiers of the data MemberAt. AddFunctionMember will add the information about one; * function MemberAt of the class; *; * @param Name of the function MemberAt; * @param At of the function MemberAt; * @param stubFP Stub function pointer for the function; * @param stubCxt Stub user context for the stub function; * @param params parameter names and default values (semi-colon separated); * @param modifiers the modifiers of the function MemberAt. void AddEnum(const char* nam, const char* values, const type_info* ti, unsigned int modifiers = 0); This is for anonymous union support.; void addUnion(const char* nam, const char* values, const std::type_info& ti, unsigned int modifiers = 0);; AddProperty will add a PropertyNth to the PropertyNth stack; * which will be emtpied with the next call of a builder; * class and attached to the item built with this call; *; * @param key the PropertyNth key; * @param value the value of the PropertyNth. void AddProperty(const char* key, const char* value); { AddProperty(key, (const char*)value); }. void AddOnDemandDataMemberBuilder(Reflex::OnDemandBuilderForScope* odb). * Register an on demand builder for data members with this class. void AddOnDemandFunctionMemberBuilder(Reflex::OnDemandB",MatchSource.WIKI,root/html534/Reflex__ClassBuilderImpl.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__ClassBuilderImpl.html
https://root.cern/root/html534/Reflex__ClassBuilderImpl.html:3053,Testability,stub,stubCxt,3053,"nstructor . ClassBuilderImpl(Class* cl). virtual ~ClassBuilderImpl(); destructor . void AddBase(const Reflex::Type& bas, Reflex::OffsetFunction offsFP, unsigned int modifiers = 0). * AddBase will add the information about one BaseAt class; * @param Name of the BaseAt class; * @param OffsetFP function pointer for Offset calculation; * @param modifiers the modifiers of the class. void AddFunctionMember(const char* nam, const Reflex::Type& typ, Reflex::StubFunction stubFP, void* stubCtx = 0, const char* params = 0, unsigned int modifiers = 0); AddDataMember will add the information about one data; * MemberAt of the class; *; * @param Name of the data MemberAt; * @param At of the data MemberAt; * @param Offset of the data MemberAt; * @param modifiers the modifiers of the data MemberAt. AddFunctionMember will add the information about one; * function MemberAt of the class; *; * @param Name of the function MemberAt; * @param At of the function MemberAt; * @param stubFP Stub function pointer for the function; * @param stubCxt Stub user context for the stub function; * @param params parameter names and default values (semi-colon separated); * @param modifiers the modifiers of the function MemberAt. void AddEnum(const char* nam, const char* values, const type_info* ti, unsigned int modifiers = 0); This is for anonymous union support.; void addUnion(const char* nam, const char* values, const std::type_info& ti, unsigned int modifiers = 0);; AddProperty will add a PropertyNth to the PropertyNth stack; * which will be emtpied with the next call of a builder; * class and attached to the item built with this call; *; * @param key the PropertyNth key; * @param value the value of the PropertyNth. void AddProperty(const char* key, const char* value); { AddProperty(key, (const char*)value); }. void AddOnDemandDataMemberBuilder(Reflex::OnDemandBuilderForScope* odb). * Register an on demand builder for data members with this class. void AddOnDemandFunctionMemberBuilder(Reflex::OnDemandB",MatchSource.WIKI,root/html534/Reflex__ClassBuilderImpl.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__ClassBuilderImpl.html
https://root.cern/root/html534/Reflex__ClassBuilderImpl.html:3061,Testability,Stub,Stub,3061,"nstructor . ClassBuilderImpl(Class* cl). virtual ~ClassBuilderImpl(); destructor . void AddBase(const Reflex::Type& bas, Reflex::OffsetFunction offsFP, unsigned int modifiers = 0). * AddBase will add the information about one BaseAt class; * @param Name of the BaseAt class; * @param OffsetFP function pointer for Offset calculation; * @param modifiers the modifiers of the class. void AddFunctionMember(const char* nam, const Reflex::Type& typ, Reflex::StubFunction stubFP, void* stubCtx = 0, const char* params = 0, unsigned int modifiers = 0); AddDataMember will add the information about one data; * MemberAt of the class; *; * @param Name of the data MemberAt; * @param At of the data MemberAt; * @param Offset of the data MemberAt; * @param modifiers the modifiers of the data MemberAt. AddFunctionMember will add the information about one; * function MemberAt of the class; *; * @param Name of the function MemberAt; * @param At of the function MemberAt; * @param stubFP Stub function pointer for the function; * @param stubCxt Stub user context for the stub function; * @param params parameter names and default values (semi-colon separated); * @param modifiers the modifiers of the function MemberAt. void AddEnum(const char* nam, const char* values, const type_info* ti, unsigned int modifiers = 0); This is for anonymous union support.; void addUnion(const char* nam, const char* values, const std::type_info& ti, unsigned int modifiers = 0);; AddProperty will add a PropertyNth to the PropertyNth stack; * which will be emtpied with the next call of a builder; * class and attached to the item built with this call; *; * @param key the PropertyNth key; * @param value the value of the PropertyNth. void AddProperty(const char* key, const char* value); { AddProperty(key, (const char*)value); }. void AddOnDemandDataMemberBuilder(Reflex::OnDemandBuilderForScope* odb). * Register an on demand builder for data members with this class. void AddOnDemandFunctionMemberBuilder(Reflex::OnDemandB",MatchSource.WIKI,root/html534/Reflex__ClassBuilderImpl.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__ClassBuilderImpl.html
https://root.cern/root/html534/Reflex__ClassBuilderImpl.html:3087,Testability,stub,stub,3087,"nstructor . ClassBuilderImpl(Class* cl). virtual ~ClassBuilderImpl(); destructor . void AddBase(const Reflex::Type& bas, Reflex::OffsetFunction offsFP, unsigned int modifiers = 0). * AddBase will add the information about one BaseAt class; * @param Name of the BaseAt class; * @param OffsetFP function pointer for Offset calculation; * @param modifiers the modifiers of the class. void AddFunctionMember(const char* nam, const Reflex::Type& typ, Reflex::StubFunction stubFP, void* stubCtx = 0, const char* params = 0, unsigned int modifiers = 0); AddDataMember will add the information about one data; * MemberAt of the class; *; * @param Name of the data MemberAt; * @param At of the data MemberAt; * @param Offset of the data MemberAt; * @param modifiers the modifiers of the data MemberAt. AddFunctionMember will add the information about one; * function MemberAt of the class; *; * @param Name of the function MemberAt; * @param At of the function MemberAt; * @param stubFP Stub function pointer for the function; * @param stubCxt Stub user context for the stub function; * @param params parameter names and default values (semi-colon separated); * @param modifiers the modifiers of the function MemberAt. void AddEnum(const char* nam, const char* values, const type_info* ti, unsigned int modifiers = 0); This is for anonymous union support.; void addUnion(const char* nam, const char* values, const std::type_info& ti, unsigned int modifiers = 0);; AddProperty will add a PropertyNth to the PropertyNth stack; * which will be emtpied with the next call of a builder; * class and attached to the item built with this call; *; * @param key the PropertyNth key; * @param value the value of the PropertyNth. void AddProperty(const char* key, const char* value); { AddProperty(key, (const char*)value); }. void AddOnDemandDataMemberBuilder(Reflex::OnDemandBuilderForScope* odb). * Register an on demand builder for data members with this class. void AddOnDemandFunctionMemberBuilder(Reflex::OnDemandB",MatchSource.WIKI,root/html534/Reflex__ClassBuilderImpl.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__ClassBuilderImpl.html
https://root.cern/root/html534/Reflex__CollFuncTable.html:868,Modifiability,Inherit,Inheritance,868,. Reflex::CollFuncTable. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::CollFuncTable. class Reflex::CollFuncTable. Function Members (Methods); public:. ~CollFuncTable(); Reflex::CollFuncTableCollFuncTable(); Reflex::CollFuncTableCollFuncTable(const Reflex::CollFuncTable&); Reflex::CollFuncTable&operator=(const Reflex::CollFuncTable&). Data Members; public:. voidclear_func; voidcollect_func; voidconstruct_func; voidcreate_env; voiddestruct_func; voidfCopyIterator; voidfCreateIterators; voidfDeleteSingleIterator; voidfDeleteTwoIterators; voidfNext; voidfeed_func; voidfirst_func; size_titer_size; voidnext_func; voidresize_func; voidsize_func; size_tvalue_diff; intvalue_offset. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ,MatchSource.WIKI,root/html534/Reflex__CollFuncTable.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__CollFuncTable.html
https://root.cern/root/html534/Reflex__CollFuncTable.html:881,Modifiability,Inherit,Inherited,881,. Reflex::CollFuncTable. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::CollFuncTable. class Reflex::CollFuncTable. Function Members (Methods); public:. ~CollFuncTable(); Reflex::CollFuncTableCollFuncTable(); Reflex::CollFuncTableCollFuncTable(const Reflex::CollFuncTable&); Reflex::CollFuncTable&operator=(const Reflex::CollFuncTable&). Data Members; public:. voidclear_func; voidcollect_func; voidconstruct_func; voidcreate_env; voiddestruct_func; voidfCopyIterator; voidfCreateIterators; voidfDeleteSingleIterator; voidfDeleteTwoIterators; voidfNext; voidfeed_func; voidfirst_func; size_titer_size; voidnext_func; voidresize_func; voidsize_func; size_tvalue_diff; intvalue_offset. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ,MatchSource.WIKI,root/html534/Reflex__CollFuncTable.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__CollFuncTable.html
https://root.cern/root/html534/Reflex__EnumBuilder.html:861,Modifiability,Inherit,Inheritance,861,". Reflex::EnumBuilder. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::EnumBuilder. class Reflex::EnumBuilder. Function Members (Methods); public:. virtual~EnumBuilder(); Reflex::EnumBuilder&AddItem(const char* nam, long value); Reflex::EnumBuilder&AddProperty(const char* key, Reflex::Any value); Reflex::EnumBuilder&AddProperty(const char* key, const char* value); Reflex::EnumBuilderEnumBuilder(const Reflex::EnumBuilder&); Reflex::EnumBuilderEnumBuilder(const char* name, const type_info& ti, unsigned int modifiers = 0); Reflex::EnumBuilder&operator=(const Reflex::EnumBuilder&); Reflex::TypeToType(). Data Members; private:. Reflex::Enum*fEnum; Reflex::MemberfLastMember. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; EnumBuilder(const char* name, const type_info& ti, unsigned int modifiers = 0); constructor . EnumBuilder& AddItem(const char* nam, long value); destructor . * AddProperty will add a PropertyNth to the PropertyNth stack; * which will be emptied with the next enum / item build; * @param key the PropertyNth key; * @param value the value of the PropertyNth; * @return a reference to the building class. EnumBuilder& AddProperty(const char* key, const char* value). * AddProperty will add a PropertyNth; * @param key the PropertyNth key; * @param value the value of the PropertyNth. * AddProperty will add a PropertyNth; * @param key the PropertyNth key; * @param value the value of the PropertyNth. EnumBuilderT& AddProperty(const char* key, Reflex::Any value). * AddProperty will add a PropertyNth to the PropertyNth stack; * which will be emptied with the next enum / item build; * @param key the PropertyNth key; * @param value the value of the PropertyNth; * @return a reference to the building class. > ToType(). » Last changed: root/reflex:$Id$ » Last genera",MatchSource.WIKI,root/html534/Reflex__EnumBuilder.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__EnumBuilder.html
https://root.cern/root/html534/Reflex__EnumBuilder.html:874,Modifiability,Inherit,Inherited,874,". Reflex::EnumBuilder. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::EnumBuilder. class Reflex::EnumBuilder. Function Members (Methods); public:. virtual~EnumBuilder(); Reflex::EnumBuilder&AddItem(const char* nam, long value); Reflex::EnumBuilder&AddProperty(const char* key, Reflex::Any value); Reflex::EnumBuilder&AddProperty(const char* key, const char* value); Reflex::EnumBuilderEnumBuilder(const Reflex::EnumBuilder&); Reflex::EnumBuilderEnumBuilder(const char* name, const type_info& ti, unsigned int modifiers = 0); Reflex::EnumBuilder&operator=(const Reflex::EnumBuilder&); Reflex::TypeToType(). Data Members; private:. Reflex::Enum*fEnum; Reflex::MemberfLastMember. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; EnumBuilder(const char* name, const type_info& ti, unsigned int modifiers = 0); constructor . EnumBuilder& AddItem(const char* nam, long value); destructor . * AddProperty will add a PropertyNth to the PropertyNth stack; * which will be emptied with the next enum / item build; * @param key the PropertyNth key; * @param value the value of the PropertyNth; * @return a reference to the building class. EnumBuilder& AddProperty(const char* key, const char* value). * AddProperty will add a PropertyNth; * @param key the PropertyNth key; * @param value the value of the PropertyNth. * AddProperty will add a PropertyNth; * @param key the PropertyNth key; * @param value the value of the PropertyNth. EnumBuilderT& AddProperty(const char* key, Reflex::Any value). * AddProperty will add a PropertyNth to the PropertyNth stack; * which will be emptied with the next enum / item build; * @param key the PropertyNth key; * @param value the value of the PropertyNth; * @return a reference to the building class. > ToType(). » Last changed: root/reflex:$Id$ » Last genera",MatchSource.WIKI,root/html534/Reflex__EnumBuilder.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__EnumBuilder.html
https://root.cern/root/html534/Reflex__FunctionBuilder.html:901,Modifiability,Inherit,Inheritance,901,". Reflex::FunctionBuilder. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::FunctionBuilder. class Reflex::FunctionBuilder. Function Members (Methods); public:. virtual~FunctionBuilder(); Reflex::FunctionBuilder&AddProperty(const char* key, Reflex::Any value); Reflex::FunctionBuilder&AddProperty(const char* key, const char* value); Reflex::FunctionBuilderFunctionBuilder(const Reflex::FunctionBuilder&); Reflex::FunctionBuilderFunctionBuilder(const Reflex::Type& typ, const char* nam, Reflex::StubFunction stubFP, void* stubCtx, const char* params, unsigned char modifiers); Reflex::FunctionBuilder&operator=(const Reflex::FunctionBuilder&); Reflex::MemberToMember(). Data Members; private:. Reflex::MemberfFunction. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; FunctionBuilder(const Reflex::Type& typ, const char* nam, Reflex::StubFunction stubFP, void* stubCtx, const char* params, unsigned char modifiers); constructor . FunctionBuilder& AddProperty(const char* key, Any value); destructor ; AddProperty will add a property; * @param key the property key; * @param value the value of the property; * @return a reference to the building class. Member ToMember(). * ToMember will return the member currently being built; * @return member currently being built. void AddProperty(const char* key, Any value); AddProperty will add a property; * @param key the property key; * @param value the value of the property; * @return a reference to the building class. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/Reflex__FunctionBuilder.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__FunctionBuilder.html
https://root.cern/root/html534/Reflex__FunctionBuilder.html:914,Modifiability,Inherit,Inherited,914,". Reflex::FunctionBuilder. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::FunctionBuilder. class Reflex::FunctionBuilder. Function Members (Methods); public:. virtual~FunctionBuilder(); Reflex::FunctionBuilder&AddProperty(const char* key, Reflex::Any value); Reflex::FunctionBuilder&AddProperty(const char* key, const char* value); Reflex::FunctionBuilderFunctionBuilder(const Reflex::FunctionBuilder&); Reflex::FunctionBuilderFunctionBuilder(const Reflex::Type& typ, const char* nam, Reflex::StubFunction stubFP, void* stubCtx, const char* params, unsigned char modifiers); Reflex::FunctionBuilder&operator=(const Reflex::FunctionBuilder&); Reflex::MemberToMember(). Data Members; private:. Reflex::MemberfFunction. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; FunctionBuilder(const Reflex::Type& typ, const char* nam, Reflex::StubFunction stubFP, void* stubCtx, const char* params, unsigned char modifiers); constructor . FunctionBuilder& AddProperty(const char* key, Any value); destructor ; AddProperty will add a property; * @param key the property key; * @param value the value of the property; * @return a reference to the building class. Member ToMember(). * ToMember will return the member currently being built; * @return member currently being built. void AddProperty(const char* key, Any value); AddProperty will add a property; * @param key the property key; * @param value the value of the property; * @return a reference to the building class. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/Reflex__FunctionBuilder.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__FunctionBuilder.html
https://root.cern/root/html534/Reflex__FunctionBuilder.html:663,Testability,Stub,StubFunction,663,". Reflex::FunctionBuilder. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::FunctionBuilder. class Reflex::FunctionBuilder. Function Members (Methods); public:. virtual~FunctionBuilder(); Reflex::FunctionBuilder&AddProperty(const char* key, Reflex::Any value); Reflex::FunctionBuilder&AddProperty(const char* key, const char* value); Reflex::FunctionBuilderFunctionBuilder(const Reflex::FunctionBuilder&); Reflex::FunctionBuilderFunctionBuilder(const Reflex::Type& typ, const char* nam, Reflex::StubFunction stubFP, void* stubCtx, const char* params, unsigned char modifiers); Reflex::FunctionBuilder&operator=(const Reflex::FunctionBuilder&); Reflex::MemberToMember(). Data Members; private:. Reflex::MemberfFunction. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; FunctionBuilder(const Reflex::Type& typ, const char* nam, Reflex::StubFunction stubFP, void* stubCtx, const char* params, unsigned char modifiers); constructor . FunctionBuilder& AddProperty(const char* key, Any value); destructor ; AddProperty will add a property; * @param key the property key; * @param value the value of the property; * @return a reference to the building class. Member ToMember(). * ToMember will return the member currently being built; * @return member currently being built. void AddProperty(const char* key, Any value); AddProperty will add a property; * @param key the property key; * @param value the value of the property; * @return a reference to the building class. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/Reflex__FunctionBuilder.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__FunctionBuilder.html
https://root.cern/root/html534/Reflex__FunctionBuilder.html:676,Testability,stub,stubFP,676,". Reflex::FunctionBuilder. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::FunctionBuilder. class Reflex::FunctionBuilder. Function Members (Methods); public:. virtual~FunctionBuilder(); Reflex::FunctionBuilder&AddProperty(const char* key, Reflex::Any value); Reflex::FunctionBuilder&AddProperty(const char* key, const char* value); Reflex::FunctionBuilderFunctionBuilder(const Reflex::FunctionBuilder&); Reflex::FunctionBuilderFunctionBuilder(const Reflex::Type& typ, const char* nam, Reflex::StubFunction stubFP, void* stubCtx, const char* params, unsigned char modifiers); Reflex::FunctionBuilder&operator=(const Reflex::FunctionBuilder&); Reflex::MemberToMember(). Data Members; private:. Reflex::MemberfFunction. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; FunctionBuilder(const Reflex::Type& typ, const char* nam, Reflex::StubFunction stubFP, void* stubCtx, const char* params, unsigned char modifiers); constructor . FunctionBuilder& AddProperty(const char* key, Any value); destructor ; AddProperty will add a property; * @param key the property key; * @param value the value of the property; * @return a reference to the building class. Member ToMember(). * ToMember will return the member currently being built; * @return member currently being built. void AddProperty(const char* key, Any value); AddProperty will add a property; * @param key the property key; * @param value the value of the property; * @return a reference to the building class. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/Reflex__FunctionBuilder.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__FunctionBuilder.html
https://root.cern/root/html534/Reflex__FunctionBuilder.html:690,Testability,stub,stubCtx,690,". Reflex::FunctionBuilder. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::FunctionBuilder. class Reflex::FunctionBuilder. Function Members (Methods); public:. virtual~FunctionBuilder(); Reflex::FunctionBuilder&AddProperty(const char* key, Reflex::Any value); Reflex::FunctionBuilder&AddProperty(const char* key, const char* value); Reflex::FunctionBuilderFunctionBuilder(const Reflex::FunctionBuilder&); Reflex::FunctionBuilderFunctionBuilder(const Reflex::Type& typ, const char* nam, Reflex::StubFunction stubFP, void* stubCtx, const char* params, unsigned char modifiers); Reflex::FunctionBuilder&operator=(const Reflex::FunctionBuilder&); Reflex::MemberToMember(). Data Members; private:. Reflex::MemberfFunction. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; FunctionBuilder(const Reflex::Type& typ, const char* nam, Reflex::StubFunction stubFP, void* stubCtx, const char* params, unsigned char modifiers); constructor . FunctionBuilder& AddProperty(const char* key, Any value); destructor ; AddProperty will add a property; * @param key the property key; * @param value the value of the property; * @return a reference to the building class. Member ToMember(). * ToMember will return the member currently being built; * @return member currently being built. void AddProperty(const char* key, Any value); AddProperty will add a property; * @param key the property key; * @param value the value of the property; * @return a reference to the building class. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/Reflex__FunctionBuilder.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__FunctionBuilder.html
https://root.cern/root/html534/Reflex__FunctionBuilder.html:1044,Testability,Stub,StubFunction,1044,". Reflex::FunctionBuilder. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::FunctionBuilder. class Reflex::FunctionBuilder. Function Members (Methods); public:. virtual~FunctionBuilder(); Reflex::FunctionBuilder&AddProperty(const char* key, Reflex::Any value); Reflex::FunctionBuilder&AddProperty(const char* key, const char* value); Reflex::FunctionBuilderFunctionBuilder(const Reflex::FunctionBuilder&); Reflex::FunctionBuilderFunctionBuilder(const Reflex::Type& typ, const char* nam, Reflex::StubFunction stubFP, void* stubCtx, const char* params, unsigned char modifiers); Reflex::FunctionBuilder&operator=(const Reflex::FunctionBuilder&); Reflex::MemberToMember(). Data Members; private:. Reflex::MemberfFunction. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; FunctionBuilder(const Reflex::Type& typ, const char* nam, Reflex::StubFunction stubFP, void* stubCtx, const char* params, unsigned char modifiers); constructor . FunctionBuilder& AddProperty(const char* key, Any value); destructor ; AddProperty will add a property; * @param key the property key; * @param value the value of the property; * @return a reference to the building class. Member ToMember(). * ToMember will return the member currently being built; * @return member currently being built. void AddProperty(const char* key, Any value); AddProperty will add a property; * @param key the property key; * @param value the value of the property; * @return a reference to the building class. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/Reflex__FunctionBuilder.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__FunctionBuilder.html
https://root.cern/root/html534/Reflex__FunctionBuilder.html:1057,Testability,stub,stubFP,1057,". Reflex::FunctionBuilder. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::FunctionBuilder. class Reflex::FunctionBuilder. Function Members (Methods); public:. virtual~FunctionBuilder(); Reflex::FunctionBuilder&AddProperty(const char* key, Reflex::Any value); Reflex::FunctionBuilder&AddProperty(const char* key, const char* value); Reflex::FunctionBuilderFunctionBuilder(const Reflex::FunctionBuilder&); Reflex::FunctionBuilderFunctionBuilder(const Reflex::Type& typ, const char* nam, Reflex::StubFunction stubFP, void* stubCtx, const char* params, unsigned char modifiers); Reflex::FunctionBuilder&operator=(const Reflex::FunctionBuilder&); Reflex::MemberToMember(). Data Members; private:. Reflex::MemberfFunction. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; FunctionBuilder(const Reflex::Type& typ, const char* nam, Reflex::StubFunction stubFP, void* stubCtx, const char* params, unsigned char modifiers); constructor . FunctionBuilder& AddProperty(const char* key, Any value); destructor ; AddProperty will add a property; * @param key the property key; * @param value the value of the property; * @return a reference to the building class. Member ToMember(). * ToMember will return the member currently being built; * @return member currently being built. void AddProperty(const char* key, Any value); AddProperty will add a property; * @param key the property key; * @param value the value of the property; * @return a reference to the building class. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/Reflex__FunctionBuilder.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__FunctionBuilder.html
https://root.cern/root/html534/Reflex__FunctionBuilder.html:1071,Testability,stub,stubCtx,1071,". Reflex::FunctionBuilder. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::FunctionBuilder. class Reflex::FunctionBuilder. Function Members (Methods); public:. virtual~FunctionBuilder(); Reflex::FunctionBuilder&AddProperty(const char* key, Reflex::Any value); Reflex::FunctionBuilder&AddProperty(const char* key, const char* value); Reflex::FunctionBuilderFunctionBuilder(const Reflex::FunctionBuilder&); Reflex::FunctionBuilderFunctionBuilder(const Reflex::Type& typ, const char* nam, Reflex::StubFunction stubFP, void* stubCtx, const char* params, unsigned char modifiers); Reflex::FunctionBuilder&operator=(const Reflex::FunctionBuilder&); Reflex::MemberToMember(). Data Members; private:. Reflex::MemberfFunction. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; FunctionBuilder(const Reflex::Type& typ, const char* nam, Reflex::StubFunction stubFP, void* stubCtx, const char* params, unsigned char modifiers); constructor . FunctionBuilder& AddProperty(const char* key, Any value); destructor ; AddProperty will add a property; * @param key the property key; * @param value the value of the property; * @return a reference to the building class. Member ToMember(). * ToMember will return the member currently being built; * @return member currently being built. void AddProperty(const char* key, Any value); AddProperty will add a property; * @param key the property key; * @param value the value of the property; * @return a reference to the building class. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/Reflex__FunctionBuilder.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__FunctionBuilder.html
https://root.cern/root/html534/Reflex__FunctionBuilderImpl.html:902,Modifiability,Inherit,Inheritance,902,". Reflex::FunctionBuilderImpl. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::FunctionBuilderImpl. class Reflex::FunctionBuilderImpl. Function Members (Methods); public:. ~FunctionBuilderImpl(); voidAddProperty(const char* key, Reflex::Any value); voidAddProperty(const char* key, const char* value); Reflex::FunctionBuilderImplFunctionBuilderImpl(const Reflex::FunctionBuilderImpl&); Reflex::FunctionBuilderImplFunctionBuilderImpl(const char* nam, const Reflex::Type& typ, Reflex::StubFunction stubFP, void* stubCtx, const char* params, unsigned char modifiers = 0); Reflex::FunctionBuilderImpl&operator=(const Reflex::FunctionBuilderImpl&); Reflex::MemberToMember(). Data Members; private:. Reflex::MemberfFunction. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; FunctionBuilder& AddProperty(const char* key, Any value); AddProperty will add a property; * @param key the property key; * @param value the value of the property; * @return a reference to the building class. Member ToMember(). * ToMember will return the member currently being built; * @return member currently being built. FunctionBuilderImpl(const char* nam, const Reflex::Type& typ, Reflex::StubFunction stubFP, void* stubCtx, const char* params, unsigned char modifiers = 0); constructor . void AddProperty(const char* key, Any value); destructor ; AddProperty will add a property; * @param key the property key; * @param value the value of the property; * @return a reference to the building class. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/Reflex__FunctionBuilderImpl.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__FunctionBuilderImpl.html
https://root.cern/root/html534/Reflex__FunctionBuilderImpl.html:915,Modifiability,Inherit,Inherited,915,". Reflex::FunctionBuilderImpl. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::FunctionBuilderImpl. class Reflex::FunctionBuilderImpl. Function Members (Methods); public:. ~FunctionBuilderImpl(); voidAddProperty(const char* key, Reflex::Any value); voidAddProperty(const char* key, const char* value); Reflex::FunctionBuilderImplFunctionBuilderImpl(const Reflex::FunctionBuilderImpl&); Reflex::FunctionBuilderImplFunctionBuilderImpl(const char* nam, const Reflex::Type& typ, Reflex::StubFunction stubFP, void* stubCtx, const char* params, unsigned char modifiers = 0); Reflex::FunctionBuilderImpl&operator=(const Reflex::FunctionBuilderImpl&); Reflex::MemberToMember(). Data Members; private:. Reflex::MemberfFunction. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; FunctionBuilder& AddProperty(const char* key, Any value); AddProperty will add a property; * @param key the property key; * @param value the value of the property; * @return a reference to the building class. Member ToMember(). * ToMember will return the member currently being built; * @return member currently being built. FunctionBuilderImpl(const char* nam, const Reflex::Type& typ, Reflex::StubFunction stubFP, void* stubCtx, const char* params, unsigned char modifiers = 0); constructor . void AddProperty(const char* key, Any value); destructor ; AddProperty will add a property; * @param key the property key; * @param value the value of the property; * @return a reference to the building class. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/Reflex__FunctionBuilderImpl.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__FunctionBuilderImpl.html
https://root.cern/root/html534/Reflex__FunctionBuilderImpl.html:652,Testability,Stub,StubFunction,652,". Reflex::FunctionBuilderImpl. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::FunctionBuilderImpl. class Reflex::FunctionBuilderImpl. Function Members (Methods); public:. ~FunctionBuilderImpl(); voidAddProperty(const char* key, Reflex::Any value); voidAddProperty(const char* key, const char* value); Reflex::FunctionBuilderImplFunctionBuilderImpl(const Reflex::FunctionBuilderImpl&); Reflex::FunctionBuilderImplFunctionBuilderImpl(const char* nam, const Reflex::Type& typ, Reflex::StubFunction stubFP, void* stubCtx, const char* params, unsigned char modifiers = 0); Reflex::FunctionBuilderImpl&operator=(const Reflex::FunctionBuilderImpl&); Reflex::MemberToMember(). Data Members; private:. Reflex::MemberfFunction. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; FunctionBuilder& AddProperty(const char* key, Any value); AddProperty will add a property; * @param key the property key; * @param value the value of the property; * @return a reference to the building class. Member ToMember(). * ToMember will return the member currently being built; * @return member currently being built. FunctionBuilderImpl(const char* nam, const Reflex::Type& typ, Reflex::StubFunction stubFP, void* stubCtx, const char* params, unsigned char modifiers = 0); constructor . void AddProperty(const char* key, Any value); destructor ; AddProperty will add a property; * @param key the property key; * @param value the value of the property; * @return a reference to the building class. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/Reflex__FunctionBuilderImpl.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__FunctionBuilderImpl.html
https://root.cern/root/html534/Reflex__FunctionBuilderImpl.html:665,Testability,stub,stubFP,665,". Reflex::FunctionBuilderImpl. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::FunctionBuilderImpl. class Reflex::FunctionBuilderImpl. Function Members (Methods); public:. ~FunctionBuilderImpl(); voidAddProperty(const char* key, Reflex::Any value); voidAddProperty(const char* key, const char* value); Reflex::FunctionBuilderImplFunctionBuilderImpl(const Reflex::FunctionBuilderImpl&); Reflex::FunctionBuilderImplFunctionBuilderImpl(const char* nam, const Reflex::Type& typ, Reflex::StubFunction stubFP, void* stubCtx, const char* params, unsigned char modifiers = 0); Reflex::FunctionBuilderImpl&operator=(const Reflex::FunctionBuilderImpl&); Reflex::MemberToMember(). Data Members; private:. Reflex::MemberfFunction. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; FunctionBuilder& AddProperty(const char* key, Any value); AddProperty will add a property; * @param key the property key; * @param value the value of the property; * @return a reference to the building class. Member ToMember(). * ToMember will return the member currently being built; * @return member currently being built. FunctionBuilderImpl(const char* nam, const Reflex::Type& typ, Reflex::StubFunction stubFP, void* stubCtx, const char* params, unsigned char modifiers = 0); constructor . void AddProperty(const char* key, Any value); destructor ; AddProperty will add a property; * @param key the property key; * @param value the value of the property; * @return a reference to the building class. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/Reflex__FunctionBuilderImpl.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__FunctionBuilderImpl.html
https://root.cern/root/html534/Reflex__FunctionBuilderImpl.html:679,Testability,stub,stubCtx,679,". Reflex::FunctionBuilderImpl. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::FunctionBuilderImpl. class Reflex::FunctionBuilderImpl. Function Members (Methods); public:. ~FunctionBuilderImpl(); voidAddProperty(const char* key, Reflex::Any value); voidAddProperty(const char* key, const char* value); Reflex::FunctionBuilderImplFunctionBuilderImpl(const Reflex::FunctionBuilderImpl&); Reflex::FunctionBuilderImplFunctionBuilderImpl(const char* nam, const Reflex::Type& typ, Reflex::StubFunction stubFP, void* stubCtx, const char* params, unsigned char modifiers = 0); Reflex::FunctionBuilderImpl&operator=(const Reflex::FunctionBuilderImpl&); Reflex::MemberToMember(). Data Members; private:. Reflex::MemberfFunction. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; FunctionBuilder& AddProperty(const char* key, Any value); AddProperty will add a property; * @param key the property key; * @param value the value of the property; * @return a reference to the building class. Member ToMember(). * ToMember will return the member currently being built; * @return member currently being built. FunctionBuilderImpl(const char* nam, const Reflex::Type& typ, Reflex::StubFunction stubFP, void* stubCtx, const char* params, unsigned char modifiers = 0); constructor . void AddProperty(const char* key, Any value); destructor ; AddProperty will add a property; * @param key the property key; * @param value the value of the property; * @return a reference to the building class. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/Reflex__FunctionBuilderImpl.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__FunctionBuilderImpl.html
https://root.cern/root/html534/Reflex__FunctionBuilderImpl.html:1374,Testability,Stub,StubFunction,1374,". Reflex::FunctionBuilderImpl. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::FunctionBuilderImpl. class Reflex::FunctionBuilderImpl. Function Members (Methods); public:. ~FunctionBuilderImpl(); voidAddProperty(const char* key, Reflex::Any value); voidAddProperty(const char* key, const char* value); Reflex::FunctionBuilderImplFunctionBuilderImpl(const Reflex::FunctionBuilderImpl&); Reflex::FunctionBuilderImplFunctionBuilderImpl(const char* nam, const Reflex::Type& typ, Reflex::StubFunction stubFP, void* stubCtx, const char* params, unsigned char modifiers = 0); Reflex::FunctionBuilderImpl&operator=(const Reflex::FunctionBuilderImpl&); Reflex::MemberToMember(). Data Members; private:. Reflex::MemberfFunction. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; FunctionBuilder& AddProperty(const char* key, Any value); AddProperty will add a property; * @param key the property key; * @param value the value of the property; * @return a reference to the building class. Member ToMember(). * ToMember will return the member currently being built; * @return member currently being built. FunctionBuilderImpl(const char* nam, const Reflex::Type& typ, Reflex::StubFunction stubFP, void* stubCtx, const char* params, unsigned char modifiers = 0); constructor . void AddProperty(const char* key, Any value); destructor ; AddProperty will add a property; * @param key the property key; * @param value the value of the property; * @return a reference to the building class. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/Reflex__FunctionBuilderImpl.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__FunctionBuilderImpl.html
https://root.cern/root/html534/Reflex__FunctionBuilderImpl.html:1387,Testability,stub,stubFP,1387,". Reflex::FunctionBuilderImpl. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::FunctionBuilderImpl. class Reflex::FunctionBuilderImpl. Function Members (Methods); public:. ~FunctionBuilderImpl(); voidAddProperty(const char* key, Reflex::Any value); voidAddProperty(const char* key, const char* value); Reflex::FunctionBuilderImplFunctionBuilderImpl(const Reflex::FunctionBuilderImpl&); Reflex::FunctionBuilderImplFunctionBuilderImpl(const char* nam, const Reflex::Type& typ, Reflex::StubFunction stubFP, void* stubCtx, const char* params, unsigned char modifiers = 0); Reflex::FunctionBuilderImpl&operator=(const Reflex::FunctionBuilderImpl&); Reflex::MemberToMember(). Data Members; private:. Reflex::MemberfFunction. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; FunctionBuilder& AddProperty(const char* key, Any value); AddProperty will add a property; * @param key the property key; * @param value the value of the property; * @return a reference to the building class. Member ToMember(). * ToMember will return the member currently being built; * @return member currently being built. FunctionBuilderImpl(const char* nam, const Reflex::Type& typ, Reflex::StubFunction stubFP, void* stubCtx, const char* params, unsigned char modifiers = 0); constructor . void AddProperty(const char* key, Any value); destructor ; AddProperty will add a property; * @param key the property key; * @param value the value of the property; * @return a reference to the building class. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/Reflex__FunctionBuilderImpl.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__FunctionBuilderImpl.html
https://root.cern/root/html534/Reflex__FunctionBuilderImpl.html:1401,Testability,stub,stubCtx,1401,". Reflex::FunctionBuilderImpl. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::FunctionBuilderImpl. class Reflex::FunctionBuilderImpl. Function Members (Methods); public:. ~FunctionBuilderImpl(); voidAddProperty(const char* key, Reflex::Any value); voidAddProperty(const char* key, const char* value); Reflex::FunctionBuilderImplFunctionBuilderImpl(const Reflex::FunctionBuilderImpl&); Reflex::FunctionBuilderImplFunctionBuilderImpl(const char* nam, const Reflex::Type& typ, Reflex::StubFunction stubFP, void* stubCtx, const char* params, unsigned char modifiers = 0); Reflex::FunctionBuilderImpl&operator=(const Reflex::FunctionBuilderImpl&); Reflex::MemberToMember(). Data Members; private:. Reflex::MemberfFunction. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; FunctionBuilder& AddProperty(const char* key, Any value); AddProperty will add a property; * @param key the property key; * @param value the value of the property; * @return a reference to the building class. Member ToMember(). * ToMember will return the member currently being built; * @return member currently being built. FunctionBuilderImpl(const char* nam, const Reflex::Type& typ, Reflex::StubFunction stubFP, void* stubCtx, const char* params, unsigned char modifiers = 0); constructor . void AddProperty(const char* key, Any value); destructor ; AddProperty will add a property; * @param key the property key; * @param value the value of the property; * @return a reference to the building class. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/Reflex__FunctionBuilderImpl.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__FunctionBuilderImpl.html
https://root.cern/root/html534/Reflex__ICallback.html:408,Availability,avail,available,408,". Reflex::ICallback. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::ICallback. class Reflex::ICallback. Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. virtual~ICallback(); virtual voidoperator()(const Reflex::Type&); virtual voidoperator()(const Reflex::Member&); Reflex::ICallback&operator=(const Reflex::ICallback&). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; virtual ~ICallback(); destructor . {}. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/Reflex__ICallback.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__ICallback.html
https://root.cern/root/html534/Reflex__ICallback.html:624,Modifiability,Inherit,Inheritance,624,". Reflex::ICallback. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::ICallback. class Reflex::ICallback. Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. virtual~ICallback(); virtual voidoperator()(const Reflex::Type&); virtual voidoperator()(const Reflex::Member&); Reflex::ICallback&operator=(const Reflex::ICallback&). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; virtual ~ICallback(); destructor . {}. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/Reflex__ICallback.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__ICallback.html
https://root.cern/root/html534/Reflex__ICallback.html:637,Modifiability,Inherit,Inherited,637,". Reflex::ICallback. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::ICallback. class Reflex::ICallback. Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. virtual~ICallback(); virtual voidoperator()(const Reflex::Type&); virtual voidoperator()(const Reflex::Member&); Reflex::ICallback&operator=(const Reflex::ICallback&). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; virtual ~ICallback(); destructor . {}. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/Reflex__ICallback.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__ICallback.html
https://root.cern/root/html534/Reflex__Instance.html:908,Modifiability,Inherit,Inheritance,908,. Reflex::Instance. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::Instance. class Reflex::Instance. Function Members (Methods); public:. ~Instance(); static boolHasShutdown(); Reflex::InstanceInstance(); Reflex::InstanceInstance(const Reflex::Instance&); Reflex::Instance&operator=(const Reflex::Instance&); voidShutdown(); static Reflex::Instance::EStateState(). private:. static Reflex::Instance&CreateReflexInstance(); Reflex::InstanceInstance(Reflex::Instance* createSingleton). Data Members; public:. enum EState { kUninitialized; kInitializing; kActive; kTearingDown; kHasShutDown; kNumStates; };. private:. static Reflex::Instance*fgSingletonclass singleton; static Reflex::Instance::EStatefgStatesingleton's state. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Instance(); default constructor . ~Instance(); destructor . bool HasShutdown(); return true if Reflex has shutdown (end of process) . void Shutdown(). Instance(Instance * createSingleton). Instance& CreateReflexInstance(). » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ,MatchSource.WIKI,root/html534/Reflex__Instance.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__Instance.html
https://root.cern/root/html534/Reflex__Instance.html:921,Modifiability,Inherit,Inherited,921,. Reflex::Instance. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::Instance. class Reflex::Instance. Function Members (Methods); public:. ~Instance(); static boolHasShutdown(); Reflex::InstanceInstance(); Reflex::InstanceInstance(const Reflex::Instance&); Reflex::Instance&operator=(const Reflex::Instance&); voidShutdown(); static Reflex::Instance::EStateState(). private:. static Reflex::Instance&CreateReflexInstance(); Reflex::InstanceInstance(Reflex::Instance* createSingleton). Data Members; public:. enum EState { kUninitialized; kInitializing; kActive; kTearingDown; kHasShutDown; kNumStates; };. private:. static Reflex::Instance*fgSingletonclass singleton; static Reflex::Instance::EStatefgStatesingleton's state. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Instance(); default constructor . ~Instance(); destructor . bool HasShutdown(); return true if Reflex has shutdown (end of process) . void Shutdown(). Instance(Instance * createSingleton). Instance& CreateReflexInstance(). » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ,MatchSource.WIKI,root/html534/Reflex__Instance.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__Instance.html
https://root.cern/root/html534/Reflex__Member.html:5309,Deployability,Update,UpdateFunctionParameterNames,5309,"e() const. MemberTypeAsString() const. Name(unsigned int mod = 0) const. Name_c_str() const. Offset() const. InterpreterOffset(char* offset). InterpreterOffset() const. FunctionParameterSize(bool required = false) const. FunctionParameterDefaultAt(size_t nth) const. FunctionParameterDefault_Begin() const. FunctionParameterDefault_End() const. FunctionParameterDefault_RBegin() const. FunctionParameterDefault_REnd() const. FunctionParameterNameAt(size_t nth) const. FunctionParameterName_Begin() const. FunctionParameterName_End() const. FunctionParameterName_RBegin() const. FunctionParameterName_REnd() const. Properties() const. SetScope(const Reflex::Scope& sc) const. Stubcontext() const. Stubfunction() const. TemplateArgumentAt(size_t nth) const. TemplateArgumentSize() const. TemplateArgument_Begin() const. TemplateArgument_End() const. TemplateArgument_RBegin() const. TemplateArgument_REnd() const. TemplateFamily() const. ToMemberBase() const. TypeOf() const. UpdateFunctionParameterNames(const char* parameters). Member(const MemberBase * memberBase = 0); default constructor . Member(const Member &rh); copy constructor . ~Member(); destructor . void GenerateDict(Reflex::DictionaryGenerator& generator) const. * GenerateDict will produce the dictionary information of this type; * @param generator a reference to the dictionary generator instance. Object Get() const. * Get a static data member value; * @return member value as object. Object Get(const Reflex::Object& obj) const. * Get the data member value; * @return member value as object. void Set(const Reflex::Object& instance, const void* value) const; void Set( const Object & instance,; const Object & value ) const;. * Set will set the value of a data member; * @param instance of the object owning the data member; * @param value the memory address of the value to set. void Delete(). » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggest",MatchSource.WIKI,root/html534/Reflex__Member.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__Member.html
https://root.cern/root/html534/Reflex__Member.html:3442,Modifiability,Inherit,Inheritance,3442,"st Reflex::Member& rh) const; booloperator<(const Reflex::Member& rh) const; Reflex::Member&operator=(const Reflex::Member& rh); booloperator==(const Reflex::Member& rh) const; Reflex::PropertyListProperties() const; voidSet(const Reflex::Object& instance, const void* value) const; voidSetScope(const Reflex::Scope& sc) const; void*Stubcontext() const; Reflex::StubFunctionStubfunction() const; Reflex::Type_IteratorTemplateArgument_Begin() const; Reflex::Type_IteratorTemplateArgument_End() const; Reflex::Reverse_Type_IteratorTemplateArgument_RBegin() const; Reflex::Reverse_Type_IteratorTemplateArgument_REnd() const; Reflex::TypeTemplateArgumentAt(size_t nth) const; size_tTemplateArgumentSize() const; Reflex::MemberTemplateTemplateFamily() const; Reflex::MemberBase*ToMemberBase() const; Reflex::TypeTypeOf() const; voidUpdateFunctionParameterNames(const char* parameters). private:. voidDelete(). Data Members; private:. Reflex::MemberBase*fMemberBase. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; operator bool() const. DeclaringScope() const. DeclaringType() const. Id() const. Invoke(const Reflex::Object& obj, Reflex::Object* ret, const vector<void*>& paramList = std::vector<void*>()) const. Invoke(Reflex::Object* ret, const vector<void*>& paramList = std::vector<void*>()) const. IsAbstract() const. IsArtificial() const. IsAuto() const. IsConstructor() const. IsConst() const. IsConverter() const. IsCopyConstructor() const. IsDataMember() const. IsDestructor() const. IsExplicit() const. IsExtern() const. IsFunctionMember() const. IsInline() const. IsMutable() const. IsOperator() const. IsPrivate() const. IsProtected() const. IsPublic() const. IsPureVirtual() const. IsRegister() const. IsStatic() const. IsTemplateInstance() const. IsTransient() const. IsVirtual() const. IsVolatile() const. MemberType() const. MemberTypeAsString() const. Name(unsigned int mod = 0) const. Name_c_str() const. Offset() const. InterpreterOffset(char* ",MatchSource.WIKI,root/html534/Reflex__Member.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__Member.html
https://root.cern/root/html534/Reflex__Member.html:3455,Modifiability,Inherit,Inherited,3455,"st Reflex::Member& rh) const; booloperator<(const Reflex::Member& rh) const; Reflex::Member&operator=(const Reflex::Member& rh); booloperator==(const Reflex::Member& rh) const; Reflex::PropertyListProperties() const; voidSet(const Reflex::Object& instance, const void* value) const; voidSetScope(const Reflex::Scope& sc) const; void*Stubcontext() const; Reflex::StubFunctionStubfunction() const; Reflex::Type_IteratorTemplateArgument_Begin() const; Reflex::Type_IteratorTemplateArgument_End() const; Reflex::Reverse_Type_IteratorTemplateArgument_RBegin() const; Reflex::Reverse_Type_IteratorTemplateArgument_REnd() const; Reflex::TypeTemplateArgumentAt(size_t nth) const; size_tTemplateArgumentSize() const; Reflex::MemberTemplateTemplateFamily() const; Reflex::MemberBase*ToMemberBase() const; Reflex::TypeTypeOf() const; voidUpdateFunctionParameterNames(const char* parameters). private:. voidDelete(). Data Members; private:. Reflex::MemberBase*fMemberBase. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; operator bool() const. DeclaringScope() const. DeclaringType() const. Id() const. Invoke(const Reflex::Object& obj, Reflex::Object* ret, const vector<void*>& paramList = std::vector<void*>()) const. Invoke(Reflex::Object* ret, const vector<void*>& paramList = std::vector<void*>()) const. IsAbstract() const. IsArtificial() const. IsAuto() const. IsConstructor() const. IsConst() const. IsConverter() const. IsCopyConstructor() const. IsDataMember() const. IsDestructor() const. IsExplicit() const. IsExtern() const. IsFunctionMember() const. IsInline() const. IsMutable() const. IsOperator() const. IsPrivate() const. IsProtected() const. IsPublic() const. IsPureVirtual() const. IsRegister() const. IsStatic() const. IsTemplateInstance() const. IsTransient() const. IsVirtual() const. IsVolatile() const. MemberType() const. MemberTypeAsString() const. Name(unsigned int mod = 0) const. Name_c_str() const. Offset() const. InterpreterOffset(char* ",MatchSource.WIKI,root/html534/Reflex__Member.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__Member.html
https://root.cern/root/html534/Reflex__Member.html:2800,Testability,Stub,Stubcontext,2800,"et, const vector<void*>& paramList = std::vector<void*>()) const; voidInvoke(const Reflex::Object& obj, Reflex::Object* ret, const vector<void*>& paramList = std::vector<void*>()) const; boolIsAbstract() const; boolIsArtificial() const; boolIsAuto() const; boolIsConst() const; boolIsConstructor() const; boolIsConverter() const; boolIsCopyConstructor() const; boolIsDataMember() const; boolIsDestructor() const; boolIsExplicit() const; boolIsExtern() const; boolIsFunctionMember() const; boolIsInline() const; boolIsMutable() const; boolIsOperator() const; boolIsPrivate() const; boolIsProtected() const; boolIsPublic() const; boolIsPureVirtual() const; boolIsRegister() const; boolIsStatic() const; boolIsTemplateInstance() const; boolIsTransient() const; boolIsVirtual() const; boolIsVolatile() const; Reflex::MemberMember(const Reflex::MemberBase* memberBase = 0); Reflex::MemberMember(const Reflex::Member& rh); Reflex::TYPEMemberType() const; stringMemberTypeAsString() const; stringName(unsigned int mod = 0) const; const char*Name_c_str() const; size_tOffset() const; booloperator bool() const; booloperator!=(const Reflex::Member& rh) const; booloperator<(const Reflex::Member& rh) const; Reflex::Member&operator=(const Reflex::Member& rh); booloperator==(const Reflex::Member& rh) const; Reflex::PropertyListProperties() const; voidSet(const Reflex::Object& instance, const void* value) const; voidSetScope(const Reflex::Scope& sc) const; void*Stubcontext() const; Reflex::StubFunctionStubfunction() const; Reflex::Type_IteratorTemplateArgument_Begin() const; Reflex::Type_IteratorTemplateArgument_End() const; Reflex::Reverse_Type_IteratorTemplateArgument_RBegin() const; Reflex::Reverse_Type_IteratorTemplateArgument_REnd() const; Reflex::TypeTemplateArgumentAt(size_t nth) const; size_tTemplateArgumentSize() const; Reflex::MemberTemplateTemplateFamily() const; Reflex::MemberBase*ToMemberBase() const; Reflex::TypeTypeOf() const; voidUpdateFunctionParameterNames(const char* parameters).",MatchSource.WIKI,root/html534/Reflex__Member.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__Member.html
https://root.cern/root/html534/Reflex__Member.html:2829,Testability,Stub,StubFunctionStubfunction,2829,"et, const vector<void*>& paramList = std::vector<void*>()) const; voidInvoke(const Reflex::Object& obj, Reflex::Object* ret, const vector<void*>& paramList = std::vector<void*>()) const; boolIsAbstract() const; boolIsArtificial() const; boolIsAuto() const; boolIsConst() const; boolIsConstructor() const; boolIsConverter() const; boolIsCopyConstructor() const; boolIsDataMember() const; boolIsDestructor() const; boolIsExplicit() const; boolIsExtern() const; boolIsFunctionMember() const; boolIsInline() const; boolIsMutable() const; boolIsOperator() const; boolIsPrivate() const; boolIsProtected() const; boolIsPublic() const; boolIsPureVirtual() const; boolIsRegister() const; boolIsStatic() const; boolIsTemplateInstance() const; boolIsTransient() const; boolIsVirtual() const; boolIsVolatile() const; Reflex::MemberMember(const Reflex::MemberBase* memberBase = 0); Reflex::MemberMember(const Reflex::Member& rh); Reflex::TYPEMemberType() const; stringMemberTypeAsString() const; stringName(unsigned int mod = 0) const; const char*Name_c_str() const; size_tOffset() const; booloperator bool() const; booloperator!=(const Reflex::Member& rh) const; booloperator<(const Reflex::Member& rh) const; Reflex::Member&operator=(const Reflex::Member& rh); booloperator==(const Reflex::Member& rh) const; Reflex::PropertyListProperties() const; voidSet(const Reflex::Object& instance, const void* value) const; voidSetScope(const Reflex::Scope& sc) const; void*Stubcontext() const; Reflex::StubFunctionStubfunction() const; Reflex::Type_IteratorTemplateArgument_Begin() const; Reflex::Type_IteratorTemplateArgument_End() const; Reflex::Reverse_Type_IteratorTemplateArgument_RBegin() const; Reflex::Reverse_Type_IteratorTemplateArgument_REnd() const; Reflex::TypeTemplateArgumentAt(size_t nth) const; size_tTemplateArgumentSize() const; Reflex::MemberTemplateTemplateFamily() const; Reflex::MemberBase*ToMemberBase() const; Reflex::TypeTypeOf() const; voidUpdateFunctionParameterNames(const char* parameters).",MatchSource.WIKI,root/html534/Reflex__Member.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__Member.html
https://root.cern/root/html534/Reflex__Member.html:5010,Testability,Stub,Stubcontext,5010,"sExtern() const. IsFunctionMember() const. IsInline() const. IsMutable() const. IsOperator() const. IsPrivate() const. IsProtected() const. IsPublic() const. IsPureVirtual() const. IsRegister() const. IsStatic() const. IsTemplateInstance() const. IsTransient() const. IsVirtual() const. IsVolatile() const. MemberType() const. MemberTypeAsString() const. Name(unsigned int mod = 0) const. Name_c_str() const. Offset() const. InterpreterOffset(char* offset). InterpreterOffset() const. FunctionParameterSize(bool required = false) const. FunctionParameterDefaultAt(size_t nth) const. FunctionParameterDefault_Begin() const. FunctionParameterDefault_End() const. FunctionParameterDefault_RBegin() const. FunctionParameterDefault_REnd() const. FunctionParameterNameAt(size_t nth) const. FunctionParameterName_Begin() const. FunctionParameterName_End() const. FunctionParameterName_RBegin() const. FunctionParameterName_REnd() const. Properties() const. SetScope(const Reflex::Scope& sc) const. Stubcontext() const. Stubfunction() const. TemplateArgumentAt(size_t nth) const. TemplateArgumentSize() const. TemplateArgument_Begin() const. TemplateArgument_End() const. TemplateArgument_RBegin() const. TemplateArgument_REnd() const. TemplateFamily() const. ToMemberBase() const. TypeOf() const. UpdateFunctionParameterNames(const char* parameters). Member(const MemberBase * memberBase = 0); default constructor . Member(const Member &rh); copy constructor . ~Member(); destructor . void GenerateDict(Reflex::DictionaryGenerator& generator) const. * GenerateDict will produce the dictionary information of this type; * @param generator a reference to the dictionary generator instance. Object Get() const. * Get a static data member value; * @return member value as object. Object Get(const Reflex::Object& obj) const. * Get the data member value; * @return member value as object. void Set(const Reflex::Object& instance, const void* value) const; void Set( const Object & instance,; const Object & value ",MatchSource.WIKI,root/html534/Reflex__Member.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__Member.html
https://root.cern/root/html534/Reflex__Member.html:5031,Testability,Stub,Stubfunction,5031,"ctionMember() const. IsInline() const. IsMutable() const. IsOperator() const. IsPrivate() const. IsProtected() const. IsPublic() const. IsPureVirtual() const. IsRegister() const. IsStatic() const. IsTemplateInstance() const. IsTransient() const. IsVirtual() const. IsVolatile() const. MemberType() const. MemberTypeAsString() const. Name(unsigned int mod = 0) const. Name_c_str() const. Offset() const. InterpreterOffset(char* offset). InterpreterOffset() const. FunctionParameterSize(bool required = false) const. FunctionParameterDefaultAt(size_t nth) const. FunctionParameterDefault_Begin() const. FunctionParameterDefault_End() const. FunctionParameterDefault_RBegin() const. FunctionParameterDefault_REnd() const. FunctionParameterNameAt(size_t nth) const. FunctionParameterName_Begin() const. FunctionParameterName_End() const. FunctionParameterName_RBegin() const. FunctionParameterName_REnd() const. Properties() const. SetScope(const Reflex::Scope& sc) const. Stubcontext() const. Stubfunction() const. TemplateArgumentAt(size_t nth) const. TemplateArgumentSize() const. TemplateArgument_Begin() const. TemplateArgument_End() const. TemplateArgument_RBegin() const. TemplateArgument_REnd() const. TemplateFamily() const. ToMemberBase() const. TypeOf() const. UpdateFunctionParameterNames(const char* parameters). Member(const MemberBase * memberBase = 0); default constructor . Member(const Member &rh); copy constructor . ~Member(); destructor . void GenerateDict(Reflex::DictionaryGenerator& generator) const. * GenerateDict will produce the dictionary information of this type; * @param generator a reference to the dictionary generator instance. Object Get() const. * Get a static data member value; * @return member value as object. Object Get(const Reflex::Object& obj) const. * Get the data member value; * @return member value as object. void Set(const Reflex::Object& instance, const void* value) const; void Set( const Object & instance,; const Object & value ) const;. * Set will ",MatchSource.WIKI,root/html534/Reflex__Member.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__Member.html
https://root.cern/root/html534/Reflex__MemberTemplate.html:4704,Availability,avail,available,4704,TemplateAt will return the nth member template defined; * @param nth member template; * @return nth member template. MemberTemplate_Iterator MemberTemplate_Begin(). * MemberTemplate_Begin returns the begin iterator of the member template container; * @return begin iterator of member template container. MemberTemplate_Iterator MemberTemplate_End(). * MemberTemplate_End returns the end iterator of the member template container; * @return end iterator of member template container. Reverse_MemberTemplate_Iterator MemberTemplate_RBegin(). * MemberTemplate_Rbegin returns the rbegin iterator of the member template container; * @return rbegin iterator of member template container. Reverse_MemberTemplate_Iterator MemberTemplate_REnd(). * MemberTemplate_Rend returns the rend iterator of the member template container; * @return rend iterator of member template container. std::string Name(unsigned int mod = 0) const. * Name will return the name of the template family and a list of; * all currently available instantiations; * @return template family name with all instantiantion. Member_Iterator TemplateInstance_Begin() const. * TemplateInstance_Begin returns the begin iterator of the instance container; * @return the begin iterator of the instance container. Member_Iterator TemplateInstance_End() const. * TemplateInstance_End returns the end iterator of the instance container; * @return the end iterator of the instance container. Reverse_Member_Iterator TemplateInstance_RBegin() const. * TemplateInstance_RBegin returns the rbegin iterator of the instance container; * @return the rbegin iterator of the instance container. Reverse_Member_Iterator TemplateInstance_REnd() const. * TemplateInstance_Rend returns the rend iterator of the instance container; * @return the rend iterator of the instance container. Member TemplateInstanceAt(size_t nth) const. * TemplateInstanceAt will return the nth template instantion; * @param nth template instantion; * @return pointer to nth template in,MatchSource.WIKI,root/html534/Reflex__MemberTemplate.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__MemberTemplate.html
https://root.cern/root/html534/Reflex__MemberTemplate.html:2329,Modifiability,Inherit,Inheritance,2329,"se_Member_IteratorTemplateInstance_RBegin() const; Reflex::Reverse_Member_IteratorTemplateInstance_REnd() const; Reflex::MemberTemplateInstanceAt(size_t nth) const; size_tTemplateInstanceSize() const; Reflex::StdString_IteratorTemplateParameterDefault_Begin() const; Reflex::StdString_IteratorTemplateParameterDefault_End() const; Reflex::Reverse_StdString_IteratorTemplateParameterDefault_RBegin() const; Reflex::Reverse_StdString_IteratorTemplateParameterDefault_REnd() const; stringTemplateParameterDefaultAt(size_t nth) const; Reflex::StdString_IteratorTemplateParameterName_Begin() const; Reflex::StdString_IteratorTemplateParameterName_End() const; Reflex::Reverse_StdString_IteratorTemplateParameterName_RBegin() const; Reflex::Reverse_StdString_IteratorTemplateParameterName_REnd() const; stringTemplateParameterNameAt(size_t nth) const; size_tTemplateParameterSize() const. Data Members; private:. const Reflex::MemberTemplateName*fMemberTemplateName. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; inline MemberTemplate(const MemberTemplateName* memberTemplateName). inline MemberTemplate(const MemberTemplate& rh). inline ~MemberTemplate(). operator=(const Reflex::MemberTemplate& rh). operator bool() const. Id() const. MemberTemplateSize(). TemplateInstanceSize() const. TemplateParameterSize() const. TemplateParameterDefaultAt(size_t nth) const. TemplateParameterDefault_Begin() const. TemplateParameterDefault_End() const. TemplateParameterDefault_RBegin() const. TemplateParameterDefault_REnd() const. TemplateParameterNameAt(size_t nth) const. TemplateParameterName_Begin() const. TemplateParameterName_End() const. TemplateParameterName_RBegin() const. TemplateParameterName_REnd() const. MemberTemplate ByName(const string& name, size_t nTemplateParams = 0). * ByName will return a member template corresponding to the argument name; * @param member template name to lookup; * @param nTemplateParams looks up the template family with thi",MatchSource.WIKI,root/html534/Reflex__MemberTemplate.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__MemberTemplate.html
https://root.cern/root/html534/Reflex__MemberTemplate.html:2342,Modifiability,Inherit,Inherited,2342,"se_Member_IteratorTemplateInstance_RBegin() const; Reflex::Reverse_Member_IteratorTemplateInstance_REnd() const; Reflex::MemberTemplateInstanceAt(size_t nth) const; size_tTemplateInstanceSize() const; Reflex::StdString_IteratorTemplateParameterDefault_Begin() const; Reflex::StdString_IteratorTemplateParameterDefault_End() const; Reflex::Reverse_StdString_IteratorTemplateParameterDefault_RBegin() const; Reflex::Reverse_StdString_IteratorTemplateParameterDefault_REnd() const; stringTemplateParameterDefaultAt(size_t nth) const; Reflex::StdString_IteratorTemplateParameterName_Begin() const; Reflex::StdString_IteratorTemplateParameterName_End() const; Reflex::Reverse_StdString_IteratorTemplateParameterName_RBegin() const; Reflex::Reverse_StdString_IteratorTemplateParameterName_REnd() const; stringTemplateParameterNameAt(size_t nth) const; size_tTemplateParameterSize() const. Data Members; private:. const Reflex::MemberTemplateName*fMemberTemplateName. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; inline MemberTemplate(const MemberTemplateName* memberTemplateName). inline MemberTemplate(const MemberTemplate& rh). inline ~MemberTemplate(). operator=(const Reflex::MemberTemplate& rh). operator bool() const. Id() const. MemberTemplateSize(). TemplateInstanceSize() const. TemplateParameterSize() const. TemplateParameterDefaultAt(size_t nth) const. TemplateParameterDefault_Begin() const. TemplateParameterDefault_End() const. TemplateParameterDefault_RBegin() const. TemplateParameterDefault_REnd() const. TemplateParameterNameAt(size_t nth) const. TemplateParameterName_Begin() const. TemplateParameterName_End() const. TemplateParameterName_RBegin() const. TemplateParameterName_REnd() const. MemberTemplate ByName(const string& name, size_t nTemplateParams = 0). * ByName will return a member template corresponding to the argument name; * @param member template name to lookup; * @param nTemplateParams looks up the template family with thi",MatchSource.WIKI,root/html534/Reflex__MemberTemplate.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__MemberTemplate.html
https://root.cern/root/html534/Reflex__NamespaceBuilder.html:729,Modifiability,Inherit,Inheritance,729,". Reflex::NamespaceBuilder. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::NamespaceBuilder. class Reflex::NamespaceBuilder. Function Members (Methods); public:. virtual~NamespaceBuilder(); Reflex::NamespaceBuilder&AddProperty(const char* key, Reflex::Any value); Reflex::NamespaceBuilder&AddProperty(const char* key, const char* value); Reflex::NamespaceBuilderNamespaceBuilder(const char* nam); Reflex::NamespaceBuilderNamespaceBuilder(const Reflex::NamespaceBuilder&); Reflex::ScopeToScope(). Data Members; private:. Reflex::ScopefNamespace. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; NamespaceBuilder(const char* nam); constructor . virtual ~NamespaceBuilder(); destructor . {}. NamespaceBuilder& AddProperty(const char* key, Any value); AddProperty will add a PropertyNth; * @param key the PropertyNth key; * @param value the value of the PropertyNth; * @return a reference to the building class. Scope ToScope(). * ToScope will return the currently being built namespace; * @return namespace currently being built. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/Reflex__NamespaceBuilder.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__NamespaceBuilder.html
https://root.cern/root/html534/Reflex__NamespaceBuilder.html:742,Modifiability,Inherit,Inherited,742,". Reflex::NamespaceBuilder. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::NamespaceBuilder. class Reflex::NamespaceBuilder. Function Members (Methods); public:. virtual~NamespaceBuilder(); Reflex::NamespaceBuilder&AddProperty(const char* key, Reflex::Any value); Reflex::NamespaceBuilder&AddProperty(const char* key, const char* value); Reflex::NamespaceBuilderNamespaceBuilder(const char* nam); Reflex::NamespaceBuilderNamespaceBuilder(const Reflex::NamespaceBuilder&); Reflex::ScopeToScope(). Data Members; private:. Reflex::ScopefNamespace. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; NamespaceBuilder(const char* nam); constructor . virtual ~NamespaceBuilder(); destructor . {}. NamespaceBuilder& AddProperty(const char* key, Any value); AddProperty will add a PropertyNth; * @param key the PropertyNth key; * @param value the value of the PropertyNth; * @return a reference to the building class. Scope ToScope(). * ToScope will return the currently being built namespace; * @return namespace currently being built. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/Reflex__NamespaceBuilder.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__NamespaceBuilder.html
https://root.cern/root/html534/Reflex__NewDelFunctions.html:942,Modifiability,Inherit,Inheritance,942,. Reflex::NewDelFunctions. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::NewDelFunctions. class Reflex::NewDelFunctions. Function Members (Methods); public:. ~NewDelFunctions(); Reflex::NewDelFunctionsNewDelFunctions(); Reflex::NewDelFunctionsNewDelFunctions(const Reflex::NewDelFunctions&); Reflex::NewDelFunctions&operator=(const Reflex::NewDelFunctions&). Data Members; public:. Reflex::DelFunc_tfDeletepointer to a function deleting one object.; Reflex::DelArrFunc_tfDeleteArraypointer to a function deleting an array of objects.; Reflex::DesFunc_tfDestructorpointer to a function call an object's destructor.; Reflex::NewFunc_tfNewpointer to a function newing one object.; Reflex::NewArrFunc_tfNewArraypointer to a function newing an array of objects. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation. » Last changed: Tue Sep 8 17:02:30 2015 » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ,MatchSource.WIKI,root/html534/Reflex__NewDelFunctions.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__NewDelFunctions.html
https://root.cern/root/html534/Reflex__NewDelFunctions.html:955,Modifiability,Inherit,Inherited,955,. Reflex::NewDelFunctions. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::NewDelFunctions. class Reflex::NewDelFunctions. Function Members (Methods); public:. ~NewDelFunctions(); Reflex::NewDelFunctionsNewDelFunctions(); Reflex::NewDelFunctionsNewDelFunctions(const Reflex::NewDelFunctions&); Reflex::NewDelFunctions&operator=(const Reflex::NewDelFunctions&). Data Members; public:. Reflex::DelFunc_tfDeletepointer to a function deleting one object.; Reflex::DelArrFunc_tfDeleteArraypointer to a function deleting an array of objects.; Reflex::DesFunc_tfDestructorpointer to a function call an object's destructor.; Reflex::NewFunc_tfNewpointer to a function newing one object.; Reflex::NewArrFunc_tfNewArraypointer to a function newing an array of objects. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation. » Last changed: Tue Sep 8 17:02:30 2015 » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ,MatchSource.WIKI,root/html534/Reflex__NewDelFunctions.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__NewDelFunctions.html
https://root.cern/root/html534/Reflex__NullType.html:467,Modifiability,Inherit,Inheritance,467,. Reflex::NullType. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::NullType. class Reflex::NullType. Function Members (Methods); public:. ~NullType(); Reflex::NullTypeNullType(); Reflex::NullTypeNullType(const Reflex::NullType&); Reflex::NullType&operator=(const Reflex::NullType&). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ,MatchSource.WIKI,root/html534/Reflex__NullType.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__NullType.html
https://root.cern/root/html534/Reflex__NullType.html:480,Modifiability,Inherit,Inherited,480,. Reflex::NullType. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::NullType. class Reflex::NullType. Function Members (Methods); public:. ~NullType(); Reflex::NullTypeNullType(); Reflex::NullTypeNullType(const Reflex::NullType&); Reflex::NullType&operator=(const Reflex::NullType&). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ,MatchSource.WIKI,root/html534/Reflex__NullType.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__NullType.html
https://root.cern/root/html534/Reflex__Object.html:1239,Modifiability,Inherit,Inheritance,1239," Function Members (Methods); public:. ~Object(); void*Address() const; Reflex::ObjectCastObject(const Reflex::Type& to) const; voidDestruct() const; Reflex::TypeDynamicType() const; Reflex::ObjectGet(const string& dm) const; voidInvoke(const string& fm, Reflex::Object* ret = 0, const vector<void*>& args = std::vector<void*>()) const; voidInvoke(const string& fm, const Reflex::Type& sign, Reflex::Object* ret = 0, const vector<void*>& args = std::vector<void*>()) const; Reflex::ObjectObject(const Reflex::Object& obj); Reflex::ObjectObject(const Reflex::Type& type = Type(), void* mem = 0); booloperator bool() const; booloperator!=(const Reflex::Object& obj); Reflex::Object&operator=(const Reflex::Object& obj); booloperator==(const Reflex::Object& obj); voidSet(const string& dm, const void* value) const; Reflex::TypeTypeOf() const. private:. voidSet2(const string& dm, const void* value) const. Data Members; private:. void*fAddress; Reflex::TypefType. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; inline Object(const Reflex::Type& type = Type(), void* mem = 0). inline Object(const Reflex::Object& obj). operator bool() const. Address() const. CastObject(const Reflex::Type& to) const. Destruct() const. DynamicType() const. Set(const string& dm, const void* value) const. TypeOf() const. ~Object(); destructor . {}. Object Get(const string& dm) const. * Get the data member value; * @param dm name of the data member to get; * @return member value as object. void Invoke(const string& fm, Reflex::Object* ret = 0, const vector<void*>& args = std::vector<void*>()) const. * Invoke a member function of the object; * @param fm name of the member function; * @param ret Object to put the return value into (can be 0 for function returning void); * @param args a vector of memory addresses to parameter values; * @return the return value of the function as object. Invoke(fm, &retO, args). void Set2(const string& dm, const void* value) const; . » L",MatchSource.WIKI,root/html534/Reflex__Object.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__Object.html
https://root.cern/root/html534/Reflex__Object.html:1252,Modifiability,Inherit,Inherited,1252," Function Members (Methods); public:. ~Object(); void*Address() const; Reflex::ObjectCastObject(const Reflex::Type& to) const; voidDestruct() const; Reflex::TypeDynamicType() const; Reflex::ObjectGet(const string& dm) const; voidInvoke(const string& fm, Reflex::Object* ret = 0, const vector<void*>& args = std::vector<void*>()) const; voidInvoke(const string& fm, const Reflex::Type& sign, Reflex::Object* ret = 0, const vector<void*>& args = std::vector<void*>()) const; Reflex::ObjectObject(const Reflex::Object& obj); Reflex::ObjectObject(const Reflex::Type& type = Type(), void* mem = 0); booloperator bool() const; booloperator!=(const Reflex::Object& obj); Reflex::Object&operator=(const Reflex::Object& obj); booloperator==(const Reflex::Object& obj); voidSet(const string& dm, const void* value) const; Reflex::TypeTypeOf() const. private:. voidSet2(const string& dm, const void* value) const. Data Members; private:. void*fAddress; Reflex::TypefType. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; inline Object(const Reflex::Type& type = Type(), void* mem = 0). inline Object(const Reflex::Object& obj). operator bool() const. Address() const. CastObject(const Reflex::Type& to) const. Destruct() const. DynamicType() const. Set(const string& dm, const void* value) const. TypeOf() const. ~Object(); destructor . {}. Object Get(const string& dm) const. * Get the data member value; * @param dm name of the data member to get; * @return member value as object. void Invoke(const string& fm, Reflex::Object* ret = 0, const vector<void*>& args = std::vector<void*>()) const. * Invoke a member function of the object; * @param fm name of the member function; * @param ret Object to put the return value into (can be 0 for function returning void); * @param args a vector of memory addresses to parameter values; * @return the return value of the function as object. Invoke(fm, &retO, args). void Set2(const string& dm, const void* value) const; . » L",MatchSource.WIKI,root/html534/Reflex__Object.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__Object.html
https://root.cern/root/html534/Reflex__PrivateClass.html:511,Modifiability,Inherit,Inheritance,511,. Reflex::PrivateClass. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::PrivateClass. class Reflex::PrivateClass. Function Members (Methods); public:. ~PrivateClass(); Reflex::PrivateClass&operator=(const Reflex::PrivateClass&); Reflex::PrivateClassPrivateClass(); Reflex::PrivateClassPrivateClass(const Reflex::PrivateClass&). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ,MatchSource.WIKI,root/html534/Reflex__PrivateClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__PrivateClass.html
https://root.cern/root/html534/Reflex__PrivateClass.html:524,Modifiability,Inherit,Inherited,524,. Reflex::PrivateClass. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::PrivateClass. class Reflex::PrivateClass. Function Members (Methods); public:. ~PrivateClass(); Reflex::PrivateClass&operator=(const Reflex::PrivateClass&); Reflex::PrivateClassPrivateClass(); Reflex::PrivateClassPrivateClass(const Reflex::PrivateClass&). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ,MatchSource.WIKI,root/html534/Reflex__PrivateClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__PrivateClass.html
https://root.cern/root/html534/Reflex__PrivateEnum.html:500,Modifiability,Inherit,Inheritance,500,. Reflex::PrivateEnum. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::PrivateEnum. class Reflex::PrivateEnum. Function Members (Methods); public:. ~PrivateEnum(); Reflex::PrivateEnum&operator=(const Reflex::PrivateEnum&); Reflex::PrivateEnumPrivateEnum(); Reflex::PrivateEnumPrivateEnum(const Reflex::PrivateEnum&). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ,MatchSource.WIKI,root/html534/Reflex__PrivateEnum.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__PrivateEnum.html
https://root.cern/root/html534/Reflex__PrivateEnum.html:513,Modifiability,Inherit,Inherited,513,. Reflex::PrivateEnum. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::PrivateEnum. class Reflex::PrivateEnum. Function Members (Methods); public:. ~PrivateEnum(); Reflex::PrivateEnum&operator=(const Reflex::PrivateEnum&); Reflex::PrivateEnumPrivateEnum(); Reflex::PrivateEnumPrivateEnum(const Reflex::PrivateEnum&). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ,MatchSource.WIKI,root/html534/Reflex__PrivateEnum.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__PrivateEnum.html
https://root.cern/root/html534/Reflex__PrivateStruct.html:522,Modifiability,Inherit,Inheritance,522,. Reflex::PrivateStruct. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::PrivateStruct. class Reflex::PrivateStruct. Function Members (Methods); public:. ~PrivateStruct(); Reflex::PrivateStruct&operator=(const Reflex::PrivateStruct&); Reflex::PrivateStructPrivateStruct(); Reflex::PrivateStructPrivateStruct(const Reflex::PrivateStruct&). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ,MatchSource.WIKI,root/html534/Reflex__PrivateStruct.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__PrivateStruct.html
https://root.cern/root/html534/Reflex__PrivateStruct.html:535,Modifiability,Inherit,Inherited,535,. Reflex::PrivateStruct. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::PrivateStruct. class Reflex::PrivateStruct. Function Members (Methods); public:. ~PrivateStruct(); Reflex::PrivateStruct&operator=(const Reflex::PrivateStruct&); Reflex::PrivateStructPrivateStruct(); Reflex::PrivateStructPrivateStruct(const Reflex::PrivateStruct&). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ,MatchSource.WIKI,root/html534/Reflex__PrivateStruct.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__PrivateStruct.html
https://root.cern/root/html534/Reflex__PrivateUnion.html:511,Modifiability,Inherit,Inheritance,511,. Reflex::PrivateUnion. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::PrivateUnion. class Reflex::PrivateUnion. Function Members (Methods); public:. ~PrivateUnion(); Reflex::PrivateUnion&operator=(const Reflex::PrivateUnion&); Reflex::PrivateUnionPrivateUnion(); Reflex::PrivateUnionPrivateUnion(const Reflex::PrivateUnion&). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ,MatchSource.WIKI,root/html534/Reflex__PrivateUnion.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__PrivateUnion.html
https://root.cern/root/html534/Reflex__PrivateUnion.html:524,Modifiability,Inherit,Inherited,524,. Reflex::PrivateUnion. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::PrivateUnion. class Reflex::PrivateUnion. Function Members (Methods); public:. ~PrivateUnion(); Reflex::PrivateUnion&operator=(const Reflex::PrivateUnion&); Reflex::PrivateUnionPrivateUnion(); Reflex::PrivateUnionPrivateUnion(const Reflex::PrivateUnion&). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ,MatchSource.WIKI,root/html534/Reflex__PrivateUnion.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__PrivateUnion.html
https://root.cern/root/html534/Reflex__ProtectedClass.html:533,Modifiability,Inherit,Inheritance,533,. Reflex::ProtectedClass. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::ProtectedClass. class Reflex::ProtectedClass. Function Members (Methods); public:. ~ProtectedClass(); Reflex::ProtectedClass&operator=(const Reflex::ProtectedClass&); Reflex::ProtectedClassProtectedClass(); Reflex::ProtectedClassProtectedClass(const Reflex::ProtectedClass&). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ,MatchSource.WIKI,root/html534/Reflex__ProtectedClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__ProtectedClass.html
https://root.cern/root/html534/Reflex__ProtectedClass.html:546,Modifiability,Inherit,Inherited,546,. Reflex::ProtectedClass. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::ProtectedClass. class Reflex::ProtectedClass. Function Members (Methods); public:. ~ProtectedClass(); Reflex::ProtectedClass&operator=(const Reflex::ProtectedClass&); Reflex::ProtectedClassProtectedClass(); Reflex::ProtectedClassProtectedClass(const Reflex::ProtectedClass&). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ,MatchSource.WIKI,root/html534/Reflex__ProtectedClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__ProtectedClass.html
https://root.cern/root/html534/Reflex__ProtectedEnum.html:522,Modifiability,Inherit,Inheritance,522,. Reflex::ProtectedEnum. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::ProtectedEnum. class Reflex::ProtectedEnum. Function Members (Methods); public:. ~ProtectedEnum(); Reflex::ProtectedEnum&operator=(const Reflex::ProtectedEnum&); Reflex::ProtectedEnumProtectedEnum(); Reflex::ProtectedEnumProtectedEnum(const Reflex::ProtectedEnum&). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ,MatchSource.WIKI,root/html534/Reflex__ProtectedEnum.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__ProtectedEnum.html
https://root.cern/root/html534/Reflex__ProtectedEnum.html:535,Modifiability,Inherit,Inherited,535,. Reflex::ProtectedEnum. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::ProtectedEnum. class Reflex::ProtectedEnum. Function Members (Methods); public:. ~ProtectedEnum(); Reflex::ProtectedEnum&operator=(const Reflex::ProtectedEnum&); Reflex::ProtectedEnumProtectedEnum(); Reflex::ProtectedEnumProtectedEnum(const Reflex::ProtectedEnum&). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ,MatchSource.WIKI,root/html534/Reflex__ProtectedEnum.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__ProtectedEnum.html
https://root.cern/root/html534/Reflex__ProtectedStruct.html:544,Modifiability,Inherit,Inheritance,544,. Reflex::ProtectedStruct. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::ProtectedStruct. class Reflex::ProtectedStruct. Function Members (Methods); public:. ~ProtectedStruct(); Reflex::ProtectedStruct&operator=(const Reflex::ProtectedStruct&); Reflex::ProtectedStructProtectedStruct(); Reflex::ProtectedStructProtectedStruct(const Reflex::ProtectedStruct&). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ,MatchSource.WIKI,root/html534/Reflex__ProtectedStruct.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__ProtectedStruct.html
https://root.cern/root/html534/Reflex__ProtectedStruct.html:557,Modifiability,Inherit,Inherited,557,. Reflex::ProtectedStruct. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::ProtectedStruct. class Reflex::ProtectedStruct. Function Members (Methods); public:. ~ProtectedStruct(); Reflex::ProtectedStruct&operator=(const Reflex::ProtectedStruct&); Reflex::ProtectedStructProtectedStruct(); Reflex::ProtectedStructProtectedStruct(const Reflex::ProtectedStruct&). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ,MatchSource.WIKI,root/html534/Reflex__ProtectedStruct.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__ProtectedStruct.html
https://root.cern/root/html534/Reflex__ProtectedUnion.html:533,Modifiability,Inherit,Inheritance,533,. Reflex::ProtectedUnion. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::ProtectedUnion. class Reflex::ProtectedUnion. Function Members (Methods); public:. ~ProtectedUnion(); Reflex::ProtectedUnion&operator=(const Reflex::ProtectedUnion&); Reflex::ProtectedUnionProtectedUnion(); Reflex::ProtectedUnionProtectedUnion(const Reflex::ProtectedUnion&). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ,MatchSource.WIKI,root/html534/Reflex__ProtectedUnion.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__ProtectedUnion.html
https://root.cern/root/html534/Reflex__ProtectedUnion.html:546,Modifiability,Inherit,Inherited,546,. Reflex::ProtectedUnion. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::ProtectedUnion. class Reflex::ProtectedUnion. Function Members (Methods); public:. ~ProtectedUnion(); Reflex::ProtectedUnion&operator=(const Reflex::ProtectedUnion&); Reflex::ProtectedUnionProtectedUnion(); Reflex::ProtectedUnionProtectedUnion(const Reflex::ProtectedUnion&). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ,MatchSource.WIKI,root/html534/Reflex__ProtectedUnion.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__ProtectedUnion.html
https://root.cern/root/html534/Reflex__RuntimeError.html:621,Modifiability,Inherit,Inheritance,621,. Reflex::RuntimeError. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::RuntimeError. class Reflex::RuntimeError: public exception. Function Members (Methods); public:. virtual~RuntimeError(); Reflex::RuntimeError&operator=(const Reflex::RuntimeError&); Reflex::RuntimeErrorRuntimeError(const string& msg); Reflex::RuntimeErrorRuntimeError(const Reflex::RuntimeError&); virtual const char*what() const. Data Members; public:. stringfMsg. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RuntimeError(const std::string & msg); {}. ~RuntimeError(); {}. what() const; { return fMsg.c_str(); }. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ,MatchSource.WIKI,root/html534/Reflex__RuntimeError.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__RuntimeError.html
https://root.cern/root/html534/Reflex__RuntimeError.html:634,Modifiability,Inherit,Inherited,634,. Reflex::RuntimeError. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::RuntimeError. class Reflex::RuntimeError: public exception. Function Members (Methods); public:. virtual~RuntimeError(); Reflex::RuntimeError&operator=(const Reflex::RuntimeError&); Reflex::RuntimeErrorRuntimeError(const string& msg); Reflex::RuntimeErrorRuntimeError(const Reflex::RuntimeError&); virtual const char*what() const. Data Members; public:. stringfMsg. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RuntimeError(const std::string & msg); {}. ~RuntimeError(); {}. what() const; { return fMsg.c_str(); }. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ,MatchSource.WIKI,root/html534/Reflex__RuntimeError.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__RuntimeError.html
https://root.cern/root/html534/Reflex__Scope.html:20543,Availability,avail,availabe,20543," of template arguments; * @return begin of container of template arguments. Type_Iterator TemplateArgument_End() const. * TemplateArgument_End returns the end of the container of template arguments; * @return end of container of template arguments. Reverse_Type_Iterator TemplateArgument_RBegin() const. * TemplateArgument_RBegin returns the reverse begin of the container of template arguments; * @return reverse begin of container of template arguments. Reverse_Type_Iterator TemplateArgument_REnd() const. * TemplateArgument_REnd returns the reverse end of the container of template arguments; * @return reverse end of container of template arguments. TypeTemplate TemplateFamily() const. * TemplateFamily returns the corresponding TypeTemplate if any; * @return corresponding TypeTemplate. void Unload() const. * Unload will unload the dictionary information of a scope. void UpdateMembers() const. * UpdateMembers will update the list of Function/Data/Members with all; * members of base classes currently availabe in the system, switching; * INHERITEDMEMBERS_DEFAULT to INHERITEDMEMBERS_ALSO. void AddDataMember(const Reflex::Member& dm) const. * AddDataMember will add the information about a data member; * @param dm data member to add. Member AddDataMember(const char* name, const Reflex::Type& type, size_t offset, unsigned int modifiers = 0, char* interpreterOffset = 0) const. * AddDataMember will add the information about a data member; * @param nam the name of the data member; * @param typ the type of the data member; * @param offs the offset of the data member relative to the beginning of the scope; * @param modifiers of the data member. Member AddFunctionMember(const char* name, const Reflex::Type& type, Reflex::StubFunction stubFP, void* stubCtx = 0, const char* params = 0, unsigned int modifiers = 0) const. * AddFunctionMember will add the information about a function member; * @param fm function member to add. * AddFunctionMember will add the information about a functio",MatchSource.WIKI,root/html534/Reflex__Scope.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__Scope.html
https://root.cern/root/html534/Reflex__Scope.html:20412,Deployability,Update,UpdateMembers,20412,"ments. Type_Iterator TemplateArgument_Begin() const. * TemplateArgument_Begin returns the begin of the container of template arguments; * @return begin of container of template arguments. Type_Iterator TemplateArgument_End() const. * TemplateArgument_End returns the end of the container of template arguments; * @return end of container of template arguments. Reverse_Type_Iterator TemplateArgument_RBegin() const. * TemplateArgument_RBegin returns the reverse begin of the container of template arguments; * @return reverse begin of container of template arguments. Reverse_Type_Iterator TemplateArgument_REnd() const. * TemplateArgument_REnd returns the reverse end of the container of template arguments; * @return reverse end of container of template arguments. TypeTemplate TemplateFamily() const. * TemplateFamily returns the corresponding TypeTemplate if any; * @return corresponding TypeTemplate. void Unload() const. * Unload will unload the dictionary information of a scope. void UpdateMembers() const. * UpdateMembers will update the list of Function/Data/Members with all; * members of base classes currently availabe in the system, switching; * INHERITEDMEMBERS_DEFAULT to INHERITEDMEMBERS_ALSO. void AddDataMember(const Reflex::Member& dm) const. * AddDataMember will add the information about a data member; * @param dm data member to add. Member AddDataMember(const char* name, const Reflex::Type& type, size_t offset, unsigned int modifiers = 0, char* interpreterOffset = 0) const. * AddDataMember will add the information about a data member; * @param nam the name of the data member; * @param typ the type of the data member; * @param offs the offset of the data member relative to the beginning of the scope; * @param modifiers of the data member. Member AddFunctionMember(const char* name, const Reflex::Type& type, Reflex::StubFunction stubFP, void* stubCtx = 0, const char* params = 0, unsigned int modifiers = 0) const. * AddFunctionMember will add the information about a f",MatchSource.WIKI,root/html534/Reflex__Scope.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__Scope.html
https://root.cern/root/html534/Reflex__Scope.html:20437,Deployability,Update,UpdateMembers,20437," of template arguments; * @return begin of container of template arguments. Type_Iterator TemplateArgument_End() const. * TemplateArgument_End returns the end of the container of template arguments; * @return end of container of template arguments. Reverse_Type_Iterator TemplateArgument_RBegin() const. * TemplateArgument_RBegin returns the reverse begin of the container of template arguments; * @return reverse begin of container of template arguments. Reverse_Type_Iterator TemplateArgument_REnd() const. * TemplateArgument_REnd returns the reverse end of the container of template arguments; * @return reverse end of container of template arguments. TypeTemplate TemplateFamily() const. * TemplateFamily returns the corresponding TypeTemplate if any; * @return corresponding TypeTemplate. void Unload() const. * Unload will unload the dictionary information of a scope. void UpdateMembers() const. * UpdateMembers will update the list of Function/Data/Members with all; * members of base classes currently availabe in the system, switching; * INHERITEDMEMBERS_DEFAULT to INHERITEDMEMBERS_ALSO. void AddDataMember(const Reflex::Member& dm) const. * AddDataMember will add the information about a data member; * @param dm data member to add. Member AddDataMember(const char* name, const Reflex::Type& type, size_t offset, unsigned int modifiers = 0, char* interpreterOffset = 0) const. * AddDataMember will add the information about a data member; * @param nam the name of the data member; * @param typ the type of the data member; * @param offs the offset of the data member relative to the beginning of the scope; * @param modifiers of the data member. Member AddFunctionMember(const char* name, const Reflex::Type& type, Reflex::StubFunction stubFP, void* stubCtx = 0, const char* params = 0, unsigned int modifiers = 0) const. * AddFunctionMember will add the information about a function member; * @param fm function member to add. * AddFunctionMember will add the information about a functio",MatchSource.WIKI,root/html534/Reflex__Scope.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__Scope.html
https://root.cern/root/html534/Reflex__Scope.html:20456,Deployability,update,update,20456," of template arguments; * @return begin of container of template arguments. Type_Iterator TemplateArgument_End() const. * TemplateArgument_End returns the end of the container of template arguments; * @return end of container of template arguments. Reverse_Type_Iterator TemplateArgument_RBegin() const. * TemplateArgument_RBegin returns the reverse begin of the container of template arguments; * @return reverse begin of container of template arguments. Reverse_Type_Iterator TemplateArgument_REnd() const. * TemplateArgument_REnd returns the reverse end of the container of template arguments; * @return reverse end of container of template arguments. TypeTemplate TemplateFamily() const. * TemplateFamily returns the corresponding TypeTemplate if any; * @return corresponding TypeTemplate. void Unload() const. * Unload will unload the dictionary information of a scope. void UpdateMembers() const. * UpdateMembers will update the list of Function/Data/Members with all; * members of base classes currently availabe in the system, switching; * INHERITEDMEMBERS_DEFAULT to INHERITEDMEMBERS_ALSO. void AddDataMember(const Reflex::Member& dm) const. * AddDataMember will add the information about a data member; * @param dm data member to add. Member AddDataMember(const char* name, const Reflex::Type& type, size_t offset, unsigned int modifiers = 0, char* interpreterOffset = 0) const. * AddDataMember will add the information about a data member; * @param nam the name of the data member; * @param typ the type of the data member; * @param offs the offset of the data member relative to the beginning of the scope; * @param modifiers of the data member. Member AddFunctionMember(const char* name, const Reflex::Type& type, Reflex::StubFunction stubFP, void* stubCtx = 0, const char* params = 0, unsigned int modifiers = 0) const. * AddFunctionMember will add the information about a function member; * @param fm function member to add. * AddFunctionMember will add the information about a functio",MatchSource.WIKI,root/html534/Reflex__Scope.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__Scope.html
https://root.cern/root/html534/Reflex__Scope.html:8498,Modifiability,Inherit,Inheritance,8498,TemplateSubTypeTemplateAt(size_t nth) const; Reflex::TypeTemplateSubTypeTemplateByName(const string& nam) const; size_tSubTypeTemplateSize() const; Reflex::Type_IteratorTemplateArgument_Begin() const; Reflex::Type_IteratorTemplateArgument_End() const; Reflex::Reverse_Type_IteratorTemplateArgument_RBegin() const; Reflex::Reverse_Type_IteratorTemplateArgument_REnd() const; Reflex::TypeTemplateArgumentAt(size_t nth) const; size_tTemplateArgumentSize() const; Reflex::TypeTemplateTemplateFamily() const; const Reflex::ScopeBase*ToScopeBase() const; voidUnload() const; voidUpdateMembers() const; Reflex::Scope_IteratorUsingDirective_Begin() const; Reflex::Scope_IteratorUsingDirective_End() const; Reflex::Reverse_Scope_IteratorUsingDirective_RBegin() const; Reflex::Reverse_Scope_IteratorUsingDirective_REnd() const; Reflex::ScopeUsingDirectiveAt(size_t nth) const; size_tUsingDirectiveSize() const. Data Members; private:. const Reflex::ScopeName*fScopeName. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; inline Scope(const ScopeName* scopeName). inline Scope(const Scope& rh). inline ~Scope(). operator=(const Reflex::Scope& rh). operator bool() const. Base_Begin() const. Base_End() const. Base_RBegin() const. Base_REnd() const. DataMember_Begin(Reflex::EMEMBERQUERY inh = INHERITEDMEMBERS_DEFAULT) const. DataMember_End(Reflex::EMEMBERQUERY inh = INHERITEDMEMBERS_DEFAULT) const. DataMember_RBegin(Reflex::EMEMBERQUERY inh = INHERITEDMEMBERS_DEFAULT) const. DataMember_REnd(Reflex::EMEMBERQUERY inh = INHERITEDMEMBERS_DEFAULT) const. DeclaringScope() const. FunctionMember_Begin(Reflex::EMEMBERQUERY inh = INHERITEDMEMBERS_DEFAULT) const. FunctionMember_End(Reflex::EMEMBERQUERY inh = INHERITEDMEMBERS_DEFAULT) const. FunctionMember_RBegin(Reflex::EMEMBERQUERY inh = INHERITEDMEMBERS_DEFAULT) const. FunctionMember_REnd(Reflex::EMEMBERQUERY inh = INHERITEDMEMBERS_DEFAULT) const. GlobalScope(). Id() const. IsClass() const. IsEnum() const. IsNamespac,MatchSource.WIKI,root/html534/Reflex__Scope.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__Scope.html
https://root.cern/root/html534/Reflex__Scope.html:8511,Modifiability,Inherit,Inherited,8511,TemplateSubTypeTemplateAt(size_t nth) const; Reflex::TypeTemplateSubTypeTemplateByName(const string& nam) const; size_tSubTypeTemplateSize() const; Reflex::Type_IteratorTemplateArgument_Begin() const; Reflex::Type_IteratorTemplateArgument_End() const; Reflex::Reverse_Type_IteratorTemplateArgument_RBegin() const; Reflex::Reverse_Type_IteratorTemplateArgument_REnd() const; Reflex::TypeTemplateArgumentAt(size_t nth) const; size_tTemplateArgumentSize() const; Reflex::TypeTemplateTemplateFamily() const; const Reflex::ScopeBase*ToScopeBase() const; voidUnload() const; voidUpdateMembers() const; Reflex::Scope_IteratorUsingDirective_Begin() const; Reflex::Scope_IteratorUsingDirective_End() const; Reflex::Reverse_Scope_IteratorUsingDirective_RBegin() const; Reflex::Reverse_Scope_IteratorUsingDirective_REnd() const; Reflex::ScopeUsingDirectiveAt(size_t nth) const; size_tUsingDirectiveSize() const. Data Members; private:. const Reflex::ScopeName*fScopeName. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; inline Scope(const ScopeName* scopeName). inline Scope(const Scope& rh). inline ~Scope(). operator=(const Reflex::Scope& rh). operator bool() const. Base_Begin() const. Base_End() const. Base_RBegin() const. Base_REnd() const. DataMember_Begin(Reflex::EMEMBERQUERY inh = INHERITEDMEMBERS_DEFAULT) const. DataMember_End(Reflex::EMEMBERQUERY inh = INHERITEDMEMBERS_DEFAULT) const. DataMember_RBegin(Reflex::EMEMBERQUERY inh = INHERITEDMEMBERS_DEFAULT) const. DataMember_REnd(Reflex::EMEMBERQUERY inh = INHERITEDMEMBERS_DEFAULT) const. DeclaringScope() const. FunctionMember_Begin(Reflex::EMEMBERQUERY inh = INHERITEDMEMBERS_DEFAULT) const. FunctionMember_End(Reflex::EMEMBERQUERY inh = INHERITEDMEMBERS_DEFAULT) const. FunctionMember_RBegin(Reflex::EMEMBERQUERY inh = INHERITEDMEMBERS_DEFAULT) const. FunctionMember_REnd(Reflex::EMEMBERQUERY inh = INHERITEDMEMBERS_DEFAULT) const. GlobalScope(). Id() const. IsClass() const. IsEnum() const. IsNamespac,MatchSource.WIKI,root/html534/Reflex__Scope.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__Scope.html
https://root.cern/root/html534/Reflex__Scope.html:14175,Security,access,access,14175,"with the name,; * optionally the signature of the function may be given as a type; * @param name of function member; * @param signature of the member function; * @modifiers_mask When matching, do not compare the listed modifiers; * @return reflection information of the function member. this overloading is unfortunate but I can't include Type.h here. * FunctionMemberSize will return the number of function members of; * this type; * @return number of function members. void GenerateDict(Reflex::DictionaryGenerator& generator) const. * GenerateDict will produce the dictionary information of this type; * @param generator a reference to the dictionary generator instance. bool HasBase(const Reflex::Type& cl) const. * HasBase will check whether this class has a base class given; * as argument; * @param cl the base-class to check for; * @return the Base info if it is found, an empty base otherwise (can be tested for bool). bool IsPrivate() const. * IsPrivate will check if the scope access is private; * @return true if scope access is private. bool IsProtected() const. * IsProtected will check if the scope access is protected; * @return true if scope access is protected. bool IsPublic() const. * IsPublic will check if the scope access is public; * @return true if scope access is public. Member LookupMember(const string& nam) const. * LookupMember will lookup a member in the current scope; * @param nam the string representation of the member to lookup; * @return if a matching member is found return it, otherwise return empty member. Type LookupType(const string& nam) const. * LookupType will lookup a type in the current scope; * @param nam the string representation of the type to lookup; * @return if a matching type is found return it, otherwise return empty type. Scope LookupScope(const string& nam) const. * LookupScope will lookup a scope in the current scope; * @param nam the string representation of the scope to lookup; * @return if a matching scope is found return it, oth",MatchSource.WIKI,root/html534/Reflex__Scope.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__Scope.html
https://root.cern/root/html534/Reflex__Scope.html:14218,Security,access,access,14218,"with the name,; * optionally the signature of the function may be given as a type; * @param name of function member; * @param signature of the member function; * @modifiers_mask When matching, do not compare the listed modifiers; * @return reflection information of the function member. this overloading is unfortunate but I can't include Type.h here. * FunctionMemberSize will return the number of function members of; * this type; * @return number of function members. void GenerateDict(Reflex::DictionaryGenerator& generator) const. * GenerateDict will produce the dictionary information of this type; * @param generator a reference to the dictionary generator instance. bool HasBase(const Reflex::Type& cl) const. * HasBase will check whether this class has a base class given; * as argument; * @param cl the base-class to check for; * @return the Base info if it is found, an empty base otherwise (can be tested for bool). bool IsPrivate() const. * IsPrivate will check if the scope access is private; * @return true if scope access is private. bool IsProtected() const. * IsProtected will check if the scope access is protected; * @return true if scope access is protected. bool IsPublic() const. * IsPublic will check if the scope access is public; * @return true if scope access is public. Member LookupMember(const string& nam) const. * LookupMember will lookup a member in the current scope; * @param nam the string representation of the member to lookup; * @return if a matching member is found return it, otherwise return empty member. Type LookupType(const string& nam) const. * LookupType will lookup a type in the current scope; * @param nam the string representation of the type to lookup; * @return if a matching type is found return it, otherwise return empty type. Scope LookupScope(const string& nam) const. * LookupScope will lookup a scope in the current scope; * @param nam the string representation of the scope to lookup; * @return if a matching scope is found return it, oth",MatchSource.WIKI,root/html534/Reflex__Scope.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__Scope.html
https://root.cern/root/html534/Reflex__Scope.html:14301,Security,access,access,14301,"ignature of the member function; * @modifiers_mask When matching, do not compare the listed modifiers; * @return reflection information of the function member. this overloading is unfortunate but I can't include Type.h here. * FunctionMemberSize will return the number of function members of; * this type; * @return number of function members. void GenerateDict(Reflex::DictionaryGenerator& generator) const. * GenerateDict will produce the dictionary information of this type; * @param generator a reference to the dictionary generator instance. bool HasBase(const Reflex::Type& cl) const. * HasBase will check whether this class has a base class given; * as argument; * @param cl the base-class to check for; * @return the Base info if it is found, an empty base otherwise (can be tested for bool). bool IsPrivate() const. * IsPrivate will check if the scope access is private; * @return true if scope access is private. bool IsProtected() const. * IsProtected will check if the scope access is protected; * @return true if scope access is protected. bool IsPublic() const. * IsPublic will check if the scope access is public; * @return true if scope access is public. Member LookupMember(const string& nam) const. * LookupMember will lookup a member in the current scope; * @param nam the string representation of the member to lookup; * @return if a matching member is found return it, otherwise return empty member. Type LookupType(const string& nam) const. * LookupType will lookup a type in the current scope; * @param nam the string representation of the type to lookup; * @return if a matching type is found return it, otherwise return empty type. Scope LookupScope(const string& nam) const. * LookupScope will lookup a scope in the current scope; * @param nam the string representation of the scope to lookup; * @return if a matching scope is found return it, otherwise return empty scope. Member MemberAt(size_t nth, Reflex::EMEMBERQUERY inh = INHERITEDMEMBERS_DEFAULT) const. * MemberAt w",MatchSource.WIKI,root/html534/Reflex__Scope.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__Scope.html
https://root.cern/root/html534/Reflex__Scope.html:14346,Security,access,access,14346,"ignature of the member function; * @modifiers_mask When matching, do not compare the listed modifiers; * @return reflection information of the function member. this overloading is unfortunate but I can't include Type.h here. * FunctionMemberSize will return the number of function members of; * this type; * @return number of function members. void GenerateDict(Reflex::DictionaryGenerator& generator) const. * GenerateDict will produce the dictionary information of this type; * @param generator a reference to the dictionary generator instance. bool HasBase(const Reflex::Type& cl) const. * HasBase will check whether this class has a base class given; * as argument; * @param cl the base-class to check for; * @return the Base info if it is found, an empty base otherwise (can be tested for bool). bool IsPrivate() const. * IsPrivate will check if the scope access is private; * @return true if scope access is private. bool IsProtected() const. * IsProtected will check if the scope access is protected; * @return true if scope access is protected. bool IsPublic() const. * IsPublic will check if the scope access is public; * @return true if scope access is public. Member LookupMember(const string& nam) const. * LookupMember will lookup a member in the current scope; * @param nam the string representation of the member to lookup; * @return if a matching member is found return it, otherwise return empty member. Type LookupType(const string& nam) const. * LookupType will lookup a type in the current scope; * @param nam the string representation of the type to lookup; * @return if a matching type is found return it, otherwise return empty type. Scope LookupScope(const string& nam) const. * LookupScope will lookup a scope in the current scope; * @param nam the string representation of the scope to lookup; * @return if a matching scope is found return it, otherwise return empty scope. Member MemberAt(size_t nth, Reflex::EMEMBERQUERY inh = INHERITEDMEMBERS_DEFAULT) const. * MemberAt w",MatchSource.WIKI,root/html534/Reflex__Scope.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__Scope.html
https://root.cern/root/html534/Reflex__Scope.html:14425,Security,access,access,14425,"n information of the function member. this overloading is unfortunate but I can't include Type.h here. * FunctionMemberSize will return the number of function members of; * this type; * @return number of function members. void GenerateDict(Reflex::DictionaryGenerator& generator) const. * GenerateDict will produce the dictionary information of this type; * @param generator a reference to the dictionary generator instance. bool HasBase(const Reflex::Type& cl) const. * HasBase will check whether this class has a base class given; * as argument; * @param cl the base-class to check for; * @return the Base info if it is found, an empty base otherwise (can be tested for bool). bool IsPrivate() const. * IsPrivate will check if the scope access is private; * @return true if scope access is private. bool IsProtected() const. * IsProtected will check if the scope access is protected; * @return true if scope access is protected. bool IsPublic() const. * IsPublic will check if the scope access is public; * @return true if scope access is public. Member LookupMember(const string& nam) const. * LookupMember will lookup a member in the current scope; * @param nam the string representation of the member to lookup; * @return if a matching member is found return it, otherwise return empty member. Type LookupType(const string& nam) const. * LookupType will lookup a type in the current scope; * @param nam the string representation of the type to lookup; * @return if a matching type is found return it, otherwise return empty type. Scope LookupScope(const string& nam) const. * LookupScope will lookup a scope in the current scope; * @param nam the string representation of the scope to lookup; * @return if a matching scope is found return it, otherwise return empty scope. Member MemberAt(size_t nth, Reflex::EMEMBERQUERY inh = INHERITEDMEMBERS_DEFAULT) const. * MemberAt will return the nth member of the type; * @param nth member; * @return reflection information nth member. Member MemberByNam",MatchSource.WIKI,root/html534/Reflex__Scope.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__Scope.html
https://root.cern/root/html534/Reflex__Scope.html:14467,Security,access,access,14467,"n information of the function member. this overloading is unfortunate but I can't include Type.h here. * FunctionMemberSize will return the number of function members of; * this type; * @return number of function members. void GenerateDict(Reflex::DictionaryGenerator& generator) const. * GenerateDict will produce the dictionary information of this type; * @param generator a reference to the dictionary generator instance. bool HasBase(const Reflex::Type& cl) const. * HasBase will check whether this class has a base class given; * as argument; * @param cl the base-class to check for; * @return the Base info if it is found, an empty base otherwise (can be tested for bool). bool IsPrivate() const. * IsPrivate will check if the scope access is private; * @return true if scope access is private. bool IsProtected() const. * IsProtected will check if the scope access is protected; * @return true if scope access is protected. bool IsPublic() const. * IsPublic will check if the scope access is public; * @return true if scope access is public. Member LookupMember(const string& nam) const. * LookupMember will lookup a member in the current scope; * @param nam the string representation of the member to lookup; * @return if a matching member is found return it, otherwise return empty member. Type LookupType(const string& nam) const. * LookupType will lookup a type in the current scope; * @param nam the string representation of the type to lookup; * @return if a matching type is found return it, otherwise return empty type. Scope LookupScope(const string& nam) const. * LookupScope will lookup a scope in the current scope; * @param nam the string representation of the scope to lookup; * @return if a matching scope is found return it, otherwise return empty scope. Member MemberAt(size_t nth, Reflex::EMEMBERQUERY inh = INHERITEDMEMBERS_DEFAULT) const. * MemberAt will return the nth member of the type; * @param nth member; * @return reflection information nth member. Member MemberByNam",MatchSource.WIKI,root/html534/Reflex__Scope.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__Scope.html
https://root.cern/root/html534/Reflex__Scope.html:831,Testability,Stub,StubFunction,831," ~Scope(); static Reflex::Scope&__NIRVANA__(); voidAddBase(const Reflex::Base& b) const; voidAddBase(const Reflex::Type& bas, Reflex::OffsetFunction offsFP, unsigned int modifiers = 0) const; voidAddDataMember(const Reflex::Member& dm) const; Reflex::MemberAddDataMember(const char* name, const Reflex::Type& type, size_t offset, unsigned int modifiers = 0, char* interpreterOffset = 0) const; voidAddFunctionMember(const Reflex::Member& fm) const; Reflex::MemberAddFunctionMember(const char* name, const Reflex::Type& type, Reflex::StubFunction stubFP, void* stubCtx = 0, const char* params = 0, unsigned int modifiers = 0) const; voidAddMemberTemplate(const Reflex::MemberTemplate& mt) const; voidAddSubScope(const Reflex::Scope& sc) const; voidAddSubScope(const char* scope, Reflex::TYPE scopeType = NAMESPACE) const; voidAddSubType(const Reflex::Type& ty) const; voidAddSubType(const char* type, size_t size, Reflex::TYPE typeType, const type_info& typeInfo, unsigned int modifiers = 0) const; voidAddSubTypeTemplate(const Reflex::TypeTemplate& mt) const; voidAddUsingDirective(const Reflex::Scope& ud) const; Reflex::Base_IteratorBase_Begin() const; Reflex::Base_IteratorBase_End() const; Reflex::Reverse_Base_IteratorBase_RBegin() const; Reflex::Reverse_Base_IteratorBase_REnd() const; Reflex::BaseBaseAt(size_t nth) const; size_tBaseSize() const; static Reflex::ScopeByName(const string& name); Reflex::Member_IteratorDataMember_Begin(Reflex::EMEMBERQUERY inh = INHERITEDMEMBERS_DEFAULT) const; Reflex::Member_IteratorDataMember_End(Reflex::EMEMBERQUERY inh = INHERITEDMEMBERS_DEFAULT) const; Reflex::Reverse_Member_IteratorDataMember_RBegin(Reflex::EMEMBERQUERY inh = INHERITEDMEMBERS_DEFAULT) c",MatchSource.WIKI,root/html534/Reflex__Scope.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__Scope.html
https://root.cern/root/html534/Reflex__Scope.html:844,Testability,stub,stubFP,844," ~Scope(); static Reflex::Scope&__NIRVANA__(); voidAddBase(const Reflex::Base& b) const; voidAddBase(const Reflex::Type& bas, Reflex::OffsetFunction offsFP, unsigned int modifiers = 0) const; voidAddDataMember(const Reflex::Member& dm) const; Reflex::MemberAddDataMember(const char* name, const Reflex::Type& type, size_t offset, unsigned int modifiers = 0, char* interpreterOffset = 0) const; voidAddFunctionMember(const Reflex::Member& fm) const; Reflex::MemberAddFunctionMember(const char* name, const Reflex::Type& type, Reflex::StubFunction stubFP, void* stubCtx = 0, const char* params = 0, unsigned int modifiers = 0) const; voidAddMemberTemplate(const Reflex::MemberTemplate& mt) const; voidAddSubScope(const Reflex::Scope& sc) const; voidAddSubScope(const char* scope, Reflex::TYPE scopeType = NAMESPACE) const; voidAddSubType(const Reflex::Type& ty) const; voidAddSubType(const char* type, size_t size, Reflex::TYPE typeType, const type_info& typeInfo, unsigned int modifiers = 0) const; voidAddSubTypeTemplate(const Reflex::TypeTemplate& mt) const; voidAddUsingDirective(const Reflex::Scope& ud) const; Reflex::Base_IteratorBase_Begin() const; Reflex::Base_IteratorBase_End() const; Reflex::Reverse_Base_IteratorBase_RBegin() const; Reflex::Reverse_Base_IteratorBase_REnd() const; Reflex::BaseBaseAt(size_t nth) const; size_tBaseSize() const; static Reflex::ScopeByName(const string& name); Reflex::Member_IteratorDataMember_Begin(Reflex::EMEMBERQUERY inh = INHERITEDMEMBERS_DEFAULT) const; Reflex::Member_IteratorDataMember_End(Reflex::EMEMBERQUERY inh = INHERITEDMEMBERS_DEFAULT) const; Reflex::Reverse_Member_IteratorDataMember_RBegin(Reflex::EMEMBERQUERY inh = INHERITEDMEMBERS_DEFAULT) c",MatchSource.WIKI,root/html534/Reflex__Scope.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__Scope.html
https://root.cern/root/html534/Reflex__Scope.html:858,Testability,stub,stubCtx,858," ~Scope(); static Reflex::Scope&__NIRVANA__(); voidAddBase(const Reflex::Base& b) const; voidAddBase(const Reflex::Type& bas, Reflex::OffsetFunction offsFP, unsigned int modifiers = 0) const; voidAddDataMember(const Reflex::Member& dm) const; Reflex::MemberAddDataMember(const char* name, const Reflex::Type& type, size_t offset, unsigned int modifiers = 0, char* interpreterOffset = 0) const; voidAddFunctionMember(const Reflex::Member& fm) const; Reflex::MemberAddFunctionMember(const char* name, const Reflex::Type& type, Reflex::StubFunction stubFP, void* stubCtx = 0, const char* params = 0, unsigned int modifiers = 0) const; voidAddMemberTemplate(const Reflex::MemberTemplate& mt) const; voidAddSubScope(const Reflex::Scope& sc) const; voidAddSubScope(const char* scope, Reflex::TYPE scopeType = NAMESPACE) const; voidAddSubType(const Reflex::Type& ty) const; voidAddSubType(const char* type, size_t size, Reflex::TYPE typeType, const type_info& typeInfo, unsigned int modifiers = 0) const; voidAddSubTypeTemplate(const Reflex::TypeTemplate& mt) const; voidAddUsingDirective(const Reflex::Scope& ud) const; Reflex::Base_IteratorBase_Begin() const; Reflex::Base_IteratorBase_End() const; Reflex::Reverse_Base_IteratorBase_RBegin() const; Reflex::Reverse_Base_IteratorBase_REnd() const; Reflex::BaseBaseAt(size_t nth) const; size_tBaseSize() const; static Reflex::ScopeByName(const string& name); Reflex::Member_IteratorDataMember_Begin(Reflex::EMEMBERQUERY inh = INHERITEDMEMBERS_DEFAULT) const; Reflex::Member_IteratorDataMember_End(Reflex::EMEMBERQUERY inh = INHERITEDMEMBERS_DEFAULT) const; Reflex::Reverse_Member_IteratorDataMember_RBegin(Reflex::EMEMBERQUERY inh = INHERITEDMEMBERS_DEFAULT) c",MatchSource.WIKI,root/html534/Reflex__Scope.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__Scope.html
https://root.cern/root/html534/Reflex__Scope.html:14097,Testability,test,tested,14097," but I can't include Type.h here. size_t FunctionMemberSize(Reflex::EMEMBERQUERY inh = INHERITEDMEMBERS_DEFAULT) const. * FunctionMemberByNameAndSignature will return the member with the name,; * optionally the signature of the function may be given as a type; * @param name of function member; * @param signature of the member function; * @modifiers_mask When matching, do not compare the listed modifiers; * @return reflection information of the function member. this overloading is unfortunate but I can't include Type.h here. * FunctionMemberSize will return the number of function members of; * this type; * @return number of function members. void GenerateDict(Reflex::DictionaryGenerator& generator) const. * GenerateDict will produce the dictionary information of this type; * @param generator a reference to the dictionary generator instance. bool HasBase(const Reflex::Type& cl) const. * HasBase will check whether this class has a base class given; * as argument; * @param cl the base-class to check for; * @return the Base info if it is found, an empty base otherwise (can be tested for bool). bool IsPrivate() const. * IsPrivate will check if the scope access is private; * @return true if scope access is private. bool IsProtected() const. * IsProtected will check if the scope access is protected; * @return true if scope access is protected. bool IsPublic() const. * IsPublic will check if the scope access is public; * @return true if scope access is public. Member LookupMember(const string& nam) const. * LookupMember will lookup a member in the current scope; * @param nam the string representation of the member to lookup; * @return if a matching member is found return it, otherwise return empty member. Type LookupType(const string& nam) const. * LookupType will lookup a type in the current scope; * @param nam the string representation of the type to lookup; * @return if a matching type is found return it, otherwise return empty type. Scope LookupScope(const string& nam) c",MatchSource.WIKI,root/html534/Reflex__Scope.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__Scope.html
https://root.cern/root/html534/Reflex__Scope.html:21267,Testability,Stub,StubFunction,21267,"te if any; * @return corresponding TypeTemplate. void Unload() const. * Unload will unload the dictionary information of a scope. void UpdateMembers() const. * UpdateMembers will update the list of Function/Data/Members with all; * members of base classes currently availabe in the system, switching; * INHERITEDMEMBERS_DEFAULT to INHERITEDMEMBERS_ALSO. void AddDataMember(const Reflex::Member& dm) const. * AddDataMember will add the information about a data member; * @param dm data member to add. Member AddDataMember(const char* name, const Reflex::Type& type, size_t offset, unsigned int modifiers = 0, char* interpreterOffset = 0) const. * AddDataMember will add the information about a data member; * @param nam the name of the data member; * @param typ the type of the data member; * @param offs the offset of the data member relative to the beginning of the scope; * @param modifiers of the data member. Member AddFunctionMember(const char* name, const Reflex::Type& type, Reflex::StubFunction stubFP, void* stubCtx = 0, const char* params = 0, unsigned int modifiers = 0) const. * AddFunctionMember will add the information about a function member; * @param fm function member to add. * AddFunctionMember will add the information about a function member; * @param nam the name of the function member; * @param typ the type of the function member; * @param stubFP a pointer to the stub function; * @param stubCtx a pointer to the context of the function member; * @param params a semi colon separated list of parameters; * @param modifiers of the function member. void AddSubType(const Reflex::Type& ty) const. * AddSubType will add a sub type to this type; * @param ty sub type to add. void AddSubType(const char* type, size_t size, Reflex::TYPE typeType, const type_info& typeInfo, unsigned int modifiers = 0) const. * AddSubType will add a sub type to this type; * @param typ the name of the sub type; * @param size the sizeof of the sub type; * @param typeType the enum specifying the su",MatchSource.WIKI,root/html534/Reflex__Scope.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__Scope.html
https://root.cern/root/html534/Reflex__Scope.html:21280,Testability,stub,stubFP,21280,"te if any; * @return corresponding TypeTemplate. void Unload() const. * Unload will unload the dictionary information of a scope. void UpdateMembers() const. * UpdateMembers will update the list of Function/Data/Members with all; * members of base classes currently availabe in the system, switching; * INHERITEDMEMBERS_DEFAULT to INHERITEDMEMBERS_ALSO. void AddDataMember(const Reflex::Member& dm) const. * AddDataMember will add the information about a data member; * @param dm data member to add. Member AddDataMember(const char* name, const Reflex::Type& type, size_t offset, unsigned int modifiers = 0, char* interpreterOffset = 0) const. * AddDataMember will add the information about a data member; * @param nam the name of the data member; * @param typ the type of the data member; * @param offs the offset of the data member relative to the beginning of the scope; * @param modifiers of the data member. Member AddFunctionMember(const char* name, const Reflex::Type& type, Reflex::StubFunction stubFP, void* stubCtx = 0, const char* params = 0, unsigned int modifiers = 0) const. * AddFunctionMember will add the information about a function member; * @param fm function member to add. * AddFunctionMember will add the information about a function member; * @param nam the name of the function member; * @param typ the type of the function member; * @param stubFP a pointer to the stub function; * @param stubCtx a pointer to the context of the function member; * @param params a semi colon separated list of parameters; * @param modifiers of the function member. void AddSubType(const Reflex::Type& ty) const. * AddSubType will add a sub type to this type; * @param ty sub type to add. void AddSubType(const char* type, size_t size, Reflex::TYPE typeType, const type_info& typeInfo, unsigned int modifiers = 0) const. * AddSubType will add a sub type to this type; * @param typ the name of the sub type; * @param size the sizeof of the sub type; * @param typeType the enum specifying the su",MatchSource.WIKI,root/html534/Reflex__Scope.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__Scope.html
https://root.cern/root/html534/Reflex__Scope.html:21294,Testability,stub,stubCtx,21294,"te if any; * @return corresponding TypeTemplate. void Unload() const. * Unload will unload the dictionary information of a scope. void UpdateMembers() const. * UpdateMembers will update the list of Function/Data/Members with all; * members of base classes currently availabe in the system, switching; * INHERITEDMEMBERS_DEFAULT to INHERITEDMEMBERS_ALSO. void AddDataMember(const Reflex::Member& dm) const. * AddDataMember will add the information about a data member; * @param dm data member to add. Member AddDataMember(const char* name, const Reflex::Type& type, size_t offset, unsigned int modifiers = 0, char* interpreterOffset = 0) const. * AddDataMember will add the information about a data member; * @param nam the name of the data member; * @param typ the type of the data member; * @param offs the offset of the data member relative to the beginning of the scope; * @param modifiers of the data member. Member AddFunctionMember(const char* name, const Reflex::Type& type, Reflex::StubFunction stubFP, void* stubCtx = 0, const char* params = 0, unsigned int modifiers = 0) const. * AddFunctionMember will add the information about a function member; * @param fm function member to add. * AddFunctionMember will add the information about a function member; * @param nam the name of the function member; * @param typ the type of the function member; * @param stubFP a pointer to the stub function; * @param stubCtx a pointer to the context of the function member; * @param params a semi colon separated list of parameters; * @param modifiers of the function member. void AddSubType(const Reflex::Type& ty) const. * AddSubType will add a sub type to this type; * @param ty sub type to add. void AddSubType(const char* type, size_t size, Reflex::TYPE typeType, const type_info& typeInfo, unsigned int modifiers = 0) const. * AddSubType will add a sub type to this type; * @param typ the name of the sub type; * @param size the sizeof of the sub type; * @param typeType the enum specifying the su",MatchSource.WIKI,root/html534/Reflex__Scope.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__Scope.html
https://root.cern/root/html534/Reflex__Scope.html:21643,Testability,stub,stubFP,21643,"ex::Member& dm) const. * AddDataMember will add the information about a data member; * @param dm data member to add. Member AddDataMember(const char* name, const Reflex::Type& type, size_t offset, unsigned int modifiers = 0, char* interpreterOffset = 0) const. * AddDataMember will add the information about a data member; * @param nam the name of the data member; * @param typ the type of the data member; * @param offs the offset of the data member relative to the beginning of the scope; * @param modifiers of the data member. Member AddFunctionMember(const char* name, const Reflex::Type& type, Reflex::StubFunction stubFP, void* stubCtx = 0, const char* params = 0, unsigned int modifiers = 0) const. * AddFunctionMember will add the information about a function member; * @param fm function member to add. * AddFunctionMember will add the information about a function member; * @param nam the name of the function member; * @param typ the type of the function member; * @param stubFP a pointer to the stub function; * @param stubCtx a pointer to the context of the function member; * @param params a semi colon separated list of parameters; * @param modifiers of the function member. void AddSubType(const Reflex::Type& ty) const. * AddSubType will add a sub type to this type; * @param ty sub type to add. void AddSubType(const char* type, size_t size, Reflex::TYPE typeType, const type_info& typeInfo, unsigned int modifiers = 0) const. * AddSubType will add a sub type to this type; * @param typ the name of the sub type; * @param size the sizeof of the sub type; * @param typeType the enum specifying the sub type; * @param ti the type_info of the sub type; * @param modifiers of the sub type. void RemoveDataMember(const Reflex::Member& dm) const. * RemoveDataMember will remove the information about a data member; * @param dm data member to remove. void RemoveFunctionMember(const Reflex::Member& fm) const. * RemoveFunctionMember will remove the information about a function member; * @",MatchSource.WIKI,root/html534/Reflex__Scope.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__Scope.html
https://root.cern/root/html534/Reflex__Scope.html:21667,Testability,stub,stub,21667,"ex::Member& dm) const. * AddDataMember will add the information about a data member; * @param dm data member to add. Member AddDataMember(const char* name, const Reflex::Type& type, size_t offset, unsigned int modifiers = 0, char* interpreterOffset = 0) const. * AddDataMember will add the information about a data member; * @param nam the name of the data member; * @param typ the type of the data member; * @param offs the offset of the data member relative to the beginning of the scope; * @param modifiers of the data member. Member AddFunctionMember(const char* name, const Reflex::Type& type, Reflex::StubFunction stubFP, void* stubCtx = 0, const char* params = 0, unsigned int modifiers = 0) const. * AddFunctionMember will add the information about a function member; * @param fm function member to add. * AddFunctionMember will add the information about a function member; * @param nam the name of the function member; * @param typ the type of the function member; * @param stubFP a pointer to the stub function; * @param stubCtx a pointer to the context of the function member; * @param params a semi colon separated list of parameters; * @param modifiers of the function member. void AddSubType(const Reflex::Type& ty) const. * AddSubType will add a sub type to this type; * @param ty sub type to add. void AddSubType(const char* type, size_t size, Reflex::TYPE typeType, const type_info& typeInfo, unsigned int modifiers = 0) const. * AddSubType will add a sub type to this type; * @param typ the name of the sub type; * @param size the sizeof of the sub type; * @param typeType the enum specifying the sub type; * @param ti the type_info of the sub type; * @param modifiers of the sub type. void RemoveDataMember(const Reflex::Member& dm) const. * RemoveDataMember will remove the information about a data member; * @param dm data member to remove. void RemoveFunctionMember(const Reflex::Member& fm) const. * RemoveFunctionMember will remove the information about a function member; * @",MatchSource.WIKI,root/html534/Reflex__Scope.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__Scope.html
https://root.cern/root/html534/Reflex__Scope.html:21691,Testability,stub,stubCtx,21691,"ex::Member& dm) const. * AddDataMember will add the information about a data member; * @param dm data member to add. Member AddDataMember(const char* name, const Reflex::Type& type, size_t offset, unsigned int modifiers = 0, char* interpreterOffset = 0) const. * AddDataMember will add the information about a data member; * @param nam the name of the data member; * @param typ the type of the data member; * @param offs the offset of the data member relative to the beginning of the scope; * @param modifiers of the data member. Member AddFunctionMember(const char* name, const Reflex::Type& type, Reflex::StubFunction stubFP, void* stubCtx = 0, const char* params = 0, unsigned int modifiers = 0) const. * AddFunctionMember will add the information about a function member; * @param fm function member to add. * AddFunctionMember will add the information about a function member; * @param nam the name of the function member; * @param typ the type of the function member; * @param stubFP a pointer to the stub function; * @param stubCtx a pointer to the context of the function member; * @param params a semi colon separated list of parameters; * @param modifiers of the function member. void AddSubType(const Reflex::Type& ty) const. * AddSubType will add a sub type to this type; * @param ty sub type to add. void AddSubType(const char* type, size_t size, Reflex::TYPE typeType, const type_info& typeInfo, unsigned int modifiers = 0) const. * AddSubType will add a sub type to this type; * @param typ the name of the sub type; * @param size the sizeof of the sub type; * @param typeType the enum specifying the sub type; * @param ti the type_info of the sub type; * @param modifiers of the sub type. void RemoveDataMember(const Reflex::Member& dm) const. * RemoveDataMember will remove the information about a data member; * @param dm data member to remove. void RemoveFunctionMember(const Reflex::Member& fm) const. * RemoveFunctionMember will remove the information about a function member; * @",MatchSource.WIKI,root/html534/Reflex__Scope.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__Scope.html
https://root.cern/root/html534/Reflex__Selection__AUTOSELECT.html:577,Modifiability,Inherit,Inheritance,577,. Reflex::Selection::AUTOSELECT. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::Selection::AUTOSELECT. class Reflex::Selection::AUTOSELECT. Function Members (Methods); public:. ~AUTOSELECT(); Reflex::Selection::AUTOSELECTAUTOSELECT(); Reflex::Selection::AUTOSELECTAUTOSELECT(const Reflex::Selection::AUTOSELECT&); Reflex::Selection::AUTOSELECT&operator=(const Reflex::Selection::AUTOSELECT&). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ,MatchSource.WIKI,root/html534/Reflex__Selection__AUTOSELECT.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__Selection__AUTOSELECT.html
https://root.cern/root/html534/Reflex__Selection__AUTOSELECT.html:590,Modifiability,Inherit,Inherited,590,. Reflex::Selection::AUTOSELECT. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::Selection::AUTOSELECT. class Reflex::Selection::AUTOSELECT. Function Members (Methods); public:. ~AUTOSELECT(); Reflex::Selection::AUTOSELECTAUTOSELECT(); Reflex::Selection::AUTOSELECTAUTOSELECT(const Reflex::Selection::AUTOSELECT&); Reflex::Selection::AUTOSELECT&operator=(const Reflex::Selection::AUTOSELECT&). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ,MatchSource.WIKI,root/html534/Reflex__Selection__AUTOSELECT.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__Selection__AUTOSELECT.html
https://root.cern/root/html534/Reflex__Selection__NODEFAULT.html:566,Modifiability,Inherit,Inheritance,566,. Reflex::Selection::NODEFAULT. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::Selection::NODEFAULT. class Reflex::Selection::NODEFAULT. Function Members (Methods); public:. ~NODEFAULT(); Reflex::Selection::NODEFAULTNODEFAULT(); Reflex::Selection::NODEFAULTNODEFAULT(const Reflex::Selection::NODEFAULT&); Reflex::Selection::NODEFAULT&operator=(const Reflex::Selection::NODEFAULT&). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ,MatchSource.WIKI,root/html534/Reflex__Selection__NODEFAULT.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__Selection__NODEFAULT.html
https://root.cern/root/html534/Reflex__Selection__NODEFAULT.html:579,Modifiability,Inherit,Inherited,579,. Reflex::Selection::NODEFAULT. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::Selection::NODEFAULT. class Reflex::Selection::NODEFAULT. Function Members (Methods); public:. ~NODEFAULT(); Reflex::Selection::NODEFAULTNODEFAULT(); Reflex::Selection::NODEFAULTNODEFAULT(const Reflex::Selection::NODEFAULT&); Reflex::Selection::NODEFAULT&operator=(const Reflex::Selection::NODEFAULT&). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ,MatchSource.WIKI,root/html534/Reflex__Selection__NODEFAULT.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__Selection__NODEFAULT.html
https://root.cern/root/html534/Reflex__Selection__NO_SELF_AUTOSELECT.html:665,Modifiability,Inherit,Inheritance,665,. Reflex::Selection::NO_SELF_AUTOSELECT. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::Selection::NO_SELF_AUTOSELECT. class Reflex::Selection::NO_SELF_AUTOSELECT. Function Members (Methods); public:. ~NO_SELF_AUTOSELECT(); Reflex::Selection::NO_SELF_AUTOSELECTNO_SELF_AUTOSELECT(); Reflex::Selection::NO_SELF_AUTOSELECTNO_SELF_AUTOSELECT(const Reflex::Selection::NO_SELF_AUTOSELECT&); Reflex::Selection::NO_SELF_AUTOSELECT&operator=(const Reflex::Selection::NO_SELF_AUTOSELECT&). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ,MatchSource.WIKI,root/html534/Reflex__Selection__NO_SELF_AUTOSELECT.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__Selection__NO_SELF_AUTOSELECT.html
https://root.cern/root/html534/Reflex__Selection__NO_SELF_AUTOSELECT.html:678,Modifiability,Inherit,Inherited,678,. Reflex::Selection::NO_SELF_AUTOSELECT. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::Selection::NO_SELF_AUTOSELECT. class Reflex::Selection::NO_SELF_AUTOSELECT. Function Members (Methods); public:. ~NO_SELF_AUTOSELECT(); Reflex::Selection::NO_SELF_AUTOSELECTNO_SELF_AUTOSELECT(); Reflex::Selection::NO_SELF_AUTOSELECTNO_SELF_AUTOSELECT(const Reflex::Selection::NO_SELF_AUTOSELECT&); Reflex::Selection::NO_SELF_AUTOSELECT&operator=(const Reflex::Selection::NO_SELF_AUTOSELECT&). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ,MatchSource.WIKI,root/html534/Reflex__Selection__NO_SELF_AUTOSELECT.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__Selection__NO_SELF_AUTOSELECT.html
https://root.cern/root/html534/Reflex__Selection__TRANSIENT.html:566,Modifiability,Inherit,Inheritance,566,. Reflex::Selection::TRANSIENT. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::Selection::TRANSIENT. class Reflex::Selection::TRANSIENT. Function Members (Methods); public:. ~TRANSIENT(); Reflex::Selection::TRANSIENT&operator=(const Reflex::Selection::TRANSIENT&); Reflex::Selection::TRANSIENTTRANSIENT(); Reflex::Selection::TRANSIENTTRANSIENT(const Reflex::Selection::TRANSIENT&). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ,MatchSource.WIKI,root/html534/Reflex__Selection__TRANSIENT.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__Selection__TRANSIENT.html
https://root.cern/root/html534/Reflex__Selection__TRANSIENT.html:579,Modifiability,Inherit,Inherited,579,. Reflex::Selection::TRANSIENT. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::Selection::TRANSIENT. class Reflex::Selection::TRANSIENT. Function Members (Methods); public:. ~TRANSIENT(); Reflex::Selection::TRANSIENT&operator=(const Reflex::Selection::TRANSIENT&); Reflex::Selection::TRANSIENTTRANSIENT(); Reflex::Selection::TRANSIENTTRANSIENT(const Reflex::Selection::TRANSIENT&). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ,MatchSource.WIKI,root/html534/Reflex__Selection__TRANSIENT.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__Selection__TRANSIENT.html
https://root.cern/root/html534/Reflex__Tools.html:1772,Integrability,rout,routines,1772,"r* name); voidGetTemplateComponents(const string& Name, string& templatename, vector<std::string>& args); stringGetTemplateName(const char* name); boolIsTemplated(const char* name); stringNormalizeName(const string& name); stringNormalizeName(const char* name); voidStringSplit(vector<std::string>& splitValues, const string& str, const string& delim = "",""); voidStringSplitPair(string& val1, string& val2, const string& str, const string& delim = "",""); voidStringStrip(string& str); stringStringVec2String(const vector<std::string>& vec). Class Charts; Function documentation; RFLX_API EFUNDAMENTALTYPE FundamentalType(const Reflex::Type& typ). * GetFundamentalType will return an enum representing the; * fundamental type which was passed in, or NOFUNDAMENTALTYPE; * @param typ the type passed into the system; * @return enum representing kind of fundamental type. RFLX_API std::string Demangle(const type_info& ti). * Demangle will call the internal demangling routines and; * return the demangled string of a At; * @param ti the mangled At string; * @return the demangled string. RFLX_API void StringSplit(vector<std::string>& splitValues, const string& str, const string& delim = "",""). * StringSplit will return a vector of split strings; * @param splitValues returns the vector with split strings; * @param str the input string; * @param delim the delimiter on which to split. RFLX_API void StringStrip(string& str). * StringSplitPair will return two values which are split; * @param val1 returns the first value; * @param val2 returns the second value; * @param str the string to be split; * @param delim the delimiter on which to split. * StringStrip will strip off Empty spaces of a string; * @param str a reference to a string to be stripped. RFLX_API std::string StringVec2String(const vector<std::string>& vec). * StringVec2String will take a vector of strings and return the; * vector containees concatenated by commas; * @param vec the vector to be converted; * @return string of comma c",MatchSource.WIKI,root/html534/Reflex__Tools.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__Tools.html
https://root.cern/root/html534/Reflex__Type.html:8621,Availability,MASK,MASK,8621,"ex::Reverse_Type_IteratorTemplateArgument_RBegin() const; Reflex::Reverse_Type_IteratorTemplateArgument_REnd() const; Reflex::TypeTemplateArgumentAt(size_t nth) const; size_tTemplateArgumentSize() const; Reflex::TypeTemplateTemplateFamily() const; Reflex::TypeToType() const; const Reflex::TypeBase*ToTypeBase() const; Reflex::TypeType(const Reflex::Type& rh); Reflex::TypeType(const Reflex::TypeName* typName = 0, unsigned int modifiers = 0); Reflex::TypeType(const Reflex::Type& rh, unsigned int modifiers, Reflex::Type::TYPE_MODIFICATION operation = REPLACE); static Reflex::Type_IteratorType_Begin(); static Reflex::Type_IteratorType_End(); static Reflex::Reverse_Type_IteratorType_RBegin(); static Reflex::Reverse_Type_IteratorType_REnd(); static Reflex::TypeTypeAt(size_t nth); const type_info&TypeInfo() const; static size_tTypeSize(); Reflex::TYPETypeType() const; stringTypeTypeAsString() const; voidUnload() const; voidUpdateMembers() const. Data Members; public:. enum TYPE_MODIFICATION { REPLACE; APPEND; MASK; };. private:. unsigned intfModifiers; const Reflex::TypeName*fTypeName. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RepresType() const. operator bool() const. inline Type(const Reflex::TypeName* typName = 0, unsigned int modifiers = 0). inline Type(const Reflex::Type& rh). inline Type(const Reflex::Type& rh, unsigned int modifiers, Reflex::Type::TYPE_MODIFICATION operation = REPLACE). inline ~Type(). Allocate() const. BaseSize() const. Base_Begin() const. Base_End() const. Base_RBegin() const. Base_REnd() const. DataMemberSize(Reflex::EMEMBERQUERY inh = INHERITEDMEMBERS_DEFAULT) const. DataMember_Begin(Reflex::EMEMBERQUERY inh = INHERITEDMEMBERS_DEFAULT) const. DataMember_End(Reflex::EMEMBERQUERY inh = INHERITEDMEMBERS_DEFAULT) const. DataMember_RBegin(Reflex::EMEMBERQUERY inh = INHERITEDMEMBERS_DEFAULT) const. DataMember_REnd(Reflex::EMEMBERQUERY inh = INHERITEDMEMBERS_DEFAULT) const. Deallocate(void* instance) cons",MatchSource.WIKI,root/html534/Reflex__Type.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__Type.html
https://root.cern/root/html534/Reflex__Type.html:12017,Deployability,Update,UpdateMembers,12017," MemberTemplate_RBegin() const. MemberTemplate_REnd() const. Name_c_str() const. FunctionParameterAt(size_t nth) const. FunctionParameterSize() const. FunctionParameter_Begin() const. FunctionParameter_End() const. FunctionParameter_RBegin() const. FunctionParameter_REnd() const. Properties() const. RawType() const. ReturnType() const. SubScope_Begin() const. SubScope_End() const. SubScope_RBegin() const. SubScope_REnd() const. SizeOf() const. SubScopeSize() const. SubTypeSize() const. SubType_Begin() const. SubType_End() const. SubType_RBegin() const. SubType_REnd() const. TemplateArgument_Begin() const. TemplateArgument_End() const. TemplateArgument_RBegin() const. TemplateArgument_REnd() const. ToType() const. Type_Begin(). Type_End(). Type_RBegin(). Type_REnd(). TypeInfo() const. SubTypeTemplateSize() const. SubTypeTemplate_Begin() const. SubTypeTemplate_End() const. SubTypeTemplate_RBegin() const. SubTypeTemplate_REnd() const. TypeType() const. TypeTypeAsString() const. UpdateMembers() const. TemplateArgumentAt(size_t nth) const. TemplateArgumentSize() const. TemplateFamily() const. ToTypeBase() const. AddBase(const Reflex::Type& bas, Reflex::OffsetFunction offsFP, unsigned int modifiers = 0) const. AddBase(const Reflex::Base& b) const. AddDataMember(const Reflex::Member& dm) const. AddFunctionMember(const Reflex::Member& fm) const. AddSubScope(const Reflex::Scope& sc) const. AddSubScope(const char* scop, Reflex::TYPE scopeTyp = NAMESPACE) const. AddSubType(const Reflex::Type& ty) const. AddSubType(const char* typ, size_t size, Reflex::TYPE typeTyp, const type_info& ti, unsigned int modifiers = 0) const. RemoveDataMember(const Reflex::Member& dm) const. RemoveFunctionMember(const Reflex::Member& fm) const. RemoveSubScope(const Reflex::Scope& sc) const. RemoveSubType(const Reflex::Type& ty) const. SetSize(size_t s) const. SetTypeInfo(const type_info& ti) const. Base BaseAt(size_t nth) const. * BaseAt will return the nth base class information; * @param nth base c",MatchSource.WIKI,root/html534/Reflex__Type.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__Type.html
https://root.cern/root/html534/Reflex__Type.html:1182,Energy Efficiency,Allocate,Allocate,1182," ~Type(); voidAddBase(const Reflex::Base& b) const; voidAddBase(const Reflex::Type& bas, Reflex::OffsetFunction offsFP, unsigned int modifiers = 0) const; voidAddDataMember(const Reflex::Member& dm) const; Reflex::MemberAddDataMember(const char* nam, const Reflex::Type& typ, size_t offs, unsigned int modifiers = 0, char* interpreterOffset = 0) const; voidAddFunctionMember(const Reflex::Member& fm) const; Reflex::MemberAddFunctionMember(const char* nam, const Reflex::Type& typ, Reflex::StubFunction stubFP, void* stubCtx = 0, const char* params = 0, unsigned int modifiers = 0) const; voidAddSubScope(const Reflex::Scope& sc) const; voidAddSubScope(const char* scop, Reflex::TYPE scopeTyp = NAMESPACE) const; voidAddSubType(const Reflex::Type& ty) const; voidAddSubType(const char* typ, size_t size, Reflex::TYPE typeTyp, const type_info& ti, unsigned int modifiers = 0) const; void*Allocate() const; size_tArrayLength() const; Reflex::Base_IteratorBase_Begin() const; Reflex::Base_IteratorBase_End() const; Reflex::Reverse_Base_IteratorBase_RBegin() const; Reflex::Reverse_Base_IteratorBase_REnd() const; Reflex::BaseBaseAt(size_t nth) const; size_tBaseSize() const; static Reflex::TypeByName(const string& key); static Reflex::TypeByTypeInfo(const type_info& tid); Reflex::ObjectCastObject(const Reflex::Type& to, const Reflex::Object& obj) const; Reflex::ObjectConstruct(const Reflex::Type& signature = Type(0,0), const vector<void*>& values = std::vector<void*>(), void* mem = 0) const; Reflex::Member_IteratorDataMember_Begin(Reflex::EMEMBERQUERY inh = INHERITEDMEMBERS_DEFAULT) const; Reflex::Member_IteratorDataMember_End(Reflex::EMEMBERQUERY inh = INHERITEDMEMBERS_DEFAULT) const; Reflex::Rever",MatchSource.WIKI,root/html534/Reflex__Type.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__Type.html
https://root.cern/root/html534/Reflex__Type.html:9078,Energy Efficiency,Allocate,Allocate,9078,"h, unsigned int modifiers, Reflex::Type::TYPE_MODIFICATION operation = REPLACE); static Reflex::Type_IteratorType_Begin(); static Reflex::Type_IteratorType_End(); static Reflex::Reverse_Type_IteratorType_RBegin(); static Reflex::Reverse_Type_IteratorType_REnd(); static Reflex::TypeTypeAt(size_t nth); const type_info&TypeInfo() const; static size_tTypeSize(); Reflex::TYPETypeType() const; stringTypeTypeAsString() const; voidUnload() const; voidUpdateMembers() const. Data Members; public:. enum TYPE_MODIFICATION { REPLACE; APPEND; MASK; };. private:. unsigned intfModifiers; const Reflex::TypeName*fTypeName. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RepresType() const. operator bool() const. inline Type(const Reflex::TypeName* typName = 0, unsigned int modifiers = 0). inline Type(const Reflex::Type& rh). inline Type(const Reflex::Type& rh, unsigned int modifiers, Reflex::Type::TYPE_MODIFICATION operation = REPLACE). inline ~Type(). Allocate() const. BaseSize() const. Base_Begin() const. Base_End() const. Base_RBegin() const. Base_REnd() const. DataMemberSize(Reflex::EMEMBERQUERY inh = INHERITEDMEMBERS_DEFAULT) const. DataMember_Begin(Reflex::EMEMBERQUERY inh = INHERITEDMEMBERS_DEFAULT) const. DataMember_End(Reflex::EMEMBERQUERY inh = INHERITEDMEMBERS_DEFAULT) const. DataMember_RBegin(Reflex::EMEMBERQUERY inh = INHERITEDMEMBERS_DEFAULT) const. DataMember_REnd(Reflex::EMEMBERQUERY inh = INHERITEDMEMBERS_DEFAULT) const. Deallocate(void* instance) const. DeclaringScope() const. Destruct(void* instance, bool dealloc = true) const. FunctionMemberSize(Reflex::EMEMBERQUERY inh = INHERITEDMEMBERS_DEFAULT) const. FunctionMember_Begin(Reflex::EMEMBERQUERY inh = INHERITEDMEMBERS_DEFAULT) const. FunctionMember_End(Reflex::EMEMBERQUERY inh = INHERITEDMEMBERS_DEFAULT) const. FunctionMember_RBegin(Reflex::EMEMBERQUERY inh = INHERITEDMEMBERS_DEFAULT) const. FunctionMember_REnd(Reflex::EMEMBERQUERY inh = INHERITEDMEMBERS_DEFAULT) const. I",MatchSource.WIKI,root/html534/Reflex__Type.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__Type.html
https://root.cern/root/html534/Reflex__Type.html:13917,Energy Efficiency,allocate,allocate,13917,"ase class information; * @param nth base class; * @return pointer to base class information. Type ByName(const string& key). * ByName will look for a type given as a string and return it's; * reflection type information; * @param key fully qualified name of the type as string; * @return reflection type information. Type ByTypeInfo(const type_info& tid). * ByTypeInfo will look for a type given as a; * std::type_info and return its reflection information; * @param tid std::type_info to look for; * @return reflection information of type. Object CastObject(const Reflex::Type& to, const Reflex::Object& obj) const. * CastObject an object from this class type to another one; * @param to is the class type to cast into; * @param obj the memory address of the object to be casted. Member DataMemberAt(size_t nth, Reflex::EMEMBERQUERY inh = INHERITEDMEMBERS_DEFAULT) const. * Construct will call the constructor of a given type and allocate; * the memory for it; * @param signature of the constructor; * @param values for parameters of the constructor; * @param mem place in memory for implicit construction; * @return new object. Object Construct( const Type & signature,; const std::vector < Object > & values,; void * mem = 0 ) const;. * DataMemberAt will return the nth data member of the type; * @param nth the nth data member; * @return nth data member. Type DynamicType(const Reflex::Object& obj) const. * DynamicType is used to discover the dynamic type (useful in; * case of polymorphism); * @param mem is the memory address of the object to checked; * @return the actual class of the object. Member FunctionMemberAt(size_t nth, Reflex::EMEMBERQUERY inh = INHERITEDMEMBERS_DEFAULT) const. * FunctionMemberAt will return the nth function member of the type; * @param nth function member; * @return reflection information of nth function member. void GenerateDict(Reflex::DictionaryGenerator& generator) const. * GenerateDict will produce the dictionary information of this type; * @param genera",MatchSource.WIKI,root/html534/Reflex__Type.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__Type.html
https://root.cern/root/html534/Reflex__Type.html:8713,Modifiability,Inherit,Inheritance,8713,"lateArgumentAt(size_t nth) const; size_tTemplateArgumentSize() const; Reflex::TypeTemplateTemplateFamily() const; Reflex::TypeToType() const; const Reflex::TypeBase*ToTypeBase() const; Reflex::TypeType(const Reflex::Type& rh); Reflex::TypeType(const Reflex::TypeName* typName = 0, unsigned int modifiers = 0); Reflex::TypeType(const Reflex::Type& rh, unsigned int modifiers, Reflex::Type::TYPE_MODIFICATION operation = REPLACE); static Reflex::Type_IteratorType_Begin(); static Reflex::Type_IteratorType_End(); static Reflex::Reverse_Type_IteratorType_RBegin(); static Reflex::Reverse_Type_IteratorType_REnd(); static Reflex::TypeTypeAt(size_t nth); const type_info&TypeInfo() const; static size_tTypeSize(); Reflex::TYPETypeType() const; stringTypeTypeAsString() const; voidUnload() const; voidUpdateMembers() const. Data Members; public:. enum TYPE_MODIFICATION { REPLACE; APPEND; MASK; };. private:. unsigned intfModifiers; const Reflex::TypeName*fTypeName. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RepresType() const. operator bool() const. inline Type(const Reflex::TypeName* typName = 0, unsigned int modifiers = 0). inline Type(const Reflex::Type& rh). inline Type(const Reflex::Type& rh, unsigned int modifiers, Reflex::Type::TYPE_MODIFICATION operation = REPLACE). inline ~Type(). Allocate() const. BaseSize() const. Base_Begin() const. Base_End() const. Base_RBegin() const. Base_REnd() const. DataMemberSize(Reflex::EMEMBERQUERY inh = INHERITEDMEMBERS_DEFAULT) const. DataMember_Begin(Reflex::EMEMBERQUERY inh = INHERITEDMEMBERS_DEFAULT) const. DataMember_End(Reflex::EMEMBERQUERY inh = INHERITEDMEMBERS_DEFAULT) const. DataMember_RBegin(Reflex::EMEMBERQUERY inh = INHERITEDMEMBERS_DEFAULT) const. DataMember_REnd(Reflex::EMEMBERQUERY inh = INHERITEDMEMBERS_DEFAULT) const. Deallocate(void* instance) const. DeclaringScope() const. Destruct(void* instance, bool dealloc = true) const. FunctionMemberSize(Reflex::EMEMBERQUERY inh = INHERITED",MatchSource.WIKI,root/html534/Reflex__Type.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__Type.html
https://root.cern/root/html534/Reflex__Type.html:8726,Modifiability,Inherit,Inherited,8726,"lateArgumentAt(size_t nth) const; size_tTemplateArgumentSize() const; Reflex::TypeTemplateTemplateFamily() const; Reflex::TypeToType() const; const Reflex::TypeBase*ToTypeBase() const; Reflex::TypeType(const Reflex::Type& rh); Reflex::TypeType(const Reflex::TypeName* typName = 0, unsigned int modifiers = 0); Reflex::TypeType(const Reflex::Type& rh, unsigned int modifiers, Reflex::Type::TYPE_MODIFICATION operation = REPLACE); static Reflex::Type_IteratorType_Begin(); static Reflex::Type_IteratorType_End(); static Reflex::Reverse_Type_IteratorType_RBegin(); static Reflex::Reverse_Type_IteratorType_REnd(); static Reflex::TypeTypeAt(size_t nth); const type_info&TypeInfo() const; static size_tTypeSize(); Reflex::TYPETypeType() const; stringTypeTypeAsString() const; voidUnload() const; voidUpdateMembers() const. Data Members; public:. enum TYPE_MODIFICATION { REPLACE; APPEND; MASK; };. private:. unsigned intfModifiers; const Reflex::TypeName*fTypeName. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RepresType() const. operator bool() const. inline Type(const Reflex::TypeName* typName = 0, unsigned int modifiers = 0). inline Type(const Reflex::Type& rh). inline Type(const Reflex::Type& rh, unsigned int modifiers, Reflex::Type::TYPE_MODIFICATION operation = REPLACE). inline ~Type(). Allocate() const. BaseSize() const. Base_Begin() const. Base_End() const. Base_RBegin() const. Base_REnd() const. DataMemberSize(Reflex::EMEMBERQUERY inh = INHERITEDMEMBERS_DEFAULT) const. DataMember_Begin(Reflex::EMEMBERQUERY inh = INHERITEDMEMBERS_DEFAULT) const. DataMember_End(Reflex::EMEMBERQUERY inh = INHERITEDMEMBERS_DEFAULT) const. DataMember_RBegin(Reflex::EMEMBERQUERY inh = INHERITEDMEMBERS_DEFAULT) const. DataMember_REnd(Reflex::EMEMBERQUERY inh = INHERITEDMEMBERS_DEFAULT) const. Deallocate(void* instance) const. DeclaringScope() const. Destruct(void* instance, bool dealloc = true) const. FunctionMemberSize(Reflex::EMEMBERQUERY inh = INHERITED",MatchSource.WIKI,root/html534/Reflex__Type.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__Type.html
https://root.cern/root/html534/Reflex__Type.html:14469,Modifiability,polymorphi,polymorphism,14469,"turn reflection information of type. Object CastObject(const Reflex::Type& to, const Reflex::Object& obj) const. * CastObject an object from this class type to another one; * @param to is the class type to cast into; * @param obj the memory address of the object to be casted. Member DataMemberAt(size_t nth, Reflex::EMEMBERQUERY inh = INHERITEDMEMBERS_DEFAULT) const. * Construct will call the constructor of a given type and allocate; * the memory for it; * @param signature of the constructor; * @param values for parameters of the constructor; * @param mem place in memory for implicit construction; * @return new object. Object Construct( const Type & signature,; const std::vector < Object > & values,; void * mem = 0 ) const;. * DataMemberAt will return the nth data member of the type; * @param nth the nth data member; * @return nth data member. Type DynamicType(const Reflex::Object& obj) const. * DynamicType is used to discover the dynamic type (useful in; * case of polymorphism); * @param mem is the memory address of the object to checked; * @return the actual class of the object. Member FunctionMemberAt(size_t nth, Reflex::EMEMBERQUERY inh = INHERITEDMEMBERS_DEFAULT) const. * FunctionMemberAt will return the nth function member of the type; * @param nth function member; * @return reflection information of nth function member. void GenerateDict(Reflex::DictionaryGenerator& generator) const. * GenerateDict will produce the dictionary information of this type; * @param generator a reference to the dictionary generator instance. bool HasBase(const Reflex::Type& cl) const. * HasBase will check whether this class has a base class given; * as argument; * @param cl the base-class to check for; * @return the Base info if it is found, an empty base otherwise (can be tested for bool). bool IsEquivalentTo(const Reflex::Type& typ, unsigned int modifiers_mask = 0) const. * IsEquivalentTo returns true if the two types are equivalent; * @param type to compare to; * @modifiers_mask d",MatchSource.WIKI,root/html534/Reflex__Type.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__Type.html
https://root.cern/root/html534/Reflex__Type.html:785,Testability,Stub,StubFunction,785," ~Type(); voidAddBase(const Reflex::Base& b) const; voidAddBase(const Reflex::Type& bas, Reflex::OffsetFunction offsFP, unsigned int modifiers = 0) const; voidAddDataMember(const Reflex::Member& dm) const; Reflex::MemberAddDataMember(const char* nam, const Reflex::Type& typ, size_t offs, unsigned int modifiers = 0, char* interpreterOffset = 0) const; voidAddFunctionMember(const Reflex::Member& fm) const; Reflex::MemberAddFunctionMember(const char* nam, const Reflex::Type& typ, Reflex::StubFunction stubFP, void* stubCtx = 0, const char* params = 0, unsigned int modifiers = 0) const; voidAddSubScope(const Reflex::Scope& sc) const; voidAddSubScope(const char* scop, Reflex::TYPE scopeTyp = NAMESPACE) const; voidAddSubType(const Reflex::Type& ty) const; voidAddSubType(const char* typ, size_t size, Reflex::TYPE typeTyp, const type_info& ti, unsigned int modifiers = 0) const; void*Allocate() const; size_tArrayLength() const; Reflex::Base_IteratorBase_Begin() const; Reflex::Base_IteratorBase_End() const; Reflex::Reverse_Base_IteratorBase_RBegin() const; Reflex::Reverse_Base_IteratorBase_REnd() const; Reflex::BaseBaseAt(size_t nth) const; size_tBaseSize() const; static Reflex::TypeByName(const string& key); static Reflex::TypeByTypeInfo(const type_info& tid); Reflex::ObjectCastObject(const Reflex::Type& to, const Reflex::Object& obj) const; Reflex::ObjectConstruct(const Reflex::Type& signature = Type(0,0), const vector<void*>& values = std::vector<void*>(), void* mem = 0) const; Reflex::Member_IteratorDataMember_Begin(Reflex::EMEMBERQUERY inh = INHERITEDMEMBERS_DEFAULT) const; Reflex::Member_IteratorDataMember_End(Reflex::EMEMBERQUERY inh = INHERITEDMEMBERS_DEFAULT) const; Reflex::Rever",MatchSource.WIKI,root/html534/Reflex__Type.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__Type.html
https://root.cern/root/html534/Reflex__Type.html:798,Testability,stub,stubFP,798," ~Type(); voidAddBase(const Reflex::Base& b) const; voidAddBase(const Reflex::Type& bas, Reflex::OffsetFunction offsFP, unsigned int modifiers = 0) const; voidAddDataMember(const Reflex::Member& dm) const; Reflex::MemberAddDataMember(const char* nam, const Reflex::Type& typ, size_t offs, unsigned int modifiers = 0, char* interpreterOffset = 0) const; voidAddFunctionMember(const Reflex::Member& fm) const; Reflex::MemberAddFunctionMember(const char* nam, const Reflex::Type& typ, Reflex::StubFunction stubFP, void* stubCtx = 0, const char* params = 0, unsigned int modifiers = 0) const; voidAddSubScope(const Reflex::Scope& sc) const; voidAddSubScope(const char* scop, Reflex::TYPE scopeTyp = NAMESPACE) const; voidAddSubType(const Reflex::Type& ty) const; voidAddSubType(const char* typ, size_t size, Reflex::TYPE typeTyp, const type_info& ti, unsigned int modifiers = 0) const; void*Allocate() const; size_tArrayLength() const; Reflex::Base_IteratorBase_Begin() const; Reflex::Base_IteratorBase_End() const; Reflex::Reverse_Base_IteratorBase_RBegin() const; Reflex::Reverse_Base_IteratorBase_REnd() const; Reflex::BaseBaseAt(size_t nth) const; size_tBaseSize() const; static Reflex::TypeByName(const string& key); static Reflex::TypeByTypeInfo(const type_info& tid); Reflex::ObjectCastObject(const Reflex::Type& to, const Reflex::Object& obj) const; Reflex::ObjectConstruct(const Reflex::Type& signature = Type(0,0), const vector<void*>& values = std::vector<void*>(), void* mem = 0) const; Reflex::Member_IteratorDataMember_Begin(Reflex::EMEMBERQUERY inh = INHERITEDMEMBERS_DEFAULT) const; Reflex::Member_IteratorDataMember_End(Reflex::EMEMBERQUERY inh = INHERITEDMEMBERS_DEFAULT) const; Reflex::Rever",MatchSource.WIKI,root/html534/Reflex__Type.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__Type.html
https://root.cern/root/html534/Reflex__Type.html:812,Testability,stub,stubCtx,812," ~Type(); voidAddBase(const Reflex::Base& b) const; voidAddBase(const Reflex::Type& bas, Reflex::OffsetFunction offsFP, unsigned int modifiers = 0) const; voidAddDataMember(const Reflex::Member& dm) const; Reflex::MemberAddDataMember(const char* nam, const Reflex::Type& typ, size_t offs, unsigned int modifiers = 0, char* interpreterOffset = 0) const; voidAddFunctionMember(const Reflex::Member& fm) const; Reflex::MemberAddFunctionMember(const char* nam, const Reflex::Type& typ, Reflex::StubFunction stubFP, void* stubCtx = 0, const char* params = 0, unsigned int modifiers = 0) const; voidAddSubScope(const Reflex::Scope& sc) const; voidAddSubScope(const char* scop, Reflex::TYPE scopeTyp = NAMESPACE) const; voidAddSubType(const Reflex::Type& ty) const; voidAddSubType(const char* typ, size_t size, Reflex::TYPE typeTyp, const type_info& ti, unsigned int modifiers = 0) const; void*Allocate() const; size_tArrayLength() const; Reflex::Base_IteratorBase_Begin() const; Reflex::Base_IteratorBase_End() const; Reflex::Reverse_Base_IteratorBase_RBegin() const; Reflex::Reverse_Base_IteratorBase_REnd() const; Reflex::BaseBaseAt(size_t nth) const; size_tBaseSize() const; static Reflex::TypeByName(const string& key); static Reflex::TypeByTypeInfo(const type_info& tid); Reflex::ObjectCastObject(const Reflex::Type& to, const Reflex::Object& obj) const; Reflex::ObjectConstruct(const Reflex::Type& signature = Type(0,0), const vector<void*>& values = std::vector<void*>(), void* mem = 0) const; Reflex::Member_IteratorDataMember_Begin(Reflex::EMEMBERQUERY inh = INHERITEDMEMBERS_DEFAULT) const; Reflex::Member_IteratorDataMember_End(Reflex::EMEMBERQUERY inh = INHERITEDMEMBERS_DEFAULT) const; Reflex::Rever",MatchSource.WIKI,root/html534/Reflex__Type.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__Type.html
https://root.cern/root/html534/Reflex__Type.html:15277,Testability,test,tested,15277," values,; void * mem = 0 ) const;. * DataMemberAt will return the nth data member of the type; * @param nth the nth data member; * @return nth data member. Type DynamicType(const Reflex::Object& obj) const. * DynamicType is used to discover the dynamic type (useful in; * case of polymorphism); * @param mem is the memory address of the object to checked; * @return the actual class of the object. Member FunctionMemberAt(size_t nth, Reflex::EMEMBERQUERY inh = INHERITEDMEMBERS_DEFAULT) const. * FunctionMemberAt will return the nth function member of the type; * @param nth function member; * @return reflection information of nth function member. void GenerateDict(Reflex::DictionaryGenerator& generator) const. * GenerateDict will produce the dictionary information of this type; * @param generator a reference to the dictionary generator instance. bool HasBase(const Reflex::Type& cl) const. * HasBase will check whether this class has a base class given; * as argument; * @param cl the base-class to check for; * @return the Base info if it is found, an empty base otherwise (can be tested for bool). bool IsEquivalentTo(const Reflex::Type& typ, unsigned int modifiers_mask = 0) const. * IsEquivalentTo returns true if the two types are equivalent; * @param type to compare to; * @modifiers_mask do not compare the listed modifiers; * @return true if two types are equivalent. Member MemberAt(size_t nth, Reflex::EMEMBERQUERY inh = INHERITEDMEMBERS_DEFAULT) const. * MemberAt will return the nth member of the type; * @param nth member; * @return reflection information nth member. MemberTemplate MemberTemplateAt(size_t nth) const. * MemberTemplateAt will return the nth member template of this type; * @param nth member template; * @return nth member template. std::string Name(unsigned int mod = 0) const. * Name returns the name of the type; * @param mod qualifiers can be or'ed; * FINAL - resolve typedefs; * SCOPED - fully scoped name; * QUALIFIED - cv, reference qualification; * @return ",MatchSource.WIKI,root/html534/Reflex__Type.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__Type.html
https://root.cern/root/html534/Reflex__TypedefBuilderImpl.html:733,Modifiability,Inherit,Inheritance,733,". Reflex::TypedefBuilderImpl. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::TypedefBuilderImpl. class Reflex::TypedefBuilderImpl. Function Members (Methods); public:. virtual~TypedefBuilderImpl(); voidAddProperty(const char* key, Reflex::Any value); voidAddProperty(const char* key, const char* value); Reflex::TypeToType(); Reflex::TypedefBuilderImplTypedefBuilderImpl(const Reflex::TypedefBuilderImpl&); Reflex::TypedefBuilderImplTypedefBuilderImpl(const char* typ, const Reflex::Type& typedefType). Data Members; private:. Reflex::TypefTypedef. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TypedefBuilderImpl(const char* typ, const Reflex::Type& typedefType); constructor . {}. void AddProperty(const char* key, Any value); destructor . * AddProperty will add a property to the typedef currently being built; * @param key the PropertyNth key; * @param value the value of the PropertyNth. Type ToType(). * AddProperty will add a property to the typedef currently being built; * @param key the PropertyNth key; * @param value the value of the PropertyNth. * ToType will return the currently produced Type (class); * @return the type currently being built. TypedefBuilder& AddProperty(const char* key, P value). * AddProperty will add a property to the typedef currently being built; * @param key the property key; * @param value the value of the property; * @return a reference to the building class. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/Reflex__TypedefBuilderImpl.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__TypedefBuilderImpl.html
https://root.cern/root/html534/Reflex__TypedefBuilderImpl.html:746,Modifiability,Inherit,Inherited,746,". Reflex::TypedefBuilderImpl. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::TypedefBuilderImpl. class Reflex::TypedefBuilderImpl. Function Members (Methods); public:. virtual~TypedefBuilderImpl(); voidAddProperty(const char* key, Reflex::Any value); voidAddProperty(const char* key, const char* value); Reflex::TypeToType(); Reflex::TypedefBuilderImplTypedefBuilderImpl(const Reflex::TypedefBuilderImpl&); Reflex::TypedefBuilderImplTypedefBuilderImpl(const char* typ, const Reflex::Type& typedefType). Data Members; private:. Reflex::TypefTypedef. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TypedefBuilderImpl(const char* typ, const Reflex::Type& typedefType); constructor . {}. void AddProperty(const char* key, Any value); destructor . * AddProperty will add a property to the typedef currently being built; * @param key the PropertyNth key; * @param value the value of the PropertyNth. Type ToType(). * AddProperty will add a property to the typedef currently being built; * @param key the PropertyNth key; * @param value the value of the PropertyNth. * ToType will return the currently produced Type (class); * @return the type currently being built. TypedefBuilder& AddProperty(const char* key, P value). * AddProperty will add a property to the typedef currently being built; * @param key the property key; * @param value the value of the property; * @return a reference to the building class. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/Reflex__TypedefBuilderImpl.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__TypedefBuilderImpl.html
https://root.cern/root/html534/Reflex__TypeTemplate.html:3702,Availability,avail,available,3702,"egin() const. TemplateParameterDefault_End() const. TemplateParameterDefault_RBegin() const. TemplateParameterDefault_REnd() const. TemplateParameterNameAt(size_t nth) const. TemplateParameterName_Begin() const. TemplateParameterName_End() const. TemplateParameterName_RBegin() const. TemplateParameterName_REnd() const. TypeTemplateSize(). TypeTemplate ByName(const string& name, size_t nTemplateParams = 0). * ByName will return a type template corresponding to the argument name; * @param type template name to lookup; * @param nTemplateParams looks up the template family with this number of template parameters; * if it is set to 0, the first occurence of the template family name will be returned; * @return corresponding type template to name. std::string Name(unsigned int mod = 0) const. * Id will return a memory address which is a unique id for this type template; * @return unique id of this type template. * Name will return the Name of the template family and a list of; * all currently available instantiations; * @return template family Name with all instantiantion. Type_Iterator TemplateInstance_Begin() const. * TemplateInstance_Begin returns the begin iterator of the instance container; * @return the begin iterator of the instance container. Type_Iterator TemplateInstance_End() const. * TemplateInstance_End returns the end iterator of the instance container; * @return the end iterator of the instance container. Reverse_Type_Iterator TemplateInstance_RBegin() const. * TemplateInstance_RBegin returns the rbegin iterator of the instance container; * @return the rbegin iterator of the instance container. Reverse_Type_Iterator TemplateInstance_REnd() const. * TemplateInstance_Rend returns the rend iterator of the instance container; * @return the rend iterator of the instance container. Type TemplateInstanceAt(size_t nth) const. * TemplateInstanceAt will return a pointer to the nth template instantion; * @param nth template instantion; * @return pointer to nth template",MatchSource.WIKI,root/html534/Reflex__TypeTemplate.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__TypeTemplate.html
https://root.cern/root/html534/Reflex__TypeTemplate.html:2281,Modifiability,Inherit,Inheritance,2281,"faultAt(size_t nth) const; Reflex::StdString_IteratorTemplateParameterName_Begin() const; Reflex::StdString_IteratorTemplateParameterName_End() const; Reflex::Reverse_StdString_IteratorTemplateParameterName_RBegin() const; Reflex::Reverse_StdString_IteratorTemplateParameterName_REnd() const; stringTemplateParameterNameAt(size_t nth) const; size_tTemplateParameterSize() const; Reflex::TypeTemplateTypeTemplate(const Reflex::TypeTemplateName* typeTemplateName = 0); Reflex::TypeTemplateTypeTemplate(const Reflex::TypeTemplate& rh); static Reflex::TypeTemplate_IteratorTypeTemplate_Begin(); static Reflex::TypeTemplate_IteratorTypeTemplate_End(); static Reflex::Reverse_TypeTemplate_IteratorTypeTemplate_RBegin(); static Reflex::Reverse_TypeTemplate_IteratorTypeTemplate_REnd(); static Reflex::TypeTemplateTypeTemplateAt(size_t nth); static size_tTypeTemplateSize(); voidUnload() const. Data Members; private:. const Reflex::TypeTemplateName*fTypeTemplateName. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; inline TypeTemplate(const TypeTemplateName* typeTemplateName). inline TypeTemplate(const TypeTemplate& rh). inline ~TypeTemplate(). operator=(const Reflex::TypeTemplate& rh). operator bool() const. Id() const. TemplateInstanceSize() const. TemplateParameterSize() const. TemplateParameterDefaultAt(size_t nth) const. TemplateParameterDefault_Begin() const. TemplateParameterDefault_End() const. TemplateParameterDefault_RBegin() const. TemplateParameterDefault_REnd() const. TemplateParameterNameAt(size_t nth) const. TemplateParameterName_Begin() const. TemplateParameterName_End() const. TemplateParameterName_RBegin() const. TemplateParameterName_REnd() const. TypeTemplateSize(). TypeTemplate ByName(const string& name, size_t nTemplateParams = 0). * ByName will return a type template corresponding to the argument name; * @param type template name to lookup; * @param nTemplateParams looks up the template family with this number of template p",MatchSource.WIKI,root/html534/Reflex__TypeTemplate.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__TypeTemplate.html
https://root.cern/root/html534/Reflex__TypeTemplate.html:2294,Modifiability,Inherit,Inherited,2294,"faultAt(size_t nth) const; Reflex::StdString_IteratorTemplateParameterName_Begin() const; Reflex::StdString_IteratorTemplateParameterName_End() const; Reflex::Reverse_StdString_IteratorTemplateParameterName_RBegin() const; Reflex::Reverse_StdString_IteratorTemplateParameterName_REnd() const; stringTemplateParameterNameAt(size_t nth) const; size_tTemplateParameterSize() const; Reflex::TypeTemplateTypeTemplate(const Reflex::TypeTemplateName* typeTemplateName = 0); Reflex::TypeTemplateTypeTemplate(const Reflex::TypeTemplate& rh); static Reflex::TypeTemplate_IteratorTypeTemplate_Begin(); static Reflex::TypeTemplate_IteratorTypeTemplate_End(); static Reflex::Reverse_TypeTemplate_IteratorTypeTemplate_RBegin(); static Reflex::Reverse_TypeTemplate_IteratorTypeTemplate_REnd(); static Reflex::TypeTemplateTypeTemplateAt(size_t nth); static size_tTypeTemplateSize(); voidUnload() const. Data Members; private:. const Reflex::TypeTemplateName*fTypeTemplateName. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; inline TypeTemplate(const TypeTemplateName* typeTemplateName). inline TypeTemplate(const TypeTemplate& rh). inline ~TypeTemplate(). operator=(const Reflex::TypeTemplate& rh). operator bool() const. Id() const. TemplateInstanceSize() const. TemplateParameterSize() const. TemplateParameterDefaultAt(size_t nth) const. TemplateParameterDefault_Begin() const. TemplateParameterDefault_End() const. TemplateParameterDefault_RBegin() const. TemplateParameterDefault_REnd() const. TemplateParameterNameAt(size_t nth) const. TemplateParameterName_Begin() const. TemplateParameterName_End() const. TemplateParameterName_RBegin() const. TemplateParameterName_REnd() const. TypeTemplateSize(). TypeTemplate ByName(const string& name, size_t nTemplateParams = 0). * ByName will return a type template corresponding to the argument name; * @param type template name to lookup; * @param nTemplateParams looks up the template family with this number of template p",MatchSource.WIKI,root/html534/Reflex__TypeTemplate.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__TypeTemplate.html
https://root.cern/root/html534/Reflex__UnionBuilderImpl.html:1296,Modifiability,Inherit,Inheritance,1296,"; public:. virtual~UnionBuilderImpl(); voidAddDataMember(const char* nam, const Reflex::Type& typ, size_t offs, unsigned int modifiers = 0); voidAddFunctionMember(const char* nam, const Reflex::Type& typ, Reflex::StubFunction stubFP, void* stubCtx = 0, const char* params = 0, unsigned int modifiers = 0); voidAddItem(const char* nam, const Reflex::Type& typ); voidAddProperty(const char* key, Reflex::Any value); voidAddProperty(const char* key, const char* value); Reflex::UnionBuilderImpl&operator=(const Reflex::UnionBuilderImpl&); voidSetSizeOf(size_t size); Reflex::TypeToType(); Reflex::UnionBuilderImplUnionBuilderImpl(const Reflex::UnionBuilderImpl&); Reflex::UnionBuilderImplUnionBuilderImpl(const char* nam, size_t size, const type_info& ti, unsigned int modifiers = 0, Reflex::TYPE typ = UNION). protected:. voidEnableCallback(const bool enable = true). Data Members; private:. boolfCallbackEnabled; Reflex::MemberfLastMember; Reflex::Union*fUnion. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; UnionBuilderImpl(const char* nam, size_t size, const type_info& ti, unsigned int modifiers = 0, Reflex::TYPE typ = UNION); constructor . virtual ~UnionBuilderImpl(); destructor . void AddItem(const char* nam, const Reflex::Type& typ). * AddItem will add one union item; * @param Name the Name of the union item; * @param At the At of the union item. void AddFunctionMember(const char* nam, const Reflex::Type& typ, Reflex::StubFunction stubFP, void* stubCtx = 0, const char* params = 0, unsigned int modifiers = 0); AddDataMember will add the information about one data; * MemberAt of the union; *; * @param Name of the data MemberAt; * @param At of the data MemberAt; * @param Offset of the data MemberAt; * @param modifiers the modifiers of the data MemberAt. AddFunctionMember will add the information about one; * function MemberAt of the union; *; * @param Name of the function MemberAt; * @param At of the function MemberAt; * @param stubFP St",MatchSource.WIKI,root/html534/Reflex__UnionBuilderImpl.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__UnionBuilderImpl.html
https://root.cern/root/html534/Reflex__UnionBuilderImpl.html:1309,Modifiability,Inherit,Inherited,1309,"; public:. virtual~UnionBuilderImpl(); voidAddDataMember(const char* nam, const Reflex::Type& typ, size_t offs, unsigned int modifiers = 0); voidAddFunctionMember(const char* nam, const Reflex::Type& typ, Reflex::StubFunction stubFP, void* stubCtx = 0, const char* params = 0, unsigned int modifiers = 0); voidAddItem(const char* nam, const Reflex::Type& typ); voidAddProperty(const char* key, Reflex::Any value); voidAddProperty(const char* key, const char* value); Reflex::UnionBuilderImpl&operator=(const Reflex::UnionBuilderImpl&); voidSetSizeOf(size_t size); Reflex::TypeToType(); Reflex::UnionBuilderImplUnionBuilderImpl(const Reflex::UnionBuilderImpl&); Reflex::UnionBuilderImplUnionBuilderImpl(const char* nam, size_t size, const type_info& ti, unsigned int modifiers = 0, Reflex::TYPE typ = UNION). protected:. voidEnableCallback(const bool enable = true). Data Members; private:. boolfCallbackEnabled; Reflex::MemberfLastMember; Reflex::Union*fUnion. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; UnionBuilderImpl(const char* nam, size_t size, const type_info& ti, unsigned int modifiers = 0, Reflex::TYPE typ = UNION); constructor . virtual ~UnionBuilderImpl(); destructor . void AddItem(const char* nam, const Reflex::Type& typ). * AddItem will add one union item; * @param Name the Name of the union item; * @param At the At of the union item. void AddFunctionMember(const char* nam, const Reflex::Type& typ, Reflex::StubFunction stubFP, void* stubCtx = 0, const char* params = 0, unsigned int modifiers = 0); AddDataMember will add the information about one data; * MemberAt of the union; *; * @param Name of the data MemberAt; * @param At of the data MemberAt; * @param Offset of the data MemberAt; * @param modifiers the modifiers of the data MemberAt. AddFunctionMember will add the information about one; * function MemberAt of the union; *; * @param Name of the function MemberAt; * @param At of the function MemberAt; * @param stubFP St",MatchSource.WIKI,root/html534/Reflex__UnionBuilderImpl.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__UnionBuilderImpl.html
https://root.cern/root/html534/Reflex__UnionBuilderImpl.html:534,Testability,Stub,StubFunction,534,". Reflex::UnionBuilderImpl. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::UnionBuilderImpl. class Reflex::UnionBuilderImpl. Function Members (Methods); public:. virtual~UnionBuilderImpl(); voidAddDataMember(const char* nam, const Reflex::Type& typ, size_t offs, unsigned int modifiers = 0); voidAddFunctionMember(const char* nam, const Reflex::Type& typ, Reflex::StubFunction stubFP, void* stubCtx = 0, const char* params = 0, unsigned int modifiers = 0); voidAddItem(const char* nam, const Reflex::Type& typ); voidAddProperty(const char* key, Reflex::Any value); voidAddProperty(const char* key, const char* value); Reflex::UnionBuilderImpl&operator=(const Reflex::UnionBuilderImpl&); voidSetSizeOf(size_t size); Reflex::TypeToType(); Reflex::UnionBuilderImplUnionBuilderImpl(const Reflex::UnionBuilderImpl&); Reflex::UnionBuilderImplUnionBuilderImpl(const char* nam, size_t size, const type_info& ti, unsigned int modifiers = 0, Reflex::TYPE typ = UNION). protected:. voidEnableCallback(const bool enable = true). Data Members; private:. boolfCallbackEnabled; Reflex::MemberfLastMember; Reflex::Union*fUnion. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; UnionBuilderImpl(const char* nam, size_t size, const type_info& ti, unsigned int modifiers = 0, Reflex::TYPE typ = UNION); constructor . virtual ~UnionBuilderImpl(); destructor . void AddItem(const char* nam, const Reflex::Type& typ). * AddItem will add one union item; * @param Name the Name of the union item; * @param At the At of the union item. void AddFunctionMember(const char* nam, const Reflex::Type& typ, Reflex::StubFunction stubFP, void* stubCtx = 0, const char* params = 0, unsigned int modifiers = 0); AddDataMember will add the information about one data; * MemberAt of the union; *; * @param Name of the data Mem",MatchSource.WIKI,root/html534/Reflex__UnionBuilderImpl.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__UnionBuilderImpl.html
https://root.cern/root/html534/Reflex__UnionBuilderImpl.html:547,Testability,stub,stubFP,547,". Reflex::UnionBuilderImpl. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::UnionBuilderImpl. class Reflex::UnionBuilderImpl. Function Members (Methods); public:. virtual~UnionBuilderImpl(); voidAddDataMember(const char* nam, const Reflex::Type& typ, size_t offs, unsigned int modifiers = 0); voidAddFunctionMember(const char* nam, const Reflex::Type& typ, Reflex::StubFunction stubFP, void* stubCtx = 0, const char* params = 0, unsigned int modifiers = 0); voidAddItem(const char* nam, const Reflex::Type& typ); voidAddProperty(const char* key, Reflex::Any value); voidAddProperty(const char* key, const char* value); Reflex::UnionBuilderImpl&operator=(const Reflex::UnionBuilderImpl&); voidSetSizeOf(size_t size); Reflex::TypeToType(); Reflex::UnionBuilderImplUnionBuilderImpl(const Reflex::UnionBuilderImpl&); Reflex::UnionBuilderImplUnionBuilderImpl(const char* nam, size_t size, const type_info& ti, unsigned int modifiers = 0, Reflex::TYPE typ = UNION). protected:. voidEnableCallback(const bool enable = true). Data Members; private:. boolfCallbackEnabled; Reflex::MemberfLastMember; Reflex::Union*fUnion. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; UnionBuilderImpl(const char* nam, size_t size, const type_info& ti, unsigned int modifiers = 0, Reflex::TYPE typ = UNION); constructor . virtual ~UnionBuilderImpl(); destructor . void AddItem(const char* nam, const Reflex::Type& typ). * AddItem will add one union item; * @param Name the Name of the union item; * @param At the At of the union item. void AddFunctionMember(const char* nam, const Reflex::Type& typ, Reflex::StubFunction stubFP, void* stubCtx = 0, const char* params = 0, unsigned int modifiers = 0); AddDataMember will add the information about one data; * MemberAt of the union; *; * @param Name of the data Mem",MatchSource.WIKI,root/html534/Reflex__UnionBuilderImpl.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__UnionBuilderImpl.html
https://root.cern/root/html534/Reflex__UnionBuilderImpl.html:561,Testability,stub,stubCtx,561,". Reflex::UnionBuilderImpl. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::UnionBuilderImpl. class Reflex::UnionBuilderImpl. Function Members (Methods); public:. virtual~UnionBuilderImpl(); voidAddDataMember(const char* nam, const Reflex::Type& typ, size_t offs, unsigned int modifiers = 0); voidAddFunctionMember(const char* nam, const Reflex::Type& typ, Reflex::StubFunction stubFP, void* stubCtx = 0, const char* params = 0, unsigned int modifiers = 0); voidAddItem(const char* nam, const Reflex::Type& typ); voidAddProperty(const char* key, Reflex::Any value); voidAddProperty(const char* key, const char* value); Reflex::UnionBuilderImpl&operator=(const Reflex::UnionBuilderImpl&); voidSetSizeOf(size_t size); Reflex::TypeToType(); Reflex::UnionBuilderImplUnionBuilderImpl(const Reflex::UnionBuilderImpl&); Reflex::UnionBuilderImplUnionBuilderImpl(const char* nam, size_t size, const type_info& ti, unsigned int modifiers = 0, Reflex::TYPE typ = UNION). protected:. voidEnableCallback(const bool enable = true). Data Members; private:. boolfCallbackEnabled; Reflex::MemberfLastMember; Reflex::Union*fUnion. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; UnionBuilderImpl(const char* nam, size_t size, const type_info& ti, unsigned int modifiers = 0, Reflex::TYPE typ = UNION); constructor . virtual ~UnionBuilderImpl(); destructor . void AddItem(const char* nam, const Reflex::Type& typ). * AddItem will add one union item; * @param Name the Name of the union item; * @param At the At of the union item. void AddFunctionMember(const char* nam, const Reflex::Type& typ, Reflex::StubFunction stubFP, void* stubCtx = 0, const char* params = 0, unsigned int modifiers = 0); AddDataMember will add the information about one data; * MemberAt of the union; *; * @param Name of the data Mem",MatchSource.WIKI,root/html534/Reflex__UnionBuilderImpl.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__UnionBuilderImpl.html
https://root.cern/root/html534/Reflex__UnionBuilderImpl.html:1796,Testability,Stub,StubFunction,1796,"mplUnionBuilderImpl(const Reflex::UnionBuilderImpl&); Reflex::UnionBuilderImplUnionBuilderImpl(const char* nam, size_t size, const type_info& ti, unsigned int modifiers = 0, Reflex::TYPE typ = UNION). protected:. voidEnableCallback(const bool enable = true). Data Members; private:. boolfCallbackEnabled; Reflex::MemberfLastMember; Reflex::Union*fUnion. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; UnionBuilderImpl(const char* nam, size_t size, const type_info& ti, unsigned int modifiers = 0, Reflex::TYPE typ = UNION); constructor . virtual ~UnionBuilderImpl(); destructor . void AddItem(const char* nam, const Reflex::Type& typ). * AddItem will add one union item; * @param Name the Name of the union item; * @param At the At of the union item. void AddFunctionMember(const char* nam, const Reflex::Type& typ, Reflex::StubFunction stubFP, void* stubCtx = 0, const char* params = 0, unsigned int modifiers = 0); AddDataMember will add the information about one data; * MemberAt of the union; *; * @param Name of the data MemberAt; * @param At of the data MemberAt; * @param Offset of the data MemberAt; * @param modifiers the modifiers of the data MemberAt. AddFunctionMember will add the information about one; * function MemberAt of the union; *; * @param Name of the function MemberAt; * @param At of the function MemberAt; * @param stubFP Stub function pointer for the function; * @param stubCxt Stub user context for the stub function; * @param params parameter names and default values (semi-colon separated); * @param modifiers the modifiers of the function MemberAt. void AddProperty(const char* key, const char* value). * AddProperty will add a PropertyNth to the PropertyNth stack; * which will be emtpied with the next build of a union; * or union item; * @param key the PropertyNth key; * @param value the value of the PropertyNth; * @return a reference to the building class. Type ToType(); SetSizeOf will set the SizeOf property for this",MatchSource.WIKI,root/html534/Reflex__UnionBuilderImpl.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__UnionBuilderImpl.html
https://root.cern/root/html534/Reflex__UnionBuilderImpl.html:1809,Testability,stub,stubFP,1809,"mplUnionBuilderImpl(const Reflex::UnionBuilderImpl&); Reflex::UnionBuilderImplUnionBuilderImpl(const char* nam, size_t size, const type_info& ti, unsigned int modifiers = 0, Reflex::TYPE typ = UNION). protected:. voidEnableCallback(const bool enable = true). Data Members; private:. boolfCallbackEnabled; Reflex::MemberfLastMember; Reflex::Union*fUnion. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; UnionBuilderImpl(const char* nam, size_t size, const type_info& ti, unsigned int modifiers = 0, Reflex::TYPE typ = UNION); constructor . virtual ~UnionBuilderImpl(); destructor . void AddItem(const char* nam, const Reflex::Type& typ). * AddItem will add one union item; * @param Name the Name of the union item; * @param At the At of the union item. void AddFunctionMember(const char* nam, const Reflex::Type& typ, Reflex::StubFunction stubFP, void* stubCtx = 0, const char* params = 0, unsigned int modifiers = 0); AddDataMember will add the information about one data; * MemberAt of the union; *; * @param Name of the data MemberAt; * @param At of the data MemberAt; * @param Offset of the data MemberAt; * @param modifiers the modifiers of the data MemberAt. AddFunctionMember will add the information about one; * function MemberAt of the union; *; * @param Name of the function MemberAt; * @param At of the function MemberAt; * @param stubFP Stub function pointer for the function; * @param stubCxt Stub user context for the stub function; * @param params parameter names and default values (semi-colon separated); * @param modifiers the modifiers of the function MemberAt. void AddProperty(const char* key, const char* value). * AddProperty will add a PropertyNth to the PropertyNth stack; * which will be emtpied with the next build of a union; * or union item; * @param key the PropertyNth key; * @param value the value of the PropertyNth; * @return a reference to the building class. Type ToType(); SetSizeOf will set the SizeOf property for this",MatchSource.WIKI,root/html534/Reflex__UnionBuilderImpl.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__UnionBuilderImpl.html
https://root.cern/root/html534/Reflex__UnionBuilderImpl.html:1823,Testability,stub,stubCtx,1823,"mplUnionBuilderImpl(const Reflex::UnionBuilderImpl&); Reflex::UnionBuilderImplUnionBuilderImpl(const char* nam, size_t size, const type_info& ti, unsigned int modifiers = 0, Reflex::TYPE typ = UNION). protected:. voidEnableCallback(const bool enable = true). Data Members; private:. boolfCallbackEnabled; Reflex::MemberfLastMember; Reflex::Union*fUnion. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; UnionBuilderImpl(const char* nam, size_t size, const type_info& ti, unsigned int modifiers = 0, Reflex::TYPE typ = UNION); constructor . virtual ~UnionBuilderImpl(); destructor . void AddItem(const char* nam, const Reflex::Type& typ). * AddItem will add one union item; * @param Name the Name of the union item; * @param At the At of the union item. void AddFunctionMember(const char* nam, const Reflex::Type& typ, Reflex::StubFunction stubFP, void* stubCtx = 0, const char* params = 0, unsigned int modifiers = 0); AddDataMember will add the information about one data; * MemberAt of the union; *; * @param Name of the data MemberAt; * @param At of the data MemberAt; * @param Offset of the data MemberAt; * @param modifiers the modifiers of the data MemberAt. AddFunctionMember will add the information about one; * function MemberAt of the union; *; * @param Name of the function MemberAt; * @param At of the function MemberAt; * @param stubFP Stub function pointer for the function; * @param stubCxt Stub user context for the stub function; * @param params parameter names and default values (semi-colon separated); * @param modifiers the modifiers of the function MemberAt. void AddProperty(const char* key, const char* value). * AddProperty will add a PropertyNth to the PropertyNth stack; * which will be emtpied with the next build of a union; * or union item; * @param key the PropertyNth key; * @param value the value of the PropertyNth; * @return a reference to the building class. Type ToType(); SetSizeOf will set the SizeOf property for this",MatchSource.WIKI,root/html534/Reflex__UnionBuilderImpl.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__UnionBuilderImpl.html
https://root.cern/root/html534/Reflex__UnionBuilderImpl.html:2313,Testability,stub,stubFP,2313,"aries. Function documentation; UnionBuilderImpl(const char* nam, size_t size, const type_info& ti, unsigned int modifiers = 0, Reflex::TYPE typ = UNION); constructor . virtual ~UnionBuilderImpl(); destructor . void AddItem(const char* nam, const Reflex::Type& typ). * AddItem will add one union item; * @param Name the Name of the union item; * @param At the At of the union item. void AddFunctionMember(const char* nam, const Reflex::Type& typ, Reflex::StubFunction stubFP, void* stubCtx = 0, const char* params = 0, unsigned int modifiers = 0); AddDataMember will add the information about one data; * MemberAt of the union; *; * @param Name of the data MemberAt; * @param At of the data MemberAt; * @param Offset of the data MemberAt; * @param modifiers the modifiers of the data MemberAt. AddFunctionMember will add the information about one; * function MemberAt of the union; *; * @param Name of the function MemberAt; * @param At of the function MemberAt; * @param stubFP Stub function pointer for the function; * @param stubCxt Stub user context for the stub function; * @param params parameter names and default values (semi-colon separated); * @param modifiers the modifiers of the function MemberAt. void AddProperty(const char* key, const char* value). * AddProperty will add a PropertyNth to the PropertyNth stack; * which will be emtpied with the next build of a union; * or union item; * @param key the PropertyNth key; * @param value the value of the PropertyNth; * @return a reference to the building class. Type ToType(); SetSizeOf will set the SizeOf property for this union.; * It currently ignores all actual content.; * @size Size of the union. * ToType will return the currently produced Type (class); * @return the type currently being built. void EnableCallback(const bool enable = true). * EnableCallback Enable or disable the callback call in the destructor; * @param enable true to enable callback call, false to disable callback call. template <class T> UnionBuilder& AddDa",MatchSource.WIKI,root/html534/Reflex__UnionBuilderImpl.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__UnionBuilderImpl.html
https://root.cern/root/html534/Reflex__UnionBuilderImpl.html:2320,Testability,Stub,Stub,2320,"aries. Function documentation; UnionBuilderImpl(const char* nam, size_t size, const type_info& ti, unsigned int modifiers = 0, Reflex::TYPE typ = UNION); constructor . virtual ~UnionBuilderImpl(); destructor . void AddItem(const char* nam, const Reflex::Type& typ). * AddItem will add one union item; * @param Name the Name of the union item; * @param At the At of the union item. void AddFunctionMember(const char* nam, const Reflex::Type& typ, Reflex::StubFunction stubFP, void* stubCtx = 0, const char* params = 0, unsigned int modifiers = 0); AddDataMember will add the information about one data; * MemberAt of the union; *; * @param Name of the data MemberAt; * @param At of the data MemberAt; * @param Offset of the data MemberAt; * @param modifiers the modifiers of the data MemberAt. AddFunctionMember will add the information about one; * function MemberAt of the union; *; * @param Name of the function MemberAt; * @param At of the function MemberAt; * @param stubFP Stub function pointer for the function; * @param stubCxt Stub user context for the stub function; * @param params parameter names and default values (semi-colon separated); * @param modifiers the modifiers of the function MemberAt. void AddProperty(const char* key, const char* value). * AddProperty will add a PropertyNth to the PropertyNth stack; * which will be emtpied with the next build of a union; * or union item; * @param key the PropertyNth key; * @param value the value of the PropertyNth; * @return a reference to the building class. Type ToType(); SetSizeOf will set the SizeOf property for this union.; * It currently ignores all actual content.; * @size Size of the union. * ToType will return the currently produced Type (class); * @return the type currently being built. void EnableCallback(const bool enable = true). * EnableCallback Enable or disable the callback call in the destructor; * @param enable true to enable callback call, false to disable callback call. template <class T> UnionBuilder& AddDa",MatchSource.WIKI,root/html534/Reflex__UnionBuilderImpl.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__UnionBuilderImpl.html
https://root.cern/root/html534/Reflex__UnionBuilderImpl.html:2369,Testability,stub,stubCxt,2369,"aries. Function documentation; UnionBuilderImpl(const char* nam, size_t size, const type_info& ti, unsigned int modifiers = 0, Reflex::TYPE typ = UNION); constructor . virtual ~UnionBuilderImpl(); destructor . void AddItem(const char* nam, const Reflex::Type& typ). * AddItem will add one union item; * @param Name the Name of the union item; * @param At the At of the union item. void AddFunctionMember(const char* nam, const Reflex::Type& typ, Reflex::StubFunction stubFP, void* stubCtx = 0, const char* params = 0, unsigned int modifiers = 0); AddDataMember will add the information about one data; * MemberAt of the union; *; * @param Name of the data MemberAt; * @param At of the data MemberAt; * @param Offset of the data MemberAt; * @param modifiers the modifiers of the data MemberAt. AddFunctionMember will add the information about one; * function MemberAt of the union; *; * @param Name of the function MemberAt; * @param At of the function MemberAt; * @param stubFP Stub function pointer for the function; * @param stubCxt Stub user context for the stub function; * @param params parameter names and default values (semi-colon separated); * @param modifiers the modifiers of the function MemberAt. void AddProperty(const char* key, const char* value). * AddProperty will add a PropertyNth to the PropertyNth stack; * which will be emtpied with the next build of a union; * or union item; * @param key the PropertyNth key; * @param value the value of the PropertyNth; * @return a reference to the building class. Type ToType(); SetSizeOf will set the SizeOf property for this union.; * It currently ignores all actual content.; * @size Size of the union. * ToType will return the currently produced Type (class); * @return the type currently being built. void EnableCallback(const bool enable = true). * EnableCallback Enable or disable the callback call in the destructor; * @param enable true to enable callback call, false to disable callback call. template <class T> UnionBuilder& AddDa",MatchSource.WIKI,root/html534/Reflex__UnionBuilderImpl.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__UnionBuilderImpl.html
https://root.cern/root/html534/Reflex__UnionBuilderImpl.html:2377,Testability,Stub,Stub,2377,"aries. Function documentation; UnionBuilderImpl(const char* nam, size_t size, const type_info& ti, unsigned int modifiers = 0, Reflex::TYPE typ = UNION); constructor . virtual ~UnionBuilderImpl(); destructor . void AddItem(const char* nam, const Reflex::Type& typ). * AddItem will add one union item; * @param Name the Name of the union item; * @param At the At of the union item. void AddFunctionMember(const char* nam, const Reflex::Type& typ, Reflex::StubFunction stubFP, void* stubCtx = 0, const char* params = 0, unsigned int modifiers = 0); AddDataMember will add the information about one data; * MemberAt of the union; *; * @param Name of the data MemberAt; * @param At of the data MemberAt; * @param Offset of the data MemberAt; * @param modifiers the modifiers of the data MemberAt. AddFunctionMember will add the information about one; * function MemberAt of the union; *; * @param Name of the function MemberAt; * @param At of the function MemberAt; * @param stubFP Stub function pointer for the function; * @param stubCxt Stub user context for the stub function; * @param params parameter names and default values (semi-colon separated); * @param modifiers the modifiers of the function MemberAt. void AddProperty(const char* key, const char* value). * AddProperty will add a PropertyNth to the PropertyNth stack; * which will be emtpied with the next build of a union; * or union item; * @param key the PropertyNth key; * @param value the value of the PropertyNth; * @return a reference to the building class. Type ToType(); SetSizeOf will set the SizeOf property for this union.; * It currently ignores all actual content.; * @size Size of the union. * ToType will return the currently produced Type (class); * @return the type currently being built. void EnableCallback(const bool enable = true). * EnableCallback Enable or disable the callback call in the destructor; * @param enable true to enable callback call, false to disable callback call. template <class T> UnionBuilder& AddDa",MatchSource.WIKI,root/html534/Reflex__UnionBuilderImpl.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__UnionBuilderImpl.html
https://root.cern/root/html534/Reflex__UnionBuilderImpl.html:2403,Testability,stub,stub,2403,"aries. Function documentation; UnionBuilderImpl(const char* nam, size_t size, const type_info& ti, unsigned int modifiers = 0, Reflex::TYPE typ = UNION); constructor . virtual ~UnionBuilderImpl(); destructor . void AddItem(const char* nam, const Reflex::Type& typ). * AddItem will add one union item; * @param Name the Name of the union item; * @param At the At of the union item. void AddFunctionMember(const char* nam, const Reflex::Type& typ, Reflex::StubFunction stubFP, void* stubCtx = 0, const char* params = 0, unsigned int modifiers = 0); AddDataMember will add the information about one data; * MemberAt of the union; *; * @param Name of the data MemberAt; * @param At of the data MemberAt; * @param Offset of the data MemberAt; * @param modifiers the modifiers of the data MemberAt. AddFunctionMember will add the information about one; * function MemberAt of the union; *; * @param Name of the function MemberAt; * @param At of the function MemberAt; * @param stubFP Stub function pointer for the function; * @param stubCxt Stub user context for the stub function; * @param params parameter names and default values (semi-colon separated); * @param modifiers the modifiers of the function MemberAt. void AddProperty(const char* key, const char* value). * AddProperty will add a PropertyNth to the PropertyNth stack; * which will be emtpied with the next build of a union; * or union item; * @param key the PropertyNth key; * @param value the value of the PropertyNth; * @return a reference to the building class. Type ToType(); SetSizeOf will set the SizeOf property for this union.; * It currently ignores all actual content.; * @size Size of the union. * ToType will return the currently produced Type (class); * @return the type currently being built. void EnableCallback(const bool enable = true). * EnableCallback Enable or disable the callback call in the destructor; * @param enable true to enable callback call, false to disable callback call. template <class T> UnionBuilder& AddDa",MatchSource.WIKI,root/html534/Reflex__UnionBuilderImpl.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__UnionBuilderImpl.html
https://root.cern/root/html534/Reflex__UnknownType.html:500,Modifiability,Inherit,Inheritance,500,. Reflex::UnknownType. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::UnknownType. class Reflex::UnknownType. Function Members (Methods); public:. ~UnknownType(); Reflex::UnknownType&operator=(const Reflex::UnknownType&); Reflex::UnknownTypeUnknownType(); Reflex::UnknownTypeUnknownType(const Reflex::UnknownType&). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ,MatchSource.WIKI,root/html534/Reflex__UnknownType.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__UnknownType.html
https://root.cern/root/html534/Reflex__UnknownType.html:513,Modifiability,Inherit,Inherited,513,. Reflex::UnknownType. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::UnknownType. class Reflex::UnknownType. Function Members (Methods); public:. ~UnknownType(); Reflex::UnknownType&operator=(const Reflex::UnknownType&); Reflex::UnknownTypeUnknownType(); Reflex::UnknownTypeUnknownType(const Reflex::UnknownType&). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ,MatchSource.WIKI,root/html534/Reflex__UnknownType.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__UnknownType.html
https://root.cern/root/html534/Reflex__UnnamedClass.html:511,Modifiability,Inherit,Inheritance,511,. Reflex::UnnamedClass. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::UnnamedClass. class Reflex::UnnamedClass. Function Members (Methods); public:. ~UnnamedClass(); Reflex::UnnamedClass&operator=(const Reflex::UnnamedClass&); Reflex::UnnamedClassUnnamedClass(); Reflex::UnnamedClassUnnamedClass(const Reflex::UnnamedClass&). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ,MatchSource.WIKI,root/html534/Reflex__UnnamedClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__UnnamedClass.html
https://root.cern/root/html534/Reflex__UnnamedClass.html:524,Modifiability,Inherit,Inherited,524,. Reflex::UnnamedClass. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::UnnamedClass. class Reflex::UnnamedClass. Function Members (Methods); public:. ~UnnamedClass(); Reflex::UnnamedClass&operator=(const Reflex::UnnamedClass&); Reflex::UnnamedClassUnnamedClass(); Reflex::UnnamedClassUnnamedClass(const Reflex::UnnamedClass&). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ,MatchSource.WIKI,root/html534/Reflex__UnnamedClass.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__UnnamedClass.html
https://root.cern/root/html534/Reflex__UnnamedEnum.html:500,Modifiability,Inherit,Inheritance,500,. Reflex::UnnamedEnum. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::UnnamedEnum. class Reflex::UnnamedEnum. Function Members (Methods); public:. ~UnnamedEnum(); Reflex::UnnamedEnum&operator=(const Reflex::UnnamedEnum&); Reflex::UnnamedEnumUnnamedEnum(); Reflex::UnnamedEnumUnnamedEnum(const Reflex::UnnamedEnum&). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ,MatchSource.WIKI,root/html534/Reflex__UnnamedEnum.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__UnnamedEnum.html
https://root.cern/root/html534/Reflex__UnnamedEnum.html:513,Modifiability,Inherit,Inherited,513,. Reflex::UnnamedEnum. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::UnnamedEnum. class Reflex::UnnamedEnum. Function Members (Methods); public:. ~UnnamedEnum(); Reflex::UnnamedEnum&operator=(const Reflex::UnnamedEnum&); Reflex::UnnamedEnumUnnamedEnum(); Reflex::UnnamedEnumUnnamedEnum(const Reflex::UnnamedEnum&). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ,MatchSource.WIKI,root/html534/Reflex__UnnamedEnum.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__UnnamedEnum.html
https://root.cern/root/html534/Reflex__UnnamedNamespace.html:555,Modifiability,Inherit,Inheritance,555,. Reflex::UnnamedNamespace. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::UnnamedNamespace. class Reflex::UnnamedNamespace. Function Members (Methods); public:. ~UnnamedNamespace(); Reflex::UnnamedNamespace&operator=(const Reflex::UnnamedNamespace&); Reflex::UnnamedNamespaceUnnamedNamespace(); Reflex::UnnamedNamespaceUnnamedNamespace(const Reflex::UnnamedNamespace&). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ,MatchSource.WIKI,root/html534/Reflex__UnnamedNamespace.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__UnnamedNamespace.html
https://root.cern/root/html534/Reflex__UnnamedNamespace.html:568,Modifiability,Inherit,Inherited,568,. Reflex::UnnamedNamespace. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::UnnamedNamespace. class Reflex::UnnamedNamespace. Function Members (Methods); public:. ~UnnamedNamespace(); Reflex::UnnamedNamespace&operator=(const Reflex::UnnamedNamespace&); Reflex::UnnamedNamespaceUnnamedNamespace(); Reflex::UnnamedNamespaceUnnamedNamespace(const Reflex::UnnamedNamespace&). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ,MatchSource.WIKI,root/html534/Reflex__UnnamedNamespace.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__UnnamedNamespace.html
https://root.cern/root/html534/Reflex__UnnamedStruct.html:522,Modifiability,Inherit,Inheritance,522,. Reflex::UnnamedStruct. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::UnnamedStruct. class Reflex::UnnamedStruct. Function Members (Methods); public:. ~UnnamedStruct(); Reflex::UnnamedStruct&operator=(const Reflex::UnnamedStruct&); Reflex::UnnamedStructUnnamedStruct(); Reflex::UnnamedStructUnnamedStruct(const Reflex::UnnamedStruct&). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ,MatchSource.WIKI,root/html534/Reflex__UnnamedStruct.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__UnnamedStruct.html
https://root.cern/root/html534/Reflex__UnnamedStruct.html:535,Modifiability,Inherit,Inherited,535,. Reflex::UnnamedStruct. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::UnnamedStruct. class Reflex::UnnamedStruct. Function Members (Methods); public:. ~UnnamedStruct(); Reflex::UnnamedStruct&operator=(const Reflex::UnnamedStruct&); Reflex::UnnamedStructUnnamedStruct(); Reflex::UnnamedStructUnnamedStruct(const Reflex::UnnamedStruct&). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ,MatchSource.WIKI,root/html534/Reflex__UnnamedStruct.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__UnnamedStruct.html
https://root.cern/root/html534/Reflex__UnnamedUnion.html:511,Modifiability,Inherit,Inheritance,511,. Reflex::UnnamedUnion. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::UnnamedUnion. class Reflex::UnnamedUnion. Function Members (Methods); public:. ~UnnamedUnion(); Reflex::UnnamedUnion&operator=(const Reflex::UnnamedUnion&); Reflex::UnnamedUnionUnnamedUnion(); Reflex::UnnamedUnionUnnamedUnion(const Reflex::UnnamedUnion&). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ,MatchSource.WIKI,root/html534/Reflex__UnnamedUnion.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__UnnamedUnion.html
https://root.cern/root/html534/Reflex__UnnamedUnion.html:524,Modifiability,Inherit,Inherited,524,. Reflex::UnnamedUnion. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::UnnamedUnion. class Reflex::UnnamedUnion. Function Members (Methods); public:. ~UnnamedUnion(); Reflex::UnnamedUnion&operator=(const Reflex::UnnamedUnion&); Reflex::UnnamedUnionUnnamedUnion(); Reflex::UnnamedUnionUnnamedUnion(const Reflex::UnnamedUnion&). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ,MatchSource.WIKI,root/html534/Reflex__UnnamedUnion.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__UnnamedUnion.html
https://root.cern/root/html534/Reflex__VariableBuilder.html:10,Modifiability,Variab,VariableBuilder,10,". Reflex::VariableBuilder. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::VariableBuilder. class Reflex::VariableBuilder. Function Members (Methods); public:. virtual~VariableBuilder(); Reflex::VariableBuilder&AddProperty(const char* key, Reflex::Any value); Reflex::VariableBuilder&AddProperty(const char* key, const char* value); Reflex::VariableBuilder&operator=(const Reflex::VariableBuilder&); Reflex::MemberToMember(); Reflex::VariableBuilderVariableBuilder(const Reflex::VariableBuilder&); Reflex::VariableBuilderVariableBuilder(const char* nam, const Reflex::Type& typ, size_t offs, unsigned int modifiers = 0). Data Members; private:. Reflex::MemberfDataMember. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; VariableBuilder(const char* nam, const Reflex::Type& typ, size_t offs, unsigned int modifiers = 0); constructor . VariableBuilder& AddProperty(const char* key, Any value); destructor . * AddProperty will add a property; * @param key the property key; * @param value the value of the property; * @return a reference to the building class. Member ToMember(). * ToMember will return the member currently being built; * @return member currently being built. void AddProperty(const char* key, Any value); AddProperty will add a property; * @param key the property key; * @param value the value of the property; * @return a reference to the building class. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/Reflex__VariableBuilder.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__VariableBuilder.html
https://root.cern/root/html534/Reflex__VariableBuilder.html:244,Modifiability,Variab,VariableBuilder,244,". Reflex::VariableBuilder. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::VariableBuilder. class Reflex::VariableBuilder. Function Members (Methods); public:. virtual~VariableBuilder(); Reflex::VariableBuilder&AddProperty(const char* key, Reflex::Any value); Reflex::VariableBuilder&AddProperty(const char* key, const char* value); Reflex::VariableBuilder&operator=(const Reflex::VariableBuilder&); Reflex::MemberToMember(); Reflex::VariableBuilderVariableBuilder(const Reflex::VariableBuilder&); Reflex::VariableBuilderVariableBuilder(const char* nam, const Reflex::Type& typ, size_t offs, unsigned int modifiers = 0). Data Members; private:. Reflex::MemberfDataMember. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; VariableBuilder(const char* nam, const Reflex::Type& typ, size_t offs, unsigned int modifiers = 0); constructor . VariableBuilder& AddProperty(const char* key, Any value); destructor . * AddProperty will add a property; * @param key the property key; * @param value the value of the property; * @return a reference to the building class. Member ToMember(). * ToMember will return the member currently being built; * @return member currently being built. void AddProperty(const char* key, Any value); AddProperty will add a property; * @param key the property key; * @param value the value of the property; * @return a reference to the building class. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/Reflex__VariableBuilder.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__VariableBuilder.html
https://root.cern/root/html534/Reflex__VariableBuilder.html:275,Modifiability,Variab,VariableBuilder,275,". Reflex::VariableBuilder. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::VariableBuilder. class Reflex::VariableBuilder. Function Members (Methods); public:. virtual~VariableBuilder(); Reflex::VariableBuilder&AddProperty(const char* key, Reflex::Any value); Reflex::VariableBuilder&AddProperty(const char* key, const char* value); Reflex::VariableBuilder&operator=(const Reflex::VariableBuilder&); Reflex::MemberToMember(); Reflex::VariableBuilderVariableBuilder(const Reflex::VariableBuilder&); Reflex::VariableBuilderVariableBuilder(const char* nam, const Reflex::Type& typ, size_t offs, unsigned int modifiers = 0). Data Members; private:. Reflex::MemberfDataMember. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; VariableBuilder(const char* nam, const Reflex::Type& typ, size_t offs, unsigned int modifiers = 0); constructor . VariableBuilder& AddProperty(const char* key, Any value); destructor . * AddProperty will add a property; * @param key the property key; * @param value the value of the property; * @return a reference to the building class. Member ToMember(). * ToMember will return the member currently being built; * @return member currently being built. void AddProperty(const char* key, Any value); AddProperty will add a property; * @param key the property key; * @param value the value of the property; * @return a reference to the building class. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/Reflex__VariableBuilder.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__VariableBuilder.html
https://root.cern/root/html534/Reflex__VariableBuilder.html:337,Modifiability,Variab,VariableBuilder,337,". Reflex::VariableBuilder. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::VariableBuilder. class Reflex::VariableBuilder. Function Members (Methods); public:. virtual~VariableBuilder(); Reflex::VariableBuilder&AddProperty(const char* key, Reflex::Any value); Reflex::VariableBuilder&AddProperty(const char* key, const char* value); Reflex::VariableBuilder&operator=(const Reflex::VariableBuilder&); Reflex::MemberToMember(); Reflex::VariableBuilderVariableBuilder(const Reflex::VariableBuilder&); Reflex::VariableBuilderVariableBuilder(const char* nam, const Reflex::Type& typ, size_t offs, unsigned int modifiers = 0). Data Members; private:. Reflex::MemberfDataMember. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; VariableBuilder(const char* nam, const Reflex::Type& typ, size_t offs, unsigned int modifiers = 0); constructor . VariableBuilder& AddProperty(const char* key, Any value); destructor . * AddProperty will add a property; * @param key the property key; * @param value the value of the property; * @return a reference to the building class. Member ToMember(). * ToMember will return the member currently being built; * @return member currently being built. void AddProperty(const char* key, Any value); AddProperty will add a property; * @param key the property key; * @param value the value of the property; * @return a reference to the building class. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/Reflex__VariableBuilder.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__VariableBuilder.html
https://root.cern/root/html534/Reflex__VariableBuilder.html:364,Modifiability,Variab,VariableBuilder,364,". Reflex::VariableBuilder. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::VariableBuilder. class Reflex::VariableBuilder. Function Members (Methods); public:. virtual~VariableBuilder(); Reflex::VariableBuilder&AddProperty(const char* key, Reflex::Any value); Reflex::VariableBuilder&AddProperty(const char* key, const char* value); Reflex::VariableBuilder&operator=(const Reflex::VariableBuilder&); Reflex::MemberToMember(); Reflex::VariableBuilderVariableBuilder(const Reflex::VariableBuilder&); Reflex::VariableBuilderVariableBuilder(const char* nam, const Reflex::Type& typ, size_t offs, unsigned int modifiers = 0). Data Members; private:. Reflex::MemberfDataMember. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; VariableBuilder(const char* nam, const Reflex::Type& typ, size_t offs, unsigned int modifiers = 0); constructor . VariableBuilder& AddProperty(const char* key, Any value); destructor . * AddProperty will add a property; * @param key the property key; * @param value the value of the property; * @return a reference to the building class. Member ToMember(). * ToMember will return the member currently being built; * @return member currently being built. void AddProperty(const char* key, Any value); AddProperty will add a property; * @param key the property key; * @param value the value of the property; * @return a reference to the building class. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/Reflex__VariableBuilder.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__VariableBuilder.html
https://root.cern/root/html534/Reflex__VariableBuilder.html:437,Modifiability,Variab,VariableBuilder,437,". Reflex::VariableBuilder. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::VariableBuilder. class Reflex::VariableBuilder. Function Members (Methods); public:. virtual~VariableBuilder(); Reflex::VariableBuilder&AddProperty(const char* key, Reflex::Any value); Reflex::VariableBuilder&AddProperty(const char* key, const char* value); Reflex::VariableBuilder&operator=(const Reflex::VariableBuilder&); Reflex::MemberToMember(); Reflex::VariableBuilderVariableBuilder(const Reflex::VariableBuilder&); Reflex::VariableBuilderVariableBuilder(const char* nam, const Reflex::Type& typ, size_t offs, unsigned int modifiers = 0). Data Members; private:. Reflex::MemberfDataMember. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; VariableBuilder(const char* nam, const Reflex::Type& typ, size_t offs, unsigned int modifiers = 0); constructor . VariableBuilder& AddProperty(const char* key, Any value); destructor . * AddProperty will add a property; * @param key the property key; * @param value the value of the property; * @return a reference to the building class. Member ToMember(). * ToMember will return the member currently being built; * @return member currently being built. void AddProperty(const char* key, Any value); AddProperty will add a property; * @param key the property key; * @param value the value of the property; * @return a reference to the building class. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/Reflex__VariableBuilder.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__VariableBuilder.html
https://root.cern/root/html534/Reflex__VariableBuilder.html:510,Modifiability,Variab,VariableBuilder,510,". Reflex::VariableBuilder. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::VariableBuilder. class Reflex::VariableBuilder. Function Members (Methods); public:. virtual~VariableBuilder(); Reflex::VariableBuilder&AddProperty(const char* key, Reflex::Any value); Reflex::VariableBuilder&AddProperty(const char* key, const char* value); Reflex::VariableBuilder&operator=(const Reflex::VariableBuilder&); Reflex::MemberToMember(); Reflex::VariableBuilderVariableBuilder(const Reflex::VariableBuilder&); Reflex::VariableBuilderVariableBuilder(const char* nam, const Reflex::Type& typ, size_t offs, unsigned int modifiers = 0). Data Members; private:. Reflex::MemberfDataMember. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; VariableBuilder(const char* nam, const Reflex::Type& typ, size_t offs, unsigned int modifiers = 0); constructor . VariableBuilder& AddProperty(const char* key, Any value); destructor . * AddProperty will add a property; * @param key the property key; * @param value the value of the property; * @return a reference to the building class. Member ToMember(). * ToMember will return the member currently being built; * @return member currently being built. void AddProperty(const char* key, Any value); AddProperty will add a property; * @param key the property key; * @param value the value of the property; * @return a reference to the building class. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/Reflex__VariableBuilder.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__VariableBuilder.html
https://root.cern/root/html534/Reflex__VariableBuilder.html:550,Modifiability,Variab,VariableBuilder,550,". Reflex::VariableBuilder. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::VariableBuilder. class Reflex::VariableBuilder. Function Members (Methods); public:. virtual~VariableBuilder(); Reflex::VariableBuilder&AddProperty(const char* key, Reflex::Any value); Reflex::VariableBuilder&AddProperty(const char* key, const char* value); Reflex::VariableBuilder&operator=(const Reflex::VariableBuilder&); Reflex::MemberToMember(); Reflex::VariableBuilderVariableBuilder(const Reflex::VariableBuilder&); Reflex::VariableBuilderVariableBuilder(const char* nam, const Reflex::Type& typ, size_t offs, unsigned int modifiers = 0). Data Members; private:. Reflex::MemberfDataMember. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; VariableBuilder(const char* nam, const Reflex::Type& typ, size_t offs, unsigned int modifiers = 0); constructor . VariableBuilder& AddProperty(const char* key, Any value); destructor . * AddProperty will add a property; * @param key the property key; * @param value the value of the property; * @return a reference to the building class. Member ToMember(). * ToMember will return the member currently being built; * @return member currently being built. void AddProperty(const char* key, Any value); AddProperty will add a property; * @param key the property key; * @param value the value of the property; * @return a reference to the building class. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/Reflex__VariableBuilder.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__VariableBuilder.html
https://root.cern/root/html534/Reflex__VariableBuilder.html:603,Modifiability,Variab,VariableBuilderVariableBuilder,603,". Reflex::VariableBuilder. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::VariableBuilder. class Reflex::VariableBuilder. Function Members (Methods); public:. virtual~VariableBuilder(); Reflex::VariableBuilder&AddProperty(const char* key, Reflex::Any value); Reflex::VariableBuilder&AddProperty(const char* key, const char* value); Reflex::VariableBuilder&operator=(const Reflex::VariableBuilder&); Reflex::MemberToMember(); Reflex::VariableBuilderVariableBuilder(const Reflex::VariableBuilder&); Reflex::VariableBuilderVariableBuilder(const char* nam, const Reflex::Type& typ, size_t offs, unsigned int modifiers = 0). Data Members; private:. Reflex::MemberfDataMember. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; VariableBuilder(const char* nam, const Reflex::Type& typ, size_t offs, unsigned int modifiers = 0); constructor . VariableBuilder& AddProperty(const char* key, Any value); destructor . * AddProperty will add a property; * @param key the property key; * @param value the value of the property; * @return a reference to the building class. Member ToMember(). * ToMember will return the member currently being built; * @return member currently being built. void AddProperty(const char* key, Any value); AddProperty will add a property; * @param key the property key; * @param value the value of the property; * @return a reference to the building class. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/Reflex__VariableBuilder.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__VariableBuilder.html
https://root.cern/root/html534/Reflex__VariableBuilder.html:648,Modifiability,Variab,VariableBuilder,648,". Reflex::VariableBuilder. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::VariableBuilder. class Reflex::VariableBuilder. Function Members (Methods); public:. virtual~VariableBuilder(); Reflex::VariableBuilder&AddProperty(const char* key, Reflex::Any value); Reflex::VariableBuilder&AddProperty(const char* key, const char* value); Reflex::VariableBuilder&operator=(const Reflex::VariableBuilder&); Reflex::MemberToMember(); Reflex::VariableBuilderVariableBuilder(const Reflex::VariableBuilder&); Reflex::VariableBuilderVariableBuilder(const char* nam, const Reflex::Type& typ, size_t offs, unsigned int modifiers = 0). Data Members; private:. Reflex::MemberfDataMember. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; VariableBuilder(const char* nam, const Reflex::Type& typ, size_t offs, unsigned int modifiers = 0); constructor . VariableBuilder& AddProperty(const char* key, Any value); destructor . * AddProperty will add a property; * @param key the property key; * @param value the value of the property; * @return a reference to the building class. Member ToMember(). * ToMember will return the member currently being built; * @return member currently being built. void AddProperty(const char* key, Any value); AddProperty will add a property; * @param key the property key; * @param value the value of the property; * @return a reference to the building class. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/Reflex__VariableBuilder.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__VariableBuilder.html
https://root.cern/root/html534/Reflex__VariableBuilder.html:675,Modifiability,Variab,VariableBuilderVariableBuilder,675,". Reflex::VariableBuilder. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::VariableBuilder. class Reflex::VariableBuilder. Function Members (Methods); public:. virtual~VariableBuilder(); Reflex::VariableBuilder&AddProperty(const char* key, Reflex::Any value); Reflex::VariableBuilder&AddProperty(const char* key, const char* value); Reflex::VariableBuilder&operator=(const Reflex::VariableBuilder&); Reflex::MemberToMember(); Reflex::VariableBuilderVariableBuilder(const Reflex::VariableBuilder&); Reflex::VariableBuilderVariableBuilder(const char* nam, const Reflex::Type& typ, size_t offs, unsigned int modifiers = 0). Data Members; private:. Reflex::MemberfDataMember. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; VariableBuilder(const char* nam, const Reflex::Type& typ, size_t offs, unsigned int modifiers = 0); constructor . VariableBuilder& AddProperty(const char* key, Any value); destructor . * AddProperty will add a property; * @param key the property key; * @param value the value of the property; * @return a reference to the building class. Member ToMember(). * ToMember will return the member currently being built; * @return member currently being built. void AddProperty(const char* key, Any value); AddProperty will add a property; * @param key the property key; * @param value the value of the property; * @return a reference to the building class. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/Reflex__VariableBuilder.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__VariableBuilder.html
https://root.cern/root/html534/Reflex__VariableBuilder.html:855,Modifiability,Inherit,Inheritance,855,". Reflex::VariableBuilder. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::VariableBuilder. class Reflex::VariableBuilder. Function Members (Methods); public:. virtual~VariableBuilder(); Reflex::VariableBuilder&AddProperty(const char* key, Reflex::Any value); Reflex::VariableBuilder&AddProperty(const char* key, const char* value); Reflex::VariableBuilder&operator=(const Reflex::VariableBuilder&); Reflex::MemberToMember(); Reflex::VariableBuilderVariableBuilder(const Reflex::VariableBuilder&); Reflex::VariableBuilderVariableBuilder(const char* nam, const Reflex::Type& typ, size_t offs, unsigned int modifiers = 0). Data Members; private:. Reflex::MemberfDataMember. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; VariableBuilder(const char* nam, const Reflex::Type& typ, size_t offs, unsigned int modifiers = 0); constructor . VariableBuilder& AddProperty(const char* key, Any value); destructor . * AddProperty will add a property; * @param key the property key; * @param value the value of the property; * @return a reference to the building class. Member ToMember(). * ToMember will return the member currently being built; * @return member currently being built. void AddProperty(const char* key, Any value); AddProperty will add a property; * @param key the property key; * @param value the value of the property; * @return a reference to the building class. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/Reflex__VariableBuilder.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__VariableBuilder.html
https://root.cern/root/html534/Reflex__VariableBuilder.html:868,Modifiability,Inherit,Inherited,868,". Reflex::VariableBuilder. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::VariableBuilder. class Reflex::VariableBuilder. Function Members (Methods); public:. virtual~VariableBuilder(); Reflex::VariableBuilder&AddProperty(const char* key, Reflex::Any value); Reflex::VariableBuilder&AddProperty(const char* key, const char* value); Reflex::VariableBuilder&operator=(const Reflex::VariableBuilder&); Reflex::MemberToMember(); Reflex::VariableBuilderVariableBuilder(const Reflex::VariableBuilder&); Reflex::VariableBuilderVariableBuilder(const char* nam, const Reflex::Type& typ, size_t offs, unsigned int modifiers = 0). Data Members; private:. Reflex::MemberfDataMember. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; VariableBuilder(const char* nam, const Reflex::Type& typ, size_t offs, unsigned int modifiers = 0); constructor . VariableBuilder& AddProperty(const char* key, Any value); destructor . * AddProperty will add a property; * @param key the property key; * @param value the value of the property; * @return a reference to the building class. Member ToMember(). * ToMember will return the member currently being built; * @return member currently being built. void AddProperty(const char* key, Any value); AddProperty will add a property; * @param key the property key; * @param value the value of the property; * @return a reference to the building class. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/Reflex__VariableBuilder.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__VariableBuilder.html
https://root.cern/root/html534/Reflex__VariableBuilder.html:932,Modifiability,Variab,VariableBuilder,932,". Reflex::VariableBuilder. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::VariableBuilder. class Reflex::VariableBuilder. Function Members (Methods); public:. virtual~VariableBuilder(); Reflex::VariableBuilder&AddProperty(const char* key, Reflex::Any value); Reflex::VariableBuilder&AddProperty(const char* key, const char* value); Reflex::VariableBuilder&operator=(const Reflex::VariableBuilder&); Reflex::MemberToMember(); Reflex::VariableBuilderVariableBuilder(const Reflex::VariableBuilder&); Reflex::VariableBuilderVariableBuilder(const char* nam, const Reflex::Type& typ, size_t offs, unsigned int modifiers = 0). Data Members; private:. Reflex::MemberfDataMember. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; VariableBuilder(const char* nam, const Reflex::Type& typ, size_t offs, unsigned int modifiers = 0); constructor . VariableBuilder& AddProperty(const char* key, Any value); destructor . * AddProperty will add a property; * @param key the property key; * @param value the value of the property; * @return a reference to the building class. Member ToMember(). * ToMember will return the member currently being built; * @return member currently being built. void AddProperty(const char* key, Any value); AddProperty will add a property; * @param key the property key; * @param value the value of the property; * @return a reference to the building class. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/Reflex__VariableBuilder.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__VariableBuilder.html
https://root.cern/root/html534/Reflex__VariableBuilder.html:1046,Modifiability,Variab,VariableBuilder,1046,". Reflex::VariableBuilder. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::VariableBuilder. class Reflex::VariableBuilder. Function Members (Methods); public:. virtual~VariableBuilder(); Reflex::VariableBuilder&AddProperty(const char* key, Reflex::Any value); Reflex::VariableBuilder&AddProperty(const char* key, const char* value); Reflex::VariableBuilder&operator=(const Reflex::VariableBuilder&); Reflex::MemberToMember(); Reflex::VariableBuilderVariableBuilder(const Reflex::VariableBuilder&); Reflex::VariableBuilderVariableBuilder(const char* nam, const Reflex::Type& typ, size_t offs, unsigned int modifiers = 0). Data Members; private:. Reflex::MemberfDataMember. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; VariableBuilder(const char* nam, const Reflex::Type& typ, size_t offs, unsigned int modifiers = 0); constructor . VariableBuilder& AddProperty(const char* key, Any value); destructor . * AddProperty will add a property; * @param key the property key; * @param value the value of the property; * @return a reference to the building class. Member ToMember(). * ToMember will return the member currently being built; * @return member currently being built. void AddProperty(const char* key, Any value); AddProperty will add a property; * @param key the property key; * @param value the value of the property; * @return a reference to the building class. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/Reflex__VariableBuilder.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__VariableBuilder.html
https://root.cern/root/html534/Reflex__VariableBuilderImpl.html:10,Modifiability,Variab,VariableBuilderImpl,10,". Reflex::VariableBuilderImpl. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::VariableBuilderImpl. class Reflex::VariableBuilderImpl. Function Members (Methods); public:. ~VariableBuilderImpl(); voidAddProperty(const char* key, Reflex::Any value); voidAddProperty(const char* key, const char* value); Reflex::VariableBuilderImpl&operator=(const Reflex::VariableBuilderImpl&); Reflex::MemberToMember(); Reflex::VariableBuilderImplVariableBuilderImpl(const Reflex::VariableBuilderImpl&); Reflex::VariableBuilderImplVariableBuilderImpl(const char* nam, const Reflex::Type& typ, size_t offs, unsigned int modifiers = 0). Data Members; private:. Reflex::MemberfDataMember. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; VariableBuilder& AddProperty(const char* key, Any value). * AddProperty will add a property; * @param key the property key; * @param value the value of the property; * @return a reference to the building class. Member ToMember(). * ToMember will return the member currently being built; * @return member currently being built. VariableBuilderImpl(const char* nam, const Reflex::Type& typ, size_t offs, unsigned int modifiers = 0); constructor . void AddProperty(const char* key, Any value); destructor ; AddProperty will add a property; * @param key the property key; * @param value the value of the property; * @return a reference to the building class. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/Reflex__VariableBuilderImpl.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__VariableBuilderImpl.html
https://root.cern/root/html534/Reflex__VariableBuilderImpl.html:248,Modifiability,Variab,VariableBuilderImpl,248,". Reflex::VariableBuilderImpl. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::VariableBuilderImpl. class Reflex::VariableBuilderImpl. Function Members (Methods); public:. ~VariableBuilderImpl(); voidAddProperty(const char* key, Reflex::Any value); voidAddProperty(const char* key, const char* value); Reflex::VariableBuilderImpl&operator=(const Reflex::VariableBuilderImpl&); Reflex::MemberToMember(); Reflex::VariableBuilderImplVariableBuilderImpl(const Reflex::VariableBuilderImpl&); Reflex::VariableBuilderImplVariableBuilderImpl(const char* nam, const Reflex::Type& typ, size_t offs, unsigned int modifiers = 0). Data Members; private:. Reflex::MemberfDataMember. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; VariableBuilder& AddProperty(const char* key, Any value). * AddProperty will add a property; * @param key the property key; * @param value the value of the property; * @return a reference to the building class. Member ToMember(). * ToMember will return the member currently being built; * @return member currently being built. VariableBuilderImpl(const char* nam, const Reflex::Type& typ, size_t offs, unsigned int modifiers = 0); constructor . void AddProperty(const char* key, Any value); destructor ; AddProperty will add a property; * @param key the property key; * @param value the value of the property; * @return a reference to the building class. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/Reflex__VariableBuilderImpl.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__VariableBuilderImpl.html
https://root.cern/root/html534/Reflex__VariableBuilderImpl.html:283,Modifiability,Variab,VariableBuilderImpl,283,". Reflex::VariableBuilderImpl. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::VariableBuilderImpl. class Reflex::VariableBuilderImpl. Function Members (Methods); public:. ~VariableBuilderImpl(); voidAddProperty(const char* key, Reflex::Any value); voidAddProperty(const char* key, const char* value); Reflex::VariableBuilderImpl&operator=(const Reflex::VariableBuilderImpl&); Reflex::MemberToMember(); Reflex::VariableBuilderImplVariableBuilderImpl(const Reflex::VariableBuilderImpl&); Reflex::VariableBuilderImplVariableBuilderImpl(const char* nam, const Reflex::Type& typ, size_t offs, unsigned int modifiers = 0). Data Members; private:. Reflex::MemberfDataMember. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; VariableBuilder& AddProperty(const char* key, Any value). * AddProperty will add a property; * @param key the property key; * @param value the value of the property; * @return a reference to the building class. Member ToMember(). * ToMember will return the member currently being built; * @return member currently being built. VariableBuilderImpl(const char* nam, const Reflex::Type& typ, size_t offs, unsigned int modifiers = 0); constructor . void AddProperty(const char* key, Any value); destructor ; AddProperty will add a property; * @param key the property key; * @param value the value of the property; * @return a reference to the building class. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/Reflex__VariableBuilderImpl.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__VariableBuilderImpl.html
https://root.cern/root/html534/Reflex__VariableBuilderImpl.html:342,Modifiability,Variab,VariableBuilderImpl,342,". Reflex::VariableBuilderImpl. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::VariableBuilderImpl. class Reflex::VariableBuilderImpl. Function Members (Methods); public:. ~VariableBuilderImpl(); voidAddProperty(const char* key, Reflex::Any value); voidAddProperty(const char* key, const char* value); Reflex::VariableBuilderImpl&operator=(const Reflex::VariableBuilderImpl&); Reflex::MemberToMember(); Reflex::VariableBuilderImplVariableBuilderImpl(const Reflex::VariableBuilderImpl&); Reflex::VariableBuilderImplVariableBuilderImpl(const char* nam, const Reflex::Type& typ, size_t offs, unsigned int modifiers = 0). Data Members; private:. Reflex::MemberfDataMember. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; VariableBuilder& AddProperty(const char* key, Any value). * AddProperty will add a property; * @param key the property key; * @param value the value of the property; * @return a reference to the building class. Member ToMember(). * ToMember will return the member currently being built; * @return member currently being built. VariableBuilderImpl(const char* nam, const Reflex::Type& typ, size_t offs, unsigned int modifiers = 0); constructor . void AddProperty(const char* key, Any value); destructor ; AddProperty will add a property; * @param key the property key; * @param value the value of the property; * @return a reference to the building class. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/Reflex__VariableBuilderImpl.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__VariableBuilderImpl.html
https://root.cern/root/html534/Reflex__VariableBuilderImpl.html:479,Modifiability,Variab,VariableBuilderImpl,479,". Reflex::VariableBuilderImpl. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::VariableBuilderImpl. class Reflex::VariableBuilderImpl. Function Members (Methods); public:. ~VariableBuilderImpl(); voidAddProperty(const char* key, Reflex::Any value); voidAddProperty(const char* key, const char* value); Reflex::VariableBuilderImpl&operator=(const Reflex::VariableBuilderImpl&); Reflex::MemberToMember(); Reflex::VariableBuilderImplVariableBuilderImpl(const Reflex::VariableBuilderImpl&); Reflex::VariableBuilderImplVariableBuilderImpl(const char* nam, const Reflex::Type& typ, size_t offs, unsigned int modifiers = 0). Data Members; private:. Reflex::MemberfDataMember. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; VariableBuilder& AddProperty(const char* key, Any value). * AddProperty will add a property; * @param key the property key; * @param value the value of the property; * @return a reference to the building class. Member ToMember(). * ToMember will return the member currently being built; * @return member currently being built. VariableBuilderImpl(const char* nam, const Reflex::Type& typ, size_t offs, unsigned int modifiers = 0); constructor . void AddProperty(const char* key, Any value); destructor ; AddProperty will add a property; * @param key the property key; * @param value the value of the property; * @return a reference to the building class. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/Reflex__VariableBuilderImpl.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__VariableBuilderImpl.html
https://root.cern/root/html534/Reflex__VariableBuilderImpl.html:523,Modifiability,Variab,VariableBuilderImpl,523,". Reflex::VariableBuilderImpl. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::VariableBuilderImpl. class Reflex::VariableBuilderImpl. Function Members (Methods); public:. ~VariableBuilderImpl(); voidAddProperty(const char* key, Reflex::Any value); voidAddProperty(const char* key, const char* value); Reflex::VariableBuilderImpl&operator=(const Reflex::VariableBuilderImpl&); Reflex::MemberToMember(); Reflex::VariableBuilderImplVariableBuilderImpl(const Reflex::VariableBuilderImpl&); Reflex::VariableBuilderImplVariableBuilderImpl(const char* nam, const Reflex::Type& typ, size_t offs, unsigned int modifiers = 0). Data Members; private:. Reflex::MemberfDataMember. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; VariableBuilder& AddProperty(const char* key, Any value). * AddProperty will add a property; * @param key the property key; * @param value the value of the property; * @return a reference to the building class. Member ToMember(). * ToMember will return the member currently being built; * @return member currently being built. VariableBuilderImpl(const char* nam, const Reflex::Type& typ, size_t offs, unsigned int modifiers = 0); constructor . void AddProperty(const char* key, Any value); destructor ; AddProperty will add a property; * @param key the property key; * @param value the value of the property; * @return a reference to the building class. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/Reflex__VariableBuilderImpl.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__VariableBuilderImpl.html
https://root.cern/root/html534/Reflex__VariableBuilderImpl.html:580,Modifiability,Variab,VariableBuilderImplVariableBuilderImpl,580,". Reflex::VariableBuilderImpl. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::VariableBuilderImpl. class Reflex::VariableBuilderImpl. Function Members (Methods); public:. ~VariableBuilderImpl(); voidAddProperty(const char* key, Reflex::Any value); voidAddProperty(const char* key, const char* value); Reflex::VariableBuilderImpl&operator=(const Reflex::VariableBuilderImpl&); Reflex::MemberToMember(); Reflex::VariableBuilderImplVariableBuilderImpl(const Reflex::VariableBuilderImpl&); Reflex::VariableBuilderImplVariableBuilderImpl(const char* nam, const Reflex::Type& typ, size_t offs, unsigned int modifiers = 0). Data Members; private:. Reflex::MemberfDataMember. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; VariableBuilder& AddProperty(const char* key, Any value). * AddProperty will add a property; * @param key the property key; * @param value the value of the property; * @return a reference to the building class. Member ToMember(). * ToMember will return the member currently being built; * @return member currently being built. VariableBuilderImpl(const char* nam, const Reflex::Type& typ, size_t offs, unsigned int modifiers = 0); constructor . void AddProperty(const char* key, Any value); destructor ; AddProperty will add a property; * @param key the property key; * @param value the value of the property; * @return a reference to the building class. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/Reflex__VariableBuilderImpl.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__VariableBuilderImpl.html
https://root.cern/root/html534/Reflex__VariableBuilderImpl.html:633,Modifiability,Variab,VariableBuilderImpl,633,". Reflex::VariableBuilderImpl. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::VariableBuilderImpl. class Reflex::VariableBuilderImpl. Function Members (Methods); public:. ~VariableBuilderImpl(); voidAddProperty(const char* key, Reflex::Any value); voidAddProperty(const char* key, const char* value); Reflex::VariableBuilderImpl&operator=(const Reflex::VariableBuilderImpl&); Reflex::MemberToMember(); Reflex::VariableBuilderImplVariableBuilderImpl(const Reflex::VariableBuilderImpl&); Reflex::VariableBuilderImplVariableBuilderImpl(const char* nam, const Reflex::Type& typ, size_t offs, unsigned int modifiers = 0). Data Members; private:. Reflex::MemberfDataMember. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; VariableBuilder& AddProperty(const char* key, Any value). * AddProperty will add a property; * @param key the property key; * @param value the value of the property; * @return a reference to the building class. Member ToMember(). * ToMember will return the member currently being built; * @return member currently being built. VariableBuilderImpl(const char* nam, const Reflex::Type& typ, size_t offs, unsigned int modifiers = 0); constructor . void AddProperty(const char* key, Any value); destructor ; AddProperty will add a property; * @param key the property key; * @param value the value of the property; * @return a reference to the building class. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/Reflex__VariableBuilderImpl.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__VariableBuilderImpl.html
https://root.cern/root/html534/Reflex__VariableBuilderImpl.html:664,Modifiability,Variab,VariableBuilderImplVariableBuilderImpl,664,". Reflex::VariableBuilderImpl. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::VariableBuilderImpl. class Reflex::VariableBuilderImpl. Function Members (Methods); public:. ~VariableBuilderImpl(); voidAddProperty(const char* key, Reflex::Any value); voidAddProperty(const char* key, const char* value); Reflex::VariableBuilderImpl&operator=(const Reflex::VariableBuilderImpl&); Reflex::MemberToMember(); Reflex::VariableBuilderImplVariableBuilderImpl(const Reflex::VariableBuilderImpl&); Reflex::VariableBuilderImplVariableBuilderImpl(const char* nam, const Reflex::Type& typ, size_t offs, unsigned int modifiers = 0). Data Members; private:. Reflex::MemberfDataMember. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; VariableBuilder& AddProperty(const char* key, Any value). * AddProperty will add a property; * @param key the property key; * @param value the value of the property; * @return a reference to the building class. Member ToMember(). * ToMember will return the member currently being built; * @return member currently being built. VariableBuilderImpl(const char* nam, const Reflex::Type& typ, size_t offs, unsigned int modifiers = 0); constructor . void AddProperty(const char* key, Any value); destructor ; AddProperty will add a property; * @param key the property key; * @param value the value of the property; * @return a reference to the building class. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/Reflex__VariableBuilderImpl.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__VariableBuilderImpl.html
https://root.cern/root/html534/Reflex__VariableBuilderImpl.html:852,Modifiability,Inherit,Inheritance,852,". Reflex::VariableBuilderImpl. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::VariableBuilderImpl. class Reflex::VariableBuilderImpl. Function Members (Methods); public:. ~VariableBuilderImpl(); voidAddProperty(const char* key, Reflex::Any value); voidAddProperty(const char* key, const char* value); Reflex::VariableBuilderImpl&operator=(const Reflex::VariableBuilderImpl&); Reflex::MemberToMember(); Reflex::VariableBuilderImplVariableBuilderImpl(const Reflex::VariableBuilderImpl&); Reflex::VariableBuilderImplVariableBuilderImpl(const char* nam, const Reflex::Type& typ, size_t offs, unsigned int modifiers = 0). Data Members; private:. Reflex::MemberfDataMember. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; VariableBuilder& AddProperty(const char* key, Any value). * AddProperty will add a property; * @param key the property key; * @param value the value of the property; * @return a reference to the building class. Member ToMember(). * ToMember will return the member currently being built; * @return member currently being built. VariableBuilderImpl(const char* nam, const Reflex::Type& typ, size_t offs, unsigned int modifiers = 0); constructor . void AddProperty(const char* key, Any value); destructor ; AddProperty will add a property; * @param key the property key; * @param value the value of the property; * @return a reference to the building class. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/Reflex__VariableBuilderImpl.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__VariableBuilderImpl.html
https://root.cern/root/html534/Reflex__VariableBuilderImpl.html:865,Modifiability,Inherit,Inherited,865,". Reflex::VariableBuilderImpl. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::VariableBuilderImpl. class Reflex::VariableBuilderImpl. Function Members (Methods); public:. ~VariableBuilderImpl(); voidAddProperty(const char* key, Reflex::Any value); voidAddProperty(const char* key, const char* value); Reflex::VariableBuilderImpl&operator=(const Reflex::VariableBuilderImpl&); Reflex::MemberToMember(); Reflex::VariableBuilderImplVariableBuilderImpl(const Reflex::VariableBuilderImpl&); Reflex::VariableBuilderImplVariableBuilderImpl(const char* nam, const Reflex::Type& typ, size_t offs, unsigned int modifiers = 0). Data Members; private:. Reflex::MemberfDataMember. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; VariableBuilder& AddProperty(const char* key, Any value). * AddProperty will add a property; * @param key the property key; * @param value the value of the property; * @return a reference to the building class. Member ToMember(). * ToMember will return the member currently being built; * @return member currently being built. VariableBuilderImpl(const char* nam, const Reflex::Type& typ, size_t offs, unsigned int modifiers = 0); constructor . void AddProperty(const char* key, Any value); destructor ; AddProperty will add a property; * @param key the property key; * @param value the value of the property; * @return a reference to the building class. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/Reflex__VariableBuilderImpl.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__VariableBuilderImpl.html
https://root.cern/root/html534/Reflex__VariableBuilderImpl.html:929,Modifiability,Variab,VariableBuilder,929,". Reflex::VariableBuilderImpl. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::VariableBuilderImpl. class Reflex::VariableBuilderImpl. Function Members (Methods); public:. ~VariableBuilderImpl(); voidAddProperty(const char* key, Reflex::Any value); voidAddProperty(const char* key, const char* value); Reflex::VariableBuilderImpl&operator=(const Reflex::VariableBuilderImpl&); Reflex::MemberToMember(); Reflex::VariableBuilderImplVariableBuilderImpl(const Reflex::VariableBuilderImpl&); Reflex::VariableBuilderImplVariableBuilderImpl(const char* nam, const Reflex::Type& typ, size_t offs, unsigned int modifiers = 0). Data Members; private:. Reflex::MemberfDataMember. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; VariableBuilder& AddProperty(const char* key, Any value). * AddProperty will add a property; * @param key the property key; * @param value the value of the property; * @return a reference to the building class. Member ToMember(). * ToMember will return the member currently being built; * @return member currently being built. VariableBuilderImpl(const char* nam, const Reflex::Type& typ, size_t offs, unsigned int modifiers = 0); constructor . void AddProperty(const char* key, Any value); destructor ; AddProperty will add a property; * @param key the property key; * @param value the value of the property; * @return a reference to the building class. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/Reflex__VariableBuilderImpl.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__VariableBuilderImpl.html
https://root.cern/root/html534/Reflex__VariableBuilderImpl.html:1256,Modifiability,Variab,VariableBuilderImpl,1256,". Reflex::VariableBuilderImpl. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::VariableBuilderImpl. class Reflex::VariableBuilderImpl. Function Members (Methods); public:. ~VariableBuilderImpl(); voidAddProperty(const char* key, Reflex::Any value); voidAddProperty(const char* key, const char* value); Reflex::VariableBuilderImpl&operator=(const Reflex::VariableBuilderImpl&); Reflex::MemberToMember(); Reflex::VariableBuilderImplVariableBuilderImpl(const Reflex::VariableBuilderImpl&); Reflex::VariableBuilderImplVariableBuilderImpl(const char* nam, const Reflex::Type& typ, size_t offs, unsigned int modifiers = 0). Data Members; private:. Reflex::MemberfDataMember. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; VariableBuilder& AddProperty(const char* key, Any value). * AddProperty will add a property; * @param key the property key; * @param value the value of the property; * @return a reference to the building class. Member ToMember(). * ToMember will return the member currently being built; * @return member currently being built. VariableBuilderImpl(const char* nam, const Reflex::Type& typ, size_t offs, unsigned int modifiers = 0); constructor . void AddProperty(const char* key, Any value); destructor ; AddProperty will add a property; * @param key the property key; * @param value the value of the property; * @return a reference to the building class. » Last changed: root/reflex:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/Reflex__VariableBuilderImpl.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Reflex__VariableBuilderImpl.html
https://root.cern/root/html534/Rgl.html:2742,Testability,log,logZ,2742,"onst vector<Float_t>& vs, const vector<UInt_t>& fTS); voidDrawMesh(const vector<Double_t>& vs, const vector<UInt_t>& fTS); voidDrawMesh(const vector<Float_t>& vs, const vector<Float_t>& ns, const vector<UInt_t>& ts); voidDrawMesh(const vector<Double_t>& vs, const vector<Double_t>& ns, const vector<UInt_t>& ts); voidDrawMesh(const vector<Float_t>& vs, const vector<UInt_t>& ts, const TGLBoxCut& box); voidDrawMesh(const vector<Double_t>& vs, const vector<UInt_t>& ts, const TGLBoxCut& box); voidDrawMesh(const vector<Float_t>& vs, const vector<Float_t>& ns, const vector<UInt_t>& ts, const TGLBoxCut& box); voidDrawMesh(const vector<Double_t>& vs, const vector<Double_t>& ns, const vector<UInt_t>& ts, const TGLBoxCut& box); voidDrawPalette(const TGLPlotCamera* camera, const TGLLevelPalette& palette); voidDrawPalette(const TGLPlotCamera* camera, const TGLLevelPalette& palette, const vector<Double_t>& levels); voidDrawPaletteAxis(const TGLPlotCamera* camera, const Rgl::Range_t& minMax, Bool_t logZ); voidDrawQuadFilled(const TGLVertex3& v0, const TGLVertex3& v1, const TGLVertex3& v2, const TGLVertex3& v3, const TGLVector3& normal); voidDrawQuadFilled(const Double_t* v0, const Double_t* v1, const Double_t* v2, const Double_t* v3, const Double_t* normal); voidDrawQuadOutline(const TGLVertex3& v1, const TGLVertex3& v2, const TGLVertex3& v3, const TGLVertex3& v4); voidDrawQuadStripWithRadialGradientFill(unsigned int, const Double_t* inner, const Double_t* innerRGBA, const Double_t* outer, const Double_t* outerRGBA); voidDrawSmoothFace(const TGLVertex3& v1, const TGLVertex3& v2, const TGLVertex3& v3, const TGLVector3& norm1, const TGLVector3& norm2, const TGLVector3& norm3); voidDrawSphere(TGLQuadric* quadric, Double_t xMin, Double_t xMax, Double_t yMin, Double_t yMax, Double_t zMin, Double_t zMax); voidDrawTransparentBox(Double_t xMin, Double_t xMax, Double_t yMin, Double_t yMax, Double_t zMin, Double_t zMax, Int_t fp); voidGetColor(Float_t v, Float_t vmin, Float_t vmax, Int_t type",MatchSource.WIKI,root/html534/Rgl.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Rgl.html
https://root.cern/root/html534/Roo1DMomentMorphFunction.html:9962,Availability,Error,Error,9962,,MatchSource.WIKI,root/html534/Roo1DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo1DMomentMorphFunction.html
https://root.cern/root/html534/Roo1DMomentMorphFunction.html:10095,Availability,Error,ErrorLoggingModeRooAbsReal,10095,,MatchSource.WIKI,root/html534/Roo1DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo1DMomentMorphFunction.html
https://root.cern/root/html534/Roo1DMomentMorphFunction.html:10223,Availability,error,error,10223,,MatchSource.WIKI,root/html534/Roo1DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo1DMomentMorphFunction.html
https://root.cern/root/html534/Roo1DMomentMorphFunction.html:10307,Availability,error,error,10307,,MatchSource.WIKI,root/html534/Roo1DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo1DMomentMorphFunction.html
https://root.cern/root/html534/Roo1DMomentMorphFunction.html:24140,Availability,Error,ErrorLoggingMode,24140,"eServer(RooAbsArg& oldServer, RooAbsArg& newServer, Bool_t valueProp, Bool_t shapeProp); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); TIterator*RooAbsArg::serverIterator() const; RooFIterRooAbsArg::serverMIterator() const; virtual voidRooAbsArg::serverNameChangeHook(const RooAbsArg*, const RooAbsArg*); voidRooAbsArg::setAttribute(const Text_t* name, Bool_t value = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidRooAbsArg::setCacheAndTrackHints(RooArgSet&); static voidRooAbsReal::setCacheCheck(Bool_t flag); virtual Bool_tRooAbsReal::setData(RooAbsData&, Bool_t = kTRUE); static voidRooAbsArg::setDirtyInhibit(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidRooAbsReal::setEvalErrorLoggingMode(RooAbsReal::ErrorLoggingMode m); virtual voidRooAbsArg::setExpensiveObjectCache(RooExpensiveObjectCache& cache); static voidRooAbsReal::setHideOffset(Bool_t flag); voidRooAbsReal::setIntegratorConfig(); voidRooAbsReal::setIntegratorConfig(const RooNumIntConfig& config); voidRooAbsArg::setLocalNoDirtyInhibit(Bool_t flag) const; voidsetMode(const Roo1DMomentMorphFunction::Setting& setting); virtual voidRooAbsArg::SetName(const char* name); virtual voidRooAbsArg::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsArg::setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); voidRooAbsReal::setParameterizeIntegral(const RooArgSet& paramVars); voidRooAbsReal::setPlotLabel(const char* label); voidRooAbsArg::setProhibitServerRedirect(Bool_t flag); voidRooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsArg::setTransientA",MatchSource.WIKI,root/html534/Roo1DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo1DMomentMorphFunction.html
https://root.cern/root/html534/Roo1DMomentMorphFunction.html:31372,Availability,Error,ErrorLoggingMode,31372,"RooAbsArg::setShapeDirty(const RooAbsArg* source) const; virtual voidRooAbsReal::setTreeBranchStatus(TTree& t, Bool_t active); voidRooAbsArg::setValueDirty(const RooAbsArg* source) const; virtual voidRooAbsReal::syncCache(const RooArgSet* set = 0); Double_tRooAbsReal::traceEval(const RooArgSet* set) const; virtual Bool_tRooAbsReal::traceEvalHook(Double_t) const; voidRooAbsArg::unRegisterProxy(RooArgProxy& proxy); voidRooAbsArg::unRegisterProxy(RooSetProxy& proxy); voidRooAbsArg::unRegisterProxy(RooListProxy& proxy). Data Members; public:. enum Setting { Linear; NonLinear; NonLinearPosFractions; NonLinearLinFractions; };; enum RooAbsReal::ScaleType { Raw; Relative; NumEvent; RelativeExpected; };; enum RooAbsReal::ErrorLoggingMode { PrintErrors; CollectErrors; CountErrors; Ignore; };; enum RooAbsArg::ConstOpCode { Activate; DeActivate; ConfigChange; ValueChange; };; enum RooAbsArg::CacheMode { Always; NotAdvised; Never; };; enum RooAbsArg::OperMode { Auto; AClean; ADirty; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };; enum RooPrintable::ContentsOption { kName; kClassName; kValue; kArgs; kExtras; kAddress; kTitle; kCollectionHeader; };; enum RooPrintable::StyleOption { kInline; kSingleLine; kStandard; kVerbose; kTreeStructure; };. public:. static map<RooAbsArg*,TRefArray*>RooAbsArg::_ioEvoListtemporary holding list for proxies needed in schema evolution ; static stack<RooAbsArg*>RooAbsArg::_ioReadStackreading stack ; static const UInt_tRooAbsArg::fnv1a32start; static const ULong64_tRooAbsArg::fnv1a64start. protected:. TMatrixD*_M; set<std::string>RooAbsArg::_boolAttribBoolean attributes; set<std::string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); Bool_tRooAbsReal::_boolValue! Transient cache for bool values from tree branche",MatchSource.WIKI,root/html534/Roo1DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo1DMomentMorphFunction.html
https://root.cern/root/html534/Roo1DMomentMorphFunction.html:33708,Deployability,integrat,integration,33708,"*_M; set<std::string>RooAbsArg::_boolAttribBoolean attributes; set<std::string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); Bool_tRooAbsReal::_boolValue! Transient cache for bool values from tree branches ; UChar_tRooAbsReal::_byteValue! Transient cache for byte values from tree branches ; static Bool_tRooAbsReal::_cacheCheckIf true, always validate contents of clean which outcome of evaluate(); deque<RooAbsCache*>RooAbsArg::_cacheListlist of caches; RooRefCountListRooAbsArg::_clientListlist of client objects; RooRefCountListRooAbsArg::_clientListShapesubset of clients that requested shape dirty flag propagation; RooRefCountListRooAbsArg::_clientListValuesubset of clients that requested value dirty flag propagation; TIterator*RooAbsArg::_clientShapeIter! Iterator over _clientListShape ; TIterator*RooAbsArg::_clientValueIter! Iterator over _clientListValue ; Bool_tRooAbsArg::_deleteWatch! Delete watch flag ; RooExpensiveObjectCache*RooAbsArg::_eocachePointer to global cache manager for any expensive components created by this object; Bool_tRooAbsArg::_fastAllow fast access mode in getVal() and proxies; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; TVectorD*_frac; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsReal::_hideOffsetOffset hiding flag; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; Bool_tRooAbsArg::_isConstant! Cached isConstant status ; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; TVectorD*_mref; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist.",MatchSource.WIKI,root/html534/Roo1DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo1DMomentMorphFunction.html
https://root.cern/root/html534/Roo1DMomentMorphFunction.html:35324,Deployability,integrat,integrator,35324,"NSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; TVectorD*_mref; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist. Pointer to global instance of string that matches object named; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Roo1DMomentMorphFunction::Setting_setting; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; TIterator*_varItr! do not persist; RooSetProxy_varList; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooRealProxym. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Roo1DMomentMorphFunction(). Roo1DMomentMorphFunction(const char* name, const char* title, RooA",MatchSource.WIKI,root/html534/Roo1DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo1DMomentMorphFunction.html
https://root.cern/root/html534/Roo1DMomentMorphFunction.html:35335,Deployability,configurat,configuration,35335,"NSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; TVectorD*_mref; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist. Pointer to global instance of string that matches object named; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Roo1DMomentMorphFunction::Setting_setting; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; TIterator*_varItr! do not persist; RooSetProxy_varList; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooRealProxym. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Roo1DMomentMorphFunction(). Roo1DMomentMorphFunction(const char* name, const char* title, RooA",MatchSource.WIKI,root/html534/Roo1DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo1DMomentMorphFunction.html
https://root.cern/root/html534/Roo1DMomentMorphFunction.html:7552,Integrability,depend,dependentVars,7552,"const char* rangeName = 0) const; virtual RooAbsReal*RooAbsReal::createIntegral(const RooArgSet& iset, const RooArgSet* nset = 0, const RooNumIntConfig* cfg = 0, const char* rangeName = 0) const; RooAbsReal*RooAbsReal::createIntegral(const RooArgSet& iset, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()) const; RooAbsReal*RooAbsReal::createIntRI(const RooArgSet& iset, const RooArgSet& nset = RooArgSet()); const RooAbsReal*RooAbsReal::createPlotProjection(const RooArgSet& depVars, const RooArgSet& projVars) const; const RooAbsReal*RooAbsReal::createPlotProjection(const RooArgSet& depVars, const RooArgSet& projVars, RooArgSet*& cloneSet) const; const RooAbsReal*RooAbsReal::createPlotProjection(const RooArgSet& dependentVars, const RooArgSet* projectedVars, RooArgSet*& cloneSet, const char* rangeName = 0, const RooArgSet* condObs = 0) const; virtual RooAbsReal*RooAbsReal::createProfile(const RooArgSet& paramsOfInterest); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooArgSet& nset = RooArgSet()); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); RooAbsReal*RooAbsReal::createScanRI(const RooArgSet& iset, const RooArgSet& nset, Int_t numScanBins, Int_t intOrder); virtual Double_tRooAbsReal::defaultErrorLevel() const; static RooNumIntConfig*RooAbsReal::defaultIntegratorConfig(); virtual Int_tRooAbsArg::defaultPrintContents(Option_t* opt)",MatchSource.WIKI,root/html534/Roo1DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo1DMomentMorphFunction.html
https://root.cern/root/html534/Roo1DMomentMorphFunction.html:8794,Integrability,depend,dependentOverlaps,8794,"l*RooAbsReal::createPlotProjection(const RooArgSet& dependentVars, const RooArgSet* projectedVars, RooArgSet*& cloneSet, const char* rangeName = 0, const RooArgSet* condObs = 0) const; virtual RooAbsReal*RooAbsReal::createProfile(const RooArgSet& paramsOfInterest); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooArgSet& nset = RooArgSet()); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); RooAbsReal*RooAbsReal::createScanRI(const RooArgSet& iset, const RooArgSet& nset, Int_t numScanBins, Int_t intOrder); virtual Double_tRooAbsReal::defaultErrorLevel() const; static RooNumIntConfig*RooAbsReal::defaultIntegratorConfig(); virtual Int_tRooAbsArg::defaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooPrintable::defaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Bool_tRooAbsArg::dependentOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependentOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependsOn(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOn(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0) const; RooDerivative*RooAbsReal::derivative(RooRealVar& obs, Int_t order = 1, Double_t eps = 0.",MatchSource.WIKI,root/html534/Roo1DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo1DMomentMorphFunction.html
https://root.cern/root/html534/Roo1DMomentMorphFunction.html:8886,Integrability,depend,dependentOverlaps,8886,"l*RooAbsReal::createPlotProjection(const RooArgSet& dependentVars, const RooArgSet* projectedVars, RooArgSet*& cloneSet, const char* rangeName = 0, const RooArgSet* condObs = 0) const; virtual RooAbsReal*RooAbsReal::createProfile(const RooArgSet& paramsOfInterest); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooArgSet& nset = RooArgSet()); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); RooAbsReal*RooAbsReal::createScanRI(const RooArgSet& iset, const RooArgSet& nset, Int_t numScanBins, Int_t intOrder); virtual Double_tRooAbsReal::defaultErrorLevel() const; static RooNumIntConfig*RooAbsReal::defaultIntegratorConfig(); virtual Int_tRooAbsArg::defaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooPrintable::defaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Bool_tRooAbsArg::dependentOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependentOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependsOn(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOn(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0) const; RooDerivative*RooAbsReal::derivative(RooRealVar& obs, Int_t order = 1, Double_t eps = 0.",MatchSource.WIKI,root/html534/Roo1DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo1DMomentMorphFunction.html
https://root.cern/root/html534/Roo1DMomentMorphFunction.html:8980,Integrability,depend,dependsOn,8980,"l*RooAbsReal::createPlotProjection(const RooArgSet& dependentVars, const RooArgSet* projectedVars, RooArgSet*& cloneSet, const char* rangeName = 0, const RooArgSet* condObs = 0) const; virtual RooAbsReal*RooAbsReal::createProfile(const RooArgSet& paramsOfInterest); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooArgSet& nset = RooArgSet()); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); RooAbsReal*RooAbsReal::createScanRI(const RooArgSet& iset, const RooArgSet& nset, Int_t numScanBins, Int_t intOrder); virtual Double_tRooAbsReal::defaultErrorLevel() const; static RooNumIntConfig*RooAbsReal::defaultIntegratorConfig(); virtual Int_tRooAbsArg::defaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooPrintable::defaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Bool_tRooAbsArg::dependentOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependentOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependsOn(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOn(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0) const; RooDerivative*RooAbsReal::derivative(RooRealVar& obs, Int_t order = 1, Double_t eps = 0.",MatchSource.WIKI,root/html534/Roo1DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo1DMomentMorphFunction.html
https://root.cern/root/html534/Roo1DMomentMorphFunction.html:9109,Integrability,depend,dependsOn,9109,"l*RooAbsReal::createPlotProjection(const RooArgSet& dependentVars, const RooArgSet* projectedVars, RooArgSet*& cloneSet, const char* rangeName = 0, const RooArgSet* condObs = 0) const; virtual RooAbsReal*RooAbsReal::createProfile(const RooArgSet& paramsOfInterest); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooArgSet& nset = RooArgSet()); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); RooAbsReal*RooAbsReal::createScanRI(const RooArgSet& iset, const RooArgSet& nset, Int_t numScanBins, Int_t intOrder); virtual Double_tRooAbsReal::defaultErrorLevel() const; static RooNumIntConfig*RooAbsReal::defaultIntegratorConfig(); virtual Int_tRooAbsArg::defaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooPrintable::defaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Bool_tRooAbsArg::dependentOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependentOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependsOn(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOn(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0) const; RooDerivative*RooAbsReal::derivative(RooRealVar& obs, Int_t order = 1, Double_t eps = 0.",MatchSource.WIKI,root/html534/Roo1DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo1DMomentMorphFunction.html
https://root.cern/root/html534/Roo1DMomentMorphFunction.html:9227,Integrability,depend,dependsOnValue,9227,"l*RooAbsReal::createPlotProjection(const RooArgSet& dependentVars, const RooArgSet* projectedVars, RooArgSet*& cloneSet, const char* rangeName = 0, const RooArgSet* condObs = 0) const; virtual RooAbsReal*RooAbsReal::createProfile(const RooArgSet& paramsOfInterest); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooArgSet& nset = RooArgSet()); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); RooAbsReal*RooAbsReal::createScanRI(const RooArgSet& iset, const RooArgSet& nset, Int_t numScanBins, Int_t intOrder); virtual Double_tRooAbsReal::defaultErrorLevel() const; static RooNumIntConfig*RooAbsReal::defaultIntegratorConfig(); virtual Int_tRooAbsArg::defaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooPrintable::defaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Bool_tRooAbsArg::dependentOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependentOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependsOn(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOn(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0) const; RooDerivative*RooAbsReal::derivative(RooRealVar& obs, Int_t order = 1, Double_t eps = 0.",MatchSource.WIKI,root/html534/Roo1DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo1DMomentMorphFunction.html
https://root.cern/root/html534/Roo1DMomentMorphFunction.html:9334,Integrability,depend,dependsOnValue,9334,"l*RooAbsReal::createPlotProjection(const RooArgSet& dependentVars, const RooArgSet* projectedVars, RooArgSet*& cloneSet, const char* rangeName = 0, const RooArgSet* condObs = 0) const; virtual RooAbsReal*RooAbsReal::createProfile(const RooArgSet& paramsOfInterest); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooArgSet& nset = RooArgSet()); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); RooAbsReal*RooAbsReal::createScanRI(const RooArgSet& iset, const RooArgSet& nset, Int_t numScanBins, Int_t intOrder); virtual Double_tRooAbsReal::defaultErrorLevel() const; static RooNumIntConfig*RooAbsReal::defaultIntegratorConfig(); virtual Int_tRooAbsArg::defaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooPrintable::defaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Bool_tRooAbsArg::dependentOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependentOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependsOn(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOn(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0) const; RooDerivative*RooAbsReal::derivative(RooRealVar& obs, Int_t order = 1, Double_t eps = 0.",MatchSource.WIKI,root/html534/Roo1DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo1DMomentMorphFunction.html
https://root.cern/root/html534/Roo1DMomentMorphFunction.html:17517,Integrability,message,message,17517,"TObject::IsFolder() const; virtual Bool_tRooAbsArg::isFundamental() const; virtual Bool_tRooAbsReal::isIdentical(const RooAbsArg& other, Bool_t assumeSameType = kFALSE); virtual Bool_tRooAbsArg::isLValue() const; virtual Bool_tRooAbsReal::isOffsetting() const; Bool_tTObject::IsOnHeap() const; Bool_tRooAbsArg::isShapeDirty() const; Bool_tRooAbsArg::isShapeServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isShapeServer(const char* name) const; virtual Bool_tRooAbsArg::IsSortable() const; Bool_tRooAbsArg::isValueDirty() const; Bool_tRooAbsArg::isValueDirtyAndClear() const; Bool_tRooAbsArg::isValueOrShapeDirtyAndClear() const; Bool_tRooAbsArg::isValueServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isValueServer(const char* name) const; Bool_tTObject::IsZombie() const; voidRooAbsArg::leafNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t recurseNonDerived = kFALSE) const; Bool_tRooAbsArg::localNoDirtyInhibit() const; voidRooAbsReal::logEvalError(const char* message, const char* serverValueString = 0) const; static voidRooAbsReal::logEvalError(const RooAbsReal* originator, const char* origName, const char* message, const char* serverValueString = 0); virtual voidTNamed::ls(Option_t* option = """") const; virtual Double_tRooAbsReal::maxVal(Int_t code) const; voidTObject::MayNotUse(const char* method) const; RooAbsMoment*RooAbsReal::mean(RooRealVar& obs); RooAbsMoment*RooAbsReal::mean(RooRealVar& obs, const RooArgSet& nset); virtual Int_tRooAbsReal::minTrialSamples(const RooArgSet&) const; RooAbsMoment*RooAbsReal::moment(RooRealVar& obs, Int_t order, Bool_t central, Bool_t takeRoot); RooAbsMoment*RooAbsReal::moment(RooRealVar& obs, const RooArgSet& normObs, Int_t order, Bool_t central, Bool_t takeRoot, Bool_t intNormObs); static voidRooPrintable::nameFieldLength(Int_t newLen); const TNamed*RooAbsArg::namePtr() const; virtual Bool_tTObject::Notify(); Int_tRooAbsArg::numCaches() const; static Int_tRooAbsReal::numEvalErrorItems(); static Int_tRooAbsR",MatchSource.WIKI,root/html534/Roo1DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo1DMomentMorphFunction.html
https://root.cern/root/html534/Roo1DMomentMorphFunction.html:17668,Integrability,message,message,17668,"ameType = kFALSE); virtual Bool_tRooAbsArg::isLValue() const; virtual Bool_tRooAbsReal::isOffsetting() const; Bool_tTObject::IsOnHeap() const; Bool_tRooAbsArg::isShapeDirty() const; Bool_tRooAbsArg::isShapeServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isShapeServer(const char* name) const; virtual Bool_tRooAbsArg::IsSortable() const; Bool_tRooAbsArg::isValueDirty() const; Bool_tRooAbsArg::isValueDirtyAndClear() const; Bool_tRooAbsArg::isValueOrShapeDirtyAndClear() const; Bool_tRooAbsArg::isValueServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isValueServer(const char* name) const; Bool_tTObject::IsZombie() const; voidRooAbsArg::leafNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t recurseNonDerived = kFALSE) const; Bool_tRooAbsArg::localNoDirtyInhibit() const; voidRooAbsReal::logEvalError(const char* message, const char* serverValueString = 0) const; static voidRooAbsReal::logEvalError(const RooAbsReal* originator, const char* origName, const char* message, const char* serverValueString = 0); virtual voidTNamed::ls(Option_t* option = """") const; virtual Double_tRooAbsReal::maxVal(Int_t code) const; voidTObject::MayNotUse(const char* method) const; RooAbsMoment*RooAbsReal::mean(RooRealVar& obs); RooAbsMoment*RooAbsReal::mean(RooRealVar& obs, const RooArgSet& nset); virtual Int_tRooAbsReal::minTrialSamples(const RooArgSet&) const; RooAbsMoment*RooAbsReal::moment(RooRealVar& obs, Int_t order, Bool_t central, Bool_t takeRoot); RooAbsMoment*RooAbsReal::moment(RooRealVar& obs, const RooArgSet& normObs, Int_t order, Bool_t central, Bool_t takeRoot, Bool_t intNormObs); static voidRooPrintable::nameFieldLength(Int_t newLen); const TNamed*RooAbsArg::namePtr() const; virtual Bool_tTObject::Notify(); Int_tRooAbsArg::numCaches() const; static Int_tRooAbsReal::numEvalErrorItems(); static Int_tRooAbsReal::numEvalErrors(); Bool_tRooAbsArg::observableOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::observableOverlaps(",MatchSource.WIKI,root/html534/Roo1DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo1DMomentMorphFunction.html
https://root.cern/root/html534/Roo1DMomentMorphFunction.html:33708,Integrability,integrat,integration,33708,"*_M; set<std::string>RooAbsArg::_boolAttribBoolean attributes; set<std::string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); Bool_tRooAbsReal::_boolValue! Transient cache for bool values from tree branches ; UChar_tRooAbsReal::_byteValue! Transient cache for byte values from tree branches ; static Bool_tRooAbsReal::_cacheCheckIf true, always validate contents of clean which outcome of evaluate(); deque<RooAbsCache*>RooAbsArg::_cacheListlist of caches; RooRefCountListRooAbsArg::_clientListlist of client objects; RooRefCountListRooAbsArg::_clientListShapesubset of clients that requested shape dirty flag propagation; RooRefCountListRooAbsArg::_clientListValuesubset of clients that requested value dirty flag propagation; TIterator*RooAbsArg::_clientShapeIter! Iterator over _clientListShape ; TIterator*RooAbsArg::_clientValueIter! Iterator over _clientListValue ; Bool_tRooAbsArg::_deleteWatch! Delete watch flag ; RooExpensiveObjectCache*RooAbsArg::_eocachePointer to global cache manager for any expensive components created by this object; Bool_tRooAbsArg::_fastAllow fast access mode in getVal() and proxies; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; TVectorD*_frac; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsReal::_hideOffsetOffset hiding flag; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; Bool_tRooAbsArg::_isConstant! Cached isConstant status ; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; TVectorD*_mref; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist.",MatchSource.WIKI,root/html534/Roo1DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo1DMomentMorphFunction.html
https://root.cern/root/html534/Roo1DMomentMorphFunction.html:35324,Integrability,integrat,integrator,35324,"NSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; TVectorD*_mref; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist. Pointer to global instance of string that matches object named; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Roo1DMomentMorphFunction::Setting_setting; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; TIterator*_varItr! do not persist; RooSetProxy_varList; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooRealProxym. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Roo1DMomentMorphFunction(). Roo1DMomentMorphFunction(const char* name, const char* title, RooA",MatchSource.WIKI,root/html534/Roo1DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo1DMomentMorphFunction.html
https://root.cern/root/html534/Roo1DMomentMorphFunction.html:15885,Modifiability,Inherit,InheritsFrom,15885," RooArgSet& set) const; virtual Double_tRooAbsReal::getValV(const RooArgSet* set = 0) const; RooArgSet*RooAbsArg::getVariables(Bool_t stripDisconnected = kTRUE) const; voidRooAbsArg::graphVizTree(const char* fileName, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); voidRooAbsArg::graphVizTree(ostream& os, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tRooAbsArg::hasClients() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tRooAbsArg::hasRange(const char*) const; static Bool_tRooAbsReal::hideOffset(); RooGenFunction*RooAbsReal::iGenFunction(RooRealVar& x, const RooArgSet& nset = RooArgSet()); RooMultiGenFunction*RooAbsReal::iGenFunction(const RooArgSet& observables, const RooArgSet& nset = RooArgSet()); virtual Bool_tRooAbsArg::importWorkspaceHook(RooWorkspace&); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual Bool_tRooAbsArg::inRange(const char*) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual voidRooAbsArg::ioStreamerPass2(); static voidRooAbsArg::ioStreamerPass2Finalize(); virtual TClass*IsA() const; virtual Bool_tRooAbsReal::isBinnedDistribution(const RooArgSet&) const; Bool_tRooAbsArg::isCloneOf(const RooAbsArg& other) const; Bool_tRooAbsArg::isConstant() const; virtual Bool_tRooAbsArg::isDerived() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tRooAbsArg::isFundamental() const; virtual Bool_tRooAbsReal::isIdentical(const RooAbsArg& other, Bool_t assumeSameType = kFALSE); virtual Bool_tRooAbsArg::isLValue() const; virtual Bool_tRooAbsReal::isOffsetting() const; Bool_tTObject::IsOnHeap() const; Bool_tRooAbsArg::isShapeDirty() const; Bool_tRooAbsArg::isShapeServer(const R",MatchSource.WIKI,root/html534/Roo1DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo1DMomentMorphFunction.html
https://root.cern/root/html534/Roo1DMomentMorphFunction.html:15951,Modifiability,Inherit,InheritsFrom,15951,"RooArgSet* set = 0) const; RooArgSet*RooAbsArg::getVariables(Bool_t stripDisconnected = kTRUE) const; voidRooAbsArg::graphVizTree(const char* fileName, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); voidRooAbsArg::graphVizTree(ostream& os, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tRooAbsArg::hasClients() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tRooAbsArg::hasRange(const char*) const; static Bool_tRooAbsReal::hideOffset(); RooGenFunction*RooAbsReal::iGenFunction(RooRealVar& x, const RooArgSet& nset = RooArgSet()); RooMultiGenFunction*RooAbsReal::iGenFunction(const RooArgSet& observables, const RooArgSet& nset = RooArgSet()); virtual Bool_tRooAbsArg::importWorkspaceHook(RooWorkspace&); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual Bool_tRooAbsArg::inRange(const char*) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual voidRooAbsArg::ioStreamerPass2(); static voidRooAbsArg::ioStreamerPass2Finalize(); virtual TClass*IsA() const; virtual Bool_tRooAbsReal::isBinnedDistribution(const RooArgSet&) const; Bool_tRooAbsArg::isCloneOf(const RooAbsArg& other) const; Bool_tRooAbsArg::isConstant() const; virtual Bool_tRooAbsArg::isDerived() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tRooAbsArg::isFundamental() const; virtual Bool_tRooAbsReal::isIdentical(const RooAbsArg& other, Bool_t assumeSameType = kFALSE); virtual Bool_tRooAbsArg::isLValue() const; virtual Bool_tRooAbsReal::isOffsetting() const; Bool_tTObject::IsOnHeap() const; Bool_tRooAbsArg::isShapeDirty() const; Bool_tRooAbsArg::isShapeServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isShapeServer(const char* n",MatchSource.WIKI,root/html534/Roo1DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo1DMomentMorphFunction.html
https://root.cern/root/html534/Roo1DMomentMorphFunction.html:24390,Modifiability,config,config,24390,"e(ostream& out, Option_t* option = """"); TIterator*RooAbsArg::serverIterator() const; RooFIterRooAbsArg::serverMIterator() const; virtual voidRooAbsArg::serverNameChangeHook(const RooAbsArg*, const RooAbsArg*); voidRooAbsArg::setAttribute(const Text_t* name, Bool_t value = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidRooAbsArg::setCacheAndTrackHints(RooArgSet&); static voidRooAbsReal::setCacheCheck(Bool_t flag); virtual Bool_tRooAbsReal::setData(RooAbsData&, Bool_t = kTRUE); static voidRooAbsArg::setDirtyInhibit(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidRooAbsReal::setEvalErrorLoggingMode(RooAbsReal::ErrorLoggingMode m); virtual voidRooAbsArg::setExpensiveObjectCache(RooExpensiveObjectCache& cache); static voidRooAbsReal::setHideOffset(Bool_t flag); voidRooAbsReal::setIntegratorConfig(); voidRooAbsReal::setIntegratorConfig(const RooNumIntConfig& config); voidRooAbsArg::setLocalNoDirtyInhibit(Bool_t flag) const; voidsetMode(const Roo1DMomentMorphFunction::Setting& setting); virtual voidRooAbsArg::SetName(const char* name); virtual voidRooAbsArg::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsArg::setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); voidRooAbsReal::setParameterizeIntegral(const RooArgSet& paramVars); voidRooAbsReal::setPlotLabel(const char* label); voidRooAbsArg::setProhibitServerRedirect(Bool_t flag); voidRooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsArg::setTransientAttribute(const Text_t* name, Bool_t value = kTRUE); virtual voidTObject::SetUniqueID(UInt_t uid); voidRooAbsReal::setUnit(const char* unit); voidRooAbsArg::setValueDirty() const; TIterator*RooAbsArg::shapeClientIterator() const; RooFIterRooAbsAr",MatchSource.WIKI,root/html534/Roo1DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo1DMomentMorphFunction.html
https://root.cern/root/html534/Roo1DMomentMorphFunction.html:31496,Modifiability,Config,ConfigChange,31496,"RooAbsArg::setShapeDirty(const RooAbsArg* source) const; virtual voidRooAbsReal::setTreeBranchStatus(TTree& t, Bool_t active); voidRooAbsArg::setValueDirty(const RooAbsArg* source) const; virtual voidRooAbsReal::syncCache(const RooArgSet* set = 0); Double_tRooAbsReal::traceEval(const RooArgSet* set) const; virtual Bool_tRooAbsReal::traceEvalHook(Double_t) const; voidRooAbsArg::unRegisterProxy(RooArgProxy& proxy); voidRooAbsArg::unRegisterProxy(RooSetProxy& proxy); voidRooAbsArg::unRegisterProxy(RooListProxy& proxy). Data Members; public:. enum Setting { Linear; NonLinear; NonLinearPosFractions; NonLinearLinFractions; };; enum RooAbsReal::ScaleType { Raw; Relative; NumEvent; RelativeExpected; };; enum RooAbsReal::ErrorLoggingMode { PrintErrors; CollectErrors; CountErrors; Ignore; };; enum RooAbsArg::ConstOpCode { Activate; DeActivate; ConfigChange; ValueChange; };; enum RooAbsArg::CacheMode { Always; NotAdvised; Never; };; enum RooAbsArg::OperMode { Auto; AClean; ADirty; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };; enum RooPrintable::ContentsOption { kName; kClassName; kValue; kArgs; kExtras; kAddress; kTitle; kCollectionHeader; };; enum RooPrintable::StyleOption { kInline; kSingleLine; kStandard; kVerbose; kTreeStructure; };. public:. static map<RooAbsArg*,TRefArray*>RooAbsArg::_ioEvoListtemporary holding list for proxies needed in schema evolution ; static stack<RooAbsArg*>RooAbsArg::_ioReadStackreading stack ; static const UInt_tRooAbsArg::fnv1a32start; static const ULong64_tRooAbsArg::fnv1a64start. protected:. TMatrixD*_M; set<std::string>RooAbsArg::_boolAttribBoolean attributes; set<std::string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); Bool_tRooAbsReal::_boolValue! Transient cache for bool values from tree branche",MatchSource.WIKI,root/html534/Roo1DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo1DMomentMorphFunction.html
https://root.cern/root/html534/Roo1DMomentMorphFunction.html:35335,Modifiability,config,configuration,35335,"NSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; TVectorD*_mref; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist. Pointer to global instance of string that matches object named; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Roo1DMomentMorphFunction::Setting_setting; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; TIterator*_varItr! do not persist; RooSetProxy_varList; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooRealProxym. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Roo1DMomentMorphFunction(). Roo1DMomentMorphFunction(const char* name, const char* title, RooA",MatchSource.WIKI,root/html534/Roo1DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo1DMomentMorphFunction.html
https://root.cern/root/html534/Roo1DMomentMorphFunction.html:36053,Modifiability,Inherit,Inheritance,36053,"istRooAbsArg::_serverListlist of server objects; Roo1DMomentMorphFunction::Setting_setting; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; TIterator*_varItr! do not persist; RooSetProxy_varList; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooRealProxym. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Roo1DMomentMorphFunction(). Roo1DMomentMorphFunction(const char* name, const char* title, RooAbsReal& _m, const RooArgList& varList, const TVectorD& mrefpoints, const Roo1DMomentMorphFunction::Setting& setting = Linear); CTOR. Roo1DMomentMorphFunction(const Roo1DMomentMorphFunction& other, const char* name = 0). ~Roo1DMomentMorphFunction(). void initialize(). Double_t evaluate() const. void calculateFractions() const. int idxmin(const double& m) const. int idxmax(const double& m) const. TObject* clone(const char* newname) const; { return new Roo1DMomentMorphFunction(*this,newname); }. void setMode(const Roo1DMomentMorphFunction::Setting& setting); { _setting = setting; }. Int_t ij(const Int_t& i, const Int_t& j) const; { return (i*_varList.getSize()+j); }. » Last changed: Tue Mar 10 17:13:43 2015 » Last generated: 2015-03-10 17:13; This page has been automatically generated. For comments or suggestions regarding the documentation or RO",MatchSource.WIKI,root/html534/Roo1DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo1DMomentMorphFunction.html
https://root.cern/root/html534/Roo1DMomentMorphFunction.html:36066,Modifiability,Inherit,Inherited,36066,"istRooAbsArg::_serverListlist of server objects; Roo1DMomentMorphFunction::Setting_setting; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; TIterator*_varItr! do not persist; RooSetProxy_varList; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooRealProxym. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Roo1DMomentMorphFunction(). Roo1DMomentMorphFunction(const char* name, const char* title, RooAbsReal& _m, const RooArgList& varList, const TVectorD& mrefpoints, const Roo1DMomentMorphFunction::Setting& setting = Linear); CTOR. Roo1DMomentMorphFunction(const Roo1DMomentMorphFunction& other, const char* name = 0). ~Roo1DMomentMorphFunction(). void initialize(). Double_t evaluate() const. void calculateFractions() const. int idxmin(const double& m) const. int idxmax(const double& m) const. TObject* clone(const char* newname) const; { return new Roo1DMomentMorphFunction(*this,newname); }. void setMode(const Roo1DMomentMorphFunction::Setting& setting); { _setting = setting; }. Int_t ij(const Int_t& i, const Int_t& j) const; { return (i*_varList.getSize()+j); }. » Last changed: Tue Mar 10 17:13:43 2015 » Last generated: 2015-03-10 17:13; This page has been automatically generated. For comments or suggestions regarding the documentation or RO",MatchSource.WIKI,root/html534/Roo1DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo1DMomentMorphFunction.html
https://root.cern/root/html534/Roo1DMomentMorphFunction.html:2198,Performance,cache,cacheUniqueSuffix,2198,"uffix() const; virtual Double_tRooAbsReal::analyticalIntegral(Int_t code, const char* rangeName = 0) const; virtual Double_tRooAbsReal::analyticalIntegralWN(Int_t code, const RooArgSet* normSet, const char* rangeName = 0) const; virtual voidTObject::AppendPad(Option_t* option = """"); TF1*RooAbsReal::asTF(const RooArgList& obs, const RooArgList& pars = RooArgList(), const RooArgSet& nset = RooArgSet()) const; voidRooAbsArg::attachDataSet(const RooAbsData& set); voidRooAbsArg::attachDataStore(const RooAbsDataStore& set); const set<std::string>&RooAbsArg::attributes() const; virtual list<Double_t>*RooAbsReal::binBoundaries(RooAbsRealLValue&, Double_t, Double_t) const; RooAbsFunc*RooAbsReal::bindVars(const RooArgSet& vars, const RooArgSet* nset = 0, Bool_t clipInvalid = kFALSE) const; voidRooAbsArg::branchNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t recurseNonDerived = kFALSE) const; virtual voidTObject::Browse(TBrowser* b); virtual const char*RooAbsArg::cacheUniqueSuffix() const; virtual RooAbsArg::CacheModeRooAbsArg::canNodeBeCached() const; voidRooAbsArg::changeServer(RooAbsArg& server, Bool_t valueProp, Bool_t shapeProp); Bool_tRooAbsArg::checkDependents(const RooArgSet* nset) const; virtual Bool_tRooAbsArg::checkObservables(const RooArgSet* nset) const; virtual RooFitResult*RooAbsReal::chi2FitTo(RooDataHist& data, const RooLinkedList& cmdList); virtual RooFitResult*RooAbsReal::chi2FitTo(RooDataSet& xydata, const RooLinkedList& cmdList); virtual RooFitResult*RooAbsReal::chi2FitTo(RooDataHist& data, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); virtual RooFitResult*RooAbsReal::chi2FitTo(RooDataSet& xydata, const RooCmdArg& arg1 = RooCmdArg::none(),",MatchSource.WIKI,root/html534/Roo1DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo1DMomentMorphFunction.html
https://root.cern/root/html534/Roo1DMomentMorphFunction.html:2244,Performance,Cache,CacheModeRooAbsArg,2244,"lyticalIntegral(Int_t code, const char* rangeName = 0) const; virtual Double_tRooAbsReal::analyticalIntegralWN(Int_t code, const RooArgSet* normSet, const char* rangeName = 0) const; virtual voidTObject::AppendPad(Option_t* option = """"); TF1*RooAbsReal::asTF(const RooArgList& obs, const RooArgList& pars = RooArgList(), const RooArgSet& nset = RooArgSet()) const; voidRooAbsArg::attachDataSet(const RooAbsData& set); voidRooAbsArg::attachDataStore(const RooAbsDataStore& set); const set<std::string>&RooAbsArg::attributes() const; virtual list<Double_t>*RooAbsReal::binBoundaries(RooAbsRealLValue&, Double_t, Double_t) const; RooAbsFunc*RooAbsReal::bindVars(const RooArgSet& vars, const RooArgSet* nset = 0, Bool_t clipInvalid = kFALSE) const; voidRooAbsArg::branchNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t recurseNonDerived = kFALSE) const; virtual voidTObject::Browse(TBrowser* b); virtual const char*RooAbsArg::cacheUniqueSuffix() const; virtual RooAbsArg::CacheModeRooAbsArg::canNodeBeCached() const; voidRooAbsArg::changeServer(RooAbsArg& server, Bool_t valueProp, Bool_t shapeProp); Bool_tRooAbsArg::checkDependents(const RooArgSet* nset) const; virtual Bool_tRooAbsArg::checkObservables(const RooArgSet* nset) const; virtual RooFitResult*RooAbsReal::chi2FitTo(RooDataHist& data, const RooLinkedList& cmdList); virtual RooFitResult*RooAbsReal::chi2FitTo(RooDataSet& xydata, const RooLinkedList& cmdList); virtual RooFitResult*RooAbsReal::chi2FitTo(RooDataHist& data, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); virtual RooFitResult*RooAbsReal::chi2FitTo(RooDataSet& xydata, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), con",MatchSource.WIKI,root/html534/Roo1DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo1DMomentMorphFunction.html
https://root.cern/root/html534/Roo1DMomentMorphFunction.html:11041,Performance,cache,cacheList,11041,"rRooAbsReal::evalErrorIter(); static RooAbsReal::ErrorLoggingModeRooAbsReal::evalErrorLoggingMode(); virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); RooExpensiveObjectCache&RooAbsArg::expensiveObjectCache() const; virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); RooDataHist*RooAbsReal::fillDataHist(RooDataHist* hist, const RooArgSet* nset, Double_t scaleFactor, Bool_t correctForBinVolume = kFALSE, Bool_t showProgress = kFALSE) const; TH1*RooAbsReal::fillHistogram(TH1* hist, const RooArgList& plotVars, Double_t scaleFactor = 1, const RooArgSet* projectedVars = 0, Bool_t scaling = kTRUE, const RooArgSet* condObs = 0, Bool_t setError = kTRUE) const; Bool_tRooAbsArg::findConstantNodes(const RooArgSet& observables, RooArgSet& cacheList); Bool_tRooAbsArg::findConstantNodes(const RooArgSet& observables, RooArgSet& cacheList, RooLinkedList& processedNodes); RooAbsArg*RooAbsArg::findNewServer(const RooAbsCollection& newSet, Bool_t nameChange) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Double_tRooAbsReal::findRoot(RooRealVar& x, Double_t xmin, Double_t xmax, Double_t yval); RooAbsArg*RooAbsArg::findServer(const char* name) const; RooAbsArg*RooAbsArg::findServer(const RooAbsArg& arg) const; RooAbsArg*RooAbsArg::findServer(Int_t index) const; virtual voidRooAbsReal::fixAddCoefNormalization(const RooArgSet& addNormSet = RooArgSet(), Bool_t force = kTRUE); virtual voidRooAbsReal::fixAddCoefRange(const char* rangeName = 0, Bool_t force = kTRUE); static UInt_tRooAbsArg::fnv1a32(const char* data); static UInt_tRooAbsArg::fnv1a32(const char* data, ULong_t sz, UInt_t hash = fnv1a32start); static ULong64_tRooAbsArg::fnv1a64(const char* data",MatchSource.WIKI,root/html534/Roo1DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo1DMomentMorphFunction.html
https://root.cern/root/html534/Roo1DMomentMorphFunction.html:11129,Performance,cache,cacheList,11129,"ggingMode(); virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); RooExpensiveObjectCache&RooAbsArg::expensiveObjectCache() const; virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); RooDataHist*RooAbsReal::fillDataHist(RooDataHist* hist, const RooArgSet* nset, Double_t scaleFactor, Bool_t correctForBinVolume = kFALSE, Bool_t showProgress = kFALSE) const; TH1*RooAbsReal::fillHistogram(TH1* hist, const RooArgList& plotVars, Double_t scaleFactor = 1, const RooArgSet* projectedVars = 0, Bool_t scaling = kTRUE, const RooArgSet* condObs = 0, Bool_t setError = kTRUE) const; Bool_tRooAbsArg::findConstantNodes(const RooArgSet& observables, RooArgSet& cacheList); Bool_tRooAbsArg::findConstantNodes(const RooArgSet& observables, RooArgSet& cacheList, RooLinkedList& processedNodes); RooAbsArg*RooAbsArg::findNewServer(const RooAbsCollection& newSet, Bool_t nameChange) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Double_tRooAbsReal::findRoot(RooRealVar& x, Double_t xmin, Double_t xmax, Double_t yval); RooAbsArg*RooAbsArg::findServer(const char* name) const; RooAbsArg*RooAbsArg::findServer(const RooAbsArg& arg) const; RooAbsArg*RooAbsArg::findServer(Int_t index) const; virtual voidRooAbsReal::fixAddCoefNormalization(const RooArgSet& addNormSet = RooArgSet(), Bool_t force = kTRUE); virtual voidRooAbsReal::fixAddCoefRange(const char* rangeName = 0, Bool_t force = kTRUE); static UInt_tRooAbsArg::fnv1a32(const char* data); static UInt_tRooAbsArg::fnv1a32(const char* data, ULong_t sz, UInt_t hash = fnv1a32start); static ULong64_tRooAbsArg::fnv1a64(const char* data); static ULong64_tRooAbsArg::fnv1a64(const char* data, ULong_t sz, ULong64_t hash = fnv",MatchSource.WIKI,root/html534/Roo1DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo1DMomentMorphFunction.html
https://root.cern/root/html534/Roo1DMomentMorphFunction.html:19501,Performance,optimiz,optimizeCacheMode,19501,"nt_tRooAbsReal::numEvalErrors(); Bool_tRooAbsArg::observableOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::observableOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; virtual Double_tRooAbsReal::offset() const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TNamed&TNamed::operator=(const TNamed& rhs); Bool_tRooAbsReal::operator==(Double_t value) const; virtual Bool_tRooAbsReal::operator==(const RooAbsArg& other); RooAbsArg::OperModeRooAbsArg::operMode() const; virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables); virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables, RooArgSet& optNodes, RooLinkedList& processedNodes); Bool_tRooAbsArg::overlaps(const RooAbsArg& testArg, Bool_t valueOnly = kFALSE) const; const RooArgSet*RooAbsArg::ownedComponents() const; virtual voidTObject::Paint(Option_t* option = """"); virtual RooPlot*RooAbsReal::plotOn(RooPlot* frame, RooLinkedList& cmdList) const; virtual RooPlot*RooAbsReal::plotOn(RooPlot* frame, const RooCmdArg& arg1 = RooCmdArg(), const RooCmdArg& arg2 = RooCmdArg(), const RooCmdArg& arg3 = RooCmdArg(), const RooCmdArg& arg4 = RooCmdArg(), const RooCmdArg& arg5 = RooCmdArg(), const RooCmdArg& arg6 = RooCmdArg(), const RooCmdArg& arg7 = RooCmdArg(), const RooCmdArg& arg8 = RooCmdArg(), const RooCmdArg& arg9 = RooCmdArg(), const RooCmdArg& arg10 = RooCmdArg()) const; virtual list<Double_t>*RooAbsReal::plotSamplingHint(RooAbsRealLValue&, Double_t, Double_t) const; virtual RooPlot*RooAbsReal::plotSliceO",MatchSource.WIKI,root/html534/Roo1DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo1DMomentMorphFunction.html
https://root.cern/root/html534/Roo1DMomentMorphFunction.html:19573,Performance,optimiz,optimizeCacheMode,19573,"st RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::observableOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; virtual Double_tRooAbsReal::offset() const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TNamed&TNamed::operator=(const TNamed& rhs); Bool_tRooAbsReal::operator==(Double_t value) const; virtual Bool_tRooAbsReal::operator==(const RooAbsArg& other); RooAbsArg::OperModeRooAbsArg::operMode() const; virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables); virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables, RooArgSet& optNodes, RooLinkedList& processedNodes); Bool_tRooAbsArg::overlaps(const RooAbsArg& testArg, Bool_t valueOnly = kFALSE) const; const RooArgSet*RooAbsArg::ownedComponents() const; virtual voidTObject::Paint(Option_t* option = """"); virtual RooPlot*RooAbsReal::plotOn(RooPlot* frame, RooLinkedList& cmdList) const; virtual RooPlot*RooAbsReal::plotOn(RooPlot* frame, const RooCmdArg& arg1 = RooCmdArg(), const RooCmdArg& arg2 = RooCmdArg(), const RooCmdArg& arg3 = RooCmdArg(), const RooCmdArg& arg4 = RooCmdArg(), const RooCmdArg& arg5 = RooCmdArg(), const RooCmdArg& arg6 = RooCmdArg(), const RooCmdArg& arg7 = RooCmdArg(), const RooCmdArg& arg8 = RooCmdArg(), const RooCmdArg& arg9 = RooCmdArg(), const RooCmdArg& arg10 = RooCmdArg()) const; virtual list<Double_t>*RooAbsReal::plotSamplingHint(RooAbsRealLValue&, Double_t, Double_t) const; virtual RooPlot*RooAbsReal::plotSliceOn(RooPlot* frame, const RooArgSet& sliceSet, Option_t* drawOptions = ""L""",MatchSource.WIKI,root/html534/Roo1DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo1DMomentMorphFunction.html
https://root.cern/root/html534/Roo1DMomentMorphFunction.html:23048,Performance,cache,cache,23048,"rtual voidRooAbsArg::printTitle(ostream& os) const; virtual voidRooAbsArg::printTree(ostream& os, TString indent = """") const; virtual voidRooAbsReal::printValue(ostream& os) const; virtual Int_tTObject::Read(const char* name); virtual Bool_tRooAbsReal::readFromStream(istream& is, Bool_t compact, Bool_t verbose = kFALSE); Bool_tRooAbsArg::recursiveCheckDependents(const RooArgSet* nset) const; Bool_tRooAbsArg::recursiveCheckObservables(const RooArgSet* nset) const; Bool_tRooAbsArg::recursiveRedirectServers(const RooAbsCollection& newServerList, Bool_t mustReplaceAll = kFALSE, Bool_t nameChange = kFALSE, Bool_t recurseInNewSet = kTRUE); virtual voidTObject::RecursiveRemove(TObject* obj); Bool_tRooAbsArg::redirectServers(const RooAbsCollection& newServerList, Bool_t mustReplaceAll = kFALSE, Bool_t nameChange = kFALSE, Bool_t isRecursionStep = kFALSE); virtual Bool_tRooAbsArg::redirectServersHook(const RooAbsCollection&, Bool_t, Bool_t, Bool_t); voidRooAbsArg::registerCache(RooAbsCache& cache); voidRooAbsArg::removeServer(RooAbsArg& server, Bool_t force = kFALSE); voidRooAbsArg::replaceServer(RooAbsArg& oldServer, RooAbsArg& newServer, Bool_t valueProp, Bool_t shapeProp); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); TIterator*RooAbsArg::serverIterator() const; RooFIterRooAbsArg::serverMIterator() const; virtual voidRooAbsArg::serverNameChangeHook(const RooAbsArg*, const RooAbsArg*); voidRooAbsArg::setAttribute(const Text_t* name, Bool_t value = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidRooAbsArg::setCacheAndTrackHints(RooArgSet&); static voidRooAbsReal::setCacheCheck(Bool_t flag); virtual Bool_tRooAbsReal::setData(RooAbsData&, Bool_t = kTRUE); static voidRooAbsArg::setDirtyInhibit(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTOb",MatchSource.WIKI,root/html534/Roo1DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo1DMomentMorphFunction.html
https://root.cern/root/html534/Roo1DMomentMorphFunction.html:24233,Performance,cache,cache,24233," voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); TIterator*RooAbsArg::serverIterator() const; RooFIterRooAbsArg::serverMIterator() const; virtual voidRooAbsArg::serverNameChangeHook(const RooAbsArg*, const RooAbsArg*); voidRooAbsArg::setAttribute(const Text_t* name, Bool_t value = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidRooAbsArg::setCacheAndTrackHints(RooArgSet&); static voidRooAbsReal::setCacheCheck(Bool_t flag); virtual Bool_tRooAbsReal::setData(RooAbsData&, Bool_t = kTRUE); static voidRooAbsArg::setDirtyInhibit(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidRooAbsReal::setEvalErrorLoggingMode(RooAbsReal::ErrorLoggingMode m); virtual voidRooAbsArg::setExpensiveObjectCache(RooExpensiveObjectCache& cache); static voidRooAbsReal::setHideOffset(Bool_t flag); voidRooAbsReal::setIntegratorConfig(); voidRooAbsReal::setIntegratorConfig(const RooNumIntConfig& config); voidRooAbsArg::setLocalNoDirtyInhibit(Bool_t flag) const; voidsetMode(const Roo1DMomentMorphFunction::Setting& setting); virtual voidRooAbsArg::SetName(const char* name); virtual voidRooAbsArg::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsArg::setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); voidRooAbsReal::setParameterizeIntegral(const RooArgSet& paramVars); voidRooAbsReal::setPlotLabel(const char* label); voidRooAbsArg::setProhibitServerRedirect(Bool_t flag); voidRooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsArg::setTransientAttribute(const Text_t* name, Bool_t value = kTRUE); virtual voidTObject::SetUniqueID(UI",MatchSource.WIKI,root/html534/Roo1DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo1DMomentMorphFunction.html
https://root.cern/root/html534/Roo1DMomentMorphFunction.html:26395,Performance,cache,cache,26395,"RooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsArg::setTransientAttribute(const Text_t* name, Bool_t value = kTRUE); virtual voidTObject::SetUniqueID(UInt_t uid); voidRooAbsReal::setUnit(const char* unit); voidRooAbsArg::setValueDirty() const; TIterator*RooAbsArg::shapeClientIterator() const; RooFIterRooAbsArg::shapeClientMIterator() const; virtual voidShowMembers(TMemberInspector&); RooAbsMoment*RooAbsReal::sigma(RooRealVar& obs); RooAbsMoment*RooAbsReal::sigma(RooRealVar& obs, const RooArgSet& nset); virtual Int_tTNamed::Sizeof() const; RooNumIntConfig*RooAbsReal::specialIntegratorConfig() const; RooNumIntConfig*RooAbsReal::specialIntegratorConfig(Bool_t createOnTheFly); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); const map<std::string,std::string>&RooAbsArg::stringAttributes() const; virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; const set<std::string>&RooAbsArg::transientAttributes() const; voidRooAbsArg::treeNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t doBranch = kTRUE, Bool_t doLeaf = kTRUE, Bool_t valueOnly = kFALSE, Bool_t recurseNonDerived = kFALSE) const; voidRooAbsArg::unRegisterCache(RooAbsCache& cache); virtual voidTObject::UseCurrentStyle(); TIterator*RooAbsArg::valueClientIterator() const; RooFIterRooAbsArg::valueClientMIterator() const; static voidRooAbsArg::verboseDirty(Bool_t flag); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; voidRooAbsArg::wireAllCaches(); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidRooAbsReal::writeToStream(ostream& os, Bool_t compact) const.",MatchSource.WIKI,root/html534/Roo1DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo1DMomentMorphFunction.html
https://root.cern/root/html534/Roo1DMomentMorphFunction.html:29622,Performance,optimiz,optimizeDirtyHook,29622,"ual Bool_tRooAbsReal::isValidReal(Double_t value, Bool_t printError = kFALSE) const; voidRooAbsReal::makeProjectionSet(const RooAbsArg* plotVar, const RooArgSet* allVars, RooArgSet& projectedVars, Bool_t silent) const; voidTObject::MakeZombie(); Bool_tRooAbsReal::matchArgs(const RooArgSet& allDeps, RooArgSet& numDeps, const RooArgProxy& a) const; Bool_tRooAbsReal::matchArgs(const RooArgSet& allDeps, RooArgSet& numDeps, const RooArgSet& set) const; Bool_tRooAbsReal::matchArgs(const RooArgSet& allDeps, RooArgSet& numDeps, const RooArgProxy& a, const RooArgProxy& b) const; Bool_tRooAbsReal::matchArgs(const RooArgSet& allDeps, RooArgSet& numDeps, const RooArgProxy& a, const RooArgProxy& b, const RooArgProxy& c) const; Bool_tRooAbsReal::matchArgs(const RooArgSet& allDeps, RooArgSet& numDeps, const RooArgProxy& a, const RooArgProxy& b, const RooArgProxy& c, const RooArgProxy& d) const; Int_tRooAbsArg::numProxies() const; virtual voidRooAbsArg::operModeHook(); virtual voidRooAbsArg::optimizeDirtyHook(const RooArgSet*); virtual RooPlot*RooAbsReal::plotAsymOn(RooPlot* frame, const RooAbsCategoryLValue& asymCat, RooAbsReal::PlotOpt o) const; virtual RooPlot*RooAbsReal::plotOn(RooPlot* frame, RooAbsReal::PlotOpt o) const; voidRooAbsReal::plotOnCompSelect(RooArgSet* selNodes) const; RooPlot*RooAbsReal::plotOnWithErrorBand(RooPlot* frame, const RooFitResult& fr, Double_t Z, const RooArgSet* params, const RooLinkedList& argList, Bool_t method1) const; Bool_tRooAbsReal::plotSanityChecks(RooPlot* frame) const; voidRooAbsArg::printAttribList(ostream& os) const; voidRooAbsArg::registerProxy(RooArgProxy& proxy); voidRooAbsArg::registerProxy(RooSetProxy& proxy); voidRooAbsArg::registerProxy(RooListProxy& proxy); voidRooAbsReal::selectComp(Bool_t flag); virtual voidRooAbsReal::selectNormalization(const RooArgSet* depSet = 0, Bool_t force = kFALSE); virtual voidRooAbsReal::selectNormalizationRange(const char* rangeName = 0, Bool_t force = kFALSE); voidRooAbsArg::setProxyNormSet(const Roo",MatchSource.WIKI,root/html534/Roo1DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo1DMomentMorphFunction.html
https://root.cern/root/html534/Roo1DMomentMorphFunction.html:31543,Performance,Cache,CacheMode,31543,"RooAbsArg::setShapeDirty(const RooAbsArg* source) const; virtual voidRooAbsReal::setTreeBranchStatus(TTree& t, Bool_t active); voidRooAbsArg::setValueDirty(const RooAbsArg* source) const; virtual voidRooAbsReal::syncCache(const RooArgSet* set = 0); Double_tRooAbsReal::traceEval(const RooArgSet* set) const; virtual Bool_tRooAbsReal::traceEvalHook(Double_t) const; voidRooAbsArg::unRegisterProxy(RooArgProxy& proxy); voidRooAbsArg::unRegisterProxy(RooSetProxy& proxy); voidRooAbsArg::unRegisterProxy(RooListProxy& proxy). Data Members; public:. enum Setting { Linear; NonLinear; NonLinearPosFractions; NonLinearLinFractions; };; enum RooAbsReal::ScaleType { Raw; Relative; NumEvent; RelativeExpected; };; enum RooAbsReal::ErrorLoggingMode { PrintErrors; CollectErrors; CountErrors; Ignore; };; enum RooAbsArg::ConstOpCode { Activate; DeActivate; ConfigChange; ValueChange; };; enum RooAbsArg::CacheMode { Always; NotAdvised; Never; };; enum RooAbsArg::OperMode { Auto; AClean; ADirty; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };; enum RooPrintable::ContentsOption { kName; kClassName; kValue; kArgs; kExtras; kAddress; kTitle; kCollectionHeader; };; enum RooPrintable::StyleOption { kInline; kSingleLine; kStandard; kVerbose; kTreeStructure; };. public:. static map<RooAbsArg*,TRefArray*>RooAbsArg::_ioEvoListtemporary holding list for proxies needed in schema evolution ; static stack<RooAbsArg*>RooAbsArg::_ioReadStackreading stack ; static const UInt_tRooAbsArg::fnv1a32start; static const ULong64_tRooAbsArg::fnv1a64start. protected:. TMatrixD*_M; set<std::string>RooAbsArg::_boolAttribBoolean attributes; set<std::string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); Bool_tRooAbsReal::_boolValue! Transient cache for bool values from tree branche",MatchSource.WIKI,root/html534/Roo1DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo1DMomentMorphFunction.html
https://root.cern/root/html534/Roo1DMomentMorphFunction.html:32612,Performance,cache,cache,32612,,MatchSource.WIKI,root/html534/Roo1DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo1DMomentMorphFunction.html
https://root.cern/root/html534/Roo1DMomentMorphFunction.html:32696,Performance,cache,cache,32696,,MatchSource.WIKI,root/html534/Roo1DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo1DMomentMorphFunction.html
https://root.cern/root/html534/Roo1DMomentMorphFunction.html:32895,Performance,cache,caches,32895,,MatchSource.WIKI,root/html534/Roo1DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo1DMomentMorphFunction.html
https://root.cern/root/html534/Roo1DMomentMorphFunction.html:33430,Performance,cache,cache,33430,"*_M; set<std::string>RooAbsArg::_boolAttribBoolean attributes; set<std::string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); Bool_tRooAbsReal::_boolValue! Transient cache for bool values from tree branches ; UChar_tRooAbsReal::_byteValue! Transient cache for byte values from tree branches ; static Bool_tRooAbsReal::_cacheCheckIf true, always validate contents of clean which outcome of evaluate(); deque<RooAbsCache*>RooAbsArg::_cacheListlist of caches; RooRefCountListRooAbsArg::_clientListlist of client objects; RooRefCountListRooAbsArg::_clientListShapesubset of clients that requested shape dirty flag propagation; RooRefCountListRooAbsArg::_clientListValuesubset of clients that requested value dirty flag propagation; TIterator*RooAbsArg::_clientShapeIter! Iterator over _clientListShape ; TIterator*RooAbsArg::_clientValueIter! Iterator over _clientListValue ; Bool_tRooAbsArg::_deleteWatch! Delete watch flag ; RooExpensiveObjectCache*RooAbsArg::_eocachePointer to global cache manager for any expensive components created by this object; Bool_tRooAbsArg::_fastAllow fast access mode in getVal() and proxies; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; TVectorD*_frac; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsReal::_hideOffsetOffset hiding flag; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; Bool_tRooAbsArg::_isConstant! Cached isConstant status ; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; TVectorD*_mref; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist.",MatchSource.WIKI,root/html534/Roo1DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo1DMomentMorphFunction.html
https://root.cern/root/html534/Roo1DMomentMorphFunction.html:33609,Performance,cache,cache,33609,"*_M; set<std::string>RooAbsArg::_boolAttribBoolean attributes; set<std::string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); Bool_tRooAbsReal::_boolValue! Transient cache for bool values from tree branches ; UChar_tRooAbsReal::_byteValue! Transient cache for byte values from tree branches ; static Bool_tRooAbsReal::_cacheCheckIf true, always validate contents of clean which outcome of evaluate(); deque<RooAbsCache*>RooAbsArg::_cacheListlist of caches; RooRefCountListRooAbsArg::_clientListlist of client objects; RooRefCountListRooAbsArg::_clientListShapesubset of clients that requested shape dirty flag propagation; RooRefCountListRooAbsArg::_clientListValuesubset of clients that requested value dirty flag propagation; TIterator*RooAbsArg::_clientShapeIter! Iterator over _clientListShape ; TIterator*RooAbsArg::_clientValueIter! Iterator over _clientListValue ; Bool_tRooAbsArg::_deleteWatch! Delete watch flag ; RooExpensiveObjectCache*RooAbsArg::_eocachePointer to global cache manager for any expensive components created by this object; Bool_tRooAbsArg::_fastAllow fast access mode in getVal() and proxies; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; TVectorD*_frac; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsReal::_hideOffsetOffset hiding flag; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; Bool_tRooAbsArg::_isConstant! Cached isConstant status ; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; TVectorD*_mref; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist.",MatchSource.WIKI,root/html534/Roo1DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo1DMomentMorphFunction.html
https://root.cern/root/html534/Roo1DMomentMorphFunction.html:34039,Performance,cache,cache,34039,"*_M; set<std::string>RooAbsArg::_boolAttribBoolean attributes; set<std::string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); Bool_tRooAbsReal::_boolValue! Transient cache for bool values from tree branches ; UChar_tRooAbsReal::_byteValue! Transient cache for byte values from tree branches ; static Bool_tRooAbsReal::_cacheCheckIf true, always validate contents of clean which outcome of evaluate(); deque<RooAbsCache*>RooAbsArg::_cacheListlist of caches; RooRefCountListRooAbsArg::_clientListlist of client objects; RooRefCountListRooAbsArg::_clientListShapesubset of clients that requested shape dirty flag propagation; RooRefCountListRooAbsArg::_clientListValuesubset of clients that requested value dirty flag propagation; TIterator*RooAbsArg::_clientShapeIter! Iterator over _clientListShape ; TIterator*RooAbsArg::_clientValueIter! Iterator over _clientListValue ; Bool_tRooAbsArg::_deleteWatch! Delete watch flag ; RooExpensiveObjectCache*RooAbsArg::_eocachePointer to global cache manager for any expensive components created by this object; Bool_tRooAbsArg::_fastAllow fast access mode in getVal() and proxies; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; TVectorD*_frac; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsReal::_hideOffsetOffset hiding flag; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; Bool_tRooAbsArg::_isConstant! Cached isConstant status ; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; TVectorD*_mref; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist.",MatchSource.WIKI,root/html534/Roo1DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo1DMomentMorphFunction.html
https://root.cern/root/html534/Roo1DMomentMorphFunction.html:34115,Performance,Cache,Cached,34115,"*_M; set<std::string>RooAbsArg::_boolAttribBoolean attributes; set<std::string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); Bool_tRooAbsReal::_boolValue! Transient cache for bool values from tree branches ; UChar_tRooAbsReal::_byteValue! Transient cache for byte values from tree branches ; static Bool_tRooAbsReal::_cacheCheckIf true, always validate contents of clean which outcome of evaluate(); deque<RooAbsCache*>RooAbsArg::_cacheListlist of caches; RooRefCountListRooAbsArg::_clientListlist of client objects; RooRefCountListRooAbsArg::_clientListShapesubset of clients that requested shape dirty flag propagation; RooRefCountListRooAbsArg::_clientListValuesubset of clients that requested value dirty flag propagation; TIterator*RooAbsArg::_clientShapeIter! Iterator over _clientListShape ; TIterator*RooAbsArg::_clientValueIter! Iterator over _clientListValue ; Bool_tRooAbsArg::_deleteWatch! Delete watch flag ; RooExpensiveObjectCache*RooAbsArg::_eocachePointer to global cache manager for any expensive components created by this object; Bool_tRooAbsArg::_fastAllow fast access mode in getVal() and proxies; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; TVectorD*_frac; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsReal::_hideOffsetOffset hiding flag; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; Bool_tRooAbsArg::_isConstant! Cached isConstant status ; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; TVectorD*_mref; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist.",MatchSource.WIKI,root/html534/Roo1DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo1DMomentMorphFunction.html
https://root.cern/root/html534/Roo1DMomentMorphFunction.html:34933,Performance,cache,cache,34933,"NSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; TVectorD*_mref; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist. Pointer to global instance of string that matches object named; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Roo1DMomentMorphFunction::Setting_setting; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; TIterator*_varItr! do not persist; RooSetProxy_varList; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooRealProxym. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Roo1DMomentMorphFunction(). Roo1DMomentMorphFunction(const char* name, const char* title, RooA",MatchSource.WIKI,root/html534/Roo1DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo1DMomentMorphFunction.html
https://root.cern/root/html534/Roo1DMomentMorphFunction.html:35529,Performance,cache,cache,35529,"NSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; TVectorD*_mref; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist. Pointer to global instance of string that matches object named; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Roo1DMomentMorphFunction::Setting_setting; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; TIterator*_varItr! do not persist; RooSetProxy_varList; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooRealProxym. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Roo1DMomentMorphFunction(). Roo1DMomentMorphFunction(const char* name, const char* title, RooA",MatchSource.WIKI,root/html534/Roo1DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo1DMomentMorphFunction.html
https://root.cern/root/html534/Roo1DMomentMorphFunction.html:11973,Security,hash,hash,11973,"bsArg::findConstantNodes(const RooArgSet& observables, RooArgSet& cacheList); Bool_tRooAbsArg::findConstantNodes(const RooArgSet& observables, RooArgSet& cacheList, RooLinkedList& processedNodes); RooAbsArg*RooAbsArg::findNewServer(const RooAbsCollection& newSet, Bool_t nameChange) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Double_tRooAbsReal::findRoot(RooRealVar& x, Double_t xmin, Double_t xmax, Double_t yval); RooAbsArg*RooAbsArg::findServer(const char* name) const; RooAbsArg*RooAbsArg::findServer(const RooAbsArg& arg) const; RooAbsArg*RooAbsArg::findServer(Int_t index) const; virtual voidRooAbsReal::fixAddCoefNormalization(const RooArgSet& addNormSet = RooArgSet(), Bool_t force = kTRUE); virtual voidRooAbsReal::fixAddCoefRange(const char* rangeName = 0, Bool_t force = kTRUE); static UInt_tRooAbsArg::fnv1a32(const char* data); static UInt_tRooAbsArg::fnv1a32(const char* data, ULong_t sz, UInt_t hash = fnv1a32start); static ULong64_tRooAbsArg::fnv1a64(const char* data); static ULong64_tRooAbsArg::fnv1a64(const char* data, ULong_t sz, ULong64_t hash = fnv1a64start); virtual Bool_tRooAbsReal::forceAnalyticalInt(const RooAbsArg&) const; virtual voidRooAbsReal::forceNumInt(Bool_t flag = kTRUE); RooFunctor*RooAbsReal::functor(const RooArgList& obs, const RooArgList& pars = RooArgList(), const RooArgSet& nset = RooArgSet()) const; virtual Int_tRooAbsReal::getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const; virtual Int_tRooAbsReal::getAnalyticalIntegralWN(RooArgSet& allVars, RooArgSet& analVars, const RooArgSet* normSet, const char* rangeName = 0) const; Bool_tRooAbsArg::getAttribute(const Text_t* name) const; RooAbsCache*RooAbsArg::getCache(Int_t index) const; RooLinkedListRooAbsArg::getCloningAncestors() const; RooArgSet*RooAbsArg::getComponents() const; RooArgSet*RooAbsArg::getDependents(const RooArgSet& set) const; RooArgSet*RooAbsArg::ge",MatchSource.WIKI,root/html534/Roo1DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo1DMomentMorphFunction.html
https://root.cern/root/html534/Roo1DMomentMorphFunction.html:12124,Security,hash,hash,12124,"t& cacheList, RooLinkedList& processedNodes); RooAbsArg*RooAbsArg::findNewServer(const RooAbsCollection& newSet, Bool_t nameChange) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Double_tRooAbsReal::findRoot(RooRealVar& x, Double_t xmin, Double_t xmax, Double_t yval); RooAbsArg*RooAbsArg::findServer(const char* name) const; RooAbsArg*RooAbsArg::findServer(const RooAbsArg& arg) const; RooAbsArg*RooAbsArg::findServer(Int_t index) const; virtual voidRooAbsReal::fixAddCoefNormalization(const RooArgSet& addNormSet = RooArgSet(), Bool_t force = kTRUE); virtual voidRooAbsReal::fixAddCoefRange(const char* rangeName = 0, Bool_t force = kTRUE); static UInt_tRooAbsArg::fnv1a32(const char* data); static UInt_tRooAbsArg::fnv1a32(const char* data, ULong_t sz, UInt_t hash = fnv1a32start); static ULong64_tRooAbsArg::fnv1a64(const char* data); static ULong64_tRooAbsArg::fnv1a64(const char* data, ULong_t sz, ULong64_t hash = fnv1a64start); virtual Bool_tRooAbsReal::forceAnalyticalInt(const RooAbsArg&) const; virtual voidRooAbsReal::forceNumInt(Bool_t flag = kTRUE); RooFunctor*RooAbsReal::functor(const RooArgList& obs, const RooArgList& pars = RooArgList(), const RooArgSet& nset = RooArgSet()) const; virtual Int_tRooAbsReal::getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const; virtual Int_tRooAbsReal::getAnalyticalIntegralWN(RooArgSet& allVars, RooArgSet& analVars, const RooArgSet* normSet, const char* rangeName = 0) const; Bool_tRooAbsArg::getAttribute(const Text_t* name) const; RooAbsCache*RooAbsArg::getCache(Int_t index) const; RooLinkedListRooAbsArg::getCloningAncestors() const; RooArgSet*RooAbsArg::getComponents() const; RooArgSet*RooAbsArg::getDependents(const RooArgSet& set) const; RooArgSet*RooAbsArg::getDependents(const RooAbsData* set) const; RooArgSet*RooAbsArg::getDependents(const RooArgSet* depList) const; virtual Option_t*TObject::GetDrawOption()",MatchSource.WIKI,root/html534/Roo1DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo1DMomentMorphFunction.html
https://root.cern/root/html534/Roo1DMomentMorphFunction.html:15415,Security,Hash,Hash,15415,"AbsReal::getPropagatedError(const RooFitResult& fr); const Text_t*RooAbsArg::getStringAttribute(const Text_t* key) const; virtual const char*TNamed::GetTitle() const; TStringRooAbsReal::getTitle(Bool_t appendUnit = kFALSE) const; Bool_tRooAbsArg::getTransientAttribute(const Text_t* name) const; virtual UInt_tTObject::GetUniqueID() const; const Text_t*RooAbsReal::getUnit() const; Double_tRooAbsReal::getVal(const RooArgSet* set = 0) const; Double_tRooAbsReal::getVal(const RooArgSet& set) const; virtual Double_tRooAbsReal::getValV(const RooArgSet* set = 0) const; RooArgSet*RooAbsArg::getVariables(Bool_t stripDisconnected = kTRUE) const; voidRooAbsArg::graphVizTree(const char* fileName, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); voidRooAbsArg::graphVizTree(ostream& os, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tRooAbsArg::hasClients() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tRooAbsArg::hasRange(const char*) const; static Bool_tRooAbsReal::hideOffset(); RooGenFunction*RooAbsReal::iGenFunction(RooRealVar& x, const RooArgSet& nset = RooArgSet()); RooMultiGenFunction*RooAbsReal::iGenFunction(const RooArgSet& observables, const RooArgSet& nset = RooArgSet()); virtual Bool_tRooAbsArg::importWorkspaceHook(RooWorkspace&); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual Bool_tRooAbsArg::inRange(const char*) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual voidRooAbsArg::ioStreamerPass2(); static voidRooAbsArg::ioStreamerPass2Finalize(); virtual TClass*IsA() const; virtual Bool_tRooAbsReal::isBinnedDistribution(const RooArgSet&) const; Bool_tRooAbsArg::isCloneOf(const RooAbsArg& other) const; Bool_tRooAbsArg::isConstant() const; virtual Bool_",MatchSource.WIKI,root/html534/Roo1DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo1DMomentMorphFunction.html
https://root.cern/root/html534/Roo1DMomentMorphFunction.html:32791,Security,validat,validate,32791,,MatchSource.WIKI,root/html534/Roo1DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo1DMomentMorphFunction.html
https://root.cern/root/html534/Roo1DMomentMorphFunction.html:33530,Security,access,access,33530,"*_M; set<std::string>RooAbsArg::_boolAttribBoolean attributes; set<std::string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); Bool_tRooAbsReal::_boolValue! Transient cache for bool values from tree branches ; UChar_tRooAbsReal::_byteValue! Transient cache for byte values from tree branches ; static Bool_tRooAbsReal::_cacheCheckIf true, always validate contents of clean which outcome of evaluate(); deque<RooAbsCache*>RooAbsArg::_cacheListlist of caches; RooRefCountListRooAbsArg::_clientListlist of client objects; RooRefCountListRooAbsArg::_clientListShapesubset of clients that requested shape dirty flag propagation; RooRefCountListRooAbsArg::_clientListValuesubset of clients that requested value dirty flag propagation; TIterator*RooAbsArg::_clientShapeIter! Iterator over _clientListShape ; TIterator*RooAbsArg::_clientValueIter! Iterator over _clientListValue ; Bool_tRooAbsArg::_deleteWatch! Delete watch flag ; RooExpensiveObjectCache*RooAbsArg::_eocachePointer to global cache manager for any expensive components created by this object; Bool_tRooAbsArg::_fastAllow fast access mode in getVal() and proxies; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; TVectorD*_frac; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsReal::_hideOffsetOffset hiding flag; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; Bool_tRooAbsArg::_isConstant! Cached isConstant status ; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; TVectorD*_mref; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist.",MatchSource.WIKI,root/html534/Roo1DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo1DMomentMorphFunction.html
https://root.cern/root/html534/Roo1DMomentMorphFunction.html:8853,Testability,test,testArg,8853,"l*RooAbsReal::createPlotProjection(const RooArgSet& dependentVars, const RooArgSet* projectedVars, RooArgSet*& cloneSet, const char* rangeName = 0, const RooArgSet* condObs = 0) const; virtual RooAbsReal*RooAbsReal::createProfile(const RooArgSet& paramsOfInterest); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooArgSet& nset = RooArgSet()); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); RooAbsReal*RooAbsReal::createScanRI(const RooArgSet& iset, const RooArgSet& nset, Int_t numScanBins, Int_t intOrder); virtual Double_tRooAbsReal::defaultErrorLevel() const; static RooNumIntConfig*RooAbsReal::defaultIntegratorConfig(); virtual Int_tRooAbsArg::defaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooPrintable::defaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Bool_tRooAbsArg::dependentOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependentOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependsOn(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOn(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0) const; RooDerivative*RooAbsReal::derivative(RooRealVar& obs, Int_t order = 1, Double_t eps = 0.",MatchSource.WIKI,root/html534/Roo1DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo1DMomentMorphFunction.html
https://root.cern/root/html534/Roo1DMomentMorphFunction.html:8947,Testability,test,testArg,8947,"l*RooAbsReal::createPlotProjection(const RooArgSet& dependentVars, const RooArgSet* projectedVars, RooArgSet*& cloneSet, const char* rangeName = 0, const RooArgSet* condObs = 0) const; virtual RooAbsReal*RooAbsReal::createProfile(const RooArgSet& paramsOfInterest); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooArgSet& nset = RooArgSet()); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); RooAbsReal*RooAbsReal::createScanRI(const RooArgSet& iset, const RooArgSet& nset, Int_t numScanBins, Int_t intOrder); virtual Double_tRooAbsReal::defaultErrorLevel() const; static RooNumIntConfig*RooAbsReal::defaultIntegratorConfig(); virtual Int_tRooAbsArg::defaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooPrintable::defaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Bool_tRooAbsArg::dependentOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependentOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependsOn(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOn(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0) const; RooDerivative*RooAbsReal::derivative(RooRealVar& obs, Int_t order = 1, Double_t eps = 0.",MatchSource.WIKI,root/html534/Roo1DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo1DMomentMorphFunction.html
https://root.cern/root/html534/Roo1DMomentMorphFunction.html:17492,Testability,log,logEvalError,17492,") const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tRooAbsArg::isFundamental() const; virtual Bool_tRooAbsReal::isIdentical(const RooAbsArg& other, Bool_t assumeSameType = kFALSE); virtual Bool_tRooAbsArg::isLValue() const; virtual Bool_tRooAbsReal::isOffsetting() const; Bool_tTObject::IsOnHeap() const; Bool_tRooAbsArg::isShapeDirty() const; Bool_tRooAbsArg::isShapeServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isShapeServer(const char* name) const; virtual Bool_tRooAbsArg::IsSortable() const; Bool_tRooAbsArg::isValueDirty() const; Bool_tRooAbsArg::isValueDirtyAndClear() const; Bool_tRooAbsArg::isValueOrShapeDirtyAndClear() const; Bool_tRooAbsArg::isValueServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isValueServer(const char* name) const; Bool_tTObject::IsZombie() const; voidRooAbsArg::leafNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t recurseNonDerived = kFALSE) const; Bool_tRooAbsArg::localNoDirtyInhibit() const; voidRooAbsReal::logEvalError(const char* message, const char* serverValueString = 0) const; static voidRooAbsReal::logEvalError(const RooAbsReal* originator, const char* origName, const char* message, const char* serverValueString = 0); virtual voidTNamed::ls(Option_t* option = """") const; virtual Double_tRooAbsReal::maxVal(Int_t code) const; voidTObject::MayNotUse(const char* method) const; RooAbsMoment*RooAbsReal::mean(RooRealVar& obs); RooAbsMoment*RooAbsReal::mean(RooRealVar& obs, const RooArgSet& nset); virtual Int_tRooAbsReal::minTrialSamples(const RooArgSet&) const; RooAbsMoment*RooAbsReal::moment(RooRealVar& obs, Int_t order, Bool_t central, Bool_t takeRoot); RooAbsMoment*RooAbsReal::moment(RooRealVar& obs, const RooArgSet& normObs, Int_t order, Bool_t central, Bool_t takeRoot, Bool_t intNormObs); static voidRooPrintable::nameFieldLength(Int_t newLen); const TNamed*RooAbsArg::namePtr() const; virtual Bool_tTObject::Notify(); Int_tRooAbsArg::numCaches() const; static Int_tRooAbsReal::numEvalErrorItems(",MatchSource.WIKI,root/html534/Roo1DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo1DMomentMorphFunction.html
https://root.cern/root/html534/Roo1DMomentMorphFunction.html:17591,Testability,log,logEvalError,17591,"irtual Bool_tRooAbsReal::isIdentical(const RooAbsArg& other, Bool_t assumeSameType = kFALSE); virtual Bool_tRooAbsArg::isLValue() const; virtual Bool_tRooAbsReal::isOffsetting() const; Bool_tTObject::IsOnHeap() const; Bool_tRooAbsArg::isShapeDirty() const; Bool_tRooAbsArg::isShapeServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isShapeServer(const char* name) const; virtual Bool_tRooAbsArg::IsSortable() const; Bool_tRooAbsArg::isValueDirty() const; Bool_tRooAbsArg::isValueDirtyAndClear() const; Bool_tRooAbsArg::isValueOrShapeDirtyAndClear() const; Bool_tRooAbsArg::isValueServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isValueServer(const char* name) const; Bool_tTObject::IsZombie() const; voidRooAbsArg::leafNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t recurseNonDerived = kFALSE) const; Bool_tRooAbsArg::localNoDirtyInhibit() const; voidRooAbsReal::logEvalError(const char* message, const char* serverValueString = 0) const; static voidRooAbsReal::logEvalError(const RooAbsReal* originator, const char* origName, const char* message, const char* serverValueString = 0); virtual voidTNamed::ls(Option_t* option = """") const; virtual Double_tRooAbsReal::maxVal(Int_t code) const; voidTObject::MayNotUse(const char* method) const; RooAbsMoment*RooAbsReal::mean(RooRealVar& obs); RooAbsMoment*RooAbsReal::mean(RooRealVar& obs, const RooArgSet& nset); virtual Int_tRooAbsReal::minTrialSamples(const RooArgSet&) const; RooAbsMoment*RooAbsReal::moment(RooRealVar& obs, Int_t order, Bool_t central, Bool_t takeRoot); RooAbsMoment*RooAbsReal::moment(RooRealVar& obs, const RooArgSet& normObs, Int_t order, Bool_t central, Bool_t takeRoot, Bool_t intNormObs); static voidRooPrintable::nameFieldLength(Int_t newLen); const TNamed*RooAbsArg::namePtr() const; virtual Bool_tTObject::Notify(); Int_tRooAbsArg::numCaches() const; static Int_tRooAbsReal::numEvalErrorItems(); static Int_tRooAbsReal::numEvalErrors(); Bool_tRooAbsArg::observableOverlaps(const RooAbsData* d",MatchSource.WIKI,root/html534/Roo1DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo1DMomentMorphFunction.html
https://root.cern/root/html534/Roo1DMomentMorphFunction.html:18620,Testability,test,testArg,18620,"iginator, const char* origName, const char* message, const char* serverValueString = 0); virtual voidTNamed::ls(Option_t* option = """") const; virtual Double_tRooAbsReal::maxVal(Int_t code) const; voidTObject::MayNotUse(const char* method) const; RooAbsMoment*RooAbsReal::mean(RooRealVar& obs); RooAbsMoment*RooAbsReal::mean(RooRealVar& obs, const RooArgSet& nset); virtual Int_tRooAbsReal::minTrialSamples(const RooArgSet&) const; RooAbsMoment*RooAbsReal::moment(RooRealVar& obs, Int_t order, Bool_t central, Bool_t takeRoot); RooAbsMoment*RooAbsReal::moment(RooRealVar& obs, const RooArgSet& normObs, Int_t order, Bool_t central, Bool_t takeRoot, Bool_t intNormObs); static voidRooPrintable::nameFieldLength(Int_t newLen); const TNamed*RooAbsArg::namePtr() const; virtual Bool_tTObject::Notify(); Int_tRooAbsArg::numCaches() const; static Int_tRooAbsReal::numEvalErrorItems(); static Int_tRooAbsReal::numEvalErrors(); Bool_tRooAbsArg::observableOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::observableOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; virtual Double_tRooAbsReal::offset() const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TNamed&TNamed::operator=(const TNamed& rhs); Bool_tRooAbsReal::operator==(Double_t value) const; virtual Bool_tRooAbsReal::operator==(const RooAbsArg& other); RooAbsArg::OperModeRooAbsArg::operMode() const; virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables); virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables, Roo",MatchSource.WIKI,root/html534/Roo1DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo1DMomentMorphFunction.html
https://root.cern/root/html534/Roo1DMomentMorphFunction.html:18715,Testability,test,testArg,18715,"l voidTNamed::ls(Option_t* option = """") const; virtual Double_tRooAbsReal::maxVal(Int_t code) const; voidTObject::MayNotUse(const char* method) const; RooAbsMoment*RooAbsReal::mean(RooRealVar& obs); RooAbsMoment*RooAbsReal::mean(RooRealVar& obs, const RooArgSet& nset); virtual Int_tRooAbsReal::minTrialSamples(const RooArgSet&) const; RooAbsMoment*RooAbsReal::moment(RooRealVar& obs, Int_t order, Bool_t central, Bool_t takeRoot); RooAbsMoment*RooAbsReal::moment(RooRealVar& obs, const RooArgSet& normObs, Int_t order, Bool_t central, Bool_t takeRoot, Bool_t intNormObs); static voidRooPrintable::nameFieldLength(Int_t newLen); const TNamed*RooAbsArg::namePtr() const; virtual Bool_tTObject::Notify(); Int_tRooAbsArg::numCaches() const; static Int_tRooAbsReal::numEvalErrorItems(); static Int_tRooAbsReal::numEvalErrors(); Bool_tRooAbsArg::observableOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::observableOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; virtual Double_tRooAbsReal::offset() const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TNamed&TNamed::operator=(const TNamed& rhs); Bool_tRooAbsReal::operator==(Double_t value) const; virtual Bool_tRooAbsReal::operator==(const RooAbsArg& other); RooAbsArg::OperModeRooAbsArg::operMode() const; virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables); virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables, RooArgSet& optNodes, RooLinkedList& processedNodes); Bool_tRooAbsArg::overlaps(const RooAbsArg& te",MatchSource.WIKI,root/html534/Roo1DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo1DMomentMorphFunction.html
https://root.cern/root/html534/Roo1DMomentMorphFunction.html:19717,Testability,test,testArg,19717," RooAbsArg& testArg) const; Bool_tRooAbsArg::observableOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; virtual Double_tRooAbsReal::offset() const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TNamed&TNamed::operator=(const TNamed& rhs); Bool_tRooAbsReal::operator==(Double_t value) const; virtual Bool_tRooAbsReal::operator==(const RooAbsArg& other); RooAbsArg::OperModeRooAbsArg::operMode() const; virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables); virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables, RooArgSet& optNodes, RooLinkedList& processedNodes); Bool_tRooAbsArg::overlaps(const RooAbsArg& testArg, Bool_t valueOnly = kFALSE) const; const RooArgSet*RooAbsArg::ownedComponents() const; virtual voidTObject::Paint(Option_t* option = """"); virtual RooPlot*RooAbsReal::plotOn(RooPlot* frame, RooLinkedList& cmdList) const; virtual RooPlot*RooAbsReal::plotOn(RooPlot* frame, const RooCmdArg& arg1 = RooCmdArg(), const RooCmdArg& arg2 = RooCmdArg(), const RooCmdArg& arg3 = RooCmdArg(), const RooCmdArg& arg4 = RooCmdArg(), const RooCmdArg& arg5 = RooCmdArg(), const RooCmdArg& arg6 = RooCmdArg(), const RooCmdArg& arg7 = RooCmdArg(), const RooCmdArg& arg8 = RooCmdArg(), const RooCmdArg& arg9 = RooCmdArg(), const RooCmdArg& arg10 = RooCmdArg()) const; virtual list<Double_t>*RooAbsReal::plotSamplingHint(RooAbsRealLValue&, Double_t, Double_t) const; virtual RooPlot*RooAbsReal::plotSliceOn(RooPlot* frame, const RooArgSet& sliceSet, Option_t* drawOptions = ""L"", Double_t scaleFactor = 1.",MatchSource.WIKI,root/html534/Roo1DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo1DMomentMorphFunction.html
https://root.cern/root/html534/Roo1DMomentMorphFunction.html:26022,Testability,Test,TestBit,26022,"RooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsArg::setTransientAttribute(const Text_t* name, Bool_t value = kTRUE); virtual voidTObject::SetUniqueID(UInt_t uid); voidRooAbsReal::setUnit(const char* unit); voidRooAbsArg::setValueDirty() const; TIterator*RooAbsArg::shapeClientIterator() const; RooFIterRooAbsArg::shapeClientMIterator() const; virtual voidShowMembers(TMemberInspector&); RooAbsMoment*RooAbsReal::sigma(RooRealVar& obs); RooAbsMoment*RooAbsReal::sigma(RooRealVar& obs, const RooArgSet& nset); virtual Int_tTNamed::Sizeof() const; RooNumIntConfig*RooAbsReal::specialIntegratorConfig() const; RooNumIntConfig*RooAbsReal::specialIntegratorConfig(Bool_t createOnTheFly); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); const map<std::string,std::string>&RooAbsArg::stringAttributes() const; virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; const set<std::string>&RooAbsArg::transientAttributes() const; voidRooAbsArg::treeNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t doBranch = kTRUE, Bool_t doLeaf = kTRUE, Bool_t valueOnly = kFALSE, Bool_t recurseNonDerived = kFALSE) const; voidRooAbsArg::unRegisterCache(RooAbsCache& cache); virtual voidTObject::UseCurrentStyle(); TIterator*RooAbsArg::valueClientIterator() const; RooFIterRooAbsArg::valueClientMIterator() const; static voidRooAbsArg::verboseDirty(Bool_t flag); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; voidRooAbsArg::wireAllCaches(); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidRooAbsReal::writeToStream(ostream& os, Bool_t compact) const.",MatchSource.WIKI,root/html534/Roo1DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo1DMomentMorphFunction.html
https://root.cern/root/html534/Roo1DMomentMorphFunction.html:26061,Testability,Test,TestBits,26061,"RooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsArg::setTransientAttribute(const Text_t* name, Bool_t value = kTRUE); virtual voidTObject::SetUniqueID(UInt_t uid); voidRooAbsReal::setUnit(const char* unit); voidRooAbsArg::setValueDirty() const; TIterator*RooAbsArg::shapeClientIterator() const; RooFIterRooAbsArg::shapeClientMIterator() const; virtual voidShowMembers(TMemberInspector&); RooAbsMoment*RooAbsReal::sigma(RooRealVar& obs); RooAbsMoment*RooAbsReal::sigma(RooRealVar& obs, const RooArgSet& nset); virtual Int_tTNamed::Sizeof() const; RooNumIntConfig*RooAbsReal::specialIntegratorConfig() const; RooNumIntConfig*RooAbsReal::specialIntegratorConfig(Bool_t createOnTheFly); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); const map<std::string,std::string>&RooAbsArg::stringAttributes() const; virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; const set<std::string>&RooAbsArg::transientAttributes() const; voidRooAbsArg::treeNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t doBranch = kTRUE, Bool_t doLeaf = kTRUE, Bool_t valueOnly = kFALSE, Bool_t recurseNonDerived = kFALSE) const; voidRooAbsArg::unRegisterCache(RooAbsCache& cache); virtual voidTObject::UseCurrentStyle(); TIterator*RooAbsArg::valueClientIterator() const; RooFIterRooAbsArg::valueClientMIterator() const; static voidRooAbsArg::verboseDirty(Bool_t flag); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; voidRooAbsArg::wireAllCaches(); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidRooAbsReal::writeToStream(ostream& os, Bool_t compact) const.",MatchSource.WIKI,root/html534/Roo1DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo1DMomentMorphFunction.html
https://root.cern/root/html534/Roo1DMomentMorphFunction.html:3600,Usability,Clear,Clear,3600,"rtual RooFitResult*RooAbsReal::chi2FitTo(RooDataSet& xydata, const RooLinkedList& cmdList); virtual RooFitResult*RooAbsReal::chi2FitTo(RooDataHist& data, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); virtual RooFitResult*RooAbsReal::chi2FitTo(RooDataSet& xydata, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); static voidRooAbsReal::clearEvalErrorLog(); voidRooAbsArg::clearShapeDirty() const; voidRooAbsArg::clearValueAndShapeDirty() const; voidRooAbsArg::clearValueDirty() const; TIterator*RooAbsArg::clientIterator() const; virtual TObject*clone(const char* newname) const; virtual TObject*RooAbsArg::Clone(const char* newname = 0) const; virtual RooAbsArg*RooAbsArg::cloneTree(const char* newname = 0) const; virtual Int_tRooAbsArg::Compare(const TObject* other) const; virtual voidRooAbsArg::constOptimizeTestStatistic(RooAbsArg::ConstOpCode opcode, Bool_t doAlsoTrackingOpt = kTRUE); virtual voidTNamed::Copy(TObject& named) const; static UInt_tRooAbsArg::crc32(const char* data); static UInt_tRooAbsArg::crc32(const char* data, ULong_t sz, UInt_t crc = 0); virtual RooAbsReal*RooAbsReal::createChi2(RooDataHist& data, const RooLinkedList& cmdList); virtual RooAbsReal*RooAbsReal::createChi2(RooDataSet& data, const RooLinkedList& cmdList); virtual RooAbsReal*RooAbsReal::creat",MatchSource.WIKI,root/html534/Roo1DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo1DMomentMorphFunction.html
https://root.cern/root/html534/Roo1DMomentMorphFunction.html:3653,Usability,clear,clearEvalErrorLog,3653,", const RooLinkedList& cmdList); virtual RooFitResult*RooAbsReal::chi2FitTo(RooDataHist& data, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); virtual RooFitResult*RooAbsReal::chi2FitTo(RooDataSet& xydata, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); static voidRooAbsReal::clearEvalErrorLog(); voidRooAbsArg::clearShapeDirty() const; voidRooAbsArg::clearValueAndShapeDirty() const; voidRooAbsArg::clearValueDirty() const; TIterator*RooAbsArg::clientIterator() const; virtual TObject*clone(const char* newname) const; virtual TObject*RooAbsArg::Clone(const char* newname = 0) const; virtual RooAbsArg*RooAbsArg::cloneTree(const char* newname = 0) const; virtual Int_tRooAbsArg::Compare(const TObject* other) const; virtual voidRooAbsArg::constOptimizeTestStatistic(RooAbsArg::ConstOpCode opcode, Bool_t doAlsoTrackingOpt = kTRUE); virtual voidTNamed::Copy(TObject& named) const; static UInt_tRooAbsArg::crc32(const char* data); static UInt_tRooAbsArg::crc32(const char* data, ULong_t sz, UInt_t crc = 0); virtual RooAbsReal*RooAbsReal::createChi2(RooDataHist& data, const RooLinkedList& cmdList); virtual RooAbsReal*RooAbsReal::createChi2(RooDataSet& data, const RooLinkedList& cmdList); virtual RooAbsReal*RooAbsReal::createChi2(RooDataHist& data, const RooCmdArg& arg1 = RooCmdArg:",MatchSource.WIKI,root/html534/Roo1DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo1DMomentMorphFunction.html
https://root.cern/root/html534/Roo1DMomentMorphFunction.html:3689,Usability,clear,clearShapeDirty,3689,"rtual RooFitResult*RooAbsReal::chi2FitTo(RooDataHist& data, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); virtual RooFitResult*RooAbsReal::chi2FitTo(RooDataSet& xydata, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); static voidRooAbsReal::clearEvalErrorLog(); voidRooAbsArg::clearShapeDirty() const; voidRooAbsArg::clearValueAndShapeDirty() const; voidRooAbsArg::clearValueDirty() const; TIterator*RooAbsArg::clientIterator() const; virtual TObject*clone(const char* newname) const; virtual TObject*RooAbsArg::Clone(const char* newname = 0) const; virtual RooAbsArg*RooAbsArg::cloneTree(const char* newname = 0) const; virtual Int_tRooAbsArg::Compare(const TObject* other) const; virtual voidRooAbsArg::constOptimizeTestStatistic(RooAbsArg::ConstOpCode opcode, Bool_t doAlsoTrackingOpt = kTRUE); virtual voidTNamed::Copy(TObject& named) const; static UInt_tRooAbsArg::crc32(const char* data); static UInt_tRooAbsArg::crc32(const char* data, ULong_t sz, UInt_t crc = 0); virtual RooAbsReal*RooAbsReal::createChi2(RooDataHist& data, const RooLinkedList& cmdList); virtual RooAbsReal*RooAbsReal::createChi2(RooDataSet& data, const RooLinkedList& cmdList); virtual RooAbsReal*RooAbsReal::createChi2(RooDataHist& data, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = Ro",MatchSource.WIKI,root/html534/Roo1DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo1DMomentMorphFunction.html
https://root.cern/root/html534/Roo1DMomentMorphFunction.html:3729,Usability,clear,clearValueAndShapeDirty,3729,"DataHist& data, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); virtual RooFitResult*RooAbsReal::chi2FitTo(RooDataSet& xydata, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); static voidRooAbsReal::clearEvalErrorLog(); voidRooAbsArg::clearShapeDirty() const; voidRooAbsArg::clearValueAndShapeDirty() const; voidRooAbsArg::clearValueDirty() const; TIterator*RooAbsArg::clientIterator() const; virtual TObject*clone(const char* newname) const; virtual TObject*RooAbsArg::Clone(const char* newname = 0) const; virtual RooAbsArg*RooAbsArg::cloneTree(const char* newname = 0) const; virtual Int_tRooAbsArg::Compare(const TObject* other) const; virtual voidRooAbsArg::constOptimizeTestStatistic(RooAbsArg::ConstOpCode opcode, Bool_t doAlsoTrackingOpt = kTRUE); virtual voidTNamed::Copy(TObject& named) const; static UInt_tRooAbsArg::crc32(const char* data); static UInt_tRooAbsArg::crc32(const char* data, ULong_t sz, UInt_t crc = 0); virtual RooAbsReal*RooAbsReal::createChi2(RooDataHist& data, const RooLinkedList& cmdList); virtual RooAbsReal*RooAbsReal::createChi2(RooDataSet& data, const RooLinkedList& cmdList); virtual RooAbsReal*RooAbsReal::createChi2(RooDataHist& data, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = Roo",MatchSource.WIKI,root/html534/Roo1DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo1DMomentMorphFunction.html
https://root.cern/root/html534/Roo1DMomentMorphFunction.html:3777,Usability,clear,clearValueDirty,3777,"mdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); virtual RooFitResult*RooAbsReal::chi2FitTo(RooDataSet& xydata, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); static voidRooAbsReal::clearEvalErrorLog(); voidRooAbsArg::clearShapeDirty() const; voidRooAbsArg::clearValueAndShapeDirty() const; voidRooAbsArg::clearValueDirty() const; TIterator*RooAbsArg::clientIterator() const; virtual TObject*clone(const char* newname) const; virtual TObject*RooAbsArg::Clone(const char* newname = 0) const; virtual RooAbsArg*RooAbsArg::cloneTree(const char* newname = 0) const; virtual Int_tRooAbsArg::Compare(const TObject* other) const; virtual voidRooAbsArg::constOptimizeTestStatistic(RooAbsArg::ConstOpCode opcode, Bool_t doAlsoTrackingOpt = kTRUE); virtual voidTNamed::Copy(TObject& named) const; static UInt_tRooAbsArg::crc32(const char* data); static UInt_tRooAbsArg::crc32(const char* data, ULong_t sz, UInt_t crc = 0); virtual RooAbsReal*RooAbsReal::createChi2(RooDataHist& data, const RooLinkedList& cmdList); virtual RooAbsReal*RooAbsReal::createChi2(RooDataSet& data, const RooLinkedList& cmdList); virtual RooAbsReal*RooAbsReal::createChi2(RooDataHist& data, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooC",MatchSource.WIKI,root/html534/Roo1DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo1DMomentMorphFunction.html
https://root.cern/root/html534/Roo1DTable.html:1629,Availability,Error,Error,1629,"s Roo1DTable: public RooTable. Roo1DTable implements a one-dimensional table. A table is the category; equivalent of a plot. To create a table use the RooDataSet::table method.; . Function Members (Methods); public:. Roo1DTable(); Roo1DTable(const Roo1DTable& other); Roo1DTable(const char* name, const char* title, const RooAbsCategory& cat); virtual~Roo1DTable(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual Int_tdefaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooPrintable::defaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidfill(RooAbsCategory& cat, Double_t weight = 1.0); virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Double_tget(const char* label, Bool_t sil",MatchSource.WIKI,root/html534/Roo1DTable.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo1DTable.html
https://root.cern/root/html534/Roo1DTable.html:1758,Availability,error,error,1758,"s Roo1DTable: public RooTable. Roo1DTable implements a one-dimensional table. A table is the category; equivalent of a plot. To create a table use the RooDataSet::table method.; . Function Members (Methods); public:. Roo1DTable(); Roo1DTable(const Roo1DTable& other); Roo1DTable(const char* name, const char* title, const RooAbsCategory& cat); virtual~Roo1DTable(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual Int_tdefaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooPrintable::defaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidfill(RooAbsCategory& cat, Double_t weight = 1.0); virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Double_tget(const char* label, Bool_t sil",MatchSource.WIKI,root/html534/Roo1DTable.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo1DTable.html
https://root.cern/root/html534/Roo1DTable.html:1842,Availability,error,error,1842,"s Roo1DTable: public RooTable. Roo1DTable implements a one-dimensional table. A table is the category; equivalent of a plot. To create a table use the RooDataSet::table method.; . Function Members (Methods); public:. Roo1DTable(); Roo1DTable(const Roo1DTable& other); Roo1DTable(const char* name, const char* title, const RooAbsCategory& cat); virtual~Roo1DTable(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual Int_tdefaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooPrintable::defaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidfill(RooAbsCategory& cat, Double_t weight = 1.0); virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Double_tget(const char* label, Bool_t sil",MatchSource.WIKI,root/html534/Roo1DTable.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo1DTable.html
https://root.cern/root/html534/Roo1DTable.html:9878,Integrability,interface,interface,9878,"ches no table slot name, the table; overflow counter is incremented. void printName(ostream& os) const; Print the name of the table. void printTitle(ostream& os) const; Print the title of the table. void printClassName(ostream& os) const; Print the class name of the table. void printValue(ostream& os) const; Print the table value, i.e. the contents, in 'inline' format. Int_t defaultPrintContents(Option_t* opt) const; Define default contents to print. void printMultiline(ostream& os, Int_t contents, Bool_t verbose = kFALSE, TString indent = """") const; Print the formatted table contents on the given stream. Double_t get(const char* label, Bool_t silent = kFALSE) const; Return the table entry named 'label'. Zero is returned if given; label doesn't occur in table. Double_t get(const int index, Bool_t silent = kFALSE) const; Return the table entry named 'label'. Zero is returned if given; label doesn't occur in table. Double_t getOverflow() const; Return the number of overflow entries in the table. Double_t getFrac(const char* label, Bool_t silent = kFALSE) const; Return the fraction of entries in the table contained in the slot named 'label'.; The normalization includes the number of overflows.; Zero is returned if given label doesn't occur in table. Double_t getFrac(const int index, Bool_t silent = kFALSE) const; Return the fraction of entries in the table contained in the slot named 'label'.; The normalization includes the number of overflows.; Zero is returned if given label doesn't occur in table. Bool_t isIdentical(const RooTable& other); Return true if table is identical in contents to given reference table. Roo1DTable(); Constructors, cloning and assignment. void Print(Option_t* options = 0) const; Printing interface (human readable). » Last changed: Tue Mar 10 17:13:43 2015 » Last generated: 2015-03-10 17:13; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/Roo1DTable.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo1DTable.html
https://root.cern/root/html534/Roo1DTable.html:3109,Modifiability,Inherit,InheritsFrom,3109,"bject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Double_tget(const char* label, Bool_t silent = kFALSE) const; Double_tget(const int index, Bool_t silent = kFALSE) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Double_tgetFrac(const char* label, Bool_t silent = kFALSE) const; Double_tgetFrac(const int index, Bool_t silent = kFALSE) const; virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Double_tgetOverflow() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tisIdentical(const RooTable& other); Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; static voidRooPrintable::nameFieldLength(Int_t newLen); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t",MatchSource.WIKI,root/html534/Roo1DTable.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo1DTable.html
https://root.cern/root/html534/Roo1DTable.html:3175,Modifiability,Inherit,InheritsFrom,3175,"*TObject::FindObject(const TObject* obj) const; Double_tget(const char* label, Bool_t silent = kFALSE) const; Double_tget(const int index, Bool_t silent = kFALSE) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Double_tgetFrac(const char* label, Bool_t silent = kFALSE) const; Double_tgetFrac(const int index, Bool_t silent = kFALSE) const; virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Double_tgetOverflow() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tisIdentical(const RooTable& other); Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; static voidRooPrintable::nameFieldLength(Int_t newLen); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObjec",MatchSource.WIKI,root/html534/Roo1DTable.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo1DTable.html
https://root.cern/root/html534/Roo1DTable.html:7437,Modifiability,Inherit,Inheritance,7437,"size = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };; enum RooPrintable::ContentsOption { kName; kClassName; kValue; kArgs; kExtras; kAddress; kTitle; kCollectionHeader; };; enum RooPrintable::StyleOption { kInline; kSingleLine; kStandard; kVerbose; kTreeStructure; };. protected:. vector<Double_t>_countArray of counters for each state; Double_t_nOverflowNumber of overflow entries; static Int_tRooPrintable::_nameLength; Double_t_totalTotal number of entries; TObjArray_typesArray of defined category states; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Roo1DTable(const char* name, const char* title, const RooAbsCategory& cat); Create an empty table from abstract category. The number of table entries and; their names are taken from the category state labels at the time of construction,; but not reference to the category is retained after the construction phase.; Use fill() to fill the table. Roo1DTable(const Roo1DTable& other); Copy constructor. ~Roo1DTable(); Destructor. void fill(RooAbsCategory& cat, Double_t weight = 1.0); Increment the counter of the table slot with the name; corresponding to that of the current category state. If the; current category state matches no table slot name, the table; overflow counter is incremented. void printName(ostream& os) const; Print the name of the table. void printTitle(ostream& os) const; Print the title of the table. void printClassName(ostream& os) const; Print the class name of the table. void printValue(ostream& os) const; Print the table",MatchSource.WIKI,root/html534/Roo1DTable.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo1DTable.html
https://root.cern/root/html534/Roo1DTable.html:7450,Modifiability,Inherit,Inherited,7450,"size = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };; enum RooPrintable::ContentsOption { kName; kClassName; kValue; kArgs; kExtras; kAddress; kTitle; kCollectionHeader; };; enum RooPrintable::StyleOption { kInline; kSingleLine; kStandard; kVerbose; kTreeStructure; };. protected:. vector<Double_t>_countArray of counters for each state; Double_t_nOverflowNumber of overflow entries; static Int_tRooPrintable::_nameLength; Double_t_totalTotal number of entries; TObjArray_typesArray of defined category states; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Roo1DTable(const char* name, const char* title, const RooAbsCategory& cat); Create an empty table from abstract category. The number of table entries and; their names are taken from the category state labels at the time of construction,; but not reference to the category is retained after the construction phase.; Use fill() to fill the table. Roo1DTable(const Roo1DTable& other); Copy constructor. ~Roo1DTable(); Destructor. void fill(RooAbsCategory& cat, Double_t weight = 1.0); Increment the counter of the table slot with the name; corresponding to that of the current category state. If the; current category state matches no table slot name, the table; overflow counter is incremented. void printName(ostream& os) const; Print the name of the table. void printTitle(ostream& os) const; Print the title of the table. void printClassName(ostream& os) const; Print the class name of the table. void printValue(ostream& os) const; Print the table",MatchSource.WIKI,root/html534/Roo1DTable.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo1DTable.html
https://root.cern/root/html534/Roo1DTable.html:2999,Security,Hash,Hash,2999,,MatchSource.WIKI,root/html534/Roo1DTable.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo1DTable.html
https://root.cern/root/html534/Roo1DTable.html:6116,Testability,Test,TestBit,6116,"stream& os) const; virtual voidRooPrintable::printArgs(ostream& os) const; virtual voidprintClassName(ostream& os) const; virtual voidRooPrintable::printExtras(ostream& os) const; virtual voidprintMultiline(ostream& os, Int_t contents, Bool_t verbose = kFALSE, TString indent = """") const; virtual voidprintName(ostream& os) const; virtual voidRooPrintable::printStream(ostream& os, Int_t contents, RooPrintable::StyleOption style, TString indent = """") const; virtual voidprintTitle(ostream& os) const; virtual voidRooPrintable::printTree(ostream& os, TString indent = """") const; virtual voidprintValue(ostream& os) const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root/html534/Roo1DTable.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo1DTable.html
https://root.cern/root/html534/Roo1DTable.html:6155,Testability,Test,TestBits,6155,"stream& os) const; virtual voidRooPrintable::printArgs(ostream& os) const; virtual voidprintClassName(ostream& os) const; virtual voidRooPrintable::printExtras(ostream& os) const; virtual voidprintMultiline(ostream& os, Int_t contents, Bool_t verbose = kFALSE, TString indent = """") const; virtual voidprintName(ostream& os) const; virtual voidRooPrintable::printStream(ostream& os, Int_t contents, RooPrintable::StyleOption style, TString indent = """") const; virtual voidprintTitle(ostream& os) const; virtual voidRooPrintable::printTree(ostream& os, TString indent = """") const; virtual voidprintValue(ostream& os) const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root/html534/Roo1DTable.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo1DTable.html
https://root.cern/root/html534/Roo1DTable.html:877,Usability,Clear,Clear,877,"s Roo1DTable: public RooTable. Roo1DTable implements a one-dimensional table. A table is the category; equivalent of a plot. To create a table use the RooDataSet::table method.; . Function Members (Methods); public:. Roo1DTable(); Roo1DTable(const Roo1DTable& other); Roo1DTable(const char* name, const char* title, const RooAbsCategory& cat); virtual~Roo1DTable(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual Int_tdefaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooPrintable::defaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidfill(RooAbsCategory& cat, Double_t weight = 1.0); virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Double_tget(const char* label, Bool_t sil",MatchSource.WIKI,root/html534/Roo1DTable.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo1DTable.html
https://root.cern/root/html534/Roo2DKeysPdf.html:9867,Availability,Error,Error,9867,,MatchSource.WIKI,root/html534/Roo2DKeysPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DKeysPdf.html
https://root.cern/root/html534/Roo2DKeysPdf.html:10037,Availability,Error,ErrorLoggingModeRooAbsReal,10037,,MatchSource.WIKI,root/html534/Roo2DKeysPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DKeysPdf.html
https://root.cern/root/html534/Roo2DKeysPdf.html:10199,Availability,error,error,10199,,MatchSource.WIKI,root/html534/Roo2DKeysPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DKeysPdf.html
https://root.cern/root/html534/Roo2DKeysPdf.html:10283,Availability,error,error,10283,,MatchSource.WIKI,root/html534/Roo2DKeysPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DKeysPdf.html
https://root.cern/root/html534/Roo2DKeysPdf.html:29154,Availability,Error,ErrorLoggingMode,29154,"_t f); virtual voidRooAbsPdf::resetErrorCounters(Int_t resetValue = 10); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual Bool_tRooAbsPdf::selfNormalized() const; TIterator*RooAbsArg::serverIterator() const; RooFIterRooAbsArg::serverMIterator() const; virtual voidRooAbsArg::serverNameChangeHook(const RooAbsArg*, const RooAbsArg*); voidRooAbsArg::setAttribute(const Text_t* name, Bool_t value = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidRooAbsArg::setCacheAndTrackHints(RooArgSet&); static voidRooAbsReal::setCacheCheck(Bool_t flag); virtual Bool_tRooAbsReal::setData(RooAbsData&, Bool_t = kTRUE); static voidRooAbsArg::setDirtyInhibit(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidRooAbsReal::setEvalErrorLoggingMode(RooAbsReal::ErrorLoggingMode m); virtual voidRooAbsArg::setExpensiveObjectCache(RooExpensiveObjectCache& cache); voidRooAbsPdf::setGeneratorConfig(); voidRooAbsPdf::setGeneratorConfig(const RooNumGenConfig& config); static voidRooAbsReal::setHideOffset(Bool_t flag); voidRooAbsReal::setIntegratorConfig(); voidRooAbsReal::setIntegratorConfig(const RooNumIntConfig& config); voidRooAbsArg::setLocalNoDirtyInhibit(Bool_t flag) const; virtual voidRooAbsArg::SetName(const char* name); virtual voidRooAbsArg::SetNameTitle(const char* name, const char* title); voidRooAbsPdf::setNormRange(const char* rangeName); voidRooAbsPdf::setNormRangeOverride(const char* rangeName); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsArg::setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); voidsetOptions(TString options); voidRooAbsReal::setParameterizeIntegral(const RooArgSet& paramVars); voidRooAbsReal::setPlotLabel(const char* label); voidRooAbsArg::setProhibitServerRedirect(Bool_t flag); voidRooAbsArg::",MatchSource.WIKI,root/html534/Roo2DKeysPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DKeysPdf.html
https://root.cern/root/html534/Roo2DKeysPdf.html:38708,Availability,Error,ErrorLoggingMode,38708,"sterProxy(RooArgProxy& proxy); voidRooAbsArg::unRegisterProxy(RooSetProxy& proxy); voidRooAbsArg::unRegisterProxy(RooListProxy& proxy). private:. Double_tevaluateFull(Double_t thisX, Double_t thisY) const; Double_tg(Double_t var1, Double_t* _var1, Double_t sigma1, Double_t var2, Double_t* _var2, Double_t sigma2) const; Double_thighBoundaryCorrection(Double_t thisVar, Double_t thisH, Double_t high, Double_t tVar) const; Double_tlowBoundaryCorrection(Double_t thisVar, Double_t thisH, Double_t low, Double_t tVar) const. Data Members; public:. enum RooAbsPdf::ExtendMode { CanNotBeExtended; CanBeExtended; MustBeExtended; };; enum RooAbsReal::ScaleType { Raw; Relative; NumEvent; RelativeExpected; };; enum RooAbsReal::ErrorLoggingMode { PrintErrors; CollectErrors; CountErrors; Ignore; };; enum RooAbsArg::ConstOpCode { Activate; DeActivate; ConfigChange; ValueChange; };; enum RooAbsArg::CacheMode { Always; NotAdvised; Never; };; enum RooAbsArg::OperMode { Auto; AClean; ADirty; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };; enum RooPrintable::ContentsOption { kName; kClassName; kValue; kArgs; kExtras; kAddress; kTitle; kCollectionHeader; };; enum RooPrintable::StyleOption { kInline; kSingleLine; kStandard; kVerbose; kTreeStructure; };. public:. static map<RooAbsArg*,TRefArray*>RooAbsArg::_ioEvoListtemporary holding list for proxies needed in schema evolution ; static stack<RooAbsArg*>RooAbsArg::_ioReadStackreading stack ; static const UInt_tRooAbsArg::fnv1a32start; static const ULong64_tRooAbsArg::fnv1a64start; RooRealProxyx; RooRealProxyy. protected:. set<std::string>RooAbsArg::_boolAttribBoolean attributes; set<std::string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); Bool_tRooAbsReal::_boolValue! Transient cache for bool values f",MatchSource.WIKI,root/html534/Roo2DKeysPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DKeysPdf.html
https://root.cern/root/html534/Roo2DKeysPdf.html:40887,Availability,error,errors,40887,"td::string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); Bool_tRooAbsReal::_boolValue! Transient cache for bool values from tree branches ; UChar_tRooAbsReal::_byteValue! Transient cache for byte values from tree branches ; static Bool_tRooAbsReal::_cacheCheckIf true, always validate contents of clean which outcome of evaluate(); deque<RooAbsCache*>RooAbsArg::_cacheListlist of caches; RooRefCountListRooAbsArg::_clientListlist of client objects; RooRefCountListRooAbsArg::_clientListShapesubset of clients that requested shape dirty flag propagation; RooRefCountListRooAbsArg::_clientListValuesubset of clients that requested value dirty flag propagation; TIterator*RooAbsArg::_clientShapeIter! Iterator over _clientListShape ; TIterator*RooAbsArg::_clientValueIter! Iterator over _clientListValue ; Bool_tRooAbsArg::_deleteWatch! Delete watch flag ; RooExpensiveObjectCache*RooAbsArg::_eocachePointer to global cache manager for any expensive components created by this object; Int_tRooAbsPdf::_errorCountNumber of errors remaining to print; static Bool_tRooAbsPdf::_evalError; Bool_tRooAbsArg::_fastAllow fast access mode in getVal() and proxies; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsReal::_hideOffsetOffset hiding flag; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; Bool_tRooAbsArg::_isConstant! Cached isConstant status ; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist.",MatchSource.WIKI,root/html534/Roo2DKeysPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DKeysPdf.html
https://root.cern/root/html534/Roo2DKeysPdf.html:41161,Deployability,integrat,integration,41161,"td::string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); Bool_tRooAbsReal::_boolValue! Transient cache for bool values from tree branches ; UChar_tRooAbsReal::_byteValue! Transient cache for byte values from tree branches ; static Bool_tRooAbsReal::_cacheCheckIf true, always validate contents of clean which outcome of evaluate(); deque<RooAbsCache*>RooAbsArg::_cacheListlist of caches; RooRefCountListRooAbsArg::_clientListlist of client objects; RooRefCountListRooAbsArg::_clientListShapesubset of clients that requested shape dirty flag propagation; RooRefCountListRooAbsArg::_clientListValuesubset of clients that requested value dirty flag propagation; TIterator*RooAbsArg::_clientShapeIter! Iterator over _clientListShape ; TIterator*RooAbsArg::_clientValueIter! Iterator over _clientListValue ; Bool_tRooAbsArg::_deleteWatch! Delete watch flag ; RooExpensiveObjectCache*RooAbsArg::_eocachePointer to global cache manager for any expensive components created by this object; Int_tRooAbsPdf::_errorCountNumber of errors remaining to print; static Bool_tRooAbsPdf::_evalError; Bool_tRooAbsArg::_fastAllow fast access mode in getVal() and proxies; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsReal::_hideOffsetOffset hiding flag; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; Bool_tRooAbsArg::_isConstant! Cached isConstant status ; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist.",MatchSource.WIKI,root/html534/Roo2DKeysPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DKeysPdf.html
https://root.cern/root/html534/Roo2DKeysPdf.html:43191,Deployability,configurat,configuration,43191," by _normMgr); RooObjCacheManagerRooAbsPdf::_normMgrThe cache manager; TStringRooAbsPdf::_normRangeNormalization range; static TStringRooAbsPdf::_normRangeOverride; RooArgSet*RooAbsPdf::_normSet! Normalization set with for above integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title.",MatchSource.WIKI,root/html534/Roo2DKeysPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DKeysPdf.html
https://root.cern/root/html534/Roo2DKeysPdf.html:43288,Deployability,integrat,integrator,43288," by _normMgr); RooObjCacheManagerRooAbsPdf::_normMgrThe cache manager; TStringRooAbsPdf::_normRangeNormalization range; static TStringRooAbsPdf::_normRangeOverride; RooArgSet*RooAbsPdf::_normSet! Normalization set with for above integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title.",MatchSource.WIKI,root/html534/Roo2DKeysPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DKeysPdf.html
https://root.cern/root/html534/Roo2DKeysPdf.html:43299,Deployability,configurat,configuration,43299," by _normMgr); RooObjCacheManagerRooAbsPdf::_normMgrThe cache manager; TStringRooAbsPdf::_normRangeNormalization range; static TStringRooAbsPdf::_normRangeOverride; RooArgSet*RooAbsPdf::_normSet! Normalization set with for above integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title.",MatchSource.WIKI,root/html534/Roo2DKeysPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DKeysPdf.html
https://root.cern/root/html534/Roo2DKeysPdf.html:7209,Integrability,depend,dependentVars,7209,"), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()) const; RooAbsReal*RooAbsReal::createIntRI(const RooArgSet& iset, const RooArgSet& nset = RooArgSet()); virtual RooAbsReal*RooAbsPdf::createNLL(RooAbsData& data, const RooLinkedList& cmdList); virtual RooAbsReal*RooAbsPdf::createNLL(RooAbsData& data, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); const RooAbsReal*RooAbsReal::createPlotProjection(const RooArgSet& depVars, const RooArgSet& projVars) const; const RooAbsReal*RooAbsReal::createPlotProjection(const RooArgSet& depVars, const RooArgSet& projVars, RooArgSet*& cloneSet) const; const RooAbsReal*RooAbsReal::createPlotProjection(const RooArgSet& dependentVars, const RooArgSet* projectedVars, RooArgSet*& cloneSet, const char* rangeName = 0, const RooArgSet* condObs = 0) const; virtual RooAbsReal*RooAbsReal::createProfile(const RooArgSet& paramsOfInterest); virtual RooAbsPdf*RooAbsPdf::createProjection(const RooArgSet& iset); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooArgSet& nset = RooArgSet()); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); RooAbsReal*RooAbsPdf::createScanCdf(const RooArgSet& iset, const RooArgSet& nset, Int_t numScanBins, Int_t intOrder); RooAbsReal*RooAbsReal::createScanRI(const RooArgSet& iset, const RooArgSet& nset, Int_t numScanBins, Int_t",MatchSource.WIKI,root/html534/Roo2DKeysPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DKeysPdf.html
https://root.cern/root/html534/Roo2DKeysPdf.html:8699,Integrability,depend,dependentOverlaps,8699,"aramsOfInterest); virtual RooAbsPdf*RooAbsPdf::createProjection(const RooArgSet& iset); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooArgSet& nset = RooArgSet()); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); RooAbsReal*RooAbsPdf::createScanCdf(const RooArgSet& iset, const RooArgSet& nset, Int_t numScanBins, Int_t intOrder); RooAbsReal*RooAbsReal::createScanRI(const RooArgSet& iset, const RooArgSet& nset, Int_t numScanBins, Int_t intOrder); virtual Double_tRooAbsReal::defaultErrorLevel() const; static RooNumGenConfig*RooAbsPdf::defaultGeneratorConfig(); static RooNumIntConfig*RooAbsReal::defaultIntegratorConfig(); virtual Int_tRooAbsArg::defaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooPrintable::defaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Bool_tRooAbsArg::dependentOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependentOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependsOn(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOn(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0) const; RooDerivative*RooAbsReal::derivative(RooRealVar& obs, Int_t order = 1, Double_t eps = 0.",MatchSource.WIKI,root/html534/Roo2DKeysPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DKeysPdf.html
https://root.cern/root/html534/Roo2DKeysPdf.html:8791,Integrability,depend,dependentOverlaps,8791,"aramsOfInterest); virtual RooAbsPdf*RooAbsPdf::createProjection(const RooArgSet& iset); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooArgSet& nset = RooArgSet()); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); RooAbsReal*RooAbsPdf::createScanCdf(const RooArgSet& iset, const RooArgSet& nset, Int_t numScanBins, Int_t intOrder); RooAbsReal*RooAbsReal::createScanRI(const RooArgSet& iset, const RooArgSet& nset, Int_t numScanBins, Int_t intOrder); virtual Double_tRooAbsReal::defaultErrorLevel() const; static RooNumGenConfig*RooAbsPdf::defaultGeneratorConfig(); static RooNumIntConfig*RooAbsReal::defaultIntegratorConfig(); virtual Int_tRooAbsArg::defaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooPrintable::defaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Bool_tRooAbsArg::dependentOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependentOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependsOn(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOn(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0) const; RooDerivative*RooAbsReal::derivative(RooRealVar& obs, Int_t order = 1, Double_t eps = 0.",MatchSource.WIKI,root/html534/Roo2DKeysPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DKeysPdf.html
https://root.cern/root/html534/Roo2DKeysPdf.html:8885,Integrability,depend,dependsOn,8885,"aramsOfInterest); virtual RooAbsPdf*RooAbsPdf::createProjection(const RooArgSet& iset); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooArgSet& nset = RooArgSet()); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); RooAbsReal*RooAbsPdf::createScanCdf(const RooArgSet& iset, const RooArgSet& nset, Int_t numScanBins, Int_t intOrder); RooAbsReal*RooAbsReal::createScanRI(const RooArgSet& iset, const RooArgSet& nset, Int_t numScanBins, Int_t intOrder); virtual Double_tRooAbsReal::defaultErrorLevel() const; static RooNumGenConfig*RooAbsPdf::defaultGeneratorConfig(); static RooNumIntConfig*RooAbsReal::defaultIntegratorConfig(); virtual Int_tRooAbsArg::defaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooPrintable::defaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Bool_tRooAbsArg::dependentOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependentOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependsOn(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOn(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0) const; RooDerivative*RooAbsReal::derivative(RooRealVar& obs, Int_t order = 1, Double_t eps = 0.",MatchSource.WIKI,root/html534/Roo2DKeysPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DKeysPdf.html
https://root.cern/root/html534/Roo2DKeysPdf.html:9014,Integrability,depend,dependsOn,9014,"aramsOfInterest); virtual RooAbsPdf*RooAbsPdf::createProjection(const RooArgSet& iset); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooArgSet& nset = RooArgSet()); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); RooAbsReal*RooAbsPdf::createScanCdf(const RooArgSet& iset, const RooArgSet& nset, Int_t numScanBins, Int_t intOrder); RooAbsReal*RooAbsReal::createScanRI(const RooArgSet& iset, const RooArgSet& nset, Int_t numScanBins, Int_t intOrder); virtual Double_tRooAbsReal::defaultErrorLevel() const; static RooNumGenConfig*RooAbsPdf::defaultGeneratorConfig(); static RooNumIntConfig*RooAbsReal::defaultIntegratorConfig(); virtual Int_tRooAbsArg::defaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooPrintable::defaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Bool_tRooAbsArg::dependentOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependentOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependsOn(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOn(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0) const; RooDerivative*RooAbsReal::derivative(RooRealVar& obs, Int_t order = 1, Double_t eps = 0.",MatchSource.WIKI,root/html534/Roo2DKeysPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DKeysPdf.html
https://root.cern/root/html534/Roo2DKeysPdf.html:9132,Integrability,depend,dependsOnValue,9132,"aramsOfInterest); virtual RooAbsPdf*RooAbsPdf::createProjection(const RooArgSet& iset); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooArgSet& nset = RooArgSet()); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); RooAbsReal*RooAbsPdf::createScanCdf(const RooArgSet& iset, const RooArgSet& nset, Int_t numScanBins, Int_t intOrder); RooAbsReal*RooAbsReal::createScanRI(const RooArgSet& iset, const RooArgSet& nset, Int_t numScanBins, Int_t intOrder); virtual Double_tRooAbsReal::defaultErrorLevel() const; static RooNumGenConfig*RooAbsPdf::defaultGeneratorConfig(); static RooNumIntConfig*RooAbsReal::defaultIntegratorConfig(); virtual Int_tRooAbsArg::defaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooPrintable::defaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Bool_tRooAbsArg::dependentOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependentOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependsOn(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOn(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0) const; RooDerivative*RooAbsReal::derivative(RooRealVar& obs, Int_t order = 1, Double_t eps = 0.",MatchSource.WIKI,root/html534/Roo2DKeysPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DKeysPdf.html
https://root.cern/root/html534/Roo2DKeysPdf.html:9239,Integrability,depend,dependsOnValue,9239,"aramsOfInterest); virtual RooAbsPdf*RooAbsPdf::createProjection(const RooArgSet& iset); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooArgSet& nset = RooArgSet()); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); RooAbsReal*RooAbsPdf::createScanCdf(const RooArgSet& iset, const RooArgSet& nset, Int_t numScanBins, Int_t intOrder); RooAbsReal*RooAbsReal::createScanRI(const RooArgSet& iset, const RooArgSet& nset, Int_t numScanBins, Int_t intOrder); virtual Double_tRooAbsReal::defaultErrorLevel() const; static RooNumGenConfig*RooAbsPdf::defaultGeneratorConfig(); static RooNumIntConfig*RooAbsReal::defaultIntegratorConfig(); virtual Int_tRooAbsArg::defaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooPrintable::defaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Bool_tRooAbsArg::dependentOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependentOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependsOn(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOn(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0) const; RooDerivative*RooAbsReal::derivative(RooRealVar& obs, Int_t order = 1, Double_t eps = 0.",MatchSource.WIKI,root/html534/Roo2DKeysPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DKeysPdf.html
https://root.cern/root/html534/Roo2DKeysPdf.html:21399,Integrability,message,message,21399,"sFundamental() const; virtual Bool_tRooAbsReal::isIdentical(const RooAbsArg& other, Bool_t assumeSameType = kFALSE); virtual Bool_tRooAbsArg::isLValue() const; virtual Bool_tRooAbsReal::isOffsetting() const; Bool_tTObject::IsOnHeap() const; Bool_tRooAbsArg::isShapeDirty() const; Bool_tRooAbsArg::isShapeServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isShapeServer(const char* name) const; virtual Bool_tRooAbsArg::IsSortable() const; Bool_tRooAbsArg::isValueDirty() const; Bool_tRooAbsArg::isValueDirtyAndClear() const; Bool_tRooAbsArg::isValueOrShapeDirtyAndClear() const; Bool_tRooAbsArg::isValueServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isValueServer(const char* name) const; Bool_tTObject::IsZombie() const; voidRooAbsArg::leafNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t recurseNonDerived = kFALSE) const; Int_tloadDataSet(RooDataSet& data, TString options); Bool_tRooAbsArg::localNoDirtyInhibit() const; voidRooAbsReal::logEvalError(const char* message, const char* serverValueString = 0) const; static voidRooAbsReal::logEvalError(const RooAbsReal* originator, const char* origName, const char* message, const char* serverValueString = 0); virtual voidTNamed::ls(Option_t* option = """") const; virtual Double_tRooAbsReal::maxVal(Int_t code) const; voidTObject::MayNotUse(const char* method) const; RooAbsMoment*RooAbsReal::mean(RooRealVar& obs); RooAbsMoment*RooAbsReal::mean(RooRealVar& obs, const RooArgSet& nset); virtual Int_tRooAbsReal::minTrialSamples(const RooArgSet&) const; RooAbsMoment*RooAbsReal::moment(RooRealVar& obs, Int_t order, Bool_t central, Bool_t takeRoot); RooAbsMoment*RooAbsReal::moment(RooRealVar& obs, const RooArgSet& normObs, Int_t order, Bool_t central, Bool_t takeRoot, Bool_t intNormObs); Bool_tRooAbsPdf::mustBeExtended() const; static voidRooPrintable::nameFieldLength(Int_t newLen); const TNamed*RooAbsArg::namePtr() const; const char*RooAbsPdf::normRange() const; virtual Bool_tTObject::Notify(); Int_tRooAbsArg::n",MatchSource.WIKI,root/html534/Roo2DKeysPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DKeysPdf.html
https://root.cern/root/html534/Roo2DKeysPdf.html:21550,Integrability,message,message,21550,") const; virtual Bool_tRooAbsReal::isOffsetting() const; Bool_tTObject::IsOnHeap() const; Bool_tRooAbsArg::isShapeDirty() const; Bool_tRooAbsArg::isShapeServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isShapeServer(const char* name) const; virtual Bool_tRooAbsArg::IsSortable() const; Bool_tRooAbsArg::isValueDirty() const; Bool_tRooAbsArg::isValueDirtyAndClear() const; Bool_tRooAbsArg::isValueOrShapeDirtyAndClear() const; Bool_tRooAbsArg::isValueServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isValueServer(const char* name) const; Bool_tTObject::IsZombie() const; voidRooAbsArg::leafNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t recurseNonDerived = kFALSE) const; Int_tloadDataSet(RooDataSet& data, TString options); Bool_tRooAbsArg::localNoDirtyInhibit() const; voidRooAbsReal::logEvalError(const char* message, const char* serverValueString = 0) const; static voidRooAbsReal::logEvalError(const RooAbsReal* originator, const char* origName, const char* message, const char* serverValueString = 0); virtual voidTNamed::ls(Option_t* option = """") const; virtual Double_tRooAbsReal::maxVal(Int_t code) const; voidTObject::MayNotUse(const char* method) const; RooAbsMoment*RooAbsReal::mean(RooRealVar& obs); RooAbsMoment*RooAbsReal::mean(RooRealVar& obs, const RooArgSet& nset); virtual Int_tRooAbsReal::minTrialSamples(const RooArgSet&) const; RooAbsMoment*RooAbsReal::moment(RooRealVar& obs, Int_t order, Bool_t central, Bool_t takeRoot); RooAbsMoment*RooAbsReal::moment(RooRealVar& obs, const RooArgSet& normObs, Int_t order, Bool_t central, Bool_t takeRoot, Bool_t intNormObs); Bool_tRooAbsPdf::mustBeExtended() const; static voidRooPrintable::nameFieldLength(Int_t newLen); const TNamed*RooAbsArg::namePtr() const; const char*RooAbsPdf::normRange() const; virtual Bool_tTObject::Notify(); Int_tRooAbsArg::numCaches() const; static Int_tRooAbsReal::numEvalErrorItems(); static Int_tRooAbsReal::numEvalErrors(); Bool_tRooAbsArg::observableOverlaps(const RooAb",MatchSource.WIKI,root/html534/Roo2DKeysPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DKeysPdf.html
https://root.cern/root/html534/Roo2DKeysPdf.html:41161,Integrability,integrat,integration,41161,"td::string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); Bool_tRooAbsReal::_boolValue! Transient cache for bool values from tree branches ; UChar_tRooAbsReal::_byteValue! Transient cache for byte values from tree branches ; static Bool_tRooAbsReal::_cacheCheckIf true, always validate contents of clean which outcome of evaluate(); deque<RooAbsCache*>RooAbsArg::_cacheListlist of caches; RooRefCountListRooAbsArg::_clientListlist of client objects; RooRefCountListRooAbsArg::_clientListShapesubset of clients that requested shape dirty flag propagation; RooRefCountListRooAbsArg::_clientListValuesubset of clients that requested value dirty flag propagation; TIterator*RooAbsArg::_clientShapeIter! Iterator over _clientListShape ; TIterator*RooAbsArg::_clientValueIter! Iterator over _clientListValue ; Bool_tRooAbsArg::_deleteWatch! Delete watch flag ; RooExpensiveObjectCache*RooAbsArg::_eocachePointer to global cache manager for any expensive components created by this object; Int_tRooAbsPdf::_errorCountNumber of errors remaining to print; static Bool_tRooAbsPdf::_evalError; Bool_tRooAbsArg::_fastAllow fast access mode in getVal() and proxies; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsReal::_hideOffsetOffset hiding flag; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; Bool_tRooAbsArg::_isConstant! Cached isConstant status ; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist.",MatchSource.WIKI,root/html534/Roo2DKeysPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DKeysPdf.html
https://root.cern/root/html534/Roo2DKeysPdf.html:43288,Integrability,integrat,integrator,43288," by _normMgr); RooObjCacheManagerRooAbsPdf::_normMgrThe cache manager; TStringRooAbsPdf::_normRangeNormalization range; static TStringRooAbsPdf::_normRangeOverride; RooArgSet*RooAbsPdf::_normSet! Normalization set with for above integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title.",MatchSource.WIKI,root/html534/Roo2DKeysPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DKeysPdf.html
https://root.cern/root/html534/Roo2DKeysPdf.html:10599,Modifiability,extend,extendedTerm,10599,"bject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidRooAbsReal::enableOffsetting(Bool_t); virtual voidTObject::Error(const char* method, const char* msgfmt) const; static Bool_tRooAbsPdf::evalError(); static RooAbsReal::EvalErrorIterRooAbsReal::evalErrorIter(); static RooAbsReal::ErrorLoggingModeRooAbsReal::evalErrorLoggingMode(); virtual Double_tevaluate() const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual Double_tRooAbsPdf::expectedEvents(const RooArgSet* nset) const; virtual Double_tRooAbsPdf::expectedEvents(const RooArgSet& nset) const; RooExpensiveObjectCache&RooAbsArg::expensiveObjectCache() const; virtual Double_tRooAbsPdf::extendedTerm(Double_t observedEvents, const RooArgSet* nset = 0) const; virtual RooAbsPdf::ExtendModeRooAbsPdf::extendMode() const; virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); RooDataHist*RooAbsReal::fillDataHist(RooDataHist* hist, const RooArgSet* nset, Double_t scaleFactor, Bool_t correctForBinVolume = kFALSE, Bool_t showProgress = kFALSE) const; TH1*RooAbsReal::fillHistogram(TH1* hist, const RooArgList& plotVars, Double_t scaleFactor = 1, const RooArgSet* projectedVars = 0, Bool_t scaling = kTRUE, const RooArgSet* condObs = 0, Bool_t setError = kTRUE) const; Bool_tRooAbsArg::findConstantNodes(const RooArgSet& observables, RooArgSet& cacheList); Bool_tRooAbsArg::findConstantNodes(const RooArgSet& observables, RooArgSet& cacheList, RooLinkedList& processedNodes); RooAbsArg*RooAbsArg::findNewServer(const RooAbsCollection& newSet, Bool_t nameChange) const; virtual TObject*TObject::FindObject(const char* name) const; v",MatchSource.WIKI,root/html534/Roo2DKeysPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DKeysPdf.html
https://root.cern/root/html534/Roo2DKeysPdf.html:10690,Modifiability,Extend,ExtendModeRooAbsPdf,10690,"t*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidRooAbsReal::enableOffsetting(Bool_t); virtual voidTObject::Error(const char* method, const char* msgfmt) const; static Bool_tRooAbsPdf::evalError(); static RooAbsReal::EvalErrorIterRooAbsReal::evalErrorIter(); static RooAbsReal::ErrorLoggingModeRooAbsReal::evalErrorLoggingMode(); virtual Double_tevaluate() const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual Double_tRooAbsPdf::expectedEvents(const RooArgSet* nset) const; virtual Double_tRooAbsPdf::expectedEvents(const RooArgSet& nset) const; RooExpensiveObjectCache&RooAbsArg::expensiveObjectCache() const; virtual Double_tRooAbsPdf::extendedTerm(Double_t observedEvents, const RooArgSet* nset = 0) const; virtual RooAbsPdf::ExtendModeRooAbsPdf::extendMode() const; virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); RooDataHist*RooAbsReal::fillDataHist(RooDataHist* hist, const RooArgSet* nset, Double_t scaleFactor, Bool_t correctForBinVolume = kFALSE, Bool_t showProgress = kFALSE) const; TH1*RooAbsReal::fillHistogram(TH1* hist, const RooArgList& plotVars, Double_t scaleFactor = 1, const RooArgSet* projectedVars = 0, Bool_t scaling = kTRUE, const RooArgSet* condObs = 0, Bool_t setError = kTRUE) const; Bool_tRooAbsArg::findConstantNodes(const RooArgSet& observables, RooArgSet& cacheList); Bool_tRooAbsArg::findConstantNodes(const RooArgSet& observables, RooArgSet& cacheList, RooLinkedList& processedNodes); RooAbsArg*RooAbsArg::findNewServer(const RooAbsCollection& newSet, Bool_t nameChange) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Double_tRooAbsReal::findRoot(Roo",MatchSource.WIKI,root/html534/Roo2DKeysPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DKeysPdf.html
https://root.cern/root/html534/Roo2DKeysPdf.html:10711,Modifiability,extend,extendMode,10711,"lone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidRooAbsReal::enableOffsetting(Bool_t); virtual voidTObject::Error(const char* method, const char* msgfmt) const; static Bool_tRooAbsPdf::evalError(); static RooAbsReal::EvalErrorIterRooAbsReal::evalErrorIter(); static RooAbsReal::ErrorLoggingModeRooAbsReal::evalErrorLoggingMode(); virtual Double_tevaluate() const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual Double_tRooAbsPdf::expectedEvents(const RooArgSet* nset) const; virtual Double_tRooAbsPdf::expectedEvents(const RooArgSet& nset) const; RooExpensiveObjectCache&RooAbsArg::expensiveObjectCache() const; virtual Double_tRooAbsPdf::extendedTerm(Double_t observedEvents, const RooArgSet* nset = 0) const; virtual RooAbsPdf::ExtendModeRooAbsPdf::extendMode() const; virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); RooDataHist*RooAbsReal::fillDataHist(RooDataHist* hist, const RooArgSet* nset, Double_t scaleFactor, Bool_t correctForBinVolume = kFALSE, Bool_t showProgress = kFALSE) const; TH1*RooAbsReal::fillHistogram(TH1* hist, const RooArgList& plotVars, Double_t scaleFactor = 1, const RooArgSet* projectedVars = 0, Bool_t scaling = kTRUE, const RooArgSet* condObs = 0, Bool_t setError = kTRUE) const; Bool_tRooAbsArg::findConstantNodes(const RooArgSet& observables, RooArgSet& cacheList); Bool_tRooAbsArg::findConstantNodes(const RooArgSet& observables, RooArgSet& cacheList, RooLinkedList& processedNodes); RooAbsArg*RooAbsArg::findNewServer(const RooAbsCollection& newSet, Bool_t nameChange) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Double_tRooAbsReal::findRoot(RooRealVar& x, Doubl",MatchSource.WIKI,root/html534/Roo2DKeysPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DKeysPdf.html
https://root.cern/root/html534/Roo2DKeysPdf.html:14221,Modifiability,extend,extended,14221,"ec&) const; RooDataSet*RooAbsPdf::generate(const RooArgSet& whatVars, const RooDataSet& prototype, Int_t nEvents = 0, Bool_t verbose = kFALSE, Bool_t randProtoOrder = kFALSE, Bool_t resampleProto = kFALSE) const; RooDataSet*RooAbsPdf::generate(const RooArgSet& whatVars, Int_t nEvents, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none()); RooDataSet*RooAbsPdf::generate(const RooArgSet& whatVars, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()); RooDataSet*RooAbsPdf::generate(const RooArgSet& whatVars, Double_t nEvents = 0, Bool_t verbose = kFALSE, Bool_t autoBinned = kTRUE, const char* binnedTag = """", Bool_t expectedData = kFALSE, Bool_t extended = kFALSE) const; virtual RooDataHist*RooAbsPdf::generateBinned(const RooArgSet& whatVars, Double_t nEvents, Bool_t expectedData = kFALSE, Bool_t extended = kFALSE) const; virtual RooDataHist*RooAbsPdf::generateBinned(const RooArgSet& whatVars, Double_t nEvents, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none()); virtual RooDataHist*RooAbsPdf::generateBinned(const RooArgSet& whatVars, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()); virtual voidRooAbsPdf::generateEvent(Int_t code); virtual RooDataSet*RooAbsPdf::generateSimGlobal(const RooArgSet& whatVars, Int_t nEvents); virtual RooArgSet*RooAbsPdf::getAllConstraints(const RooArgSet& o",MatchSource.WIKI,root/html534/Roo2DKeysPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DKeysPdf.html
https://root.cern/root/html534/Roo2DKeysPdf.html:14375,Modifiability,extend,extended,14375,"ProtoOrder = kFALSE, Bool_t resampleProto = kFALSE) const; RooDataSet*RooAbsPdf::generate(const RooArgSet& whatVars, Int_t nEvents, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none()); RooDataSet*RooAbsPdf::generate(const RooArgSet& whatVars, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()); RooDataSet*RooAbsPdf::generate(const RooArgSet& whatVars, Double_t nEvents = 0, Bool_t verbose = kFALSE, Bool_t autoBinned = kTRUE, const char* binnedTag = """", Bool_t expectedData = kFALSE, Bool_t extended = kFALSE) const; virtual RooDataHist*RooAbsPdf::generateBinned(const RooArgSet& whatVars, Double_t nEvents, Bool_t expectedData = kFALSE, Bool_t extended = kFALSE) const; virtual RooDataHist*RooAbsPdf::generateBinned(const RooArgSet& whatVars, Double_t nEvents, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none()); virtual RooDataHist*RooAbsPdf::generateBinned(const RooArgSet& whatVars, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()); virtual voidRooAbsPdf::generateEvent(Int_t code); virtual RooDataSet*RooAbsPdf::generateSimGlobal(const RooArgSet& whatVars, Int_t nEvents); virtual RooArgSet*RooAbsPdf::getAllConstraints(const RooArgSet& observables, RooArgSet& constrainedParams, Bool_t stripDisconnected = kTRUE) const; virtual Int_tRooAbsReal::getAnalyticalIntegral(RooArgSet& allVars, RooA",MatchSource.WIKI,root/html534/Roo2DKeysPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DKeysPdf.html
https://root.cern/root/html534/Roo2DKeysPdf.html:19594,Modifiability,Inherit,InheritsFrom,19594,"t RooArgSet& set) const; virtual Double_tRooAbsPdf::getValV(const RooArgSet* set = 0) const; RooArgSet*RooAbsArg::getVariables(Bool_t stripDisconnected = kTRUE) const; voidRooAbsArg::graphVizTree(const char* fileName, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); voidRooAbsArg::graphVizTree(ostream& os, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tRooAbsArg::hasClients() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tRooAbsArg::hasRange(const char*) const; static Bool_tRooAbsReal::hideOffset(); RooGenFunction*RooAbsReal::iGenFunction(RooRealVar& x, const RooArgSet& nset = RooArgSet()); RooMultiGenFunction*RooAbsReal::iGenFunction(const RooArgSet& observables, const RooArgSet& nset = RooArgSet()); virtual Bool_tRooAbsArg::importWorkspaceHook(RooWorkspace&); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidRooAbsPdf::initGenerator(Int_t code); virtual Bool_tRooAbsArg::inRange(const char*) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual voidRooAbsArg::ioStreamerPass2(); static voidRooAbsArg::ioStreamerPass2Finalize(); virtual TClass*IsA() const; virtual Bool_tRooAbsReal::isBinnedDistribution(const RooArgSet&) const; Bool_tRooAbsArg::isCloneOf(const RooAbsArg& other) const; Bool_tRooAbsArg::isConstant() const; virtual Bool_tRooAbsArg::isDerived() const; virtual Bool_tRooAbsPdf::isDirectGenSafe(const RooAbsArg& arg) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tRooAbsArg::isFundamental() const; virtual Bool_tRooAbsReal::isIdentical(const RooAbsArg& other, Bool_t assumeSameType = kFALSE); virtual Bool_tRooAbsArg::isLValue() const; virtual Bool_tRooAbsReal::isOffsetting",MatchSource.WIKI,root/html534/Roo2DKeysPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DKeysPdf.html
https://root.cern/root/html534/Roo2DKeysPdf.html:19660,Modifiability,Inherit,InheritsFrom,19660,"RooArgSet* set = 0) const; RooArgSet*RooAbsArg::getVariables(Bool_t stripDisconnected = kTRUE) const; voidRooAbsArg::graphVizTree(const char* fileName, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); voidRooAbsArg::graphVizTree(ostream& os, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tRooAbsArg::hasClients() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tRooAbsArg::hasRange(const char*) const; static Bool_tRooAbsReal::hideOffset(); RooGenFunction*RooAbsReal::iGenFunction(RooRealVar& x, const RooArgSet& nset = RooArgSet()); RooMultiGenFunction*RooAbsReal::iGenFunction(const RooArgSet& observables, const RooArgSet& nset = RooArgSet()); virtual Bool_tRooAbsArg::importWorkspaceHook(RooWorkspace&); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidRooAbsPdf::initGenerator(Int_t code); virtual Bool_tRooAbsArg::inRange(const char*) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual voidRooAbsArg::ioStreamerPass2(); static voidRooAbsArg::ioStreamerPass2Finalize(); virtual TClass*IsA() const; virtual Bool_tRooAbsReal::isBinnedDistribution(const RooArgSet&) const; Bool_tRooAbsArg::isCloneOf(const RooAbsArg& other) const; Bool_tRooAbsArg::isConstant() const; virtual Bool_tRooAbsArg::isDerived() const; virtual Bool_tRooAbsPdf::isDirectGenSafe(const RooAbsArg& arg) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tRooAbsArg::isFundamental() const; virtual Bool_tRooAbsReal::isIdentical(const RooAbsArg& other, Bool_t assumeSameType = kFALSE); virtual Bool_tRooAbsArg::isLValue() const; virtual Bool_tRooAbsReal::isOffsetting() const; Bool_tTObject::IsOnHeap() const; Bool_tRooAbsArg::isShap",MatchSource.WIKI,root/html534/Roo2DKeysPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DKeysPdf.html
https://root.cern/root/html534/Roo2DKeysPdf.html:29349,Modifiability,config,config,29349,"imitive(ostream& out, Option_t* option = """"); virtual Bool_tRooAbsPdf::selfNormalized() const; TIterator*RooAbsArg::serverIterator() const; RooFIterRooAbsArg::serverMIterator() const; virtual voidRooAbsArg::serverNameChangeHook(const RooAbsArg*, const RooAbsArg*); voidRooAbsArg::setAttribute(const Text_t* name, Bool_t value = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidRooAbsArg::setCacheAndTrackHints(RooArgSet&); static voidRooAbsReal::setCacheCheck(Bool_t flag); virtual Bool_tRooAbsReal::setData(RooAbsData&, Bool_t = kTRUE); static voidRooAbsArg::setDirtyInhibit(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidRooAbsReal::setEvalErrorLoggingMode(RooAbsReal::ErrorLoggingMode m); virtual voidRooAbsArg::setExpensiveObjectCache(RooExpensiveObjectCache& cache); voidRooAbsPdf::setGeneratorConfig(); voidRooAbsPdf::setGeneratorConfig(const RooNumGenConfig& config); static voidRooAbsReal::setHideOffset(Bool_t flag); voidRooAbsReal::setIntegratorConfig(); voidRooAbsReal::setIntegratorConfig(const RooNumIntConfig& config); voidRooAbsArg::setLocalNoDirtyInhibit(Bool_t flag) const; virtual voidRooAbsArg::SetName(const char* name); virtual voidRooAbsArg::SetNameTitle(const char* name, const char* title); voidRooAbsPdf::setNormRange(const char* rangeName); voidRooAbsPdf::setNormRangeOverride(const char* rangeName); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsArg::setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); voidsetOptions(TString options); voidRooAbsReal::setParameterizeIntegral(const RooArgSet& paramVars); voidRooAbsReal::setPlotLabel(const char* label); voidRooAbsArg::setProhibitServerRedirect(Bool_t flag); voidRooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsPdf::setTraceCounter(In",MatchSource.WIKI,root/html534/Roo2DKeysPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DKeysPdf.html
https://root.cern/root/html534/Roo2DKeysPdf.html:29507,Modifiability,config,config,29507,":serverMIterator() const; virtual voidRooAbsArg::serverNameChangeHook(const RooAbsArg*, const RooAbsArg*); voidRooAbsArg::setAttribute(const Text_t* name, Bool_t value = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidRooAbsArg::setCacheAndTrackHints(RooArgSet&); static voidRooAbsReal::setCacheCheck(Bool_t flag); virtual Bool_tRooAbsReal::setData(RooAbsData&, Bool_t = kTRUE); static voidRooAbsArg::setDirtyInhibit(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidRooAbsReal::setEvalErrorLoggingMode(RooAbsReal::ErrorLoggingMode m); virtual voidRooAbsArg::setExpensiveObjectCache(RooExpensiveObjectCache& cache); voidRooAbsPdf::setGeneratorConfig(); voidRooAbsPdf::setGeneratorConfig(const RooNumGenConfig& config); static voidRooAbsReal::setHideOffset(Bool_t flag); voidRooAbsReal::setIntegratorConfig(); voidRooAbsReal::setIntegratorConfig(const RooNumIntConfig& config); voidRooAbsArg::setLocalNoDirtyInhibit(Bool_t flag) const; virtual voidRooAbsArg::SetName(const char* name); virtual voidRooAbsArg::SetNameTitle(const char* name, const char* title); voidRooAbsPdf::setNormRange(const char* rangeName); voidRooAbsPdf::setNormRangeOverride(const char* rangeName); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsArg::setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); voidsetOptions(TString options); voidRooAbsReal::setParameterizeIntegral(const RooArgSet& paramVars); voidRooAbsReal::setPlotLabel(const char* label); voidRooAbsArg::setProhibitServerRedirect(Bool_t flag); voidRooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsPdf::setTraceCounter(Int_t value, Bool_t allNodes = kFALSE); voidRooAbsArg::setTransientAttribute(const Text_t* name, Bool_t value = kTRUE); virtual voidTObject::SetUniqueID(UInt_t ",MatchSource.WIKI,root/html534/Roo2DKeysPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DKeysPdf.html
https://root.cern/root/html534/Roo2DKeysPdf.html:34373,Modifiability,extend,extended,34373,"ooAbsReal& fcn, RooLinkedList& cmdList); TStringRooAbsArg::cleanBranchName() const; virtual voidRooAbsReal::copyCache(const RooAbsArg* source, Bool_t valueOnly = kFALSE, Bool_t setValDirty = kTRUE); RooAbsReal*RooAbsReal::createIntObj(const RooArgSet& iset, const RooArgSet* nset, const RooNumIntConfig* cfg, const char* rangeName) const; virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; virtual voidRooAbsReal::fillTreeBranch(TTree& t); voidRooAbsReal::findInnerMostIntegration(const RooArgSet& allObs, RooArgSet& innerObs, const char* rangeName) const; virtual RooAbsGenContext*RooAbsPdf::genContext(const RooArgSet& vars, const RooDataSet* prototype = 0, const RooArgSet* auxProto = 0, Bool_t verbose = kFALSE) const; RooDataSet*RooAbsPdf::generate(RooAbsGenContext& context, const RooArgSet& whatVars, const RooDataSet* prototype, Double_t nEvents, Bool_t verbose, Bool_t randProtoOrder, Bool_t resampleProto, Bool_t skipInit = kFALSE, Bool_t extended = kFALSE) const; virtual voidRooAbsArg::getObservablesHook(const RooArgSet*, RooArgSet*) const; virtual voidRooAbsArg::getParametersHook(const RooArgSet*, RooArgSet*, Bool_t) const; RooAbsProxy*RooAbsArg::getProxy(Int_t index) const; static voidRooAbsReal::globalSelectComp(Bool_t flag); voidRooAbsArg::graphVizAddConnections(set<std::pair<RooAbsArg*,RooAbsArg*> >&); Bool_tRooAbsArg::inhibitDirty() const; TStringRooAbsReal::integralNameSuffix(const RooArgSet& iset, const RooArgSet* nset = 0, const char* rangeName = 0, Bool_t omitEmpty = kFALSE) const; Bool_tRooAbsReal::isSelectedComp() const; virtual Bool_tRooAbsReal::isValid() const; virtual Bool_tRooAbsReal::isValidReal(Double_t value, Bool_t printError = kFALSE) const; voidRooAbsReal::makeProjectionSet(const RooAbsArg* plotVar, const RooArgSet* allVars, RooArgSet& projectedVars, Bool_t silent) const; voidTObject::MakeZombie(); Bool_tRooAbsReal::matchArgs(const RooArgSet& allDeps, RooArgSet& numDeps, const RooArgProxy& a) const; Bo",MatchSource.WIKI,root/html534/Roo2DKeysPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DKeysPdf.html
https://root.cern/root/html534/Roo2DKeysPdf.html:38549,Modifiability,Extend,ExtendMode,38549,"sterProxy(RooArgProxy& proxy); voidRooAbsArg::unRegisterProxy(RooSetProxy& proxy); voidRooAbsArg::unRegisterProxy(RooListProxy& proxy). private:. Double_tevaluateFull(Double_t thisX, Double_t thisY) const; Double_tg(Double_t var1, Double_t* _var1, Double_t sigma1, Double_t var2, Double_t* _var2, Double_t sigma2) const; Double_thighBoundaryCorrection(Double_t thisVar, Double_t thisH, Double_t high, Double_t tVar) const; Double_tlowBoundaryCorrection(Double_t thisVar, Double_t thisH, Double_t low, Double_t tVar) const. Data Members; public:. enum RooAbsPdf::ExtendMode { CanNotBeExtended; CanBeExtended; MustBeExtended; };; enum RooAbsReal::ScaleType { Raw; Relative; NumEvent; RelativeExpected; };; enum RooAbsReal::ErrorLoggingMode { PrintErrors; CollectErrors; CountErrors; Ignore; };; enum RooAbsArg::ConstOpCode { Activate; DeActivate; ConfigChange; ValueChange; };; enum RooAbsArg::CacheMode { Always; NotAdvised; Never; };; enum RooAbsArg::OperMode { Auto; AClean; ADirty; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };; enum RooPrintable::ContentsOption { kName; kClassName; kValue; kArgs; kExtras; kAddress; kTitle; kCollectionHeader; };; enum RooPrintable::StyleOption { kInline; kSingleLine; kStandard; kVerbose; kTreeStructure; };. public:. static map<RooAbsArg*,TRefArray*>RooAbsArg::_ioEvoListtemporary holding list for proxies needed in schema evolution ; static stack<RooAbsArg*>RooAbsArg::_ioReadStackreading stack ; static const UInt_tRooAbsArg::fnv1a32start; static const ULong64_tRooAbsArg::fnv1a64start; RooRealProxyx; RooRealProxyy. protected:. set<std::string>RooAbsArg::_boolAttribBoolean attributes; set<std::string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); Bool_tRooAbsReal::_boolValue! Transient cache for bool values f",MatchSource.WIKI,root/html534/Roo2DKeysPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DKeysPdf.html
https://root.cern/root/html534/Roo2DKeysPdf.html:38832,Modifiability,Config,ConfigChange,38832,"sterProxy(RooArgProxy& proxy); voidRooAbsArg::unRegisterProxy(RooSetProxy& proxy); voidRooAbsArg::unRegisterProxy(RooListProxy& proxy). private:. Double_tevaluateFull(Double_t thisX, Double_t thisY) const; Double_tg(Double_t var1, Double_t* _var1, Double_t sigma1, Double_t var2, Double_t* _var2, Double_t sigma2) const; Double_thighBoundaryCorrection(Double_t thisVar, Double_t thisH, Double_t high, Double_t tVar) const; Double_tlowBoundaryCorrection(Double_t thisVar, Double_t thisH, Double_t low, Double_t tVar) const. Data Members; public:. enum RooAbsPdf::ExtendMode { CanNotBeExtended; CanBeExtended; MustBeExtended; };; enum RooAbsReal::ScaleType { Raw; Relative; NumEvent; RelativeExpected; };; enum RooAbsReal::ErrorLoggingMode { PrintErrors; CollectErrors; CountErrors; Ignore; };; enum RooAbsArg::ConstOpCode { Activate; DeActivate; ConfigChange; ValueChange; };; enum RooAbsArg::CacheMode { Always; NotAdvised; Never; };; enum RooAbsArg::OperMode { Auto; AClean; ADirty; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };; enum RooPrintable::ContentsOption { kName; kClassName; kValue; kArgs; kExtras; kAddress; kTitle; kCollectionHeader; };; enum RooPrintable::StyleOption { kInline; kSingleLine; kStandard; kVerbose; kTreeStructure; };. public:. static map<RooAbsArg*,TRefArray*>RooAbsArg::_ioEvoListtemporary holding list for proxies needed in schema evolution ; static stack<RooAbsArg*>RooAbsArg::_ioReadStackreading stack ; static const UInt_tRooAbsArg::fnv1a32start; static const ULong64_tRooAbsArg::fnv1a64start; RooRealProxyx; RooRealProxyy. protected:. set<std::string>RooAbsArg::_boolAttribBoolean attributes; set<std::string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); Bool_tRooAbsReal::_boolValue! Transient cache for bool values f",MatchSource.WIKI,root/html534/Roo2DKeysPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DKeysPdf.html
https://root.cern/root/html534/Roo2DKeysPdf.html:43191,Modifiability,config,configuration,43191," by _normMgr); RooObjCacheManagerRooAbsPdf::_normMgrThe cache manager; TStringRooAbsPdf::_normRangeNormalization range; static TStringRooAbsPdf::_normRangeOverride; RooArgSet*RooAbsPdf::_normSet! Normalization set with for above integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title.",MatchSource.WIKI,root/html534/Roo2DKeysPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DKeysPdf.html
https://root.cern/root/html534/Roo2DKeysPdf.html:43299,Modifiability,config,configuration,43299," by _normMgr); RooObjCacheManagerRooAbsPdf::_normMgrThe cache manager; TStringRooAbsPdf::_normRangeNormalization range; static TStringRooAbsPdf::_normRangeOverride; RooArgSet*RooAbsPdf::_normSet! Normalization set with for above integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title.",MatchSource.WIKI,root/html534/Roo2DKeysPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DKeysPdf.html
https://root.cern/root/html534/Roo2DKeysPdf.html:44670,Modifiability,Inherit,Inheritance,44670," current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. Double_t_2pi= M_PI*2; Int_t_BandWidthType; Int_t_MirrorAtBoundary; Int_t_debug; Double_t_hix; Double_t_hiy; Double_t*_hx; Double_t*_hy; Double_t_lox; Double_t_loy; Double_t_ncoefficient of the kernel estimation sum; Double_t_n16pow(_nEvents, -1/6); Int_t_nEvents; Double_t_norm; Double_t_sqrt2pi; Int_t_verbosedebug; Int_t_vverbosedebug; Double_t_widthScaleFactorallow manipulation of the bandwidth by a scale factor; Double_t*_x; Double_t_xMeanthe (x,y) mean and sigma are properties of the data, not of the PDF; Double_t_xSigma; Double_t_xoffset; Double_t*_y; Double_t_yMean; Double_t_ySigma; Double_t_yoffset. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Roo2DKeysPdf(const char* name, const char* title, RooAbsReal& xx, RooAbsReal& yy, RooDataSet& data, TString options = ""a"", Double_t widthScaleFactor = 1.0). Roo2DKeysPdf(const Roo2DKeysPdf& other, const char* name = 0). ~Roo2DKeysPdf(). Int_t loadDataSet(RooDataSet& data, TString options). void setOptions(TString options). void getOptions(void). Int_t calculateBandWidth(Int_t kernel = -999). Double_t evaluate() const; use the cacheing intrinsic in RFC to bypass the grid and remove; the grid and extrapolation approximation in the kernel estimation method; implementation - cheers Wouter :). Double_t evaluateFull(Double_t thisX, Double_t thisY) const. Double_t highBoundaryCorrection(Double_t thisVar, Double_t thisH, Double_t high, Double_t tVar) const. Double_t lowBoundaryCorrection(Double_t thisVar, Double_t thisH, Double_t low, Double_t tVar) const. Double_t g(Double_t var1, Double_t* _var1, Double_t sigma1, Double_t var2, Double_t* _va",MatchSource.WIKI,root/html534/Roo2DKeysPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DKeysPdf.html
https://root.cern/root/html534/Roo2DKeysPdf.html:44683,Modifiability,Inherit,Inherited,44683," current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. Double_t_2pi= M_PI*2; Int_t_BandWidthType; Int_t_MirrorAtBoundary; Int_t_debug; Double_t_hix; Double_t_hiy; Double_t*_hx; Double_t*_hy; Double_t_lox; Double_t_loy; Double_t_ncoefficient of the kernel estimation sum; Double_t_n16pow(_nEvents, -1/6); Int_t_nEvents; Double_t_norm; Double_t_sqrt2pi; Int_t_verbosedebug; Int_t_vverbosedebug; Double_t_widthScaleFactorallow manipulation of the bandwidth by a scale factor; Double_t*_x; Double_t_xMeanthe (x,y) mean and sigma are properties of the data, not of the PDF; Double_t_xSigma; Double_t_xoffset; Double_t*_y; Double_t_yMean; Double_t_ySigma; Double_t_yoffset. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Roo2DKeysPdf(const char* name, const char* title, RooAbsReal& xx, RooAbsReal& yy, RooDataSet& data, TString options = ""a"", Double_t widthScaleFactor = 1.0). Roo2DKeysPdf(const Roo2DKeysPdf& other, const char* name = 0). ~Roo2DKeysPdf(). Int_t loadDataSet(RooDataSet& data, TString options). void setOptions(TString options). void getOptions(void). Int_t calculateBandWidth(Int_t kernel = -999). Double_t evaluate() const; use the cacheing intrinsic in RFC to bypass the grid and remove; the grid and extrapolation approximation in the kernel estimation method; implementation - cheers Wouter :). Double_t evaluateFull(Double_t thisX, Double_t thisY) const. Double_t highBoundaryCorrection(Double_t thisVar, Double_t thisH, Double_t high, Double_t tVar) const. Double_t lowBoundaryCorrection(Double_t thisVar, Double_t thisH, Double_t low, Double_t tVar) const. Double_t g(Double_t var1, Double_t* _var1, Double_t sigma1, Double_t var2, Double_t* _va",MatchSource.WIKI,root/html534/Roo2DKeysPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DKeysPdf.html
https://root.cern/root/html534/Roo2DKeysPdf.html:2173,Performance,cache,cacheUniqueSuffix,2173,"Suffix() const; virtual Double_tRooAbsReal::analyticalIntegral(Int_t code, const char* rangeName = 0) const; virtual Double_tRooAbsPdf::analyticalIntegralWN(Int_t code, const RooArgSet* normSet, const char* rangeName = 0) const; virtual voidTObject::AppendPad(Option_t* option = """"); TF1*RooAbsReal::asTF(const RooArgList& obs, const RooArgList& pars = RooArgList(), const RooArgSet& nset = RooArgSet()) const; voidRooAbsArg::attachDataSet(const RooAbsData& set); voidRooAbsArg::attachDataStore(const RooAbsDataStore& set); const set<std::string>&RooAbsArg::attributes() const; virtual list<Double_t>*RooAbsReal::binBoundaries(RooAbsRealLValue&, Double_t, Double_t) const; RooAbsFunc*RooAbsReal::bindVars(const RooArgSet& vars, const RooArgSet* nset = 0, Bool_t clipInvalid = kFALSE) const; voidRooAbsArg::branchNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t recurseNonDerived = kFALSE) const; virtual voidTObject::Browse(TBrowser* b); virtual const char*RooAbsArg::cacheUniqueSuffix() const; Int_tcalculateBandWidth(Int_t kernel = -999); Bool_tRooAbsPdf::canBeExtended() const; virtual RooAbsArg::CacheModeRooAbsArg::canNodeBeCached() const; voidRooAbsArg::changeServer(RooAbsArg& server, Bool_t valueProp, Bool_t shapeProp); Bool_tRooAbsArg::checkDependents(const RooArgSet* nset) const; virtual Bool_tRooAbsArg::checkObservables(const RooArgSet* nset) const; virtual RooFitResult*RooAbsPdf::chi2FitTo(RooDataHist& data, const RooLinkedList& cmdList); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); static voidRooAbsPdf::clearEvalError(); static voidRooAbsReal::clearEvalErrorLog(); voidRooAbsArg::clearShapeDirty() const; voidRooAbsArg::clearValueAndShapeDirty() const; voidRooAbsArg::clearValueDirty() const; TIterator*RooAbsArg::clientIterator() const; virtual TObject*clone(const char* newname) const; virtual TObject*RooAbsArg::Clone(const char* newname = 0) const; virtual RooAbsArg*RooAbsArg::",MatchSource.WIKI,root/html534/Roo2DKeysPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DKeysPdf.html
https://root.cern/root/html534/Roo2DKeysPdf.html:2305,Performance,Cache,CacheModeRooAbsArg,2305,"df::analyticalIntegralWN(Int_t code, const RooArgSet* normSet, const char* rangeName = 0) const; virtual voidTObject::AppendPad(Option_t* option = """"); TF1*RooAbsReal::asTF(const RooArgList& obs, const RooArgList& pars = RooArgList(), const RooArgSet& nset = RooArgSet()) const; voidRooAbsArg::attachDataSet(const RooAbsData& set); voidRooAbsArg::attachDataStore(const RooAbsDataStore& set); const set<std::string>&RooAbsArg::attributes() const; virtual list<Double_t>*RooAbsReal::binBoundaries(RooAbsRealLValue&, Double_t, Double_t) const; RooAbsFunc*RooAbsReal::bindVars(const RooArgSet& vars, const RooArgSet* nset = 0, Bool_t clipInvalid = kFALSE) const; voidRooAbsArg::branchNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t recurseNonDerived = kFALSE) const; virtual voidTObject::Browse(TBrowser* b); virtual const char*RooAbsArg::cacheUniqueSuffix() const; Int_tcalculateBandWidth(Int_t kernel = -999); Bool_tRooAbsPdf::canBeExtended() const; virtual RooAbsArg::CacheModeRooAbsArg::canNodeBeCached() const; voidRooAbsArg::changeServer(RooAbsArg& server, Bool_t valueProp, Bool_t shapeProp); Bool_tRooAbsArg::checkDependents(const RooArgSet* nset) const; virtual Bool_tRooAbsArg::checkObservables(const RooArgSet* nset) const; virtual RooFitResult*RooAbsPdf::chi2FitTo(RooDataHist& data, const RooLinkedList& cmdList); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); static voidRooAbsPdf::clearEvalError(); static voidRooAbsReal::clearEvalErrorLog(); voidRooAbsArg::clearShapeDirty() const; voidRooAbsArg::clearValueAndShapeDirty() const; voidRooAbsArg::clearValueDirty() const; TIterator*RooAbsArg::clientIterator() const; virtual TObject*clone(const char* newname) const; virtual TObject*RooAbsArg::Clone(const char* newname = 0) const; virtual RooAbsArg*RooAbsArg::cloneTree(const char* newname = 0) const; virtual Int_tRooAbsArg::Compare(const TObject* other) const; virtual voidRooAbsArg::constOp",MatchSource.WIKI,root/html534/Roo2DKeysPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DKeysPdf.html
https://root.cern/root/html534/Roo2DKeysPdf.html:11320,Performance,cache,cacheList,11320,"ent(Int_t event, Int_t px, Int_t py); virtual Double_tRooAbsPdf::expectedEvents(const RooArgSet* nset) const; virtual Double_tRooAbsPdf::expectedEvents(const RooArgSet& nset) const; RooExpensiveObjectCache&RooAbsArg::expensiveObjectCache() const; virtual Double_tRooAbsPdf::extendedTerm(Double_t observedEvents, const RooArgSet* nset = 0) const; virtual RooAbsPdf::ExtendModeRooAbsPdf::extendMode() const; virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); RooDataHist*RooAbsReal::fillDataHist(RooDataHist* hist, const RooArgSet* nset, Double_t scaleFactor, Bool_t correctForBinVolume = kFALSE, Bool_t showProgress = kFALSE) const; TH1*RooAbsReal::fillHistogram(TH1* hist, const RooArgList& plotVars, Double_t scaleFactor = 1, const RooArgSet* projectedVars = 0, Bool_t scaling = kTRUE, const RooArgSet* condObs = 0, Bool_t setError = kTRUE) const; Bool_tRooAbsArg::findConstantNodes(const RooArgSet& observables, RooArgSet& cacheList); Bool_tRooAbsArg::findConstantNodes(const RooArgSet& observables, RooArgSet& cacheList, RooLinkedList& processedNodes); RooAbsArg*RooAbsArg::findNewServer(const RooAbsCollection& newSet, Bool_t nameChange) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Double_tRooAbsReal::findRoot(RooRealVar& x, Double_t xmin, Double_t xmax, Double_t yval); RooAbsArg*RooAbsArg::findServer(const char* name) const; RooAbsArg*RooAbsArg::findServer(const RooAbsArg& arg) const; RooAbsArg*RooAbsArg::findServer(Int_t index) const; virtual RooFitResult*RooAbsPdf::fitTo(RooAbsData& data, const RooLinkedList& cmdList); virtual RooFitResult*RooAbsPdf::fitTo(RooAbsData& data, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none",MatchSource.WIKI,root/html534/Roo2DKeysPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DKeysPdf.html
https://root.cern/root/html534/Roo2DKeysPdf.html:11408,Performance,cache,cacheList,11408,"oArgSet* nset) const; virtual Double_tRooAbsPdf::expectedEvents(const RooArgSet& nset) const; RooExpensiveObjectCache&RooAbsArg::expensiveObjectCache() const; virtual Double_tRooAbsPdf::extendedTerm(Double_t observedEvents, const RooArgSet* nset = 0) const; virtual RooAbsPdf::ExtendModeRooAbsPdf::extendMode() const; virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); RooDataHist*RooAbsReal::fillDataHist(RooDataHist* hist, const RooArgSet* nset, Double_t scaleFactor, Bool_t correctForBinVolume = kFALSE, Bool_t showProgress = kFALSE) const; TH1*RooAbsReal::fillHistogram(TH1* hist, const RooArgList& plotVars, Double_t scaleFactor = 1, const RooArgSet* projectedVars = 0, Bool_t scaling = kTRUE, const RooArgSet* condObs = 0, Bool_t setError = kTRUE) const; Bool_tRooAbsArg::findConstantNodes(const RooArgSet& observables, RooArgSet& cacheList); Bool_tRooAbsArg::findConstantNodes(const RooArgSet& observables, RooArgSet& cacheList, RooLinkedList& processedNodes); RooAbsArg*RooAbsArg::findNewServer(const RooAbsCollection& newSet, Bool_t nameChange) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Double_tRooAbsReal::findRoot(RooRealVar& x, Double_t xmin, Double_t xmax, Double_t yval); RooAbsArg*RooAbsArg::findServer(const char* name) const; RooAbsArg*RooAbsArg::findServer(const RooAbsArg& arg) const; RooAbsArg*RooAbsArg::findServer(Int_t index) const; virtual RooFitResult*RooAbsPdf::fitTo(RooAbsData& data, const RooLinkedList& cmdList); virtual RooFitResult*RooAbsPdf::fitTo(RooAbsData& data, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()",MatchSource.WIKI,root/html534/Roo2DKeysPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DKeysPdf.html
https://root.cern/root/html534/Roo2DKeysPdf.html:23465,Performance,optimiz,optimizeCacheMode,23465,"order, Bool_t central, Bool_t takeRoot); RooAbsMoment*RooAbsReal::moment(RooRealVar& obs, const RooArgSet& normObs, Int_t order, Bool_t central, Bool_t takeRoot, Bool_t intNormObs); Bool_tRooAbsPdf::mustBeExtended() const; static voidRooPrintable::nameFieldLength(Int_t newLen); const TNamed*RooAbsArg::namePtr() const; const char*RooAbsPdf::normRange() const; virtual Bool_tTObject::Notify(); Int_tRooAbsArg::numCaches() const; static Int_tRooAbsReal::numEvalErrorItems(); static Int_tRooAbsReal::numEvalErrors(); Bool_tRooAbsArg::observableOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::observableOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; virtual Double_tRooAbsReal::offset() const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TNamed&TNamed::operator=(const TNamed& rhs); Bool_tRooAbsReal::operator==(Double_t value) const; virtual Bool_tRooAbsReal::operator==(const RooAbsArg& other); RooAbsArg::OperModeRooAbsArg::operMode() const; virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables); virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables, RooArgSet& optNodes, RooLinkedList& processedNodes); Bool_tRooAbsArg::overlaps(const RooAbsArg& testArg, Bool_t valueOnly = kFALSE) const; const RooArgSet*RooAbsArg::ownedComponents() const; virtual voidTObject::Paint(Option_t* option = """"); virtual RooPlot*RooAbsPdf::paramOn(RooPlot* frame, const RooAbsData* data, const char* label = """", Int_t sigDigits = 2, Option_t* options = ""NELU"", Double_t xmin = 0.",MatchSource.WIKI,root/html534/Roo2DKeysPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DKeysPdf.html
https://root.cern/root/html534/Roo2DKeysPdf.html:23537,Performance,optimiz,optimizeCacheMode,23537,"order, Bool_t central, Bool_t takeRoot); RooAbsMoment*RooAbsReal::moment(RooRealVar& obs, const RooArgSet& normObs, Int_t order, Bool_t central, Bool_t takeRoot, Bool_t intNormObs); Bool_tRooAbsPdf::mustBeExtended() const; static voidRooPrintable::nameFieldLength(Int_t newLen); const TNamed*RooAbsArg::namePtr() const; const char*RooAbsPdf::normRange() const; virtual Bool_tTObject::Notify(); Int_tRooAbsArg::numCaches() const; static Int_tRooAbsReal::numEvalErrorItems(); static Int_tRooAbsReal::numEvalErrors(); Bool_tRooAbsArg::observableOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::observableOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; virtual Double_tRooAbsReal::offset() const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TNamed&TNamed::operator=(const TNamed& rhs); Bool_tRooAbsReal::operator==(Double_t value) const; virtual Bool_tRooAbsReal::operator==(const RooAbsArg& other); RooAbsArg::OperModeRooAbsArg::operMode() const; virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables); virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables, RooArgSet& optNodes, RooLinkedList& processedNodes); Bool_tRooAbsArg::overlaps(const RooAbsArg& testArg, Bool_t valueOnly = kFALSE) const; const RooArgSet*RooAbsArg::ownedComponents() const; virtual voidTObject::Paint(Option_t* option = """"); virtual RooPlot*RooAbsPdf::paramOn(RooPlot* frame, const RooAbsData* data, const char* label = """", Int_t sigDigits = 2, Option_t* options = ""NELU"", Double_t xmin = 0.",MatchSource.WIKI,root/html534/Roo2DKeysPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DKeysPdf.html
https://root.cern/root/html534/Roo2DKeysPdf.html:27947,Performance,cache,cache,27947,"eam(ostream& os, Int_t contents, RooPrintable::StyleOption style, TString indent = """") const; virtual voidRooAbsArg::printTitle(ostream& os) const; virtual voidRooAbsArg::printTree(ostream& os, TString indent = """") const; virtual voidRooAbsPdf::printValue(ostream& os) const; virtual Int_tTObject::Read(const char* name); virtual Bool_tRooAbsReal::readFromStream(istream& is, Bool_t compact, Bool_t verbose = kFALSE); Bool_tRooAbsArg::recursiveCheckDependents(const RooArgSet* nset) const; Bool_tRooAbsArg::recursiveCheckObservables(const RooArgSet* nset) const; Bool_tRooAbsArg::recursiveRedirectServers(const RooAbsCollection& newServerList, Bool_t mustReplaceAll = kFALSE, Bool_t nameChange = kFALSE, Bool_t recurseInNewSet = kTRUE); virtual voidTObject::RecursiveRemove(TObject* obj); Bool_tRooAbsArg::redirectServers(const RooAbsCollection& newServerList, Bool_t mustReplaceAll = kFALSE, Bool_t nameChange = kFALSE, Bool_t isRecursionStep = kFALSE); voidRooAbsArg::registerCache(RooAbsCache& cache); voidRooAbsArg::removeServer(RooAbsArg& server, Bool_t force = kFALSE); voidRooAbsArg::replaceServer(RooAbsArg& oldServer, RooAbsArg& newServer, Bool_t valueProp, Bool_t shapeProp); voidTObject::ResetBit(UInt_t f); virtual voidRooAbsPdf::resetErrorCounters(Int_t resetValue = 10); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual Bool_tRooAbsPdf::selfNormalized() const; TIterator*RooAbsArg::serverIterator() const; RooFIterRooAbsArg::serverMIterator() const; virtual voidRooAbsArg::serverNameChangeHook(const RooAbsArg*, const RooAbsArg*); voidRooAbsArg::setAttribute(const Text_t* name, Bool_t value = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidRooAbsArg::setCacheAndTrackHints(RooArgSet&); static voidRooAbsReal::setCacheCheck(Bool_t flag); virtual Bool_tRooAbsReal::setData(RooAbsData&, Bool_t = kTRUE); static voidRooA",MatchSource.WIKI,root/html534/Roo2DKeysPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DKeysPdf.html
https://root.cern/root/html534/Roo2DKeysPdf.html:29247,Performance,cache,cache,29247,"ject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual Bool_tRooAbsPdf::selfNormalized() const; TIterator*RooAbsArg::serverIterator() const; RooFIterRooAbsArg::serverMIterator() const; virtual voidRooAbsArg::serverNameChangeHook(const RooAbsArg*, const RooAbsArg*); voidRooAbsArg::setAttribute(const Text_t* name, Bool_t value = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidRooAbsArg::setCacheAndTrackHints(RooArgSet&); static voidRooAbsReal::setCacheCheck(Bool_t flag); virtual Bool_tRooAbsReal::setData(RooAbsData&, Bool_t = kTRUE); static voidRooAbsArg::setDirtyInhibit(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidRooAbsReal::setEvalErrorLoggingMode(RooAbsReal::ErrorLoggingMode m); virtual voidRooAbsArg::setExpensiveObjectCache(RooExpensiveObjectCache& cache); voidRooAbsPdf::setGeneratorConfig(); voidRooAbsPdf::setGeneratorConfig(const RooNumGenConfig& config); static voidRooAbsReal::setHideOffset(Bool_t flag); voidRooAbsReal::setIntegratorConfig(); voidRooAbsReal::setIntegratorConfig(const RooNumIntConfig& config); voidRooAbsArg::setLocalNoDirtyInhibit(Bool_t flag) const; virtual voidRooAbsArg::SetName(const char* name); virtual voidRooAbsArg::SetNameTitle(const char* name, const char* title); voidRooAbsPdf::setNormRange(const char* rangeName); voidRooAbsPdf::setNormRangeOverride(const char* rangeName); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsArg::setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); voidsetOptions(TString options); voidRooAbsReal::setParameterizeIntegral(const RooArgSet& paramVars); voidRooAbsReal::setPlotLabel(const char* label); voidRooAbsArg::setProhibitServerRedirect(Bool_t flag); voidRooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_",MatchSource.WIKI,root/html534/Roo2DKeysPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DKeysPdf.html
https://root.cern/root/html534/Roo2DKeysPdf.html:31965,Performance,cache,cache,31965,"bsMoment*RooAbsReal::sigma(RooRealVar& obs); RooAbsMoment*RooAbsReal::sigma(RooRealVar& obs, const RooArgSet& nset); virtual Int_tTNamed::Sizeof() const; RooNumGenConfig*RooAbsPdf::specialGeneratorConfig() const; RooNumGenConfig*RooAbsPdf::specialGeneratorConfig(Bool_t createOnTheFly); RooNumIntConfig*RooAbsReal::specialIntegratorConfig() const; RooNumIntConfig*RooAbsReal::specialIntegratorConfig(Bool_t createOnTheFly); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); const map<std::string,std::string>&RooAbsArg::stringAttributes() const; virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual Bool_tRooAbsPdf::traceEvalHook(Double_t value) const; Bool_tRooAbsPdf::traceEvalPdf(Double_t value) const; const set<std::string>&RooAbsArg::transientAttributes() const; voidRooAbsArg::treeNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t doBranch = kTRUE, Bool_t doLeaf = kTRUE, Bool_t valueOnly = kFALSE, Bool_t recurseNonDerived = kFALSE) const; voidRooAbsArg::unRegisterCache(RooAbsCache& cache); virtual voidTObject::UseCurrentStyle(); TIterator*RooAbsArg::valueClientIterator() const; RooFIterRooAbsArg::valueClientMIterator() const; static voidRooAbsArg::verboseDirty(Bool_t flag); static intRooAbsPdf::verboseEval(); static voidRooAbsPdf::verboseEval(Int_t stat); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; voidRooAbsArg::wireAllCaches(); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; voidwriteHistToFile(char* outputFile, const char* histName) const; voidwriteNTupleToFile(char* outputFile, const char* name) const; voidwriteToFile(char* outputFile, const char* name) const; virtual voidRooAbsReal::writeToStream(ostream& os, Bool_t compact) const.",MatchSource.WIKI,root/html534/Roo2DKeysPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DKeysPdf.html
https://root.cern/root/html534/Roo2DKeysPdf.html:36018,Performance,optimiz,optimizeDirtyHook,36018,"ototype, Double_t nEvents, Bool_t verbose, Bool_t randProtoOrder, Bool_t resampleProto, Bool_t skipInit = kFALSE, Bool_t extended = kFALSE) const; virtual voidRooAbsArg::getObservablesHook(const RooArgSet*, RooArgSet*) const; virtual voidRooAbsArg::getParametersHook(const RooArgSet*, RooArgSet*, Bool_t) const; RooAbsProxy*RooAbsArg::getProxy(Int_t index) const; static voidRooAbsReal::globalSelectComp(Bool_t flag); voidRooAbsArg::graphVizAddConnections(set<std::pair<RooAbsArg*,RooAbsArg*> >&); Bool_tRooAbsArg::inhibitDirty() const; TStringRooAbsReal::integralNameSuffix(const RooArgSet& iset, const RooArgSet* nset = 0, const char* rangeName = 0, Bool_t omitEmpty = kFALSE) const; Bool_tRooAbsReal::isSelectedComp() const; virtual Bool_tRooAbsReal::isValid() const; virtual Bool_tRooAbsReal::isValidReal(Double_t value, Bool_t printError = kFALSE) const; voidRooAbsReal::makeProjectionSet(const RooAbsArg* plotVar, const RooArgSet* allVars, RooArgSet& projectedVars, Bool_t silent) const; voidTObject::MakeZombie(); Bool_tRooAbsReal::matchArgs(const RooArgSet& allDeps, RooArgSet& numDeps, const RooArgProxy& a) const; Bool_tRooAbsReal::matchArgs(const RooArgSet& allDeps, RooArgSet& numDeps, const RooArgSet& set) const; Bool_tRooAbsReal::matchArgs(const RooArgSet& allDeps, RooArgSet& numDeps, const RooArgProxy& a, const RooArgProxy& b) const; Bool_tRooAbsReal::matchArgs(const RooArgSet& allDeps, RooArgSet& numDeps, const RooArgProxy& a, const RooArgProxy& b, const RooArgProxy& c) const; Bool_tRooAbsReal::matchArgs(const RooArgSet& allDeps, RooArgSet& numDeps, const RooArgProxy& a, const RooArgProxy& b, const RooArgProxy& c, const RooArgProxy& d) const; Int_tRooAbsArg::numProxies() const; virtual voidRooAbsArg::operModeHook(); virtual voidRooAbsArg::optimizeDirtyHook(const RooArgSet*); virtual RooPlot*RooAbsPdf::paramOn(RooPlot* frame, const RooArgSet& params, Bool_t showConstants = kFALSE, const char* label = """", Int_t sigDigits = 2, Option_t* options = ""NELU"", Double_t xmin = 0.",MatchSource.WIKI,root/html534/Roo2DKeysPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DKeysPdf.html
https://root.cern/root/html534/Roo2DKeysPdf.html:38879,Performance,Cache,CacheMode,38879,"sterProxy(RooArgProxy& proxy); voidRooAbsArg::unRegisterProxy(RooSetProxy& proxy); voidRooAbsArg::unRegisterProxy(RooListProxy& proxy). private:. Double_tevaluateFull(Double_t thisX, Double_t thisY) const; Double_tg(Double_t var1, Double_t* _var1, Double_t sigma1, Double_t var2, Double_t* _var2, Double_t sigma2) const; Double_thighBoundaryCorrection(Double_t thisVar, Double_t thisH, Double_t high, Double_t tVar) const; Double_tlowBoundaryCorrection(Double_t thisVar, Double_t thisH, Double_t low, Double_t tVar) const. Data Members; public:. enum RooAbsPdf::ExtendMode { CanNotBeExtended; CanBeExtended; MustBeExtended; };; enum RooAbsReal::ScaleType { Raw; Relative; NumEvent; RelativeExpected; };; enum RooAbsReal::ErrorLoggingMode { PrintErrors; CollectErrors; CountErrors; Ignore; };; enum RooAbsArg::ConstOpCode { Activate; DeActivate; ConfigChange; ValueChange; };; enum RooAbsArg::CacheMode { Always; NotAdvised; Never; };; enum RooAbsArg::OperMode { Auto; AClean; ADirty; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };; enum RooPrintable::ContentsOption { kName; kClassName; kValue; kArgs; kExtras; kAddress; kTitle; kCollectionHeader; };; enum RooPrintable::StyleOption { kInline; kSingleLine; kStandard; kVerbose; kTreeStructure; };. public:. static map<RooAbsArg*,TRefArray*>RooAbsArg::_ioEvoListtemporary holding list for proxies needed in schema evolution ; static stack<RooAbsArg*>RooAbsArg::_ioReadStackreading stack ; static const UInt_tRooAbsArg::fnv1a32start; static const ULong64_tRooAbsArg::fnv1a64start; RooRealProxyx; RooRealProxyy. protected:. set<std::string>RooAbsArg::_boolAttribBoolean attributes; set<std::string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); Bool_tRooAbsReal::_boolValue! Transient cache for bool values f",MatchSource.WIKI,root/html534/Roo2DKeysPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DKeysPdf.html
https://root.cern/root/html534/Roo2DKeysPdf.html:39965,Performance,cache,cache,39965,,MatchSource.WIKI,root/html534/Roo2DKeysPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DKeysPdf.html
https://root.cern/root/html534/Roo2DKeysPdf.html:40049,Performance,cache,cache,40049,,MatchSource.WIKI,root/html534/Roo2DKeysPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DKeysPdf.html
https://root.cern/root/html534/Roo2DKeysPdf.html:40248,Performance,cache,caches,40248,,MatchSource.WIKI,root/html534/Roo2DKeysPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DKeysPdf.html
https://root.cern/root/html534/Roo2DKeysPdf.html:40783,Performance,cache,cache,40783,"AbsArg::_boolAttribBoolean attributes; set<std::string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); Bool_tRooAbsReal::_boolValue! Transient cache for bool values from tree branches ; UChar_tRooAbsReal::_byteValue! Transient cache for byte values from tree branches ; static Bool_tRooAbsReal::_cacheCheckIf true, always validate contents of clean which outcome of evaluate(); deque<RooAbsCache*>RooAbsArg::_cacheListlist of caches; RooRefCountListRooAbsArg::_clientListlist of client objects; RooRefCountListRooAbsArg::_clientListShapesubset of clients that requested shape dirty flag propagation; RooRefCountListRooAbsArg::_clientListValuesubset of clients that requested value dirty flag propagation; TIterator*RooAbsArg::_clientShapeIter! Iterator over _clientListShape ; TIterator*RooAbsArg::_clientValueIter! Iterator over _clientListValue ; Bool_tRooAbsArg::_deleteWatch! Delete watch flag ; RooExpensiveObjectCache*RooAbsArg::_eocachePointer to global cache manager for any expensive components created by this object; Int_tRooAbsPdf::_errorCountNumber of errors remaining to print; static Bool_tRooAbsPdf::_evalError; Bool_tRooAbsArg::_fastAllow fast access mode in getVal() and proxies; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsReal::_hideOffsetOffset hiding flag; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; Bool_tRooAbsArg::_isConstant! Cached isConstant status ; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; static Int_tRooPrintable::_nameLength",MatchSource.WIKI,root/html534/Roo2DKeysPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DKeysPdf.html
https://root.cern/root/html534/Roo2DKeysPdf.html:41062,Performance,cache,cache,41062,"td::string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); Bool_tRooAbsReal::_boolValue! Transient cache for bool values from tree branches ; UChar_tRooAbsReal::_byteValue! Transient cache for byte values from tree branches ; static Bool_tRooAbsReal::_cacheCheckIf true, always validate contents of clean which outcome of evaluate(); deque<RooAbsCache*>RooAbsArg::_cacheListlist of caches; RooRefCountListRooAbsArg::_clientListlist of client objects; RooRefCountListRooAbsArg::_clientListShapesubset of clients that requested shape dirty flag propagation; RooRefCountListRooAbsArg::_clientListValuesubset of clients that requested value dirty flag propagation; TIterator*RooAbsArg::_clientShapeIter! Iterator over _clientListShape ; TIterator*RooAbsArg::_clientValueIter! Iterator over _clientListValue ; Bool_tRooAbsArg::_deleteWatch! Delete watch flag ; RooExpensiveObjectCache*RooAbsArg::_eocachePointer to global cache manager for any expensive components created by this object; Int_tRooAbsPdf::_errorCountNumber of errors remaining to print; static Bool_tRooAbsPdf::_evalError; Bool_tRooAbsArg::_fastAllow fast access mode in getVal() and proxies; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsReal::_hideOffsetOffset hiding flag; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; Bool_tRooAbsArg::_isConstant! Cached isConstant status ; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist.",MatchSource.WIKI,root/html534/Roo2DKeysPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DKeysPdf.html
https://root.cern/root/html534/Roo2DKeysPdf.html:41476,Performance,cache,cache,41476,"td::string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); Bool_tRooAbsReal::_boolValue! Transient cache for bool values from tree branches ; UChar_tRooAbsReal::_byteValue! Transient cache for byte values from tree branches ; static Bool_tRooAbsReal::_cacheCheckIf true, always validate contents of clean which outcome of evaluate(); deque<RooAbsCache*>RooAbsArg::_cacheListlist of caches; RooRefCountListRooAbsArg::_clientListlist of client objects; RooRefCountListRooAbsArg::_clientListShapesubset of clients that requested shape dirty flag propagation; RooRefCountListRooAbsArg::_clientListValuesubset of clients that requested value dirty flag propagation; TIterator*RooAbsArg::_clientShapeIter! Iterator over _clientListShape ; TIterator*RooAbsArg::_clientValueIter! Iterator over _clientListValue ; Bool_tRooAbsArg::_deleteWatch! Delete watch flag ; RooExpensiveObjectCache*RooAbsArg::_eocachePointer to global cache manager for any expensive components created by this object; Int_tRooAbsPdf::_errorCountNumber of errors remaining to print; static Bool_tRooAbsPdf::_evalError; Bool_tRooAbsArg::_fastAllow fast access mode in getVal() and proxies; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsReal::_hideOffsetOffset hiding flag; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; Bool_tRooAbsArg::_isConstant! Cached isConstant status ; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist.",MatchSource.WIKI,root/html534/Roo2DKeysPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DKeysPdf.html
https://root.cern/root/html534/Roo2DKeysPdf.html:41552,Performance,Cache,Cached,41552,"td::string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); Bool_tRooAbsReal::_boolValue! Transient cache for bool values from tree branches ; UChar_tRooAbsReal::_byteValue! Transient cache for byte values from tree branches ; static Bool_tRooAbsReal::_cacheCheckIf true, always validate contents of clean which outcome of evaluate(); deque<RooAbsCache*>RooAbsArg::_cacheListlist of caches; RooRefCountListRooAbsArg::_clientListlist of client objects; RooRefCountListRooAbsArg::_clientListShapesubset of clients that requested shape dirty flag propagation; RooRefCountListRooAbsArg::_clientListValuesubset of clients that requested value dirty flag propagation; TIterator*RooAbsArg::_clientShapeIter! Iterator over _clientListShape ; TIterator*RooAbsArg::_clientValueIter! Iterator over _clientListValue ; Bool_tRooAbsArg::_deleteWatch! Delete watch flag ; RooExpensiveObjectCache*RooAbsArg::_eocachePointer to global cache manager for any expensive components created by this object; Int_tRooAbsPdf::_errorCountNumber of errors remaining to print; static Bool_tRooAbsPdf::_evalError; Bool_tRooAbsArg::_fastAllow fast access mode in getVal() and proxies; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsReal::_hideOffsetOffset hiding flag; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; Bool_tRooAbsArg::_isConstant! Cached isConstant status ; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist.",MatchSource.WIKI,root/html534/Roo2DKeysPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DKeysPdf.html
https://root.cern/root/html534/Roo2DKeysPdf.html:42087,Performance,cache,cache,42087,,MatchSource.WIKI,root/html534/Roo2DKeysPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DKeysPdf.html
https://root.cern/root/html534/Roo2DKeysPdf.html:42758,Performance,cache,cache,42758,,MatchSource.WIKI,root/html534/Roo2DKeysPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DKeysPdf.html
https://root.cern/root/html534/Roo2DKeysPdf.html:43557,Performance,cache,cache,43557," by _normMgr); RooObjCacheManagerRooAbsPdf::_normMgrThe cache manager; TStringRooAbsPdf::_normRangeNormalization range; static TStringRooAbsPdf::_normRangeOverride; RooArgSet*RooAbsPdf::_normSet! Normalization set with for above integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title.",MatchSource.WIKI,root/html534/Roo2DKeysPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DKeysPdf.html
https://root.cern/root/html534/Roo2DKeysPdf.html:44990,Performance,load,loadDataSet,44990,"d::fTitleobject title. private:. Double_t_2pi= M_PI*2; Int_t_BandWidthType; Int_t_MirrorAtBoundary; Int_t_debug; Double_t_hix; Double_t_hiy; Double_t*_hx; Double_t*_hy; Double_t_lox; Double_t_loy; Double_t_ncoefficient of the kernel estimation sum; Double_t_n16pow(_nEvents, -1/6); Int_t_nEvents; Double_t_norm; Double_t_sqrt2pi; Int_t_verbosedebug; Int_t_vverbosedebug; Double_t_widthScaleFactorallow manipulation of the bandwidth by a scale factor; Double_t*_x; Double_t_xMeanthe (x,y) mean and sigma are properties of the data, not of the PDF; Double_t_xSigma; Double_t_xoffset; Double_t*_y; Double_t_yMean; Double_t_ySigma; Double_t_yoffset. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Roo2DKeysPdf(const char* name, const char* title, RooAbsReal& xx, RooAbsReal& yy, RooDataSet& data, TString options = ""a"", Double_t widthScaleFactor = 1.0). Roo2DKeysPdf(const Roo2DKeysPdf& other, const char* name = 0). ~Roo2DKeysPdf(). Int_t loadDataSet(RooDataSet& data, TString options). void setOptions(TString options). void getOptions(void). Int_t calculateBandWidth(Int_t kernel = -999). Double_t evaluate() const; use the cacheing intrinsic in RFC to bypass the grid and remove; the grid and extrapolation approximation in the kernel estimation method; implementation - cheers Wouter :). Double_t evaluateFull(Double_t thisX, Double_t thisY) const. Double_t highBoundaryCorrection(Double_t thisVar, Double_t thisH, Double_t high, Double_t tVar) const. Double_t lowBoundaryCorrection(Double_t thisVar, Double_t thisH, Double_t low, Double_t tVar) const. Double_t g(Double_t var1, Double_t* _var1, Double_t sigma1, Double_t var2, Double_t* _var2, Double_t sigma2) const. Int_t getBandWidthType() const. Double_t getMean(const char* axis) const. Double_t getSigma(const char* axis) const. void writeToFile(char* outputFile, const char* name) const. void writeHistToFile(char* outputFile, const char* histName) const. void writeNTupleToFile(char* outputFile, ",MatchSource.WIKI,root/html534/Roo2DKeysPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DKeysPdf.html
https://root.cern/root/html534/Roo2DKeysPdf.html:45177,Performance,cache,cacheing,45177,"l estimation sum; Double_t_n16pow(_nEvents, -1/6); Int_t_nEvents; Double_t_norm; Double_t_sqrt2pi; Int_t_verbosedebug; Int_t_vverbosedebug; Double_t_widthScaleFactorallow manipulation of the bandwidth by a scale factor; Double_t*_x; Double_t_xMeanthe (x,y) mean and sigma are properties of the data, not of the PDF; Double_t_xSigma; Double_t_xoffset; Double_t*_y; Double_t_yMean; Double_t_ySigma; Double_t_yoffset. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Roo2DKeysPdf(const char* name, const char* title, RooAbsReal& xx, RooAbsReal& yy, RooDataSet& data, TString options = ""a"", Double_t widthScaleFactor = 1.0). Roo2DKeysPdf(const Roo2DKeysPdf& other, const char* name = 0). ~Roo2DKeysPdf(). Int_t loadDataSet(RooDataSet& data, TString options). void setOptions(TString options). void getOptions(void). Int_t calculateBandWidth(Int_t kernel = -999). Double_t evaluate() const; use the cacheing intrinsic in RFC to bypass the grid and remove; the grid and extrapolation approximation in the kernel estimation method; implementation - cheers Wouter :). Double_t evaluateFull(Double_t thisX, Double_t thisY) const. Double_t highBoundaryCorrection(Double_t thisVar, Double_t thisH, Double_t high, Double_t tVar) const. Double_t lowBoundaryCorrection(Double_t thisVar, Double_t thisH, Double_t low, Double_t tVar) const. Double_t g(Double_t var1, Double_t* _var1, Double_t sigma1, Double_t var2, Double_t* _var2, Double_t sigma2) const. Int_t getBandWidthType() const. Double_t getMean(const char* axis) const. Double_t getSigma(const char* axis) const. void writeToFile(char* outputFile, const char* name) const. void writeHistToFile(char* outputFile, const char* histName) const. void writeNTupleToFile(char* outputFile, const char* name) const. void PrintInfo(ostream& ) const. void setWidthScaleFactor(Double_t widthScaleFactor); { _widthScaleFactor = widthScaleFactor; }. TObject* clone(const char* newname) const; { return new Roo2DKeysPdf(*this,new",MatchSource.WIKI,root/html534/Roo2DKeysPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DKeysPdf.html
https://root.cern/root/html534/Roo2DKeysPdf.html:12740,Security,hash,hash,12740,"Double_t yval); RooAbsArg*RooAbsArg::findServer(const char* name) const; RooAbsArg*RooAbsArg::findServer(const RooAbsArg& arg) const; RooAbsArg*RooAbsArg::findServer(Int_t index) const; virtual RooFitResult*RooAbsPdf::fitTo(RooAbsData& data, const RooLinkedList& cmdList); virtual RooFitResult*RooAbsPdf::fitTo(RooAbsData& data, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); virtual voidRooAbsReal::fixAddCoefNormalization(const RooArgSet& addNormSet = RooArgSet(), Bool_t force = kTRUE); virtual voidRooAbsReal::fixAddCoefRange(const char* rangeName = 0, Bool_t force = kTRUE); static UInt_tRooAbsArg::fnv1a32(const char* data); static UInt_tRooAbsArg::fnv1a32(const char* data, ULong_t sz, UInt_t hash = fnv1a32start); static ULong64_tRooAbsArg::fnv1a64(const char* data); static ULong64_tRooAbsArg::fnv1a64(const char* data, ULong_t sz, ULong64_t hash = fnv1a64start); virtual Bool_tRooAbsReal::forceAnalyticalInt(const RooAbsArg&) const; virtual voidRooAbsReal::forceNumInt(Bool_t flag = kTRUE); RooFunctor*RooAbsReal::functor(const RooArgList& obs, const RooArgList& pars = RooArgList(), const RooArgSet& nset = RooArgSet()) const; RooDataSet*RooAbsPdf::generate(RooAbsPdf::GenSpec&) const; RooDataSet*RooAbsPdf::generate(const RooArgSet& whatVars, const RooDataSet& prototype, Int_t nEvents = 0, Bool_t verbose = kFALSE, Bool_t randProtoOrder = kFALSE, Bool_t resampleProto = kFALSE) const; RooDataSet*RooAbsPdf::generate(const RooArgSet& whatVars, Int_t nEvents, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none()); RooDataSet*RooAbsPdf::generate(const",MatchSource.WIKI,root/html534/Roo2DKeysPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DKeysPdf.html
https://root.cern/root/html534/Roo2DKeysPdf.html:12891,Security,hash,hash,12891,"rg::findServer(Int_t index) const; virtual RooFitResult*RooAbsPdf::fitTo(RooAbsData& data, const RooLinkedList& cmdList); virtual RooFitResult*RooAbsPdf::fitTo(RooAbsData& data, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); virtual voidRooAbsReal::fixAddCoefNormalization(const RooArgSet& addNormSet = RooArgSet(), Bool_t force = kTRUE); virtual voidRooAbsReal::fixAddCoefRange(const char* rangeName = 0, Bool_t force = kTRUE); static UInt_tRooAbsArg::fnv1a32(const char* data); static UInt_tRooAbsArg::fnv1a32(const char* data, ULong_t sz, UInt_t hash = fnv1a32start); static ULong64_tRooAbsArg::fnv1a64(const char* data); static ULong64_tRooAbsArg::fnv1a64(const char* data, ULong_t sz, ULong64_t hash = fnv1a64start); virtual Bool_tRooAbsReal::forceAnalyticalInt(const RooAbsArg&) const; virtual voidRooAbsReal::forceNumInt(Bool_t flag = kTRUE); RooFunctor*RooAbsReal::functor(const RooArgList& obs, const RooArgList& pars = RooArgList(), const RooArgSet& nset = RooArgSet()) const; RooDataSet*RooAbsPdf::generate(RooAbsPdf::GenSpec&) const; RooDataSet*RooAbsPdf::generate(const RooArgSet& whatVars, const RooDataSet& prototype, Int_t nEvents = 0, Bool_t verbose = kFALSE, Bool_t randProtoOrder = kFALSE, Bool_t resampleProto = kFALSE) const; RooDataSet*RooAbsPdf::generate(const RooArgSet& whatVars, Int_t nEvents, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none()); RooDataSet*RooAbsPdf::generate(const RooArgSet& whatVars, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), ",MatchSource.WIKI,root/html534/Roo2DKeysPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DKeysPdf.html
https://root.cern/root/html534/Roo2DKeysPdf.html:19124,Security,Hash,Hash,19124,"esult& fr); Double_tgetSigma(const char* axis) const; const Text_t*RooAbsArg::getStringAttribute(const Text_t* key) const; virtual const char*TNamed::GetTitle() const; TStringRooAbsReal::getTitle(Bool_t appendUnit = kFALSE) const; Bool_tRooAbsArg::getTransientAttribute(const Text_t* name) const; virtual UInt_tTObject::GetUniqueID() const; const Text_t*RooAbsReal::getUnit() const; Double_tRooAbsReal::getVal(const RooArgSet* set = 0) const; Double_tRooAbsReal::getVal(const RooArgSet& set) const; virtual Double_tRooAbsPdf::getValV(const RooArgSet* set = 0) const; RooArgSet*RooAbsArg::getVariables(Bool_t stripDisconnected = kTRUE) const; voidRooAbsArg::graphVizTree(const char* fileName, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); voidRooAbsArg::graphVizTree(ostream& os, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tRooAbsArg::hasClients() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tRooAbsArg::hasRange(const char*) const; static Bool_tRooAbsReal::hideOffset(); RooGenFunction*RooAbsReal::iGenFunction(RooRealVar& x, const RooArgSet& nset = RooArgSet()); RooMultiGenFunction*RooAbsReal::iGenFunction(const RooArgSet& observables, const RooArgSet& nset = RooArgSet()); virtual Bool_tRooAbsArg::importWorkspaceHook(RooWorkspace&); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidRooAbsPdf::initGenerator(Int_t code); virtual Bool_tRooAbsArg::inRange(const char*) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual voidRooAbsArg::ioStreamerPass2(); static voidRooAbsArg::ioStreamerPass2Finalize(); virtual TClass*IsA() const; virtual Bool_tRooAbsReal::isBinnedDistribution(const RooArgSet&) const; Bool_tRooAbsArg::isCloneOf(const RooAbsArg& other) const; ",MatchSource.WIKI,root/html534/Roo2DKeysPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DKeysPdf.html
https://root.cern/root/html534/Roo2DKeysPdf.html:40144,Security,validat,validate,40144,,MatchSource.WIKI,root/html534/Roo2DKeysPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DKeysPdf.html
https://root.cern/root/html534/Roo2DKeysPdf.html:40983,Security,access,access,40983,"td::string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); Bool_tRooAbsReal::_boolValue! Transient cache for bool values from tree branches ; UChar_tRooAbsReal::_byteValue! Transient cache for byte values from tree branches ; static Bool_tRooAbsReal::_cacheCheckIf true, always validate contents of clean which outcome of evaluate(); deque<RooAbsCache*>RooAbsArg::_cacheListlist of caches; RooRefCountListRooAbsArg::_clientListlist of client objects; RooRefCountListRooAbsArg::_clientListShapesubset of clients that requested shape dirty flag propagation; RooRefCountListRooAbsArg::_clientListValuesubset of clients that requested value dirty flag propagation; TIterator*RooAbsArg::_clientShapeIter! Iterator over _clientListShape ; TIterator*RooAbsArg::_clientValueIter! Iterator over _clientListValue ; Bool_tRooAbsArg::_deleteWatch! Delete watch flag ; RooExpensiveObjectCache*RooAbsArg::_eocachePointer to global cache manager for any expensive components created by this object; Int_tRooAbsPdf::_errorCountNumber of errors remaining to print; static Bool_tRooAbsPdf::_evalError; Bool_tRooAbsArg::_fastAllow fast access mode in getVal() and proxies; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsReal::_hideOffsetOffset hiding flag; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; Bool_tRooAbsArg::_isConstant! Cached isConstant status ; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist.",MatchSource.WIKI,root/html534/Roo2DKeysPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DKeysPdf.html
https://root.cern/root/html534/Roo2DKeysPdf.html:8758,Testability,test,testArg,8758,"aramsOfInterest); virtual RooAbsPdf*RooAbsPdf::createProjection(const RooArgSet& iset); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooArgSet& nset = RooArgSet()); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); RooAbsReal*RooAbsPdf::createScanCdf(const RooArgSet& iset, const RooArgSet& nset, Int_t numScanBins, Int_t intOrder); RooAbsReal*RooAbsReal::createScanRI(const RooArgSet& iset, const RooArgSet& nset, Int_t numScanBins, Int_t intOrder); virtual Double_tRooAbsReal::defaultErrorLevel() const; static RooNumGenConfig*RooAbsPdf::defaultGeneratorConfig(); static RooNumIntConfig*RooAbsReal::defaultIntegratorConfig(); virtual Int_tRooAbsArg::defaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooPrintable::defaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Bool_tRooAbsArg::dependentOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependentOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependsOn(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOn(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0) const; RooDerivative*RooAbsReal::derivative(RooRealVar& obs, Int_t order = 1, Double_t eps = 0.",MatchSource.WIKI,root/html534/Roo2DKeysPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DKeysPdf.html
https://root.cern/root/html534/Roo2DKeysPdf.html:8852,Testability,test,testArg,8852,"aramsOfInterest); virtual RooAbsPdf*RooAbsPdf::createProjection(const RooArgSet& iset); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooArgSet& nset = RooArgSet()); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); RooAbsReal*RooAbsPdf::createScanCdf(const RooArgSet& iset, const RooArgSet& nset, Int_t numScanBins, Int_t intOrder); RooAbsReal*RooAbsReal::createScanRI(const RooArgSet& iset, const RooArgSet& nset, Int_t numScanBins, Int_t intOrder); virtual Double_tRooAbsReal::defaultErrorLevel() const; static RooNumGenConfig*RooAbsPdf::defaultGeneratorConfig(); static RooNumIntConfig*RooAbsReal::defaultIntegratorConfig(); virtual Int_tRooAbsArg::defaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooPrintable::defaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Bool_tRooAbsArg::dependentOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependentOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependsOn(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOn(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0) const; RooDerivative*RooAbsReal::derivative(RooRealVar& obs, Int_t order = 1, Double_t eps = 0.",MatchSource.WIKI,root/html534/Roo2DKeysPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DKeysPdf.html
https://root.cern/root/html534/Roo2DKeysPdf.html:21374,Testability,log,logEvalError,21374,"tual Bool_tRooAbsArg::isFundamental() const; virtual Bool_tRooAbsReal::isIdentical(const RooAbsArg& other, Bool_t assumeSameType = kFALSE); virtual Bool_tRooAbsArg::isLValue() const; virtual Bool_tRooAbsReal::isOffsetting() const; Bool_tTObject::IsOnHeap() const; Bool_tRooAbsArg::isShapeDirty() const; Bool_tRooAbsArg::isShapeServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isShapeServer(const char* name) const; virtual Bool_tRooAbsArg::IsSortable() const; Bool_tRooAbsArg::isValueDirty() const; Bool_tRooAbsArg::isValueDirtyAndClear() const; Bool_tRooAbsArg::isValueOrShapeDirtyAndClear() const; Bool_tRooAbsArg::isValueServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isValueServer(const char* name) const; Bool_tTObject::IsZombie() const; voidRooAbsArg::leafNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t recurseNonDerived = kFALSE) const; Int_tloadDataSet(RooDataSet& data, TString options); Bool_tRooAbsArg::localNoDirtyInhibit() const; voidRooAbsReal::logEvalError(const char* message, const char* serverValueString = 0) const; static voidRooAbsReal::logEvalError(const RooAbsReal* originator, const char* origName, const char* message, const char* serverValueString = 0); virtual voidTNamed::ls(Option_t* option = """") const; virtual Double_tRooAbsReal::maxVal(Int_t code) const; voidTObject::MayNotUse(const char* method) const; RooAbsMoment*RooAbsReal::mean(RooRealVar& obs); RooAbsMoment*RooAbsReal::mean(RooRealVar& obs, const RooArgSet& nset); virtual Int_tRooAbsReal::minTrialSamples(const RooArgSet&) const; RooAbsMoment*RooAbsReal::moment(RooRealVar& obs, Int_t order, Bool_t central, Bool_t takeRoot); RooAbsMoment*RooAbsReal::moment(RooRealVar& obs, const RooArgSet& normObs, Int_t order, Bool_t central, Bool_t takeRoot, Bool_t intNormObs); Bool_tRooAbsPdf::mustBeExtended() const; static voidRooPrintable::nameFieldLength(Int_t newLen); const TNamed*RooAbsArg::namePtr() const; const char*RooAbsPdf::normRange() const; virtual Bool_tTObject::Notif",MatchSource.WIKI,root/html534/Roo2DKeysPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DKeysPdf.html
https://root.cern/root/html534/Roo2DKeysPdf.html:21473,Testability,log,logEvalError,21473," other, Bool_t assumeSameType = kFALSE); virtual Bool_tRooAbsArg::isLValue() const; virtual Bool_tRooAbsReal::isOffsetting() const; Bool_tTObject::IsOnHeap() const; Bool_tRooAbsArg::isShapeDirty() const; Bool_tRooAbsArg::isShapeServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isShapeServer(const char* name) const; virtual Bool_tRooAbsArg::IsSortable() const; Bool_tRooAbsArg::isValueDirty() const; Bool_tRooAbsArg::isValueDirtyAndClear() const; Bool_tRooAbsArg::isValueOrShapeDirtyAndClear() const; Bool_tRooAbsArg::isValueServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isValueServer(const char* name) const; Bool_tTObject::IsZombie() const; voidRooAbsArg::leafNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t recurseNonDerived = kFALSE) const; Int_tloadDataSet(RooDataSet& data, TString options); Bool_tRooAbsArg::localNoDirtyInhibit() const; voidRooAbsReal::logEvalError(const char* message, const char* serverValueString = 0) const; static voidRooAbsReal::logEvalError(const RooAbsReal* originator, const char* origName, const char* message, const char* serverValueString = 0); virtual voidTNamed::ls(Option_t* option = """") const; virtual Double_tRooAbsReal::maxVal(Int_t code) const; voidTObject::MayNotUse(const char* method) const; RooAbsMoment*RooAbsReal::mean(RooRealVar& obs); RooAbsMoment*RooAbsReal::mean(RooRealVar& obs, const RooArgSet& nset); virtual Int_tRooAbsReal::minTrialSamples(const RooArgSet&) const; RooAbsMoment*RooAbsReal::moment(RooRealVar& obs, Int_t order, Bool_t central, Bool_t takeRoot); RooAbsMoment*RooAbsReal::moment(RooRealVar& obs, const RooArgSet& normObs, Int_t order, Bool_t central, Bool_t takeRoot, Bool_t intNormObs); Bool_tRooAbsPdf::mustBeExtended() const; static voidRooPrintable::nameFieldLength(Int_t newLen); const TNamed*RooAbsArg::namePtr() const; const char*RooAbsPdf::normRange() const; virtual Bool_tTObject::Notify(); Int_tRooAbsArg::numCaches() const; static Int_tRooAbsReal::numEvalErrorItems(); static Int_tRo",MatchSource.WIKI,root/html534/Roo2DKeysPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DKeysPdf.html
https://root.cern/root/html534/Roo2DKeysPdf.html:22584,Testability,test,testArg,22584," = 0); virtual voidTNamed::ls(Option_t* option = """") const; virtual Double_tRooAbsReal::maxVal(Int_t code) const; voidTObject::MayNotUse(const char* method) const; RooAbsMoment*RooAbsReal::mean(RooRealVar& obs); RooAbsMoment*RooAbsReal::mean(RooRealVar& obs, const RooArgSet& nset); virtual Int_tRooAbsReal::minTrialSamples(const RooArgSet&) const; RooAbsMoment*RooAbsReal::moment(RooRealVar& obs, Int_t order, Bool_t central, Bool_t takeRoot); RooAbsMoment*RooAbsReal::moment(RooRealVar& obs, const RooArgSet& normObs, Int_t order, Bool_t central, Bool_t takeRoot, Bool_t intNormObs); Bool_tRooAbsPdf::mustBeExtended() const; static voidRooPrintable::nameFieldLength(Int_t newLen); const TNamed*RooAbsArg::namePtr() const; const char*RooAbsPdf::normRange() const; virtual Bool_tTObject::Notify(); Int_tRooAbsArg::numCaches() const; static Int_tRooAbsReal::numEvalErrorItems(); static Int_tRooAbsReal::numEvalErrors(); Bool_tRooAbsArg::observableOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::observableOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; virtual Double_tRooAbsReal::offset() const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TNamed&TNamed::operator=(const TNamed& rhs); Bool_tRooAbsReal::operator==(Double_t value) const; virtual Bool_tRooAbsReal::operator==(const RooAbsArg& other); RooAbsArg::OperModeRooAbsArg::operMode() const; virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables); virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables, Roo",MatchSource.WIKI,root/html534/Roo2DKeysPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DKeysPdf.html
https://root.cern/root/html534/Roo2DKeysPdf.html:22679,Testability,test,testArg,22679,"Int_t code) const; voidTObject::MayNotUse(const char* method) const; RooAbsMoment*RooAbsReal::mean(RooRealVar& obs); RooAbsMoment*RooAbsReal::mean(RooRealVar& obs, const RooArgSet& nset); virtual Int_tRooAbsReal::minTrialSamples(const RooArgSet&) const; RooAbsMoment*RooAbsReal::moment(RooRealVar& obs, Int_t order, Bool_t central, Bool_t takeRoot); RooAbsMoment*RooAbsReal::moment(RooRealVar& obs, const RooArgSet& normObs, Int_t order, Bool_t central, Bool_t takeRoot, Bool_t intNormObs); Bool_tRooAbsPdf::mustBeExtended() const; static voidRooPrintable::nameFieldLength(Int_t newLen); const TNamed*RooAbsArg::namePtr() const; const char*RooAbsPdf::normRange() const; virtual Bool_tTObject::Notify(); Int_tRooAbsArg::numCaches() const; static Int_tRooAbsReal::numEvalErrorItems(); static Int_tRooAbsReal::numEvalErrors(); Bool_tRooAbsArg::observableOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::observableOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; virtual Double_tRooAbsReal::offset() const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TNamed&TNamed::operator=(const TNamed& rhs); Bool_tRooAbsReal::operator==(Double_t value) const; virtual Bool_tRooAbsReal::operator==(const RooAbsArg& other); RooAbsArg::OperModeRooAbsArg::operMode() const; virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables); virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables, RooArgSet& optNodes, RooLinkedList& processedNodes); Bool_tRooAbsArg::overlaps(const RooAbsArg& te",MatchSource.WIKI,root/html534/Roo2DKeysPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DKeysPdf.html
https://root.cern/root/html534/Roo2DKeysPdf.html:23681,Testability,test,testArg,23681,"order, Bool_t central, Bool_t takeRoot); RooAbsMoment*RooAbsReal::moment(RooRealVar& obs, const RooArgSet& normObs, Int_t order, Bool_t central, Bool_t takeRoot, Bool_t intNormObs); Bool_tRooAbsPdf::mustBeExtended() const; static voidRooPrintable::nameFieldLength(Int_t newLen); const TNamed*RooAbsArg::namePtr() const; const char*RooAbsPdf::normRange() const; virtual Bool_tTObject::Notify(); Int_tRooAbsArg::numCaches() const; static Int_tRooAbsReal::numEvalErrorItems(); static Int_tRooAbsReal::numEvalErrors(); Bool_tRooAbsArg::observableOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::observableOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; virtual Double_tRooAbsReal::offset() const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TNamed&TNamed::operator=(const TNamed& rhs); Bool_tRooAbsReal::operator==(Double_t value) const; virtual Bool_tRooAbsReal::operator==(const RooAbsArg& other); RooAbsArg::OperModeRooAbsArg::operMode() const; virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables); virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables, RooArgSet& optNodes, RooLinkedList& processedNodes); Bool_tRooAbsArg::overlaps(const RooAbsArg& testArg, Bool_t valueOnly = kFALSE) const; const RooArgSet*RooAbsArg::ownedComponents() const; virtual voidTObject::Paint(Option_t* option = """"); virtual RooPlot*RooAbsPdf::paramOn(RooPlot* frame, const RooAbsData* data, const char* label = """", Int_t sigDigits = 2, Option_t* options = ""NELU"", Double_t xmin = 0.",MatchSource.WIKI,root/html534/Roo2DKeysPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DKeysPdf.html
https://root.cern/root/html534/Roo2DKeysPdf.html:31477,Testability,Test,TestBit,31477,"idTObject::SetUniqueID(UInt_t uid); voidRooAbsReal::setUnit(const char* unit); voidRooAbsArg::setValueDirty() const; voidsetWidthScaleFactor(Double_t widthScaleFactor); TIterator*RooAbsArg::shapeClientIterator() const; RooFIterRooAbsArg::shapeClientMIterator() const; virtual voidShowMembers(TMemberInspector&); RooAbsMoment*RooAbsReal::sigma(RooRealVar& obs); RooAbsMoment*RooAbsReal::sigma(RooRealVar& obs, const RooArgSet& nset); virtual Int_tTNamed::Sizeof() const; RooNumGenConfig*RooAbsPdf::specialGeneratorConfig() const; RooNumGenConfig*RooAbsPdf::specialGeneratorConfig(Bool_t createOnTheFly); RooNumIntConfig*RooAbsReal::specialIntegratorConfig() const; RooNumIntConfig*RooAbsReal::specialIntegratorConfig(Bool_t createOnTheFly); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); const map<std::string,std::string>&RooAbsArg::stringAttributes() const; virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual Bool_tRooAbsPdf::traceEvalHook(Double_t value) const; Bool_tRooAbsPdf::traceEvalPdf(Double_t value) const; const set<std::string>&RooAbsArg::transientAttributes() const; voidRooAbsArg::treeNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t doBranch = kTRUE, Bool_t doLeaf = kTRUE, Bool_t valueOnly = kFALSE, Bool_t recurseNonDerived = kFALSE) const; voidRooAbsArg::unRegisterCache(RooAbsCache& cache); virtual voidTObject::UseCurrentStyle(); TIterator*RooAbsArg::valueClientIterator() const; RooFIterRooAbsArg::valueClientMIterator() const; static voidRooAbsArg::verboseDirty(Bool_t flag); static intRooAbsPdf::verboseEval(); static voidRooAbsPdf::verboseEval(Int_t stat); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; voidRooAbsArg::wireAllCaches(); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* n",MatchSource.WIKI,root/html534/Roo2DKeysPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DKeysPdf.html
https://root.cern/root/html534/Roo2DKeysPdf.html:31516,Testability,Test,TestBits,31516,"dRooAbsReal::setUnit(const char* unit); voidRooAbsArg::setValueDirty() const; voidsetWidthScaleFactor(Double_t widthScaleFactor); TIterator*RooAbsArg::shapeClientIterator() const; RooFIterRooAbsArg::shapeClientMIterator() const; virtual voidShowMembers(TMemberInspector&); RooAbsMoment*RooAbsReal::sigma(RooRealVar& obs); RooAbsMoment*RooAbsReal::sigma(RooRealVar& obs, const RooArgSet& nset); virtual Int_tTNamed::Sizeof() const; RooNumGenConfig*RooAbsPdf::specialGeneratorConfig() const; RooNumGenConfig*RooAbsPdf::specialGeneratorConfig(Bool_t createOnTheFly); RooNumIntConfig*RooAbsReal::specialIntegratorConfig() const; RooNumIntConfig*RooAbsReal::specialIntegratorConfig(Bool_t createOnTheFly); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); const map<std::string,std::string>&RooAbsArg::stringAttributes() const; virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual Bool_tRooAbsPdf::traceEvalHook(Double_t value) const; Bool_tRooAbsPdf::traceEvalPdf(Double_t value) const; const set<std::string>&RooAbsArg::transientAttributes() const; voidRooAbsArg::treeNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t doBranch = kTRUE, Bool_t doLeaf = kTRUE, Bool_t valueOnly = kFALSE, Bool_t recurseNonDerived = kFALSE) const; voidRooAbsArg::unRegisterCache(RooAbsCache& cache); virtual voidTObject::UseCurrentStyle(); TIterator*RooAbsArg::valueClientIterator() const; RooFIterRooAbsArg::valueClientMIterator() const; static voidRooAbsArg::verboseDirty(Bool_t flag); static intRooAbsPdf::verboseEval(); static voidRooAbsPdf::verboseEval(Int_t stat); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; voidRooAbsArg::wireAllCaches(); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize",MatchSource.WIKI,root/html534/Roo2DKeysPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DKeysPdf.html
https://root.cern/root/html534/Roo2DKeysPdf.html:2751,Usability,Clear,Clear,2751,"onst; virtual list<Double_t>*RooAbsReal::binBoundaries(RooAbsRealLValue&, Double_t, Double_t) const; RooAbsFunc*RooAbsReal::bindVars(const RooArgSet& vars, const RooArgSet* nset = 0, Bool_t clipInvalid = kFALSE) const; voidRooAbsArg::branchNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t recurseNonDerived = kFALSE) const; virtual voidTObject::Browse(TBrowser* b); virtual const char*RooAbsArg::cacheUniqueSuffix() const; Int_tcalculateBandWidth(Int_t kernel = -999); Bool_tRooAbsPdf::canBeExtended() const; virtual RooAbsArg::CacheModeRooAbsArg::canNodeBeCached() const; voidRooAbsArg::changeServer(RooAbsArg& server, Bool_t valueProp, Bool_t shapeProp); Bool_tRooAbsArg::checkDependents(const RooArgSet* nset) const; virtual Bool_tRooAbsArg::checkObservables(const RooArgSet* nset) const; virtual RooFitResult*RooAbsPdf::chi2FitTo(RooDataHist& data, const RooLinkedList& cmdList); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); static voidRooAbsPdf::clearEvalError(); static voidRooAbsReal::clearEvalErrorLog(); voidRooAbsArg::clearShapeDirty() const; voidRooAbsArg::clearValueAndShapeDirty() const; voidRooAbsArg::clearValueDirty() const; TIterator*RooAbsArg::clientIterator() const; virtual TObject*clone(const char* newname) const; virtual TObject*RooAbsArg::Clone(const char* newname = 0) const; virtual RooAbsArg*RooAbsArg::cloneTree(const char* newname = 0) const; virtual Int_tRooAbsArg::Compare(const TObject* other) const; virtual voidRooAbsArg::constOptimizeTestStatistic(RooAbsArg::ConstOpCode opcode, Bool_t doAlsoTrackingOpt = kTRUE); virtual voidTNamed::Copy(TObject& named) const; static UInt_tRooAbsArg::crc32(const char* data); static UInt_tRooAbsArg::crc32(const char* data, ULong_t sz, UInt_t crc = 0); RooAbsReal*RooAbsPdf::createCdf(const RooArgSet& iset, const RooArgSet& nset = RooArgSet()); RooAbsReal*RooAbsPdf::createCdf(const RooArgSet& iset, const RooCmdArg& arg1, const Ro",MatchSource.WIKI,root/html534/Roo2DKeysPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DKeysPdf.html
https://root.cern/root/html534/Roo2DKeysPdf.html:2803,Usability,clear,clearEvalError,2803,"ooAbsRealLValue&, Double_t, Double_t) const; RooAbsFunc*RooAbsReal::bindVars(const RooArgSet& vars, const RooArgSet* nset = 0, Bool_t clipInvalid = kFALSE) const; voidRooAbsArg::branchNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t recurseNonDerived = kFALSE) const; virtual voidTObject::Browse(TBrowser* b); virtual const char*RooAbsArg::cacheUniqueSuffix() const; Int_tcalculateBandWidth(Int_t kernel = -999); Bool_tRooAbsPdf::canBeExtended() const; virtual RooAbsArg::CacheModeRooAbsArg::canNodeBeCached() const; voidRooAbsArg::changeServer(RooAbsArg& server, Bool_t valueProp, Bool_t shapeProp); Bool_tRooAbsArg::checkDependents(const RooArgSet* nset) const; virtual Bool_tRooAbsArg::checkObservables(const RooArgSet* nset) const; virtual RooFitResult*RooAbsPdf::chi2FitTo(RooDataHist& data, const RooLinkedList& cmdList); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); static voidRooAbsPdf::clearEvalError(); static voidRooAbsReal::clearEvalErrorLog(); voidRooAbsArg::clearShapeDirty() const; voidRooAbsArg::clearValueAndShapeDirty() const; voidRooAbsArg::clearValueDirty() const; TIterator*RooAbsArg::clientIterator() const; virtual TObject*clone(const char* newname) const; virtual TObject*RooAbsArg::Clone(const char* newname = 0) const; virtual RooAbsArg*RooAbsArg::cloneTree(const char* newname = 0) const; virtual Int_tRooAbsArg::Compare(const TObject* other) const; virtual voidRooAbsArg::constOptimizeTestStatistic(RooAbsArg::ConstOpCode opcode, Bool_t doAlsoTrackingOpt = kTRUE); virtual voidTNamed::Copy(TObject& named) const; static UInt_tRooAbsArg::crc32(const char* data); static UInt_tRooAbsArg::crc32(const char* data, ULong_t sz, UInt_t crc = 0); RooAbsReal*RooAbsPdf::createCdf(const RooArgSet& iset, const RooArgSet& nset = RooArgSet()); RooAbsReal*RooAbsPdf::createCdf(const RooArgSet& iset, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 ",MatchSource.WIKI,root/html534/Roo2DKeysPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DKeysPdf.html
https://root.cern/root/html534/Roo2DKeysPdf.html:2844,Usability,clear,clearEvalErrorLog,2844,"; RooAbsFunc*RooAbsReal::bindVars(const RooArgSet& vars, const RooArgSet* nset = 0, Bool_t clipInvalid = kFALSE) const; voidRooAbsArg::branchNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t recurseNonDerived = kFALSE) const; virtual voidTObject::Browse(TBrowser* b); virtual const char*RooAbsArg::cacheUniqueSuffix() const; Int_tcalculateBandWidth(Int_t kernel = -999); Bool_tRooAbsPdf::canBeExtended() const; virtual RooAbsArg::CacheModeRooAbsArg::canNodeBeCached() const; voidRooAbsArg::changeServer(RooAbsArg& server, Bool_t valueProp, Bool_t shapeProp); Bool_tRooAbsArg::checkDependents(const RooArgSet* nset) const; virtual Bool_tRooAbsArg::checkObservables(const RooArgSet* nset) const; virtual RooFitResult*RooAbsPdf::chi2FitTo(RooDataHist& data, const RooLinkedList& cmdList); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); static voidRooAbsPdf::clearEvalError(); static voidRooAbsReal::clearEvalErrorLog(); voidRooAbsArg::clearShapeDirty() const; voidRooAbsArg::clearValueAndShapeDirty() const; voidRooAbsArg::clearValueDirty() const; TIterator*RooAbsArg::clientIterator() const; virtual TObject*clone(const char* newname) const; virtual TObject*RooAbsArg::Clone(const char* newname = 0) const; virtual RooAbsArg*RooAbsArg::cloneTree(const char* newname = 0) const; virtual Int_tRooAbsArg::Compare(const TObject* other) const; virtual voidRooAbsArg::constOptimizeTestStatistic(RooAbsArg::ConstOpCode opcode, Bool_t doAlsoTrackingOpt = kTRUE); virtual voidTNamed::Copy(TObject& named) const; static UInt_tRooAbsArg::crc32(const char* data); static UInt_tRooAbsArg::crc32(const char* data, ULong_t sz, UInt_t crc = 0); RooAbsReal*RooAbsPdf::createCdf(const RooArgSet& iset, const RooArgSet& nset = RooArgSet()); RooAbsReal*RooAbsPdf::createCdf(const RooArgSet& iset, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4",MatchSource.WIKI,root/html534/Roo2DKeysPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DKeysPdf.html
https://root.cern/root/html534/Roo2DKeysPdf.html:2880,Usability,clear,clearShapeDirty,2880,"onst RooArgSet& vars, const RooArgSet* nset = 0, Bool_t clipInvalid = kFALSE) const; voidRooAbsArg::branchNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t recurseNonDerived = kFALSE) const; virtual voidTObject::Browse(TBrowser* b); virtual const char*RooAbsArg::cacheUniqueSuffix() const; Int_tcalculateBandWidth(Int_t kernel = -999); Bool_tRooAbsPdf::canBeExtended() const; virtual RooAbsArg::CacheModeRooAbsArg::canNodeBeCached() const; voidRooAbsArg::changeServer(RooAbsArg& server, Bool_t valueProp, Bool_t shapeProp); Bool_tRooAbsArg::checkDependents(const RooArgSet* nset) const; virtual Bool_tRooAbsArg::checkObservables(const RooArgSet* nset) const; virtual RooFitResult*RooAbsPdf::chi2FitTo(RooDataHist& data, const RooLinkedList& cmdList); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); static voidRooAbsPdf::clearEvalError(); static voidRooAbsReal::clearEvalErrorLog(); voidRooAbsArg::clearShapeDirty() const; voidRooAbsArg::clearValueAndShapeDirty() const; voidRooAbsArg::clearValueDirty() const; TIterator*RooAbsArg::clientIterator() const; virtual TObject*clone(const char* newname) const; virtual TObject*RooAbsArg::Clone(const char* newname = 0) const; virtual RooAbsArg*RooAbsArg::cloneTree(const char* newname = 0) const; virtual Int_tRooAbsArg::Compare(const TObject* other) const; virtual voidRooAbsArg::constOptimizeTestStatistic(RooAbsArg::ConstOpCode opcode, Bool_t doAlsoTrackingOpt = kTRUE); virtual voidTNamed::Copy(TObject& named) const; static UInt_tRooAbsArg::crc32(const char* data); static UInt_tRooAbsArg::crc32(const char* data, ULong_t sz, UInt_t crc = 0); RooAbsReal*RooAbsPdf::createCdf(const RooArgSet& iset, const RooArgSet& nset = RooArgSet()); RooAbsReal*RooAbsPdf::createCdf(const RooArgSet& iset, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdA",MatchSource.WIKI,root/html534/Roo2DKeysPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DKeysPdf.html
https://root.cern/root/html534/Roo2DKeysPdf.html:2920,Usability,clear,clearValueAndShapeDirty,2920,"= 0, Bool_t clipInvalid = kFALSE) const; voidRooAbsArg::branchNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t recurseNonDerived = kFALSE) const; virtual voidTObject::Browse(TBrowser* b); virtual const char*RooAbsArg::cacheUniqueSuffix() const; Int_tcalculateBandWidth(Int_t kernel = -999); Bool_tRooAbsPdf::canBeExtended() const; virtual RooAbsArg::CacheModeRooAbsArg::canNodeBeCached() const; voidRooAbsArg::changeServer(RooAbsArg& server, Bool_t valueProp, Bool_t shapeProp); Bool_tRooAbsArg::checkDependents(const RooArgSet* nset) const; virtual Bool_tRooAbsArg::checkObservables(const RooArgSet* nset) const; virtual RooFitResult*RooAbsPdf::chi2FitTo(RooDataHist& data, const RooLinkedList& cmdList); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); static voidRooAbsPdf::clearEvalError(); static voidRooAbsReal::clearEvalErrorLog(); voidRooAbsArg::clearShapeDirty() const; voidRooAbsArg::clearValueAndShapeDirty() const; voidRooAbsArg::clearValueDirty() const; TIterator*RooAbsArg::clientIterator() const; virtual TObject*clone(const char* newname) const; virtual TObject*RooAbsArg::Clone(const char* newname = 0) const; virtual RooAbsArg*RooAbsArg::cloneTree(const char* newname = 0) const; virtual Int_tRooAbsArg::Compare(const TObject* other) const; virtual voidRooAbsArg::constOptimizeTestStatistic(RooAbsArg::ConstOpCode opcode, Bool_t doAlsoTrackingOpt = kTRUE); virtual voidTNamed::Copy(TObject& named) const; static UInt_tRooAbsArg::crc32(const char* data); static UInt_tRooAbsArg::crc32(const char* data, ULong_t sz, UInt_t crc = 0); RooAbsReal*RooAbsPdf::createCdf(const RooArgSet& iset, const RooArgSet& nset = RooArgSet()); RooAbsReal*RooAbsPdf::createCdf(const RooArgSet& iset, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdAr",MatchSource.WIKI,root/html534/Roo2DKeysPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DKeysPdf.html
https://root.cern/root/html534/Roo2DKeysPdf.html:2968,Usability,clear,clearValueDirty,2968,"dRooAbsArg::branchNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t recurseNonDerived = kFALSE) const; virtual voidTObject::Browse(TBrowser* b); virtual const char*RooAbsArg::cacheUniqueSuffix() const; Int_tcalculateBandWidth(Int_t kernel = -999); Bool_tRooAbsPdf::canBeExtended() const; virtual RooAbsArg::CacheModeRooAbsArg::canNodeBeCached() const; voidRooAbsArg::changeServer(RooAbsArg& server, Bool_t valueProp, Bool_t shapeProp); Bool_tRooAbsArg::checkDependents(const RooArgSet* nset) const; virtual Bool_tRooAbsArg::checkObservables(const RooArgSet* nset) const; virtual RooFitResult*RooAbsPdf::chi2FitTo(RooDataHist& data, const RooLinkedList& cmdList); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); static voidRooAbsPdf::clearEvalError(); static voidRooAbsReal::clearEvalErrorLog(); voidRooAbsArg::clearShapeDirty() const; voidRooAbsArg::clearValueAndShapeDirty() const; voidRooAbsArg::clearValueDirty() const; TIterator*RooAbsArg::clientIterator() const; virtual TObject*clone(const char* newname) const; virtual TObject*RooAbsArg::Clone(const char* newname = 0) const; virtual RooAbsArg*RooAbsArg::cloneTree(const char* newname = 0) const; virtual Int_tRooAbsArg::Compare(const TObject* other) const; virtual voidRooAbsArg::constOptimizeTestStatistic(RooAbsArg::ConstOpCode opcode, Bool_t doAlsoTrackingOpt = kTRUE); virtual voidTNamed::Copy(TObject& named) const; static UInt_tRooAbsArg::crc32(const char* data); static UInt_tRooAbsArg::crc32(const char* data, ULong_t sz, UInt_t crc = 0); RooAbsReal*RooAbsPdf::createCdf(const RooArgSet& iset, const RooArgSet& nset = RooArgSet()); RooAbsReal*RooAbsPdf::createCdf(const RooArgSet& iset, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg",MatchSource.WIKI,root/html534/Roo2DKeysPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DKeysPdf.html
https://root.cern/root/html534/Roo2DMomentMorphFunction.html:10264,Availability,Error,Error,10264,,MatchSource.WIKI,root/html534/Roo2DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DMomentMorphFunction.html
https://root.cern/root/html534/Roo2DMomentMorphFunction.html:10397,Availability,Error,ErrorLoggingModeRooAbsReal,10397,,MatchSource.WIKI,root/html534/Roo2DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DMomentMorphFunction.html
https://root.cern/root/html534/Roo2DMomentMorphFunction.html:10525,Availability,error,error,10525,,MatchSource.WIKI,root/html534/Roo2DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DMomentMorphFunction.html
https://root.cern/root/html534/Roo2DMomentMorphFunction.html:10609,Availability,error,error,10609,,MatchSource.WIKI,root/html534/Roo2DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DMomentMorphFunction.html
https://root.cern/root/html534/Roo2DMomentMorphFunction.html:24442,Availability,Error,ErrorLoggingMode,24442,"eServer(RooAbsArg& oldServer, RooAbsArg& newServer, Bool_t valueProp, Bool_t shapeProp); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); TIterator*RooAbsArg::serverIterator() const; RooFIterRooAbsArg::serverMIterator() const; virtual voidRooAbsArg::serverNameChangeHook(const RooAbsArg*, const RooAbsArg*); voidRooAbsArg::setAttribute(const Text_t* name, Bool_t value = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidRooAbsArg::setCacheAndTrackHints(RooArgSet&); static voidRooAbsReal::setCacheCheck(Bool_t flag); virtual Bool_tRooAbsReal::setData(RooAbsData&, Bool_t = kTRUE); static voidRooAbsArg::setDirtyInhibit(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidRooAbsReal::setEvalErrorLoggingMode(RooAbsReal::ErrorLoggingMode m); virtual voidRooAbsArg::setExpensiveObjectCache(RooExpensiveObjectCache& cache); static voidRooAbsReal::setHideOffset(Bool_t flag); voidRooAbsReal::setIntegratorConfig(); voidRooAbsReal::setIntegratorConfig(const RooNumIntConfig& config); voidRooAbsArg::setLocalNoDirtyInhibit(Bool_t flag) const; voidsetMode(const Roo2DMomentMorphFunction::Setting& setting); virtual voidRooAbsArg::SetName(const char* name); virtual voidRooAbsArg::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsArg::setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); voidRooAbsReal::setParameterizeIntegral(const RooArgSet& paramVars); voidRooAbsReal::setPlotLabel(const char* label); voidRooAbsArg::setProhibitServerRedirect(Bool_t flag); voidRooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsArg::setTransientA",MatchSource.WIKI,root/html534/Roo2DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DMomentMorphFunction.html
https://root.cern/root/html534/Roo2DMomentMorphFunction.html:32463,Availability,Error,ErrorLoggingMode,32463,"Side(const double& p1x, const double& p1y, const double& p2x, const double& p2y, const double& ax, const double& ay, const double& bx, const double& by) const; Bool_tpointInSquare(const double& px, const double& py, const double& ax, const double& ay, const double& bx, const double& by, const double& cx, const double& cy, const double& dx, const double& dy) const; Bool_tpointInTriangle(const double& px, const double& py, const double& ax, const double& ay, const double& bx, const double& by, const double& cx, const double& cy) const. Data Members; public:. enum Setting { Linear; LinearPosFractions; };; enum RooAbsReal::ScaleType { Raw; Relative; NumEvent; RelativeExpected; };; enum RooAbsReal::ErrorLoggingMode { PrintErrors; CollectErrors; CountErrors; Ignore; };; enum RooAbsArg::ConstOpCode { Activate; DeActivate; ConfigChange; ValueChange; };; enum RooAbsArg::CacheMode { Always; NotAdvised; Never; };; enum RooAbsArg::OperMode { Auto; AClean; ADirty; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };; enum RooPrintable::ContentsOption { kName; kClassName; kValue; kArgs; kExtras; kAddress; kTitle; kCollectionHeader; };; enum RooPrintable::StyleOption { kInline; kSingleLine; kStandard; kVerbose; kTreeStructure; };. public:. static map<RooAbsArg*,TRefArray*>RooAbsArg::_ioEvoListtemporary holding list for proxies needed in schema evolution ; static stack<RooAbsArg*>RooAbsArg::_ioReadStackreading stack ; static const UInt_tRooAbsArg::fnv1a32start; static const ULong64_tRooAbsArg::fnv1a64start. protected:. TMatrixD_MSqr; set<std::string>RooAbsArg::_boolAttribBoolean attributes; set<std::string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); Bool_tRooAbsReal::_boolValue! Transient cache for bool values from tree branches ; UChar_tRooAb",MatchSource.WIKI,root/html534/Roo2DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DMomentMorphFunction.html
https://root.cern/root/html534/Roo2DMomentMorphFunction.html:34801,Deployability,integrat,integration,34801," attributes; set<std::string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); Bool_tRooAbsReal::_boolValue! Transient cache for bool values from tree branches ; UChar_tRooAbsReal::_byteValue! Transient cache for byte values from tree branches ; static Bool_tRooAbsReal::_cacheCheckIf true, always validate contents of clean which outcome of evaluate(); deque<RooAbsCache*>RooAbsArg::_cacheListlist of caches; RooRefCountListRooAbsArg::_clientListlist of client objects; RooRefCountListRooAbsArg::_clientListShapesubset of clients that requested shape dirty flag propagation; RooRefCountListRooAbsArg::_clientListValuesubset of clients that requested value dirty flag propagation; TIterator*RooAbsArg::_clientShapeIter! Iterator over _clientListShape ; TIterator*RooAbsArg::_clientValueIter! Iterator over _clientListValue ; Bool_tRooAbsArg::_deleteWatch! Delete watch flag ; RooExpensiveObjectCache*RooAbsArg::_eocachePointer to global cache manager for any expensive components created by this object; Bool_tRooAbsArg::_fastAllow fast access mode in getVal() and proxies; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; TVectorD_frac; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsReal::_hideOffsetOffset hiding flag; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; Bool_tRooAbsArg::_isConstant! Cached isConstant status ; Int_t_ixmax; Int_t_ixmin; Int_t_iymax; Int_t_iymin; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; TMatrixD_mref; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist.",MatchSource.WIKI,root/html534/Roo2DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DMomentMorphFunction.html
https://root.cern/root/html534/Roo2DMomentMorphFunction.html:36482,Deployability,integrat,integrator,36482,"ooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; TMatrixD_mref; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist. Pointer to global instance of string that matches object named; Int_t_npoints; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Roo2DMomentMorphFunction::Setting_setting; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; int_squareIdx[4]; TMatrixD_squareVec; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; Bool_t_verbose; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooRealProxym1; RooRealProxym2. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Roo2DMomentMorphFunction(const char* name, const char* title, RooAbsReal& _m1, ",MatchSource.WIKI,root/html534/Roo2DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DMomentMorphFunction.html
https://root.cern/root/html534/Roo2DMomentMorphFunction.html:36493,Deployability,configurat,configuration,36493,"ooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; TMatrixD_mref; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist. Pointer to global instance of string that matches object named; Int_t_npoints; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Roo2DMomentMorphFunction::Setting_setting; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; int_squareIdx[4]; TMatrixD_squareVec; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; Bool_t_verbose; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooRealProxym1; RooRealProxym2. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Roo2DMomentMorphFunction(const char* name, const char* title, RooAbsReal& _m1, ",MatchSource.WIKI,root/html534/Roo2DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DMomentMorphFunction.html
https://root.cern/root/html534/Roo2DMomentMorphFunction.html:7854,Integrability,depend,dependentVars,7854,"const char* rangeName = 0) const; virtual RooAbsReal*RooAbsReal::createIntegral(const RooArgSet& iset, const RooArgSet* nset = 0, const RooNumIntConfig* cfg = 0, const char* rangeName = 0) const; RooAbsReal*RooAbsReal::createIntegral(const RooArgSet& iset, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()) const; RooAbsReal*RooAbsReal::createIntRI(const RooArgSet& iset, const RooArgSet& nset = RooArgSet()); const RooAbsReal*RooAbsReal::createPlotProjection(const RooArgSet& depVars, const RooArgSet& projVars) const; const RooAbsReal*RooAbsReal::createPlotProjection(const RooArgSet& depVars, const RooArgSet& projVars, RooArgSet*& cloneSet) const; const RooAbsReal*RooAbsReal::createPlotProjection(const RooArgSet& dependentVars, const RooArgSet* projectedVars, RooArgSet*& cloneSet, const char* rangeName = 0, const RooArgSet* condObs = 0) const; virtual RooAbsReal*RooAbsReal::createProfile(const RooArgSet& paramsOfInterest); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooArgSet& nset = RooArgSet()); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); RooAbsReal*RooAbsReal::createScanRI(const RooArgSet& iset, const RooArgSet& nset, Int_t numScanBins, Int_t intOrder); virtual Double_tRooAbsReal::defaultErrorLevel() const; static RooNumIntConfig*RooAbsReal::defaultIntegratorConfig(); virtual Int_tRooAbsArg::defaultPrintContents(Option_t* opt)",MatchSource.WIKI,root/html534/Roo2DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DMomentMorphFunction.html
https://root.cern/root/html534/Roo2DMomentMorphFunction.html:9096,Integrability,depend,dependentOverlaps,9096,"l*RooAbsReal::createPlotProjection(const RooArgSet& dependentVars, const RooArgSet* projectedVars, RooArgSet*& cloneSet, const char* rangeName = 0, const RooArgSet* condObs = 0) const; virtual RooAbsReal*RooAbsReal::createProfile(const RooArgSet& paramsOfInterest); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooArgSet& nset = RooArgSet()); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); RooAbsReal*RooAbsReal::createScanRI(const RooArgSet& iset, const RooArgSet& nset, Int_t numScanBins, Int_t intOrder); virtual Double_tRooAbsReal::defaultErrorLevel() const; static RooNumIntConfig*RooAbsReal::defaultIntegratorConfig(); virtual Int_tRooAbsArg::defaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooPrintable::defaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Bool_tRooAbsArg::dependentOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependentOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependsOn(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOn(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0) const; RooDerivative*RooAbsReal::derivative(RooRealVar& obs, Int_t order = 1, Double_t eps = 0.",MatchSource.WIKI,root/html534/Roo2DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DMomentMorphFunction.html
https://root.cern/root/html534/Roo2DMomentMorphFunction.html:9188,Integrability,depend,dependentOverlaps,9188,"l*RooAbsReal::createPlotProjection(const RooArgSet& dependentVars, const RooArgSet* projectedVars, RooArgSet*& cloneSet, const char* rangeName = 0, const RooArgSet* condObs = 0) const; virtual RooAbsReal*RooAbsReal::createProfile(const RooArgSet& paramsOfInterest); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooArgSet& nset = RooArgSet()); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); RooAbsReal*RooAbsReal::createScanRI(const RooArgSet& iset, const RooArgSet& nset, Int_t numScanBins, Int_t intOrder); virtual Double_tRooAbsReal::defaultErrorLevel() const; static RooNumIntConfig*RooAbsReal::defaultIntegratorConfig(); virtual Int_tRooAbsArg::defaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooPrintable::defaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Bool_tRooAbsArg::dependentOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependentOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependsOn(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOn(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0) const; RooDerivative*RooAbsReal::derivative(RooRealVar& obs, Int_t order = 1, Double_t eps = 0.",MatchSource.WIKI,root/html534/Roo2DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DMomentMorphFunction.html
https://root.cern/root/html534/Roo2DMomentMorphFunction.html:9282,Integrability,depend,dependsOn,9282,"l*RooAbsReal::createPlotProjection(const RooArgSet& dependentVars, const RooArgSet* projectedVars, RooArgSet*& cloneSet, const char* rangeName = 0, const RooArgSet* condObs = 0) const; virtual RooAbsReal*RooAbsReal::createProfile(const RooArgSet& paramsOfInterest); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooArgSet& nset = RooArgSet()); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); RooAbsReal*RooAbsReal::createScanRI(const RooArgSet& iset, const RooArgSet& nset, Int_t numScanBins, Int_t intOrder); virtual Double_tRooAbsReal::defaultErrorLevel() const; static RooNumIntConfig*RooAbsReal::defaultIntegratorConfig(); virtual Int_tRooAbsArg::defaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooPrintable::defaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Bool_tRooAbsArg::dependentOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependentOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependsOn(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOn(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0) const; RooDerivative*RooAbsReal::derivative(RooRealVar& obs, Int_t order = 1, Double_t eps = 0.",MatchSource.WIKI,root/html534/Roo2DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DMomentMorphFunction.html
https://root.cern/root/html534/Roo2DMomentMorphFunction.html:9411,Integrability,depend,dependsOn,9411,"l*RooAbsReal::createPlotProjection(const RooArgSet& dependentVars, const RooArgSet* projectedVars, RooArgSet*& cloneSet, const char* rangeName = 0, const RooArgSet* condObs = 0) const; virtual RooAbsReal*RooAbsReal::createProfile(const RooArgSet& paramsOfInterest); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooArgSet& nset = RooArgSet()); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); RooAbsReal*RooAbsReal::createScanRI(const RooArgSet& iset, const RooArgSet& nset, Int_t numScanBins, Int_t intOrder); virtual Double_tRooAbsReal::defaultErrorLevel() const; static RooNumIntConfig*RooAbsReal::defaultIntegratorConfig(); virtual Int_tRooAbsArg::defaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooPrintable::defaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Bool_tRooAbsArg::dependentOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependentOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependsOn(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOn(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0) const; RooDerivative*RooAbsReal::derivative(RooRealVar& obs, Int_t order = 1, Double_t eps = 0.",MatchSource.WIKI,root/html534/Roo2DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DMomentMorphFunction.html
https://root.cern/root/html534/Roo2DMomentMorphFunction.html:9529,Integrability,depend,dependsOnValue,9529,"l*RooAbsReal::createPlotProjection(const RooArgSet& dependentVars, const RooArgSet* projectedVars, RooArgSet*& cloneSet, const char* rangeName = 0, const RooArgSet* condObs = 0) const; virtual RooAbsReal*RooAbsReal::createProfile(const RooArgSet& paramsOfInterest); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooArgSet& nset = RooArgSet()); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); RooAbsReal*RooAbsReal::createScanRI(const RooArgSet& iset, const RooArgSet& nset, Int_t numScanBins, Int_t intOrder); virtual Double_tRooAbsReal::defaultErrorLevel() const; static RooNumIntConfig*RooAbsReal::defaultIntegratorConfig(); virtual Int_tRooAbsArg::defaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooPrintable::defaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Bool_tRooAbsArg::dependentOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependentOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependsOn(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOn(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0) const; RooDerivative*RooAbsReal::derivative(RooRealVar& obs, Int_t order = 1, Double_t eps = 0.",MatchSource.WIKI,root/html534/Roo2DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DMomentMorphFunction.html
https://root.cern/root/html534/Roo2DMomentMorphFunction.html:9636,Integrability,depend,dependsOnValue,9636,"l*RooAbsReal::createPlotProjection(const RooArgSet& dependentVars, const RooArgSet* projectedVars, RooArgSet*& cloneSet, const char* rangeName = 0, const RooArgSet* condObs = 0) const; virtual RooAbsReal*RooAbsReal::createProfile(const RooArgSet& paramsOfInterest); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooArgSet& nset = RooArgSet()); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); RooAbsReal*RooAbsReal::createScanRI(const RooArgSet& iset, const RooArgSet& nset, Int_t numScanBins, Int_t intOrder); virtual Double_tRooAbsReal::defaultErrorLevel() const; static RooNumIntConfig*RooAbsReal::defaultIntegratorConfig(); virtual Int_tRooAbsArg::defaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooPrintable::defaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Bool_tRooAbsArg::dependentOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependentOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependsOn(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOn(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0) const; RooDerivative*RooAbsReal::derivative(RooRealVar& obs, Int_t order = 1, Double_t eps = 0.",MatchSource.WIKI,root/html534/Roo2DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DMomentMorphFunction.html
https://root.cern/root/html534/Roo2DMomentMorphFunction.html:17819,Integrability,message,message,17819,"TObject::IsFolder() const; virtual Bool_tRooAbsArg::isFundamental() const; virtual Bool_tRooAbsReal::isIdentical(const RooAbsArg& other, Bool_t assumeSameType = kFALSE); virtual Bool_tRooAbsArg::isLValue() const; virtual Bool_tRooAbsReal::isOffsetting() const; Bool_tTObject::IsOnHeap() const; Bool_tRooAbsArg::isShapeDirty() const; Bool_tRooAbsArg::isShapeServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isShapeServer(const char* name) const; virtual Bool_tRooAbsArg::IsSortable() const; Bool_tRooAbsArg::isValueDirty() const; Bool_tRooAbsArg::isValueDirtyAndClear() const; Bool_tRooAbsArg::isValueOrShapeDirtyAndClear() const; Bool_tRooAbsArg::isValueServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isValueServer(const char* name) const; Bool_tTObject::IsZombie() const; voidRooAbsArg::leafNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t recurseNonDerived = kFALSE) const; Bool_tRooAbsArg::localNoDirtyInhibit() const; voidRooAbsReal::logEvalError(const char* message, const char* serverValueString = 0) const; static voidRooAbsReal::logEvalError(const RooAbsReal* originator, const char* origName, const char* message, const char* serverValueString = 0); virtual voidTNamed::ls(Option_t* option = """") const; virtual Double_tRooAbsReal::maxVal(Int_t code) const; voidTObject::MayNotUse(const char* method) const; RooAbsMoment*RooAbsReal::mean(RooRealVar& obs); RooAbsMoment*RooAbsReal::mean(RooRealVar& obs, const RooArgSet& nset); virtual Int_tRooAbsReal::minTrialSamples(const RooArgSet&) const; RooAbsMoment*RooAbsReal::moment(RooRealVar& obs, Int_t order, Bool_t central, Bool_t takeRoot); RooAbsMoment*RooAbsReal::moment(RooRealVar& obs, const RooArgSet& normObs, Int_t order, Bool_t central, Bool_t takeRoot, Bool_t intNormObs); static voidRooPrintable::nameFieldLength(Int_t newLen); const TNamed*RooAbsArg::namePtr() const; virtual Bool_tTObject::Notify(); Int_tRooAbsArg::numCaches() const; static Int_tRooAbsReal::numEvalErrorItems(); static Int_tRooAbsR",MatchSource.WIKI,root/html534/Roo2DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DMomentMorphFunction.html
https://root.cern/root/html534/Roo2DMomentMorphFunction.html:17970,Integrability,message,message,17970,"ameType = kFALSE); virtual Bool_tRooAbsArg::isLValue() const; virtual Bool_tRooAbsReal::isOffsetting() const; Bool_tTObject::IsOnHeap() const; Bool_tRooAbsArg::isShapeDirty() const; Bool_tRooAbsArg::isShapeServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isShapeServer(const char* name) const; virtual Bool_tRooAbsArg::IsSortable() const; Bool_tRooAbsArg::isValueDirty() const; Bool_tRooAbsArg::isValueDirtyAndClear() const; Bool_tRooAbsArg::isValueOrShapeDirtyAndClear() const; Bool_tRooAbsArg::isValueServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isValueServer(const char* name) const; Bool_tTObject::IsZombie() const; voidRooAbsArg::leafNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t recurseNonDerived = kFALSE) const; Bool_tRooAbsArg::localNoDirtyInhibit() const; voidRooAbsReal::logEvalError(const char* message, const char* serverValueString = 0) const; static voidRooAbsReal::logEvalError(const RooAbsReal* originator, const char* origName, const char* message, const char* serverValueString = 0); virtual voidTNamed::ls(Option_t* option = """") const; virtual Double_tRooAbsReal::maxVal(Int_t code) const; voidTObject::MayNotUse(const char* method) const; RooAbsMoment*RooAbsReal::mean(RooRealVar& obs); RooAbsMoment*RooAbsReal::mean(RooRealVar& obs, const RooArgSet& nset); virtual Int_tRooAbsReal::minTrialSamples(const RooArgSet&) const; RooAbsMoment*RooAbsReal::moment(RooRealVar& obs, Int_t order, Bool_t central, Bool_t takeRoot); RooAbsMoment*RooAbsReal::moment(RooRealVar& obs, const RooArgSet& normObs, Int_t order, Bool_t central, Bool_t takeRoot, Bool_t intNormObs); static voidRooPrintable::nameFieldLength(Int_t newLen); const TNamed*RooAbsArg::namePtr() const; virtual Bool_tTObject::Notify(); Int_tRooAbsArg::numCaches() const; static Int_tRooAbsReal::numEvalErrorItems(); static Int_tRooAbsReal::numEvalErrors(); Bool_tRooAbsArg::observableOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::observableOverlaps(",MatchSource.WIKI,root/html534/Roo2DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DMomentMorphFunction.html
https://root.cern/root/html534/Roo2DMomentMorphFunction.html:34801,Integrability,integrat,integration,34801," attributes; set<std::string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); Bool_tRooAbsReal::_boolValue! Transient cache for bool values from tree branches ; UChar_tRooAbsReal::_byteValue! Transient cache for byte values from tree branches ; static Bool_tRooAbsReal::_cacheCheckIf true, always validate contents of clean which outcome of evaluate(); deque<RooAbsCache*>RooAbsArg::_cacheListlist of caches; RooRefCountListRooAbsArg::_clientListlist of client objects; RooRefCountListRooAbsArg::_clientListShapesubset of clients that requested shape dirty flag propagation; RooRefCountListRooAbsArg::_clientListValuesubset of clients that requested value dirty flag propagation; TIterator*RooAbsArg::_clientShapeIter! Iterator over _clientListShape ; TIterator*RooAbsArg::_clientValueIter! Iterator over _clientListValue ; Bool_tRooAbsArg::_deleteWatch! Delete watch flag ; RooExpensiveObjectCache*RooAbsArg::_eocachePointer to global cache manager for any expensive components created by this object; Bool_tRooAbsArg::_fastAllow fast access mode in getVal() and proxies; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; TVectorD_frac; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsReal::_hideOffsetOffset hiding flag; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; Bool_tRooAbsArg::_isConstant! Cached isConstant status ; Int_t_ixmax; Int_t_ixmin; Int_t_iymax; Int_t_iymin; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; TMatrixD_mref; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist.",MatchSource.WIKI,root/html534/Roo2DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DMomentMorphFunction.html
https://root.cern/root/html534/Roo2DMomentMorphFunction.html:36482,Integrability,integrat,integrator,36482,"ooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; TMatrixD_mref; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist. Pointer to global instance of string that matches object named; Int_t_npoints; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Roo2DMomentMorphFunction::Setting_setting; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; int_squareIdx[4]; TMatrixD_squareVec; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; Bool_t_verbose; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooRealProxym1; RooRealProxym2. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Roo2DMomentMorphFunction(const char* name, const char* title, RooAbsReal& _m1, ",MatchSource.WIKI,root/html534/Roo2DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DMomentMorphFunction.html
https://root.cern/root/html534/Roo2DMomentMorphFunction.html:16187,Modifiability,Inherit,InheritsFrom,16187," RooArgSet& set) const; virtual Double_tRooAbsReal::getValV(const RooArgSet* set = 0) const; RooArgSet*RooAbsArg::getVariables(Bool_t stripDisconnected = kTRUE) const; voidRooAbsArg::graphVizTree(const char* fileName, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); voidRooAbsArg::graphVizTree(ostream& os, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tRooAbsArg::hasClients() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tRooAbsArg::hasRange(const char*) const; static Bool_tRooAbsReal::hideOffset(); RooGenFunction*RooAbsReal::iGenFunction(RooRealVar& x, const RooArgSet& nset = RooArgSet()); RooMultiGenFunction*RooAbsReal::iGenFunction(const RooArgSet& observables, const RooArgSet& nset = RooArgSet()); virtual Bool_tRooAbsArg::importWorkspaceHook(RooWorkspace&); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual Bool_tRooAbsArg::inRange(const char*) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual voidRooAbsArg::ioStreamerPass2(); static voidRooAbsArg::ioStreamerPass2Finalize(); virtual TClass*IsA() const; virtual Bool_tRooAbsReal::isBinnedDistribution(const RooArgSet&) const; Bool_tRooAbsArg::isCloneOf(const RooAbsArg& other) const; Bool_tRooAbsArg::isConstant() const; virtual Bool_tRooAbsArg::isDerived() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tRooAbsArg::isFundamental() const; virtual Bool_tRooAbsReal::isIdentical(const RooAbsArg& other, Bool_t assumeSameType = kFALSE); virtual Bool_tRooAbsArg::isLValue() const; virtual Bool_tRooAbsReal::isOffsetting() const; Bool_tTObject::IsOnHeap() const; Bool_tRooAbsArg::isShapeDirty() const; Bool_tRooAbsArg::isShapeServer(const R",MatchSource.WIKI,root/html534/Roo2DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DMomentMorphFunction.html
https://root.cern/root/html534/Roo2DMomentMorphFunction.html:16253,Modifiability,Inherit,InheritsFrom,16253,"RooArgSet* set = 0) const; RooArgSet*RooAbsArg::getVariables(Bool_t stripDisconnected = kTRUE) const; voidRooAbsArg::graphVizTree(const char* fileName, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); voidRooAbsArg::graphVizTree(ostream& os, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tRooAbsArg::hasClients() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tRooAbsArg::hasRange(const char*) const; static Bool_tRooAbsReal::hideOffset(); RooGenFunction*RooAbsReal::iGenFunction(RooRealVar& x, const RooArgSet& nset = RooArgSet()); RooMultiGenFunction*RooAbsReal::iGenFunction(const RooArgSet& observables, const RooArgSet& nset = RooArgSet()); virtual Bool_tRooAbsArg::importWorkspaceHook(RooWorkspace&); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual Bool_tRooAbsArg::inRange(const char*) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual voidRooAbsArg::ioStreamerPass2(); static voidRooAbsArg::ioStreamerPass2Finalize(); virtual TClass*IsA() const; virtual Bool_tRooAbsReal::isBinnedDistribution(const RooArgSet&) const; Bool_tRooAbsArg::isCloneOf(const RooAbsArg& other) const; Bool_tRooAbsArg::isConstant() const; virtual Bool_tRooAbsArg::isDerived() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tRooAbsArg::isFundamental() const; virtual Bool_tRooAbsReal::isIdentical(const RooAbsArg& other, Bool_t assumeSameType = kFALSE); virtual Bool_tRooAbsArg::isLValue() const; virtual Bool_tRooAbsReal::isOffsetting() const; Bool_tTObject::IsOnHeap() const; Bool_tRooAbsArg::isShapeDirty() const; Bool_tRooAbsArg::isShapeServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isShapeServer(const char* n",MatchSource.WIKI,root/html534/Roo2DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DMomentMorphFunction.html
https://root.cern/root/html534/Roo2DMomentMorphFunction.html:24692,Modifiability,config,config,24692,"e(ostream& out, Option_t* option = """"); TIterator*RooAbsArg::serverIterator() const; RooFIterRooAbsArg::serverMIterator() const; virtual voidRooAbsArg::serverNameChangeHook(const RooAbsArg*, const RooAbsArg*); voidRooAbsArg::setAttribute(const Text_t* name, Bool_t value = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidRooAbsArg::setCacheAndTrackHints(RooArgSet&); static voidRooAbsReal::setCacheCheck(Bool_t flag); virtual Bool_tRooAbsReal::setData(RooAbsData&, Bool_t = kTRUE); static voidRooAbsArg::setDirtyInhibit(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidRooAbsReal::setEvalErrorLoggingMode(RooAbsReal::ErrorLoggingMode m); virtual voidRooAbsArg::setExpensiveObjectCache(RooExpensiveObjectCache& cache); static voidRooAbsReal::setHideOffset(Bool_t flag); voidRooAbsReal::setIntegratorConfig(); voidRooAbsReal::setIntegratorConfig(const RooNumIntConfig& config); voidRooAbsArg::setLocalNoDirtyInhibit(Bool_t flag) const; voidsetMode(const Roo2DMomentMorphFunction::Setting& setting); virtual voidRooAbsArg::SetName(const char* name); virtual voidRooAbsArg::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsArg::setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); voidRooAbsReal::setParameterizeIntegral(const RooArgSet& paramVars); voidRooAbsReal::setPlotLabel(const char* label); voidRooAbsArg::setProhibitServerRedirect(Bool_t flag); voidRooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsArg::setTransientAttribute(const Text_t* name, Bool_t value = kTRUE); virtual voidTObject::SetUniqueID(UInt_t uid); voidRooAbsReal::setUnit(const char* unit); voidRooAbsArg::setValueDirty() const; TIterator*RooAbsArg::shapeClientIterator() const; RooFIterRooAbsAr",MatchSource.WIKI,root/html534/Roo2DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DMomentMorphFunction.html
https://root.cern/root/html534/Roo2DMomentMorphFunction.html:32587,Modifiability,Config,ConfigChange,32587,"Side(const double& p1x, const double& p1y, const double& p2x, const double& p2y, const double& ax, const double& ay, const double& bx, const double& by) const; Bool_tpointInSquare(const double& px, const double& py, const double& ax, const double& ay, const double& bx, const double& by, const double& cx, const double& cy, const double& dx, const double& dy) const; Bool_tpointInTriangle(const double& px, const double& py, const double& ax, const double& ay, const double& bx, const double& by, const double& cx, const double& cy) const. Data Members; public:. enum Setting { Linear; LinearPosFractions; };; enum RooAbsReal::ScaleType { Raw; Relative; NumEvent; RelativeExpected; };; enum RooAbsReal::ErrorLoggingMode { PrintErrors; CollectErrors; CountErrors; Ignore; };; enum RooAbsArg::ConstOpCode { Activate; DeActivate; ConfigChange; ValueChange; };; enum RooAbsArg::CacheMode { Always; NotAdvised; Never; };; enum RooAbsArg::OperMode { Auto; AClean; ADirty; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };; enum RooPrintable::ContentsOption { kName; kClassName; kValue; kArgs; kExtras; kAddress; kTitle; kCollectionHeader; };; enum RooPrintable::StyleOption { kInline; kSingleLine; kStandard; kVerbose; kTreeStructure; };. public:. static map<RooAbsArg*,TRefArray*>RooAbsArg::_ioEvoListtemporary holding list for proxies needed in schema evolution ; static stack<RooAbsArg*>RooAbsArg::_ioReadStackreading stack ; static const UInt_tRooAbsArg::fnv1a32start; static const ULong64_tRooAbsArg::fnv1a64start. protected:. TMatrixD_MSqr; set<std::string>RooAbsArg::_boolAttribBoolean attributes; set<std::string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); Bool_tRooAbsReal::_boolValue! Transient cache for bool values from tree branches ; UChar_tRooAb",MatchSource.WIKI,root/html534/Roo2DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DMomentMorphFunction.html
https://root.cern/root/html534/Roo2DMomentMorphFunction.html:36493,Modifiability,config,configuration,36493,"ooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; TMatrixD_mref; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist. Pointer to global instance of string that matches object named; Int_t_npoints; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Roo2DMomentMorphFunction::Setting_setting; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; int_squareIdx[4]; TMatrixD_squareVec; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; Bool_t_verbose; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooRealProxym1; RooRealProxym2. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Roo2DMomentMorphFunction(const char* name, const char* title, RooAbsReal& _m1, ",MatchSource.WIKI,root/html534/Roo2DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DMomentMorphFunction.html
https://root.cern/root/html534/Roo2DMomentMorphFunction.html:37226,Modifiability,Inherit,Inheritance,37226,"serverListlist of server objects; Roo2DMomentMorphFunction::Setting_setting; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; int_squareIdx[4]; TMatrixD_squareVec; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; Bool_t_verbose; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooRealProxym1; RooRealProxym2. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Roo2DMomentMorphFunction(const char* name, const char* title, RooAbsReal& _m1, RooAbsReal& _m2, const TMatrixD& mrefpoints, const Roo2DMomentMorphFunction::Setting& setting = Linear, const Bool_t& verbose = false); cross-check that we have enough reference points. Roo2DMomentMorphFunction(const char* name, const char* title, RooAbsReal& _m1, RooAbsReal& _m2, const Int_t& nrows, const Double_t* dm1arr, const Double_t* dm2arr, const Double_t* dvalarr, const Roo2DMomentMorphFunction::Setting& setting = Linear, const Bool_t& verbose = false); cross-check that we have enough reference points. Roo2DMomentMorphFunction(const Roo2DMomentMorphFunction& other, const char* name = 0). ~Roo2DMomentMorphFunction(). initialize(). evaluate() const. calculateFractions(Bool_t verbose = kTRUE) const. findSquare(const double& x, const double& y) const. Bool_t onSameSide(const double& p1x, const double& p1y, const double& p2x, const double& p2y, const doub",MatchSource.WIKI,root/html534/Roo2DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DMomentMorphFunction.html
https://root.cern/root/html534/Roo2DMomentMorphFunction.html:37239,Modifiability,Inherit,Inherited,37239,"serverListlist of server objects; Roo2DMomentMorphFunction::Setting_setting; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; int_squareIdx[4]; TMatrixD_squareVec; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; Bool_t_verbose; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooRealProxym1; RooRealProxym2. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Roo2DMomentMorphFunction(const char* name, const char* title, RooAbsReal& _m1, RooAbsReal& _m2, const TMatrixD& mrefpoints, const Roo2DMomentMorphFunction::Setting& setting = Linear, const Bool_t& verbose = false); cross-check that we have enough reference points. Roo2DMomentMorphFunction(const char* name, const char* title, RooAbsReal& _m1, RooAbsReal& _m2, const Int_t& nrows, const Double_t* dm1arr, const Double_t* dm2arr, const Double_t* dvalarr, const Roo2DMomentMorphFunction::Setting& setting = Linear, const Bool_t& verbose = false); cross-check that we have enough reference points. Roo2DMomentMorphFunction(const Roo2DMomentMorphFunction& other, const char* name = 0). ~Roo2DMomentMorphFunction(). initialize(). evaluate() const. calculateFractions(Bool_t verbose = kTRUE) const. findSquare(const double& x, const double& y) const. Bool_t onSameSide(const double& p1x, const double& p1y, const double& p2x, const double& p2y, const doub",MatchSource.WIKI,root/html534/Roo2DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DMomentMorphFunction.html
https://root.cern/root/html534/Roo2DMomentMorphFunction.html:2500,Performance,cache,cacheUniqueSuffix,2500,"uffix() const; virtual Double_tRooAbsReal::analyticalIntegral(Int_t code, const char* rangeName = 0) const; virtual Double_tRooAbsReal::analyticalIntegralWN(Int_t code, const RooArgSet* normSet, const char* rangeName = 0) const; virtual voidTObject::AppendPad(Option_t* option = """"); TF1*RooAbsReal::asTF(const RooArgList& obs, const RooArgList& pars = RooArgList(), const RooArgSet& nset = RooArgSet()) const; voidRooAbsArg::attachDataSet(const RooAbsData& set); voidRooAbsArg::attachDataStore(const RooAbsDataStore& set); const set<std::string>&RooAbsArg::attributes() const; virtual list<Double_t>*RooAbsReal::binBoundaries(RooAbsRealLValue&, Double_t, Double_t) const; RooAbsFunc*RooAbsReal::bindVars(const RooArgSet& vars, const RooArgSet* nset = 0, Bool_t clipInvalid = kFALSE) const; voidRooAbsArg::branchNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t recurseNonDerived = kFALSE) const; virtual voidTObject::Browse(TBrowser* b); virtual const char*RooAbsArg::cacheUniqueSuffix() const; virtual RooAbsArg::CacheModeRooAbsArg::canNodeBeCached() const; voidRooAbsArg::changeServer(RooAbsArg& server, Bool_t valueProp, Bool_t shapeProp); Bool_tRooAbsArg::checkDependents(const RooArgSet* nset) const; virtual Bool_tRooAbsArg::checkObservables(const RooArgSet* nset) const; virtual RooFitResult*RooAbsReal::chi2FitTo(RooDataHist& data, const RooLinkedList& cmdList); virtual RooFitResult*RooAbsReal::chi2FitTo(RooDataSet& xydata, const RooLinkedList& cmdList); virtual RooFitResult*RooAbsReal::chi2FitTo(RooDataHist& data, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); virtual RooFitResult*RooAbsReal::chi2FitTo(RooDataSet& xydata, const RooCmdArg& arg1 = RooCmdArg::none(),",MatchSource.WIKI,root/html534/Roo2DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DMomentMorphFunction.html
https://root.cern/root/html534/Roo2DMomentMorphFunction.html:2546,Performance,Cache,CacheModeRooAbsArg,2546,"lyticalIntegral(Int_t code, const char* rangeName = 0) const; virtual Double_tRooAbsReal::analyticalIntegralWN(Int_t code, const RooArgSet* normSet, const char* rangeName = 0) const; virtual voidTObject::AppendPad(Option_t* option = """"); TF1*RooAbsReal::asTF(const RooArgList& obs, const RooArgList& pars = RooArgList(), const RooArgSet& nset = RooArgSet()) const; voidRooAbsArg::attachDataSet(const RooAbsData& set); voidRooAbsArg::attachDataStore(const RooAbsDataStore& set); const set<std::string>&RooAbsArg::attributes() const; virtual list<Double_t>*RooAbsReal::binBoundaries(RooAbsRealLValue&, Double_t, Double_t) const; RooAbsFunc*RooAbsReal::bindVars(const RooArgSet& vars, const RooArgSet* nset = 0, Bool_t clipInvalid = kFALSE) const; voidRooAbsArg::branchNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t recurseNonDerived = kFALSE) const; virtual voidTObject::Browse(TBrowser* b); virtual const char*RooAbsArg::cacheUniqueSuffix() const; virtual RooAbsArg::CacheModeRooAbsArg::canNodeBeCached() const; voidRooAbsArg::changeServer(RooAbsArg& server, Bool_t valueProp, Bool_t shapeProp); Bool_tRooAbsArg::checkDependents(const RooArgSet* nset) const; virtual Bool_tRooAbsArg::checkObservables(const RooArgSet* nset) const; virtual RooFitResult*RooAbsReal::chi2FitTo(RooDataHist& data, const RooLinkedList& cmdList); virtual RooFitResult*RooAbsReal::chi2FitTo(RooDataSet& xydata, const RooLinkedList& cmdList); virtual RooFitResult*RooAbsReal::chi2FitTo(RooDataHist& data, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); virtual RooFitResult*RooAbsReal::chi2FitTo(RooDataSet& xydata, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), con",MatchSource.WIKI,root/html534/Roo2DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DMomentMorphFunction.html
https://root.cern/root/html534/Roo2DMomentMorphFunction.html:11343,Performance,cache,cacheList,11343,"rRooAbsReal::evalErrorIter(); static RooAbsReal::ErrorLoggingModeRooAbsReal::evalErrorLoggingMode(); virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); RooExpensiveObjectCache&RooAbsArg::expensiveObjectCache() const; virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); RooDataHist*RooAbsReal::fillDataHist(RooDataHist* hist, const RooArgSet* nset, Double_t scaleFactor, Bool_t correctForBinVolume = kFALSE, Bool_t showProgress = kFALSE) const; TH1*RooAbsReal::fillHistogram(TH1* hist, const RooArgList& plotVars, Double_t scaleFactor = 1, const RooArgSet* projectedVars = 0, Bool_t scaling = kTRUE, const RooArgSet* condObs = 0, Bool_t setError = kTRUE) const; Bool_tRooAbsArg::findConstantNodes(const RooArgSet& observables, RooArgSet& cacheList); Bool_tRooAbsArg::findConstantNodes(const RooArgSet& observables, RooArgSet& cacheList, RooLinkedList& processedNodes); RooAbsArg*RooAbsArg::findNewServer(const RooAbsCollection& newSet, Bool_t nameChange) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Double_tRooAbsReal::findRoot(RooRealVar& x, Double_t xmin, Double_t xmax, Double_t yval); RooAbsArg*RooAbsArg::findServer(const char* name) const; RooAbsArg*RooAbsArg::findServer(const RooAbsArg& arg) const; RooAbsArg*RooAbsArg::findServer(Int_t index) const; virtual voidRooAbsReal::fixAddCoefNormalization(const RooArgSet& addNormSet = RooArgSet(), Bool_t force = kTRUE); virtual voidRooAbsReal::fixAddCoefRange(const char* rangeName = 0, Bool_t force = kTRUE); static UInt_tRooAbsArg::fnv1a32(const char* data); static UInt_tRooAbsArg::fnv1a32(const char* data, ULong_t sz, UInt_t hash = fnv1a32start); static ULong64_tRooAbsArg::fnv1a64(const char* data",MatchSource.WIKI,root/html534/Roo2DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DMomentMorphFunction.html
https://root.cern/root/html534/Roo2DMomentMorphFunction.html:11431,Performance,cache,cacheList,11431,"ggingMode(); virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); RooExpensiveObjectCache&RooAbsArg::expensiveObjectCache() const; virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); RooDataHist*RooAbsReal::fillDataHist(RooDataHist* hist, const RooArgSet* nset, Double_t scaleFactor, Bool_t correctForBinVolume = kFALSE, Bool_t showProgress = kFALSE) const; TH1*RooAbsReal::fillHistogram(TH1* hist, const RooArgList& plotVars, Double_t scaleFactor = 1, const RooArgSet* projectedVars = 0, Bool_t scaling = kTRUE, const RooArgSet* condObs = 0, Bool_t setError = kTRUE) const; Bool_tRooAbsArg::findConstantNodes(const RooArgSet& observables, RooArgSet& cacheList); Bool_tRooAbsArg::findConstantNodes(const RooArgSet& observables, RooArgSet& cacheList, RooLinkedList& processedNodes); RooAbsArg*RooAbsArg::findNewServer(const RooAbsCollection& newSet, Bool_t nameChange) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Double_tRooAbsReal::findRoot(RooRealVar& x, Double_t xmin, Double_t xmax, Double_t yval); RooAbsArg*RooAbsArg::findServer(const char* name) const; RooAbsArg*RooAbsArg::findServer(const RooAbsArg& arg) const; RooAbsArg*RooAbsArg::findServer(Int_t index) const; virtual voidRooAbsReal::fixAddCoefNormalization(const RooArgSet& addNormSet = RooArgSet(), Bool_t force = kTRUE); virtual voidRooAbsReal::fixAddCoefRange(const char* rangeName = 0, Bool_t force = kTRUE); static UInt_tRooAbsArg::fnv1a32(const char* data); static UInt_tRooAbsArg::fnv1a32(const char* data, ULong_t sz, UInt_t hash = fnv1a32start); static ULong64_tRooAbsArg::fnv1a64(const char* data); static ULong64_tRooAbsArg::fnv1a64(const char* data, ULong_t sz, ULong64_t hash = fnv",MatchSource.WIKI,root/html534/Roo2DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DMomentMorphFunction.html
https://root.cern/root/html534/Roo2DMomentMorphFunction.html:19803,Performance,optimiz,optimizeCacheMode,19803,"nt_tRooAbsReal::numEvalErrors(); Bool_tRooAbsArg::observableOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::observableOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; virtual Double_tRooAbsReal::offset() const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TNamed&TNamed::operator=(const TNamed& rhs); Bool_tRooAbsReal::operator==(Double_t value) const; virtual Bool_tRooAbsReal::operator==(const RooAbsArg& other); RooAbsArg::OperModeRooAbsArg::operMode() const; virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables); virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables, RooArgSet& optNodes, RooLinkedList& processedNodes); Bool_tRooAbsArg::overlaps(const RooAbsArg& testArg, Bool_t valueOnly = kFALSE) const; const RooArgSet*RooAbsArg::ownedComponents() const; virtual voidTObject::Paint(Option_t* option = """"); virtual RooPlot*RooAbsReal::plotOn(RooPlot* frame, RooLinkedList& cmdList) const; virtual RooPlot*RooAbsReal::plotOn(RooPlot* frame, const RooCmdArg& arg1 = RooCmdArg(), const RooCmdArg& arg2 = RooCmdArg(), const RooCmdArg& arg3 = RooCmdArg(), const RooCmdArg& arg4 = RooCmdArg(), const RooCmdArg& arg5 = RooCmdArg(), const RooCmdArg& arg6 = RooCmdArg(), const RooCmdArg& arg7 = RooCmdArg(), const RooCmdArg& arg8 = RooCmdArg(), const RooCmdArg& arg9 = RooCmdArg(), const RooCmdArg& arg10 = RooCmdArg()) const; virtual list<Double_t>*RooAbsReal::plotSamplingHint(RooAbsRealLValue&, Double_t, Double_t) const; virtual RooPlot*RooAbsReal::plotSliceO",MatchSource.WIKI,root/html534/Roo2DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DMomentMorphFunction.html
https://root.cern/root/html534/Roo2DMomentMorphFunction.html:19875,Performance,optimiz,optimizeCacheMode,19875,"st RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::observableOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; virtual Double_tRooAbsReal::offset() const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TNamed&TNamed::operator=(const TNamed& rhs); Bool_tRooAbsReal::operator==(Double_t value) const; virtual Bool_tRooAbsReal::operator==(const RooAbsArg& other); RooAbsArg::OperModeRooAbsArg::operMode() const; virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables); virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables, RooArgSet& optNodes, RooLinkedList& processedNodes); Bool_tRooAbsArg::overlaps(const RooAbsArg& testArg, Bool_t valueOnly = kFALSE) const; const RooArgSet*RooAbsArg::ownedComponents() const; virtual voidTObject::Paint(Option_t* option = """"); virtual RooPlot*RooAbsReal::plotOn(RooPlot* frame, RooLinkedList& cmdList) const; virtual RooPlot*RooAbsReal::plotOn(RooPlot* frame, const RooCmdArg& arg1 = RooCmdArg(), const RooCmdArg& arg2 = RooCmdArg(), const RooCmdArg& arg3 = RooCmdArg(), const RooCmdArg& arg4 = RooCmdArg(), const RooCmdArg& arg5 = RooCmdArg(), const RooCmdArg& arg6 = RooCmdArg(), const RooCmdArg& arg7 = RooCmdArg(), const RooCmdArg& arg8 = RooCmdArg(), const RooCmdArg& arg9 = RooCmdArg(), const RooCmdArg& arg10 = RooCmdArg()) const; virtual list<Double_t>*RooAbsReal::plotSamplingHint(RooAbsRealLValue&, Double_t, Double_t) const; virtual RooPlot*RooAbsReal::plotSliceOn(RooPlot* frame, const RooArgSet& sliceSet, Option_t* drawOptions = ""L""",MatchSource.WIKI,root/html534/Roo2DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DMomentMorphFunction.html
https://root.cern/root/html534/Roo2DMomentMorphFunction.html:23350,Performance,cache,cache,23350,"rtual voidRooAbsArg::printTitle(ostream& os) const; virtual voidRooAbsArg::printTree(ostream& os, TString indent = """") const; virtual voidRooAbsReal::printValue(ostream& os) const; virtual Int_tTObject::Read(const char* name); virtual Bool_tRooAbsReal::readFromStream(istream& is, Bool_t compact, Bool_t verbose = kFALSE); Bool_tRooAbsArg::recursiveCheckDependents(const RooArgSet* nset) const; Bool_tRooAbsArg::recursiveCheckObservables(const RooArgSet* nset) const; Bool_tRooAbsArg::recursiveRedirectServers(const RooAbsCollection& newServerList, Bool_t mustReplaceAll = kFALSE, Bool_t nameChange = kFALSE, Bool_t recurseInNewSet = kTRUE); virtual voidTObject::RecursiveRemove(TObject* obj); Bool_tRooAbsArg::redirectServers(const RooAbsCollection& newServerList, Bool_t mustReplaceAll = kFALSE, Bool_t nameChange = kFALSE, Bool_t isRecursionStep = kFALSE); virtual Bool_tRooAbsArg::redirectServersHook(const RooAbsCollection&, Bool_t, Bool_t, Bool_t); voidRooAbsArg::registerCache(RooAbsCache& cache); voidRooAbsArg::removeServer(RooAbsArg& server, Bool_t force = kFALSE); voidRooAbsArg::replaceServer(RooAbsArg& oldServer, RooAbsArg& newServer, Bool_t valueProp, Bool_t shapeProp); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); TIterator*RooAbsArg::serverIterator() const; RooFIterRooAbsArg::serverMIterator() const; virtual voidRooAbsArg::serverNameChangeHook(const RooAbsArg*, const RooAbsArg*); voidRooAbsArg::setAttribute(const Text_t* name, Bool_t value = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidRooAbsArg::setCacheAndTrackHints(RooArgSet&); static voidRooAbsReal::setCacheCheck(Bool_t flag); virtual Bool_tRooAbsReal::setData(RooAbsData&, Bool_t = kTRUE); static voidRooAbsArg::setDirtyInhibit(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTOb",MatchSource.WIKI,root/html534/Roo2DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DMomentMorphFunction.html
https://root.cern/root/html534/Roo2DMomentMorphFunction.html:24535,Performance,cache,cache,24535," voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); TIterator*RooAbsArg::serverIterator() const; RooFIterRooAbsArg::serverMIterator() const; virtual voidRooAbsArg::serverNameChangeHook(const RooAbsArg*, const RooAbsArg*); voidRooAbsArg::setAttribute(const Text_t* name, Bool_t value = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidRooAbsArg::setCacheAndTrackHints(RooArgSet&); static voidRooAbsReal::setCacheCheck(Bool_t flag); virtual Bool_tRooAbsReal::setData(RooAbsData&, Bool_t = kTRUE); static voidRooAbsArg::setDirtyInhibit(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidRooAbsReal::setEvalErrorLoggingMode(RooAbsReal::ErrorLoggingMode m); virtual voidRooAbsArg::setExpensiveObjectCache(RooExpensiveObjectCache& cache); static voidRooAbsReal::setHideOffset(Bool_t flag); voidRooAbsReal::setIntegratorConfig(); voidRooAbsReal::setIntegratorConfig(const RooNumIntConfig& config); voidRooAbsArg::setLocalNoDirtyInhibit(Bool_t flag) const; voidsetMode(const Roo2DMomentMorphFunction::Setting& setting); virtual voidRooAbsArg::SetName(const char* name); virtual voidRooAbsArg::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsArg::setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); voidRooAbsReal::setParameterizeIntegral(const RooArgSet& paramVars); voidRooAbsReal::setPlotLabel(const char* label); voidRooAbsArg::setProhibitServerRedirect(Bool_t flag); voidRooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsArg::setTransientAttribute(const Text_t* name, Bool_t value = kTRUE); virtual voidTObject::SetUniqueID(UI",MatchSource.WIKI,root/html534/Roo2DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DMomentMorphFunction.html
https://root.cern/root/html534/Roo2DMomentMorphFunction.html:26718,Performance,cache,cache,26718,"rty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsArg::setTransientAttribute(const Text_t* name, Bool_t value = kTRUE); virtual voidTObject::SetUniqueID(UInt_t uid); voidRooAbsReal::setUnit(const char* unit); voidRooAbsArg::setValueDirty() const; TIterator*RooAbsArg::shapeClientIterator() const; RooFIterRooAbsArg::shapeClientMIterator() const; virtual voidShowMembers(TMemberInspector&); RooAbsMoment*RooAbsReal::sigma(RooRealVar& obs); RooAbsMoment*RooAbsReal::sigma(RooRealVar& obs, const RooArgSet& nset); virtual Int_tTNamed::Sizeof() const; RooNumIntConfig*RooAbsReal::specialIntegratorConfig() const; RooNumIntConfig*RooAbsReal::specialIntegratorConfig(Bool_t createOnTheFly); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); const map<std::string,std::string>&RooAbsArg::stringAttributes() const; voidSummary() const; virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; const set<std::string>&RooAbsArg::transientAttributes() const; voidRooAbsArg::treeNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t doBranch = kTRUE, Bool_t doLeaf = kTRUE, Bool_t valueOnly = kFALSE, Bool_t recurseNonDerived = kFALSE) const; voidRooAbsArg::unRegisterCache(RooAbsCache& cache); virtual voidTObject::UseCurrentStyle(); TIterator*RooAbsArg::valueClientIterator() const; RooFIterRooAbsArg::valueClientMIterator() const; static voidRooAbsArg::verboseDirty(Bool_t flag); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; voidRooAbsArg::wireAllCaches(); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidRooAbsReal::writeToStream(ostream& os, Bool_t compact) const.",MatchSource.WIKI,root/html534/Roo2DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DMomentMorphFunction.html
https://root.cern/root/html534/Roo2DMomentMorphFunction.html:29852,Performance,optimiz,optimizeDirtyHook,29852,"ual Bool_tRooAbsReal::isValidReal(Double_t value, Bool_t printError = kFALSE) const; voidRooAbsReal::makeProjectionSet(const RooAbsArg* plotVar, const RooArgSet* allVars, RooArgSet& projectedVars, Bool_t silent) const; voidTObject::MakeZombie(); Bool_tRooAbsReal::matchArgs(const RooArgSet& allDeps, RooArgSet& numDeps, const RooArgProxy& a) const; Bool_tRooAbsReal::matchArgs(const RooArgSet& allDeps, RooArgSet& numDeps, const RooArgSet& set) const; Bool_tRooAbsReal::matchArgs(const RooArgSet& allDeps, RooArgSet& numDeps, const RooArgProxy& a, const RooArgProxy& b) const; Bool_tRooAbsReal::matchArgs(const RooArgSet& allDeps, RooArgSet& numDeps, const RooArgProxy& a, const RooArgProxy& b, const RooArgProxy& c) const; Bool_tRooAbsReal::matchArgs(const RooArgSet& allDeps, RooArgSet& numDeps, const RooArgProxy& a, const RooArgProxy& b, const RooArgProxy& c, const RooArgProxy& d) const; Int_tRooAbsArg::numProxies() const; virtual voidRooAbsArg::operModeHook(); virtual voidRooAbsArg::optimizeDirtyHook(const RooArgSet*); virtual RooPlot*RooAbsReal::plotAsymOn(RooPlot* frame, const RooAbsCategoryLValue& asymCat, RooAbsReal::PlotOpt o) const; virtual RooPlot*RooAbsReal::plotOn(RooPlot* frame, RooAbsReal::PlotOpt o) const; voidRooAbsReal::plotOnCompSelect(RooArgSet* selNodes) const; RooPlot*RooAbsReal::plotOnWithErrorBand(RooPlot* frame, const RooFitResult& fr, Double_t Z, const RooArgSet* params, const RooLinkedList& argList, Bool_t method1) const; Bool_tRooAbsReal::plotSanityChecks(RooPlot* frame) const; voidRooAbsArg::printAttribList(ostream& os) const; voidRooAbsArg::registerProxy(RooArgProxy& proxy); voidRooAbsArg::registerProxy(RooSetProxy& proxy); voidRooAbsArg::registerProxy(RooListProxy& proxy); voidRooAbsReal::selectComp(Bool_t flag); virtual voidRooAbsReal::selectNormalization(const RooArgSet* depSet = 0, Bool_t force = kFALSE); virtual voidRooAbsReal::selectNormalizationRange(const char* rangeName = 0, Bool_t force = kFALSE); voidRooAbsArg::setProxyNormSet(const Roo",MatchSource.WIKI,root/html534/Roo2DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DMomentMorphFunction.html
https://root.cern/root/html534/Roo2DMomentMorphFunction.html:32634,Performance,Cache,CacheMode,32634,"Side(const double& p1x, const double& p1y, const double& p2x, const double& p2y, const double& ax, const double& ay, const double& bx, const double& by) const; Bool_tpointInSquare(const double& px, const double& py, const double& ax, const double& ay, const double& bx, const double& by, const double& cx, const double& cy, const double& dx, const double& dy) const; Bool_tpointInTriangle(const double& px, const double& py, const double& ax, const double& ay, const double& bx, const double& by, const double& cx, const double& cy) const. Data Members; public:. enum Setting { Linear; LinearPosFractions; };; enum RooAbsReal::ScaleType { Raw; Relative; NumEvent; RelativeExpected; };; enum RooAbsReal::ErrorLoggingMode { PrintErrors; CollectErrors; CountErrors; Ignore; };; enum RooAbsArg::ConstOpCode { Activate; DeActivate; ConfigChange; ValueChange; };; enum RooAbsArg::CacheMode { Always; NotAdvised; Never; };; enum RooAbsArg::OperMode { Auto; AClean; ADirty; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };; enum RooPrintable::ContentsOption { kName; kClassName; kValue; kArgs; kExtras; kAddress; kTitle; kCollectionHeader; };; enum RooPrintable::StyleOption { kInline; kSingleLine; kStandard; kVerbose; kTreeStructure; };. public:. static map<RooAbsArg*,TRefArray*>RooAbsArg::_ioEvoListtemporary holding list for proxies needed in schema evolution ; static stack<RooAbsArg*>RooAbsArg::_ioReadStackreading stack ; static const UInt_tRooAbsArg::fnv1a32start; static const ULong64_tRooAbsArg::fnv1a64start. protected:. TMatrixD_MSqr; set<std::string>RooAbsArg::_boolAttribBoolean attributes; set<std::string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); Bool_tRooAbsReal::_boolValue! Transient cache for bool values from tree branches ; UChar_tRooAb",MatchSource.WIKI,root/html534/Roo2DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DMomentMorphFunction.html
https://root.cern/root/html534/Roo2DMomentMorphFunction.html:33705,Performance,cache,cache,33705,,MatchSource.WIKI,root/html534/Roo2DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DMomentMorphFunction.html
https://root.cern/root/html534/Roo2DMomentMorphFunction.html:33789,Performance,cache,cache,33789,,MatchSource.WIKI,root/html534/Roo2DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DMomentMorphFunction.html
https://root.cern/root/html534/Roo2DMomentMorphFunction.html:33988,Performance,cache,caches,33988,,MatchSource.WIKI,root/html534/Roo2DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DMomentMorphFunction.html
https://root.cern/root/html534/Roo2DMomentMorphFunction.html:34523,Performance,cache,cache,34523,"AbsArg::_boolAttribBoolean attributes; set<std::string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); Bool_tRooAbsReal::_boolValue! Transient cache for bool values from tree branches ; UChar_tRooAbsReal::_byteValue! Transient cache for byte values from tree branches ; static Bool_tRooAbsReal::_cacheCheckIf true, always validate contents of clean which outcome of evaluate(); deque<RooAbsCache*>RooAbsArg::_cacheListlist of caches; RooRefCountListRooAbsArg::_clientListlist of client objects; RooRefCountListRooAbsArg::_clientListShapesubset of clients that requested shape dirty flag propagation; RooRefCountListRooAbsArg::_clientListValuesubset of clients that requested value dirty flag propagation; TIterator*RooAbsArg::_clientShapeIter! Iterator over _clientListShape ; TIterator*RooAbsArg::_clientValueIter! Iterator over _clientListValue ; Bool_tRooAbsArg::_deleteWatch! Delete watch flag ; RooExpensiveObjectCache*RooAbsArg::_eocachePointer to global cache manager for any expensive components created by this object; Bool_tRooAbsArg::_fastAllow fast access mode in getVal() and proxies; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; TVectorD_frac; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsReal::_hideOffsetOffset hiding flag; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; Bool_tRooAbsArg::_isConstant! Cached isConstant status ; Int_t_ixmax; Int_t_ixmin; Int_t_iymax; Int_t_iymin; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; TMatrixD_mref; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg",MatchSource.WIKI,root/html534/Roo2DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DMomentMorphFunction.html
https://root.cern/root/html534/Roo2DMomentMorphFunction.html:34702,Performance,cache,cache,34702," attributes; set<std::string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); Bool_tRooAbsReal::_boolValue! Transient cache for bool values from tree branches ; UChar_tRooAbsReal::_byteValue! Transient cache for byte values from tree branches ; static Bool_tRooAbsReal::_cacheCheckIf true, always validate contents of clean which outcome of evaluate(); deque<RooAbsCache*>RooAbsArg::_cacheListlist of caches; RooRefCountListRooAbsArg::_clientListlist of client objects; RooRefCountListRooAbsArg::_clientListShapesubset of clients that requested shape dirty flag propagation; RooRefCountListRooAbsArg::_clientListValuesubset of clients that requested value dirty flag propagation; TIterator*RooAbsArg::_clientShapeIter! Iterator over _clientListShape ; TIterator*RooAbsArg::_clientValueIter! Iterator over _clientListValue ; Bool_tRooAbsArg::_deleteWatch! Delete watch flag ; RooExpensiveObjectCache*RooAbsArg::_eocachePointer to global cache manager for any expensive components created by this object; Bool_tRooAbsArg::_fastAllow fast access mode in getVal() and proxies; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; TVectorD_frac; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsReal::_hideOffsetOffset hiding flag; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; Bool_tRooAbsArg::_isConstant! Cached isConstant status ; Int_t_ixmax; Int_t_ixmin; Int_t_iymax; Int_t_iymin; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; TMatrixD_mref; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist.",MatchSource.WIKI,root/html534/Roo2DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DMomentMorphFunction.html
https://root.cern/root/html534/Roo2DMomentMorphFunction.html:35131,Performance,cache,cache,35131," attributes; set<std::string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); Bool_tRooAbsReal::_boolValue! Transient cache for bool values from tree branches ; UChar_tRooAbsReal::_byteValue! Transient cache for byte values from tree branches ; static Bool_tRooAbsReal::_cacheCheckIf true, always validate contents of clean which outcome of evaluate(); deque<RooAbsCache*>RooAbsArg::_cacheListlist of caches; RooRefCountListRooAbsArg::_clientListlist of client objects; RooRefCountListRooAbsArg::_clientListShapesubset of clients that requested shape dirty flag propagation; RooRefCountListRooAbsArg::_clientListValuesubset of clients that requested value dirty flag propagation; TIterator*RooAbsArg::_clientShapeIter! Iterator over _clientListShape ; TIterator*RooAbsArg::_clientValueIter! Iterator over _clientListValue ; Bool_tRooAbsArg::_deleteWatch! Delete watch flag ; RooExpensiveObjectCache*RooAbsArg::_eocachePointer to global cache manager for any expensive components created by this object; Bool_tRooAbsArg::_fastAllow fast access mode in getVal() and proxies; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; TVectorD_frac; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsReal::_hideOffsetOffset hiding flag; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; Bool_tRooAbsArg::_isConstant! Cached isConstant status ; Int_t_ixmax; Int_t_ixmin; Int_t_iymax; Int_t_iymin; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; TMatrixD_mref; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist.",MatchSource.WIKI,root/html534/Roo2DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DMomentMorphFunction.html
https://root.cern/root/html534/Roo2DMomentMorphFunction.html:35207,Performance,Cache,Cached,35207," attributes; set<std::string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); Bool_tRooAbsReal::_boolValue! Transient cache for bool values from tree branches ; UChar_tRooAbsReal::_byteValue! Transient cache for byte values from tree branches ; static Bool_tRooAbsReal::_cacheCheckIf true, always validate contents of clean which outcome of evaluate(); deque<RooAbsCache*>RooAbsArg::_cacheListlist of caches; RooRefCountListRooAbsArg::_clientListlist of client objects; RooRefCountListRooAbsArg::_clientListShapesubset of clients that requested shape dirty flag propagation; RooRefCountListRooAbsArg::_clientListValuesubset of clients that requested value dirty flag propagation; TIterator*RooAbsArg::_clientShapeIter! Iterator over _clientListShape ; TIterator*RooAbsArg::_clientValueIter! Iterator over _clientListValue ; Bool_tRooAbsArg::_deleteWatch! Delete watch flag ; RooExpensiveObjectCache*RooAbsArg::_eocachePointer to global cache manager for any expensive components created by this object; Bool_tRooAbsArg::_fastAllow fast access mode in getVal() and proxies; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; TVectorD_frac; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsReal::_hideOffsetOffset hiding flag; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; Bool_tRooAbsArg::_isConstant! Cached isConstant status ; Int_t_ixmax; Int_t_ixmin; Int_t_iymax; Int_t_iymin; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; TMatrixD_mref; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist.",MatchSource.WIKI,root/html534/Roo2DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DMomentMorphFunction.html
https://root.cern/root/html534/Roo2DMomentMorphFunction.html:36091,Performance,cache,cache,36091,"ooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; TMatrixD_mref; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist. Pointer to global instance of string that matches object named; Int_t_npoints; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Roo2DMomentMorphFunction::Setting_setting; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; int_squareIdx[4]; TMatrixD_squareVec; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; Bool_t_verbose; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooRealProxym1; RooRealProxym2. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Roo2DMomentMorphFunction(const char* name, const char* title, RooAbsReal& _m1, ",MatchSource.WIKI,root/html534/Roo2DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DMomentMorphFunction.html
https://root.cern/root/html534/Roo2DMomentMorphFunction.html:36725,Performance,cache,cache,36725,"ooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; TMatrixD_mref; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist. Pointer to global instance of string that matches object named; Int_t_npoints; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Roo2DMomentMorphFunction::Setting_setting; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; int_squareIdx[4]; TMatrixD_squareVec; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; Bool_t_verbose; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooRealProxym1; RooRealProxym2. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Roo2DMomentMorphFunction(const char* name, const char* title, RooAbsReal& _m1, ",MatchSource.WIKI,root/html534/Roo2DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DMomentMorphFunction.html
https://root.cern/root/html534/Roo2DMomentMorphFunction.html:12275,Security,hash,hash,12275,"bsArg::findConstantNodes(const RooArgSet& observables, RooArgSet& cacheList); Bool_tRooAbsArg::findConstantNodes(const RooArgSet& observables, RooArgSet& cacheList, RooLinkedList& processedNodes); RooAbsArg*RooAbsArg::findNewServer(const RooAbsCollection& newSet, Bool_t nameChange) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Double_tRooAbsReal::findRoot(RooRealVar& x, Double_t xmin, Double_t xmax, Double_t yval); RooAbsArg*RooAbsArg::findServer(const char* name) const; RooAbsArg*RooAbsArg::findServer(const RooAbsArg& arg) const; RooAbsArg*RooAbsArg::findServer(Int_t index) const; virtual voidRooAbsReal::fixAddCoefNormalization(const RooArgSet& addNormSet = RooArgSet(), Bool_t force = kTRUE); virtual voidRooAbsReal::fixAddCoefRange(const char* rangeName = 0, Bool_t force = kTRUE); static UInt_tRooAbsArg::fnv1a32(const char* data); static UInt_tRooAbsArg::fnv1a32(const char* data, ULong_t sz, UInt_t hash = fnv1a32start); static ULong64_tRooAbsArg::fnv1a64(const char* data); static ULong64_tRooAbsArg::fnv1a64(const char* data, ULong_t sz, ULong64_t hash = fnv1a64start); virtual Bool_tRooAbsReal::forceAnalyticalInt(const RooAbsArg&) const; virtual voidRooAbsReal::forceNumInt(Bool_t flag = kTRUE); RooFunctor*RooAbsReal::functor(const RooArgList& obs, const RooArgList& pars = RooArgList(), const RooArgSet& nset = RooArgSet()) const; virtual Int_tRooAbsReal::getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const; virtual Int_tRooAbsReal::getAnalyticalIntegralWN(RooArgSet& allVars, RooArgSet& analVars, const RooArgSet* normSet, const char* rangeName = 0) const; Bool_tRooAbsArg::getAttribute(const Text_t* name) const; RooAbsCache*RooAbsArg::getCache(Int_t index) const; RooLinkedListRooAbsArg::getCloningAncestors() const; RooArgSet*RooAbsArg::getComponents() const; RooArgSet*RooAbsArg::getDependents(const RooArgSet& set) const; RooArgSet*RooAbsArg::ge",MatchSource.WIKI,root/html534/Roo2DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DMomentMorphFunction.html
https://root.cern/root/html534/Roo2DMomentMorphFunction.html:12426,Security,hash,hash,12426,"t& cacheList, RooLinkedList& processedNodes); RooAbsArg*RooAbsArg::findNewServer(const RooAbsCollection& newSet, Bool_t nameChange) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Double_tRooAbsReal::findRoot(RooRealVar& x, Double_t xmin, Double_t xmax, Double_t yval); RooAbsArg*RooAbsArg::findServer(const char* name) const; RooAbsArg*RooAbsArg::findServer(const RooAbsArg& arg) const; RooAbsArg*RooAbsArg::findServer(Int_t index) const; virtual voidRooAbsReal::fixAddCoefNormalization(const RooArgSet& addNormSet = RooArgSet(), Bool_t force = kTRUE); virtual voidRooAbsReal::fixAddCoefRange(const char* rangeName = 0, Bool_t force = kTRUE); static UInt_tRooAbsArg::fnv1a32(const char* data); static UInt_tRooAbsArg::fnv1a32(const char* data, ULong_t sz, UInt_t hash = fnv1a32start); static ULong64_tRooAbsArg::fnv1a64(const char* data); static ULong64_tRooAbsArg::fnv1a64(const char* data, ULong_t sz, ULong64_t hash = fnv1a64start); virtual Bool_tRooAbsReal::forceAnalyticalInt(const RooAbsArg&) const; virtual voidRooAbsReal::forceNumInt(Bool_t flag = kTRUE); RooFunctor*RooAbsReal::functor(const RooArgList& obs, const RooArgList& pars = RooArgList(), const RooArgSet& nset = RooArgSet()) const; virtual Int_tRooAbsReal::getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const; virtual Int_tRooAbsReal::getAnalyticalIntegralWN(RooArgSet& allVars, RooArgSet& analVars, const RooArgSet* normSet, const char* rangeName = 0) const; Bool_tRooAbsArg::getAttribute(const Text_t* name) const; RooAbsCache*RooAbsArg::getCache(Int_t index) const; RooLinkedListRooAbsArg::getCloningAncestors() const; RooArgSet*RooAbsArg::getComponents() const; RooArgSet*RooAbsArg::getDependents(const RooArgSet& set) const; RooArgSet*RooAbsArg::getDependents(const RooAbsData* set) const; RooArgSet*RooAbsArg::getDependents(const RooArgSet* depList) const; virtual Option_t*TObject::GetDrawOption()",MatchSource.WIKI,root/html534/Roo2DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DMomentMorphFunction.html
https://root.cern/root/html534/Roo2DMomentMorphFunction.html:15717,Security,Hash,Hash,15717,"AbsReal::getPropagatedError(const RooFitResult& fr); const Text_t*RooAbsArg::getStringAttribute(const Text_t* key) const; virtual const char*TNamed::GetTitle() const; TStringRooAbsReal::getTitle(Bool_t appendUnit = kFALSE) const; Bool_tRooAbsArg::getTransientAttribute(const Text_t* name) const; virtual UInt_tTObject::GetUniqueID() const; const Text_t*RooAbsReal::getUnit() const; Double_tRooAbsReal::getVal(const RooArgSet* set = 0) const; Double_tRooAbsReal::getVal(const RooArgSet& set) const; virtual Double_tRooAbsReal::getValV(const RooArgSet* set = 0) const; RooArgSet*RooAbsArg::getVariables(Bool_t stripDisconnected = kTRUE) const; voidRooAbsArg::graphVizTree(const char* fileName, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); voidRooAbsArg::graphVizTree(ostream& os, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tRooAbsArg::hasClients() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tRooAbsArg::hasRange(const char*) const; static Bool_tRooAbsReal::hideOffset(); RooGenFunction*RooAbsReal::iGenFunction(RooRealVar& x, const RooArgSet& nset = RooArgSet()); RooMultiGenFunction*RooAbsReal::iGenFunction(const RooArgSet& observables, const RooArgSet& nset = RooArgSet()); virtual Bool_tRooAbsArg::importWorkspaceHook(RooWorkspace&); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual Bool_tRooAbsArg::inRange(const char*) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual voidRooAbsArg::ioStreamerPass2(); static voidRooAbsArg::ioStreamerPass2Finalize(); virtual TClass*IsA() const; virtual Bool_tRooAbsReal::isBinnedDistribution(const RooArgSet&) const; Bool_tRooAbsArg::isCloneOf(const RooAbsArg& other) const; Bool_tRooAbsArg::isConstant() const; virtual Bool_",MatchSource.WIKI,root/html534/Roo2DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DMomentMorphFunction.html
https://root.cern/root/html534/Roo2DMomentMorphFunction.html:33884,Security,validat,validate,33884,,MatchSource.WIKI,root/html534/Roo2DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DMomentMorphFunction.html
https://root.cern/root/html534/Roo2DMomentMorphFunction.html:34623,Security,access,access,34623," attributes; set<std::string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); Bool_tRooAbsReal::_boolValue! Transient cache for bool values from tree branches ; UChar_tRooAbsReal::_byteValue! Transient cache for byte values from tree branches ; static Bool_tRooAbsReal::_cacheCheckIf true, always validate contents of clean which outcome of evaluate(); deque<RooAbsCache*>RooAbsArg::_cacheListlist of caches; RooRefCountListRooAbsArg::_clientListlist of client objects; RooRefCountListRooAbsArg::_clientListShapesubset of clients that requested shape dirty flag propagation; RooRefCountListRooAbsArg::_clientListValuesubset of clients that requested value dirty flag propagation; TIterator*RooAbsArg::_clientShapeIter! Iterator over _clientListShape ; TIterator*RooAbsArg::_clientValueIter! Iterator over _clientListValue ; Bool_tRooAbsArg::_deleteWatch! Delete watch flag ; RooExpensiveObjectCache*RooAbsArg::_eocachePointer to global cache manager for any expensive components created by this object; Bool_tRooAbsArg::_fastAllow fast access mode in getVal() and proxies; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; TVectorD_frac; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsReal::_hideOffsetOffset hiding flag; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; Bool_tRooAbsArg::_isConstant! Cached isConstant status ; Int_t_ixmax; Int_t_ixmin; Int_t_iymax; Int_t_iymin; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; TMatrixD_mref; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist.",MatchSource.WIKI,root/html534/Roo2DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DMomentMorphFunction.html
https://root.cern/root/html534/Roo2DMomentMorphFunction.html:9155,Testability,test,testArg,9155,"l*RooAbsReal::createPlotProjection(const RooArgSet& dependentVars, const RooArgSet* projectedVars, RooArgSet*& cloneSet, const char* rangeName = 0, const RooArgSet* condObs = 0) const; virtual RooAbsReal*RooAbsReal::createProfile(const RooArgSet& paramsOfInterest); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooArgSet& nset = RooArgSet()); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); RooAbsReal*RooAbsReal::createScanRI(const RooArgSet& iset, const RooArgSet& nset, Int_t numScanBins, Int_t intOrder); virtual Double_tRooAbsReal::defaultErrorLevel() const; static RooNumIntConfig*RooAbsReal::defaultIntegratorConfig(); virtual Int_tRooAbsArg::defaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooPrintable::defaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Bool_tRooAbsArg::dependentOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependentOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependsOn(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOn(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0) const; RooDerivative*RooAbsReal::derivative(RooRealVar& obs, Int_t order = 1, Double_t eps = 0.",MatchSource.WIKI,root/html534/Roo2DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DMomentMorphFunction.html
https://root.cern/root/html534/Roo2DMomentMorphFunction.html:9249,Testability,test,testArg,9249,"l*RooAbsReal::createPlotProjection(const RooArgSet& dependentVars, const RooArgSet* projectedVars, RooArgSet*& cloneSet, const char* rangeName = 0, const RooArgSet* condObs = 0) const; virtual RooAbsReal*RooAbsReal::createProfile(const RooArgSet& paramsOfInterest); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooArgSet& nset = RooArgSet()); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); RooAbsReal*RooAbsReal::createScanRI(const RooArgSet& iset, const RooArgSet& nset, Int_t numScanBins, Int_t intOrder); virtual Double_tRooAbsReal::defaultErrorLevel() const; static RooNumIntConfig*RooAbsReal::defaultIntegratorConfig(); virtual Int_tRooAbsArg::defaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooPrintable::defaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Bool_tRooAbsArg::dependentOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependentOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependsOn(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOn(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0) const; RooDerivative*RooAbsReal::derivative(RooRealVar& obs, Int_t order = 1, Double_t eps = 0.",MatchSource.WIKI,root/html534/Roo2DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DMomentMorphFunction.html
https://root.cern/root/html534/Roo2DMomentMorphFunction.html:17794,Testability,log,logEvalError,17794,") const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tRooAbsArg::isFundamental() const; virtual Bool_tRooAbsReal::isIdentical(const RooAbsArg& other, Bool_t assumeSameType = kFALSE); virtual Bool_tRooAbsArg::isLValue() const; virtual Bool_tRooAbsReal::isOffsetting() const; Bool_tTObject::IsOnHeap() const; Bool_tRooAbsArg::isShapeDirty() const; Bool_tRooAbsArg::isShapeServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isShapeServer(const char* name) const; virtual Bool_tRooAbsArg::IsSortable() const; Bool_tRooAbsArg::isValueDirty() const; Bool_tRooAbsArg::isValueDirtyAndClear() const; Bool_tRooAbsArg::isValueOrShapeDirtyAndClear() const; Bool_tRooAbsArg::isValueServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isValueServer(const char* name) const; Bool_tTObject::IsZombie() const; voidRooAbsArg::leafNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t recurseNonDerived = kFALSE) const; Bool_tRooAbsArg::localNoDirtyInhibit() const; voidRooAbsReal::logEvalError(const char* message, const char* serverValueString = 0) const; static voidRooAbsReal::logEvalError(const RooAbsReal* originator, const char* origName, const char* message, const char* serverValueString = 0); virtual voidTNamed::ls(Option_t* option = """") const; virtual Double_tRooAbsReal::maxVal(Int_t code) const; voidTObject::MayNotUse(const char* method) const; RooAbsMoment*RooAbsReal::mean(RooRealVar& obs); RooAbsMoment*RooAbsReal::mean(RooRealVar& obs, const RooArgSet& nset); virtual Int_tRooAbsReal::minTrialSamples(const RooArgSet&) const; RooAbsMoment*RooAbsReal::moment(RooRealVar& obs, Int_t order, Bool_t central, Bool_t takeRoot); RooAbsMoment*RooAbsReal::moment(RooRealVar& obs, const RooArgSet& normObs, Int_t order, Bool_t central, Bool_t takeRoot, Bool_t intNormObs); static voidRooPrintable::nameFieldLength(Int_t newLen); const TNamed*RooAbsArg::namePtr() const; virtual Bool_tTObject::Notify(); Int_tRooAbsArg::numCaches() const; static Int_tRooAbsReal::numEvalErrorItems(",MatchSource.WIKI,root/html534/Roo2DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DMomentMorphFunction.html
https://root.cern/root/html534/Roo2DMomentMorphFunction.html:17893,Testability,log,logEvalError,17893,"irtual Bool_tRooAbsReal::isIdentical(const RooAbsArg& other, Bool_t assumeSameType = kFALSE); virtual Bool_tRooAbsArg::isLValue() const; virtual Bool_tRooAbsReal::isOffsetting() const; Bool_tTObject::IsOnHeap() const; Bool_tRooAbsArg::isShapeDirty() const; Bool_tRooAbsArg::isShapeServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isShapeServer(const char* name) const; virtual Bool_tRooAbsArg::IsSortable() const; Bool_tRooAbsArg::isValueDirty() const; Bool_tRooAbsArg::isValueDirtyAndClear() const; Bool_tRooAbsArg::isValueOrShapeDirtyAndClear() const; Bool_tRooAbsArg::isValueServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isValueServer(const char* name) const; Bool_tTObject::IsZombie() const; voidRooAbsArg::leafNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t recurseNonDerived = kFALSE) const; Bool_tRooAbsArg::localNoDirtyInhibit() const; voidRooAbsReal::logEvalError(const char* message, const char* serverValueString = 0) const; static voidRooAbsReal::logEvalError(const RooAbsReal* originator, const char* origName, const char* message, const char* serverValueString = 0); virtual voidTNamed::ls(Option_t* option = """") const; virtual Double_tRooAbsReal::maxVal(Int_t code) const; voidTObject::MayNotUse(const char* method) const; RooAbsMoment*RooAbsReal::mean(RooRealVar& obs); RooAbsMoment*RooAbsReal::mean(RooRealVar& obs, const RooArgSet& nset); virtual Int_tRooAbsReal::minTrialSamples(const RooArgSet&) const; RooAbsMoment*RooAbsReal::moment(RooRealVar& obs, Int_t order, Bool_t central, Bool_t takeRoot); RooAbsMoment*RooAbsReal::moment(RooRealVar& obs, const RooArgSet& normObs, Int_t order, Bool_t central, Bool_t takeRoot, Bool_t intNormObs); static voidRooPrintable::nameFieldLength(Int_t newLen); const TNamed*RooAbsArg::namePtr() const; virtual Bool_tTObject::Notify(); Int_tRooAbsArg::numCaches() const; static Int_tRooAbsReal::numEvalErrorItems(); static Int_tRooAbsReal::numEvalErrors(); Bool_tRooAbsArg::observableOverlaps(const RooAbsData* d",MatchSource.WIKI,root/html534/Roo2DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DMomentMorphFunction.html
https://root.cern/root/html534/Roo2DMomentMorphFunction.html:18922,Testability,test,testArg,18922,"iginator, const char* origName, const char* message, const char* serverValueString = 0); virtual voidTNamed::ls(Option_t* option = """") const; virtual Double_tRooAbsReal::maxVal(Int_t code) const; voidTObject::MayNotUse(const char* method) const; RooAbsMoment*RooAbsReal::mean(RooRealVar& obs); RooAbsMoment*RooAbsReal::mean(RooRealVar& obs, const RooArgSet& nset); virtual Int_tRooAbsReal::minTrialSamples(const RooArgSet&) const; RooAbsMoment*RooAbsReal::moment(RooRealVar& obs, Int_t order, Bool_t central, Bool_t takeRoot); RooAbsMoment*RooAbsReal::moment(RooRealVar& obs, const RooArgSet& normObs, Int_t order, Bool_t central, Bool_t takeRoot, Bool_t intNormObs); static voidRooPrintable::nameFieldLength(Int_t newLen); const TNamed*RooAbsArg::namePtr() const; virtual Bool_tTObject::Notify(); Int_tRooAbsArg::numCaches() const; static Int_tRooAbsReal::numEvalErrorItems(); static Int_tRooAbsReal::numEvalErrors(); Bool_tRooAbsArg::observableOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::observableOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; virtual Double_tRooAbsReal::offset() const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TNamed&TNamed::operator=(const TNamed& rhs); Bool_tRooAbsReal::operator==(Double_t value) const; virtual Bool_tRooAbsReal::operator==(const RooAbsArg& other); RooAbsArg::OperModeRooAbsArg::operMode() const; virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables); virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables, Roo",MatchSource.WIKI,root/html534/Roo2DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DMomentMorphFunction.html
https://root.cern/root/html534/Roo2DMomentMorphFunction.html:19017,Testability,test,testArg,19017,"l voidTNamed::ls(Option_t* option = """") const; virtual Double_tRooAbsReal::maxVal(Int_t code) const; voidTObject::MayNotUse(const char* method) const; RooAbsMoment*RooAbsReal::mean(RooRealVar& obs); RooAbsMoment*RooAbsReal::mean(RooRealVar& obs, const RooArgSet& nset); virtual Int_tRooAbsReal::minTrialSamples(const RooArgSet&) const; RooAbsMoment*RooAbsReal::moment(RooRealVar& obs, Int_t order, Bool_t central, Bool_t takeRoot); RooAbsMoment*RooAbsReal::moment(RooRealVar& obs, const RooArgSet& normObs, Int_t order, Bool_t central, Bool_t takeRoot, Bool_t intNormObs); static voidRooPrintable::nameFieldLength(Int_t newLen); const TNamed*RooAbsArg::namePtr() const; virtual Bool_tTObject::Notify(); Int_tRooAbsArg::numCaches() const; static Int_tRooAbsReal::numEvalErrorItems(); static Int_tRooAbsReal::numEvalErrors(); Bool_tRooAbsArg::observableOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::observableOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; virtual Double_tRooAbsReal::offset() const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TNamed&TNamed::operator=(const TNamed& rhs); Bool_tRooAbsReal::operator==(Double_t value) const; virtual Bool_tRooAbsReal::operator==(const RooAbsArg& other); RooAbsArg::OperModeRooAbsArg::operMode() const; virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables); virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables, RooArgSet& optNodes, RooLinkedList& processedNodes); Bool_tRooAbsArg::overlaps(const RooAbsArg& te",MatchSource.WIKI,root/html534/Roo2DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DMomentMorphFunction.html
https://root.cern/root/html534/Roo2DMomentMorphFunction.html:20019,Testability,test,testArg,20019," RooAbsArg& testArg) const; Bool_tRooAbsArg::observableOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; virtual Double_tRooAbsReal::offset() const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TNamed&TNamed::operator=(const TNamed& rhs); Bool_tRooAbsReal::operator==(Double_t value) const; virtual Bool_tRooAbsReal::operator==(const RooAbsArg& other); RooAbsArg::OperModeRooAbsArg::operMode() const; virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables); virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables, RooArgSet& optNodes, RooLinkedList& processedNodes); Bool_tRooAbsArg::overlaps(const RooAbsArg& testArg, Bool_t valueOnly = kFALSE) const; const RooArgSet*RooAbsArg::ownedComponents() const; virtual voidTObject::Paint(Option_t* option = """"); virtual RooPlot*RooAbsReal::plotOn(RooPlot* frame, RooLinkedList& cmdList) const; virtual RooPlot*RooAbsReal::plotOn(RooPlot* frame, const RooCmdArg& arg1 = RooCmdArg(), const RooCmdArg& arg2 = RooCmdArg(), const RooCmdArg& arg3 = RooCmdArg(), const RooCmdArg& arg4 = RooCmdArg(), const RooCmdArg& arg5 = RooCmdArg(), const RooCmdArg& arg6 = RooCmdArg(), const RooCmdArg& arg7 = RooCmdArg(), const RooCmdArg& arg8 = RooCmdArg(), const RooCmdArg& arg9 = RooCmdArg(), const RooCmdArg& arg10 = RooCmdArg()) const; virtual list<Double_t>*RooAbsReal::plotSamplingHint(RooAbsRealLValue&, Double_t, Double_t) const; virtual RooPlot*RooAbsReal::plotSliceOn(RooPlot* frame, const RooArgSet& sliceSet, Option_t* drawOptions = ""L"", Double_t scaleFactor = 1.",MatchSource.WIKI,root/html534/Roo2DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DMomentMorphFunction.html
https://root.cern/root/html534/Roo2DMomentMorphFunction.html:26345,Testability,Test,TestBit,26345,"rty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsArg::setTransientAttribute(const Text_t* name, Bool_t value = kTRUE); virtual voidTObject::SetUniqueID(UInt_t uid); voidRooAbsReal::setUnit(const char* unit); voidRooAbsArg::setValueDirty() const; TIterator*RooAbsArg::shapeClientIterator() const; RooFIterRooAbsArg::shapeClientMIterator() const; virtual voidShowMembers(TMemberInspector&); RooAbsMoment*RooAbsReal::sigma(RooRealVar& obs); RooAbsMoment*RooAbsReal::sigma(RooRealVar& obs, const RooArgSet& nset); virtual Int_tTNamed::Sizeof() const; RooNumIntConfig*RooAbsReal::specialIntegratorConfig() const; RooNumIntConfig*RooAbsReal::specialIntegratorConfig(Bool_t createOnTheFly); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); const map<std::string,std::string>&RooAbsArg::stringAttributes() const; voidSummary() const; virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; const set<std::string>&RooAbsArg::transientAttributes() const; voidRooAbsArg::treeNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t doBranch = kTRUE, Bool_t doLeaf = kTRUE, Bool_t valueOnly = kFALSE, Bool_t recurseNonDerived = kFALSE) const; voidRooAbsArg::unRegisterCache(RooAbsCache& cache); virtual voidTObject::UseCurrentStyle(); TIterator*RooAbsArg::valueClientIterator() const; RooFIterRooAbsArg::valueClientMIterator() const; static voidRooAbsArg::verboseDirty(Bool_t flag); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; voidRooAbsArg::wireAllCaches(); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidRooAbsReal::writeToStream(ostream& os, Bool_t compact) const.",MatchSource.WIKI,root/html534/Roo2DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DMomentMorphFunction.html
https://root.cern/root/html534/Roo2DMomentMorphFunction.html:26384,Testability,Test,TestBits,26384,"rty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsArg::setTransientAttribute(const Text_t* name, Bool_t value = kTRUE); virtual voidTObject::SetUniqueID(UInt_t uid); voidRooAbsReal::setUnit(const char* unit); voidRooAbsArg::setValueDirty() const; TIterator*RooAbsArg::shapeClientIterator() const; RooFIterRooAbsArg::shapeClientMIterator() const; virtual voidShowMembers(TMemberInspector&); RooAbsMoment*RooAbsReal::sigma(RooRealVar& obs); RooAbsMoment*RooAbsReal::sigma(RooRealVar& obs, const RooArgSet& nset); virtual Int_tTNamed::Sizeof() const; RooNumIntConfig*RooAbsReal::specialIntegratorConfig() const; RooNumIntConfig*RooAbsReal::specialIntegratorConfig(Bool_t createOnTheFly); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); const map<std::string,std::string>&RooAbsArg::stringAttributes() const; voidSummary() const; virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; const set<std::string>&RooAbsArg::transientAttributes() const; voidRooAbsArg::treeNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t doBranch = kTRUE, Bool_t doLeaf = kTRUE, Bool_t valueOnly = kFALSE, Bool_t recurseNonDerived = kFALSE) const; voidRooAbsArg::unRegisterCache(RooAbsCache& cache); virtual voidTObject::UseCurrentStyle(); TIterator*RooAbsArg::valueClientIterator() const; RooFIterRooAbsArg::valueClientMIterator() const; static voidRooAbsArg::verboseDirty(Bool_t flag); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; voidRooAbsArg::wireAllCaches(); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidRooAbsReal::writeToStream(ostream& os, Bool_t compact) const.",MatchSource.WIKI,root/html534/Roo2DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DMomentMorphFunction.html
https://root.cern/root/html534/Roo2DMomentMorphFunction.html:3902,Usability,Clear,Clear,3902,"rtual RooFitResult*RooAbsReal::chi2FitTo(RooDataSet& xydata, const RooLinkedList& cmdList); virtual RooFitResult*RooAbsReal::chi2FitTo(RooDataHist& data, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); virtual RooFitResult*RooAbsReal::chi2FitTo(RooDataSet& xydata, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); static voidRooAbsReal::clearEvalErrorLog(); voidRooAbsArg::clearShapeDirty() const; voidRooAbsArg::clearValueAndShapeDirty() const; voidRooAbsArg::clearValueDirty() const; TIterator*RooAbsArg::clientIterator() const; virtual TObject*clone(const char* newname) const; virtual TObject*RooAbsArg::Clone(const char* newname = 0) const; virtual RooAbsArg*RooAbsArg::cloneTree(const char* newname = 0) const; virtual Int_tRooAbsArg::Compare(const TObject* other) const; virtual voidRooAbsArg::constOptimizeTestStatistic(RooAbsArg::ConstOpCode opcode, Bool_t doAlsoTrackingOpt = kTRUE); virtual voidTNamed::Copy(TObject& named) const; static UInt_tRooAbsArg::crc32(const char* data); static UInt_tRooAbsArg::crc32(const char* data, ULong_t sz, UInt_t crc = 0); virtual RooAbsReal*RooAbsReal::createChi2(RooDataHist& data, const RooLinkedList& cmdList); virtual RooAbsReal*RooAbsReal::createChi2(RooDataSet& data, const RooLinkedList& cmdList); virtual RooAbsReal*RooAbsReal::creat",MatchSource.WIKI,root/html534/Roo2DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DMomentMorphFunction.html
https://root.cern/root/html534/Roo2DMomentMorphFunction.html:3955,Usability,clear,clearEvalErrorLog,3955,", const RooLinkedList& cmdList); virtual RooFitResult*RooAbsReal::chi2FitTo(RooDataHist& data, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); virtual RooFitResult*RooAbsReal::chi2FitTo(RooDataSet& xydata, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); static voidRooAbsReal::clearEvalErrorLog(); voidRooAbsArg::clearShapeDirty() const; voidRooAbsArg::clearValueAndShapeDirty() const; voidRooAbsArg::clearValueDirty() const; TIterator*RooAbsArg::clientIterator() const; virtual TObject*clone(const char* newname) const; virtual TObject*RooAbsArg::Clone(const char* newname = 0) const; virtual RooAbsArg*RooAbsArg::cloneTree(const char* newname = 0) const; virtual Int_tRooAbsArg::Compare(const TObject* other) const; virtual voidRooAbsArg::constOptimizeTestStatistic(RooAbsArg::ConstOpCode opcode, Bool_t doAlsoTrackingOpt = kTRUE); virtual voidTNamed::Copy(TObject& named) const; static UInt_tRooAbsArg::crc32(const char* data); static UInt_tRooAbsArg::crc32(const char* data, ULong_t sz, UInt_t crc = 0); virtual RooAbsReal*RooAbsReal::createChi2(RooDataHist& data, const RooLinkedList& cmdList); virtual RooAbsReal*RooAbsReal::createChi2(RooDataSet& data, const RooLinkedList& cmdList); virtual RooAbsReal*RooAbsReal::createChi2(RooDataHist& data, const RooCmdArg& arg1 = RooCmdArg:",MatchSource.WIKI,root/html534/Roo2DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DMomentMorphFunction.html
https://root.cern/root/html534/Roo2DMomentMorphFunction.html:3991,Usability,clear,clearShapeDirty,3991,"rtual RooFitResult*RooAbsReal::chi2FitTo(RooDataHist& data, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); virtual RooFitResult*RooAbsReal::chi2FitTo(RooDataSet& xydata, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); static voidRooAbsReal::clearEvalErrorLog(); voidRooAbsArg::clearShapeDirty() const; voidRooAbsArg::clearValueAndShapeDirty() const; voidRooAbsArg::clearValueDirty() const; TIterator*RooAbsArg::clientIterator() const; virtual TObject*clone(const char* newname) const; virtual TObject*RooAbsArg::Clone(const char* newname = 0) const; virtual RooAbsArg*RooAbsArg::cloneTree(const char* newname = 0) const; virtual Int_tRooAbsArg::Compare(const TObject* other) const; virtual voidRooAbsArg::constOptimizeTestStatistic(RooAbsArg::ConstOpCode opcode, Bool_t doAlsoTrackingOpt = kTRUE); virtual voidTNamed::Copy(TObject& named) const; static UInt_tRooAbsArg::crc32(const char* data); static UInt_tRooAbsArg::crc32(const char* data, ULong_t sz, UInt_t crc = 0); virtual RooAbsReal*RooAbsReal::createChi2(RooDataHist& data, const RooLinkedList& cmdList); virtual RooAbsReal*RooAbsReal::createChi2(RooDataSet& data, const RooLinkedList& cmdList); virtual RooAbsReal*RooAbsReal::createChi2(RooDataHist& data, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = Ro",MatchSource.WIKI,root/html534/Roo2DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DMomentMorphFunction.html
https://root.cern/root/html534/Roo2DMomentMorphFunction.html:4031,Usability,clear,clearValueAndShapeDirty,4031,"DataHist& data, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); virtual RooFitResult*RooAbsReal::chi2FitTo(RooDataSet& xydata, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); static voidRooAbsReal::clearEvalErrorLog(); voidRooAbsArg::clearShapeDirty() const; voidRooAbsArg::clearValueAndShapeDirty() const; voidRooAbsArg::clearValueDirty() const; TIterator*RooAbsArg::clientIterator() const; virtual TObject*clone(const char* newname) const; virtual TObject*RooAbsArg::Clone(const char* newname = 0) const; virtual RooAbsArg*RooAbsArg::cloneTree(const char* newname = 0) const; virtual Int_tRooAbsArg::Compare(const TObject* other) const; virtual voidRooAbsArg::constOptimizeTestStatistic(RooAbsArg::ConstOpCode opcode, Bool_t doAlsoTrackingOpt = kTRUE); virtual voidTNamed::Copy(TObject& named) const; static UInt_tRooAbsArg::crc32(const char* data); static UInt_tRooAbsArg::crc32(const char* data, ULong_t sz, UInt_t crc = 0); virtual RooAbsReal*RooAbsReal::createChi2(RooDataHist& data, const RooLinkedList& cmdList); virtual RooAbsReal*RooAbsReal::createChi2(RooDataSet& data, const RooLinkedList& cmdList); virtual RooAbsReal*RooAbsReal::createChi2(RooDataHist& data, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = Roo",MatchSource.WIKI,root/html534/Roo2DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DMomentMorphFunction.html
https://root.cern/root/html534/Roo2DMomentMorphFunction.html:4079,Usability,clear,clearValueDirty,4079,"mdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); virtual RooFitResult*RooAbsReal::chi2FitTo(RooDataSet& xydata, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); static voidRooAbsReal::clearEvalErrorLog(); voidRooAbsArg::clearShapeDirty() const; voidRooAbsArg::clearValueAndShapeDirty() const; voidRooAbsArg::clearValueDirty() const; TIterator*RooAbsArg::clientIterator() const; virtual TObject*clone(const char* newname) const; virtual TObject*RooAbsArg::Clone(const char* newname = 0) const; virtual RooAbsArg*RooAbsArg::cloneTree(const char* newname = 0) const; virtual Int_tRooAbsArg::Compare(const TObject* other) const; virtual voidRooAbsArg::constOptimizeTestStatistic(RooAbsArg::ConstOpCode opcode, Bool_t doAlsoTrackingOpt = kTRUE); virtual voidTNamed::Copy(TObject& named) const; static UInt_tRooAbsArg::crc32(const char* data); static UInt_tRooAbsArg::crc32(const char* data, ULong_t sz, UInt_t crc = 0); virtual RooAbsReal*RooAbsReal::createChi2(RooDataHist& data, const RooLinkedList& cmdList); virtual RooAbsReal*RooAbsReal::createChi2(RooDataSet& data, const RooLinkedList& cmdList); virtual RooAbsReal*RooAbsReal::createChi2(RooDataHist& data, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooC",MatchSource.WIKI,root/html534/Roo2DMomentMorphFunction.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/Roo2DMomentMorphFunction.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:2132,Availability,avail,available,2132,"ts of. - A constructor that declares the required basis functions using the declareBasis() method.; The declareBasis() function assigns a unique identifier code to each declare basis. - An implementation of coefficient(Int_t code) returning the coefficient value for each; declared basis function. Optionally, analytical integrals can be provided for the coefficient functions. The; interface for this is quite similar to that for integrals of regular PDFs. Two functions,. Int_t getCoefAnalyticalIntegral(Int_t coef, RooArgSet& allVars, RooArgSet& analVars, const char* rangeName) const; Double_t coefAnalyticalIntegral(Int_t coef, Int_t code, const char* rangeName) const. advertise the coefficient integration capabilities and implement them respectively.; Please see RooAbsPdf for additional details. Advertised analytical integrals must be; valid for all coefficients. Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. virtual~RooAbsAnaConvPdf(); voidTObject::AbstractMethod(const char* method) const; Bool_tRooAbsArg::addOwnedComponents(const RooArgSet& comps); voidRooAbsArg::addParameters(RooArgSet& params, const RooArgSet* nset = 0, Bool_t stripDisconnected = kTRUE) const; voidRooAbsArg::addServer(RooAbsArg& server, Bool_t valueProp = kTRUE, Bool_t shapeProp = kFALSE); voidRooAbsArg::addServerList(RooAbsCollection& serverList, Bool_t valueProp = kTRUE, Bool_t shapeProp = kFALSE); const char*RooAbsArg::aggregateCacheUniqueSuffix() const; virtual Double_tRooAbsReal::analyticalIntegral(Int_t code, const char* rangeName = 0) const; virtual Double_tanalyticalIntegralWN(Int_t code, const RooArgSet* normSet, const char* rangeName = 0) const; virtual voidTObject::AppendPad(Option_t* option = """"); TF1*RooAbsReal::asTF(const RooArgList& obs, const RooArgList& pars = RooArgList(), const RooArgSet& nset = RooArgSet()) const; voidRooAbsArg::attachDataSet(const RooAbsData&",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:12020,Availability,Error,Error,12020,,MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:12190,Availability,Error,ErrorLoggingModeRooAbsReal,12190,,MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:12318,Availability,error,error,12318,,MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:12402,Availability,error,error,12402,,MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:31467,Availability,Error,ErrorLoggingMode,31467,"setBit(UInt_t f); virtual voidRooAbsPdf::resetErrorCounters(Int_t resetValue = 10); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual Bool_tRooAbsPdf::selfNormalized() const; TIterator*RooAbsArg::serverIterator() const; RooFIterRooAbsArg::serverMIterator() const; virtual voidRooAbsArg::serverNameChangeHook(const RooAbsArg*, const RooAbsArg*); voidRooAbsArg::setAttribute(const Text_t* name, Bool_t value = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidsetCacheAndTrackHints(RooArgSet&); static voidRooAbsReal::setCacheCheck(Bool_t flag); virtual Bool_tRooAbsReal::setData(RooAbsData&, Bool_t = kTRUE); static voidRooAbsArg::setDirtyInhibit(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidRooAbsReal::setEvalErrorLoggingMode(RooAbsReal::ErrorLoggingMode m); virtual voidRooAbsArg::setExpensiveObjectCache(RooExpensiveObjectCache& cache); voidRooAbsPdf::setGeneratorConfig(); voidRooAbsPdf::setGeneratorConfig(const RooNumGenConfig& config); static voidRooAbsReal::setHideOffset(Bool_t flag); voidRooAbsReal::setIntegratorConfig(); voidRooAbsReal::setIntegratorConfig(const RooNumIntConfig& config); voidRooAbsArg::setLocalNoDirtyInhibit(Bool_t flag) const; virtual voidRooAbsArg::SetName(const char* name); virtual voidRooAbsArg::SetNameTitle(const char* name, const char* title); voidRooAbsPdf::setNormRange(const char* rangeName); voidRooAbsPdf::setNormRangeOverride(const char* rangeName); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsArg::setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); voidRooAbsReal::setParameterizeIntegral(const RooArgSet& paramVars); voidRooAbsReal::setPlotLabel(const char* label); voidRooAbsArg::setProhibitServerRedirect(Bool_t flag); voidRooAbsArg::setShapeDirty() const; voidRooAbs",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:40131,Availability,Error,ErrorLoggingMode,40131,"rce) const; virtual voidRooAbsReal::setTreeBranchStatus(TTree& t, Bool_t active); voidRooAbsArg::setValueDirty(const RooAbsArg* source) const; virtual voidRooAbsReal::syncCache(const RooArgSet* set = 0); virtual Bool_tRooAbsPdf::syncNormalization(const RooArgSet* dset, Bool_t adjustProxies = kTRUE) const; Double_tRooAbsReal::traceEval(const RooArgSet* set) const; voidRooAbsArg::unRegisterProxy(RooArgProxy& proxy); voidRooAbsArg::unRegisterProxy(RooSetProxy& proxy); voidRooAbsArg::unRegisterProxy(RooListProxy& proxy). Data Members; public:. enum RooAbsPdf::ExtendMode { CanNotBeExtended; CanBeExtended; MustBeExtended; };; enum RooAbsReal::ScaleType { Raw; Relative; NumEvent; RelativeExpected; };; enum RooAbsReal::ErrorLoggingMode { PrintErrors; CollectErrors; CountErrors; Ignore; };; enum RooAbsArg::ConstOpCode { Activate; DeActivate; ConfigChange; ValueChange; };; enum RooAbsArg::CacheMode { Always; NotAdvised; Never; };; enum RooAbsArg::OperMode { Auto; AClean; ADirty; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };; enum RooPrintable::ContentsOption { kName; kClassName; kValue; kArgs; kExtras; kAddress; kTitle; kCollectionHeader; };; enum RooPrintable::StyleOption { kInline; kSingleLine; kStandard; kVerbose; kTreeStructure; };. public:. static map<RooAbsArg*,TRefArray*>RooAbsArg::_ioEvoListtemporary holding list for proxies needed in schema evolution ; static stack<RooAbsArg*>RooAbsArg::_ioReadStackreading stack ; static const UInt_tRooAbsArg::fnv1a32start; static const ULong64_tRooAbsArg::fnv1a64start. protected:. RooArgList_basisList! List of created basis functions; set<std::string>RooAbsArg::_boolAttribBoolean attributes; set<std::string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); Bool_tRooAbsReal::_boolValue! Transien",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:42716,Availability,error,errors,42716,efCountListRooAbsArg::_clientListlist of client objects; RooRefCountListRooAbsArg::_clientListShapesubset of clients that requested shape dirty flag propagation; RooRefCountListRooAbsArg::_clientListValuesubset of clients that requested value dirty flag propagation; TIterator*RooAbsArg::_clientShapeIter! Iterator over _clientListShape ; TIterator*RooAbsArg::_clientValueIter! Iterator over _clientListValue ; RooAICRegistry_codeReg! Registry of analytical integration codes; RooObjCacheManager_coefNormMgrCoefficient normalization manager; RooArgSet*_convNormSet! Subset of last normalization that applies to convolutions; RooListProxy_convSetSet of (resModel (x) basisFunc) convolution objects; TIterator*_convSetIter! Iterator over _convNormSet; RooRealProxy_convVarConvolution variable; Bool_tRooAbsArg::_deleteWatch! Delete watch flag ; RooExpensiveObjectCache*RooAbsArg::_eocachePointer to global cache manager for any expensive components created by this object; Int_tRooAbsPdf::_errorCountNumber of errors remaining to print; static Bool_tRooAbsPdf::_evalError; Bool_tRooAbsArg::_fastAllow fast access mode in getVal() and proxies; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsReal::_hideOffsetOffset hiding flag; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; Bool_tRooAbsArg::_isConstant! Cached isConstant status ; Bool_t_isCopy; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; RooRealProxy_modelOriginal model; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist.,MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:1825,Deployability,integrat,integration,1825,"lutionModel implement; _ _ _ _; R_k(x,b,c) = Int(dx') basis_k(x',b) * resModel(x-x',c). which RooAbsAnaConvPdf uses to construct the pdf for [ Phys (x) R ] :; _ _ _ _ _ _; PDF(x,a,b,c) = Sum_k coef_k(a) * R_k(x,b,c). A minimal implementation of a RooAbsAnaConvPdf physics model consists of. - A constructor that declares the required basis functions using the declareBasis() method.; The declareBasis() function assigns a unique identifier code to each declare basis. - An implementation of coefficient(Int_t code) returning the coefficient value for each; declared basis function. Optionally, analytical integrals can be provided for the coefficient functions. The; interface for this is quite similar to that for integrals of regular PDFs. Two functions,. Int_t getCoefAnalyticalIntegral(Int_t coef, RooArgSet& allVars, RooArgSet& analVars, const char* rangeName) const; Double_t coefAnalyticalIntegral(Int_t coef, Int_t code, const char* rangeName) const. advertise the coefficient integration capabilities and implement them respectively.; Please see RooAbsPdf for additional details. Advertised analytical integrals must be; valid for all coefficients. Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. virtual~RooAbsAnaConvPdf(); voidTObject::AbstractMethod(const char* method) const; Bool_tRooAbsArg::addOwnedComponents(const RooArgSet& comps); voidRooAbsArg::addParameters(RooArgSet& params, const RooArgSet* nset = 0, Bool_t stripDisconnected = kTRUE) const; voidRooAbsArg::addServer(RooAbsArg& server, Bool_t valueProp = kTRUE, Bool_t shapeProp = kFALSE); voidRooAbsArg::addServerList(RooAbsCollection& serverList, Bool_t valueProp = kTRUE, Bool_t shapeProp = kFALSE); const char*RooAbsArg::aggregateCacheUniqueSuffix() const; virtual Double_tRooAbsReal::analyticalIntegral(Int_t code, const char* rangeName = 0) const; virtual Double_tanalyticalIntegralWN(Int_t code, con",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:42166,Deployability,integrat,integration,42166,"asisList! List of created basis functions; set<std::string>RooAbsArg::_boolAttribBoolean attributes; set<std::string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); Bool_tRooAbsReal::_boolValue! Transient cache for bool values from tree branches ; UChar_tRooAbsReal::_byteValue! Transient cache for byte values from tree branches ; static Bool_tRooAbsReal::_cacheCheckIf true, always validate contents of clean which outcome of evaluate(); deque<RooAbsCache*>RooAbsArg::_cacheListlist of caches; RooRefCountListRooAbsArg::_clientListlist of client objects; RooRefCountListRooAbsArg::_clientListShapesubset of clients that requested shape dirty flag propagation; RooRefCountListRooAbsArg::_clientListValuesubset of clients that requested value dirty flag propagation; TIterator*RooAbsArg::_clientShapeIter! Iterator over _clientListShape ; TIterator*RooAbsArg::_clientValueIter! Iterator over _clientListValue ; RooAICRegistry_codeReg! Registry of analytical integration codes; RooObjCacheManager_coefNormMgrCoefficient normalization manager; RooArgSet*_convNormSet! Subset of last normalization that applies to convolutions; RooListProxy_convSetSet of (resModel (x) basisFunc) convolution objects; TIterator*_convSetIter! Iterator over _convNormSet; RooRealProxy_convVarConvolution variable; Bool_tRooAbsArg::_deleteWatch! Delete watch flag ; RooExpensiveObjectCache*RooAbsArg::_eocachePointer to global cache manager for any expensive components created by this object; Int_tRooAbsPdf::_errorCountNumber of errors remaining to print; static Bool_tRooAbsPdf::_evalError; Bool_tRooAbsArg::_fastAllow fast access mode in getVal() and proxies; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsReal::_hideOffsetOffset hiding flag; static Bo",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:42990,Deployability,integrat,integration,42990,efCountListRooAbsArg::_clientListlist of client objects; RooRefCountListRooAbsArg::_clientListShapesubset of clients that requested shape dirty flag propagation; RooRefCountListRooAbsArg::_clientListValuesubset of clients that requested value dirty flag propagation; TIterator*RooAbsArg::_clientShapeIter! Iterator over _clientListShape ; TIterator*RooAbsArg::_clientValueIter! Iterator over _clientListValue ; RooAICRegistry_codeReg! Registry of analytical integration codes; RooObjCacheManager_coefNormMgrCoefficient normalization manager; RooArgSet*_convNormSet! Subset of last normalization that applies to convolutions; RooListProxy_convSetSet of (resModel (x) basisFunc) convolution objects; TIterator*_convSetIter! Iterator over _convNormSet; RooRealProxy_convVarConvolution variable; Bool_tRooAbsArg::_deleteWatch! Delete watch flag ; RooExpensiveObjectCache*RooAbsArg::_eocachePointer to global cache manager for any expensive components created by this object; Int_tRooAbsPdf::_errorCountNumber of errors remaining to print; static Bool_tRooAbsPdf::_evalError; Bool_tRooAbsArg::_fastAllow fast access mode in getVal() and proxies; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsReal::_hideOffsetOffset hiding flag; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; Bool_tRooAbsArg::_isConstant! Cached isConstant status ; Bool_t_isCopy; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; RooRealProxy_modelOriginal model; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist.,MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:45069,Deployability,configurat,configuration,45069," by _normMgr); RooObjCacheManagerRooAbsPdf::_normMgrThe cache manager; TStringRooAbsPdf::_normRangeNormalization range; static TStringRooAbsPdf::_normRangeOverride; RooArgSet*RooAbsPdf::_normSet! Normalization set with for above integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title.",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:45166,Deployability,integrat,integrator,45166," by _normMgr); RooObjCacheManagerRooAbsPdf::_normMgrThe cache manager; TStringRooAbsPdf::_normRangeNormalization range; static TStringRooAbsPdf::_normRangeOverride; RooArgSet*RooAbsPdf::_normSet! Normalization set with for above integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title.",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:45177,Deployability,configurat,configuration,45177," by _normMgr); RooObjCacheManagerRooAbsPdf::_normMgrThe cache manager; TStringRooAbsPdf::_normRangeNormalization range; static TStringRooAbsPdf::_normRangeOverride; RooArgSet*RooAbsPdf::_normSet! Normalization set with for above integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title.",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:47051,Deployability,deploy,deploy,47051,"ession, const RooArgList& params); Declare a basis function for use in this physics model. The string expression; must be a valid RooFormulVar expression representing the basis function, referring; to the convolution variable as '@0', and any additional parameters (supplied in; 'params' as '@1','@2' etc. The return value is a unique identifier code, that will be passed to coefficient(); to identify the basis function for which the coefficient is requested. If the; resolution model used does not support the declared basis function, code -1 is; returned. Bool_t changeModel(const RooResolutionModel& newModel); Change the current resolution model to newModel. RooAbsGenContext* genContext(const RooArgSet& vars, const RooDataSet* prototype = 0, const RooArgSet* auxProto = 0, Bool_t verbose = kFALSE) const; Create a generator context for this p.d.f. If both the p.d.f and the resolution model; support internal generation of the convolution observable on an infinite domain,; deploy a specialized convolution generator context, which generates the physics distribution; and the smearing separately, adding them a posteriori. If this is not possible return; a (slower) generic generation context that uses accept/reject sampling. Bool_t isDirectGenSafe(const RooAbsArg& arg) const; Return true if it is safe to generate the convolution observable; from the internal generator (this is the case if the chosen resolution; model is the truth model). const RooRealVar* convVar() const; Return a pointer to the convolution variable instance used in the resolution model. Double_t evaluate() const; Calculate the current unnormalized value of the PDF. PDF = sum_k coef_k * [ basis_k (x) ResModel ]. Int_t getAnalyticalIntegralWN(RooArgSet& allVars, RooArgSet& analVars, const RooArgSet* normSet, const char* rangeName = 0) const; Advertise capability to perform (analytical) integrals; internally. For a given integration request over allVars while; normalized over normSet2 and in range 'rangeName', r",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:47978,Deployability,integrat,integration,47978,"e physics distribution; and the smearing separately, adding them a posteriori. If this is not possible return; a (slower) generic generation context that uses accept/reject sampling. Bool_t isDirectGenSafe(const RooAbsArg& arg) const; Return true if it is safe to generate the convolution observable; from the internal generator (this is the case if the chosen resolution; model is the truth model). const RooRealVar* convVar() const; Return a pointer to the convolution variable instance used in the resolution model. Double_t evaluate() const; Calculate the current unnormalized value of the PDF. PDF = sum_k coef_k * [ basis_k (x) ResModel ]. Int_t getAnalyticalIntegralWN(RooArgSet& allVars, RooArgSet& analVars, const RooArgSet* normSet, const char* rangeName = 0) const; Advertise capability to perform (analytical) integrals; internally. For a given integration request over allVars while; normalized over normSet2 and in range 'rangeName', returns; largest subset that can be performed internally in analVars; Return code is unique integer code identifying integration scenario; to be passed to analyticalIntegralWN() to calculate requeste integral. Class RooAbsAnaConv defers analytical integration request to; resolution model and/or coefficient implementations and; aggregates results into composite configuration with a unique; code assigned by RooAICRegistry. Double_t analyticalIntegralWN(Int_t code, const RooArgSet* normSet, const char* rangeName = 0) const; Return analytical integral defined by given code, which is returned; by getAnalyticalIntegralWN(). For unnormalized integrals the returned value is; _ _; PDF = sum_k Int(dx) coef_k * Int(dy) [ basis_k (x) ResModel ].; _; where x is the set of coefficient dependents to be integrated; and y the set of basis function dependents to be integrated. For normalized integrals this becomes. sum_k Int(dx) coef_k * Int(dy) [ basis_k (x) ResModel ].; PDF = --------------------------------------------------------; sum_k Int(dv) coef_k",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:48186,Deployability,integrat,integration,48186,"e physics distribution; and the smearing separately, adding them a posteriori. If this is not possible return; a (slower) generic generation context that uses accept/reject sampling. Bool_t isDirectGenSafe(const RooAbsArg& arg) const; Return true if it is safe to generate the convolution observable; from the internal generator (this is the case if the chosen resolution; model is the truth model). const RooRealVar* convVar() const; Return a pointer to the convolution variable instance used in the resolution model. Double_t evaluate() const; Calculate the current unnormalized value of the PDF. PDF = sum_k coef_k * [ basis_k (x) ResModel ]. Int_t getAnalyticalIntegralWN(RooArgSet& allVars, RooArgSet& analVars, const RooArgSet* normSet, const char* rangeName = 0) const; Advertise capability to perform (analytical) integrals; internally. For a given integration request over allVars while; normalized over normSet2 and in range 'rangeName', returns; largest subset that can be performed internally in analVars; Return code is unique integer code identifying integration scenario; to be passed to analyticalIntegralWN() to calculate requeste integral. Class RooAbsAnaConv defers analytical integration request to; resolution model and/or coefficient implementations and; aggregates results into composite configuration with a unique; code assigned by RooAICRegistry. Double_t analyticalIntegralWN(Int_t code, const RooArgSet* normSet, const char* rangeName = 0) const; Return analytical integral defined by given code, which is returned; by getAnalyticalIntegralWN(). For unnormalized integrals the returned value is; _ _; PDF = sum_k Int(dx) coef_k * Int(dy) [ basis_k (x) ResModel ].; _; where x is the set of coefficient dependents to be integrated; and y the set of basis function dependents to be integrated. For normalized integrals this becomes. sum_k Int(dx) coef_k * Int(dy) [ basis_k (x) ResModel ].; PDF = --------------------------------------------------------; sum_k Int(dv) coef_k",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:48317,Deployability,integrat,integration,48317,"generate the convolution observable; from the internal generator (this is the case if the chosen resolution; model is the truth model). const RooRealVar* convVar() const; Return a pointer to the convolution variable instance used in the resolution model. Double_t evaluate() const; Calculate the current unnormalized value of the PDF. PDF = sum_k coef_k * [ basis_k (x) ResModel ]. Int_t getAnalyticalIntegralWN(RooArgSet& allVars, RooArgSet& analVars, const RooArgSet* normSet, const char* rangeName = 0) const; Advertise capability to perform (analytical) integrals; internally. For a given integration request over allVars while; normalized over normSet2 and in range 'rangeName', returns; largest subset that can be performed internally in analVars; Return code is unique integer code identifying integration scenario; to be passed to analyticalIntegralWN() to calculate requeste integral. Class RooAbsAnaConv defers analytical integration request to; resolution model and/or coefficient implementations and; aggregates results into composite configuration with a unique; code assigned by RooAICRegistry. Double_t analyticalIntegralWN(Int_t code, const RooArgSet* normSet, const char* rangeName = 0) const; Return analytical integral defined by given code, which is returned; by getAnalyticalIntegralWN(). For unnormalized integrals the returned value is; _ _; PDF = sum_k Int(dx) coef_k * Int(dy) [ basis_k (x) ResModel ].; _; where x is the set of coefficient dependents to be integrated; and y the set of basis function dependents to be integrated. For normalized integrals this becomes. sum_k Int(dx) coef_k * Int(dy) [ basis_k (x) ResModel ].; PDF = --------------------------------------------------------; sum_k Int(dv) coef_k * Int(dw) [ basis_k (x) ResModel ]. where x is the set of coefficient dependents to be integrated,; y the set of basis function dependents to be integrated,; v is the set of coefficient dependents over which is normalized and; w is the set of basis function depen",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:48432,Deployability,configurat,configuration,48432,"generate the convolution observable; from the internal generator (this is the case if the chosen resolution; model is the truth model). const RooRealVar* convVar() const; Return a pointer to the convolution variable instance used in the resolution model. Double_t evaluate() const; Calculate the current unnormalized value of the PDF. PDF = sum_k coef_k * [ basis_k (x) ResModel ]. Int_t getAnalyticalIntegralWN(RooArgSet& allVars, RooArgSet& analVars, const RooArgSet* normSet, const char* rangeName = 0) const; Advertise capability to perform (analytical) integrals; internally. For a given integration request over allVars while; normalized over normSet2 and in range 'rangeName', returns; largest subset that can be performed internally in analVars; Return code is unique integer code identifying integration scenario; to be passed to analyticalIntegralWN() to calculate requeste integral. Class RooAbsAnaConv defers analytical integration request to; resolution model and/or coefficient implementations and; aggregates results into composite configuration with a unique; code assigned by RooAICRegistry. Double_t analyticalIntegralWN(Int_t code, const RooArgSet* normSet, const char* rangeName = 0) const; Return analytical integral defined by given code, which is returned; by getAnalyticalIntegralWN(). For unnormalized integrals the returned value is; _ _; PDF = sum_k Int(dx) coef_k * Int(dy) [ basis_k (x) ResModel ].; _; where x is the set of coefficient dependents to be integrated; and y the set of basis function dependents to be integrated. For normalized integrals this becomes. sum_k Int(dx) coef_k * Int(dy) [ basis_k (x) ResModel ].; PDF = --------------------------------------------------------; sum_k Int(dv) coef_k * Int(dw) [ basis_k (x) ResModel ]. where x is the set of coefficient dependents to be integrated,; y the set of basis function dependents to be integrated,; v is the set of coefficient dependents over which is normalized and; w is the set of basis function depen",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:48868,Deployability,integrat,integrated,48868,"rangeName = 0) const; Advertise capability to perform (analytical) integrals; internally. For a given integration request over allVars while; normalized over normSet2 and in range 'rangeName', returns; largest subset that can be performed internally in analVars; Return code is unique integer code identifying integration scenario; to be passed to analyticalIntegralWN() to calculate requeste integral. Class RooAbsAnaConv defers analytical integration request to; resolution model and/or coefficient implementations and; aggregates results into composite configuration with a unique; code assigned by RooAICRegistry. Double_t analyticalIntegralWN(Int_t code, const RooArgSet* normSet, const char* rangeName = 0) const; Return analytical integral defined by given code, which is returned; by getAnalyticalIntegralWN(). For unnormalized integrals the returned value is; _ _; PDF = sum_k Int(dx) coef_k * Int(dy) [ basis_k (x) ResModel ].; _; where x is the set of coefficient dependents to be integrated; and y the set of basis function dependents to be integrated. For normalized integrals this becomes. sum_k Int(dx) coef_k * Int(dy) [ basis_k (x) ResModel ].; PDF = --------------------------------------------------------; sum_k Int(dv) coef_k * Int(dw) [ basis_k (x) ResModel ]. where x is the set of coefficient dependents to be integrated,; y the set of basis function dependents to be integrated,; v is the set of coefficient dependents over which is normalized and; w is the set of basis function dependents over which is normalized. Set x must be contained in v and set y must be contained in w. Int_t getCoefAnalyticalIntegral(Int_t coef, RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const; Default implementation of function advertising integration capabilities. The interface is; similar to that of getAnalyticalIntegral except that an integer code is added that; designates the coefficient number for which the integration capabilities are requested. This default ",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:48929,Deployability,integrat,integrated,48929,"rangeName = 0) const; Advertise capability to perform (analytical) integrals; internally. For a given integration request over allVars while; normalized over normSet2 and in range 'rangeName', returns; largest subset that can be performed internally in analVars; Return code is unique integer code identifying integration scenario; to be passed to analyticalIntegralWN() to calculate requeste integral. Class RooAbsAnaConv defers analytical integration request to; resolution model and/or coefficient implementations and; aggregates results into composite configuration with a unique; code assigned by RooAICRegistry. Double_t analyticalIntegralWN(Int_t code, const RooArgSet* normSet, const char* rangeName = 0) const; Return analytical integral defined by given code, which is returned; by getAnalyticalIntegralWN(). For unnormalized integrals the returned value is; _ _; PDF = sum_k Int(dx) coef_k * Int(dy) [ basis_k (x) ResModel ].; _; where x is the set of coefficient dependents to be integrated; and y the set of basis function dependents to be integrated. For normalized integrals this becomes. sum_k Int(dx) coef_k * Int(dy) [ basis_k (x) ResModel ].; PDF = --------------------------------------------------------; sum_k Int(dv) coef_k * Int(dw) [ basis_k (x) ResModel ]. where x is the set of coefficient dependents to be integrated,; y the set of basis function dependents to be integrated,; v is the set of coefficient dependents over which is normalized and; w is the set of basis function dependents over which is normalized. Set x must be contained in v and set y must be contained in w. Int_t getCoefAnalyticalIntegral(Int_t coef, RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const; Default implementation of function advertising integration capabilities. The interface is; similar to that of getAnalyticalIntegral except that an integer code is added that; designates the coefficient number for which the integration capabilities are requested. This default ",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:49210,Deployability,integrat,integrated,49210,"oAbsAnaConv defers analytical integration request to; resolution model and/or coefficient implementations and; aggregates results into composite configuration with a unique; code assigned by RooAICRegistry. Double_t analyticalIntegralWN(Int_t code, const RooArgSet* normSet, const char* rangeName = 0) const; Return analytical integral defined by given code, which is returned; by getAnalyticalIntegralWN(). For unnormalized integrals the returned value is; _ _; PDF = sum_k Int(dx) coef_k * Int(dy) [ basis_k (x) ResModel ].; _; where x is the set of coefficient dependents to be integrated; and y the set of basis function dependents to be integrated. For normalized integrals this becomes. sum_k Int(dx) coef_k * Int(dy) [ basis_k (x) ResModel ].; PDF = --------------------------------------------------------; sum_k Int(dv) coef_k * Int(dw) [ basis_k (x) ResModel ]. where x is the set of coefficient dependents to be integrated,; y the set of basis function dependents to be integrated,; v is the set of coefficient dependents over which is normalized and; w is the set of basis function dependents over which is normalized. Set x must be contained in v and set y must be contained in w. Int_t getCoefAnalyticalIntegral(Int_t coef, RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const; Default implementation of function advertising integration capabilities. The interface is; similar to that of getAnalyticalIntegral except that an integer code is added that; designates the coefficient number for which the integration capabilities are requested. This default implementation advertises that no internal integrals are supported. Double_t coefAnalyticalIntegral(Int_t coef, Int_t code, const char* rangeName = 0) const; Default implementation of function implementing advertised integrals. Only; the pass-through scenario (no integration) is implemented. Bool_t forceAnalyticalInt(const RooAbsArg& dep) const; This function forces RooRealIntegral to offer all integration de",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:49268,Deployability,integrat,integrated,49268,"oAbsAnaConv defers analytical integration request to; resolution model and/or coefficient implementations and; aggregates results into composite configuration with a unique; code assigned by RooAICRegistry. Double_t analyticalIntegralWN(Int_t code, const RooArgSet* normSet, const char* rangeName = 0) const; Return analytical integral defined by given code, which is returned; by getAnalyticalIntegralWN(). For unnormalized integrals the returned value is; _ _; PDF = sum_k Int(dx) coef_k * Int(dy) [ basis_k (x) ResModel ].; _; where x is the set of coefficient dependents to be integrated; and y the set of basis function dependents to be integrated. For normalized integrals this becomes. sum_k Int(dx) coef_k * Int(dy) [ basis_k (x) ResModel ].; PDF = --------------------------------------------------------; sum_k Int(dv) coef_k * Int(dw) [ basis_k (x) ResModel ]. where x is the set of coefficient dependents to be integrated,; y the set of basis function dependents to be integrated,; v is the set of coefficient dependents over which is normalized and; w is the set of basis function dependents over which is normalized. Set x must be contained in v and set y must be contained in w. Int_t getCoefAnalyticalIntegral(Int_t coef, RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const; Default implementation of function advertising integration capabilities. The interface is; similar to that of getAnalyticalIntegral except that an integer code is added that; designates the coefficient number for which the integration capabilities are requested. This default implementation advertises that no internal integrals are supported. Double_t coefAnalyticalIntegral(Int_t coef, Int_t code, const char* rangeName = 0) const; Default implementation of function implementing advertised integrals. Only; the pass-through scenario (no integration) is implemented. Bool_t forceAnalyticalInt(const RooAbsArg& dep) const; This function forces RooRealIntegral to offer all integration de",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:49647,Deployability,integrat,integration,49647,"ngeName = 0) const; Return analytical integral defined by given code, which is returned; by getAnalyticalIntegralWN(). For unnormalized integrals the returned value is; _ _; PDF = sum_k Int(dx) coef_k * Int(dy) [ basis_k (x) ResModel ].; _; where x is the set of coefficient dependents to be integrated; and y the set of basis function dependents to be integrated. For normalized integrals this becomes. sum_k Int(dx) coef_k * Int(dy) [ basis_k (x) ResModel ].; PDF = --------------------------------------------------------; sum_k Int(dv) coef_k * Int(dw) [ basis_k (x) ResModel ]. where x is the set of coefficient dependents to be integrated,; y the set of basis function dependents to be integrated,; v is the set of coefficient dependents over which is normalized and; w is the set of basis function dependents over which is normalized. Set x must be contained in v and set y must be contained in w. Int_t getCoefAnalyticalIntegral(Int_t coef, RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const; Default implementation of function advertising integration capabilities. The interface is; similar to that of getAnalyticalIntegral except that an integer code is added that; designates the coefficient number for which the integration capabilities are requested. This default implementation advertises that no internal integrals are supported. Double_t coefAnalyticalIntegral(Int_t coef, Int_t code, const char* rangeName = 0) const; Default implementation of function implementing advertised integrals. Only; the pass-through scenario (no integration) is implemented. Bool_t forceAnalyticalInt(const RooAbsArg& dep) const; This function forces RooRealIntegral to offer all integration dependents; to RooAbsAnaConvPdf::getAnalyticalIntegralWN() for consideration for; internal integration, if RooRealIntegral considers this to be unsafe (e.g. due; to hidden Jacobian terms). RooAbsAnaConvPdf will not attempt to actually integrate all these dependents; but feed them to the re",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:49823,Deployability,integrat,integration,49823,"x) coef_k * Int(dy) [ basis_k (x) ResModel ].; _; where x is the set of coefficient dependents to be integrated; and y the set of basis function dependents to be integrated. For normalized integrals this becomes. sum_k Int(dx) coef_k * Int(dy) [ basis_k (x) ResModel ].; PDF = --------------------------------------------------------; sum_k Int(dv) coef_k * Int(dw) [ basis_k (x) ResModel ]. where x is the set of coefficient dependents to be integrated,; y the set of basis function dependents to be integrated,; v is the set of coefficient dependents over which is normalized and; w is the set of basis function dependents over which is normalized. Set x must be contained in v and set y must be contained in w. Int_t getCoefAnalyticalIntegral(Int_t coef, RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const; Default implementation of function advertising integration capabilities. The interface is; similar to that of getAnalyticalIntegral except that an integer code is added that; designates the coefficient number for which the integration capabilities are requested. This default implementation advertises that no internal integrals are supported. Double_t coefAnalyticalIntegral(Int_t coef, Int_t code, const char* rangeName = 0) const; Default implementation of function implementing advertised integrals. Only; the pass-through scenario (no integration) is implemented. Bool_t forceAnalyticalInt(const RooAbsArg& dep) const; This function forces RooRealIntegral to offer all integration dependents; to RooAbsAnaConvPdf::getAnalyticalIntegralWN() for consideration for; internal integration, if RooRealIntegral considers this to be unsafe (e.g. due; to hidden Jacobian terms). RooAbsAnaConvPdf will not attempt to actually integrate all these dependents; but feed them to the resolution models integration interface, which will; make the final determination on how to integrate these dependents. Double_t getCoefNorm(Int_t coefIdx, const RooArgSet* nset, const TNamed* ",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:50140,Deployability,integrat,integration,50140,"basis_k (x) ResModel ]. where x is the set of coefficient dependents to be integrated,; y the set of basis function dependents to be integrated,; v is the set of coefficient dependents over which is normalized and; w is the set of basis function dependents over which is normalized. Set x must be contained in v and set y must be contained in w. Int_t getCoefAnalyticalIntegral(Int_t coef, RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const; Default implementation of function advertising integration capabilities. The interface is; similar to that of getAnalyticalIntegral except that an integer code is added that; designates the coefficient number for which the integration capabilities are requested. This default implementation advertises that no internal integrals are supported. Double_t coefAnalyticalIntegral(Int_t coef, Int_t code, const char* rangeName = 0) const; Default implementation of function implementing advertised integrals. Only; the pass-through scenario (no integration) is implemented. Bool_t forceAnalyticalInt(const RooAbsArg& dep) const; This function forces RooRealIntegral to offer all integration dependents; to RooAbsAnaConvPdf::getAnalyticalIntegralWN() for consideration for; internal integration, if RooRealIntegral considers this to be unsafe (e.g. due; to hidden Jacobian terms). RooAbsAnaConvPdf will not attempt to actually integrate all these dependents; but feed them to the resolution models integration interface, which will; make the final determination on how to integrate these dependents. Double_t getCoefNorm(Int_t coefIdx, const RooArgSet* nset, const TNamed* rangeName) const; Returns the normalization integral value of the coefficient with number coefIdx over normalization; set nset in range rangeName. void makeCoefVarList(RooArgList& ) const; Build complete list of coefficient variables. RooArgSet* coefVars(Int_t coefIdx) const; Return set of parameters with are used exclusively by the coefficient functions. void printM",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:50274,Deployability,integrat,integration,50274,"ient dependents over which is normalized and; w is the set of basis function dependents over which is normalized. Set x must be contained in v and set y must be contained in w. Int_t getCoefAnalyticalIntegral(Int_t coef, RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const; Default implementation of function advertising integration capabilities. The interface is; similar to that of getAnalyticalIntegral except that an integer code is added that; designates the coefficient number for which the integration capabilities are requested. This default implementation advertises that no internal integrals are supported. Double_t coefAnalyticalIntegral(Int_t coef, Int_t code, const char* rangeName = 0) const; Default implementation of function implementing advertised integrals. Only; the pass-through scenario (no integration) is implemented. Bool_t forceAnalyticalInt(const RooAbsArg& dep) const; This function forces RooRealIntegral to offer all integration dependents; to RooAbsAnaConvPdf::getAnalyticalIntegralWN() for consideration for; internal integration, if RooRealIntegral considers this to be unsafe (e.g. due; to hidden Jacobian terms). RooAbsAnaConvPdf will not attempt to actually integrate all these dependents; but feed them to the resolution models integration interface, which will; make the final determination on how to integrate these dependents. Double_t getCoefNorm(Int_t coefIdx, const RooArgSet* nset, const TNamed* rangeName) const; Returns the normalization integral value of the coefficient with number coefIdx over normalization; set nset in range rangeName. void makeCoefVarList(RooArgList& ) const; Build complete list of coefficient variables. RooArgSet* coefVars(Int_t coefIdx) const; Return set of parameters with are used exclusively by the coefficient functions. void printMultiline(ostream& stream, Int_t contents, Bool_t verbose = kFALSE, TString indent = """") const; Print info about this object to the specified stream. In addition to the ",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:50377,Deployability,integrat,integration,50377,"ient dependents over which is normalized and; w is the set of basis function dependents over which is normalized. Set x must be contained in v and set y must be contained in w. Int_t getCoefAnalyticalIntegral(Int_t coef, RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const; Default implementation of function advertising integration capabilities. The interface is; similar to that of getAnalyticalIntegral except that an integer code is added that; designates the coefficient number for which the integration capabilities are requested. This default implementation advertises that no internal integrals are supported. Double_t coefAnalyticalIntegral(Int_t coef, Int_t code, const char* rangeName = 0) const; Default implementation of function implementing advertised integrals. Only; the pass-through scenario (no integration) is implemented. Bool_t forceAnalyticalInt(const RooAbsArg& dep) const; This function forces RooRealIntegral to offer all integration dependents; to RooAbsAnaConvPdf::getAnalyticalIntegralWN() for consideration for; internal integration, if RooRealIntegral considers this to be unsafe (e.g. due; to hidden Jacobian terms). RooAbsAnaConvPdf will not attempt to actually integrate all these dependents; but feed them to the resolution models integration interface, which will; make the final determination on how to integrate these dependents. Double_t getCoefNorm(Int_t coefIdx, const RooArgSet* nset, const TNamed* rangeName) const; Returns the normalization integral value of the coefficient with number coefIdx over normalization; set nset in range rangeName. void makeCoefVarList(RooArgList& ) const; Build complete list of coefficient variables. RooArgSet* coefVars(Int_t coefIdx) const; Return set of parameters with are used exclusively by the coefficient functions. void printMultiline(ostream& stream, Int_t contents, Bool_t verbose = kFALSE, TString indent = """") const; Print info about this object to the specified stream. In addition to the ",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:50521,Deployability,integrat,integrate,50521,"Name = 0) const; Default implementation of function advertising integration capabilities. The interface is; similar to that of getAnalyticalIntegral except that an integer code is added that; designates the coefficient number for which the integration capabilities are requested. This default implementation advertises that no internal integrals are supported. Double_t coefAnalyticalIntegral(Int_t coef, Int_t code, const char* rangeName = 0) const; Default implementation of function implementing advertised integrals. Only; the pass-through scenario (no integration) is implemented. Bool_t forceAnalyticalInt(const RooAbsArg& dep) const; This function forces RooRealIntegral to offer all integration dependents; to RooAbsAnaConvPdf::getAnalyticalIntegralWN() for consideration for; internal integration, if RooRealIntegral considers this to be unsafe (e.g. due; to hidden Jacobian terms). RooAbsAnaConvPdf will not attempt to actually integrate all these dependents; but feed them to the resolution models integration interface, which will; make the final determination on how to integrate these dependents. Double_t getCoefNorm(Int_t coefIdx, const RooArgSet* nset, const TNamed* rangeName) const; Returns the normalization integral value of the coefficient with number coefIdx over normalization; set nset in range rangeName. void makeCoefVarList(RooArgList& ) const; Build complete list of coefficient variables. RooArgSet* coefVars(Int_t coefIdx) const; Return set of parameters with are used exclusively by the coefficient functions. void printMultiline(ostream& stream, Int_t contents, Bool_t verbose = kFALSE, TString indent = """") const; Print info about this object to the specified stream. In addition to the info; from RooAbsPdf::printStream() we add:. Verbose : detailed information on convolution integrals. void setCacheAndTrackHints(RooArgSet& ); Label OK'ed components with cache-and-track. Double_t getCoefNorm(Int_t coefIdx, const RooArgSet& nset, const char* rangeName) const; Coe",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:50592,Deployability,integrat,integration,50592,"Name = 0) const; Default implementation of function advertising integration capabilities. The interface is; similar to that of getAnalyticalIntegral except that an integer code is added that; designates the coefficient number for which the integration capabilities are requested. This default implementation advertises that no internal integrals are supported. Double_t coefAnalyticalIntegral(Int_t coef, Int_t code, const char* rangeName = 0) const; Default implementation of function implementing advertised integrals. Only; the pass-through scenario (no integration) is implemented. Bool_t forceAnalyticalInt(const RooAbsArg& dep) const; This function forces RooRealIntegral to offer all integration dependents; to RooAbsAnaConvPdf::getAnalyticalIntegralWN() for consideration for; internal integration, if RooRealIntegral considers this to be unsafe (e.g. due; to hidden Jacobian terms). RooAbsAnaConvPdf will not attempt to actually integrate all these dependents; but feed them to the resolution models integration interface, which will; make the final determination on how to integrate these dependents. Double_t getCoefNorm(Int_t coefIdx, const RooArgSet* nset, const TNamed* rangeName) const; Returns the normalization integral value of the coefficient with number coefIdx over normalization; set nset in range rangeName. void makeCoefVarList(RooArgList& ) const; Build complete list of coefficient variables. RooArgSet* coefVars(Int_t coefIdx) const; Return set of parameters with are used exclusively by the coefficient functions. void printMultiline(ostream& stream, Int_t contents, Bool_t verbose = kFALSE, TString indent = """") const; Print info about this object to the specified stream. In addition to the info; from RooAbsPdf::printStream() we add:. Verbose : detailed information on convolution integrals. void setCacheAndTrackHints(RooArgSet& ); Label OK'ed components with cache-and-track. Double_t getCoefNorm(Int_t coefIdx, const RooArgSet& nset, const char* rangeName) const; Coe",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:50666,Deployability,integrat,integrate,50666,"Name = 0) const; Default implementation of function advertising integration capabilities. The interface is; similar to that of getAnalyticalIntegral except that an integer code is added that; designates the coefficient number for which the integration capabilities are requested. This default implementation advertises that no internal integrals are supported. Double_t coefAnalyticalIntegral(Int_t coef, Int_t code, const char* rangeName = 0) const; Default implementation of function implementing advertised integrals. Only; the pass-through scenario (no integration) is implemented. Bool_t forceAnalyticalInt(const RooAbsArg& dep) const; This function forces RooRealIntegral to offer all integration dependents; to RooAbsAnaConvPdf::getAnalyticalIntegralWN() for consideration for; internal integration, if RooRealIntegral considers this to be unsafe (e.g. due; to hidden Jacobian terms). RooAbsAnaConvPdf will not attempt to actually integrate all these dependents; but feed them to the resolution models integration interface, which will; make the final determination on how to integrate these dependents. Double_t getCoefNorm(Int_t coefIdx, const RooArgSet* nset, const TNamed* rangeName) const; Returns the normalization integral value of the coefficient with number coefIdx over normalization; set nset in range rangeName. void makeCoefVarList(RooArgList& ) const; Build complete list of coefficient variables. RooArgSet* coefVars(Int_t coefIdx) const; Return set of parameters with are used exclusively by the coefficient functions. void printMultiline(ostream& stream, Int_t contents, Bool_t verbose = kFALSE, TString indent = """") const; Print info about this object to the specified stream. In addition to the info; from RooAbsPdf::printStream() we add:. Verbose : detailed information on convolution integrals. void setCacheAndTrackHints(RooArgSet& ); Label OK'ed components with cache-and-track. Double_t getCoefNorm(Int_t coefIdx, const RooArgSet& nset, const char* rangeName) const; Coe",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:1507,Integrability,interface,interface,1507," physics model must be able to be written in the form; _ _ _ _; Phys(x,a,b) = Sum_k coef_k(a) * basis_k(x,b). where basis_k are a limited number of functions in terms of the variable; to be convoluted and coef_k are coefficients independent of the convolution; variable. Classes derived from RooResolutionModel implement; _ _ _ _; R_k(x,b,c) = Int(dx') basis_k(x',b) * resModel(x-x',c). which RooAbsAnaConvPdf uses to construct the pdf for [ Phys (x) R ] :; _ _ _ _ _ _; PDF(x,a,b,c) = Sum_k coef_k(a) * R_k(x,b,c). A minimal implementation of a RooAbsAnaConvPdf physics model consists of. - A constructor that declares the required basis functions using the declareBasis() method.; The declareBasis() function assigns a unique identifier code to each declare basis. - An implementation of coefficient(Int_t code) returning the coefficient value for each; declared basis function. Optionally, analytical integrals can be provided for the coefficient functions. The; interface for this is quite similar to that for integrals of regular PDFs. Two functions,. Int_t getCoefAnalyticalIntegral(Int_t coef, RooArgSet& allVars, RooArgSet& analVars, const char* rangeName) const; Double_t coefAnalyticalIntegral(Int_t coef, Int_t code, const char* rangeName) const. advertise the coefficient integration capabilities and implement them respectively.; Please see RooAbsPdf for additional details. Advertised analytical integrals must be; valid for all coefficients. Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. virtual~RooAbsAnaConvPdf(); voidTObject::AbstractMethod(const char* method) const; Bool_tRooAbsArg::addOwnedComponents(const RooArgSet& comps); voidRooAbsArg::addParameters(RooArgSet& params, const RooArgSet* nset = 0, Bool_t stripDisconnected = kTRUE) const; voidRooAbsArg::addServer(RooAbsArg& server, Bool_t valueProp = kTRUE, Bool_t shapeProp = kFALSE); voidRooAbsArg::ad",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:1825,Integrability,integrat,integration,1825,"lutionModel implement; _ _ _ _; R_k(x,b,c) = Int(dx') basis_k(x',b) * resModel(x-x',c). which RooAbsAnaConvPdf uses to construct the pdf for [ Phys (x) R ] :; _ _ _ _ _ _; PDF(x,a,b,c) = Sum_k coef_k(a) * R_k(x,b,c). A minimal implementation of a RooAbsAnaConvPdf physics model consists of. - A constructor that declares the required basis functions using the declareBasis() method.; The declareBasis() function assigns a unique identifier code to each declare basis. - An implementation of coefficient(Int_t code) returning the coefficient value for each; declared basis function. Optionally, analytical integrals can be provided for the coefficient functions. The; interface for this is quite similar to that for integrals of regular PDFs. Two functions,. Int_t getCoefAnalyticalIntegral(Int_t coef, RooArgSet& allVars, RooArgSet& analVars, const char* rangeName) const; Double_t coefAnalyticalIntegral(Int_t coef, Int_t code, const char* rangeName) const. advertise the coefficient integration capabilities and implement them respectively.; Please see RooAbsPdf for additional details. Advertised analytical integrals must be; valid for all coefficients. Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. virtual~RooAbsAnaConvPdf(); voidTObject::AbstractMethod(const char* method) const; Bool_tRooAbsArg::addOwnedComponents(const RooArgSet& comps); voidRooAbsArg::addParameters(RooArgSet& params, const RooArgSet* nset = 0, Bool_t stripDisconnected = kTRUE) const; voidRooAbsArg::addServer(RooAbsArg& server, Bool_t valueProp = kTRUE, Bool_t shapeProp = kFALSE); voidRooAbsArg::addServerList(RooAbsCollection& serverList, Bool_t valueProp = kTRUE, Bool_t shapeProp = kFALSE); const char*RooAbsArg::aggregateCacheUniqueSuffix() const; virtual Double_tRooAbsReal::analyticalIntegral(Int_t code, const char* rangeName = 0) const; virtual Double_tanalyticalIntegralWN(Int_t code, con",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:9293,Integrability,depend,dependentVars,9293,"), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()) const; RooAbsReal*RooAbsReal::createIntRI(const RooArgSet& iset, const RooArgSet& nset = RooArgSet()); virtual RooAbsReal*RooAbsPdf::createNLL(RooAbsData& data, const RooLinkedList& cmdList); virtual RooAbsReal*RooAbsPdf::createNLL(RooAbsData& data, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); const RooAbsReal*RooAbsReal::createPlotProjection(const RooArgSet& depVars, const RooArgSet& projVars) const; const RooAbsReal*RooAbsReal::createPlotProjection(const RooArgSet& depVars, const RooArgSet& projVars, RooArgSet*& cloneSet) const; const RooAbsReal*RooAbsReal::createPlotProjection(const RooArgSet& dependentVars, const RooArgSet* projectedVars, RooArgSet*& cloneSet, const char* rangeName = 0, const RooArgSet* condObs = 0) const; virtual RooAbsReal*RooAbsReal::createProfile(const RooArgSet& paramsOfInterest); virtual RooAbsPdf*RooAbsPdf::createProjection(const RooArgSet& iset); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooArgSet& nset = RooArgSet()); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); RooAbsReal*RooAbsPdf::createScanCdf(const RooArgSet& iset, const RooArgSet& nset, Int_t numScanBins, Int_t intOrder); RooAbsReal*RooAbsReal::createScanRI(const RooArgSet& iset, const RooArgSet& nset, Int_t numScanBins, Int_t",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:10852,Integrability,depend,dependentOverlaps,10852," RooArgSet& iset); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooArgSet& nset = RooArgSet()); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); RooAbsReal*RooAbsPdf::createScanCdf(const RooArgSet& iset, const RooArgSet& nset, Int_t numScanBins, Int_t intOrder); RooAbsReal*RooAbsReal::createScanRI(const RooArgSet& iset, const RooArgSet& nset, Int_t numScanBins, Int_t intOrder); Int_tdeclareBasis(const char* expression, const RooArgList& params); virtual Double_tRooAbsReal::defaultErrorLevel() const; static RooNumGenConfig*RooAbsPdf::defaultGeneratorConfig(); static RooNumIntConfig*RooAbsReal::defaultIntegratorConfig(); virtual Int_tRooAbsArg::defaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooPrintable::defaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Bool_tRooAbsArg::dependentOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependentOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependsOn(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOn(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0) const; RooDerivative*RooAbsReal::derivative(RooRealVar& obs, Int_t order = 1, Double_t eps = 0.",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:10944,Integrability,depend,dependentOverlaps,10944," RooArgSet& iset); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooArgSet& nset = RooArgSet()); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); RooAbsReal*RooAbsPdf::createScanCdf(const RooArgSet& iset, const RooArgSet& nset, Int_t numScanBins, Int_t intOrder); RooAbsReal*RooAbsReal::createScanRI(const RooArgSet& iset, const RooArgSet& nset, Int_t numScanBins, Int_t intOrder); Int_tdeclareBasis(const char* expression, const RooArgList& params); virtual Double_tRooAbsReal::defaultErrorLevel() const; static RooNumGenConfig*RooAbsPdf::defaultGeneratorConfig(); static RooNumIntConfig*RooAbsReal::defaultIntegratorConfig(); virtual Int_tRooAbsArg::defaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooPrintable::defaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Bool_tRooAbsArg::dependentOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependentOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependsOn(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOn(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0) const; RooDerivative*RooAbsReal::derivative(RooRealVar& obs, Int_t order = 1, Double_t eps = 0.",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:11038,Integrability,depend,dependsOn,11038," RooArgSet& iset); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooArgSet& nset = RooArgSet()); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); RooAbsReal*RooAbsPdf::createScanCdf(const RooArgSet& iset, const RooArgSet& nset, Int_t numScanBins, Int_t intOrder); RooAbsReal*RooAbsReal::createScanRI(const RooArgSet& iset, const RooArgSet& nset, Int_t numScanBins, Int_t intOrder); Int_tdeclareBasis(const char* expression, const RooArgList& params); virtual Double_tRooAbsReal::defaultErrorLevel() const; static RooNumGenConfig*RooAbsPdf::defaultGeneratorConfig(); static RooNumIntConfig*RooAbsReal::defaultIntegratorConfig(); virtual Int_tRooAbsArg::defaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooPrintable::defaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Bool_tRooAbsArg::dependentOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependentOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependsOn(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOn(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0) const; RooDerivative*RooAbsReal::derivative(RooRealVar& obs, Int_t order = 1, Double_t eps = 0.",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:11167,Integrability,depend,dependsOn,11167," RooArgSet& iset); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooArgSet& nset = RooArgSet()); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); RooAbsReal*RooAbsPdf::createScanCdf(const RooArgSet& iset, const RooArgSet& nset, Int_t numScanBins, Int_t intOrder); RooAbsReal*RooAbsReal::createScanRI(const RooArgSet& iset, const RooArgSet& nset, Int_t numScanBins, Int_t intOrder); Int_tdeclareBasis(const char* expression, const RooArgList& params); virtual Double_tRooAbsReal::defaultErrorLevel() const; static RooNumGenConfig*RooAbsPdf::defaultGeneratorConfig(); static RooNumIntConfig*RooAbsReal::defaultIntegratorConfig(); virtual Int_tRooAbsArg::defaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooPrintable::defaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Bool_tRooAbsArg::dependentOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependentOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependsOn(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOn(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0) const; RooDerivative*RooAbsReal::derivative(RooRealVar& obs, Int_t order = 1, Double_t eps = 0.",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:11285,Integrability,depend,dependsOnValue,11285," RooArgSet& iset); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooArgSet& nset = RooArgSet()); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); RooAbsReal*RooAbsPdf::createScanCdf(const RooArgSet& iset, const RooArgSet& nset, Int_t numScanBins, Int_t intOrder); RooAbsReal*RooAbsReal::createScanRI(const RooArgSet& iset, const RooArgSet& nset, Int_t numScanBins, Int_t intOrder); Int_tdeclareBasis(const char* expression, const RooArgList& params); virtual Double_tRooAbsReal::defaultErrorLevel() const; static RooNumGenConfig*RooAbsPdf::defaultGeneratorConfig(); static RooNumIntConfig*RooAbsReal::defaultIntegratorConfig(); virtual Int_tRooAbsArg::defaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooPrintable::defaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Bool_tRooAbsArg::dependentOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependentOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependsOn(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOn(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0) const; RooDerivative*RooAbsReal::derivative(RooRealVar& obs, Int_t order = 1, Double_t eps = 0.",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:11392,Integrability,depend,dependsOnValue,11392," RooArgSet& iset); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooArgSet& nset = RooArgSet()); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); RooAbsReal*RooAbsPdf::createScanCdf(const RooArgSet& iset, const RooArgSet& nset, Int_t numScanBins, Int_t intOrder); RooAbsReal*RooAbsReal::createScanRI(const RooArgSet& iset, const RooArgSet& nset, Int_t numScanBins, Int_t intOrder); Int_tdeclareBasis(const char* expression, const RooArgList& params); virtual Double_tRooAbsReal::defaultErrorLevel() const; static RooNumGenConfig*RooAbsPdf::defaultGeneratorConfig(); static RooNumIntConfig*RooAbsReal::defaultIntegratorConfig(); virtual Int_tRooAbsArg::defaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooPrintable::defaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Bool_tRooAbsArg::dependentOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependentOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependsOn(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOn(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0) const; RooDerivative*RooAbsReal::derivative(RooRealVar& obs, Int_t order = 1, Double_t eps = 0.",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:23761,Integrability,message,message,23761,"TObject::IsFolder() const; virtual Bool_tRooAbsArg::isFundamental() const; virtual Bool_tRooAbsReal::isIdentical(const RooAbsArg& other, Bool_t assumeSameType = kFALSE); virtual Bool_tRooAbsArg::isLValue() const; virtual Bool_tRooAbsReal::isOffsetting() const; Bool_tTObject::IsOnHeap() const; Bool_tRooAbsArg::isShapeDirty() const; Bool_tRooAbsArg::isShapeServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isShapeServer(const char* name) const; virtual Bool_tRooAbsArg::IsSortable() const; Bool_tRooAbsArg::isValueDirty() const; Bool_tRooAbsArg::isValueDirtyAndClear() const; Bool_tRooAbsArg::isValueOrShapeDirtyAndClear() const; Bool_tRooAbsArg::isValueServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isValueServer(const char* name) const; Bool_tTObject::IsZombie() const; voidRooAbsArg::leafNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t recurseNonDerived = kFALSE) const; Bool_tRooAbsArg::localNoDirtyInhibit() const; voidRooAbsReal::logEvalError(const char* message, const char* serverValueString = 0) const; static voidRooAbsReal::logEvalError(const RooAbsReal* originator, const char* origName, const char* message, const char* serverValueString = 0); virtual voidTNamed::ls(Option_t* option = """") const; virtual Double_tRooAbsReal::maxVal(Int_t code) const; voidTObject::MayNotUse(const char* method) const; RooAbsMoment*RooAbsReal::mean(RooRealVar& obs); RooAbsMoment*RooAbsReal::mean(RooRealVar& obs, const RooArgSet& nset); virtual Int_tRooAbsReal::minTrialSamples(const RooArgSet&) const; RooAbsMoment*RooAbsReal::moment(RooRealVar& obs, Int_t order, Bool_t central, Bool_t takeRoot); RooAbsMoment*RooAbsReal::moment(RooRealVar& obs, const RooArgSet& normObs, Int_t order, Bool_t central, Bool_t takeRoot, Bool_t intNormObs); Bool_tRooAbsPdf::mustBeExtended() const; static voidRooPrintable::nameFieldLength(Int_t newLen); const TNamed*RooAbsArg::namePtr() const; const char*RooAbsPdf::normRange() const; virtual Bool_tTObject::Notify(); Int_tRooAbsArg::n",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:23912,Integrability,message,message,23912,"ameType = kFALSE); virtual Bool_tRooAbsArg::isLValue() const; virtual Bool_tRooAbsReal::isOffsetting() const; Bool_tTObject::IsOnHeap() const; Bool_tRooAbsArg::isShapeDirty() const; Bool_tRooAbsArg::isShapeServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isShapeServer(const char* name) const; virtual Bool_tRooAbsArg::IsSortable() const; Bool_tRooAbsArg::isValueDirty() const; Bool_tRooAbsArg::isValueDirtyAndClear() const; Bool_tRooAbsArg::isValueOrShapeDirtyAndClear() const; Bool_tRooAbsArg::isValueServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isValueServer(const char* name) const; Bool_tTObject::IsZombie() const; voidRooAbsArg::leafNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t recurseNonDerived = kFALSE) const; Bool_tRooAbsArg::localNoDirtyInhibit() const; voidRooAbsReal::logEvalError(const char* message, const char* serverValueString = 0) const; static voidRooAbsReal::logEvalError(const RooAbsReal* originator, const char* origName, const char* message, const char* serverValueString = 0); virtual voidTNamed::ls(Option_t* option = """") const; virtual Double_tRooAbsReal::maxVal(Int_t code) const; voidTObject::MayNotUse(const char* method) const; RooAbsMoment*RooAbsReal::mean(RooRealVar& obs); RooAbsMoment*RooAbsReal::mean(RooRealVar& obs, const RooArgSet& nset); virtual Int_tRooAbsReal::minTrialSamples(const RooArgSet&) const; RooAbsMoment*RooAbsReal::moment(RooRealVar& obs, Int_t order, Bool_t central, Bool_t takeRoot); RooAbsMoment*RooAbsReal::moment(RooRealVar& obs, const RooArgSet& normObs, Int_t order, Bool_t central, Bool_t takeRoot, Bool_t intNormObs); Bool_tRooAbsPdf::mustBeExtended() const; static voidRooPrintable::nameFieldLength(Int_t newLen); const TNamed*RooAbsArg::namePtr() const; const char*RooAbsPdf::normRange() const; virtual Bool_tTObject::Notify(); Int_tRooAbsArg::numCaches() const; static Int_tRooAbsReal::numEvalErrorItems(); static Int_tRooAbsReal::numEvalErrors(); Bool_tRooAbsArg::observableOverlaps(const RooAb",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:42166,Integrability,integrat,integration,42166,"asisList! List of created basis functions; set<std::string>RooAbsArg::_boolAttribBoolean attributes; set<std::string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); Bool_tRooAbsReal::_boolValue! Transient cache for bool values from tree branches ; UChar_tRooAbsReal::_byteValue! Transient cache for byte values from tree branches ; static Bool_tRooAbsReal::_cacheCheckIf true, always validate contents of clean which outcome of evaluate(); deque<RooAbsCache*>RooAbsArg::_cacheListlist of caches; RooRefCountListRooAbsArg::_clientListlist of client objects; RooRefCountListRooAbsArg::_clientListShapesubset of clients that requested shape dirty flag propagation; RooRefCountListRooAbsArg::_clientListValuesubset of clients that requested value dirty flag propagation; TIterator*RooAbsArg::_clientShapeIter! Iterator over _clientListShape ; TIterator*RooAbsArg::_clientValueIter! Iterator over _clientListValue ; RooAICRegistry_codeReg! Registry of analytical integration codes; RooObjCacheManager_coefNormMgrCoefficient normalization manager; RooArgSet*_convNormSet! Subset of last normalization that applies to convolutions; RooListProxy_convSetSet of (resModel (x) basisFunc) convolution objects; TIterator*_convSetIter! Iterator over _convNormSet; RooRealProxy_convVarConvolution variable; Bool_tRooAbsArg::_deleteWatch! Delete watch flag ; RooExpensiveObjectCache*RooAbsArg::_eocachePointer to global cache manager for any expensive components created by this object; Int_tRooAbsPdf::_errorCountNumber of errors remaining to print; static Bool_tRooAbsPdf::_evalError; Bool_tRooAbsArg::_fastAllow fast access mode in getVal() and proxies; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsReal::_hideOffsetOffset hiding flag; static Bo",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:42990,Integrability,integrat,integration,42990,efCountListRooAbsArg::_clientListlist of client objects; RooRefCountListRooAbsArg::_clientListShapesubset of clients that requested shape dirty flag propagation; RooRefCountListRooAbsArg::_clientListValuesubset of clients that requested value dirty flag propagation; TIterator*RooAbsArg::_clientShapeIter! Iterator over _clientListShape ; TIterator*RooAbsArg::_clientValueIter! Iterator over _clientListValue ; RooAICRegistry_codeReg! Registry of analytical integration codes; RooObjCacheManager_coefNormMgrCoefficient normalization manager; RooArgSet*_convNormSet! Subset of last normalization that applies to convolutions; RooListProxy_convSetSet of (resModel (x) basisFunc) convolution objects; TIterator*_convSetIter! Iterator over _convNormSet; RooRealProxy_convVarConvolution variable; Bool_tRooAbsArg::_deleteWatch! Delete watch flag ; RooExpensiveObjectCache*RooAbsArg::_eocachePointer to global cache manager for any expensive components created by this object; Int_tRooAbsPdf::_errorCountNumber of errors remaining to print; static Bool_tRooAbsPdf::_evalError; Bool_tRooAbsArg::_fastAllow fast access mode in getVal() and proxies; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsReal::_hideOffsetOffset hiding flag; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; Bool_tRooAbsArg::_isConstant! Cached isConstant status ; Bool_t_isCopy; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; RooRealProxy_modelOriginal model; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist.,MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:45166,Integrability,integrat,integrator,45166," by _normMgr); RooObjCacheManagerRooAbsPdf::_normMgrThe cache manager; TStringRooAbsPdf::_normRangeNormalization range; static TStringRooAbsPdf::_normRangeOverride; RooArgSet*RooAbsPdf::_normSet! Normalization set with for above integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title.",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:47978,Integrability,integrat,integration,47978,"e physics distribution; and the smearing separately, adding them a posteriori. If this is not possible return; a (slower) generic generation context that uses accept/reject sampling. Bool_t isDirectGenSafe(const RooAbsArg& arg) const; Return true if it is safe to generate the convolution observable; from the internal generator (this is the case if the chosen resolution; model is the truth model). const RooRealVar* convVar() const; Return a pointer to the convolution variable instance used in the resolution model. Double_t evaluate() const; Calculate the current unnormalized value of the PDF. PDF = sum_k coef_k * [ basis_k (x) ResModel ]. Int_t getAnalyticalIntegralWN(RooArgSet& allVars, RooArgSet& analVars, const RooArgSet* normSet, const char* rangeName = 0) const; Advertise capability to perform (analytical) integrals; internally. For a given integration request over allVars while; normalized over normSet2 and in range 'rangeName', returns; largest subset that can be performed internally in analVars; Return code is unique integer code identifying integration scenario; to be passed to analyticalIntegralWN() to calculate requeste integral. Class RooAbsAnaConv defers analytical integration request to; resolution model and/or coefficient implementations and; aggregates results into composite configuration with a unique; code assigned by RooAICRegistry. Double_t analyticalIntegralWN(Int_t code, const RooArgSet* normSet, const char* rangeName = 0) const; Return analytical integral defined by given code, which is returned; by getAnalyticalIntegralWN(). For unnormalized integrals the returned value is; _ _; PDF = sum_k Int(dx) coef_k * Int(dy) [ basis_k (x) ResModel ].; _; where x is the set of coefficient dependents to be integrated; and y the set of basis function dependents to be integrated. For normalized integrals this becomes. sum_k Int(dx) coef_k * Int(dy) [ basis_k (x) ResModel ].; PDF = --------------------------------------------------------; sum_k Int(dv) coef_k",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:48186,Integrability,integrat,integration,48186,"e physics distribution; and the smearing separately, adding them a posteriori. If this is not possible return; a (slower) generic generation context that uses accept/reject sampling. Bool_t isDirectGenSafe(const RooAbsArg& arg) const; Return true if it is safe to generate the convolution observable; from the internal generator (this is the case if the chosen resolution; model is the truth model). const RooRealVar* convVar() const; Return a pointer to the convolution variable instance used in the resolution model. Double_t evaluate() const; Calculate the current unnormalized value of the PDF. PDF = sum_k coef_k * [ basis_k (x) ResModel ]. Int_t getAnalyticalIntegralWN(RooArgSet& allVars, RooArgSet& analVars, const RooArgSet* normSet, const char* rangeName = 0) const; Advertise capability to perform (analytical) integrals; internally. For a given integration request over allVars while; normalized over normSet2 and in range 'rangeName', returns; largest subset that can be performed internally in analVars; Return code is unique integer code identifying integration scenario; to be passed to analyticalIntegralWN() to calculate requeste integral. Class RooAbsAnaConv defers analytical integration request to; resolution model and/or coefficient implementations and; aggregates results into composite configuration with a unique; code assigned by RooAICRegistry. Double_t analyticalIntegralWN(Int_t code, const RooArgSet* normSet, const char* rangeName = 0) const; Return analytical integral defined by given code, which is returned; by getAnalyticalIntegralWN(). For unnormalized integrals the returned value is; _ _; PDF = sum_k Int(dx) coef_k * Int(dy) [ basis_k (x) ResModel ].; _; where x is the set of coefficient dependents to be integrated; and y the set of basis function dependents to be integrated. For normalized integrals this becomes. sum_k Int(dx) coef_k * Int(dy) [ basis_k (x) ResModel ].; PDF = --------------------------------------------------------; sum_k Int(dv) coef_k",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:48317,Integrability,integrat,integration,48317,"generate the convolution observable; from the internal generator (this is the case if the chosen resolution; model is the truth model). const RooRealVar* convVar() const; Return a pointer to the convolution variable instance used in the resolution model. Double_t evaluate() const; Calculate the current unnormalized value of the PDF. PDF = sum_k coef_k * [ basis_k (x) ResModel ]. Int_t getAnalyticalIntegralWN(RooArgSet& allVars, RooArgSet& analVars, const RooArgSet* normSet, const char* rangeName = 0) const; Advertise capability to perform (analytical) integrals; internally. For a given integration request over allVars while; normalized over normSet2 and in range 'rangeName', returns; largest subset that can be performed internally in analVars; Return code is unique integer code identifying integration scenario; to be passed to analyticalIntegralWN() to calculate requeste integral. Class RooAbsAnaConv defers analytical integration request to; resolution model and/or coefficient implementations and; aggregates results into composite configuration with a unique; code assigned by RooAICRegistry. Double_t analyticalIntegralWN(Int_t code, const RooArgSet* normSet, const char* rangeName = 0) const; Return analytical integral defined by given code, which is returned; by getAnalyticalIntegralWN(). For unnormalized integrals the returned value is; _ _; PDF = sum_k Int(dx) coef_k * Int(dy) [ basis_k (x) ResModel ].; _; where x is the set of coefficient dependents to be integrated; and y the set of basis function dependents to be integrated. For normalized integrals this becomes. sum_k Int(dx) coef_k * Int(dy) [ basis_k (x) ResModel ].; PDF = --------------------------------------------------------; sum_k Int(dv) coef_k * Int(dw) [ basis_k (x) ResModel ]. where x is the set of coefficient dependents to be integrated,; y the set of basis function dependents to be integrated,; v is the set of coefficient dependents over which is normalized and; w is the set of basis function depen",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:48851,Integrability,depend,dependents,48851,"rangeName = 0) const; Advertise capability to perform (analytical) integrals; internally. For a given integration request over allVars while; normalized over normSet2 and in range 'rangeName', returns; largest subset that can be performed internally in analVars; Return code is unique integer code identifying integration scenario; to be passed to analyticalIntegralWN() to calculate requeste integral. Class RooAbsAnaConv defers analytical integration request to; resolution model and/or coefficient implementations and; aggregates results into composite configuration with a unique; code assigned by RooAICRegistry. Double_t analyticalIntegralWN(Int_t code, const RooArgSet* normSet, const char* rangeName = 0) const; Return analytical integral defined by given code, which is returned; by getAnalyticalIntegralWN(). For unnormalized integrals the returned value is; _ _; PDF = sum_k Int(dx) coef_k * Int(dy) [ basis_k (x) ResModel ].; _; where x is the set of coefficient dependents to be integrated; and y the set of basis function dependents to be integrated. For normalized integrals this becomes. sum_k Int(dx) coef_k * Int(dy) [ basis_k (x) ResModel ].; PDF = --------------------------------------------------------; sum_k Int(dv) coef_k * Int(dw) [ basis_k (x) ResModel ]. where x is the set of coefficient dependents to be integrated,; y the set of basis function dependents to be integrated,; v is the set of coefficient dependents over which is normalized and; w is the set of basis function dependents over which is normalized. Set x must be contained in v and set y must be contained in w. Int_t getCoefAnalyticalIntegral(Int_t coef, RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const; Default implementation of function advertising integration capabilities. The interface is; similar to that of getAnalyticalIntegral except that an integer code is added that; designates the coefficient number for which the integration capabilities are requested. This default ",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:48868,Integrability,integrat,integrated,48868,"rangeName = 0) const; Advertise capability to perform (analytical) integrals; internally. For a given integration request over allVars while; normalized over normSet2 and in range 'rangeName', returns; largest subset that can be performed internally in analVars; Return code is unique integer code identifying integration scenario; to be passed to analyticalIntegralWN() to calculate requeste integral. Class RooAbsAnaConv defers analytical integration request to; resolution model and/or coefficient implementations and; aggregates results into composite configuration with a unique; code assigned by RooAICRegistry. Double_t analyticalIntegralWN(Int_t code, const RooArgSet* normSet, const char* rangeName = 0) const; Return analytical integral defined by given code, which is returned; by getAnalyticalIntegralWN(). For unnormalized integrals the returned value is; _ _; PDF = sum_k Int(dx) coef_k * Int(dy) [ basis_k (x) ResModel ].; _; where x is the set of coefficient dependents to be integrated; and y the set of basis function dependents to be integrated. For normalized integrals this becomes. sum_k Int(dx) coef_k * Int(dy) [ basis_k (x) ResModel ].; PDF = --------------------------------------------------------; sum_k Int(dv) coef_k * Int(dw) [ basis_k (x) ResModel ]. where x is the set of coefficient dependents to be integrated,; y the set of basis function dependents to be integrated,; v is the set of coefficient dependents over which is normalized and; w is the set of basis function dependents over which is normalized. Set x must be contained in v and set y must be contained in w. Int_t getCoefAnalyticalIntegral(Int_t coef, RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const; Default implementation of function advertising integration capabilities. The interface is; similar to that of getAnalyticalIntegral except that an integer code is added that; designates the coefficient number for which the integration capabilities are requested. This default ",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:48912,Integrability,depend,dependents,48912,"rangeName = 0) const; Advertise capability to perform (analytical) integrals; internally. For a given integration request over allVars while; normalized over normSet2 and in range 'rangeName', returns; largest subset that can be performed internally in analVars; Return code is unique integer code identifying integration scenario; to be passed to analyticalIntegralWN() to calculate requeste integral. Class RooAbsAnaConv defers analytical integration request to; resolution model and/or coefficient implementations and; aggregates results into composite configuration with a unique; code assigned by RooAICRegistry. Double_t analyticalIntegralWN(Int_t code, const RooArgSet* normSet, const char* rangeName = 0) const; Return analytical integral defined by given code, which is returned; by getAnalyticalIntegralWN(). For unnormalized integrals the returned value is; _ _; PDF = sum_k Int(dx) coef_k * Int(dy) [ basis_k (x) ResModel ].; _; where x is the set of coefficient dependents to be integrated; and y the set of basis function dependents to be integrated. For normalized integrals this becomes. sum_k Int(dx) coef_k * Int(dy) [ basis_k (x) ResModel ].; PDF = --------------------------------------------------------; sum_k Int(dv) coef_k * Int(dw) [ basis_k (x) ResModel ]. where x is the set of coefficient dependents to be integrated,; y the set of basis function dependents to be integrated,; v is the set of coefficient dependents over which is normalized and; w is the set of basis function dependents over which is normalized. Set x must be contained in v and set y must be contained in w. Int_t getCoefAnalyticalIntegral(Int_t coef, RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const; Default implementation of function advertising integration capabilities. The interface is; similar to that of getAnalyticalIntegral except that an integer code is added that; designates the coefficient number for which the integration capabilities are requested. This default ",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:48929,Integrability,integrat,integrated,48929,"rangeName = 0) const; Advertise capability to perform (analytical) integrals; internally. For a given integration request over allVars while; normalized over normSet2 and in range 'rangeName', returns; largest subset that can be performed internally in analVars; Return code is unique integer code identifying integration scenario; to be passed to analyticalIntegralWN() to calculate requeste integral. Class RooAbsAnaConv defers analytical integration request to; resolution model and/or coefficient implementations and; aggregates results into composite configuration with a unique; code assigned by RooAICRegistry. Double_t analyticalIntegralWN(Int_t code, const RooArgSet* normSet, const char* rangeName = 0) const; Return analytical integral defined by given code, which is returned; by getAnalyticalIntegralWN(). For unnormalized integrals the returned value is; _ _; PDF = sum_k Int(dx) coef_k * Int(dy) [ basis_k (x) ResModel ].; _; where x is the set of coefficient dependents to be integrated; and y the set of basis function dependents to be integrated. For normalized integrals this becomes. sum_k Int(dx) coef_k * Int(dy) [ basis_k (x) ResModel ].; PDF = --------------------------------------------------------; sum_k Int(dv) coef_k * Int(dw) [ basis_k (x) ResModel ]. where x is the set of coefficient dependents to be integrated,; y the set of basis function dependents to be integrated,; v is the set of coefficient dependents over which is normalized and; w is the set of basis function dependents over which is normalized. Set x must be contained in v and set y must be contained in w. Int_t getCoefAnalyticalIntegral(Int_t coef, RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const; Default implementation of function advertising integration capabilities. The interface is; similar to that of getAnalyticalIntegral except that an integer code is added that; designates the coefficient number for which the integration capabilities are requested. This default ",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:49193,Integrability,depend,dependents,49193,"oAbsAnaConv defers analytical integration request to; resolution model and/or coefficient implementations and; aggregates results into composite configuration with a unique; code assigned by RooAICRegistry. Double_t analyticalIntegralWN(Int_t code, const RooArgSet* normSet, const char* rangeName = 0) const; Return analytical integral defined by given code, which is returned; by getAnalyticalIntegralWN(). For unnormalized integrals the returned value is; _ _; PDF = sum_k Int(dx) coef_k * Int(dy) [ basis_k (x) ResModel ].; _; where x is the set of coefficient dependents to be integrated; and y the set of basis function dependents to be integrated. For normalized integrals this becomes. sum_k Int(dx) coef_k * Int(dy) [ basis_k (x) ResModel ].; PDF = --------------------------------------------------------; sum_k Int(dv) coef_k * Int(dw) [ basis_k (x) ResModel ]. where x is the set of coefficient dependents to be integrated,; y the set of basis function dependents to be integrated,; v is the set of coefficient dependents over which is normalized and; w is the set of basis function dependents over which is normalized. Set x must be contained in v and set y must be contained in w. Int_t getCoefAnalyticalIntegral(Int_t coef, RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const; Default implementation of function advertising integration capabilities. The interface is; similar to that of getAnalyticalIntegral except that an integer code is added that; designates the coefficient number for which the integration capabilities are requested. This default implementation advertises that no internal integrals are supported. Double_t coefAnalyticalIntegral(Int_t coef, Int_t code, const char* rangeName = 0) const; Default implementation of function implementing advertised integrals. Only; the pass-through scenario (no integration) is implemented. Bool_t forceAnalyticalInt(const RooAbsArg& dep) const; This function forces RooRealIntegral to offer all integration de",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:49210,Integrability,integrat,integrated,49210,"oAbsAnaConv defers analytical integration request to; resolution model and/or coefficient implementations and; aggregates results into composite configuration with a unique; code assigned by RooAICRegistry. Double_t analyticalIntegralWN(Int_t code, const RooArgSet* normSet, const char* rangeName = 0) const; Return analytical integral defined by given code, which is returned; by getAnalyticalIntegralWN(). For unnormalized integrals the returned value is; _ _; PDF = sum_k Int(dx) coef_k * Int(dy) [ basis_k (x) ResModel ].; _; where x is the set of coefficient dependents to be integrated; and y the set of basis function dependents to be integrated. For normalized integrals this becomes. sum_k Int(dx) coef_k * Int(dy) [ basis_k (x) ResModel ].; PDF = --------------------------------------------------------; sum_k Int(dv) coef_k * Int(dw) [ basis_k (x) ResModel ]. where x is the set of coefficient dependents to be integrated,; y the set of basis function dependents to be integrated,; v is the set of coefficient dependents over which is normalized and; w is the set of basis function dependents over which is normalized. Set x must be contained in v and set y must be contained in w. Int_t getCoefAnalyticalIntegral(Int_t coef, RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const; Default implementation of function advertising integration capabilities. The interface is; similar to that of getAnalyticalIntegral except that an integer code is added that; designates the coefficient number for which the integration capabilities are requested. This default implementation advertises that no internal integrals are supported. Double_t coefAnalyticalIntegral(Int_t coef, Int_t code, const char* rangeName = 0) const; Default implementation of function implementing advertised integrals. Only; the pass-through scenario (no integration) is implemented. Bool_t forceAnalyticalInt(const RooAbsArg& dep) const; This function forces RooRealIntegral to offer all integration de",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:49251,Integrability,depend,dependents,49251,"oAbsAnaConv defers analytical integration request to; resolution model and/or coefficient implementations and; aggregates results into composite configuration with a unique; code assigned by RooAICRegistry. Double_t analyticalIntegralWN(Int_t code, const RooArgSet* normSet, const char* rangeName = 0) const; Return analytical integral defined by given code, which is returned; by getAnalyticalIntegralWN(). For unnormalized integrals the returned value is; _ _; PDF = sum_k Int(dx) coef_k * Int(dy) [ basis_k (x) ResModel ].; _; where x is the set of coefficient dependents to be integrated; and y the set of basis function dependents to be integrated. For normalized integrals this becomes. sum_k Int(dx) coef_k * Int(dy) [ basis_k (x) ResModel ].; PDF = --------------------------------------------------------; sum_k Int(dv) coef_k * Int(dw) [ basis_k (x) ResModel ]. where x is the set of coefficient dependents to be integrated,; y the set of basis function dependents to be integrated,; v is the set of coefficient dependents over which is normalized and; w is the set of basis function dependents over which is normalized. Set x must be contained in v and set y must be contained in w. Int_t getCoefAnalyticalIntegral(Int_t coef, RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const; Default implementation of function advertising integration capabilities. The interface is; similar to that of getAnalyticalIntegral except that an integer code is added that; designates the coefficient number for which the integration capabilities are requested. This default implementation advertises that no internal integrals are supported. Double_t coefAnalyticalIntegral(Int_t coef, Int_t code, const char* rangeName = 0) const; Default implementation of function implementing advertised integrals. Only; the pass-through scenario (no integration) is implemented. Bool_t forceAnalyticalInt(const RooAbsArg& dep) const; This function forces RooRealIntegral to offer all integration de",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:49268,Integrability,integrat,integrated,49268,"oAbsAnaConv defers analytical integration request to; resolution model and/or coefficient implementations and; aggregates results into composite configuration with a unique; code assigned by RooAICRegistry. Double_t analyticalIntegralWN(Int_t code, const RooArgSet* normSet, const char* rangeName = 0) const; Return analytical integral defined by given code, which is returned; by getAnalyticalIntegralWN(). For unnormalized integrals the returned value is; _ _; PDF = sum_k Int(dx) coef_k * Int(dy) [ basis_k (x) ResModel ].; _; where x is the set of coefficient dependents to be integrated; and y the set of basis function dependents to be integrated. For normalized integrals this becomes. sum_k Int(dx) coef_k * Int(dy) [ basis_k (x) ResModel ].; PDF = --------------------------------------------------------; sum_k Int(dv) coef_k * Int(dw) [ basis_k (x) ResModel ]. where x is the set of coefficient dependents to be integrated,; y the set of basis function dependents to be integrated,; v is the set of coefficient dependents over which is normalized and; w is the set of basis function dependents over which is normalized. Set x must be contained in v and set y must be contained in w. Int_t getCoefAnalyticalIntegral(Int_t coef, RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const; Default implementation of function advertising integration capabilities. The interface is; similar to that of getAnalyticalIntegral except that an integer code is added that; designates the coefficient number for which the integration capabilities are requested. This default implementation advertises that no internal integrals are supported. Double_t coefAnalyticalIntegral(Int_t coef, Int_t code, const char* rangeName = 0) const; Default implementation of function implementing advertised integrals. Only; the pass-through scenario (no integration) is implemented. Bool_t forceAnalyticalInt(const RooAbsArg& dep) const; This function forces RooRealIntegral to offer all integration de",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:49309,Integrability,depend,dependents,49309,"oAbsAnaConv defers analytical integration request to; resolution model and/or coefficient implementations and; aggregates results into composite configuration with a unique; code assigned by RooAICRegistry. Double_t analyticalIntegralWN(Int_t code, const RooArgSet* normSet, const char* rangeName = 0) const; Return analytical integral defined by given code, which is returned; by getAnalyticalIntegralWN(). For unnormalized integrals the returned value is; _ _; PDF = sum_k Int(dx) coef_k * Int(dy) [ basis_k (x) ResModel ].; _; where x is the set of coefficient dependents to be integrated; and y the set of basis function dependents to be integrated. For normalized integrals this becomes. sum_k Int(dx) coef_k * Int(dy) [ basis_k (x) ResModel ].; PDF = --------------------------------------------------------; sum_k Int(dv) coef_k * Int(dw) [ basis_k (x) ResModel ]. where x is the set of coefficient dependents to be integrated,; y the set of basis function dependents to be integrated,; v is the set of coefficient dependents over which is normalized and; w is the set of basis function dependents over which is normalized. Set x must be contained in v and set y must be contained in w. Int_t getCoefAnalyticalIntegral(Int_t coef, RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const; Default implementation of function advertising integration capabilities. The interface is; similar to that of getAnalyticalIntegral except that an integer code is added that; designates the coefficient number for which the integration capabilities are requested. This default implementation advertises that no internal integrals are supported. Double_t coefAnalyticalIntegral(Int_t coef, Int_t code, const char* rangeName = 0) const; Default implementation of function implementing advertised integrals. Only; the pass-through scenario (no integration) is implemented. Bool_t forceAnalyticalInt(const RooAbsArg& dep) const; This function forces RooRealIntegral to offer all integration de",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:49381,Integrability,depend,dependents,49381,"oAbsAnaConv defers analytical integration request to; resolution model and/or coefficient implementations and; aggregates results into composite configuration with a unique; code assigned by RooAICRegistry. Double_t analyticalIntegralWN(Int_t code, const RooArgSet* normSet, const char* rangeName = 0) const; Return analytical integral defined by given code, which is returned; by getAnalyticalIntegralWN(). For unnormalized integrals the returned value is; _ _; PDF = sum_k Int(dx) coef_k * Int(dy) [ basis_k (x) ResModel ].; _; where x is the set of coefficient dependents to be integrated; and y the set of basis function dependents to be integrated. For normalized integrals this becomes. sum_k Int(dx) coef_k * Int(dy) [ basis_k (x) ResModel ].; PDF = --------------------------------------------------------; sum_k Int(dv) coef_k * Int(dw) [ basis_k (x) ResModel ]. where x is the set of coefficient dependents to be integrated,; y the set of basis function dependents to be integrated,; v is the set of coefficient dependents over which is normalized and; w is the set of basis function dependents over which is normalized. Set x must be contained in v and set y must be contained in w. Int_t getCoefAnalyticalIntegral(Int_t coef, RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const; Default implementation of function advertising integration capabilities. The interface is; similar to that of getAnalyticalIntegral except that an integer code is added that; designates the coefficient number for which the integration capabilities are requested. This default implementation advertises that no internal integrals are supported. Double_t coefAnalyticalIntegral(Int_t coef, Int_t code, const char* rangeName = 0) const; Default implementation of function implementing advertised integrals. Only; the pass-through scenario (no integration) is implemented. Bool_t forceAnalyticalInt(const RooAbsArg& dep) const; This function forces RooRealIntegral to offer all integration de",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:49647,Integrability,integrat,integration,49647,"ngeName = 0) const; Return analytical integral defined by given code, which is returned; by getAnalyticalIntegralWN(). For unnormalized integrals the returned value is; _ _; PDF = sum_k Int(dx) coef_k * Int(dy) [ basis_k (x) ResModel ].; _; where x is the set of coefficient dependents to be integrated; and y the set of basis function dependents to be integrated. For normalized integrals this becomes. sum_k Int(dx) coef_k * Int(dy) [ basis_k (x) ResModel ].; PDF = --------------------------------------------------------; sum_k Int(dv) coef_k * Int(dw) [ basis_k (x) ResModel ]. where x is the set of coefficient dependents to be integrated,; y the set of basis function dependents to be integrated,; v is the set of coefficient dependents over which is normalized and; w is the set of basis function dependents over which is normalized. Set x must be contained in v and set y must be contained in w. Int_t getCoefAnalyticalIntegral(Int_t coef, RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const; Default implementation of function advertising integration capabilities. The interface is; similar to that of getAnalyticalIntegral except that an integer code is added that; designates the coefficient number for which the integration capabilities are requested. This default implementation advertises that no internal integrals are supported. Double_t coefAnalyticalIntegral(Int_t coef, Int_t code, const char* rangeName = 0) const; Default implementation of function implementing advertised integrals. Only; the pass-through scenario (no integration) is implemented. Bool_t forceAnalyticalInt(const RooAbsArg& dep) const; This function forces RooRealIntegral to offer all integration dependents; to RooAbsAnaConvPdf::getAnalyticalIntegralWN() for consideration for; internal integration, if RooRealIntegral considers this to be unsafe (e.g. due; to hidden Jacobian terms). RooAbsAnaConvPdf will not attempt to actually integrate all these dependents; but feed them to the re",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:49677,Integrability,interface,interface,49677,"x) coef_k * Int(dy) [ basis_k (x) ResModel ].; _; where x is the set of coefficient dependents to be integrated; and y the set of basis function dependents to be integrated. For normalized integrals this becomes. sum_k Int(dx) coef_k * Int(dy) [ basis_k (x) ResModel ].; PDF = --------------------------------------------------------; sum_k Int(dv) coef_k * Int(dw) [ basis_k (x) ResModel ]. where x is the set of coefficient dependents to be integrated,; y the set of basis function dependents to be integrated,; v is the set of coefficient dependents over which is normalized and; w is the set of basis function dependents over which is normalized. Set x must be contained in v and set y must be contained in w. Int_t getCoefAnalyticalIntegral(Int_t coef, RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const; Default implementation of function advertising integration capabilities. The interface is; similar to that of getAnalyticalIntegral except that an integer code is added that; designates the coefficient number for which the integration capabilities are requested. This default implementation advertises that no internal integrals are supported. Double_t coefAnalyticalIntegral(Int_t coef, Int_t code, const char* rangeName = 0) const; Default implementation of function implementing advertised integrals. Only; the pass-through scenario (no integration) is implemented. Bool_t forceAnalyticalInt(const RooAbsArg& dep) const; This function forces RooRealIntegral to offer all integration dependents; to RooAbsAnaConvPdf::getAnalyticalIntegralWN() for consideration for; internal integration, if RooRealIntegral considers this to be unsafe (e.g. due; to hidden Jacobian terms). RooAbsAnaConvPdf will not attempt to actually integrate all these dependents; but feed them to the resolution models integration interface, which will; make the final determination on how to integrate these dependents. Double_t getCoefNorm(Int_t coefIdx, const RooArgSet* nset, const TNamed* ",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:49823,Integrability,integrat,integration,49823,"x) coef_k * Int(dy) [ basis_k (x) ResModel ].; _; where x is the set of coefficient dependents to be integrated; and y the set of basis function dependents to be integrated. For normalized integrals this becomes. sum_k Int(dx) coef_k * Int(dy) [ basis_k (x) ResModel ].; PDF = --------------------------------------------------------; sum_k Int(dv) coef_k * Int(dw) [ basis_k (x) ResModel ]. where x is the set of coefficient dependents to be integrated,; y the set of basis function dependents to be integrated,; v is the set of coefficient dependents over which is normalized and; w is the set of basis function dependents over which is normalized. Set x must be contained in v and set y must be contained in w. Int_t getCoefAnalyticalIntegral(Int_t coef, RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const; Default implementation of function advertising integration capabilities. The interface is; similar to that of getAnalyticalIntegral except that an integer code is added that; designates the coefficient number for which the integration capabilities are requested. This default implementation advertises that no internal integrals are supported. Double_t coefAnalyticalIntegral(Int_t coef, Int_t code, const char* rangeName = 0) const; Default implementation of function implementing advertised integrals. Only; the pass-through scenario (no integration) is implemented. Bool_t forceAnalyticalInt(const RooAbsArg& dep) const; This function forces RooRealIntegral to offer all integration dependents; to RooAbsAnaConvPdf::getAnalyticalIntegralWN() for consideration for; internal integration, if RooRealIntegral considers this to be unsafe (e.g. due; to hidden Jacobian terms). RooAbsAnaConvPdf will not attempt to actually integrate all these dependents; but feed them to the resolution models integration interface, which will; make the final determination on how to integrate these dependents. Double_t getCoefNorm(Int_t coefIdx, const RooArgSet* nset, const TNamed* ",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:50140,Integrability,integrat,integration,50140,"basis_k (x) ResModel ]. where x is the set of coefficient dependents to be integrated,; y the set of basis function dependents to be integrated,; v is the set of coefficient dependents over which is normalized and; w is the set of basis function dependents over which is normalized. Set x must be contained in v and set y must be contained in w. Int_t getCoefAnalyticalIntegral(Int_t coef, RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const; Default implementation of function advertising integration capabilities. The interface is; similar to that of getAnalyticalIntegral except that an integer code is added that; designates the coefficient number for which the integration capabilities are requested. This default implementation advertises that no internal integrals are supported. Double_t coefAnalyticalIntegral(Int_t coef, Int_t code, const char* rangeName = 0) const; Default implementation of function implementing advertised integrals. Only; the pass-through scenario (no integration) is implemented. Bool_t forceAnalyticalInt(const RooAbsArg& dep) const; This function forces RooRealIntegral to offer all integration dependents; to RooAbsAnaConvPdf::getAnalyticalIntegralWN() for consideration for; internal integration, if RooRealIntegral considers this to be unsafe (e.g. due; to hidden Jacobian terms). RooAbsAnaConvPdf will not attempt to actually integrate all these dependents; but feed them to the resolution models integration interface, which will; make the final determination on how to integrate these dependents. Double_t getCoefNorm(Int_t coefIdx, const RooArgSet* nset, const TNamed* rangeName) const; Returns the normalization integral value of the coefficient with number coefIdx over normalization; set nset in range rangeName. void makeCoefVarList(RooArgList& ) const; Build complete list of coefficient variables. RooArgSet* coefVars(Int_t coefIdx) const; Return set of parameters with are used exclusively by the coefficient functions. void printM",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:50274,Integrability,integrat,integration,50274,"ient dependents over which is normalized and; w is the set of basis function dependents over which is normalized. Set x must be contained in v and set y must be contained in w. Int_t getCoefAnalyticalIntegral(Int_t coef, RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const; Default implementation of function advertising integration capabilities. The interface is; similar to that of getAnalyticalIntegral except that an integer code is added that; designates the coefficient number for which the integration capabilities are requested. This default implementation advertises that no internal integrals are supported. Double_t coefAnalyticalIntegral(Int_t coef, Int_t code, const char* rangeName = 0) const; Default implementation of function implementing advertised integrals. Only; the pass-through scenario (no integration) is implemented. Bool_t forceAnalyticalInt(const RooAbsArg& dep) const; This function forces RooRealIntegral to offer all integration dependents; to RooAbsAnaConvPdf::getAnalyticalIntegralWN() for consideration for; internal integration, if RooRealIntegral considers this to be unsafe (e.g. due; to hidden Jacobian terms). RooAbsAnaConvPdf will not attempt to actually integrate all these dependents; but feed them to the resolution models integration interface, which will; make the final determination on how to integrate these dependents. Double_t getCoefNorm(Int_t coefIdx, const RooArgSet* nset, const TNamed* rangeName) const; Returns the normalization integral value of the coefficient with number coefIdx over normalization; set nset in range rangeName. void makeCoefVarList(RooArgList& ) const; Build complete list of coefficient variables. RooArgSet* coefVars(Int_t coefIdx) const; Return set of parameters with are used exclusively by the coefficient functions. void printMultiline(ostream& stream, Int_t contents, Bool_t verbose = kFALSE, TString indent = """") const; Print info about this object to the specified stream. In addition to the ",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:50286,Integrability,depend,dependents,50286,"ient dependents over which is normalized and; w is the set of basis function dependents over which is normalized. Set x must be contained in v and set y must be contained in w. Int_t getCoefAnalyticalIntegral(Int_t coef, RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const; Default implementation of function advertising integration capabilities. The interface is; similar to that of getAnalyticalIntegral except that an integer code is added that; designates the coefficient number for which the integration capabilities are requested. This default implementation advertises that no internal integrals are supported. Double_t coefAnalyticalIntegral(Int_t coef, Int_t code, const char* rangeName = 0) const; Default implementation of function implementing advertised integrals. Only; the pass-through scenario (no integration) is implemented. Bool_t forceAnalyticalInt(const RooAbsArg& dep) const; This function forces RooRealIntegral to offer all integration dependents; to RooAbsAnaConvPdf::getAnalyticalIntegralWN() for consideration for; internal integration, if RooRealIntegral considers this to be unsafe (e.g. due; to hidden Jacobian terms). RooAbsAnaConvPdf will not attempt to actually integrate all these dependents; but feed them to the resolution models integration interface, which will; make the final determination on how to integrate these dependents. Double_t getCoefNorm(Int_t coefIdx, const RooArgSet* nset, const TNamed* rangeName) const; Returns the normalization integral value of the coefficient with number coefIdx over normalization; set nset in range rangeName. void makeCoefVarList(RooArgList& ) const; Build complete list of coefficient variables. RooArgSet* coefVars(Int_t coefIdx) const; Return set of parameters with are used exclusively by the coefficient functions. void printMultiline(ostream& stream, Int_t contents, Bool_t verbose = kFALSE, TString indent = """") const; Print info about this object to the specified stream. In addition to the ",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:50377,Integrability,integrat,integration,50377,"ient dependents over which is normalized and; w is the set of basis function dependents over which is normalized. Set x must be contained in v and set y must be contained in w. Int_t getCoefAnalyticalIntegral(Int_t coef, RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const; Default implementation of function advertising integration capabilities. The interface is; similar to that of getAnalyticalIntegral except that an integer code is added that; designates the coefficient number for which the integration capabilities are requested. This default implementation advertises that no internal integrals are supported. Double_t coefAnalyticalIntegral(Int_t coef, Int_t code, const char* rangeName = 0) const; Default implementation of function implementing advertised integrals. Only; the pass-through scenario (no integration) is implemented. Bool_t forceAnalyticalInt(const RooAbsArg& dep) const; This function forces RooRealIntegral to offer all integration dependents; to RooAbsAnaConvPdf::getAnalyticalIntegralWN() for consideration for; internal integration, if RooRealIntegral considers this to be unsafe (e.g. due; to hidden Jacobian terms). RooAbsAnaConvPdf will not attempt to actually integrate all these dependents; but feed them to the resolution models integration interface, which will; make the final determination on how to integrate these dependents. Double_t getCoefNorm(Int_t coefIdx, const RooArgSet* nset, const TNamed* rangeName) const; Returns the normalization integral value of the coefficient with number coefIdx over normalization; set nset in range rangeName. void makeCoefVarList(RooArgList& ) const; Build complete list of coefficient variables. RooArgSet* coefVars(Int_t coefIdx) const; Return set of parameters with are used exclusively by the coefficient functions. void printMultiline(ostream& stream, Int_t contents, Bool_t verbose = kFALSE, TString indent = """") const; Print info about this object to the specified stream. In addition to the ",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:50521,Integrability,integrat,integrate,50521,"Name = 0) const; Default implementation of function advertising integration capabilities. The interface is; similar to that of getAnalyticalIntegral except that an integer code is added that; designates the coefficient number for which the integration capabilities are requested. This default implementation advertises that no internal integrals are supported. Double_t coefAnalyticalIntegral(Int_t coef, Int_t code, const char* rangeName = 0) const; Default implementation of function implementing advertised integrals. Only; the pass-through scenario (no integration) is implemented. Bool_t forceAnalyticalInt(const RooAbsArg& dep) const; This function forces RooRealIntegral to offer all integration dependents; to RooAbsAnaConvPdf::getAnalyticalIntegralWN() for consideration for; internal integration, if RooRealIntegral considers this to be unsafe (e.g. due; to hidden Jacobian terms). RooAbsAnaConvPdf will not attempt to actually integrate all these dependents; but feed them to the resolution models integration interface, which will; make the final determination on how to integrate these dependents. Double_t getCoefNorm(Int_t coefIdx, const RooArgSet* nset, const TNamed* rangeName) const; Returns the normalization integral value of the coefficient with number coefIdx over normalization; set nset in range rangeName. void makeCoefVarList(RooArgList& ) const; Build complete list of coefficient variables. RooArgSet* coefVars(Int_t coefIdx) const; Return set of parameters with are used exclusively by the coefficient functions. void printMultiline(ostream& stream, Int_t contents, Bool_t verbose = kFALSE, TString indent = """") const; Print info about this object to the specified stream. In addition to the info; from RooAbsPdf::printStream() we add:. Verbose : detailed information on convolution integrals. void setCacheAndTrackHints(RooArgSet& ); Label OK'ed components with cache-and-track. Double_t getCoefNorm(Int_t coefIdx, const RooArgSet& nset, const char* rangeName) const; Coe",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:50541,Integrability,depend,dependents,50541,"Name = 0) const; Default implementation of function advertising integration capabilities. The interface is; similar to that of getAnalyticalIntegral except that an integer code is added that; designates the coefficient number for which the integration capabilities are requested. This default implementation advertises that no internal integrals are supported. Double_t coefAnalyticalIntegral(Int_t coef, Int_t code, const char* rangeName = 0) const; Default implementation of function implementing advertised integrals. Only; the pass-through scenario (no integration) is implemented. Bool_t forceAnalyticalInt(const RooAbsArg& dep) const; This function forces RooRealIntegral to offer all integration dependents; to RooAbsAnaConvPdf::getAnalyticalIntegralWN() for consideration for; internal integration, if RooRealIntegral considers this to be unsafe (e.g. due; to hidden Jacobian terms). RooAbsAnaConvPdf will not attempt to actually integrate all these dependents; but feed them to the resolution models integration interface, which will; make the final determination on how to integrate these dependents. Double_t getCoefNorm(Int_t coefIdx, const RooArgSet* nset, const TNamed* rangeName) const; Returns the normalization integral value of the coefficient with number coefIdx over normalization; set nset in range rangeName. void makeCoefVarList(RooArgList& ) const; Build complete list of coefficient variables. RooArgSet* coefVars(Int_t coefIdx) const; Return set of parameters with are used exclusively by the coefficient functions. void printMultiline(ostream& stream, Int_t contents, Bool_t verbose = kFALSE, TString indent = """") const; Print info about this object to the specified stream. In addition to the info; from RooAbsPdf::printStream() we add:. Verbose : detailed information on convolution integrals. void setCacheAndTrackHints(RooArgSet& ); Label OK'ed components with cache-and-track. Double_t getCoefNorm(Int_t coefIdx, const RooArgSet& nset, const char* rangeName) const; Coe",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:50592,Integrability,integrat,integration,50592,"Name = 0) const; Default implementation of function advertising integration capabilities. The interface is; similar to that of getAnalyticalIntegral except that an integer code is added that; designates the coefficient number for which the integration capabilities are requested. This default implementation advertises that no internal integrals are supported. Double_t coefAnalyticalIntegral(Int_t coef, Int_t code, const char* rangeName = 0) const; Default implementation of function implementing advertised integrals. Only; the pass-through scenario (no integration) is implemented. Bool_t forceAnalyticalInt(const RooAbsArg& dep) const; This function forces RooRealIntegral to offer all integration dependents; to RooAbsAnaConvPdf::getAnalyticalIntegralWN() for consideration for; internal integration, if RooRealIntegral considers this to be unsafe (e.g. due; to hidden Jacobian terms). RooAbsAnaConvPdf will not attempt to actually integrate all these dependents; but feed them to the resolution models integration interface, which will; make the final determination on how to integrate these dependents. Double_t getCoefNorm(Int_t coefIdx, const RooArgSet* nset, const TNamed* rangeName) const; Returns the normalization integral value of the coefficient with number coefIdx over normalization; set nset in range rangeName. void makeCoefVarList(RooArgList& ) const; Build complete list of coefficient variables. RooArgSet* coefVars(Int_t coefIdx) const; Return set of parameters with are used exclusively by the coefficient functions. void printMultiline(ostream& stream, Int_t contents, Bool_t verbose = kFALSE, TString indent = """") const; Print info about this object to the specified stream. In addition to the info; from RooAbsPdf::printStream() we add:. Verbose : detailed information on convolution integrals. void setCacheAndTrackHints(RooArgSet& ); Label OK'ed components with cache-and-track. Double_t getCoefNorm(Int_t coefIdx, const RooArgSet& nset, const char* rangeName) const; Coe",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:50604,Integrability,interface,interface,50604,"Name = 0) const; Default implementation of function advertising integration capabilities. The interface is; similar to that of getAnalyticalIntegral except that an integer code is added that; designates the coefficient number for which the integration capabilities are requested. This default implementation advertises that no internal integrals are supported. Double_t coefAnalyticalIntegral(Int_t coef, Int_t code, const char* rangeName = 0) const; Default implementation of function implementing advertised integrals. Only; the pass-through scenario (no integration) is implemented. Bool_t forceAnalyticalInt(const RooAbsArg& dep) const; This function forces RooRealIntegral to offer all integration dependents; to RooAbsAnaConvPdf::getAnalyticalIntegralWN() for consideration for; internal integration, if RooRealIntegral considers this to be unsafe (e.g. due; to hidden Jacobian terms). RooAbsAnaConvPdf will not attempt to actually integrate all these dependents; but feed them to the resolution models integration interface, which will; make the final determination on how to integrate these dependents. Double_t getCoefNorm(Int_t coefIdx, const RooArgSet* nset, const TNamed* rangeName) const; Returns the normalization integral value of the coefficient with number coefIdx over normalization; set nset in range rangeName. void makeCoefVarList(RooArgList& ) const; Build complete list of coefficient variables. RooArgSet* coefVars(Int_t coefIdx) const; Return set of parameters with are used exclusively by the coefficient functions. void printMultiline(ostream& stream, Int_t contents, Bool_t verbose = kFALSE, TString indent = """") const; Print info about this object to the specified stream. In addition to the info; from RooAbsPdf::printStream() we add:. Verbose : detailed information on convolution integrals. void setCacheAndTrackHints(RooArgSet& ); Label OK'ed components with cache-and-track. Double_t getCoefNorm(Int_t coefIdx, const RooArgSet& nset, const char* rangeName) const; Coe",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:50666,Integrability,integrat,integrate,50666,"Name = 0) const; Default implementation of function advertising integration capabilities. The interface is; similar to that of getAnalyticalIntegral except that an integer code is added that; designates the coefficient number for which the integration capabilities are requested. This default implementation advertises that no internal integrals are supported. Double_t coefAnalyticalIntegral(Int_t coef, Int_t code, const char* rangeName = 0) const; Default implementation of function implementing advertised integrals. Only; the pass-through scenario (no integration) is implemented. Bool_t forceAnalyticalInt(const RooAbsArg& dep) const; This function forces RooRealIntegral to offer all integration dependents; to RooAbsAnaConvPdf::getAnalyticalIntegralWN() for consideration for; internal integration, if RooRealIntegral considers this to be unsafe (e.g. due; to hidden Jacobian terms). RooAbsAnaConvPdf will not attempt to actually integrate all these dependents; but feed them to the resolution models integration interface, which will; make the final determination on how to integrate these dependents. Double_t getCoefNorm(Int_t coefIdx, const RooArgSet* nset, const TNamed* rangeName) const; Returns the normalization integral value of the coefficient with number coefIdx over normalization; set nset in range rangeName. void makeCoefVarList(RooArgList& ) const; Build complete list of coefficient variables. RooArgSet* coefVars(Int_t coefIdx) const; Return set of parameters with are used exclusively by the coefficient functions. void printMultiline(ostream& stream, Int_t contents, Bool_t verbose = kFALSE, TString indent = """") const; Print info about this object to the specified stream. In addition to the info; from RooAbsPdf::printStream() we add:. Verbose : detailed information on convolution integrals. void setCacheAndTrackHints(RooArgSet& ); Label OK'ed components with cache-and-track. Double_t getCoefNorm(Int_t coefIdx, const RooArgSet& nset, const char* rangeName) const; Coe",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:50682,Integrability,depend,dependents,50682,"Name = 0) const; Default implementation of function advertising integration capabilities. The interface is; similar to that of getAnalyticalIntegral except that an integer code is added that; designates the coefficient number for which the integration capabilities are requested. This default implementation advertises that no internal integrals are supported. Double_t coefAnalyticalIntegral(Int_t coef, Int_t code, const char* rangeName = 0) const; Default implementation of function implementing advertised integrals. Only; the pass-through scenario (no integration) is implemented. Bool_t forceAnalyticalInt(const RooAbsArg& dep) const; This function forces RooRealIntegral to offer all integration dependents; to RooAbsAnaConvPdf::getAnalyticalIntegralWN() for consideration for; internal integration, if RooRealIntegral considers this to be unsafe (e.g. due; to hidden Jacobian terms). RooAbsAnaConvPdf will not attempt to actually integrate all these dependents; but feed them to the resolution models integration interface, which will; make the final determination on how to integrate these dependents. Double_t getCoefNorm(Int_t coefIdx, const RooArgSet* nset, const TNamed* rangeName) const; Returns the normalization integral value of the coefficient with number coefIdx over normalization; set nset in range rangeName. void makeCoefVarList(RooArgList& ) const; Build complete list of coefficient variables. RooArgSet* coefVars(Int_t coefIdx) const; Return set of parameters with are used exclusively by the coefficient functions. void printMultiline(ostream& stream, Int_t contents, Bool_t verbose = kFALSE, TString indent = """") const; Print info about this object to the specified stream. In addition to the info; from RooAbsPdf::printStream() we add:. Verbose : detailed information on convolution integrals. void setCacheAndTrackHints(RooArgSet& ); Label OK'ed components with cache-and-track. Double_t getCoefNorm(Int_t coefIdx, const RooArgSet& nset, const char* rangeName) const; Coe",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:715,Modifiability,variab,variable,715,". RooAbsAnaConvPdf. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » ROOFIT; » ROOFITCORE; » RooAbsAnaConvPdf. class RooAbsAnaConvPdf: public RooAbsPdf. RooAbsAnaConvPdf is the base class of for PDFs that represents a; physics model that can be analytically convolved with a resolution model. To achieve factorization between the physics model and the resolution; model, each physics model must be able to be written in the form; _ _ _ _; Phys(x,a,b) = Sum_k coef_k(a) * basis_k(x,b). where basis_k are a limited number of functions in terms of the variable; to be convoluted and coef_k are coefficients independent of the convolution; variable. Classes derived from RooResolutionModel implement; _ _ _ _; R_k(x,b,c) = Int(dx') basis_k(x',b) * resModel(x-x',c). which RooAbsAnaConvPdf uses to construct the pdf for [ Phys (x) R ] :; _ _ _ _ _ _; PDF(x,a,b,c) = Sum_k coef_k(a) * R_k(x,b,c). A minimal implementation of a RooAbsAnaConvPdf physics model consists of. - A constructor that declares the required basis functions using the declareBasis() method.; The declareBasis() function assigns a unique identifier code to each declare basis. - An implementation of coefficient(Int_t code) returning the coefficient value for each; declared basis function. Optionally, analytical integrals can be provided for the coefficient functions. The; interface for this is quite similar to that for integrals of regular PDFs. Two functions,. Int_t getCoefAnalyticalIntegral(Int_t coef, RooArgSet& allVars, RooArgSet& analVars, const char* rangeName) const; Double_t coefAnalyticalIntegral(Int_t coef, Int_t code, const char* rangeName) const. advertise the coefficient integration capabilities and implement them respectively.; Please see RooAbsPdf for additional details. Advertised analytical integrals must be; valid for all coefficients. Fun",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:802,Modifiability,variab,variable,802,". RooAbsAnaConvPdf. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » ROOFIT; » ROOFITCORE; » RooAbsAnaConvPdf. class RooAbsAnaConvPdf: public RooAbsPdf. RooAbsAnaConvPdf is the base class of for PDFs that represents a; physics model that can be analytically convolved with a resolution model. To achieve factorization between the physics model and the resolution; model, each physics model must be able to be written in the form; _ _ _ _; Phys(x,a,b) = Sum_k coef_k(a) * basis_k(x,b). where basis_k are a limited number of functions in terms of the variable; to be convoluted and coef_k are coefficients independent of the convolution; variable. Classes derived from RooResolutionModel implement; _ _ _ _; R_k(x,b,c) = Int(dx') basis_k(x',b) * resModel(x-x',c). which RooAbsAnaConvPdf uses to construct the pdf for [ Phys (x) R ] :; _ _ _ _ _ _; PDF(x,a,b,c) = Sum_k coef_k(a) * R_k(x,b,c). A minimal implementation of a RooAbsAnaConvPdf physics model consists of. - A constructor that declares the required basis functions using the declareBasis() method.; The declareBasis() function assigns a unique identifier code to each declare basis. - An implementation of coefficient(Int_t code) returning the coefficient value for each; declared basis function. Optionally, analytical integrals can be provided for the coefficient functions. The; interface for this is quite similar to that for integrals of regular PDFs. Two functions,. Int_t getCoefAnalyticalIntegral(Int_t coef, RooArgSet& allVars, RooArgSet& analVars, const char* rangeName) const; Double_t coefAnalyticalIntegral(Int_t coef, Int_t code, const char* rangeName) const. advertise the coefficient integration capabilities and implement them respectively.; Please see RooAbsPdf for additional details. Advertised analytical integrals must be; valid for all coefficients. Fun",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:12718,Modifiability,extend,extendedTerm,12718,"nt_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidRooAbsReal::enableOffsetting(Bool_t); virtual voidTObject::Error(const char* method, const char* msgfmt) const; static Bool_tRooAbsPdf::evalError(); static RooAbsReal::EvalErrorIterRooAbsReal::evalErrorIter(); static RooAbsReal::ErrorLoggingModeRooAbsReal::evalErrorLoggingMode(); virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual Double_tRooAbsPdf::expectedEvents(const RooArgSet* nset) const; virtual Double_tRooAbsPdf::expectedEvents(const RooArgSet& nset) const; RooExpensiveObjectCache&RooAbsArg::expensiveObjectCache() const; virtual Double_tRooAbsPdf::extendedTerm(Double_t observedEvents, const RooArgSet* nset = 0) const; virtual RooAbsPdf::ExtendModeRooAbsPdf::extendMode() const; virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); RooDataHist*RooAbsReal::fillDataHist(RooDataHist* hist, const RooArgSet* nset, Double_t scaleFactor, Bool_t correctForBinVolume = kFALSE, Bool_t showProgress = kFALSE) const; TH1*RooAbsReal::fillHistogram(TH1* hist, const RooArgList& plotVars, Double_t scaleFactor = 1, const RooArgSet* projectedVars = 0, Bool_t scaling = kTRUE, const RooArgSet* condObs = 0, Bool_t setError = kTRUE) const; Bool_tRooAbsArg::findConstantNodes(const RooArgSet& observables, RooArgSet& cacheList); Bool_tRooAbsArg::findConstantNodes(const RooArgSet& observables, RooArgSet& cacheList, RooLinkedList& processedNodes); RooAbsArg*RooAbsArg::findNewServer(const RooAbsCollection& newSet, Bool_t nameChange) const; virtual TObject*TObject::FindObject(const char* name) const; v",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:12809,Modifiability,Extend,ExtendModeRooAbsPdf,12809,"Class() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidRooAbsReal::enableOffsetting(Bool_t); virtual voidTObject::Error(const char* method, const char* msgfmt) const; static Bool_tRooAbsPdf::evalError(); static RooAbsReal::EvalErrorIterRooAbsReal::evalErrorIter(); static RooAbsReal::ErrorLoggingModeRooAbsReal::evalErrorLoggingMode(); virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual Double_tRooAbsPdf::expectedEvents(const RooArgSet* nset) const; virtual Double_tRooAbsPdf::expectedEvents(const RooArgSet& nset) const; RooExpensiveObjectCache&RooAbsArg::expensiveObjectCache() const; virtual Double_tRooAbsPdf::extendedTerm(Double_t observedEvents, const RooArgSet* nset = 0) const; virtual RooAbsPdf::ExtendModeRooAbsPdf::extendMode() const; virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); RooDataHist*RooAbsReal::fillDataHist(RooDataHist* hist, const RooArgSet* nset, Double_t scaleFactor, Bool_t correctForBinVolume = kFALSE, Bool_t showProgress = kFALSE) const; TH1*RooAbsReal::fillHistogram(TH1* hist, const RooArgList& plotVars, Double_t scaleFactor = 1, const RooArgSet* projectedVars = 0, Bool_t scaling = kTRUE, const RooArgSet* condObs = 0, Bool_t setError = kTRUE) const; Bool_tRooAbsArg::findConstantNodes(const RooArgSet& observables, RooArgSet& cacheList); Bool_tRooAbsArg::findConstantNodes(const RooArgSet& observables, RooArgSet& cacheList, RooLinkedList& processedNodes); RooAbsArg*RooAbsArg::findNewServer(const RooAbsCollection& newSet, Bool_t nameChange) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Double_tRooAbsReal::findRoot(Roo",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:12830,Modifiability,extend,extendMode,12830,"U ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidRooAbsReal::enableOffsetting(Bool_t); virtual voidTObject::Error(const char* method, const char* msgfmt) const; static Bool_tRooAbsPdf::evalError(); static RooAbsReal::EvalErrorIterRooAbsReal::evalErrorIter(); static RooAbsReal::ErrorLoggingModeRooAbsReal::evalErrorLoggingMode(); virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual Double_tRooAbsPdf::expectedEvents(const RooArgSet* nset) const; virtual Double_tRooAbsPdf::expectedEvents(const RooArgSet& nset) const; RooExpensiveObjectCache&RooAbsArg::expensiveObjectCache() const; virtual Double_tRooAbsPdf::extendedTerm(Double_t observedEvents, const RooArgSet* nset = 0) const; virtual RooAbsPdf::ExtendModeRooAbsPdf::extendMode() const; virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); RooDataHist*RooAbsReal::fillDataHist(RooDataHist* hist, const RooArgSet* nset, Double_t scaleFactor, Bool_t correctForBinVolume = kFALSE, Bool_t showProgress = kFALSE) const; TH1*RooAbsReal::fillHistogram(TH1* hist, const RooArgList& plotVars, Double_t scaleFactor = 1, const RooArgSet* projectedVars = 0, Bool_t scaling = kTRUE, const RooArgSet* condObs = 0, Bool_t setError = kTRUE) const; Bool_tRooAbsArg::findConstantNodes(const RooArgSet& observables, RooArgSet& cacheList); Bool_tRooAbsArg::findConstantNodes(const RooArgSet& observables, RooArgSet& cacheList, RooLinkedList& processedNodes); RooAbsArg*RooAbsArg::findNewServer(const RooAbsCollection& newSet, Bool_t nameChange) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Double_tRooAbsReal::findRoot(RooRealVar& x, Doubl",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:16487,Modifiability,extend,extended,16487,"ec&) const; RooDataSet*RooAbsPdf::generate(const RooArgSet& whatVars, const RooDataSet& prototype, Int_t nEvents = 0, Bool_t verbose = kFALSE, Bool_t randProtoOrder = kFALSE, Bool_t resampleProto = kFALSE) const; RooDataSet*RooAbsPdf::generate(const RooArgSet& whatVars, Int_t nEvents, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none()); RooDataSet*RooAbsPdf::generate(const RooArgSet& whatVars, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()); RooDataSet*RooAbsPdf::generate(const RooArgSet& whatVars, Double_t nEvents = 0, Bool_t verbose = kFALSE, Bool_t autoBinned = kTRUE, const char* binnedTag = """", Bool_t expectedData = kFALSE, Bool_t extended = kFALSE) const; virtual RooDataHist*RooAbsPdf::generateBinned(const RooArgSet& whatVars, Double_t nEvents, Bool_t expectedData = kFALSE, Bool_t extended = kFALSE) const; virtual RooDataHist*RooAbsPdf::generateBinned(const RooArgSet& whatVars, Double_t nEvents, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none()); virtual RooDataHist*RooAbsPdf::generateBinned(const RooArgSet& whatVars, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()); virtual voidRooAbsPdf::generateEvent(Int_t code); virtual RooDataSet*RooAbsPdf::generateSimGlobal(const RooArgSet& whatVars, Int_t nEvents); virtual RooArgSet*RooAbsPdf::getAllConstraints(const RooArgSet& o",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:16641,Modifiability,extend,extended,16641,"ProtoOrder = kFALSE, Bool_t resampleProto = kFALSE) const; RooDataSet*RooAbsPdf::generate(const RooArgSet& whatVars, Int_t nEvents, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none()); RooDataSet*RooAbsPdf::generate(const RooArgSet& whatVars, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()); RooDataSet*RooAbsPdf::generate(const RooArgSet& whatVars, Double_t nEvents = 0, Bool_t verbose = kFALSE, Bool_t autoBinned = kTRUE, const char* binnedTag = """", Bool_t expectedData = kFALSE, Bool_t extended = kFALSE) const; virtual RooDataHist*RooAbsPdf::generateBinned(const RooArgSet& whatVars, Double_t nEvents, Bool_t expectedData = kFALSE, Bool_t extended = kFALSE) const; virtual RooDataHist*RooAbsPdf::generateBinned(const RooArgSet& whatVars, Double_t nEvents, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none()); virtual RooDataHist*RooAbsPdf::generateBinned(const RooArgSet& whatVars, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()); virtual voidRooAbsPdf::generateEvent(Int_t code); virtual RooDataSet*RooAbsPdf::generateSimGlobal(const RooArgSet& whatVars, Int_t nEvents); virtual RooArgSet*RooAbsPdf::getAllConstraints(const RooArgSet& observables, RooArgSet& constrainedParams, Bool_t stripDisconnected = kTRUE) const; virtual Int_tRooAbsReal::getAnalyticalIntegral(RooArgSet& allVars, RooA",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:22020,Modifiability,Inherit,InheritsFrom,22020,"t RooArgSet& set) const; virtual Double_tRooAbsPdf::getValV(const RooArgSet* set = 0) const; RooArgSet*RooAbsArg::getVariables(Bool_t stripDisconnected = kTRUE) const; voidRooAbsArg::graphVizTree(const char* fileName, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); voidRooAbsArg::graphVizTree(ostream& os, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tRooAbsArg::hasClients() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tRooAbsArg::hasRange(const char*) const; static Bool_tRooAbsReal::hideOffset(); RooGenFunction*RooAbsReal::iGenFunction(RooRealVar& x, const RooArgSet& nset = RooArgSet()); RooMultiGenFunction*RooAbsReal::iGenFunction(const RooArgSet& observables, const RooArgSet& nset = RooArgSet()); virtual Bool_tRooAbsArg::importWorkspaceHook(RooWorkspace&); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidRooAbsPdf::initGenerator(Int_t code); virtual Bool_tRooAbsArg::inRange(const char*) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual voidRooAbsArg::ioStreamerPass2(); static voidRooAbsArg::ioStreamerPass2Finalize(); virtual TClass*IsA() const; virtual Bool_tRooAbsReal::isBinnedDistribution(const RooArgSet&) const; Bool_tRooAbsArg::isCloneOf(const RooAbsArg& other) const; Bool_tRooAbsArg::isConstant() const; virtual Bool_tRooAbsArg::isDerived() const; virtual Bool_tisDirectGenSafe(const RooAbsArg& arg) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tRooAbsArg::isFundamental() const; virtual Bool_tRooAbsReal::isIdentical(const RooAbsArg& other, Bool_t assumeSameType = kFALSE); virtual Bool_tRooAbsArg::isLValue() const; virtual Bool_tRooAbsReal::isOffsetting() const; B",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:22086,Modifiability,Inherit,InheritsFrom,22086,"RooArgSet* set = 0) const; RooArgSet*RooAbsArg::getVariables(Bool_t stripDisconnected = kTRUE) const; voidRooAbsArg::graphVizTree(const char* fileName, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); voidRooAbsArg::graphVizTree(ostream& os, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tRooAbsArg::hasClients() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tRooAbsArg::hasRange(const char*) const; static Bool_tRooAbsReal::hideOffset(); RooGenFunction*RooAbsReal::iGenFunction(RooRealVar& x, const RooArgSet& nset = RooArgSet()); RooMultiGenFunction*RooAbsReal::iGenFunction(const RooArgSet& observables, const RooArgSet& nset = RooArgSet()); virtual Bool_tRooAbsArg::importWorkspaceHook(RooWorkspace&); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidRooAbsPdf::initGenerator(Int_t code); virtual Bool_tRooAbsArg::inRange(const char*) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual voidRooAbsArg::ioStreamerPass2(); static voidRooAbsArg::ioStreamerPass2Finalize(); virtual TClass*IsA() const; virtual Bool_tRooAbsReal::isBinnedDistribution(const RooArgSet&) const; Bool_tRooAbsArg::isCloneOf(const RooAbsArg& other) const; Bool_tRooAbsArg::isConstant() const; virtual Bool_tRooAbsArg::isDerived() const; virtual Bool_tisDirectGenSafe(const RooAbsArg& arg) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tRooAbsArg::isFundamental() const; virtual Bool_tRooAbsReal::isIdentical(const RooAbsArg& other, Bool_t assumeSameType = kFALSE); virtual Bool_tRooAbsArg::isLValue() const; virtual Bool_tRooAbsReal::isOffsetting() const; Bool_tTObject::IsOnHeap() const; Bool_tRooAbsArg::isShapeDirty() co",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:31662,Modifiability,config,config,31662,"ect::SavePrimitive(ostream& out, Option_t* option = """"); virtual Bool_tRooAbsPdf::selfNormalized() const; TIterator*RooAbsArg::serverIterator() const; RooFIterRooAbsArg::serverMIterator() const; virtual voidRooAbsArg::serverNameChangeHook(const RooAbsArg*, const RooAbsArg*); voidRooAbsArg::setAttribute(const Text_t* name, Bool_t value = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidsetCacheAndTrackHints(RooArgSet&); static voidRooAbsReal::setCacheCheck(Bool_t flag); virtual Bool_tRooAbsReal::setData(RooAbsData&, Bool_t = kTRUE); static voidRooAbsArg::setDirtyInhibit(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidRooAbsReal::setEvalErrorLoggingMode(RooAbsReal::ErrorLoggingMode m); virtual voidRooAbsArg::setExpensiveObjectCache(RooExpensiveObjectCache& cache); voidRooAbsPdf::setGeneratorConfig(); voidRooAbsPdf::setGeneratorConfig(const RooNumGenConfig& config); static voidRooAbsReal::setHideOffset(Bool_t flag); voidRooAbsReal::setIntegratorConfig(); voidRooAbsReal::setIntegratorConfig(const RooNumIntConfig& config); voidRooAbsArg::setLocalNoDirtyInhibit(Bool_t flag) const; virtual voidRooAbsArg::SetName(const char* name); virtual voidRooAbsArg::SetNameTitle(const char* name, const char* title); voidRooAbsPdf::setNormRange(const char* rangeName); voidRooAbsPdf::setNormRangeOverride(const char* rangeName); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsArg::setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); voidRooAbsReal::setParameterizeIntegral(const RooArgSet& paramVars); voidRooAbsReal::setPlotLabel(const char* label); voidRooAbsArg::setProhibitServerRedirect(Bool_t flag); voidRooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsPdf::setTraceCounter(Int_t value, Bool_t allNodes = kFAL",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:31820,Modifiability,config,config,31820,"rRooAbsArg::serverMIterator() const; virtual voidRooAbsArg::serverNameChangeHook(const RooAbsArg*, const RooAbsArg*); voidRooAbsArg::setAttribute(const Text_t* name, Bool_t value = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidsetCacheAndTrackHints(RooArgSet&); static voidRooAbsReal::setCacheCheck(Bool_t flag); virtual Bool_tRooAbsReal::setData(RooAbsData&, Bool_t = kTRUE); static voidRooAbsArg::setDirtyInhibit(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidRooAbsReal::setEvalErrorLoggingMode(RooAbsReal::ErrorLoggingMode m); virtual voidRooAbsArg::setExpensiveObjectCache(RooExpensiveObjectCache& cache); voidRooAbsPdf::setGeneratorConfig(); voidRooAbsPdf::setGeneratorConfig(const RooNumGenConfig& config); static voidRooAbsReal::setHideOffset(Bool_t flag); voidRooAbsReal::setIntegratorConfig(); voidRooAbsReal::setIntegratorConfig(const RooNumIntConfig& config); voidRooAbsArg::setLocalNoDirtyInhibit(Bool_t flag) const; virtual voidRooAbsArg::SetName(const char* name); virtual voidRooAbsArg::SetNameTitle(const char* name, const char* title); voidRooAbsPdf::setNormRange(const char* rangeName); voidRooAbsPdf::setNormRangeOverride(const char* rangeName); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsArg::setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); voidRooAbsReal::setParameterizeIntegral(const RooArgSet& paramVars); voidRooAbsReal::setPlotLabel(const char* label); voidRooAbsArg::setProhibitServerRedirect(Bool_t flag); voidRooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsPdf::setTraceCounter(Int_t value, Bool_t allNodes = kFALSE); voidRooAbsArg::setTransientAttribute(const Text_t* name, Bool_t value = kTRUE); virtual voidTObject::SetUniqueID(UInt_t uid); voidRooAbsReal::setUnit(con",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:35945,Modifiability,extend,extended,35945,"Int_t bufSize = 32000); virtual voidRooAbsReal::attachToVStore(RooVectorDataStore& vstore); RooFitResult*RooAbsReal::chi2FitDriver(RooAbsReal& fcn, RooLinkedList& cmdList); TStringRooAbsArg::cleanBranchName() const; virtual voidRooAbsReal::copyCache(const RooAbsArg* source, Bool_t valueOnly = kFALSE, Bool_t setValDirty = kTRUE); RooAbsReal*RooAbsReal::createIntObj(const RooArgSet& iset, const RooArgSet* nset, const RooNumIntConfig* cfg, const char* rangeName) const; virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; virtual Double_tevaluate() const; virtual voidRooAbsReal::fillTreeBranch(TTree& t); voidRooAbsReal::findInnerMostIntegration(const RooArgSet& allObs, RooArgSet& innerObs, const char* rangeName) const; RooDataSet*RooAbsPdf::generate(RooAbsGenContext& context, const RooArgSet& whatVars, const RooDataSet* prototype, Double_t nEvents, Bool_t verbose, Bool_t randProtoOrder, Bool_t resampleProto, Bool_t skipInit = kFALSE, Bool_t extended = kFALSE) const; Double_tgetCoefNorm(Int_t coefIdx, const RooArgSet* nset, const TNamed* rangeName) const; virtual voidRooAbsArg::getObservablesHook(const RooArgSet*, RooArgSet*) const; virtual voidRooAbsArg::getParametersHook(const RooArgSet*, RooArgSet*, Bool_t) const; RooAbsProxy*RooAbsArg::getProxy(Int_t index) const; static voidRooAbsReal::globalSelectComp(Bool_t flag); voidRooAbsArg::graphVizAddConnections(set<std::pair<RooAbsArg*,RooAbsArg*> >&); Bool_tRooAbsArg::inhibitDirty() const; TStringRooAbsReal::integralNameSuffix(const RooArgSet& iset, const RooArgSet* nset = 0, const char* rangeName = 0, Bool_t omitEmpty = kFALSE) const; Bool_tRooAbsReal::isSelectedComp() const; virtual Bool_tRooAbsReal::isValid() const; virtual Bool_tRooAbsReal::isValidReal(Double_t value, Bool_t printError = kFALSE) const; voidmakeCoefVarList(RooArgList&) const; voidRooAbsReal::makeProjectionSet(const RooAbsArg* plotVar, const RooArgSet* allVars, RooArgSet& projectedVars, Bool_t silent) const; vo",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:39972,Modifiability,Extend,ExtendMode,39972,"rce) const; virtual voidRooAbsReal::setTreeBranchStatus(TTree& t, Bool_t active); voidRooAbsArg::setValueDirty(const RooAbsArg* source) const; virtual voidRooAbsReal::syncCache(const RooArgSet* set = 0); virtual Bool_tRooAbsPdf::syncNormalization(const RooArgSet* dset, Bool_t adjustProxies = kTRUE) const; Double_tRooAbsReal::traceEval(const RooArgSet* set) const; voidRooAbsArg::unRegisterProxy(RooArgProxy& proxy); voidRooAbsArg::unRegisterProxy(RooSetProxy& proxy); voidRooAbsArg::unRegisterProxy(RooListProxy& proxy). Data Members; public:. enum RooAbsPdf::ExtendMode { CanNotBeExtended; CanBeExtended; MustBeExtended; };; enum RooAbsReal::ScaleType { Raw; Relative; NumEvent; RelativeExpected; };; enum RooAbsReal::ErrorLoggingMode { PrintErrors; CollectErrors; CountErrors; Ignore; };; enum RooAbsArg::ConstOpCode { Activate; DeActivate; ConfigChange; ValueChange; };; enum RooAbsArg::CacheMode { Always; NotAdvised; Never; };; enum RooAbsArg::OperMode { Auto; AClean; ADirty; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };; enum RooPrintable::ContentsOption { kName; kClassName; kValue; kArgs; kExtras; kAddress; kTitle; kCollectionHeader; };; enum RooPrintable::StyleOption { kInline; kSingleLine; kStandard; kVerbose; kTreeStructure; };. public:. static map<RooAbsArg*,TRefArray*>RooAbsArg::_ioEvoListtemporary holding list for proxies needed in schema evolution ; static stack<RooAbsArg*>RooAbsArg::_ioReadStackreading stack ; static const UInt_tRooAbsArg::fnv1a32start; static const ULong64_tRooAbsArg::fnv1a64start. protected:. RooArgList_basisList! List of created basis functions; set<std::string>RooAbsArg::_boolAttribBoolean attributes; set<std::string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); Bool_tRooAbsReal::_boolValue! Transien",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:40255,Modifiability,Config,ConfigChange,40255,"rce) const; virtual voidRooAbsReal::setTreeBranchStatus(TTree& t, Bool_t active); voidRooAbsArg::setValueDirty(const RooAbsArg* source) const; virtual voidRooAbsReal::syncCache(const RooArgSet* set = 0); virtual Bool_tRooAbsPdf::syncNormalization(const RooArgSet* dset, Bool_t adjustProxies = kTRUE) const; Double_tRooAbsReal::traceEval(const RooArgSet* set) const; voidRooAbsArg::unRegisterProxy(RooArgProxy& proxy); voidRooAbsArg::unRegisterProxy(RooSetProxy& proxy); voidRooAbsArg::unRegisterProxy(RooListProxy& proxy). Data Members; public:. enum RooAbsPdf::ExtendMode { CanNotBeExtended; CanBeExtended; MustBeExtended; };; enum RooAbsReal::ScaleType { Raw; Relative; NumEvent; RelativeExpected; };; enum RooAbsReal::ErrorLoggingMode { PrintErrors; CollectErrors; CountErrors; Ignore; };; enum RooAbsArg::ConstOpCode { Activate; DeActivate; ConfigChange; ValueChange; };; enum RooAbsArg::CacheMode { Always; NotAdvised; Never; };; enum RooAbsArg::OperMode { Auto; AClean; ADirty; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };; enum RooPrintable::ContentsOption { kName; kClassName; kValue; kArgs; kExtras; kAddress; kTitle; kCollectionHeader; };; enum RooPrintable::StyleOption { kInline; kSingleLine; kStandard; kVerbose; kTreeStructure; };. public:. static map<RooAbsArg*,TRefArray*>RooAbsArg::_ioEvoListtemporary holding list for proxies needed in schema evolution ; static stack<RooAbsArg*>RooAbsArg::_ioReadStackreading stack ; static const UInt_tRooAbsArg::fnv1a32start; static const ULong64_tRooAbsArg::fnv1a64start. protected:. RooArgList_basisList! List of created basis functions; set<std::string>RooAbsArg::_boolAttribBoolean attributes; set<std::string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); Bool_tRooAbsReal::_boolValue! Transien",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:42490,Modifiability,variab,variable,42490,"nt cache for byte values from tree branches ; static Bool_tRooAbsReal::_cacheCheckIf true, always validate contents of clean which outcome of evaluate(); deque<RooAbsCache*>RooAbsArg::_cacheListlist of caches; RooRefCountListRooAbsArg::_clientListlist of client objects; RooRefCountListRooAbsArg::_clientListShapesubset of clients that requested shape dirty flag propagation; RooRefCountListRooAbsArg::_clientListValuesubset of clients that requested value dirty flag propagation; TIterator*RooAbsArg::_clientShapeIter! Iterator over _clientListShape ; TIterator*RooAbsArg::_clientValueIter! Iterator over _clientListValue ; RooAICRegistry_codeReg! Registry of analytical integration codes; RooObjCacheManager_coefNormMgrCoefficient normalization manager; RooArgSet*_convNormSet! Subset of last normalization that applies to convolutions; RooListProxy_convSetSet of (resModel (x) basisFunc) convolution objects; TIterator*_convSetIter! Iterator over _convNormSet; RooRealProxy_convVarConvolution variable; Bool_tRooAbsArg::_deleteWatch! Delete watch flag ; RooExpensiveObjectCache*RooAbsArg::_eocachePointer to global cache manager for any expensive components created by this object; Int_tRooAbsPdf::_errorCountNumber of errors remaining to print; static Bool_tRooAbsPdf::_evalError; Bool_tRooAbsArg::_fastAllow fast access mode in getVal() and proxies; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsReal::_hideOffsetOffset hiding flag; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; Bool_tRooAbsArg::_isConstant! Cached isConstant status ; Bool_t_isCopy; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsR",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:45069,Modifiability,config,configuration,45069," by _normMgr); RooObjCacheManagerRooAbsPdf::_normMgrThe cache manager; TStringRooAbsPdf::_normRangeNormalization range; static TStringRooAbsPdf::_normRangeOverride; RooArgSet*RooAbsPdf::_normSet! Normalization set with for above integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title.",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:45177,Modifiability,config,configuration,45177," by _normMgr); RooObjCacheManagerRooAbsPdf::_normMgrThe cache manager; TStringRooAbsPdf::_normRangeNormalization range; static TStringRooAbsPdf::_normRangeOverride; RooArgSet*RooAbsPdf::_normSet! Normalization set with for above integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title.",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:45925,Modifiability,Inherit,Inheritance,45925,"value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~RooAbsAnaConvPdf(); Destructor. Int_t declareBasis(const char* expression, const RooArgList& params); Declare a basis function for use in this physics model. The string expression; must be a valid RooFormulVar expression representing the basis function, referring; to the convolution variable as '@0', and any additional parameters (supplied in; 'params' as '@1','@2' etc. The return value is a unique identifier code, that will be passed to coefficient(); to identify the basis function for which the coefficient is requested. If the; resolution model used does not support the declared basis function, code -1 is; returned. Bool_t changeModel(const RooResolutionModel& newModel); Change the current resolution model to newModel. RooAbsGenContext* genContext(const RooArgSet& vars, const RooDataSet* prototype = 0, const RooArgSet* auxProto = 0, Bool_t verbose = kFALSE) const; Create a generator context for this p.d.f. If both the p.d.f and the ",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:45938,Modifiability,Inherit,Inherited,45938,"value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~RooAbsAnaConvPdf(); Destructor. Int_t declareBasis(const char* expression, const RooArgList& params); Declare a basis function for use in this physics model. The string expression; must be a valid RooFormulVar expression representing the basis function, referring; to the convolution variable as '@0', and any additional parameters (supplied in; 'params' as '@1','@2' etc. The return value is a unique identifier code, that will be passed to coefficient(); to identify the basis function for which the coefficient is requested. If the; resolution model used does not support the declared basis function, code -1 is; returned. Bool_t changeModel(const RooResolutionModel& newModel); Change the current resolution model to newModel. RooAbsGenContext* genContext(const RooArgSet& vars, const RooDataSet* prototype = 0, const RooArgSet* auxProto = 0, Bool_t verbose = kFALSE) const; Create a generator context for this p.d.f. If both the p.d.f and the ",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:46287,Modifiability,variab,variable,46287,"ibString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~RooAbsAnaConvPdf(); Destructor. Int_t declareBasis(const char* expression, const RooArgList& params); Declare a basis function for use in this physics model. The string expression; must be a valid RooFormulVar expression representing the basis function, referring; to the convolution variable as '@0', and any additional parameters (supplied in; 'params' as '@1','@2' etc. The return value is a unique identifier code, that will be passed to coefficient(); to identify the basis function for which the coefficient is requested. If the; resolution model used does not support the declared basis function, code -1 is; returned. Bool_t changeModel(const RooResolutionModel& newModel); Change the current resolution model to newModel. RooAbsGenContext* genContext(const RooArgSet& vars, const RooDataSet* prototype = 0, const RooArgSet* auxProto = 0, Bool_t verbose = kFALSE) const; Create a generator context for this p.d.f. If both the p.d.f and the resolution model; support internal generation of the convolution observable on an infinite domain,; deploy a specialized convolution generator context, which generates the physics distribution; and the smearing separately, adding them a posteriori. If this is not possible return; a (slower) generic generation contex",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:47592,Modifiability,variab,variable,47592,"he declared basis function, code -1 is; returned. Bool_t changeModel(const RooResolutionModel& newModel); Change the current resolution model to newModel. RooAbsGenContext* genContext(const RooArgSet& vars, const RooDataSet* prototype = 0, const RooArgSet* auxProto = 0, Bool_t verbose = kFALSE) const; Create a generator context for this p.d.f. If both the p.d.f and the resolution model; support internal generation of the convolution observable on an infinite domain,; deploy a specialized convolution generator context, which generates the physics distribution; and the smearing separately, adding them a posteriori. If this is not possible return; a (slower) generic generation context that uses accept/reject sampling. Bool_t isDirectGenSafe(const RooAbsArg& arg) const; Return true if it is safe to generate the convolution observable; from the internal generator (this is the case if the chosen resolution; model is the truth model). const RooRealVar* convVar() const; Return a pointer to the convolution variable instance used in the resolution model. Double_t evaluate() const; Calculate the current unnormalized value of the PDF. PDF = sum_k coef_k * [ basis_k (x) ResModel ]. Int_t getAnalyticalIntegralWN(RooArgSet& allVars, RooArgSet& analVars, const RooArgSet* normSet, const char* rangeName = 0) const; Advertise capability to perform (analytical) integrals; internally. For a given integration request over allVars while; normalized over normSet2 and in range 'rangeName', returns; largest subset that can be performed internally in analVars; Return code is unique integer code identifying integration scenario; to be passed to analyticalIntegralWN() to calculate requeste integral. Class RooAbsAnaConv defers analytical integration request to; resolution model and/or coefficient implementations and; aggregates results into composite configuration with a unique; code assigned by RooAICRegistry. Double_t analyticalIntegralWN(Int_t code, const RooArgSet* normSet, const char* rangeN",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:48432,Modifiability,config,configuration,48432,"generate the convolution observable; from the internal generator (this is the case if the chosen resolution; model is the truth model). const RooRealVar* convVar() const; Return a pointer to the convolution variable instance used in the resolution model. Double_t evaluate() const; Calculate the current unnormalized value of the PDF. PDF = sum_k coef_k * [ basis_k (x) ResModel ]. Int_t getAnalyticalIntegralWN(RooArgSet& allVars, RooArgSet& analVars, const RooArgSet* normSet, const char* rangeName = 0) const; Advertise capability to perform (analytical) integrals; internally. For a given integration request over allVars while; normalized over normSet2 and in range 'rangeName', returns; largest subset that can be performed internally in analVars; Return code is unique integer code identifying integration scenario; to be passed to analyticalIntegralWN() to calculate requeste integral. Class RooAbsAnaConv defers analytical integration request to; resolution model and/or coefficient implementations and; aggregates results into composite configuration with a unique; code assigned by RooAICRegistry. Double_t analyticalIntegralWN(Int_t code, const RooArgSet* normSet, const char* rangeName = 0) const; Return analytical integral defined by given code, which is returned; by getAnalyticalIntegralWN(). For unnormalized integrals the returned value is; _ _; PDF = sum_k Int(dx) coef_k * Int(dy) [ basis_k (x) ResModel ].; _; where x is the set of coefficient dependents to be integrated; and y the set of basis function dependents to be integrated. For normalized integrals this becomes. sum_k Int(dx) coef_k * Int(dy) [ basis_k (x) ResModel ].; PDF = --------------------------------------------------------; sum_k Int(dv) coef_k * Int(dw) [ basis_k (x) ResModel ]. where x is the set of coefficient dependents to be integrated,; y the set of basis function dependents to be integrated,; v is the set of coefficient dependents over which is normalized and; w is the set of basis function depen",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:50991,Modifiability,variab,variables,50991,"AnalyticalIntegral(Int_t coef, Int_t code, const char* rangeName = 0) const; Default implementation of function implementing advertised integrals. Only; the pass-through scenario (no integration) is implemented. Bool_t forceAnalyticalInt(const RooAbsArg& dep) const; This function forces RooRealIntegral to offer all integration dependents; to RooAbsAnaConvPdf::getAnalyticalIntegralWN() for consideration for; internal integration, if RooRealIntegral considers this to be unsafe (e.g. due; to hidden Jacobian terms). RooAbsAnaConvPdf will not attempt to actually integrate all these dependents; but feed them to the resolution models integration interface, which will; make the final determination on how to integrate these dependents. Double_t getCoefNorm(Int_t coefIdx, const RooArgSet* nset, const TNamed* rangeName) const; Returns the normalization integral value of the coefficient with number coefIdx over normalization; set nset in range rangeName. void makeCoefVarList(RooArgList& ) const; Build complete list of coefficient variables. RooArgSet* coefVars(Int_t coefIdx) const; Return set of parameters with are used exclusively by the coefficient functions. void printMultiline(ostream& stream, Int_t contents, Bool_t verbose = kFALSE, TString indent = """") const; Print info about this object to the specified stream. In addition to the info; from RooAbsPdf::printStream() we add:. Verbose : detailed information on convolution integrals. void setCacheAndTrackHints(RooArgSet& ); Label OK'ed components with cache-and-track. Double_t getCoefNorm(Int_t coefIdx, const RooArgSet& nset, const char* rangeName) const; Coefficient normalization access. return getCoefNorm(coefIdx,&nset,rangeName); Returns normalization integral for coefficient coefIdx for observables nset in range rangeNae. Double_t coefficient(Int_t basisIndex) const. RooArgSet* parseIntegrationRequest(const RooArgSet& intSet, Int_t& coefCode, RooArgSet* analVars = 0) const. » Last changed: Sat Sep 5 16:39:52 2015 » Last ",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:3992,Performance,cache,cacheUniqueSuffix,3992," RooArgList& pars = RooArgList(), const RooArgSet& nset = RooArgSet()) const; voidRooAbsArg::attachDataSet(const RooAbsData& set); voidRooAbsArg::attachDataStore(const RooAbsDataStore& set); const set<std::string>&RooAbsArg::attributes() const; virtual RooAbsGenContext*RooAbsPdf::autoGenContext(const RooArgSet& vars, const RooDataSet* prototype = 0, const RooArgSet* auxProto = 0, Bool_t verbose = kFALSE, Bool_t autoBinned = kTRUE, const char* binnedTag = """") const; virtual list<Double_t>*RooAbsReal::binBoundaries(RooAbsRealLValue&, Double_t, Double_t) const; RooAbsFunc*RooAbsReal::bindVars(const RooArgSet& vars, const RooArgSet* nset = 0, Bool_t clipInvalid = kFALSE) const; virtual RooAbsGenContext*RooAbsPdf::binnedGenContext(const RooArgSet& vars, Bool_t verbose = kFALSE) const; voidRooAbsArg::branchNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t recurseNonDerived = kFALSE) const; virtual voidTObject::Browse(TBrowser* b); virtual const char*RooAbsArg::cacheUniqueSuffix() const; Bool_tRooAbsPdf::canBeExtended() const; virtual RooAbsArg::CacheModeRooAbsArg::canNodeBeCached() const; virtual Bool_tchangeModel(const RooResolutionModel& newModel); voidRooAbsArg::changeServer(RooAbsArg& server, Bool_t valueProp, Bool_t shapeProp); Bool_tRooAbsArg::checkDependents(const RooArgSet* nset) const; virtual Bool_tRooAbsArg::checkObservables(const RooArgSet* nset) const; virtual RooFitResult*RooAbsPdf::chi2FitTo(RooDataHist& data, const RooLinkedList& cmdList); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); static voidRooAbsPdf::clearEvalError(); static voidRooAbsReal::clearEvalErrorLog(); voidRooAbsArg::clearShapeDirty() const; voidRooAbsArg::clearValueAndShapeDirty() const; voidRooAbsArg::clearValueDirty() const; TIterator*RooAbsArg::clientIterator() const; virtual TObject*RooAbsArg::clone(const char* newname = 0) const; virtual TObject*RooAbsArg::Clone(const char* newname = 0) cons",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:4078,Performance,Cache,CacheModeRooAbsArg,4078,"bsArg::attachDataSet(const RooAbsData& set); voidRooAbsArg::attachDataStore(const RooAbsDataStore& set); const set<std::string>&RooAbsArg::attributes() const; virtual RooAbsGenContext*RooAbsPdf::autoGenContext(const RooArgSet& vars, const RooDataSet* prototype = 0, const RooArgSet* auxProto = 0, Bool_t verbose = kFALSE, Bool_t autoBinned = kTRUE, const char* binnedTag = """") const; virtual list<Double_t>*RooAbsReal::binBoundaries(RooAbsRealLValue&, Double_t, Double_t) const; RooAbsFunc*RooAbsReal::bindVars(const RooArgSet& vars, const RooArgSet* nset = 0, Bool_t clipInvalid = kFALSE) const; virtual RooAbsGenContext*RooAbsPdf::binnedGenContext(const RooArgSet& vars, Bool_t verbose = kFALSE) const; voidRooAbsArg::branchNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t recurseNonDerived = kFALSE) const; virtual voidTObject::Browse(TBrowser* b); virtual const char*RooAbsArg::cacheUniqueSuffix() const; Bool_tRooAbsPdf::canBeExtended() const; virtual RooAbsArg::CacheModeRooAbsArg::canNodeBeCached() const; virtual Bool_tchangeModel(const RooResolutionModel& newModel); voidRooAbsArg::changeServer(RooAbsArg& server, Bool_t valueProp, Bool_t shapeProp); Bool_tRooAbsArg::checkDependents(const RooArgSet* nset) const; virtual Bool_tRooAbsArg::checkObservables(const RooArgSet* nset) const; virtual RooFitResult*RooAbsPdf::chi2FitTo(RooDataHist& data, const RooLinkedList& cmdList); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); static voidRooAbsPdf::clearEvalError(); static voidRooAbsReal::clearEvalErrorLog(); voidRooAbsArg::clearShapeDirty() const; voidRooAbsArg::clearValueAndShapeDirty() const; voidRooAbsArg::clearValueDirty() const; TIterator*RooAbsArg::clientIterator() const; virtual TObject*RooAbsArg::clone(const char* newname = 0) const; virtual TObject*RooAbsArg::Clone(const char* newname = 0) const; virtual RooAbsArg*RooAbsArg::cloneTree(const char* newname = 0) const; virtual Doubl",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:13439,Performance,cache,cacheList,13439,"ent(Int_t event, Int_t px, Int_t py); virtual Double_tRooAbsPdf::expectedEvents(const RooArgSet* nset) const; virtual Double_tRooAbsPdf::expectedEvents(const RooArgSet& nset) const; RooExpensiveObjectCache&RooAbsArg::expensiveObjectCache() const; virtual Double_tRooAbsPdf::extendedTerm(Double_t observedEvents, const RooArgSet* nset = 0) const; virtual RooAbsPdf::ExtendModeRooAbsPdf::extendMode() const; virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); RooDataHist*RooAbsReal::fillDataHist(RooDataHist* hist, const RooArgSet* nset, Double_t scaleFactor, Bool_t correctForBinVolume = kFALSE, Bool_t showProgress = kFALSE) const; TH1*RooAbsReal::fillHistogram(TH1* hist, const RooArgList& plotVars, Double_t scaleFactor = 1, const RooArgSet* projectedVars = 0, Bool_t scaling = kTRUE, const RooArgSet* condObs = 0, Bool_t setError = kTRUE) const; Bool_tRooAbsArg::findConstantNodes(const RooArgSet& observables, RooArgSet& cacheList); Bool_tRooAbsArg::findConstantNodes(const RooArgSet& observables, RooArgSet& cacheList, RooLinkedList& processedNodes); RooAbsArg*RooAbsArg::findNewServer(const RooAbsCollection& newSet, Bool_t nameChange) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Double_tRooAbsReal::findRoot(RooRealVar& x, Double_t xmin, Double_t xmax, Double_t yval); RooAbsArg*RooAbsArg::findServer(const char* name) const; RooAbsArg*RooAbsArg::findServer(const RooAbsArg& arg) const; RooAbsArg*RooAbsArg::findServer(Int_t index) const; virtual RooFitResult*RooAbsPdf::fitTo(RooAbsData& data, const RooLinkedList& cmdList); virtual RooFitResult*RooAbsPdf::fitTo(RooAbsData& data, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:13527,Performance,cache,cacheList,13527,"oArgSet* nset) const; virtual Double_tRooAbsPdf::expectedEvents(const RooArgSet& nset) const; RooExpensiveObjectCache&RooAbsArg::expensiveObjectCache() const; virtual Double_tRooAbsPdf::extendedTerm(Double_t observedEvents, const RooArgSet* nset = 0) const; virtual RooAbsPdf::ExtendModeRooAbsPdf::extendMode() const; virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); RooDataHist*RooAbsReal::fillDataHist(RooDataHist* hist, const RooArgSet* nset, Double_t scaleFactor, Bool_t correctForBinVolume = kFALSE, Bool_t showProgress = kFALSE) const; TH1*RooAbsReal::fillHistogram(TH1* hist, const RooArgList& plotVars, Double_t scaleFactor = 1, const RooArgSet* projectedVars = 0, Bool_t scaling = kTRUE, const RooArgSet* condObs = 0, Bool_t setError = kTRUE) const; Bool_tRooAbsArg::findConstantNodes(const RooArgSet& observables, RooArgSet& cacheList); Bool_tRooAbsArg::findConstantNodes(const RooArgSet& observables, RooArgSet& cacheList, RooLinkedList& processedNodes); RooAbsArg*RooAbsArg::findNewServer(const RooAbsCollection& newSet, Bool_t nameChange) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Double_tRooAbsReal::findRoot(RooRealVar& x, Double_t xmin, Double_t xmax, Double_t yval); RooAbsArg*RooAbsArg::findServer(const char* name) const; RooAbsArg*RooAbsArg::findServer(const RooAbsArg& arg) const; RooAbsArg*RooAbsArg::findServer(Int_t index) const; virtual RooFitResult*RooAbsPdf::fitTo(RooAbsData& data, const RooLinkedList& cmdList); virtual RooFitResult*RooAbsPdf::fitTo(RooAbsData& data, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:25827,Performance,optimiz,optimizeCacheMode,25827,"order, Bool_t central, Bool_t takeRoot); RooAbsMoment*RooAbsReal::moment(RooRealVar& obs, const RooArgSet& normObs, Int_t order, Bool_t central, Bool_t takeRoot, Bool_t intNormObs); Bool_tRooAbsPdf::mustBeExtended() const; static voidRooPrintable::nameFieldLength(Int_t newLen); const TNamed*RooAbsArg::namePtr() const; const char*RooAbsPdf::normRange() const; virtual Bool_tTObject::Notify(); Int_tRooAbsArg::numCaches() const; static Int_tRooAbsReal::numEvalErrorItems(); static Int_tRooAbsReal::numEvalErrors(); Bool_tRooAbsArg::observableOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::observableOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; virtual Double_tRooAbsReal::offset() const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TNamed&TNamed::operator=(const TNamed& rhs); Bool_tRooAbsReal::operator==(Double_t value) const; virtual Bool_tRooAbsReal::operator==(const RooAbsArg& other); RooAbsArg::OperModeRooAbsArg::operMode() const; virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables); virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables, RooArgSet& optNodes, RooLinkedList& processedNodes); Bool_tRooAbsArg::overlaps(const RooAbsArg& testArg, Bool_t valueOnly = kFALSE) const; const RooArgSet*RooAbsArg::ownedComponents() const; virtual voidTObject::Paint(Option_t* option = """"); virtual RooPlot*RooAbsPdf::paramOn(RooPlot* frame, const RooAbsData* data, const char* label = """", Int_t sigDigits = 2, Option_t* options = ""NELU"", Double_t xmin = 0.",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:25899,Performance,optimiz,optimizeCacheMode,25899,"order, Bool_t central, Bool_t takeRoot); RooAbsMoment*RooAbsReal::moment(RooRealVar& obs, const RooArgSet& normObs, Int_t order, Bool_t central, Bool_t takeRoot, Bool_t intNormObs); Bool_tRooAbsPdf::mustBeExtended() const; static voidRooPrintable::nameFieldLength(Int_t newLen); const TNamed*RooAbsArg::namePtr() const; const char*RooAbsPdf::normRange() const; virtual Bool_tTObject::Notify(); Int_tRooAbsArg::numCaches() const; static Int_tRooAbsReal::numEvalErrorItems(); static Int_tRooAbsReal::numEvalErrors(); Bool_tRooAbsArg::observableOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::observableOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; virtual Double_tRooAbsReal::offset() const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TNamed&TNamed::operator=(const TNamed& rhs); Bool_tRooAbsReal::operator==(Double_t value) const; virtual Bool_tRooAbsReal::operator==(const RooAbsArg& other); RooAbsArg::OperModeRooAbsArg::operMode() const; virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables); virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables, RooArgSet& optNodes, RooLinkedList& processedNodes); Bool_tRooAbsArg::overlaps(const RooAbsArg& testArg, Bool_t valueOnly = kFALSE) const; const RooArgSet*RooAbsArg::ownedComponents() const; virtual voidTObject::Paint(Option_t* option = """"); virtual RooPlot*RooAbsPdf::paramOn(RooPlot* frame, const RooAbsData* data, const char* label = """", Int_t sigDigits = 2, Option_t* options = ""NELU"", Double_t xmin = 0.",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:30271,Performance,cache,cache,30271,"eam(ostream& os, Int_t contents, RooPrintable::StyleOption style, TString indent = """") const; virtual voidRooAbsArg::printTitle(ostream& os) const; virtual voidRooAbsArg::printTree(ostream& os, TString indent = """") const; virtual voidRooAbsPdf::printValue(ostream& os) const; virtual Int_tTObject::Read(const char* name); virtual Bool_tRooAbsReal::readFromStream(istream& is, Bool_t compact, Bool_t verbose = kFALSE); Bool_tRooAbsArg::recursiveCheckDependents(const RooArgSet* nset) const; Bool_tRooAbsArg::recursiveCheckObservables(const RooArgSet* nset) const; Bool_tRooAbsArg::recursiveRedirectServers(const RooAbsCollection& newServerList, Bool_t mustReplaceAll = kFALSE, Bool_t nameChange = kFALSE, Bool_t recurseInNewSet = kTRUE); virtual voidTObject::RecursiveRemove(TObject* obj); Bool_tRooAbsArg::redirectServers(const RooAbsCollection& newServerList, Bool_t mustReplaceAll = kFALSE, Bool_t nameChange = kFALSE, Bool_t isRecursionStep = kFALSE); voidRooAbsArg::registerCache(RooAbsCache& cache); voidRooAbsArg::removeServer(RooAbsArg& server, Bool_t force = kFALSE); voidRooAbsArg::replaceServer(RooAbsArg& oldServer, RooAbsArg& newServer, Bool_t valueProp, Bool_t shapeProp); voidTObject::ResetBit(UInt_t f); virtual voidRooAbsPdf::resetErrorCounters(Int_t resetValue = 10); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual Bool_tRooAbsPdf::selfNormalized() const; TIterator*RooAbsArg::serverIterator() const; RooFIterRooAbsArg::serverMIterator() const; virtual voidRooAbsArg::serverNameChangeHook(const RooAbsArg*, const RooAbsArg*); voidRooAbsArg::setAttribute(const Text_t* name, Bool_t value = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidsetCacheAndTrackHints(RooArgSet&); static voidRooAbsReal::setCacheCheck(Bool_t flag); virtual Bool_tRooAbsReal::setData(RooAbsData&, Bool_t = kTRUE); static voidRooAbsArg::setD",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:31560,Performance,cache,cache,31560,"ual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual Bool_tRooAbsPdf::selfNormalized() const; TIterator*RooAbsArg::serverIterator() const; RooFIterRooAbsArg::serverMIterator() const; virtual voidRooAbsArg::serverNameChangeHook(const RooAbsArg*, const RooAbsArg*); voidRooAbsArg::setAttribute(const Text_t* name, Bool_t value = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidsetCacheAndTrackHints(RooArgSet&); static voidRooAbsReal::setCacheCheck(Bool_t flag); virtual Bool_tRooAbsReal::setData(RooAbsData&, Bool_t = kTRUE); static voidRooAbsArg::setDirtyInhibit(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidRooAbsReal::setEvalErrorLoggingMode(RooAbsReal::ErrorLoggingMode m); virtual voidRooAbsArg::setExpensiveObjectCache(RooExpensiveObjectCache& cache); voidRooAbsPdf::setGeneratorConfig(); voidRooAbsPdf::setGeneratorConfig(const RooNumGenConfig& config); static voidRooAbsReal::setHideOffset(Bool_t flag); voidRooAbsReal::setIntegratorConfig(); voidRooAbsReal::setIntegratorConfig(const RooNumIntConfig& config); voidRooAbsArg::setLocalNoDirtyInhibit(Bool_t flag) const; virtual voidRooAbsArg::SetName(const char* name); virtual voidRooAbsArg::SetNameTitle(const char* name, const char* title); voidRooAbsPdf::setNormRange(const char* rangeName); voidRooAbsPdf::setNormRangeOverride(const char* rangeName); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsArg::setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); voidRooAbsReal::setParameterizeIntegral(const RooArgSet& paramVars); voidRooAbsReal::setPlotLabel(const char* label); voidRooAbsArg::setProhibitServerRedirect(Bool_t flag); voidRooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::Se",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:34193,Performance,cache,cache,34193,"nit); voidRooAbsArg::setValueDirty() const; TIterator*RooAbsArg::shapeClientIterator() const; RooFIterRooAbsArg::shapeClientMIterator() const; virtual voidShowMembers(TMemberInspector&); RooAbsMoment*RooAbsReal::sigma(RooRealVar& obs); RooAbsMoment*RooAbsReal::sigma(RooRealVar& obs, const RooArgSet& nset); virtual Int_tTNamed::Sizeof() const; RooNumGenConfig*RooAbsPdf::specialGeneratorConfig() const; RooNumGenConfig*RooAbsPdf::specialGeneratorConfig(Bool_t createOnTheFly); RooNumIntConfig*RooAbsReal::specialIntegratorConfig() const; RooNumIntConfig*RooAbsReal::specialIntegratorConfig(Bool_t createOnTheFly); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); const map<std::string,std::string>&RooAbsArg::stringAttributes() const; virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual Bool_tRooAbsPdf::traceEvalHook(Double_t value) const; Bool_tRooAbsPdf::traceEvalPdf(Double_t value) const; const set<std::string>&RooAbsArg::transientAttributes() const; voidRooAbsArg::treeNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t doBranch = kTRUE, Bool_t doLeaf = kTRUE, Bool_t valueOnly = kFALSE, Bool_t recurseNonDerived = kFALSE) const; voidRooAbsArg::unRegisterCache(RooAbsCache& cache); virtual voidTObject::UseCurrentStyle(); TIterator*RooAbsArg::valueClientIterator() const; RooFIterRooAbsArg::valueClientMIterator() const; static voidRooAbsArg::verboseDirty(Bool_t flag); static intRooAbsPdf::verboseEval(); static voidRooAbsPdf::verboseEval(Int_t stat); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; voidRooAbsArg::wireAllCaches(); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidRooAbsReal::writeToStream(ostream& os, Bool_t compact) const.",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:37720,Performance,optimiz,optimizeDirtyHook,37720,"= kFALSE) const; Double_tgetCoefNorm(Int_t coefIdx, const RooArgSet* nset, const TNamed* rangeName) const; virtual voidRooAbsArg::getObservablesHook(const RooArgSet*, RooArgSet*) const; virtual voidRooAbsArg::getParametersHook(const RooArgSet*, RooArgSet*, Bool_t) const; RooAbsProxy*RooAbsArg::getProxy(Int_t index) const; static voidRooAbsReal::globalSelectComp(Bool_t flag); voidRooAbsArg::graphVizAddConnections(set<std::pair<RooAbsArg*,RooAbsArg*> >&); Bool_tRooAbsArg::inhibitDirty() const; TStringRooAbsReal::integralNameSuffix(const RooArgSet& iset, const RooArgSet* nset = 0, const char* rangeName = 0, Bool_t omitEmpty = kFALSE) const; Bool_tRooAbsReal::isSelectedComp() const; virtual Bool_tRooAbsReal::isValid() const; virtual Bool_tRooAbsReal::isValidReal(Double_t value, Bool_t printError = kFALSE) const; voidmakeCoefVarList(RooArgList&) const; voidRooAbsReal::makeProjectionSet(const RooAbsArg* plotVar, const RooArgSet* allVars, RooArgSet& projectedVars, Bool_t silent) const; voidTObject::MakeZombie(); Bool_tRooAbsReal::matchArgs(const RooArgSet& allDeps, RooArgSet& numDeps, const RooArgProxy& a) const; Bool_tRooAbsReal::matchArgs(const RooArgSet& allDeps, RooArgSet& numDeps, const RooArgSet& set) const; Bool_tRooAbsReal::matchArgs(const RooArgSet& allDeps, RooArgSet& numDeps, const RooArgProxy& a, const RooArgProxy& b) const; Bool_tRooAbsReal::matchArgs(const RooArgSet& allDeps, RooArgSet& numDeps, const RooArgProxy& a, const RooArgProxy& b, const RooArgProxy& c) const; Bool_tRooAbsReal::matchArgs(const RooArgSet& allDeps, RooArgSet& numDeps, const RooArgProxy& a, const RooArgProxy& b, const RooArgProxy& c, const RooArgProxy& d) const; Int_tRooAbsArg::numProxies() const; virtual voidRooAbsArg::operModeHook(); virtual voidRooAbsArg::optimizeDirtyHook(const RooArgSet*); virtual RooPlot*RooAbsPdf::paramOn(RooPlot* frame, const RooArgSet& params, Bool_t showConstants = kFALSE, const char* label = """", Int_t sigDigits = 2, Option_t* options = ""NELU"", Double_t xmin = 0.",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:40302,Performance,Cache,CacheMode,40302,"rce) const; virtual voidRooAbsReal::setTreeBranchStatus(TTree& t, Bool_t active); voidRooAbsArg::setValueDirty(const RooAbsArg* source) const; virtual voidRooAbsReal::syncCache(const RooArgSet* set = 0); virtual Bool_tRooAbsPdf::syncNormalization(const RooArgSet* dset, Bool_t adjustProxies = kTRUE) const; Double_tRooAbsReal::traceEval(const RooArgSet* set) const; voidRooAbsArg::unRegisterProxy(RooArgProxy& proxy); voidRooAbsArg::unRegisterProxy(RooSetProxy& proxy); voidRooAbsArg::unRegisterProxy(RooListProxy& proxy). Data Members; public:. enum RooAbsPdf::ExtendMode { CanNotBeExtended; CanBeExtended; MustBeExtended; };; enum RooAbsReal::ScaleType { Raw; Relative; NumEvent; RelativeExpected; };; enum RooAbsReal::ErrorLoggingMode { PrintErrors; CollectErrors; CountErrors; Ignore; };; enum RooAbsArg::ConstOpCode { Activate; DeActivate; ConfigChange; ValueChange; };; enum RooAbsArg::CacheMode { Always; NotAdvised; Never; };; enum RooAbsArg::OperMode { Auto; AClean; ADirty; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };; enum RooPrintable::ContentsOption { kName; kClassName; kValue; kArgs; kExtras; kAddress; kTitle; kCollectionHeader; };; enum RooPrintable::StyleOption { kInline; kSingleLine; kStandard; kVerbose; kTreeStructure; };. public:. static map<RooAbsArg*,TRefArray*>RooAbsArg::_ioEvoListtemporary holding list for proxies needed in schema evolution ; static stack<RooAbsArg*>RooAbsArg::_ioReadStackreading stack ; static const UInt_tRooAbsArg::fnv1a32start; static const ULong64_tRooAbsArg::fnv1a64start. protected:. RooArgList_basisList! List of created basis functions; set<std::string>RooAbsArg::_boolAttribBoolean attributes; set<std::string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); Bool_tRooAbsReal::_boolValue! Transien",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:41413,Performance,cache,cache,41413,,MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:41497,Performance,cache,cache,41497,,MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:41696,Performance,cache,caches,41696,,MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:42612,Performance,cache,cache,42612,ean which outcome of evaluate(); deque<RooAbsCache*>RooAbsArg::_cacheListlist of caches; RooRefCountListRooAbsArg::_clientListlist of client objects; RooRefCountListRooAbsArg::_clientListShapesubset of clients that requested shape dirty flag propagation; RooRefCountListRooAbsArg::_clientListValuesubset of clients that requested value dirty flag propagation; TIterator*RooAbsArg::_clientShapeIter! Iterator over _clientListShape ; TIterator*RooAbsArg::_clientValueIter! Iterator over _clientListValue ; RooAICRegistry_codeReg! Registry of analytical integration codes; RooObjCacheManager_coefNormMgrCoefficient normalization manager; RooArgSet*_convNormSet! Subset of last normalization that applies to convolutions; RooListProxy_convSetSet of (resModel (x) basisFunc) convolution objects; TIterator*_convSetIter! Iterator over _convNormSet; RooRealProxy_convVarConvolution variable; Bool_tRooAbsArg::_deleteWatch! Delete watch flag ; RooExpensiveObjectCache*RooAbsArg::_eocachePointer to global cache manager for any expensive components created by this object; Int_tRooAbsPdf::_errorCountNumber of errors remaining to print; static Bool_tRooAbsPdf::_evalError; Bool_tRooAbsArg::_fastAllow fast access mode in getVal() and proxies; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsReal::_hideOffsetOffset hiding flag; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; Bool_tRooAbsArg::_isConstant! Cached isConstant status ; Bool_t_isCopy; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; RooRealProxy_modelOrig,MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:42891,Performance,cache,cache,42891,efCountListRooAbsArg::_clientListlist of client objects; RooRefCountListRooAbsArg::_clientListShapesubset of clients that requested shape dirty flag propagation; RooRefCountListRooAbsArg::_clientListValuesubset of clients that requested value dirty flag propagation; TIterator*RooAbsArg::_clientShapeIter! Iterator over _clientListShape ; TIterator*RooAbsArg::_clientValueIter! Iterator over _clientListValue ; RooAICRegistry_codeReg! Registry of analytical integration codes; RooObjCacheManager_coefNormMgrCoefficient normalization manager; RooArgSet*_convNormSet! Subset of last normalization that applies to convolutions; RooListProxy_convSetSet of (resModel (x) basisFunc) convolution objects; TIterator*_convSetIter! Iterator over _convNormSet; RooRealProxy_convVarConvolution variable; Bool_tRooAbsArg::_deleteWatch! Delete watch flag ; RooExpensiveObjectCache*RooAbsArg::_eocachePointer to global cache manager for any expensive components created by this object; Int_tRooAbsPdf::_errorCountNumber of errors remaining to print; static Bool_tRooAbsPdf::_evalError; Bool_tRooAbsArg::_fastAllow fast access mode in getVal() and proxies; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsReal::_hideOffsetOffset hiding flag; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; Bool_tRooAbsArg::_isConstant! Cached isConstant status ; Bool_t_isCopy; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; RooRealProxy_modelOriginal model; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist.,MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:43305,Performance,cache,cache,43305,efCountListRooAbsArg::_clientListlist of client objects; RooRefCountListRooAbsArg::_clientListShapesubset of clients that requested shape dirty flag propagation; RooRefCountListRooAbsArg::_clientListValuesubset of clients that requested value dirty flag propagation; TIterator*RooAbsArg::_clientShapeIter! Iterator over _clientListShape ; TIterator*RooAbsArg::_clientValueIter! Iterator over _clientListValue ; RooAICRegistry_codeReg! Registry of analytical integration codes; RooObjCacheManager_coefNormMgrCoefficient normalization manager; RooArgSet*_convNormSet! Subset of last normalization that applies to convolutions; RooListProxy_convSetSet of (resModel (x) basisFunc) convolution objects; TIterator*_convSetIter! Iterator over _convNormSet; RooRealProxy_convVarConvolution variable; Bool_tRooAbsArg::_deleteWatch! Delete watch flag ; RooExpensiveObjectCache*RooAbsArg::_eocachePointer to global cache manager for any expensive components created by this object; Int_tRooAbsPdf::_errorCountNumber of errors remaining to print; static Bool_tRooAbsPdf::_evalError; Bool_tRooAbsArg::_fastAllow fast access mode in getVal() and proxies; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsReal::_hideOffsetOffset hiding flag; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; Bool_tRooAbsArg::_isConstant! Cached isConstant status ; Bool_t_isCopy; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; RooRealProxy_modelOriginal model; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist.,MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:43381,Performance,Cache,Cached,43381,efCountListRooAbsArg::_clientListlist of client objects; RooRefCountListRooAbsArg::_clientListShapesubset of clients that requested shape dirty flag propagation; RooRefCountListRooAbsArg::_clientListValuesubset of clients that requested value dirty flag propagation; TIterator*RooAbsArg::_clientShapeIter! Iterator over _clientListShape ; TIterator*RooAbsArg::_clientValueIter! Iterator over _clientListValue ; RooAICRegistry_codeReg! Registry of analytical integration codes; RooObjCacheManager_coefNormMgrCoefficient normalization manager; RooArgSet*_convNormSet! Subset of last normalization that applies to convolutions; RooListProxy_convSetSet of (resModel (x) basisFunc) convolution objects; TIterator*_convSetIter! Iterator over _convNormSet; RooRealProxy_convVarConvolution variable; Bool_tRooAbsArg::_deleteWatch! Delete watch flag ; RooExpensiveObjectCache*RooAbsArg::_eocachePointer to global cache manager for any expensive components created by this object; Int_tRooAbsPdf::_errorCountNumber of errors remaining to print; static Bool_tRooAbsPdf::_evalError; Bool_tRooAbsArg::_fastAllow fast access mode in getVal() and proxies; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsReal::_hideOffsetOffset hiding flag; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; Bool_tRooAbsArg::_isConstant! Cached isConstant status ; Bool_t_isCopy; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; RooRealProxy_modelOriginal model; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist.,MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:43965,Performance,cache,cache,43965,,MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:44636,Performance,cache,cache,44636,,MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:45435,Performance,cache,cache,45435," by _normMgr); RooObjCacheManagerRooAbsPdf::_normMgrThe cache manager; TStringRooAbsPdf::_normRangeNormalization range; static TStringRooAbsPdf::_normRangeOverride; RooArgSet*RooAbsPdf::_normSet! Normalization set with for above integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title.",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:47922,Performance,perform,perform,47922,"= kFALSE) const; Create a generator context for this p.d.f. If both the p.d.f and the resolution model; support internal generation of the convolution observable on an infinite domain,; deploy a specialized convolution generator context, which generates the physics distribution; and the smearing separately, adding them a posteriori. If this is not possible return; a (slower) generic generation context that uses accept/reject sampling. Bool_t isDirectGenSafe(const RooAbsArg& arg) const; Return true if it is safe to generate the convolution observable; from the internal generator (this is the case if the chosen resolution; model is the truth model). const RooRealVar* convVar() const; Return a pointer to the convolution variable instance used in the resolution model. Double_t evaluate() const; Calculate the current unnormalized value of the PDF. PDF = sum_k coef_k * [ basis_k (x) ResModel ]. Int_t getAnalyticalIntegralWN(RooArgSet& allVars, RooArgSet& analVars, const RooArgSet* normSet, const char* rangeName = 0) const; Advertise capability to perform (analytical) integrals; internally. For a given integration request over allVars while; normalized over normSet2 and in range 'rangeName', returns; largest subset that can be performed internally in analVars; Return code is unique integer code identifying integration scenario; to be passed to analyticalIntegralWN() to calculate requeste integral. Class RooAbsAnaConv defers analytical integration request to; resolution model and/or coefficient implementations and; aggregates results into composite configuration with a unique; code assigned by RooAICRegistry. Double_t analyticalIntegralWN(Int_t code, const RooArgSet* normSet, const char* rangeName = 0) const; Return analytical integral defined by given code, which is returned; by getAnalyticalIntegralWN(). For unnormalized integrals the returned value is; _ _; PDF = sum_k Int(dx) coef_k * Int(dy) [ basis_k (x) ResModel ].; _; where x is the set of coefficient dependents to b",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:48105,Performance,perform,performed,48105,"e physics distribution; and the smearing separately, adding them a posteriori. If this is not possible return; a (slower) generic generation context that uses accept/reject sampling. Bool_t isDirectGenSafe(const RooAbsArg& arg) const; Return true if it is safe to generate the convolution observable; from the internal generator (this is the case if the chosen resolution; model is the truth model). const RooRealVar* convVar() const; Return a pointer to the convolution variable instance used in the resolution model. Double_t evaluate() const; Calculate the current unnormalized value of the PDF. PDF = sum_k coef_k * [ basis_k (x) ResModel ]. Int_t getAnalyticalIntegralWN(RooArgSet& allVars, RooArgSet& analVars, const RooArgSet* normSet, const char* rangeName = 0) const; Advertise capability to perform (analytical) integrals; internally. For a given integration request over allVars while; normalized over normSet2 and in range 'rangeName', returns; largest subset that can be performed internally in analVars; Return code is unique integer code identifying integration scenario; to be passed to analyticalIntegralWN() to calculate requeste integral. Class RooAbsAnaConv defers analytical integration request to; resolution model and/or coefficient implementations and; aggregates results into composite configuration with a unique; code assigned by RooAICRegistry. Double_t analyticalIntegralWN(Int_t code, const RooArgSet* normSet, const char* rangeName = 0) const; Return analytical integral defined by given code, which is returned; by getAnalyticalIntegralWN(). For unnormalized integrals the returned value is; _ _; PDF = sum_k Int(dx) coef_k * Int(dy) [ basis_k (x) ResModel ].; _; where x is the set of coefficient dependents to be integrated; and y the set of basis function dependents to be integrated. For normalized integrals this becomes. sum_k Int(dx) coef_k * Int(dy) [ basis_k (x) ResModel ].; PDF = --------------------------------------------------------; sum_k Int(dv) coef_k",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:51475,Performance,cache,cache-and-track,51475,"ntegration) is implemented. Bool_t forceAnalyticalInt(const RooAbsArg& dep) const; This function forces RooRealIntegral to offer all integration dependents; to RooAbsAnaConvPdf::getAnalyticalIntegralWN() for consideration for; internal integration, if RooRealIntegral considers this to be unsafe (e.g. due; to hidden Jacobian terms). RooAbsAnaConvPdf will not attempt to actually integrate all these dependents; but feed them to the resolution models integration interface, which will; make the final determination on how to integrate these dependents. Double_t getCoefNorm(Int_t coefIdx, const RooArgSet* nset, const TNamed* rangeName) const; Returns the normalization integral value of the coefficient with number coefIdx over normalization; set nset in range rangeName. void makeCoefVarList(RooArgList& ) const; Build complete list of coefficient variables. RooArgSet* coefVars(Int_t coefIdx) const; Return set of parameters with are used exclusively by the coefficient functions. void printMultiline(ostream& stream, Int_t contents, Bool_t verbose = kFALSE, TString indent = """") const; Print info about this object to the specified stream. In addition to the info; from RooAbsPdf::printStream() we add:. Verbose : detailed information on convolution integrals. void setCacheAndTrackHints(RooArgSet& ); Label OK'ed components with cache-and-track. Double_t getCoefNorm(Int_t coefIdx, const RooArgSet& nset, const char* rangeName) const; Coefficient normalization access. return getCoefNorm(coefIdx,&nset,rangeName); Returns normalization integral for coefficient coefIdx for observables nset in range rangeNae. Double_t coefficient(Int_t basisIndex) const. RooArgSet* parseIntegrationRequest(const RooArgSet& intSet, Int_t& coefCode, RooArgSet* analVars = 0) const. » Last changed: Sat Sep 5 16:39:52 2015 » Last generated: 2015-09-05 16:39; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:47377,Safety,safe,safe,47377,"fier code, that will be passed to coefficient(); to identify the basis function for which the coefficient is requested. If the; resolution model used does not support the declared basis function, code -1 is; returned. Bool_t changeModel(const RooResolutionModel& newModel); Change the current resolution model to newModel. RooAbsGenContext* genContext(const RooArgSet& vars, const RooDataSet* prototype = 0, const RooArgSet* auxProto = 0, Bool_t verbose = kFALSE) const; Create a generator context for this p.d.f. If both the p.d.f and the resolution model; support internal generation of the convolution observable on an infinite domain,; deploy a specialized convolution generator context, which generates the physics distribution; and the smearing separately, adding them a posteriori. If this is not possible return; a (slower) generic generation context that uses accept/reject sampling. Bool_t isDirectGenSafe(const RooAbsArg& arg) const; Return true if it is safe to generate the convolution observable; from the internal generator (this is the case if the chosen resolution; model is the truth model). const RooRealVar* convVar() const; Return a pointer to the convolution variable instance used in the resolution model. Double_t evaluate() const; Calculate the current unnormalized value of the PDF. PDF = sum_k coef_k * [ basis_k (x) ResModel ]. Int_t getAnalyticalIntegralWN(RooArgSet& allVars, RooArgSet& analVars, const RooArgSet* normSet, const char* rangeName = 0) const; Advertise capability to perform (analytical) integrals; internally. For a given integration request over allVars while; normalized over normSet2 and in range 'rangeName', returns; largest subset that can be performed internally in analVars; Return code is unique integer code identifying integration scenario; to be passed to analyticalIntegralWN() to calculate requeste integral. Class RooAbsAnaConv defers analytical integration request to; resolution model and/or coefficient implementations and; aggregates res",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:50430,Safety,unsafe,unsafe,50430,"ient dependents over which is normalized and; w is the set of basis function dependents over which is normalized. Set x must be contained in v and set y must be contained in w. Int_t getCoefAnalyticalIntegral(Int_t coef, RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const; Default implementation of function advertising integration capabilities. The interface is; similar to that of getAnalyticalIntegral except that an integer code is added that; designates the coefficient number for which the integration capabilities are requested. This default implementation advertises that no internal integrals are supported. Double_t coefAnalyticalIntegral(Int_t coef, Int_t code, const char* rangeName = 0) const; Default implementation of function implementing advertised integrals. Only; the pass-through scenario (no integration) is implemented. Bool_t forceAnalyticalInt(const RooAbsArg& dep) const; This function forces RooRealIntegral to offer all integration dependents; to RooAbsAnaConvPdf::getAnalyticalIntegralWN() for consideration for; internal integration, if RooRealIntegral considers this to be unsafe (e.g. due; to hidden Jacobian terms). RooAbsAnaConvPdf will not attempt to actually integrate all these dependents; but feed them to the resolution models integration interface, which will; make the final determination on how to integrate these dependents. Double_t getCoefNorm(Int_t coefIdx, const RooArgSet* nset, const TNamed* rangeName) const; Returns the normalization integral value of the coefficient with number coefIdx over normalization; set nset in range rangeName. void makeCoefVarList(RooArgList& ) const; Build complete list of coefficient variables. RooArgSet* coefVars(Int_t coefIdx) const; Return set of parameters with are used exclusively by the coefficient functions. void printMultiline(ostream& stream, Int_t contents, Bool_t verbose = kFALSE, TString indent = """") const; Print info about this object to the specified stream. In addition to the ",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:14859,Security,hash,hash,14859,"Double_t yval); RooAbsArg*RooAbsArg::findServer(const char* name) const; RooAbsArg*RooAbsArg::findServer(const RooAbsArg& arg) const; RooAbsArg*RooAbsArg::findServer(Int_t index) const; virtual RooFitResult*RooAbsPdf::fitTo(RooAbsData& data, const RooLinkedList& cmdList); virtual RooFitResult*RooAbsPdf::fitTo(RooAbsData& data, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); virtual voidRooAbsReal::fixAddCoefNormalization(const RooArgSet& addNormSet = RooArgSet(), Bool_t force = kTRUE); virtual voidRooAbsReal::fixAddCoefRange(const char* rangeName = 0, Bool_t force = kTRUE); static UInt_tRooAbsArg::fnv1a32(const char* data); static UInt_tRooAbsArg::fnv1a32(const char* data, ULong_t sz, UInt_t hash = fnv1a32start); static ULong64_tRooAbsArg::fnv1a64(const char* data); static ULong64_tRooAbsArg::fnv1a64(const char* data, ULong_t sz, ULong64_t hash = fnv1a64start); virtual Bool_tforceAnalyticalInt(const RooAbsArg& dep) const; virtual voidRooAbsReal::forceNumInt(Bool_t flag = kTRUE); RooFunctor*RooAbsReal::functor(const RooArgList& obs, const RooArgList& pars = RooArgList(), const RooArgSet& nset = RooArgSet()) const; virtual RooAbsGenContext*genContext(const RooArgSet& vars, const RooDataSet* prototype = 0, const RooArgSet* auxProto = 0, Bool_t verbose = kFALSE) const; RooDataSet*RooAbsPdf::generate(RooAbsPdf::GenSpec&) const; RooDataSet*RooAbsPdf::generate(const RooArgSet& whatVars, const RooDataSet& prototype, Int_t nEvents = 0, Bool_t verbose = kFALSE, Bool_t randProtoOrder = kFALSE, Bool_t resampleProto = kFALSE) const; RooDataSet*RooAbsPdf::generate(const RooArgSet& whatVars, Int_t nEvents, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& ar",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:15010,Security,hash,hash,15010,"rg::findServer(Int_t index) const; virtual RooFitResult*RooAbsPdf::fitTo(RooAbsData& data, const RooLinkedList& cmdList); virtual RooFitResult*RooAbsPdf::fitTo(RooAbsData& data, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); virtual voidRooAbsReal::fixAddCoefNormalization(const RooArgSet& addNormSet = RooArgSet(), Bool_t force = kTRUE); virtual voidRooAbsReal::fixAddCoefRange(const char* rangeName = 0, Bool_t force = kTRUE); static UInt_tRooAbsArg::fnv1a32(const char* data); static UInt_tRooAbsArg::fnv1a32(const char* data, ULong_t sz, UInt_t hash = fnv1a32start); static ULong64_tRooAbsArg::fnv1a64(const char* data); static ULong64_tRooAbsArg::fnv1a64(const char* data, ULong_t sz, ULong64_t hash = fnv1a64start); virtual Bool_tforceAnalyticalInt(const RooAbsArg& dep) const; virtual voidRooAbsReal::forceNumInt(Bool_t flag = kTRUE); RooFunctor*RooAbsReal::functor(const RooArgList& obs, const RooArgList& pars = RooArgList(), const RooArgSet& nset = RooArgSet()) const; virtual RooAbsGenContext*genContext(const RooArgSet& vars, const RooDataSet* prototype = 0, const RooArgSet* auxProto = 0, Bool_t verbose = kFALSE) const; RooDataSet*RooAbsPdf::generate(RooAbsPdf::GenSpec&) const; RooDataSet*RooAbsPdf::generate(const RooArgSet& whatVars, const RooDataSet& prototype, Int_t nEvents = 0, Bool_t verbose = kFALSE, Bool_t randProtoOrder = kFALSE, Bool_t resampleProto = kFALSE) const; RooDataSet*RooAbsPdf::generate(const RooArgSet& whatVars, Int_t nEvents, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none()); RooDataSet*RooAbsPdf::generate(const Roo",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:21550,Security,Hash,Hash,21550,"oAbsReal::getPropagatedError(const RooFitResult& fr); const Text_t*RooAbsArg::getStringAttribute(const Text_t* key) const; virtual const char*TNamed::GetTitle() const; TStringRooAbsReal::getTitle(Bool_t appendUnit = kFALSE) const; Bool_tRooAbsArg::getTransientAttribute(const Text_t* name) const; virtual UInt_tTObject::GetUniqueID() const; const Text_t*RooAbsReal::getUnit() const; Double_tRooAbsReal::getVal(const RooArgSet* set = 0) const; Double_tRooAbsReal::getVal(const RooArgSet& set) const; virtual Double_tRooAbsPdf::getValV(const RooArgSet* set = 0) const; RooArgSet*RooAbsArg::getVariables(Bool_t stripDisconnected = kTRUE) const; voidRooAbsArg::graphVizTree(const char* fileName, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); voidRooAbsArg::graphVizTree(ostream& os, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tRooAbsArg::hasClients() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tRooAbsArg::hasRange(const char*) const; static Bool_tRooAbsReal::hideOffset(); RooGenFunction*RooAbsReal::iGenFunction(RooRealVar& x, const RooArgSet& nset = RooArgSet()); RooMultiGenFunction*RooAbsReal::iGenFunction(const RooArgSet& observables, const RooArgSet& nset = RooArgSet()); virtual Bool_tRooAbsArg::importWorkspaceHook(RooWorkspace&); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidRooAbsPdf::initGenerator(Int_t code); virtual Bool_tRooAbsArg::inRange(const char*) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual voidRooAbsArg::ioStreamerPass2(); static voidRooAbsArg::ioStreamerPass2Finalize(); virtual TClass*IsA() const; virtual Bool_tRooAbsReal::isBinnedDistribution(const RooArgSet&) const; Bool_tRooAbsArg::isCloneOf(const RooAbsArg& other) const; ",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:41592,Security,validat,validate,41592,,MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:42812,Security,access,access,42812,efCountListRooAbsArg::_clientListlist of client objects; RooRefCountListRooAbsArg::_clientListShapesubset of clients that requested shape dirty flag propagation; RooRefCountListRooAbsArg::_clientListValuesubset of clients that requested value dirty flag propagation; TIterator*RooAbsArg::_clientShapeIter! Iterator over _clientListShape ; TIterator*RooAbsArg::_clientValueIter! Iterator over _clientListValue ; RooAICRegistry_codeReg! Registry of analytical integration codes; RooObjCacheManager_coefNormMgrCoefficient normalization manager; RooArgSet*_convNormSet! Subset of last normalization that applies to convolutions; RooListProxy_convSetSet of (resModel (x) basisFunc) convolution objects; TIterator*_convSetIter! Iterator over _convNormSet; RooRealProxy_convVarConvolution variable; Bool_tRooAbsArg::_deleteWatch! Delete watch flag ; RooExpensiveObjectCache*RooAbsArg::_eocachePointer to global cache manager for any expensive components created by this object; Int_tRooAbsPdf::_errorCountNumber of errors remaining to print; static Bool_tRooAbsPdf::_evalError; Bool_tRooAbsArg::_fastAllow fast access mode in getVal() and proxies; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsReal::_hideOffsetOffset hiding flag; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; Bool_tRooAbsArg::_isConstant! Cached isConstant status ; Bool_t_isCopy; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; RooRealProxy_modelOriginal model; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist.,MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:51607,Security,access,access,51607,"ntegration) is implemented. Bool_t forceAnalyticalInt(const RooAbsArg& dep) const; This function forces RooRealIntegral to offer all integration dependents; to RooAbsAnaConvPdf::getAnalyticalIntegralWN() for consideration for; internal integration, if RooRealIntegral considers this to be unsafe (e.g. due; to hidden Jacobian terms). RooAbsAnaConvPdf will not attempt to actually integrate all these dependents; but feed them to the resolution models integration interface, which will; make the final determination on how to integrate these dependents. Double_t getCoefNorm(Int_t coefIdx, const RooArgSet* nset, const TNamed* rangeName) const; Returns the normalization integral value of the coefficient with number coefIdx over normalization; set nset in range rangeName. void makeCoefVarList(RooArgList& ) const; Build complete list of coefficient variables. RooArgSet* coefVars(Int_t coefIdx) const; Return set of parameters with are used exclusively by the coefficient functions. void printMultiline(ostream& stream, Int_t contents, Bool_t verbose = kFALSE, TString indent = """") const; Print info about this object to the specified stream. In addition to the info; from RooAbsPdf::printStream() we add:. Verbose : detailed information on convolution integrals. void setCacheAndTrackHints(RooArgSet& ); Label OK'ed components with cache-and-track. Double_t getCoefNorm(Int_t coefIdx, const RooArgSet& nset, const char* rangeName) const; Coefficient normalization access. return getCoefNorm(coefIdx,&nset,rangeName); Returns normalization integral for coefficient coefIdx for observables nset in range rangeNae. Double_t coefficient(Int_t basisIndex) const. RooArgSet* parseIntegrationRequest(const RooArgSet& intSet, Int_t& coefCode, RooArgSet* analVars = 0) const. » Last changed: Sat Sep 5 16:39:52 2015 » Last generated: 2015-09-05 16:39; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:10911,Testability,test,testArg,10911," RooArgSet& iset); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooArgSet& nset = RooArgSet()); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); RooAbsReal*RooAbsPdf::createScanCdf(const RooArgSet& iset, const RooArgSet& nset, Int_t numScanBins, Int_t intOrder); RooAbsReal*RooAbsReal::createScanRI(const RooArgSet& iset, const RooArgSet& nset, Int_t numScanBins, Int_t intOrder); Int_tdeclareBasis(const char* expression, const RooArgList& params); virtual Double_tRooAbsReal::defaultErrorLevel() const; static RooNumGenConfig*RooAbsPdf::defaultGeneratorConfig(); static RooNumIntConfig*RooAbsReal::defaultIntegratorConfig(); virtual Int_tRooAbsArg::defaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooPrintable::defaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Bool_tRooAbsArg::dependentOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependentOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependsOn(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOn(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0) const; RooDerivative*RooAbsReal::derivative(RooRealVar& obs, Int_t order = 1, Double_t eps = 0.",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:11005,Testability,test,testArg,11005," RooArgSet& iset); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooArgSet& nset = RooArgSet()); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); RooAbsReal*RooAbsPdf::createScanCdf(const RooArgSet& iset, const RooArgSet& nset, Int_t numScanBins, Int_t intOrder); RooAbsReal*RooAbsReal::createScanRI(const RooArgSet& iset, const RooArgSet& nset, Int_t numScanBins, Int_t intOrder); Int_tdeclareBasis(const char* expression, const RooArgList& params); virtual Double_tRooAbsReal::defaultErrorLevel() const; static RooNumGenConfig*RooAbsPdf::defaultGeneratorConfig(); static RooNumIntConfig*RooAbsReal::defaultIntegratorConfig(); virtual Int_tRooAbsArg::defaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooPrintable::defaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Bool_tRooAbsArg::dependentOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependentOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependsOn(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOn(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0) const; RooDerivative*RooAbsReal::derivative(RooRealVar& obs, Int_t order = 1, Double_t eps = 0.",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:23736,Testability,log,logEvalError,23736,") const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tRooAbsArg::isFundamental() const; virtual Bool_tRooAbsReal::isIdentical(const RooAbsArg& other, Bool_t assumeSameType = kFALSE); virtual Bool_tRooAbsArg::isLValue() const; virtual Bool_tRooAbsReal::isOffsetting() const; Bool_tTObject::IsOnHeap() const; Bool_tRooAbsArg::isShapeDirty() const; Bool_tRooAbsArg::isShapeServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isShapeServer(const char* name) const; virtual Bool_tRooAbsArg::IsSortable() const; Bool_tRooAbsArg::isValueDirty() const; Bool_tRooAbsArg::isValueDirtyAndClear() const; Bool_tRooAbsArg::isValueOrShapeDirtyAndClear() const; Bool_tRooAbsArg::isValueServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isValueServer(const char* name) const; Bool_tTObject::IsZombie() const; voidRooAbsArg::leafNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t recurseNonDerived = kFALSE) const; Bool_tRooAbsArg::localNoDirtyInhibit() const; voidRooAbsReal::logEvalError(const char* message, const char* serverValueString = 0) const; static voidRooAbsReal::logEvalError(const RooAbsReal* originator, const char* origName, const char* message, const char* serverValueString = 0); virtual voidTNamed::ls(Option_t* option = """") const; virtual Double_tRooAbsReal::maxVal(Int_t code) const; voidTObject::MayNotUse(const char* method) const; RooAbsMoment*RooAbsReal::mean(RooRealVar& obs); RooAbsMoment*RooAbsReal::mean(RooRealVar& obs, const RooArgSet& nset); virtual Int_tRooAbsReal::minTrialSamples(const RooArgSet&) const; RooAbsMoment*RooAbsReal::moment(RooRealVar& obs, Int_t order, Bool_t central, Bool_t takeRoot); RooAbsMoment*RooAbsReal::moment(RooRealVar& obs, const RooArgSet& normObs, Int_t order, Bool_t central, Bool_t takeRoot, Bool_t intNormObs); Bool_tRooAbsPdf::mustBeExtended() const; static voidRooPrintable::nameFieldLength(Int_t newLen); const TNamed*RooAbsArg::namePtr() const; const char*RooAbsPdf::normRange() const; virtual Bool_tTObject::Notif",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:23835,Testability,log,logEvalError,23835,"irtual Bool_tRooAbsReal::isIdentical(const RooAbsArg& other, Bool_t assumeSameType = kFALSE); virtual Bool_tRooAbsArg::isLValue() const; virtual Bool_tRooAbsReal::isOffsetting() const; Bool_tTObject::IsOnHeap() const; Bool_tRooAbsArg::isShapeDirty() const; Bool_tRooAbsArg::isShapeServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isShapeServer(const char* name) const; virtual Bool_tRooAbsArg::IsSortable() const; Bool_tRooAbsArg::isValueDirty() const; Bool_tRooAbsArg::isValueDirtyAndClear() const; Bool_tRooAbsArg::isValueOrShapeDirtyAndClear() const; Bool_tRooAbsArg::isValueServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isValueServer(const char* name) const; Bool_tTObject::IsZombie() const; voidRooAbsArg::leafNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t recurseNonDerived = kFALSE) const; Bool_tRooAbsArg::localNoDirtyInhibit() const; voidRooAbsReal::logEvalError(const char* message, const char* serverValueString = 0) const; static voidRooAbsReal::logEvalError(const RooAbsReal* originator, const char* origName, const char* message, const char* serverValueString = 0); virtual voidTNamed::ls(Option_t* option = """") const; virtual Double_tRooAbsReal::maxVal(Int_t code) const; voidTObject::MayNotUse(const char* method) const; RooAbsMoment*RooAbsReal::mean(RooRealVar& obs); RooAbsMoment*RooAbsReal::mean(RooRealVar& obs, const RooArgSet& nset); virtual Int_tRooAbsReal::minTrialSamples(const RooArgSet&) const; RooAbsMoment*RooAbsReal::moment(RooRealVar& obs, Int_t order, Bool_t central, Bool_t takeRoot); RooAbsMoment*RooAbsReal::moment(RooRealVar& obs, const RooArgSet& normObs, Int_t order, Bool_t central, Bool_t takeRoot, Bool_t intNormObs); Bool_tRooAbsPdf::mustBeExtended() const; static voidRooPrintable::nameFieldLength(Int_t newLen); const TNamed*RooAbsArg::namePtr() const; const char*RooAbsPdf::normRange() const; virtual Bool_tTObject::Notify(); Int_tRooAbsArg::numCaches() const; static Int_tRooAbsReal::numEvalErrorItems(); static Int_tRo",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:24946,Testability,test,testArg,24946," = 0); virtual voidTNamed::ls(Option_t* option = """") const; virtual Double_tRooAbsReal::maxVal(Int_t code) const; voidTObject::MayNotUse(const char* method) const; RooAbsMoment*RooAbsReal::mean(RooRealVar& obs); RooAbsMoment*RooAbsReal::mean(RooRealVar& obs, const RooArgSet& nset); virtual Int_tRooAbsReal::minTrialSamples(const RooArgSet&) const; RooAbsMoment*RooAbsReal::moment(RooRealVar& obs, Int_t order, Bool_t central, Bool_t takeRoot); RooAbsMoment*RooAbsReal::moment(RooRealVar& obs, const RooArgSet& normObs, Int_t order, Bool_t central, Bool_t takeRoot, Bool_t intNormObs); Bool_tRooAbsPdf::mustBeExtended() const; static voidRooPrintable::nameFieldLength(Int_t newLen); const TNamed*RooAbsArg::namePtr() const; const char*RooAbsPdf::normRange() const; virtual Bool_tTObject::Notify(); Int_tRooAbsArg::numCaches() const; static Int_tRooAbsReal::numEvalErrorItems(); static Int_tRooAbsReal::numEvalErrors(); Bool_tRooAbsArg::observableOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::observableOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; virtual Double_tRooAbsReal::offset() const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TNamed&TNamed::operator=(const TNamed& rhs); Bool_tRooAbsReal::operator==(Double_t value) const; virtual Bool_tRooAbsReal::operator==(const RooAbsArg& other); RooAbsArg::OperModeRooAbsArg::operMode() const; virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables); virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables, Roo",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:25041,Testability,test,testArg,25041,"Int_t code) const; voidTObject::MayNotUse(const char* method) const; RooAbsMoment*RooAbsReal::mean(RooRealVar& obs); RooAbsMoment*RooAbsReal::mean(RooRealVar& obs, const RooArgSet& nset); virtual Int_tRooAbsReal::minTrialSamples(const RooArgSet&) const; RooAbsMoment*RooAbsReal::moment(RooRealVar& obs, Int_t order, Bool_t central, Bool_t takeRoot); RooAbsMoment*RooAbsReal::moment(RooRealVar& obs, const RooArgSet& normObs, Int_t order, Bool_t central, Bool_t takeRoot, Bool_t intNormObs); Bool_tRooAbsPdf::mustBeExtended() const; static voidRooPrintable::nameFieldLength(Int_t newLen); const TNamed*RooAbsArg::namePtr() const; const char*RooAbsPdf::normRange() const; virtual Bool_tTObject::Notify(); Int_tRooAbsArg::numCaches() const; static Int_tRooAbsReal::numEvalErrorItems(); static Int_tRooAbsReal::numEvalErrors(); Bool_tRooAbsArg::observableOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::observableOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; virtual Double_tRooAbsReal::offset() const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TNamed&TNamed::operator=(const TNamed& rhs); Bool_tRooAbsReal::operator==(Double_t value) const; virtual Bool_tRooAbsReal::operator==(const RooAbsArg& other); RooAbsArg::OperModeRooAbsArg::operMode() const; virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables); virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables, RooArgSet& optNodes, RooLinkedList& processedNodes); Bool_tRooAbsArg::overlaps(const RooAbsArg& te",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:26043,Testability,test,testArg,26043,"order, Bool_t central, Bool_t takeRoot); RooAbsMoment*RooAbsReal::moment(RooRealVar& obs, const RooArgSet& normObs, Int_t order, Bool_t central, Bool_t takeRoot, Bool_t intNormObs); Bool_tRooAbsPdf::mustBeExtended() const; static voidRooPrintable::nameFieldLength(Int_t newLen); const TNamed*RooAbsArg::namePtr() const; const char*RooAbsPdf::normRange() const; virtual Bool_tTObject::Notify(); Int_tRooAbsArg::numCaches() const; static Int_tRooAbsReal::numEvalErrorItems(); static Int_tRooAbsReal::numEvalErrors(); Bool_tRooAbsArg::observableOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::observableOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; virtual Double_tRooAbsReal::offset() const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TNamed&TNamed::operator=(const TNamed& rhs); Bool_tRooAbsReal::operator==(Double_t value) const; virtual Bool_tRooAbsReal::operator==(const RooAbsArg& other); RooAbsArg::OperModeRooAbsArg::operMode() const; virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables); virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables, RooArgSet& optNodes, RooLinkedList& processedNodes); Bool_tRooAbsArg::overlaps(const RooAbsArg& testArg, Bool_t valueOnly = kFALSE) const; const RooArgSet*RooAbsArg::ownedComponents() const; virtual voidTObject::Paint(Option_t* option = """"); virtual RooPlot*RooAbsPdf::paramOn(RooPlot* frame, const RooAbsData* data, const char* label = """", Int_t sigDigits = 2, Option_t* options = ""NELU"", Double_t xmin = 0.",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:33705,Testability,Test,TestBit,33705,"onst Text_t* name, Bool_t value = kTRUE); virtual voidTObject::SetUniqueID(UInt_t uid); voidRooAbsReal::setUnit(const char* unit); voidRooAbsArg::setValueDirty() const; TIterator*RooAbsArg::shapeClientIterator() const; RooFIterRooAbsArg::shapeClientMIterator() const; virtual voidShowMembers(TMemberInspector&); RooAbsMoment*RooAbsReal::sigma(RooRealVar& obs); RooAbsMoment*RooAbsReal::sigma(RooRealVar& obs, const RooArgSet& nset); virtual Int_tTNamed::Sizeof() const; RooNumGenConfig*RooAbsPdf::specialGeneratorConfig() const; RooNumGenConfig*RooAbsPdf::specialGeneratorConfig(Bool_t createOnTheFly); RooNumIntConfig*RooAbsReal::specialIntegratorConfig() const; RooNumIntConfig*RooAbsReal::specialIntegratorConfig(Bool_t createOnTheFly); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); const map<std::string,std::string>&RooAbsArg::stringAttributes() const; virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual Bool_tRooAbsPdf::traceEvalHook(Double_t value) const; Bool_tRooAbsPdf::traceEvalPdf(Double_t value) const; const set<std::string>&RooAbsArg::transientAttributes() const; voidRooAbsArg::treeNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t doBranch = kTRUE, Bool_t doLeaf = kTRUE, Bool_t valueOnly = kFALSE, Bool_t recurseNonDerived = kFALSE) const; voidRooAbsArg::unRegisterCache(RooAbsCache& cache); virtual voidTObject::UseCurrentStyle(); TIterator*RooAbsArg::valueClientIterator() const; RooFIterRooAbsArg::valueClientMIterator() const; static voidRooAbsArg::verboseDirty(Bool_t flag); static intRooAbsPdf::verboseEval(); static voidRooAbsPdf::verboseEval(Int_t stat); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; voidRooAbsArg::wireAllCaches(); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* n",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:33744,Testability,Test,TestBits,33744,"); virtual voidTObject::SetUniqueID(UInt_t uid); voidRooAbsReal::setUnit(const char* unit); voidRooAbsArg::setValueDirty() const; TIterator*RooAbsArg::shapeClientIterator() const; RooFIterRooAbsArg::shapeClientMIterator() const; virtual voidShowMembers(TMemberInspector&); RooAbsMoment*RooAbsReal::sigma(RooRealVar& obs); RooAbsMoment*RooAbsReal::sigma(RooRealVar& obs, const RooArgSet& nset); virtual Int_tTNamed::Sizeof() const; RooNumGenConfig*RooAbsPdf::specialGeneratorConfig() const; RooNumGenConfig*RooAbsPdf::specialGeneratorConfig(Bool_t createOnTheFly); RooNumIntConfig*RooAbsReal::specialIntegratorConfig() const; RooNumIntConfig*RooAbsReal::specialIntegratorConfig(Bool_t createOnTheFly); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); const map<std::string,std::string>&RooAbsArg::stringAttributes() const; virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual Bool_tRooAbsPdf::traceEvalHook(Double_t value) const; Bool_tRooAbsPdf::traceEvalPdf(Double_t value) const; const set<std::string>&RooAbsArg::transientAttributes() const; voidRooAbsArg::treeNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t doBranch = kTRUE, Bool_t doLeaf = kTRUE, Bool_t valueOnly = kFALSE, Bool_t recurseNonDerived = kFALSE) const; voidRooAbsArg::unRegisterCache(RooAbsCache& cache); virtual voidTObject::UseCurrentStyle(); TIterator*RooAbsArg::valueClientIterator() const; RooFIterRooAbsArg::valueClientMIterator() const; static voidRooAbsArg::verboseDirty(Bool_t flag); static intRooAbsPdf::verboseEval(); static voidRooAbsPdf::verboseEval(Int_t stat); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; voidRooAbsArg::wireAllCaches(); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:4587,Usability,Clear,Clear,4587,"indVars(const RooArgSet& vars, const RooArgSet* nset = 0, Bool_t clipInvalid = kFALSE) const; virtual RooAbsGenContext*RooAbsPdf::binnedGenContext(const RooArgSet& vars, Bool_t verbose = kFALSE) const; voidRooAbsArg::branchNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t recurseNonDerived = kFALSE) const; virtual voidTObject::Browse(TBrowser* b); virtual const char*RooAbsArg::cacheUniqueSuffix() const; Bool_tRooAbsPdf::canBeExtended() const; virtual RooAbsArg::CacheModeRooAbsArg::canNodeBeCached() const; virtual Bool_tchangeModel(const RooResolutionModel& newModel); voidRooAbsArg::changeServer(RooAbsArg& server, Bool_t valueProp, Bool_t shapeProp); Bool_tRooAbsArg::checkDependents(const RooArgSet* nset) const; virtual Bool_tRooAbsArg::checkObservables(const RooArgSet* nset) const; virtual RooFitResult*RooAbsPdf::chi2FitTo(RooDataHist& data, const RooLinkedList& cmdList); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); static voidRooAbsPdf::clearEvalError(); static voidRooAbsReal::clearEvalErrorLog(); voidRooAbsArg::clearShapeDirty() const; voidRooAbsArg::clearValueAndShapeDirty() const; voidRooAbsArg::clearValueDirty() const; TIterator*RooAbsArg::clientIterator() const; virtual TObject*RooAbsArg::clone(const char* newname = 0) const; virtual TObject*RooAbsArg::Clone(const char* newname = 0) const; virtual RooAbsArg*RooAbsArg::cloneTree(const char* newname = 0) const; virtual Double_tcoefAnalyticalIntegral(Int_t coef, Int_t code, const char* rangeName = 0) const; virtual Double_tcoefficient(Int_t basisIndex) const; virtual RooArgSet*coefVars(Int_t coefIdx) const; virtual Int_tRooAbsArg::Compare(const TObject* other) const; virtual voidRooAbsArg::constOptimizeTestStatistic(RooAbsArg::ConstOpCode opcode, Bool_t doAlsoTrackingOpt = kTRUE); const RooRealVar*convVar() const; virtual voidTNamed::Copy(TObject& named) const; static UInt_tRooAbsArg::crc32(const char* data); static U",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:4639,Usability,clear,clearEvalError,4639,", Bool_t clipInvalid = kFALSE) const; virtual RooAbsGenContext*RooAbsPdf::binnedGenContext(const RooArgSet& vars, Bool_t verbose = kFALSE) const; voidRooAbsArg::branchNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t recurseNonDerived = kFALSE) const; virtual voidTObject::Browse(TBrowser* b); virtual const char*RooAbsArg::cacheUniqueSuffix() const; Bool_tRooAbsPdf::canBeExtended() const; virtual RooAbsArg::CacheModeRooAbsArg::canNodeBeCached() const; virtual Bool_tchangeModel(const RooResolutionModel& newModel); voidRooAbsArg::changeServer(RooAbsArg& server, Bool_t valueProp, Bool_t shapeProp); Bool_tRooAbsArg::checkDependents(const RooArgSet* nset) const; virtual Bool_tRooAbsArg::checkObservables(const RooArgSet* nset) const; virtual RooFitResult*RooAbsPdf::chi2FitTo(RooDataHist& data, const RooLinkedList& cmdList); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); static voidRooAbsPdf::clearEvalError(); static voidRooAbsReal::clearEvalErrorLog(); voidRooAbsArg::clearShapeDirty() const; voidRooAbsArg::clearValueAndShapeDirty() const; voidRooAbsArg::clearValueDirty() const; TIterator*RooAbsArg::clientIterator() const; virtual TObject*RooAbsArg::clone(const char* newname = 0) const; virtual TObject*RooAbsArg::Clone(const char* newname = 0) const; virtual RooAbsArg*RooAbsArg::cloneTree(const char* newname = 0) const; virtual Double_tcoefAnalyticalIntegral(Int_t coef, Int_t code, const char* rangeName = 0) const; virtual Double_tcoefficient(Int_t basisIndex) const; virtual RooArgSet*coefVars(Int_t coefIdx) const; virtual Int_tRooAbsArg::Compare(const TObject* other) const; virtual voidRooAbsArg::constOptimizeTestStatistic(RooAbsArg::ConstOpCode opcode, Bool_t doAlsoTrackingOpt = kTRUE); const RooRealVar*convVar() const; virtual voidTNamed::Copy(TObject& named) const; static UInt_tRooAbsArg::crc32(const char* data); static UInt_tRooAbsArg::crc32(const char* data, ULong_t sz, UInt_",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:4680,Usability,clear,clearEvalErrorLog,4680,"al RooAbsGenContext*RooAbsPdf::binnedGenContext(const RooArgSet& vars, Bool_t verbose = kFALSE) const; voidRooAbsArg::branchNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t recurseNonDerived = kFALSE) const; virtual voidTObject::Browse(TBrowser* b); virtual const char*RooAbsArg::cacheUniqueSuffix() const; Bool_tRooAbsPdf::canBeExtended() const; virtual RooAbsArg::CacheModeRooAbsArg::canNodeBeCached() const; virtual Bool_tchangeModel(const RooResolutionModel& newModel); voidRooAbsArg::changeServer(RooAbsArg& server, Bool_t valueProp, Bool_t shapeProp); Bool_tRooAbsArg::checkDependents(const RooArgSet* nset) const; virtual Bool_tRooAbsArg::checkObservables(const RooArgSet* nset) const; virtual RooFitResult*RooAbsPdf::chi2FitTo(RooDataHist& data, const RooLinkedList& cmdList); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); static voidRooAbsPdf::clearEvalError(); static voidRooAbsReal::clearEvalErrorLog(); voidRooAbsArg::clearShapeDirty() const; voidRooAbsArg::clearValueAndShapeDirty() const; voidRooAbsArg::clearValueDirty() const; TIterator*RooAbsArg::clientIterator() const; virtual TObject*RooAbsArg::clone(const char* newname = 0) const; virtual TObject*RooAbsArg::Clone(const char* newname = 0) const; virtual RooAbsArg*RooAbsArg::cloneTree(const char* newname = 0) const; virtual Double_tcoefAnalyticalIntegral(Int_t coef, Int_t code, const char* rangeName = 0) const; virtual Double_tcoefficient(Int_t basisIndex) const; virtual RooArgSet*coefVars(Int_t coefIdx) const; virtual Int_tRooAbsArg::Compare(const TObject* other) const; virtual voidRooAbsArg::constOptimizeTestStatistic(RooAbsArg::ConstOpCode opcode, Bool_t doAlsoTrackingOpt = kTRUE); const RooRealVar*convVar() const; virtual voidTNamed::Copy(TObject& named) const; static UInt_tRooAbsArg::crc32(const char* data); static UInt_tRooAbsArg::crc32(const char* data, ULong_t sz, UInt_t crc = 0); RooAbsReal*RooAbsPdf::createCd",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:4716,Usability,clear,clearShapeDirty,4716,"edGenContext(const RooArgSet& vars, Bool_t verbose = kFALSE) const; voidRooAbsArg::branchNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t recurseNonDerived = kFALSE) const; virtual voidTObject::Browse(TBrowser* b); virtual const char*RooAbsArg::cacheUniqueSuffix() const; Bool_tRooAbsPdf::canBeExtended() const; virtual RooAbsArg::CacheModeRooAbsArg::canNodeBeCached() const; virtual Bool_tchangeModel(const RooResolutionModel& newModel); voidRooAbsArg::changeServer(RooAbsArg& server, Bool_t valueProp, Bool_t shapeProp); Bool_tRooAbsArg::checkDependents(const RooArgSet* nset) const; virtual Bool_tRooAbsArg::checkObservables(const RooArgSet* nset) const; virtual RooFitResult*RooAbsPdf::chi2FitTo(RooDataHist& data, const RooLinkedList& cmdList); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); static voidRooAbsPdf::clearEvalError(); static voidRooAbsReal::clearEvalErrorLog(); voidRooAbsArg::clearShapeDirty() const; voidRooAbsArg::clearValueAndShapeDirty() const; voidRooAbsArg::clearValueDirty() const; TIterator*RooAbsArg::clientIterator() const; virtual TObject*RooAbsArg::clone(const char* newname = 0) const; virtual TObject*RooAbsArg::Clone(const char* newname = 0) const; virtual RooAbsArg*RooAbsArg::cloneTree(const char* newname = 0) const; virtual Double_tcoefAnalyticalIntegral(Int_t coef, Int_t code, const char* rangeName = 0) const; virtual Double_tcoefficient(Int_t basisIndex) const; virtual RooArgSet*coefVars(Int_t coefIdx) const; virtual Int_tRooAbsArg::Compare(const TObject* other) const; virtual voidRooAbsArg::constOptimizeTestStatistic(RooAbsArg::ConstOpCode opcode, Bool_t doAlsoTrackingOpt = kTRUE); const RooRealVar*convVar() const; virtual voidTNamed::Copy(TObject& named) const; static UInt_tRooAbsArg::crc32(const char* data); static UInt_tRooAbsArg::crc32(const char* data, ULong_t sz, UInt_t crc = 0); RooAbsReal*RooAbsPdf::createCdf(const RooArgSet& iset, const RooA",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:4756,Usability,clear,clearValueAndShapeDirty,4756,"erbose = kFALSE) const; voidRooAbsArg::branchNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t recurseNonDerived = kFALSE) const; virtual voidTObject::Browse(TBrowser* b); virtual const char*RooAbsArg::cacheUniqueSuffix() const; Bool_tRooAbsPdf::canBeExtended() const; virtual RooAbsArg::CacheModeRooAbsArg::canNodeBeCached() const; virtual Bool_tchangeModel(const RooResolutionModel& newModel); voidRooAbsArg::changeServer(RooAbsArg& server, Bool_t valueProp, Bool_t shapeProp); Bool_tRooAbsArg::checkDependents(const RooArgSet* nset) const; virtual Bool_tRooAbsArg::checkObservables(const RooArgSet* nset) const; virtual RooFitResult*RooAbsPdf::chi2FitTo(RooDataHist& data, const RooLinkedList& cmdList); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); static voidRooAbsPdf::clearEvalError(); static voidRooAbsReal::clearEvalErrorLog(); voidRooAbsArg::clearShapeDirty() const; voidRooAbsArg::clearValueAndShapeDirty() const; voidRooAbsArg::clearValueDirty() const; TIterator*RooAbsArg::clientIterator() const; virtual TObject*RooAbsArg::clone(const char* newname = 0) const; virtual TObject*RooAbsArg::Clone(const char* newname = 0) const; virtual RooAbsArg*RooAbsArg::cloneTree(const char* newname = 0) const; virtual Double_tcoefAnalyticalIntegral(Int_t coef, Int_t code, const char* rangeName = 0) const; virtual Double_tcoefficient(Int_t basisIndex) const; virtual RooArgSet*coefVars(Int_t coefIdx) const; virtual Int_tRooAbsArg::Compare(const TObject* other) const; virtual voidRooAbsArg::constOptimizeTestStatistic(RooAbsArg::ConstOpCode opcode, Bool_t doAlsoTrackingOpt = kTRUE); const RooRealVar*convVar() const; virtual voidTNamed::Copy(TObject& named) const; static UInt_tRooAbsArg::crc32(const char* data); static UInt_tRooAbsArg::crc32(const char* data, ULong_t sz, UInt_t crc = 0); RooAbsReal*RooAbsPdf::createCdf(const RooArgSet& iset, const RooArgSet& nset = RooArgSet()); RooAbsReal*RooAb",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsAnaConvPdf.html:4804,Usability,clear,clearValueDirty,4804,"hNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t recurseNonDerived = kFALSE) const; virtual voidTObject::Browse(TBrowser* b); virtual const char*RooAbsArg::cacheUniqueSuffix() const; Bool_tRooAbsPdf::canBeExtended() const; virtual RooAbsArg::CacheModeRooAbsArg::canNodeBeCached() const; virtual Bool_tchangeModel(const RooResolutionModel& newModel); voidRooAbsArg::changeServer(RooAbsArg& server, Bool_t valueProp, Bool_t shapeProp); Bool_tRooAbsArg::checkDependents(const RooArgSet* nset) const; virtual Bool_tRooAbsArg::checkObservables(const RooArgSet* nset) const; virtual RooFitResult*RooAbsPdf::chi2FitTo(RooDataHist& data, const RooLinkedList& cmdList); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); static voidRooAbsPdf::clearEvalError(); static voidRooAbsReal::clearEvalErrorLog(); voidRooAbsArg::clearShapeDirty() const; voidRooAbsArg::clearValueAndShapeDirty() const; voidRooAbsArg::clearValueDirty() const; TIterator*RooAbsArg::clientIterator() const; virtual TObject*RooAbsArg::clone(const char* newname = 0) const; virtual TObject*RooAbsArg::Clone(const char* newname = 0) const; virtual RooAbsArg*RooAbsArg::cloneTree(const char* newname = 0) const; virtual Double_tcoefAnalyticalIntegral(Int_t coef, Int_t code, const char* rangeName = 0) const; virtual Double_tcoefficient(Int_t basisIndex) const; virtual RooArgSet*coefVars(Int_t coefIdx) const; virtual Int_tRooAbsArg::Compare(const TObject* other) const; virtual voidRooAbsArg::constOptimizeTestStatistic(RooAbsArg::ConstOpCode opcode, Bool_t doAlsoTrackingOpt = kTRUE); const RooRealVar*convVar() const; virtual voidTNamed::Copy(TObject& named) const; static UInt_tRooAbsArg::crc32(const char* data); static UInt_tRooAbsArg::crc32(const char* data, ULong_t sz, UInt_t crc = 0); RooAbsReal*RooAbsPdf::createCdf(const RooArgSet& iset, const RooArgSet& nset = RooArgSet()); RooAbsReal*RooAbsPdf::createCdf(const RooArgSet& iset, const",MatchSource.WIKI,root/html534/RooAbsAnaConvPdf.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsAnaConvPdf.html
https://root.cern/root/html534/RooAbsArg.html:1211,Availability,avail,available,1211,"s; class charts. ROOT; » ROOFIT; » ROOFITCORE; » RooAbsArg. class RooAbsArg: public TNamed, public RooPrintable. RooAbsArg is the common abstract base class for objects that; represent a value (of arbitrary type) and ""shape"" that in general; depends on (is a client of) other RooAbsArg subclasses. The only; state information about a value that is maintained in this base; class consists of named attributes and flags that track when either; the value or the shape of this object changes. The meaning of shape; depends on the client implementation but could be, for example, the; allowed range of a value. The base class is also responsible for; managing client/server links and propagating value/shape changes; through an expression tree. RooAbsArg implements public interfaces; for inspecting client/server relationships and; setting/clearing/testing named attributes.; . Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. virtual~RooAbsArg(); voidTObject::AbstractMethod(const char* method) const; Bool_taddOwnedComponents(const RooArgSet& comps); voidaddParameters(RooArgSet& params, const RooArgSet* nset = 0, Bool_t stripDisconnected = kTRUE) const; voidaddServer(RooAbsArg& server, Bool_t valueProp = kTRUE, Bool_t shapeProp = kFALSE); voidaddServerList(RooAbsCollection& serverList, Bool_t valueProp = kTRUE, Bool_t shapeProp = kFALSE); const char*aggregateCacheUniqueSuffix() const; virtual voidTObject::AppendPad(Option_t* option = """"); voidattachDataSet(const RooAbsData& set); voidattachDataStore(const RooAbsDataStore& set); const set<std::string>&attributes() const; voidbranchNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t recurseNonDerived = kFALSE) const; virtual voidTObject::Browse(TBrowser* b); virtual const char*cacheUniqueSuffix() const; virtual RooAbsArg::CacheModecanNodeBeCached() const; voidchangeServer(RooAbsArg& server, Bool_t va",MatchSource.WIKI,root/html534/RooAbsArg.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsArg.html
https://root.cern/root/html534/RooAbsArg.html:4262,Availability,Error,Error,4262,"l RooPrintable::StyleOptionRooPrintable::defaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Bool_tdependentOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tdependentOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; Bool_tdependsOn(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tdependsOn(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tdependsOnValue(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0) const; Bool_tdependsOnValue(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0) const; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); RooExpensiveObjectCache&expensiveObjectCache() const; virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); Bool_tfindConstantNodes(const RooArgSet& observables, RooArgSet& cacheList); Bool_tfindConstantNodes(const RooArgSet& observables, RooArgSet& cacheList, RooLinkedList& processedNodes); RooAbsArg*findNewServer(const RooAbsCollection& newSet, Bool_t nameChange) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; RooAbsArg*findServer(const char* name) const; RooAbsArg*findServer(const RooAbsArg& arg) const; RooAbsArg*findServer(Int_t index) const; static ",MatchSource.WIKI,root/html534/RooAbsArg.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsArg.html
https://root.cern/root/html534/RooAbsArg.html:4391,Availability,error,error,4391,""")MENU ; Bool_tdependentOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tdependentOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; Bool_tdependsOn(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tdependsOn(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tdependsOnValue(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0) const; Bool_tdependsOnValue(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0) const; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); RooExpensiveObjectCache&expensiveObjectCache() const; virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); Bool_tfindConstantNodes(const RooArgSet& observables, RooArgSet& cacheList); Bool_tfindConstantNodes(const RooArgSet& observables, RooArgSet& cacheList, RooLinkedList& processedNodes); RooAbsArg*findNewServer(const RooAbsCollection& newSet, Bool_t nameChange) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; RooAbsArg*findServer(const char* name) const; RooAbsArg*findServer(const RooAbsArg& arg) const; RooAbsArg*findServer(Int_t index) const; static UInt_tfnv1a32(const char* data); static UInt_tfnv1a32(const char* data, ULong_t sz, UInt_t hash = fnv1a32start); static ULong64_t",MatchSource.WIKI,root/html534/RooAbsArg.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsArg.html
https://root.cern/root/html534/RooAbsArg.html:4475,Availability,error,error,4475,"onst; Bool_tdependentOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; Bool_tdependsOn(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tdependsOn(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tdependsOnValue(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0) const; Bool_tdependsOnValue(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0) const; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); RooExpensiveObjectCache&expensiveObjectCache() const; virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); Bool_tfindConstantNodes(const RooArgSet& observables, RooArgSet& cacheList); Bool_tfindConstantNodes(const RooArgSet& observables, RooArgSet& cacheList, RooLinkedList& processedNodes); RooAbsArg*findNewServer(const RooAbsCollection& newSet, Bool_t nameChange) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; RooAbsArg*findServer(const char* name) const; RooAbsArg*findServer(const RooAbsArg& arg) const; RooAbsArg*findServer(Int_t index) const; static UInt_tfnv1a32(const char* data); static UInt_tfnv1a32(const char* data, ULong_t sz, UInt_t hash = fnv1a32start); static ULong64_tfnv1a64(const char* data); static ULong64_tfnv1a64(const char* data, ULong_t sz, ULo",MatchSource.WIKI,root/html534/RooAbsArg.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsArg.html
https://root.cern/root/html534/RooAbsArg.html:21261,Availability,mask,mask,21261,"f this object. Bool_t getTransientAttribute(const Text_t* name) const; Check if a named attribute is set. By default, all attributes; are unset. void addServer(RooAbsArg& server, Bool_t valueProp = kTRUE, Bool_t shapeProp = kFALSE); Register another RooAbsArg as a server to us, ie, declare that; we depend on it. In addition to the basic client-server relationship,; we can declare dependence on the server's value and/or shape. void addServerList(RooAbsCollection& serverList, Bool_t valueProp = kTRUE, Bool_t shapeProp = kFALSE); Register a list of RooAbsArg as servers to us by calls; addServer() for each arg in the list. void removeServer(RooAbsArg& server, Bool_t force = kFALSE); Unregister another RooAbsArg as a server to us, ie, declare that; we no longer depend on its value and shape. void replaceServer(RooAbsArg& oldServer, RooAbsArg& newServer, Bool_t valueProp, Bool_t shapeProp); Replace 'oldServer' with 'newServer'. void changeServer(RooAbsArg& server, Bool_t valueProp, Bool_t shapeProp); Change dirty flag propagation mask for specified server. void leafNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t recurseNonDerived = kFALSE) const; Fill supplied list with all leaf nodes of the arg tree, starting with; ourself as top node. A leaf node is node that has no servers declared. void branchNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t recurseNonDerived = kFALSE) const; Fill supplied list with all branch nodes of the arg tree starting with; ourself as top node. A branch node is node that has one or more servers declared. void treeNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t doBranch = kTRUE, Bool_t doLeaf = kTRUE, Bool_t valueOnly = kFALSE, Bool_t recurseNonDerived = kFALSE) const; Fill supplied list with nodes of the arg tree, following all server links,; starting with ourself as top node. RooArgSet* getParameters(const RooAbsData* data, Bool_t stripDisconnected = kTRUE) const; Create a lis",MatchSource.WIKI,root/html534/RooAbsArg.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsArg.html
https://root.cern/root/html534/RooAbsArg.html:24095,Availability,error,error,24095," const; Create a list of leaf nodes in the arg tree starting with; ourself as top node that match any of the names of the variable list; of the supplied data set (the dependents). The caller of this; function is responsible for deleting the returned argset.; The complement of this function is getObservables(). RooArgSet* getObservables(const RooArgSet* depList, Bool_t valueOnly = kTRUE) const; Create a list of leaf nodes in the arg tree starting with; ourself as top node that match any of the names the args in the; supplied argset. The caller of this function is responsible; for deleting the returned argset. The complement of this function; is getObservables(). RooArgSet* getComponents() const; Return a RooArgSet with all component (branch nodes) of the; expression tree headed by this object. Bool_t checkObservables(const RooArgSet* nset) const; Overloadable function in which derived classes can implement; consistency checks of the variables. If this function returns; true, indicating an error, the fitter or generator will abort. Bool_t recursiveCheckObservables(const RooArgSet* nset) const; Recursively call checkObservables on all nodes in the expression tree. Bool_t dependsOn(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Test whether we depend on (ie, are served by) any object in the; specified collection. Uses the dependsOn(RooAbsArg&) member function. Bool_t dependsOn(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Test whether we depend on (ie, are served by) the specified object.; Note that RooAbsArg objects are considered equivalent if they have; the same name. Bool_t overlaps(const RooAbsArg& testArg, Bool_t valueOnly = kFALSE) const; Test if any of the nodes of tree are shared with that of the given tree. Bool_t observableOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Test if any of the dependents of the arg tree (as determined by getObservab",MatchSource.WIKI,root/html534/RooAbsArg.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsArg.html
https://root.cern/root/html534/RooAbsArg.html:26184,Availability,error,error,26184,"AbsArg& testArg) const; Test if any of the dependents of the arg tree (as determined by getObservables); overlaps with those of the testArg. void setValueDirty(const RooAbsArg* source) const; Mark this object as having changed its value, and propagate this status; change to all of our clients. If the object is not in automatic dirty; state propagation mode, this call has no effect. void setShapeDirty(const RooAbsArg* source) const; Mark this object as having changed its shape, and propagate this status; change to all of our clients. Bool_t redirectServers(const RooAbsCollection& newServerList, Bool_t mustReplaceAll = kFALSE, Bool_t nameChange = kFALSE, Bool_t isRecursionStep = kFALSE); Substitute our servers with those listed in newSet. If nameChange is false, servers and; and substitutes are matched by name. If nameChange is true, servers are matched to args; in newSet that have the 'ORIGNAME:<servername>' attribute set. If mustReplaceAll is set,; a warning is printed and error status is returned if not all servers could be sucessfully; substituted. RooAbsArg * findNewServer(const RooAbsCollection& newSet, Bool_t nameChange) const; Find the new server in the specified set that matches the old server.; Allow a name change if nameChange is kTRUE, in which case the new; server is selected by searching for a new server with an attribute; of ""ORIGNAME:<oldName>"". Return zero if there is not a unique match. Bool_t recursiveRedirectServers(const RooAbsCollection& newServerList, Bool_t mustReplaceAll = kFALSE, Bool_t nameChange = kFALSE, Bool_t recurseInNewSet = kTRUE); Recursively redirect all servers with new server in collection 'newSet'.; Substitute our servers with those listed in newSet. If nameChange is false, servers and; and substitutes are matched by name. If nameChange is true, servers are matched to args; in newSet that have the 'ORIGNAME:<servername>' attribute set. If mustReplaceAll is set,; a warning is printed and error status is returned if not all servers ",MatchSource.WIKI,root/html534/RooAbsArg.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsArg.html
https://root.cern/root/html534/RooAbsArg.html:27153,Availability,error,error,27153,"ing is printed and error status is returned if not all servers could be sucessfully; substituted. RooAbsArg * findNewServer(const RooAbsCollection& newSet, Bool_t nameChange) const; Find the new server in the specified set that matches the old server.; Allow a name change if nameChange is kTRUE, in which case the new; server is selected by searching for a new server with an attribute; of ""ORIGNAME:<oldName>"". Return zero if there is not a unique match. Bool_t recursiveRedirectServers(const RooAbsCollection& newServerList, Bool_t mustReplaceAll = kFALSE, Bool_t nameChange = kFALSE, Bool_t recurseInNewSet = kTRUE); Recursively redirect all servers with new server in collection 'newSet'.; Substitute our servers with those listed in newSet. If nameChange is false, servers and; and substitutes are matched by name. If nameChange is true, servers are matched to args; in newSet that have the 'ORIGNAME:<servername>' attribute set. If mustReplaceAll is set,; a warning is printed and error status is returned if not all servers could be sucessfully; substituted. If recurseInNewSet is true, the recursion algorithm also recursion into; expression trees under the arguments in the new servers (i.e. those in newset). void registerProxy(RooArgProxy& proxy); Register an RooArgProxy in the proxy list. This function is called by owned; proxies upon creation. After registration, this arg wil forward pointer; changes from serverRedirects and updates in cached normalization sets; to the proxies immediately after they occur. The proxied argument is; also added as value and/or shape server. void unRegisterProxy(RooArgProxy& proxy); Remove proxy from proxy list. This functions is called by owned proxies; upon their destruction. void registerProxy(RooSetProxy& proxy); Register an RooSetProxy in the proxy list. This function is called by owned; proxies upon creation. After registration, this arg wil forward pointer; changes from serverRedirects and updates in cached normalization sets; to the pr",MatchSource.WIKI,root/html534/RooAbsArg.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsArg.html
https://root.cern/root/html534/RooAbsArg.html:27608,Deployability,update,updates,27608," unique match. Bool_t recursiveRedirectServers(const RooAbsCollection& newServerList, Bool_t mustReplaceAll = kFALSE, Bool_t nameChange = kFALSE, Bool_t recurseInNewSet = kTRUE); Recursively redirect all servers with new server in collection 'newSet'.; Substitute our servers with those listed in newSet. If nameChange is false, servers and; and substitutes are matched by name. If nameChange is true, servers are matched to args; in newSet that have the 'ORIGNAME:<servername>' attribute set. If mustReplaceAll is set,; a warning is printed and error status is returned if not all servers could be sucessfully; substituted. If recurseInNewSet is true, the recursion algorithm also recursion into; expression trees under the arguments in the new servers (i.e. those in newset). void registerProxy(RooArgProxy& proxy); Register an RooArgProxy in the proxy list. This function is called by owned; proxies upon creation. After registration, this arg wil forward pointer; changes from serverRedirects and updates in cached normalization sets; to the proxies immediately after they occur. The proxied argument is; also added as value and/or shape server. void unRegisterProxy(RooArgProxy& proxy); Remove proxy from proxy list. This functions is called by owned proxies; upon their destruction. void registerProxy(RooSetProxy& proxy); Register an RooSetProxy in the proxy list. This function is called by owned; proxies upon creation. After registration, this arg wil forward pointer; changes from serverRedirects and updates in cached normalization sets; to the proxies immediately after they occur. void unRegisterProxy(RooSetProxy& proxy); Remove proxy from proxy list. This functions is called by owned proxies; upon their destruction. void registerProxy(RooListProxy& proxy); Register an RooListProxy in the proxy list. This function is called by owned; proxies upon creation. After registration, this arg wil forward pointer; changes from serverRedirects and updates in cached normalization sets; to ",MatchSource.WIKI,root/html534/RooAbsArg.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsArg.html
https://root.cern/root/html534/RooAbsArg.html:28119,Deployability,update,updates,28119," is set,; a warning is printed and error status is returned if not all servers could be sucessfully; substituted. If recurseInNewSet is true, the recursion algorithm also recursion into; expression trees under the arguments in the new servers (i.e. those in newset). void registerProxy(RooArgProxy& proxy); Register an RooArgProxy in the proxy list. This function is called by owned; proxies upon creation. After registration, this arg wil forward pointer; changes from serverRedirects and updates in cached normalization sets; to the proxies immediately after they occur. The proxied argument is; also added as value and/or shape server. void unRegisterProxy(RooArgProxy& proxy); Remove proxy from proxy list. This functions is called by owned proxies; upon their destruction. void registerProxy(RooSetProxy& proxy); Register an RooSetProxy in the proxy list. This function is called by owned; proxies upon creation. After registration, this arg wil forward pointer; changes from serverRedirects and updates in cached normalization sets; to the proxies immediately after they occur. void unRegisterProxy(RooSetProxy& proxy); Remove proxy from proxy list. This functions is called by owned proxies; upon their destruction. void registerProxy(RooListProxy& proxy); Register an RooListProxy in the proxy list. This function is called by owned; proxies upon creation. After registration, this arg wil forward pointer; changes from serverRedirects and updates in cached normalization sets; to the proxies immediately after they occur. void unRegisterProxy(RooListProxy& proxy); Remove proxy from proxy list. This functions is called by owned proxies; upon their destruction. RooAbsProxy* getProxy(Int_t index) const; Return the nth proxy from the proxy list. Int_t numProxies() const; Return the number of registered proxies. void setProxyNormSet(const RooArgSet* nset); Forward a change in the cached normalization argset; to all the registered proxies. void attachToTree(TTree& t, Int_t bufSize = 32000",MatchSource.WIKI,root/html534/RooAbsArg.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsArg.html
https://root.cern/root/html534/RooAbsArg.html:28566,Deployability,update,updates,28566," pointer; changes from serverRedirects and updates in cached normalization sets; to the proxies immediately after they occur. The proxied argument is; also added as value and/or shape server. void unRegisterProxy(RooArgProxy& proxy); Remove proxy from proxy list. This functions is called by owned proxies; upon their destruction. void registerProxy(RooSetProxy& proxy); Register an RooSetProxy in the proxy list. This function is called by owned; proxies upon creation. After registration, this arg wil forward pointer; changes from serverRedirects and updates in cached normalization sets; to the proxies immediately after they occur. void unRegisterProxy(RooSetProxy& proxy); Remove proxy from proxy list. This functions is called by owned proxies; upon their destruction. void registerProxy(RooListProxy& proxy); Register an RooListProxy in the proxy list. This function is called by owned; proxies upon creation. After registration, this arg wil forward pointer; changes from serverRedirects and updates in cached normalization sets; to the proxies immediately after they occur. void unRegisterProxy(RooListProxy& proxy); Remove proxy from proxy list. This functions is called by owned proxies; upon their destruction. RooAbsProxy* getProxy(Int_t index) const; Return the nth proxy from the proxy list. Int_t numProxies() const; Return the number of registered proxies. void setProxyNormSet(const RooArgSet* nset); Forward a change in the cached normalization argset; to all the registered proxies. void attachToTree(TTree& t, Int_t bufSize = 32000); Overloadable function for derived classes to implement; attachment as branch to a TTree. Bool_t isValid() const; WVE (08/21/01) Probably obsolete now. void printName(ostream& os) const; Print object name. void printTitle(ostream& os) const; Print object title. void printClassName(ostream& os) const; Print object class name. void printAddress(ostream& os) const; Print addrss of this RooAbsArg. void printArgs(ostream& os) const; Print object ",MatchSource.WIKI,root/html534/RooAbsArg.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsArg.html
https://root.cern/root/html534/RooAbsArg.html:34200,Deployability,update,update,34200,"s. void printCompactTree(ostream& os, const char* indent = """", const char* namePat = 0, RooAbsArg* client = 0); Print tree structure of expression tree on given ostream.; If namePat is not ""*"", only nodes with names matching the pattern will be printed.; The client argument is used in recursive calls to properly display the value or shape nature; of the client-server links. It should be zero in calls initiated by users. void printComponentTree(const char* indent = """", const char* namePat = 0, Int_t nLevel = 999); Print tree structure of expression tree on given ostream, only branch nodes are printed.; Lead nodes (variables) will not be shown. If namePat is not ""*"", only nodes with names matching the pattern will be printed. TString cleanBranchName() const; Construct a mangled name from the actual name that; is free of any math symbols that might be interpreted by TTree. UInt_t crc32(const char* data); Calculate crc32 checksum on given string. UInt_t crc32(const char* data, ULong_t sz, UInt_t crc = 0); update CRC32 with new data. UInt_t fnv1a32(const char* data); calculate 32 bit FNV1A hash of string. UInt_t fnv1a32(const char* data, ULong_t sz, UInt_t hash = fnv1a32start); update 32 bit FNV1A hash. ULong64_t fnv1a64(const char* data); calculate 64 bit FNV1A hash of string. ULong64_t fnv1a64(const char* data, ULong_t sz, ULong64_t hash = fnv1a64start); update 64 bit FNV1A hash. void printCompactTreeHook(ostream& os, const char* ind = """"); Hook function interface for object to insert additional information; when printed in the context of a tree structure. This default; implementation prints nothing. void registerCache(RooAbsCache& cache); Register RooAbsCache with this object. This function is called; by RooAbsCache constructors for objects that are a datamember; of this RooAbsArg. By registering itself the RooAbsArg is aware; of all its cache data members and will forward server change; and cache mode change calls to the cache objects, which in turn; can forward them",MatchSource.WIKI,root/html534/RooAbsArg.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsArg.html
https://root.cern/root/html534/RooAbsArg.html:34375,Deployability,update,update,34375,"m.; If namePat is not ""*"", only nodes with names matching the pattern will be printed.; The client argument is used in recursive calls to properly display the value or shape nature; of the client-server links. It should be zero in calls initiated by users. void printComponentTree(const char* indent = """", const char* namePat = 0, Int_t nLevel = 999); Print tree structure of expression tree on given ostream, only branch nodes are printed.; Lead nodes (variables) will not be shown. If namePat is not ""*"", only nodes with names matching the pattern will be printed. TString cleanBranchName() const; Construct a mangled name from the actual name that; is free of any math symbols that might be interpreted by TTree. UInt_t crc32(const char* data); Calculate crc32 checksum on given string. UInt_t crc32(const char* data, ULong_t sz, UInt_t crc = 0); update CRC32 with new data. UInt_t fnv1a32(const char* data); calculate 32 bit FNV1A hash of string. UInt_t fnv1a32(const char* data, ULong_t sz, UInt_t hash = fnv1a32start); update 32 bit FNV1A hash. ULong64_t fnv1a64(const char* data); calculate 64 bit FNV1A hash of string. ULong64_t fnv1a64(const char* data, ULong_t sz, ULong64_t hash = fnv1a64start); update 64 bit FNV1A hash. void printCompactTreeHook(ostream& os, const char* ind = """"); Hook function interface for object to insert additional information; when printed in the context of a tree structure. This default; implementation prints nothing. void registerCache(RooAbsCache& cache); Register RooAbsCache with this object. This function is called; by RooAbsCache constructors for objects that are a datamember; of this RooAbsArg. By registering itself the RooAbsArg is aware; of all its cache data members and will forward server change; and cache mode change calls to the cache objects, which in turn; can forward them their contents. void unRegisterCache(RooAbsCache& cache); Unregister a RooAbsCache. Called from the RooAbsCache destructor. Int_t numCaches() const; Return number of ",MatchSource.WIKI,root/html534/RooAbsArg.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsArg.html
https://root.cern/root/html534/RooAbsArg.html:34557,Deployability,update,update,34557,"e; of the client-server links. It should be zero in calls initiated by users. void printComponentTree(const char* indent = """", const char* namePat = 0, Int_t nLevel = 999); Print tree structure of expression tree on given ostream, only branch nodes are printed.; Lead nodes (variables) will not be shown. If namePat is not ""*"", only nodes with names matching the pattern will be printed. TString cleanBranchName() const; Construct a mangled name from the actual name that; is free of any math symbols that might be interpreted by TTree. UInt_t crc32(const char* data); Calculate crc32 checksum on given string. UInt_t crc32(const char* data, ULong_t sz, UInt_t crc = 0); update CRC32 with new data. UInt_t fnv1a32(const char* data); calculate 32 bit FNV1A hash of string. UInt_t fnv1a32(const char* data, ULong_t sz, UInt_t hash = fnv1a32start); update 32 bit FNV1A hash. ULong64_t fnv1a64(const char* data); calculate 64 bit FNV1A hash of string. ULong64_t fnv1a64(const char* data, ULong_t sz, ULong64_t hash = fnv1a64start); update 64 bit FNV1A hash. void printCompactTreeHook(ostream& os, const char* ind = """"); Hook function interface for object to insert additional information; when printed in the context of a tree structure. This default; implementation prints nothing. void registerCache(RooAbsCache& cache); Register RooAbsCache with this object. This function is called; by RooAbsCache constructors for objects that are a datamember; of this RooAbsArg. By registering itself the RooAbsArg is aware; of all its cache data members and will forward server change; and cache mode change calls to the cache objects, which in turn; can forward them their contents. void unRegisterCache(RooAbsCache& cache); Unregister a RooAbsCache. Called from the RooAbsCache destructor. Int_t numCaches() const; Return number of registered caches. RooAbsCache* getCache(Int_t index) const; Return registered cache object by index. RooArgSet* getVariables(Bool_t stripDisconnected = kTRUE) const; Return RooAr",MatchSource.WIKI,root/html534/RooAbsArg.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsArg.html
https://root.cern/root/html534/RooAbsArg.html:40759,Deployability,integrat,integrated,40759,"; If true, arg is a value server of self. Bool_t isValueServer(const char* name) const; If true, we have a server with given name. Bool_t isShapeServer(const RooAbsArg& arg) const; If true arg is a shape server of self. Bool_t isShapeServer(const char* name) const; If true, we have a shape server with given name. Bool_t isFundamental() const; Is this object a fundamental type that can be added to a dataset?; Fundamental-type subclasses override this method to return kTRUE.; Note that this test is subtlely different from the dynamic isDerived(); test, e.g. a constant is not derived but is also not fundamental. RooAbsArg * createFundamental(const char* newname = 0) const; Create a fundamental-type object that stores our type of value. The; created object will have a valid value, but not necessarily the same; as our value. The caller is responsible for deleting the returned object. Bool_t isLValue() const; Is this argument an l-value, ie, can it appear on the left-hand side; of an assignment expression? LValues are also special since they can; potentially be analytically integrated and generated. RooArgSet* getParameters(const RooAbsData* data, Bool_t stripDisconnected = kTRUE) const. RooArgSet* getParameters(const RooAbsData& data, Bool_t stripDisconnected = kTRUE) const; Return the parameters of this p.d.f when used in conjuction with dataset 'data'. RooArgSet* getObservables(const RooArgSet& set, Bool_t valueOnly = kTRUE) const; Return the observables of _this_ pdf given a set of observables. return getObservables(&set,valueOnly). RooArgSet* getDependents(const RooArgSet& set) const; --- Obsolete functions for backward compatibility. { return getObservables(set) ; }. RooArgSet* getDependents(const RooAbsData* set) const; { return getObservables(set) ; }. RooArgSet* getDependents(const RooArgSet* depList) const; { return getObservables(depList) ; }. Bool_t dependentOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; { return observableOverlaps(dset,testA",MatchSource.WIKI,root/html534/RooAbsArg.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsArg.html
https://root.cern/root/html534/RooAbsArg.html:445,Integrability,depend,depends,445,". RooAbsArg. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » ROOFIT; » ROOFITCORE; » RooAbsArg. class RooAbsArg: public TNamed, public RooPrintable. RooAbsArg is the common abstract base class for objects that; represent a value (of arbitrary type) and ""shape"" that in general; depends on (is a client of) other RooAbsArg subclasses. The only; state information about a value that is maintained in this base; class consists of named attributes and flags that track when either; the value or the shape of this object changes. The meaning of shape; depends on the client implementation but could be, for example, the; allowed range of a value. The base class is also responsible for; managing client/server links and propagating value/shape changes; through an expression tree. RooAbsArg implements public interfaces; for inspecting client/server relationships and; setting/clearing/testing named attributes.; . Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. virtual~RooAbsArg(); voidTObject::AbstractMethod(const char* method) const; Bool_taddOwnedComponents(const RooArgSet& comps); voidaddParameters(RooArgSet& params, const RooArgSet* nset = 0, Bool_t stripDisconnected = kTRUE) const; voidaddServer(RooAbsArg& server, Bool_t valueProp = kTRUE, Bool_t shapeProp = kFALSE); voidaddServerList(RooAbsCollection& serverList, Bool_t valueProp = kTRUE, Bool_t shapeProp = kFALSE); const char*aggregateCacheUniqueSuffix() const; virtual voidTObject::AppendPad(Option_t* option = """"); voidattachDataSet(const RooAbsData& set); voidattachDataStore(const RooAbsDataStore& set); const set<std::string>&attributes() const; voidbranchNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t recurseNonDerived ",MatchSource.WIKI,root/html534/RooAbsArg.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsArg.html
https://root.cern/root/html534/RooAbsArg.html:714,Integrability,depend,depends,714,". RooAbsArg. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » ROOFIT; » ROOFITCORE; » RooAbsArg. class RooAbsArg: public TNamed, public RooPrintable. RooAbsArg is the common abstract base class for objects that; represent a value (of arbitrary type) and ""shape"" that in general; depends on (is a client of) other RooAbsArg subclasses. The only; state information about a value that is maintained in this base; class consists of named attributes and flags that track when either; the value or the shape of this object changes. The meaning of shape; depends on the client implementation but could be, for example, the; allowed range of a value. The base class is also responsible for; managing client/server links and propagating value/shape changes; through an expression tree. RooAbsArg implements public interfaces; for inspecting client/server relationships and; setting/clearing/testing named attributes.; . Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. virtual~RooAbsArg(); voidTObject::AbstractMethod(const char* method) const; Bool_taddOwnedComponents(const RooArgSet& comps); voidaddParameters(RooArgSet& params, const RooArgSet* nset = 0, Bool_t stripDisconnected = kTRUE) const; voidaddServer(RooAbsArg& server, Bool_t valueProp = kTRUE, Bool_t shapeProp = kFALSE); voidaddServerList(RooAbsCollection& serverList, Bool_t valueProp = kTRUE, Bool_t shapeProp = kFALSE); const char*aggregateCacheUniqueSuffix() const; virtual voidTObject::AppendPad(Option_t* option = """"); voidattachDataSet(const RooAbsData& set); voidattachDataStore(const RooAbsDataStore& set); const set<std::string>&attributes() const; voidbranchNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t recurseNonDerived ",MatchSource.WIKI,root/html534/RooAbsArg.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsArg.html
https://root.cern/root/html534/RooAbsArg.html:971,Integrability,interface,interfaces,971,"sArg. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » ROOFIT; » ROOFITCORE; » RooAbsArg. class RooAbsArg: public TNamed, public RooPrintable. RooAbsArg is the common abstract base class for objects that; represent a value (of arbitrary type) and ""shape"" that in general; depends on (is a client of) other RooAbsArg subclasses. The only; state information about a value that is maintained in this base; class consists of named attributes and flags that track when either; the value or the shape of this object changes. The meaning of shape; depends on the client implementation but could be, for example, the; allowed range of a value. The base class is also responsible for; managing client/server links and propagating value/shape changes; through an expression tree. RooAbsArg implements public interfaces; for inspecting client/server relationships and; setting/clearing/testing named attributes.; . Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. virtual~RooAbsArg(); voidTObject::AbstractMethod(const char* method) const; Bool_taddOwnedComponents(const RooArgSet& comps); voidaddParameters(RooArgSet& params, const RooArgSet* nset = 0, Bool_t stripDisconnected = kTRUE) const; voidaddServer(RooAbsArg& server, Bool_t valueProp = kTRUE, Bool_t shapeProp = kFALSE); voidaddServerList(RooAbsCollection& serverList, Bool_t valueProp = kTRUE, Bool_t shapeProp = kFALSE); const char*aggregateCacheUniqueSuffix() const; virtual voidTObject::AppendPad(Option_t* option = """"); voidattachDataSet(const RooAbsData& set); voidattachDataStore(const RooAbsDataStore& set); const set<std::string>&attributes() const; voidbranchNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t recurseNonDerived = kFALS",MatchSource.WIKI,root/html534/RooAbsArg.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsArg.html
https://root.cern/root/html534/RooAbsArg.html:20521,Integrability,depend,depend,20521,"g propagation. Bool_t isCloneOf(const RooAbsArg& other) const; Check if this object was created as a clone of 'other'. void setAttribute(const Text_t* name, Bool_t value = kTRUE); Set (default) or clear a named boolean attribute of this object. Bool_t getAttribute(const Text_t* name) const; Check if a named attribute is set. By default, all attributes are unset. void setStringAttribute(const Text_t* key, const Text_t* value); Associate string 'value' to this object under key 'key'. const Text_t* getStringAttribute(const Text_t* key) const; Get string attribute mapped under key 'key'. Returns null pointer; if no attribute exists under that key. void setTransientAttribute(const Text_t* name, Bool_t value = kTRUE); Set (default) or clear a named boolean attribute of this object. Bool_t getTransientAttribute(const Text_t* name) const; Check if a named attribute is set. By default, all attributes; are unset. void addServer(RooAbsArg& server, Bool_t valueProp = kTRUE, Bool_t shapeProp = kFALSE); Register another RooAbsArg as a server to us, ie, declare that; we depend on it. In addition to the basic client-server relationship,; we can declare dependence on the server's value and/or shape. void addServerList(RooAbsCollection& serverList, Bool_t valueProp = kTRUE, Bool_t shapeProp = kFALSE); Register a list of RooAbsArg as servers to us by calls; addServer() for each arg in the list. void removeServer(RooAbsArg& server, Bool_t force = kFALSE); Unregister another RooAbsArg as a server to us, ie, declare that; we no longer depend on its value and shape. void replaceServer(RooAbsArg& oldServer, RooAbsArg& newServer, Bool_t valueProp, Bool_t shapeProp); Replace 'oldServer' with 'newServer'. void changeServer(RooAbsArg& server, Bool_t valueProp, Bool_t shapeProp); Change dirty flag propagation mask for specified server. void leafNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t recurseNonDerived = kFALSE) const; Fill supplied list with all leaf nodes of the ",MatchSource.WIKI,root/html534/RooAbsArg.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsArg.html
https://root.cern/root/html534/RooAbsArg.html:20604,Integrability,depend,dependence,20604,"Text_t* name, Bool_t value = kTRUE); Set (default) or clear a named boolean attribute of this object. Bool_t getAttribute(const Text_t* name) const; Check if a named attribute is set. By default, all attributes are unset. void setStringAttribute(const Text_t* key, const Text_t* value); Associate string 'value' to this object under key 'key'. const Text_t* getStringAttribute(const Text_t* key) const; Get string attribute mapped under key 'key'. Returns null pointer; if no attribute exists under that key. void setTransientAttribute(const Text_t* name, Bool_t value = kTRUE); Set (default) or clear a named boolean attribute of this object. Bool_t getTransientAttribute(const Text_t* name) const; Check if a named attribute is set. By default, all attributes; are unset. void addServer(RooAbsArg& server, Bool_t valueProp = kTRUE, Bool_t shapeProp = kFALSE); Register another RooAbsArg as a server to us, ie, declare that; we depend on it. In addition to the basic client-server relationship,; we can declare dependence on the server's value and/or shape. void addServerList(RooAbsCollection& serverList, Bool_t valueProp = kTRUE, Bool_t shapeProp = kFALSE); Register a list of RooAbsArg as servers to us by calls; addServer() for each arg in the list. void removeServer(RooAbsArg& server, Bool_t force = kFALSE); Unregister another RooAbsArg as a server to us, ie, declare that; we no longer depend on its value and shape. void replaceServer(RooAbsArg& oldServer, RooAbsArg& newServer, Bool_t valueProp, Bool_t shapeProp); Replace 'oldServer' with 'newServer'. void changeServer(RooAbsArg& server, Bool_t valueProp, Bool_t shapeProp); Change dirty flag propagation mask for specified server. void leafNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t recurseNonDerived = kFALSE) const; Fill supplied list with all leaf nodes of the arg tree, starting with; ourself as top node. A leaf node is node that has no servers declared. void branchNodeServerList(RooAbsCollection* li",MatchSource.WIKI,root/html534/RooAbsArg.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsArg.html
https://root.cern/root/html534/RooAbsArg.html:20988,Integrability,depend,depend,20988,"y'. const Text_t* getStringAttribute(const Text_t* key) const; Get string attribute mapped under key 'key'. Returns null pointer; if no attribute exists under that key. void setTransientAttribute(const Text_t* name, Bool_t value = kTRUE); Set (default) or clear a named boolean attribute of this object. Bool_t getTransientAttribute(const Text_t* name) const; Check if a named attribute is set. By default, all attributes; are unset. void addServer(RooAbsArg& server, Bool_t valueProp = kTRUE, Bool_t shapeProp = kFALSE); Register another RooAbsArg as a server to us, ie, declare that; we depend on it. In addition to the basic client-server relationship,; we can declare dependence on the server's value and/or shape. void addServerList(RooAbsCollection& serverList, Bool_t valueProp = kTRUE, Bool_t shapeProp = kFALSE); Register a list of RooAbsArg as servers to us by calls; addServer() for each arg in the list. void removeServer(RooAbsArg& server, Bool_t force = kFALSE); Unregister another RooAbsArg as a server to us, ie, declare that; we no longer depend on its value and shape. void replaceServer(RooAbsArg& oldServer, RooAbsArg& newServer, Bool_t valueProp, Bool_t shapeProp); Replace 'oldServer' with 'newServer'. void changeServer(RooAbsArg& server, Bool_t valueProp, Bool_t shapeProp); Change dirty flag propagation mask for specified server. void leafNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t recurseNonDerived = kFALSE) const; Fill supplied list with all leaf nodes of the arg tree, starting with; ourself as top node. A leaf node is node that has no servers declared. void branchNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t recurseNonDerived = kFALSE) const; Fill supplied list with all branch nodes of the arg tree starting with; ourself as top node. A branch node is node that has one or more servers declared. void treeNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t doBranch = kTRUE, Bool_t doLeaf = ",MatchSource.WIKI,root/html534/RooAbsArg.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsArg.html
https://root.cern/root/html534/RooAbsArg.html:22375,Integrability,depend,dependents,22375,"agation mask for specified server. void leafNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t recurseNonDerived = kFALSE) const; Fill supplied list with all leaf nodes of the arg tree, starting with; ourself as top node. A leaf node is node that has no servers declared. void branchNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t recurseNonDerived = kFALSE) const; Fill supplied list with all branch nodes of the arg tree starting with; ourself as top node. A branch node is node that has one or more servers declared. void treeNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t doBranch = kTRUE, Bool_t doLeaf = kTRUE, Bool_t valueOnly = kFALSE, Bool_t recurseNonDerived = kFALSE) const; Fill supplied list with nodes of the arg tree, following all server links,; starting with ourself as top node. RooArgSet* getParameters(const RooAbsData* data, Bool_t stripDisconnected = kTRUE) const; Create a list of leaf nodes in the arg tree starting with; ourself as top node that don't match any of the names of the variable list; of the supplied data set (the dependents). The caller of this; function is responsible for deleting the returned argset.; The complement of this function is getObservables(). void addParameters(RooArgSet& params, const RooArgSet* nset = 0, Bool_t stripDisconnected = kTRUE) const; INTERNAL helper function for getParameters(). RooArgSet* getParameters(const RooArgSet* depList, Bool_t stripDisconnected = kTRUE) const; Create a list of leaf nodes in the arg tree starting with; ourself as top node that don't match any of the names the args in the; supplied argset. The caller of this function is responsible; for deleting the returned argset. The complement of this function; is getObservables(). RooArgSet* getObservables(const RooAbsData* data) const; Create a list of leaf nodes in the arg tree starting with; ourself as top node that match any of the names of the variable list; of the supplied data set",MatchSource.WIKI,root/html534/RooAbsArg.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsArg.html
https://root.cern/root/html534/RooAbsArg.html:23259,Integrability,depend,dependents,23259,"sData* data, Bool_t stripDisconnected = kTRUE) const; Create a list of leaf nodes in the arg tree starting with; ourself as top node that don't match any of the names of the variable list; of the supplied data set (the dependents). The caller of this; function is responsible for deleting the returned argset.; The complement of this function is getObservables(). void addParameters(RooArgSet& params, const RooArgSet* nset = 0, Bool_t stripDisconnected = kTRUE) const; INTERNAL helper function for getParameters(). RooArgSet* getParameters(const RooArgSet* depList, Bool_t stripDisconnected = kTRUE) const; Create a list of leaf nodes in the arg tree starting with; ourself as top node that don't match any of the names the args in the; supplied argset. The caller of this function is responsible; for deleting the returned argset. The complement of this function; is getObservables(). RooArgSet* getObservables(const RooAbsData* data) const; Create a list of leaf nodes in the arg tree starting with; ourself as top node that match any of the names of the variable list; of the supplied data set (the dependents). The caller of this; function is responsible for deleting the returned argset.; The complement of this function is getObservables(). RooArgSet* getObservables(const RooArgSet* depList, Bool_t valueOnly = kTRUE) const; Create a list of leaf nodes in the arg tree starting with; ourself as top node that match any of the names the args in the; supplied argset. The caller of this function is responsible; for deleting the returned argset. The complement of this function; is getObservables(). RooArgSet* getComponents() const; Return a RooArgSet with all component (branch nodes) of the; expression tree headed by this object. Bool_t checkObservables(const RooArgSet* nset) const; Overloadable function in which derived classes can implement; consistency checks of the variables. If this function returns; true, indicating an error, the fitter or generator will abort. Bool_t recursiveChe",MatchSource.WIKI,root/html534/RooAbsArg.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsArg.html
https://root.cern/root/html534/RooAbsArg.html:24279,Integrability,depend,dependsOn,24279,"function is getObservables(). RooArgSet* getObservables(const RooArgSet* depList, Bool_t valueOnly = kTRUE) const; Create a list of leaf nodes in the arg tree starting with; ourself as top node that match any of the names the args in the; supplied argset. The caller of this function is responsible; for deleting the returned argset. The complement of this function; is getObservables(). RooArgSet* getComponents() const; Return a RooArgSet with all component (branch nodes) of the; expression tree headed by this object. Bool_t checkObservables(const RooArgSet* nset) const; Overloadable function in which derived classes can implement; consistency checks of the variables. If this function returns; true, indicating an error, the fitter or generator will abort. Bool_t recursiveCheckObservables(const RooArgSet* nset) const; Recursively call checkObservables on all nodes in the expression tree. Bool_t dependsOn(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Test whether we depend on (ie, are served by) any object in the; specified collection. Uses the dependsOn(RooAbsArg&) member function. Bool_t dependsOn(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Test whether we depend on (ie, are served by) the specified object.; Note that RooAbsArg objects are considered equivalent if they have; the same name. Bool_t overlaps(const RooAbsArg& testArg, Bool_t valueOnly = kFALSE) const; Test if any of the nodes of tree are shared with that of the given tree. Bool_t observableOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Test if any of the dependents of the arg tree (as determined by getObservables); overlaps with those of the testArg. Bool_t observableOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; Test if any of the dependents of the arg tree (as determined by getObservables); overlaps with those of the testArg. void setValueDirty(const RooAbsArg* s",MatchSource.WIKI,root/html534/RooAbsArg.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsArg.html
https://root.cern/root/html534/RooAbsArg.html:24407,Integrability,depend,depend,24407,"function is getObservables(). RooArgSet* getObservables(const RooArgSet* depList, Bool_t valueOnly = kTRUE) const; Create a list of leaf nodes in the arg tree starting with; ourself as top node that match any of the names the args in the; supplied argset. The caller of this function is responsible; for deleting the returned argset. The complement of this function; is getObservables(). RooArgSet* getComponents() const; Return a RooArgSet with all component (branch nodes) of the; expression tree headed by this object. Bool_t checkObservables(const RooArgSet* nset) const; Overloadable function in which derived classes can implement; consistency checks of the variables. If this function returns; true, indicating an error, the fitter or generator will abort. Bool_t recursiveCheckObservables(const RooArgSet* nset) const; Recursively call checkObservables on all nodes in the expression tree. Bool_t dependsOn(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Test whether we depend on (ie, are served by) any object in the; specified collection. Uses the dependsOn(RooAbsArg&) member function. Bool_t dependsOn(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Test whether we depend on (ie, are served by) the specified object.; Note that RooAbsArg objects are considered equivalent if they have; the same name. Bool_t overlaps(const RooAbsArg& testArg, Bool_t valueOnly = kFALSE) const; Test if any of the nodes of tree are shared with that of the given tree. Bool_t observableOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Test if any of the dependents of the arg tree (as determined by getObservables); overlaps with those of the testArg. Bool_t observableOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; Test if any of the dependents of the arg tree (as determined by getObservables); overlaps with those of the testArg. void setValueDirty(const RooAbsArg* s",MatchSource.WIKI,root/html534/RooAbsArg.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsArg.html
https://root.cern/root/html534/RooAbsArg.html:24487,Integrability,depend,dependsOn,24487,"t of leaf nodes in the arg tree starting with; ourself as top node that match any of the names the args in the; supplied argset. The caller of this function is responsible; for deleting the returned argset. The complement of this function; is getObservables(). RooArgSet* getComponents() const; Return a RooArgSet with all component (branch nodes) of the; expression tree headed by this object. Bool_t checkObservables(const RooArgSet* nset) const; Overloadable function in which derived classes can implement; consistency checks of the variables. If this function returns; true, indicating an error, the fitter or generator will abort. Bool_t recursiveCheckObservables(const RooArgSet* nset) const; Recursively call checkObservables on all nodes in the expression tree. Bool_t dependsOn(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Test whether we depend on (ie, are served by) any object in the; specified collection. Uses the dependsOn(RooAbsArg&) member function. Bool_t dependsOn(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Test whether we depend on (ie, are served by) the specified object.; Note that RooAbsArg objects are considered equivalent if they have; the same name. Bool_t overlaps(const RooAbsArg& testArg, Bool_t valueOnly = kFALSE) const; Test if any of the nodes of tree are shared with that of the given tree. Bool_t observableOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Test if any of the dependents of the arg tree (as determined by getObservables); overlaps with those of the testArg. Bool_t observableOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; Test if any of the dependents of the arg tree (as determined by getObservables); overlaps with those of the testArg. void setValueDirty(const RooAbsArg* source) const; Mark this object as having changed its value, and propagate this status; change to all of our clients. If the obj",MatchSource.WIKI,root/html534/RooAbsArg.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsArg.html
https://root.cern/root/html534/RooAbsArg.html:24533,Integrability,depend,dependsOn,24533,"supplied argset. The caller of this function is responsible; for deleting the returned argset. The complement of this function; is getObservables(). RooArgSet* getComponents() const; Return a RooArgSet with all component (branch nodes) of the; expression tree headed by this object. Bool_t checkObservables(const RooArgSet* nset) const; Overloadable function in which derived classes can implement; consistency checks of the variables. If this function returns; true, indicating an error, the fitter or generator will abort. Bool_t recursiveCheckObservables(const RooArgSet* nset) const; Recursively call checkObservables on all nodes in the expression tree. Bool_t dependsOn(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Test whether we depend on (ie, are served by) any object in the; specified collection. Uses the dependsOn(RooAbsArg&) member function. Bool_t dependsOn(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Test whether we depend on (ie, are served by) the specified object.; Note that RooAbsArg objects are considered equivalent if they have; the same name. Bool_t overlaps(const RooAbsArg& testArg, Bool_t valueOnly = kFALSE) const; Test if any of the nodes of tree are shared with that of the given tree. Bool_t observableOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Test if any of the dependents of the arg tree (as determined by getObservables); overlaps with those of the testArg. Bool_t observableOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; Test if any of the dependents of the arg tree (as determined by getObservables); overlaps with those of the testArg. void setValueDirty(const RooAbsArg* source) const; Mark this object as having changed its value, and propagate this status; change to all of our clients. If the object is not in automatic dirty; state propagation mode, this call has no effect. void setShapeDirty(const RooAbsA",MatchSource.WIKI,root/html534/RooAbsArg.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsArg.html
https://root.cern/root/html534/RooAbsArg.html:24650,Integrability,depend,depend,24650,"supplied argset. The caller of this function is responsible; for deleting the returned argset. The complement of this function; is getObservables(). RooArgSet* getComponents() const; Return a RooArgSet with all component (branch nodes) of the; expression tree headed by this object. Bool_t checkObservables(const RooArgSet* nset) const; Overloadable function in which derived classes can implement; consistency checks of the variables. If this function returns; true, indicating an error, the fitter or generator will abort. Bool_t recursiveCheckObservables(const RooArgSet* nset) const; Recursively call checkObservables on all nodes in the expression tree. Bool_t dependsOn(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Test whether we depend on (ie, are served by) any object in the; specified collection. Uses the dependsOn(RooAbsArg&) member function. Bool_t dependsOn(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Test whether we depend on (ie, are served by) the specified object.; Note that RooAbsArg objects are considered equivalent if they have; the same name. Bool_t overlaps(const RooAbsArg& testArg, Bool_t valueOnly = kFALSE) const; Test if any of the nodes of tree are shared with that of the given tree. Bool_t observableOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Test if any of the dependents of the arg tree (as determined by getObservables); overlaps with those of the testArg. Bool_t observableOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; Test if any of the dependents of the arg tree (as determined by getObservables); overlaps with those of the testArg. void setValueDirty(const RooAbsArg* source) const; Mark this object as having changed its value, and propagate this status; change to all of our clients. If the object is not in automatic dirty; state propagation mode, this call has no effect. void setShapeDirty(const RooAbsA",MatchSource.WIKI,root/html534/RooAbsArg.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsArg.html
https://root.cern/root/html534/RooAbsArg.html:25037,Integrability,depend,dependents,25037,"the variables. If this function returns; true, indicating an error, the fitter or generator will abort. Bool_t recursiveCheckObservables(const RooArgSet* nset) const; Recursively call checkObservables on all nodes in the expression tree. Bool_t dependsOn(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Test whether we depend on (ie, are served by) any object in the; specified collection. Uses the dependsOn(RooAbsArg&) member function. Bool_t dependsOn(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Test whether we depend on (ie, are served by) the specified object.; Note that RooAbsArg objects are considered equivalent if they have; the same name. Bool_t overlaps(const RooAbsArg& testArg, Bool_t valueOnly = kFALSE) const; Test if any of the nodes of tree are shared with that of the given tree. Bool_t observableOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Test if any of the dependents of the arg tree (as determined by getObservables); overlaps with those of the testArg. Bool_t observableOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; Test if any of the dependents of the arg tree (as determined by getObservables); overlaps with those of the testArg. void setValueDirty(const RooAbsArg* source) const; Mark this object as having changed its value, and propagate this status; change to all of our clients. If the object is not in automatic dirty; state propagation mode, this call has no effect. void setShapeDirty(const RooAbsArg* source) const; Mark this object as having changed its shape, and propagate this status; change to all of our clients. Bool_t redirectServers(const RooAbsCollection& newServerList, Bool_t mustReplaceAll = kFALSE, Bool_t nameChange = kFALSE, Bool_t isRecursionStep = kFALSE); Substitute our servers with those listed in newSet. If nameChange is false, servers and; and substitutes are matched by name. If nameChange is ",MatchSource.WIKI,root/html534/RooAbsArg.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsArg.html
https://root.cern/root/html534/RooAbsArg.html:25239,Integrability,depend,dependents,25239,"on all nodes in the expression tree. Bool_t dependsOn(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Test whether we depend on (ie, are served by) any object in the; specified collection. Uses the dependsOn(RooAbsArg&) member function. Bool_t dependsOn(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Test whether we depend on (ie, are served by) the specified object.; Note that RooAbsArg objects are considered equivalent if they have; the same name. Bool_t overlaps(const RooAbsArg& testArg, Bool_t valueOnly = kFALSE) const; Test if any of the nodes of tree are shared with that of the given tree. Bool_t observableOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Test if any of the dependents of the arg tree (as determined by getObservables); overlaps with those of the testArg. Bool_t observableOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; Test if any of the dependents of the arg tree (as determined by getObservables); overlaps with those of the testArg. void setValueDirty(const RooAbsArg* source) const; Mark this object as having changed its value, and propagate this status; change to all of our clients. If the object is not in automatic dirty; state propagation mode, this call has no effect. void setShapeDirty(const RooAbsArg* source) const; Mark this object as having changed its shape, and propagate this status; change to all of our clients. Bool_t redirectServers(const RooAbsCollection& newServerList, Bool_t mustReplaceAll = kFALSE, Bool_t nameChange = kFALSE, Bool_t isRecursionStep = kFALSE); Substitute our servers with those listed in newSet. If nameChange is false, servers and; and substitutes are matched by name. If nameChange is true, servers are matched to args; in newSet that have the 'ORIGNAME:<servername>' attribute set. If mustReplaceAll is set,; a warning is printed and error status is returned if not all servers could b",MatchSource.WIKI,root/html534/RooAbsArg.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsArg.html
https://root.cern/root/html534/RooAbsArg.html:30137,Integrability,depend,dependent,30137,"es. void attachToTree(TTree& t, Int_t bufSize = 32000); Overloadable function for derived classes to implement; attachment as branch to a TTree. Bool_t isValid() const; WVE (08/21/01) Probably obsolete now. void printName(ostream& os) const; Print object name. void printTitle(ostream& os) const; Print object title. void printClassName(ostream& os) const; Print object class name. void printAddress(ostream& os) const; Print addrss of this RooAbsArg. void printArgs(ostream& os) const; Print object arguments, ie its proxies. Int_t defaultPrintContents(Option_t* opt) const; Define default contents to print. void printMultiline(ostream& os, Int_t contents, Bool_t verbose = kFALSE, TString indent = """") const; Implement multi-line detailed printing. void printTree(ostream& os, TString indent = """") const; Print object tree structure. void printAttribList(ostream& os) const; Print the attribute list. void attachDataSet(const RooAbsData& set); Replace server nodes with names matching the dataset variable names; with those data set variables, making this PDF directly dependent on the dataset. void attachDataStore(const RooAbsDataStore& set); Replace server nodes with names matching the dataset variable names; with those data set variables, making this PDF directly dependent on the dataset. Int_t Compare(const TObject* other) const; Utility function used by TCollection::Sort to compare contained TObjects; We implement comparison by name, resulting in alphabetical sorting by object name. void printDirty(Bool_t depth = kTRUE) const; Print information about current value dirty state information.; If depth flag is true, information is recursively printed for; all nodes in this arg tree. void optimizeCacheMode(const RooArgSet& observables); Activate cache mode optimization with given definition of observables.; The cache operation mode of all objects in the expression tree will; modified such that all nodes that depend directly or indirectly on; any of the listed observables will be ",MatchSource.WIKI,root/html534/RooAbsArg.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsArg.html
https://root.cern/root/html534/RooAbsArg.html:30338,Integrability,depend,dependent,30338,"lete now. void printName(ostream& os) const; Print object name. void printTitle(ostream& os) const; Print object title. void printClassName(ostream& os) const; Print object class name. void printAddress(ostream& os) const; Print addrss of this RooAbsArg. void printArgs(ostream& os) const; Print object arguments, ie its proxies. Int_t defaultPrintContents(Option_t* opt) const; Define default contents to print. void printMultiline(ostream& os, Int_t contents, Bool_t verbose = kFALSE, TString indent = """") const; Implement multi-line detailed printing. void printTree(ostream& os, TString indent = """") const; Print object tree structure. void printAttribList(ostream& os) const; Print the attribute list. void attachDataSet(const RooAbsData& set); Replace server nodes with names matching the dataset variable names; with those data set variables, making this PDF directly dependent on the dataset. void attachDataStore(const RooAbsDataStore& set); Replace server nodes with names matching the dataset variable names; with those data set variables, making this PDF directly dependent on the dataset. Int_t Compare(const TObject* other) const; Utility function used by TCollection::Sort to compare contained TObjects; We implement comparison by name, resulting in alphabetical sorting by object name. void printDirty(Bool_t depth = kTRUE) const; Print information about current value dirty state information.; If depth flag is true, information is recursively printed for; all nodes in this arg tree. void optimizeCacheMode(const RooArgSet& observables); Activate cache mode optimization with given definition of observables.; The cache operation mode of all objects in the expression tree will; modified such that all nodes that depend directly or indirectly on; any of the listed observables will be set to ADirty, as they are; expected to change every time. This save change tracking overhead for; nodes that are a priori known to change every time. void optimizeCacheMode(const RooArgSet& observa",MatchSource.WIKI,root/html534/RooAbsArg.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsArg.html
https://root.cern/root/html534/RooAbsArg.html:30993,Integrability,depend,depend,30993," set); Replace server nodes with names matching the dataset variable names; with those data set variables, making this PDF directly dependent on the dataset. void attachDataStore(const RooAbsDataStore& set); Replace server nodes with names matching the dataset variable names; with those data set variables, making this PDF directly dependent on the dataset. Int_t Compare(const TObject* other) const; Utility function used by TCollection::Sort to compare contained TObjects; We implement comparison by name, resulting in alphabetical sorting by object name. void printDirty(Bool_t depth = kTRUE) const; Print information about current value dirty state information.; If depth flag is true, information is recursively printed for; all nodes in this arg tree. void optimizeCacheMode(const RooArgSet& observables); Activate cache mode optimization with given definition of observables.; The cache operation mode of all objects in the expression tree will; modified such that all nodes that depend directly or indirectly on; any of the listed observables will be set to ADirty, as they are; expected to change every time. This save change tracking overhead for; nodes that are a priori known to change every time. void optimizeCacheMode(const RooArgSet& observables, RooArgSet& optNodes, RooLinkedList& processedNodes); Activate cache mode optimization with given definition of observables.; The cache operation mode of all objects in the expression tree will; modified such that all nodes that depend directly or indirectly on; any of the listed observables will be set to ADirty, as they are; expected to change every time. This save change tracking overhead for; nodes that are a priori known to change every time. Bool_t findConstantNodes(const RooArgSet& observables, RooArgSet& cacheList); Find branch nodes with all-constant parameters, and add them to the list of; nodes that can be cached with a dataset in a test statistic calculation. Bool_t findConstantNodes(const RooArgSet& observables, Roo",MatchSource.WIKI,root/html534/RooAbsArg.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsArg.html
https://root.cern/root/html534/RooAbsArg.html:31497,Integrability,depend,depend,31497,"ame, resulting in alphabetical sorting by object name. void printDirty(Bool_t depth = kTRUE) const; Print information about current value dirty state information.; If depth flag is true, information is recursively printed for; all nodes in this arg tree. void optimizeCacheMode(const RooArgSet& observables); Activate cache mode optimization with given definition of observables.; The cache operation mode of all objects in the expression tree will; modified such that all nodes that depend directly or indirectly on; any of the listed observables will be set to ADirty, as they are; expected to change every time. This save change tracking overhead for; nodes that are a priori known to change every time. void optimizeCacheMode(const RooArgSet& observables, RooArgSet& optNodes, RooLinkedList& processedNodes); Activate cache mode optimization with given definition of observables.; The cache operation mode of all objects in the expression tree will; modified such that all nodes that depend directly or indirectly on; any of the listed observables will be set to ADirty, as they are; expected to change every time. This save change tracking overhead for; nodes that are a priori known to change every time. Bool_t findConstantNodes(const RooArgSet& observables, RooArgSet& cacheList); Find branch nodes with all-constant parameters, and add them to the list of; nodes that can be cached with a dataset in a test statistic calculation. Bool_t findConstantNodes(const RooArgSet& observables, RooArgSet& cacheList, RooLinkedList& processedNodes); Find branch nodes with all-constant parameters, and add them to the list of; nodes that can be cached with a dataset in a test statistic calculation. void constOptimizeTestStatistic(RooAbsArg::ConstOpCode opcode, Bool_t doAlsoTrackingOpt = kTRUE); Interface function signaling a request to perform constant term; optimization. This default implementation takes no action other than to; forward the calls to all servers. void setOperMode(RooAbsArg::OperM",MatchSource.WIKI,root/html534/RooAbsArg.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsArg.html
https://root.cern/root/html534/RooAbsArg.html:32305,Integrability,Interface,Interface,32305,"inkedList& processedNodes); Activate cache mode optimization with given definition of observables.; The cache operation mode of all objects in the expression tree will; modified such that all nodes that depend directly or indirectly on; any of the listed observables will be set to ADirty, as they are; expected to change every time. This save change tracking overhead for; nodes that are a priori known to change every time. Bool_t findConstantNodes(const RooArgSet& observables, RooArgSet& cacheList); Find branch nodes with all-constant parameters, and add them to the list of; nodes that can be cached with a dataset in a test statistic calculation. Bool_t findConstantNodes(const RooArgSet& observables, RooArgSet& cacheList, RooLinkedList& processedNodes); Find branch nodes with all-constant parameters, and add them to the list of; nodes that can be cached with a dataset in a test statistic calculation. void constOptimizeTestStatistic(RooAbsArg::ConstOpCode opcode, Bool_t doAlsoTrackingOpt = kTRUE); Interface function signaling a request to perform constant term; optimization. This default implementation takes no action other than to; forward the calls to all servers. void setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); Change cache operation mode to given mode. If recurseAdirty; is true, then a mode change to AlwaysDirty will automatically; be propagated recursively to all client nodes. void printCompactTree(const char* indent = """", const char* fileName = 0, const char* namePat = 0, RooAbsArg* client = 0); Print tree structure of expression tree on stdout, or to file if filename is specified.; If namePat is not ""*"", only nodes with names matching the pattern will be printed.; The client argument is used in recursive calls to properly display the value or shape nature; of the client-server links. It should be zero in calls initiated by users. void printCompactTree(ostream& os, const char* indent = """", const char* namePat = 0, RooAbsArg* client = 0); ",MatchSource.WIKI,root/html534/RooAbsArg.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsArg.html
https://root.cern/root/html534/RooAbsArg.html:34659,Integrability,interface,interface,34659,"Pat = 0, Int_t nLevel = 999); Print tree structure of expression tree on given ostream, only branch nodes are printed.; Lead nodes (variables) will not be shown. If namePat is not ""*"", only nodes with names matching the pattern will be printed. TString cleanBranchName() const; Construct a mangled name from the actual name that; is free of any math symbols that might be interpreted by TTree. UInt_t crc32(const char* data); Calculate crc32 checksum on given string. UInt_t crc32(const char* data, ULong_t sz, UInt_t crc = 0); update CRC32 with new data. UInt_t fnv1a32(const char* data); calculate 32 bit FNV1A hash of string. UInt_t fnv1a32(const char* data, ULong_t sz, UInt_t hash = fnv1a32start); update 32 bit FNV1A hash. ULong64_t fnv1a64(const char* data); calculate 64 bit FNV1A hash of string. ULong64_t fnv1a64(const char* data, ULong_t sz, ULong64_t hash = fnv1a64start); update 64 bit FNV1A hash. void printCompactTreeHook(ostream& os, const char* ind = """"); Hook function interface for object to insert additional information; when printed in the context of a tree structure. This default; implementation prints nothing. void registerCache(RooAbsCache& cache); Register RooAbsCache with this object. This function is called; by RooAbsCache constructors for objects that are a datamember; of this RooAbsArg. By registering itself the RooAbsArg is aware; of all its cache data members and will forward server change; and cache mode change calls to the cache objects, which in turn; can forward them their contents. void unRegisterCache(RooAbsCache& cache); Unregister a RooAbsCache. Called from the RooAbsCache destructor. Int_t numCaches() const; Return number of registered caches. RooAbsCache* getCache(Int_t index) const; Return registered cache object by index. RooArgSet* getVariables(Bool_t stripDisconnected = kTRUE) const; Return RooArgSet with all variables (tree leaf nodes of expresssion tree). RooLinkedList getCloningAncestors() const; Return ancestors in cloning chain of ",MatchSource.WIKI,root/html534/RooAbsArg.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsArg.html
https://root.cern/root/html534/RooAbsArg.html:38338,Integrability,depend,dependsOnValue,38338," of RooAbsArg-derived; classes that are container classes with references to other members, which may; not yet be 'live' in the first ioStreamer() evolution pass. Classes may overload this function, but must call the base method in the; overloaded call to ensure base evolution is handled properly. void ioStreamerPass2Finalize(); Method called by workspace container to finalize schema evolution issues; that cannot be handled in a single ioStreamer pass. This static finalize method; is called after ioStreamerPass2() is called on each directly listed object; in the workspace. It's purpose is to complete schema evolution of any; objects in the workspace that are not directly listed as content elements; (e.g. analytical convolution tokens ). TObject* clone(const char* newname = 0) const. TObject* Clone(const char* newname = 0) const. Bool_t isDerived() const; Accessors to client-server relation information. Bool_t dependsOnValue(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0) const; Does this arg depend on the value of any of of the values in serverList?. Bool_t dependsOnValue(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0) const; Does this arg depend on the value of server?. Bool_t hasClients() const; { return _clientList.GetSize()>0 ? kTRUE : kFALSE ; }. TIterator* clientIterator() const; Return iterator over all client RooAbsArgs. TIterator* valueClientIterator() const; Return iterator over all value client RooAbsArgs. TIterator* shapeClientIterator() const; Return iterator over all shape client RooAbsArgs. TIterator* serverIterator() const; Return iterator over all server RooAbsArgs. RooFIter valueClientMIterator() const; { return _clientListValue.fwdIterator() ; }. RooFIter shapeClientMIterator() const; { return _clientListShape.fwdIterator() ; }. RooFIter serverMIterator() const; { return _serverList.fwdIterator() ; }. RooAbsArg* findServer(const char* name) const; Return server of this arg with given name. Returns null if not found. Roo",MatchSource.WIKI,root/html534/RooAbsArg.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsArg.html
https://root.cern/root/html534/RooAbsArg.html:38442,Integrability,depend,depend,38442," of RooAbsArg-derived; classes that are container classes with references to other members, which may; not yet be 'live' in the first ioStreamer() evolution pass. Classes may overload this function, but must call the base method in the; overloaded call to ensure base evolution is handled properly. void ioStreamerPass2Finalize(); Method called by workspace container to finalize schema evolution issues; that cannot be handled in a single ioStreamer pass. This static finalize method; is called after ioStreamerPass2() is called on each directly listed object; in the workspace. It's purpose is to complete schema evolution of any; objects in the workspace that are not directly listed as content elements; (e.g. analytical convolution tokens ). TObject* clone(const char* newname = 0) const. TObject* Clone(const char* newname = 0) const. Bool_t isDerived() const; Accessors to client-server relation information. Bool_t dependsOnValue(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0) const; Does this arg depend on the value of any of of the values in serverList?. Bool_t dependsOnValue(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0) const; Does this arg depend on the value of server?. Bool_t hasClients() const; { return _clientList.GetSize()>0 ? kTRUE : kFALSE ; }. TIterator* clientIterator() const; Return iterator over all client RooAbsArgs. TIterator* valueClientIterator() const; Return iterator over all value client RooAbsArgs. TIterator* shapeClientIterator() const; Return iterator over all shape client RooAbsArgs. TIterator* serverIterator() const; Return iterator over all server RooAbsArgs. RooFIter valueClientMIterator() const; { return _clientListValue.fwdIterator() ; }. RooFIter shapeClientMIterator() const; { return _clientListShape.fwdIterator() ; }. RooFIter serverMIterator() const; { return _serverList.fwdIterator() ; }. RooAbsArg* findServer(const char* name) const; Return server of this arg with given name. Returns null if not found. Roo",MatchSource.WIKI,root/html534/RooAbsArg.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsArg.html
https://root.cern/root/html534/RooAbsArg.html:38509,Integrability,depend,dependsOnValue,38509,"tion pass. Classes may overload this function, but must call the base method in the; overloaded call to ensure base evolution is handled properly. void ioStreamerPass2Finalize(); Method called by workspace container to finalize schema evolution issues; that cannot be handled in a single ioStreamer pass. This static finalize method; is called after ioStreamerPass2() is called on each directly listed object; in the workspace. It's purpose is to complete schema evolution of any; objects in the workspace that are not directly listed as content elements; (e.g. analytical convolution tokens ). TObject* clone(const char* newname = 0) const. TObject* Clone(const char* newname = 0) const. Bool_t isDerived() const; Accessors to client-server relation information. Bool_t dependsOnValue(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0) const; Does this arg depend on the value of any of of the values in serverList?. Bool_t dependsOnValue(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0) const; Does this arg depend on the value of server?. Bool_t hasClients() const; { return _clientList.GetSize()>0 ? kTRUE : kFALSE ; }. TIterator* clientIterator() const; Return iterator over all client RooAbsArgs. TIterator* valueClientIterator() const; Return iterator over all value client RooAbsArgs. TIterator* shapeClientIterator() const; Return iterator over all shape client RooAbsArgs. TIterator* serverIterator() const; Return iterator over all server RooAbsArgs. RooFIter valueClientMIterator() const; { return _clientListValue.fwdIterator() ; }. RooFIter shapeClientMIterator() const; { return _clientListShape.fwdIterator() ; }. RooFIter serverMIterator() const; { return _serverList.fwdIterator() ; }. RooAbsArg* findServer(const char* name) const; Return server of this arg with given name. Returns null if not found. RooAbsArg* findServer(const RooAbsArg& arg) const; Return server of this arg with name of given input arg. Returns null if not found. RooAbsArg* findServe",MatchSource.WIKI,root/html534/RooAbsArg.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsArg.html
https://root.cern/root/html534/RooAbsArg.html:38602,Integrability,depend,depend,38602,"tion pass. Classes may overload this function, but must call the base method in the; overloaded call to ensure base evolution is handled properly. void ioStreamerPass2Finalize(); Method called by workspace container to finalize schema evolution issues; that cannot be handled in a single ioStreamer pass. This static finalize method; is called after ioStreamerPass2() is called on each directly listed object; in the workspace. It's purpose is to complete schema evolution of any; objects in the workspace that are not directly listed as content elements; (e.g. analytical convolution tokens ). TObject* clone(const char* newname = 0) const. TObject* Clone(const char* newname = 0) const. Bool_t isDerived() const; Accessors to client-server relation information. Bool_t dependsOnValue(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0) const; Does this arg depend on the value of any of of the values in serverList?. Bool_t dependsOnValue(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0) const; Does this arg depend on the value of server?. Bool_t hasClients() const; { return _clientList.GetSize()>0 ? kTRUE : kFALSE ; }. TIterator* clientIterator() const; Return iterator over all client RooAbsArgs. TIterator* valueClientIterator() const; Return iterator over all value client RooAbsArgs. TIterator* shapeClientIterator() const; Return iterator over all shape client RooAbsArgs. TIterator* serverIterator() const; Return iterator over all server RooAbsArgs. RooFIter valueClientMIterator() const; { return _clientListValue.fwdIterator() ; }. RooFIter shapeClientMIterator() const; { return _clientListShape.fwdIterator() ; }. RooFIter serverMIterator() const; { return _serverList.fwdIterator() ; }. RooAbsArg* findServer(const char* name) const; Return server of this arg with given name. Returns null if not found. RooAbsArg* findServer(const RooAbsArg& arg) const; Return server of this arg with name of given input arg. Returns null if not found. RooAbsArg* findServe",MatchSource.WIKI,root/html534/RooAbsArg.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsArg.html
https://root.cern/root/html534/RooAbsArg.html:40759,Integrability,integrat,integrated,40759,"; If true, arg is a value server of self. Bool_t isValueServer(const char* name) const; If true, we have a server with given name. Bool_t isShapeServer(const RooAbsArg& arg) const; If true arg is a shape server of self. Bool_t isShapeServer(const char* name) const; If true, we have a shape server with given name. Bool_t isFundamental() const; Is this object a fundamental type that can be added to a dataset?; Fundamental-type subclasses override this method to return kTRUE.; Note that this test is subtlely different from the dynamic isDerived(); test, e.g. a constant is not derived but is also not fundamental. RooAbsArg * createFundamental(const char* newname = 0) const; Create a fundamental-type object that stores our type of value. The; created object will have a valid value, but not necessarily the same; as our value. The caller is responsible for deleting the returned object. Bool_t isLValue() const; Is this argument an l-value, ie, can it appear on the left-hand side; of an assignment expression? LValues are also special since they can; potentially be analytically integrated and generated. RooArgSet* getParameters(const RooAbsData* data, Bool_t stripDisconnected = kTRUE) const. RooArgSet* getParameters(const RooAbsData& data, Bool_t stripDisconnected = kTRUE) const; Return the parameters of this p.d.f when used in conjuction with dataset 'data'. RooArgSet* getObservables(const RooArgSet& set, Bool_t valueOnly = kTRUE) const; Return the observables of _this_ pdf given a set of observables. return getObservables(&set,valueOnly). RooArgSet* getDependents(const RooArgSet& set) const; --- Obsolete functions for backward compatibility. { return getObservables(set) ; }. RooArgSet* getDependents(const RooAbsData* set) const; { return getObservables(set) ; }. RooArgSet* getDependents(const RooArgSet* depList) const; { return getObservables(depList) ; }. Bool_t dependentOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; { return observableOverlaps(dset,testA",MatchSource.WIKI,root/html534/RooAbsArg.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsArg.html
https://root.cern/root/html534/RooAbsArg.html:41562,Integrability,depend,dependentOverlaps,41562,", ie, can it appear on the left-hand side; of an assignment expression? LValues are also special since they can; potentially be analytically integrated and generated. RooArgSet* getParameters(const RooAbsData* data, Bool_t stripDisconnected = kTRUE) const. RooArgSet* getParameters(const RooAbsData& data, Bool_t stripDisconnected = kTRUE) const; Return the parameters of this p.d.f when used in conjuction with dataset 'data'. RooArgSet* getObservables(const RooArgSet& set, Bool_t valueOnly = kTRUE) const; Return the observables of _this_ pdf given a set of observables. return getObservables(&set,valueOnly). RooArgSet* getDependents(const RooArgSet& set) const; --- Obsolete functions for backward compatibility. { return getObservables(set) ; }. RooArgSet* getDependents(const RooAbsData* set) const; { return getObservables(set) ; }. RooArgSet* getDependents(const RooArgSet* depList) const; { return getObservables(depList) ; }. Bool_t dependentOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; { return observableOverlaps(dset,testArg) ; }. Bool_t dependentOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; { return observableOverlaps(depList, testArg) ; }. Bool_t checkDependents(const RooArgSet* nset) const; { return checkObservables(nset) ; }. Bool_t recursiveCheckDependents(const RooArgSet* nset) const; --- End obsolete functions for backward compatibility. { return recursiveCheckObservables(nset) ; }. Bool_t readFromStream(istream& is, Bool_t compact, Bool_t verbose = kFALSE); I/O streaming interface (machine readable). void writeToStream(ostream& os, Bool_t compact) const. void Print(Option_t* options = 0) const; Printing interface (human readable). void printMetaArgs(ostream& ) const; {}. const std::set<std::string>& attributes() const; Returns set of names of boolean attributes defined. const std::map<std::string,std::string>& stringAttributes() const; Returns std::map<string,string> with all string attributes defined. const std::set<s",MatchSource.WIKI,root/html534/RooAbsArg.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsArg.html
https://root.cern/root/html534/RooAbsArg.html:41691,Integrability,depend,dependentOverlaps,41691,"ytically integrated and generated. RooArgSet* getParameters(const RooAbsData* data, Bool_t stripDisconnected = kTRUE) const. RooArgSet* getParameters(const RooAbsData& data, Bool_t stripDisconnected = kTRUE) const; Return the parameters of this p.d.f when used in conjuction with dataset 'data'. RooArgSet* getObservables(const RooArgSet& set, Bool_t valueOnly = kTRUE) const; Return the observables of _this_ pdf given a set of observables. return getObservables(&set,valueOnly). RooArgSet* getDependents(const RooArgSet& set) const; --- Obsolete functions for backward compatibility. { return getObservables(set) ; }. RooArgSet* getDependents(const RooAbsData* set) const; { return getObservables(set) ; }. RooArgSet* getDependents(const RooArgSet* depList) const; { return getObservables(depList) ; }. Bool_t dependentOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; { return observableOverlaps(dset,testArg) ; }. Bool_t dependentOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; { return observableOverlaps(depList, testArg) ; }. Bool_t checkDependents(const RooArgSet* nset) const; { return checkObservables(nset) ; }. Bool_t recursiveCheckDependents(const RooArgSet* nset) const; --- End obsolete functions for backward compatibility. { return recursiveCheckObservables(nset) ; }. Bool_t readFromStream(istream& is, Bool_t compact, Bool_t verbose = kFALSE); I/O streaming interface (machine readable). void writeToStream(ostream& os, Bool_t compact) const. void Print(Option_t* options = 0) const; Printing interface (human readable). void printMetaArgs(ostream& ) const; {}. const std::set<std::string>& attributes() const; Returns set of names of boolean attributes defined. const std::map<std::string,std::string>& stringAttributes() const; Returns std::map<string,string> with all string attributes defined. const std::set<std::string>& transientAttributes() const; Return set of transient boolean attributes. Bool_t isConstant() const; Returns true if 'Co",MatchSource.WIKI,root/html534/RooAbsArg.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsArg.html
https://root.cern/root/html534/RooAbsArg.html:42163,Integrability,interface,interface,42163,"rn the observables of _this_ pdf given a set of observables. return getObservables(&set,valueOnly). RooArgSet* getDependents(const RooArgSet& set) const; --- Obsolete functions for backward compatibility. { return getObservables(set) ; }. RooArgSet* getDependents(const RooAbsData* set) const; { return getObservables(set) ; }. RooArgSet* getDependents(const RooArgSet* depList) const; { return getObservables(depList) ; }. Bool_t dependentOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; { return observableOverlaps(dset,testArg) ; }. Bool_t dependentOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; { return observableOverlaps(depList, testArg) ; }. Bool_t checkDependents(const RooArgSet* nset) const; { return checkObservables(nset) ; }. Bool_t recursiveCheckDependents(const RooArgSet* nset) const; --- End obsolete functions for backward compatibility. { return recursiveCheckObservables(nset) ; }. Bool_t readFromStream(istream& is, Bool_t compact, Bool_t verbose = kFALSE); I/O streaming interface (machine readable). void writeToStream(ostream& os, Bool_t compact) const. void Print(Option_t* options = 0) const; Printing interface (human readable). void printMetaArgs(ostream& ) const; {}. const std::set<std::string>& attributes() const; Returns set of names of boolean attributes defined. const std::map<std::string,std::string>& stringAttributes() const; Returns std::map<string,string> with all string attributes defined. const std::set<std::string>& transientAttributes() const; Return set of transient boolean attributes. Bool_t isConstant() const; Returns true if 'Constant' attribute is set. Bool_t IsSortable() const; Object is sortable in ROOT container class. Bool_t operator==(const RooAbsArg& other). Bool_t isIdentical(const RooAbsArg& other, Bool_t assumeSameType = kFALSE). Bool_t inRange(const char* ) const; Range management. Bool_t hasRange(const char* ) const; Has this argument a defined range (dummy interface always returns flase). ",MatchSource.WIKI,root/html534/RooAbsArg.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsArg.html
https://root.cern/root/html534/RooAbsArg.html:42298,Integrability,interface,interface,42298,"-- Obsolete functions for backward compatibility. { return getObservables(set) ; }. RooArgSet* getDependents(const RooAbsData* set) const; { return getObservables(set) ; }. RooArgSet* getDependents(const RooArgSet* depList) const; { return getObservables(depList) ; }. Bool_t dependentOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; { return observableOverlaps(dset,testArg) ; }. Bool_t dependentOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; { return observableOverlaps(depList, testArg) ; }. Bool_t checkDependents(const RooArgSet* nset) const; { return checkObservables(nset) ; }. Bool_t recursiveCheckDependents(const RooArgSet* nset) const; --- End obsolete functions for backward compatibility. { return recursiveCheckObservables(nset) ; }. Bool_t readFromStream(istream& is, Bool_t compact, Bool_t verbose = kFALSE); I/O streaming interface (machine readable). void writeToStream(ostream& os, Bool_t compact) const. void Print(Option_t* options = 0) const; Printing interface (human readable). void printMetaArgs(ostream& ) const; {}. const std::set<std::string>& attributes() const; Returns set of names of boolean attributes defined. const std::map<std::string,std::string>& stringAttributes() const; Returns std::map<string,string> with all string attributes defined. const std::set<std::string>& transientAttributes() const; Return set of transient boolean attributes. Bool_t isConstant() const; Returns true if 'Constant' attribute is set. Bool_t IsSortable() const; Object is sortable in ROOT container class. Bool_t operator==(const RooAbsArg& other). Bool_t isIdentical(const RooAbsArg& other, Bool_t assumeSameType = kFALSE). Bool_t inRange(const char* ) const; Range management. Bool_t hasRange(const char* ) const; Has this argument a defined range (dummy interface always returns flase). CacheMode canNodeBeCached() const; { return Always ; }. void setCacheAndTrackHints(RooArgSet& ); {}. Bool_t isShapeDirty() const; Dirty state accessor. Bo",MatchSource.WIKI,root/html534/RooAbsArg.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsArg.html
https://root.cern/root/html534/RooAbsArg.html:43099,Integrability,interface,interface,43099,"l_t readFromStream(istream& is, Bool_t compact, Bool_t verbose = kFALSE); I/O streaming interface (machine readable). void writeToStream(ostream& os, Bool_t compact) const. void Print(Option_t* options = 0) const; Printing interface (human readable). void printMetaArgs(ostream& ) const; {}. const std::set<std::string>& attributes() const; Returns set of names of boolean attributes defined. const std::map<std::string,std::string>& stringAttributes() const; Returns std::map<string,string> with all string attributes defined. const std::set<std::string>& transientAttributes() const; Return set of transient boolean attributes. Bool_t isConstant() const; Returns true if 'Constant' attribute is set. Bool_t IsSortable() const; Object is sortable in ROOT container class. Bool_t operator==(const RooAbsArg& other). Bool_t isIdentical(const RooAbsArg& other, Bool_t assumeSameType = kFALSE). Bool_t inRange(const char* ) const; Range management. Bool_t hasRange(const char* ) const; Has this argument a defined range (dummy interface always returns flase). CacheMode canNodeBeCached() const; { return Always ; }. void setCacheAndTrackHints(RooArgSet& ); {}. Bool_t isShapeDirty() const; Dirty state accessor. Bool_t isValueDirty() const; Returns true of value has been invalidated by server value change. Bool_t isValueDirtyAndClear() const; Returns true of value has been invalidated by server value change. Bool_t isValueOrShapeDirtyAndClear() const; Returns true of value has been invalidated by server value change. OperMode operMode() const; { return _operMode ; }. const RooArgSet* ownedComponents() const; { return _ownedComponents ; }. void setProhibitServerRedirect(Bool_t flag); { _prohibitServerRedirect = flag ; }. void operModeHook(); friend class RooSimCloneTool ;. {}. void optimizeDirtyHook(const RooArgSet* ); {}. void getParametersHook(const RooArgSet* , RooArgSet* , Bool_t ) const; {}. void getObservablesHook(const RooArgSet* , RooArgSet* ) const; {}. void setValueDirty() const; ",MatchSource.WIKI,root/html534/RooAbsArg.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsArg.html
https://root.cern/root/html534/RooAbsArg.html:7591,Modifiability,Inherit,InheritsFrom,7591,"= kTRUE) const; RooArgSet*getParameters(const RooArgSet& set, Bool_t stripDisconnected = kTRUE) const; virtual RooArgSet*getParameters(const RooArgSet* depList, Bool_t stripDisconnected = kTRUE) const; const Text_t*getStringAttribute(const Text_t* key) const; virtual const char*TNamed::GetTitle() const; Bool_tgetTransientAttribute(const Text_t* name) const; virtual UInt_tTObject::GetUniqueID() const; RooArgSet*getVariables(Bool_t stripDisconnected = kTRUE) const; voidgraphVizTree(const char* fileName, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); voidgraphVizTree(ostream& os, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_thasClients() const; virtual ULong_tTNamed::Hash() const; virtual Bool_thasRange(const char*) const; virtual Bool_timportWorkspaceHook(RooWorkspace&); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual Bool_tinRange(const char*) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual voidioStreamerPass2(); static voidioStreamerPass2Finalize(); virtual TClass*IsA() const; Bool_tisCloneOf(const RooAbsArg& other) const; Bool_tisConstant() const; virtual Bool_tisDerived() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tisFundamental() const; virtual Bool_tisIdentical(const RooAbsArg& other, Bool_t assumeSameType = kFALSE); virtual Bool_tisLValue() const; Bool_tTObject::IsOnHeap() const; Bool_tisShapeDirty() const; Bool_tisShapeServer(const RooAbsArg& arg) const; Bool_tisShapeServer(const char* name) const; virtual Bool_tIsSortable() const; Bool_tisValueDirty() const; Bool_tisValueDirtyAndClear() const; Bool_tisValueOrShapeDirtyAndClear() const; Bool_tisValueServer(const RooAbsAr",MatchSource.WIKI,root/html534/RooAbsArg.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsArg.html
https://root.cern/root/html534/RooAbsArg.html:7657,Modifiability,Inherit,InheritsFrom,7657,"_t stripDisconnected = kTRUE) const; virtual RooArgSet*getParameters(const RooArgSet* depList, Bool_t stripDisconnected = kTRUE) const; const Text_t*getStringAttribute(const Text_t* key) const; virtual const char*TNamed::GetTitle() const; Bool_tgetTransientAttribute(const Text_t* name) const; virtual UInt_tTObject::GetUniqueID() const; RooArgSet*getVariables(Bool_t stripDisconnected = kTRUE) const; voidgraphVizTree(const char* fileName, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); voidgraphVizTree(ostream& os, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_thasClients() const; virtual ULong_tTNamed::Hash() const; virtual Bool_thasRange(const char*) const; virtual Bool_timportWorkspaceHook(RooWorkspace&); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual Bool_tinRange(const char*) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual voidioStreamerPass2(); static voidioStreamerPass2Finalize(); virtual TClass*IsA() const; Bool_tisCloneOf(const RooAbsArg& other) const; Bool_tisConstant() const; virtual Bool_tisDerived() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tisFundamental() const; virtual Bool_tisIdentical(const RooAbsArg& other, Bool_t assumeSameType = kFALSE); virtual Bool_tisLValue() const; Bool_tTObject::IsOnHeap() const; Bool_tisShapeDirty() const; Bool_tisShapeServer(const RooAbsArg& arg) const; Bool_tisShapeServer(const char* name) const; virtual Bool_tIsSortable() const; Bool_tisValueDirty() const; Bool_tisValueDirtyAndClear() const; Bool_tisValueOrShapeDirtyAndClear() const; Bool_tisValueServer(const RooAbsArg& arg) const; Bool_tisValueServer(const char* name) const; Bool_t",MatchSource.WIKI,root/html534/RooAbsArg.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsArg.html
https://root.cern/root/html534/RooAbsArg.html:16381,Modifiability,Config,ConfigChange,16381,"voidTObject::MakeZombie(); Int_tnumProxies() const; virtual voidoperModeHook(); virtual voidoptimizeDirtyHook(const RooArgSet*); voidprintAttribList(ostream& os) const; voidregisterProxy(RooArgProxy& proxy); voidregisterProxy(RooSetProxy& proxy); voidregisterProxy(RooListProxy& proxy); voidsetProxyNormSet(const RooArgSet* nset); voidsetShapeDirty(const RooAbsArg* source) const; virtual voidsetTreeBranchStatus(TTree& t, Bool_t active); voidsetValueDirty(const RooAbsArg* source) const; virtual voidsyncCache(const RooArgSet* nset = 0); voidunRegisterProxy(RooArgProxy& proxy); voidunRegisterProxy(RooSetProxy& proxy); voidunRegisterProxy(RooListProxy& proxy). Data Members; public:. enum ConstOpCode { Activate; DeActivate; ConfigChange; ValueChange; };; enum CacheMode { Always; NotAdvised; Never; };; enum OperMode { Auto; AClean; ADirty; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };; enum RooPrintable::ContentsOption { kName; kClassName; kValue; kArgs; kExtras; kAddress; kTitle; kCollectionHeader; };; enum RooPrintable::StyleOption { kInline; kSingleLine; kStandard; kVerbose; kTreeStructure; };. public:. static map<RooAbsArg*,TRefArray*>_ioEvoListtemporary holding list for proxies needed in schema evolution ; static stack<RooAbsArg*>_ioReadStackreading stack ; static const UInt_tfnv1a32start; static const ULong64_tfnv1a64start. protected:. set<std::string>_boolAttribBoolean attributes; set<std::string>_boolAttribTransient! Transient boolean attributes (not copied in ctor); deque<RooAbsCache*>_cacheListlist of caches; RooRefCountList_clientListlist of client objects; RooRefCountList_clientListShapesubset of clients that requested shape dirty flag propagation; RooRefCountList_clientListValuesubset of clients that requested value dirty flag propagation; TIterator*_clien",MatchSource.WIKI,root/html534/RooAbsArg.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsArg.html
https://root.cern/root/html534/RooAbsArg.html:19009,Modifiability,Inherit,Inheritance,19009,"inhibit of dirty state propagation; Bool_t_isConstant! Cached isConstant status ; Bool_t_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; static Int_tRooPrintable::_nameLength; TNamed*_namePtr! Do not persist. Pointer to global instance of string that matches object named; RooAbsArg::OperMode_operModeDirty state propagation mode; RooArgSet*_ownedComponents! Set of owned component; Bool_t_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArray_proxyListlist of proxies; RooRefCountList_serverListlist of server objects; Bool_t_shapeDirtyFlag set if value needs recalculating because input shapes modified; map<std::string,std::string>_stringAttribString attributes; Bool_t_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_t_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Bool_t inhibitDirty() const; { return _inhibitDirty && !_localNoInhibitDirty; }. ~RooAbsArg(); Destructor. void setDirtyInhibit(Bool_t flag); Control global dirty inhibit mode. When set to true no value or shape dirty; flags are propagated and cache is always considered to be dirty. void verboseDirty(Bool_t flag); Activate verbose messaging related to dirty flag propagation. Bool_t isCloneOf(const RooAbsArg& other) const; Check if this object was created as a clone of 'other'. void setAttribute(const Text_t* name, Bool_t value = kTRUE); Set (default) or clear a named boolean attribute of this object. Bool_t getAttribute(const Text_t* name) const; Check if a named attribute is set. By default, all attributes are unset. void setStringAttribute(const Text_t* key, const Text_t* value); Associate string 'value' to this object under key 'key'. const Text_t* getStringAttribute(const Text_t* key) const; Get string attribute mapped under key 'k",MatchSource.WIKI,root/html534/RooAbsArg.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsArg.html
https://root.cern/root/html534/RooAbsArg.html:19022,Modifiability,Inherit,Inherited,19022,"inhibit of dirty state propagation; Bool_t_isConstant! Cached isConstant status ; Bool_t_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; static Int_tRooPrintable::_nameLength; TNamed*_namePtr! Do not persist. Pointer to global instance of string that matches object named; RooAbsArg::OperMode_operModeDirty state propagation mode; RooArgSet*_ownedComponents! Set of owned component; Bool_t_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArray_proxyListlist of proxies; RooRefCountList_serverListlist of server objects; Bool_t_shapeDirtyFlag set if value needs recalculating because input shapes modified; map<std::string,std::string>_stringAttribString attributes; Bool_t_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_t_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Bool_t inhibitDirty() const; { return _inhibitDirty && !_localNoInhibitDirty; }. ~RooAbsArg(); Destructor. void setDirtyInhibit(Bool_t flag); Control global dirty inhibit mode. When set to true no value or shape dirty; flags are propagated and cache is always considered to be dirty. void verboseDirty(Bool_t flag); Activate verbose messaging related to dirty flag propagation. Bool_t isCloneOf(const RooAbsArg& other) const; Check if this object was created as a clone of 'other'. void setAttribute(const Text_t* name, Bool_t value = kTRUE); Set (default) or clear a named boolean attribute of this object. Bool_t getAttribute(const Text_t* name) const; Check if a named attribute is set. By default, all attributes are unset. void setStringAttribute(const Text_t* key, const Text_t* value); Associate string 'value' to this object under key 'key'. const Text_t* getStringAttribute(const Text_t* key) const; Get string attribute mapped under key 'k",MatchSource.WIKI,root/html534/RooAbsArg.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsArg.html
https://root.cern/root/html534/RooAbsArg.html:22330,Modifiability,variab,variable,22330,"agation mask for specified server. void leafNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t recurseNonDerived = kFALSE) const; Fill supplied list with all leaf nodes of the arg tree, starting with; ourself as top node. A leaf node is node that has no servers declared. void branchNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t recurseNonDerived = kFALSE) const; Fill supplied list with all branch nodes of the arg tree starting with; ourself as top node. A branch node is node that has one or more servers declared. void treeNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t doBranch = kTRUE, Bool_t doLeaf = kTRUE, Bool_t valueOnly = kFALSE, Bool_t recurseNonDerived = kFALSE) const; Fill supplied list with nodes of the arg tree, following all server links,; starting with ourself as top node. RooArgSet* getParameters(const RooAbsData* data, Bool_t stripDisconnected = kTRUE) const; Create a list of leaf nodes in the arg tree starting with; ourself as top node that don't match any of the names of the variable list; of the supplied data set (the dependents). The caller of this; function is responsible for deleting the returned argset.; The complement of this function is getObservables(). void addParameters(RooArgSet& params, const RooArgSet* nset = 0, Bool_t stripDisconnected = kTRUE) const; INTERNAL helper function for getParameters(). RooArgSet* getParameters(const RooArgSet* depList, Bool_t stripDisconnected = kTRUE) const; Create a list of leaf nodes in the arg tree starting with; ourself as top node that don't match any of the names the args in the; supplied argset. The caller of this function is responsible; for deleting the returned argset. The complement of this function; is getObservables(). RooArgSet* getObservables(const RooAbsData* data) const; Create a list of leaf nodes in the arg tree starting with; ourself as top node that match any of the names of the variable list; of the supplied data set",MatchSource.WIKI,root/html534/RooAbsArg.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsArg.html
https://root.cern/root/html534/RooAbsArg.html:23214,Modifiability,variab,variable,23214,"sData* data, Bool_t stripDisconnected = kTRUE) const; Create a list of leaf nodes in the arg tree starting with; ourself as top node that don't match any of the names of the variable list; of the supplied data set (the dependents). The caller of this; function is responsible for deleting the returned argset.; The complement of this function is getObservables(). void addParameters(RooArgSet& params, const RooArgSet* nset = 0, Bool_t stripDisconnected = kTRUE) const; INTERNAL helper function for getParameters(). RooArgSet* getParameters(const RooArgSet* depList, Bool_t stripDisconnected = kTRUE) const; Create a list of leaf nodes in the arg tree starting with; ourself as top node that don't match any of the names the args in the; supplied argset. The caller of this function is responsible; for deleting the returned argset. The complement of this function; is getObservables(). RooArgSet* getObservables(const RooAbsData* data) const; Create a list of leaf nodes in the arg tree starting with; ourself as top node that match any of the names of the variable list; of the supplied data set (the dependents). The caller of this; function is responsible for deleting the returned argset.; The complement of this function is getObservables(). RooArgSet* getObservables(const RooArgSet* depList, Bool_t valueOnly = kTRUE) const; Create a list of leaf nodes in the arg tree starting with; ourself as top node that match any of the names the args in the; supplied argset. The caller of this function is responsible; for deleting the returned argset. The complement of this function; is getObservables(). RooArgSet* getComponents() const; Return a RooArgSet with all component (branch nodes) of the; expression tree headed by this object. Bool_t checkObservables(const RooArgSet* nset) const; Overloadable function in which derived classes can implement; consistency checks of the variables. If this function returns; true, indicating an error, the fitter or generator will abort. Bool_t recursiveChe",MatchSource.WIKI,root/html534/RooAbsArg.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsArg.html
https://root.cern/root/html534/RooAbsArg.html:24038,Modifiability,variab,variables,24038," returned argset. The complement of this function; is getObservables(). RooArgSet* getObservables(const RooAbsData* data) const; Create a list of leaf nodes in the arg tree starting with; ourself as top node that match any of the names of the variable list; of the supplied data set (the dependents). The caller of this; function is responsible for deleting the returned argset.; The complement of this function is getObservables(). RooArgSet* getObservables(const RooArgSet* depList, Bool_t valueOnly = kTRUE) const; Create a list of leaf nodes in the arg tree starting with; ourself as top node that match any of the names the args in the; supplied argset. The caller of this function is responsible; for deleting the returned argset. The complement of this function; is getObservables(). RooArgSet* getComponents() const; Return a RooArgSet with all component (branch nodes) of the; expression tree headed by this object. Bool_t checkObservables(const RooArgSet* nset) const; Overloadable function in which derived classes can implement; consistency checks of the variables. If this function returns; true, indicating an error, the fitter or generator will abort. Bool_t recursiveCheckObservables(const RooArgSet* nset) const; Recursively call checkObservables on all nodes in the expression tree. Bool_t dependsOn(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Test whether we depend on (ie, are served by) any object in the; specified collection. Uses the dependsOn(RooAbsArg&) member function. Bool_t dependsOn(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Test whether we depend on (ie, are served by) the specified object.; Note that RooAbsArg objects are considered equivalent if they have; the same name. Bool_t overlaps(const RooAbsArg& testArg, Bool_t valueOnly = kFALSE) const; Test if any of the nodes of tree are shared with that of the given tree. Bool_t observableOverlaps(const RooAb",MatchSource.WIKI,root/html534/RooAbsArg.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/root/html534/RooAbsArg.html
